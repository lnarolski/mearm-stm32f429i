
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001d1f0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004298  0801d3a0  0801d3a0  0002d3a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000ab6  08021638  08021638  00031638  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000048  080220f0  080220f0  000320f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000000ac  08022138  08022138  00032138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00042988  080221e4  080221e4  000321e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08064b6c  08064b6c  00080170  2**0
                  CONTENTS
  8 .ARM          00000008  08064b6c  08064b6c  00074b6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08064b74  08064b74  00080170  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  08064b74  08064b74  00074b74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   0000000c  08064b8c  08064b8c  00074b8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000170  20000000  08064b98  00080000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00012b44  20000170  08064d08  00080170  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20012cb4  08064d08  00082cb4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00080170  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00090000  2**2
                  ALLOC
 17 .debug_line   000364bc  00000000  00000000  000801a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_info   000c0806  00000000  00000000  000b665c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 00014715  00000000  00000000  00176e62  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00002c20  00000000  00000000  0018b578  2**3
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    00111202  00000000  00000000  0018e198  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 00003fd0  00000000  00000000  0029f3a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_loc    0001e404  00000000  00000000  002a3370  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  00031264  00000000  00000000  002c1774  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000fa  00000000  00000000  002f29d8  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000816c  00000000  00000000  002f2ad4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801d388 	.word	0x0801d388

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0801d388 	.word	0x0801d388

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__aeabi_d2iz>:
 8000a2c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a30:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a34:	d215      	bcs.n	8000a62 <__aeabi_d2iz+0x36>
 8000a36:	d511      	bpl.n	8000a5c <__aeabi_d2iz+0x30>
 8000a38:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a3c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a40:	d912      	bls.n	8000a68 <__aeabi_d2iz+0x3c>
 8000a42:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a46:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a4a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a4e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a52:	fa23 f002 	lsr.w	r0, r3, r2
 8000a56:	bf18      	it	ne
 8000a58:	4240      	negne	r0, r0
 8000a5a:	4770      	bx	lr
 8000a5c:	f04f 0000 	mov.w	r0, #0
 8000a60:	4770      	bx	lr
 8000a62:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a66:	d105      	bne.n	8000a74 <__aeabi_d2iz+0x48>
 8000a68:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a6c:	bf08      	it	eq
 8000a6e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a72:	4770      	bx	lr
 8000a74:	f04f 0000 	mov.w	r0, #0
 8000a78:	4770      	bx	lr
 8000a7a:	bf00      	nop

08000a7c <__aeabi_uldivmod>:
 8000a7c:	b953      	cbnz	r3, 8000a94 <__aeabi_uldivmod+0x18>
 8000a7e:	b94a      	cbnz	r2, 8000a94 <__aeabi_uldivmod+0x18>
 8000a80:	2900      	cmp	r1, #0
 8000a82:	bf08      	it	eq
 8000a84:	2800      	cmpeq	r0, #0
 8000a86:	bf1c      	itt	ne
 8000a88:	f04f 31ff 	movne.w	r1, #4294967295
 8000a8c:	f04f 30ff 	movne.w	r0, #4294967295
 8000a90:	f000 b972 	b.w	8000d78 <__aeabi_idiv0>
 8000a94:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a98:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000a9c:	f000 f806 	bl	8000aac <__udivmoddi4>
 8000aa0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000aa4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000aa8:	b004      	add	sp, #16
 8000aaa:	4770      	bx	lr

08000aac <__udivmoddi4>:
 8000aac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ab0:	9e08      	ldr	r6, [sp, #32]
 8000ab2:	4604      	mov	r4, r0
 8000ab4:	4688      	mov	r8, r1
 8000ab6:	2b00      	cmp	r3, #0
 8000ab8:	d14b      	bne.n	8000b52 <__udivmoddi4+0xa6>
 8000aba:	428a      	cmp	r2, r1
 8000abc:	4615      	mov	r5, r2
 8000abe:	d967      	bls.n	8000b90 <__udivmoddi4+0xe4>
 8000ac0:	fab2 f282 	clz	r2, r2
 8000ac4:	b14a      	cbz	r2, 8000ada <__udivmoddi4+0x2e>
 8000ac6:	f1c2 0720 	rsb	r7, r2, #32
 8000aca:	fa01 f302 	lsl.w	r3, r1, r2
 8000ace:	fa20 f707 	lsr.w	r7, r0, r7
 8000ad2:	4095      	lsls	r5, r2
 8000ad4:	ea47 0803 	orr.w	r8, r7, r3
 8000ad8:	4094      	lsls	r4, r2
 8000ada:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ade:	0c23      	lsrs	r3, r4, #16
 8000ae0:	fbb8 f7fe 	udiv	r7, r8, lr
 8000ae4:	fa1f fc85 	uxth.w	ip, r5
 8000ae8:	fb0e 8817 	mls	r8, lr, r7, r8
 8000aec:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000af0:	fb07 f10c 	mul.w	r1, r7, ip
 8000af4:	4299      	cmp	r1, r3
 8000af6:	d909      	bls.n	8000b0c <__udivmoddi4+0x60>
 8000af8:	18eb      	adds	r3, r5, r3
 8000afa:	f107 30ff 	add.w	r0, r7, #4294967295
 8000afe:	f080 811b 	bcs.w	8000d38 <__udivmoddi4+0x28c>
 8000b02:	4299      	cmp	r1, r3
 8000b04:	f240 8118 	bls.w	8000d38 <__udivmoddi4+0x28c>
 8000b08:	3f02      	subs	r7, #2
 8000b0a:	442b      	add	r3, r5
 8000b0c:	1a5b      	subs	r3, r3, r1
 8000b0e:	b2a4      	uxth	r4, r4
 8000b10:	fbb3 f0fe 	udiv	r0, r3, lr
 8000b14:	fb0e 3310 	mls	r3, lr, r0, r3
 8000b18:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000b1c:	fb00 fc0c 	mul.w	ip, r0, ip
 8000b20:	45a4      	cmp	ip, r4
 8000b22:	d909      	bls.n	8000b38 <__udivmoddi4+0x8c>
 8000b24:	192c      	adds	r4, r5, r4
 8000b26:	f100 33ff 	add.w	r3, r0, #4294967295
 8000b2a:	f080 8107 	bcs.w	8000d3c <__udivmoddi4+0x290>
 8000b2e:	45a4      	cmp	ip, r4
 8000b30:	f240 8104 	bls.w	8000d3c <__udivmoddi4+0x290>
 8000b34:	3802      	subs	r0, #2
 8000b36:	442c      	add	r4, r5
 8000b38:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000b3c:	eba4 040c 	sub.w	r4, r4, ip
 8000b40:	2700      	movs	r7, #0
 8000b42:	b11e      	cbz	r6, 8000b4c <__udivmoddi4+0xa0>
 8000b44:	40d4      	lsrs	r4, r2
 8000b46:	2300      	movs	r3, #0
 8000b48:	e9c6 4300 	strd	r4, r3, [r6]
 8000b4c:	4639      	mov	r1, r7
 8000b4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b52:	428b      	cmp	r3, r1
 8000b54:	d909      	bls.n	8000b6a <__udivmoddi4+0xbe>
 8000b56:	2e00      	cmp	r6, #0
 8000b58:	f000 80eb 	beq.w	8000d32 <__udivmoddi4+0x286>
 8000b5c:	2700      	movs	r7, #0
 8000b5e:	e9c6 0100 	strd	r0, r1, [r6]
 8000b62:	4638      	mov	r0, r7
 8000b64:	4639      	mov	r1, r7
 8000b66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b6a:	fab3 f783 	clz	r7, r3
 8000b6e:	2f00      	cmp	r7, #0
 8000b70:	d147      	bne.n	8000c02 <__udivmoddi4+0x156>
 8000b72:	428b      	cmp	r3, r1
 8000b74:	d302      	bcc.n	8000b7c <__udivmoddi4+0xd0>
 8000b76:	4282      	cmp	r2, r0
 8000b78:	f200 80fa 	bhi.w	8000d70 <__udivmoddi4+0x2c4>
 8000b7c:	1a84      	subs	r4, r0, r2
 8000b7e:	eb61 0303 	sbc.w	r3, r1, r3
 8000b82:	2001      	movs	r0, #1
 8000b84:	4698      	mov	r8, r3
 8000b86:	2e00      	cmp	r6, #0
 8000b88:	d0e0      	beq.n	8000b4c <__udivmoddi4+0xa0>
 8000b8a:	e9c6 4800 	strd	r4, r8, [r6]
 8000b8e:	e7dd      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000b90:	b902      	cbnz	r2, 8000b94 <__udivmoddi4+0xe8>
 8000b92:	deff      	udf	#255	; 0xff
 8000b94:	fab2 f282 	clz	r2, r2
 8000b98:	2a00      	cmp	r2, #0
 8000b9a:	f040 808f 	bne.w	8000cbc <__udivmoddi4+0x210>
 8000b9e:	1b49      	subs	r1, r1, r5
 8000ba0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ba4:	fa1f f885 	uxth.w	r8, r5
 8000ba8:	2701      	movs	r7, #1
 8000baa:	fbb1 fcfe 	udiv	ip, r1, lr
 8000bae:	0c23      	lsrs	r3, r4, #16
 8000bb0:	fb0e 111c 	mls	r1, lr, ip, r1
 8000bb4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000bb8:	fb08 f10c 	mul.w	r1, r8, ip
 8000bbc:	4299      	cmp	r1, r3
 8000bbe:	d907      	bls.n	8000bd0 <__udivmoddi4+0x124>
 8000bc0:	18eb      	adds	r3, r5, r3
 8000bc2:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000bc6:	d202      	bcs.n	8000bce <__udivmoddi4+0x122>
 8000bc8:	4299      	cmp	r1, r3
 8000bca:	f200 80cd 	bhi.w	8000d68 <__udivmoddi4+0x2bc>
 8000bce:	4684      	mov	ip, r0
 8000bd0:	1a59      	subs	r1, r3, r1
 8000bd2:	b2a3      	uxth	r3, r4
 8000bd4:	fbb1 f0fe 	udiv	r0, r1, lr
 8000bd8:	fb0e 1410 	mls	r4, lr, r0, r1
 8000bdc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000be0:	fb08 f800 	mul.w	r8, r8, r0
 8000be4:	45a0      	cmp	r8, r4
 8000be6:	d907      	bls.n	8000bf8 <__udivmoddi4+0x14c>
 8000be8:	192c      	adds	r4, r5, r4
 8000bea:	f100 33ff 	add.w	r3, r0, #4294967295
 8000bee:	d202      	bcs.n	8000bf6 <__udivmoddi4+0x14a>
 8000bf0:	45a0      	cmp	r8, r4
 8000bf2:	f200 80b6 	bhi.w	8000d62 <__udivmoddi4+0x2b6>
 8000bf6:	4618      	mov	r0, r3
 8000bf8:	eba4 0408 	sub.w	r4, r4, r8
 8000bfc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000c00:	e79f      	b.n	8000b42 <__udivmoddi4+0x96>
 8000c02:	f1c7 0c20 	rsb	ip, r7, #32
 8000c06:	40bb      	lsls	r3, r7
 8000c08:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000c0c:	ea4e 0e03 	orr.w	lr, lr, r3
 8000c10:	fa01 f407 	lsl.w	r4, r1, r7
 8000c14:	fa20 f50c 	lsr.w	r5, r0, ip
 8000c18:	fa21 f30c 	lsr.w	r3, r1, ip
 8000c1c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000c20:	4325      	orrs	r5, r4
 8000c22:	fbb3 f9f8 	udiv	r9, r3, r8
 8000c26:	0c2c      	lsrs	r4, r5, #16
 8000c28:	fb08 3319 	mls	r3, r8, r9, r3
 8000c2c:	fa1f fa8e 	uxth.w	sl, lr
 8000c30:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000c34:	fb09 f40a 	mul.w	r4, r9, sl
 8000c38:	429c      	cmp	r4, r3
 8000c3a:	fa02 f207 	lsl.w	r2, r2, r7
 8000c3e:	fa00 f107 	lsl.w	r1, r0, r7
 8000c42:	d90b      	bls.n	8000c5c <__udivmoddi4+0x1b0>
 8000c44:	eb1e 0303 	adds.w	r3, lr, r3
 8000c48:	f109 30ff 	add.w	r0, r9, #4294967295
 8000c4c:	f080 8087 	bcs.w	8000d5e <__udivmoddi4+0x2b2>
 8000c50:	429c      	cmp	r4, r3
 8000c52:	f240 8084 	bls.w	8000d5e <__udivmoddi4+0x2b2>
 8000c56:	f1a9 0902 	sub.w	r9, r9, #2
 8000c5a:	4473      	add	r3, lr
 8000c5c:	1b1b      	subs	r3, r3, r4
 8000c5e:	b2ad      	uxth	r5, r5
 8000c60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c64:	fb08 3310 	mls	r3, r8, r0, r3
 8000c68:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000c6c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000c70:	45a2      	cmp	sl, r4
 8000c72:	d908      	bls.n	8000c86 <__udivmoddi4+0x1da>
 8000c74:	eb1e 0404 	adds.w	r4, lr, r4
 8000c78:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c7c:	d26b      	bcs.n	8000d56 <__udivmoddi4+0x2aa>
 8000c7e:	45a2      	cmp	sl, r4
 8000c80:	d969      	bls.n	8000d56 <__udivmoddi4+0x2aa>
 8000c82:	3802      	subs	r0, #2
 8000c84:	4474      	add	r4, lr
 8000c86:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000c8a:	fba0 8902 	umull	r8, r9, r0, r2
 8000c8e:	eba4 040a 	sub.w	r4, r4, sl
 8000c92:	454c      	cmp	r4, r9
 8000c94:	46c2      	mov	sl, r8
 8000c96:	464b      	mov	r3, r9
 8000c98:	d354      	bcc.n	8000d44 <__udivmoddi4+0x298>
 8000c9a:	d051      	beq.n	8000d40 <__udivmoddi4+0x294>
 8000c9c:	2e00      	cmp	r6, #0
 8000c9e:	d069      	beq.n	8000d74 <__udivmoddi4+0x2c8>
 8000ca0:	ebb1 050a 	subs.w	r5, r1, sl
 8000ca4:	eb64 0403 	sbc.w	r4, r4, r3
 8000ca8:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000cac:	40fd      	lsrs	r5, r7
 8000cae:	40fc      	lsrs	r4, r7
 8000cb0:	ea4c 0505 	orr.w	r5, ip, r5
 8000cb4:	e9c6 5400 	strd	r5, r4, [r6]
 8000cb8:	2700      	movs	r7, #0
 8000cba:	e747      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000cbc:	f1c2 0320 	rsb	r3, r2, #32
 8000cc0:	fa20 f703 	lsr.w	r7, r0, r3
 8000cc4:	4095      	lsls	r5, r2
 8000cc6:	fa01 f002 	lsl.w	r0, r1, r2
 8000cca:	fa21 f303 	lsr.w	r3, r1, r3
 8000cce:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000cd2:	4338      	orrs	r0, r7
 8000cd4:	0c01      	lsrs	r1, r0, #16
 8000cd6:	fbb3 f7fe 	udiv	r7, r3, lr
 8000cda:	fa1f f885 	uxth.w	r8, r5
 8000cde:	fb0e 3317 	mls	r3, lr, r7, r3
 8000ce2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ce6:	fb07 f308 	mul.w	r3, r7, r8
 8000cea:	428b      	cmp	r3, r1
 8000cec:	fa04 f402 	lsl.w	r4, r4, r2
 8000cf0:	d907      	bls.n	8000d02 <__udivmoddi4+0x256>
 8000cf2:	1869      	adds	r1, r5, r1
 8000cf4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000cf8:	d22f      	bcs.n	8000d5a <__udivmoddi4+0x2ae>
 8000cfa:	428b      	cmp	r3, r1
 8000cfc:	d92d      	bls.n	8000d5a <__udivmoddi4+0x2ae>
 8000cfe:	3f02      	subs	r7, #2
 8000d00:	4429      	add	r1, r5
 8000d02:	1acb      	subs	r3, r1, r3
 8000d04:	b281      	uxth	r1, r0
 8000d06:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d0a:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d0e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d12:	fb00 f308 	mul.w	r3, r0, r8
 8000d16:	428b      	cmp	r3, r1
 8000d18:	d907      	bls.n	8000d2a <__udivmoddi4+0x27e>
 8000d1a:	1869      	adds	r1, r5, r1
 8000d1c:	f100 3cff 	add.w	ip, r0, #4294967295
 8000d20:	d217      	bcs.n	8000d52 <__udivmoddi4+0x2a6>
 8000d22:	428b      	cmp	r3, r1
 8000d24:	d915      	bls.n	8000d52 <__udivmoddi4+0x2a6>
 8000d26:	3802      	subs	r0, #2
 8000d28:	4429      	add	r1, r5
 8000d2a:	1ac9      	subs	r1, r1, r3
 8000d2c:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000d30:	e73b      	b.n	8000baa <__udivmoddi4+0xfe>
 8000d32:	4637      	mov	r7, r6
 8000d34:	4630      	mov	r0, r6
 8000d36:	e709      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000d38:	4607      	mov	r7, r0
 8000d3a:	e6e7      	b.n	8000b0c <__udivmoddi4+0x60>
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	e6fb      	b.n	8000b38 <__udivmoddi4+0x8c>
 8000d40:	4541      	cmp	r1, r8
 8000d42:	d2ab      	bcs.n	8000c9c <__udivmoddi4+0x1f0>
 8000d44:	ebb8 0a02 	subs.w	sl, r8, r2
 8000d48:	eb69 020e 	sbc.w	r2, r9, lr
 8000d4c:	3801      	subs	r0, #1
 8000d4e:	4613      	mov	r3, r2
 8000d50:	e7a4      	b.n	8000c9c <__udivmoddi4+0x1f0>
 8000d52:	4660      	mov	r0, ip
 8000d54:	e7e9      	b.n	8000d2a <__udivmoddi4+0x27e>
 8000d56:	4618      	mov	r0, r3
 8000d58:	e795      	b.n	8000c86 <__udivmoddi4+0x1da>
 8000d5a:	4667      	mov	r7, ip
 8000d5c:	e7d1      	b.n	8000d02 <__udivmoddi4+0x256>
 8000d5e:	4681      	mov	r9, r0
 8000d60:	e77c      	b.n	8000c5c <__udivmoddi4+0x1b0>
 8000d62:	3802      	subs	r0, #2
 8000d64:	442c      	add	r4, r5
 8000d66:	e747      	b.n	8000bf8 <__udivmoddi4+0x14c>
 8000d68:	f1ac 0c02 	sub.w	ip, ip, #2
 8000d6c:	442b      	add	r3, r5
 8000d6e:	e72f      	b.n	8000bd0 <__udivmoddi4+0x124>
 8000d70:	4638      	mov	r0, r7
 8000d72:	e708      	b.n	8000b86 <__udivmoddi4+0xda>
 8000d74:	4637      	mov	r7, r6
 8000d76:	e6e9      	b.n	8000b4c <__udivmoddi4+0xa0>

08000d78 <__aeabi_idiv0>:
 8000d78:	4770      	bx	lr
 8000d7a:	bf00      	nop

08000d7c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000d7c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000db4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000d80:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000d82:	e003      	b.n	8000d8c <LoopCopyDataInit>

08000d84 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000d84:	4b0c      	ldr	r3, [pc, #48]	; (8000db8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000d86:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000d88:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000d8a:	3104      	adds	r1, #4

08000d8c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000d8c:	480b      	ldr	r0, [pc, #44]	; (8000dbc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000d8e:	4b0c      	ldr	r3, [pc, #48]	; (8000dc0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000d90:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000d92:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000d94:	d3f6      	bcc.n	8000d84 <CopyDataInit>
  ldr  r2, =_sbss
 8000d96:	4a0b      	ldr	r2, [pc, #44]	; (8000dc4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000d98:	e002      	b.n	8000da0 <LoopFillZerobss>

08000d9a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000d9a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000d9c:	f842 3b04 	str.w	r3, [r2], #4

08000da0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000da0:	4b09      	ldr	r3, [pc, #36]	; (8000dc8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000da2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000da4:	d3f9      	bcc.n	8000d9a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000da6:	f004 f9e9 	bl	800517c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000daa:	f01b fb31 	bl	801c410 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000dae:	f000 fe95 	bl	8001adc <main>
  bx  lr    
 8000db2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000db4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000db8:	08064b98 	.word	0x08064b98
  ldr  r0, =_sdata
 8000dbc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000dc0:	20000170 	.word	0x20000170
  ldr  r2, =_sbss
 8000dc4:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000dc8:	20012cb4 	.word	0x20012cb4

08000dcc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000dcc:	e7fe      	b.n	8000dcc <ADC_IRQHandler>

08000dce <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8000dce:	f000 bc93 	b.w	80016f8 <touchgfx_init>

08000dd2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8000dd2:	f000 bd01 	b.w	80017d8 <touchgfx_taskEntry>

08000dd6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000dd6:	4770      	bx	lr

08000dd8 <_ZN20STM32TouchControllerD0Ev>:
 8000dd8:	b510      	push	{r4, lr}
 8000dda:	2104      	movs	r1, #4
 8000ddc:	4604      	mov	r4, r0
 8000dde:	f01b fa89 	bl	801c2f4 <_ZdlPvj>
 8000de2:	4620      	mov	r0, r4
 8000de4:	bd10      	pop	{r4, pc}
	...

08000de8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000de8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000dea:	4b0c      	ldr	r3, [pc, #48]	; (8000e1c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000dec:	4c0c      	ldr	r4, [pc, #48]	; (8000e20 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000dee:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000df0:	4b0c      	ldr	r3, [pc, #48]	; (8000e24 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000df2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000df4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000df6:	6863      	ldr	r3, [r4, #4]
 8000df8:	4798      	blx	r3
 8000dfa:	f640 0311 	movw	r3, #2065	; 0x811
 8000dfe:	4298      	cmp	r0, r3
 8000e00:	d10a      	bne.n	8000e18 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000e02:	4d09      	ldr	r5, [pc, #36]	; (8000e28 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000e04:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000e06:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000e08:	2082      	movs	r0, #130	; 0x82
 8000e0a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000e0c:	682b      	ldr	r3, [r5, #0]
 8000e0e:	2082      	movs	r0, #130	; 0x82
 8000e10:	68db      	ldr	r3, [r3, #12]
 8000e12:	4798      	blx	r3
        ret = TS_OK;
 8000e14:	2000      	movs	r0, #0
    }

    return ret;
}
 8000e16:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000e18:	2001      	movs	r0, #1
 8000e1a:	e7fc      	b.n	8000e16 <_Z11BSP_TS_Inittt+0x2e>
 8000e1c:	2000018c 	.word	0x2000018c
 8000e20:	2000005c 	.word	0x2000005c
 8000e24:	2000018e 	.word	0x2000018e
 8000e28:	20000190 	.word	0x20000190

08000e2c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000e2c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000e30:	20f0      	movs	r0, #240	; 0xf0
 8000e32:	f7ff bfd9 	b.w	8000de8 <_Z11BSP_TS_Inittt>
	...

08000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000e38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000e3a:	4d2c      	ldr	r5, [pc, #176]	; (8000eec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>)
 8000e3c:	682b      	ldr	r3, [r5, #0]
{
 8000e3e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000e40:	691b      	ldr	r3, [r3, #16]
 8000e42:	2082      	movs	r0, #130	; 0x82
 8000e44:	4798      	blx	r3
 8000e46:	b280      	uxth	r0, r0
 8000e48:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000e4a:	2800      	cmp	r0, #0
 8000e4c:	d04b      	beq.n	8000ee6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000e4e:	682b      	ldr	r3, [r5, #0]
 8000e50:	f10d 0206 	add.w	r2, sp, #6
 8000e54:	695b      	ldr	r3, [r3, #20]
 8000e56:	a901      	add	r1, sp, #4
 8000e58:	2082      	movs	r0, #130	; 0x82
 8000e5a:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000e5c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000e60:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168

        /* Y value second correction */
        yr = y / 11;
 8000e64:	b29b      	uxth	r3, r3
 8000e66:	220b      	movs	r2, #11
 8000e68:	fbb3 f3f2 	udiv	r3, r3, r2

        /* Return y position value */
        if (yr <= 0)
 8000e6c:	b133      	cbz	r3, 8000e7c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000e6e:	4a20      	ldr	r2, [pc, #128]	; (8000ef0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000e70:	8812      	ldrh	r2, [r2, #0]
 8000e72:	429a      	cmp	r2, r3
        {
            yr = TsYBoundary - 1;
 8000e74:	bf3c      	itt	cc
 8000e76:	f102 33ff 	addcc.w	r3, r2, #4294967295
 8000e7a:	b29b      	uxthcc	r3, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000e7c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000e80:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000e84:	428a      	cmp	r2, r1
        {
            x = 3870 - x;
 8000e86:	bf95      	itete	ls
 8000e88:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
        }
        else
        {
            x = 3800 - x;
 8000e8c:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
            x = 3870 - x;
 8000e90:	320e      	addls	r2, #14
            x = 3800 - x;
 8000e92:	3208      	addhi	r2, #8
 8000e94:	f8ad 2004 	strh.w	r2, [sp, #4]
        }

        /* X value second correction */
        xr = x / 15;
 8000e98:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8000e9c:	220f      	movs	r2, #15
 8000e9e:	fbb1 f1f2 	udiv	r1, r1, r2

        /* Return X position value */
        if (xr <= 0)
 8000ea2:	b131      	cbz	r1, 8000eb2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000ea4:	4a13      	ldr	r2, [pc, #76]	; (8000ef4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8000ea6:	8812      	ldrh	r2, [r2, #0]
 8000ea8:	428a      	cmp	r2, r1
        {
            xr = TsXBoundary - 1;
 8000eaa:	bf3c      	itt	cc
 8000eac:	f102 31ff 	addcc.w	r1, r2, #4294967295
 8000eb0:	b289      	uxthcc	r1, r1
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000eb2:	4e11      	ldr	r6, [pc, #68]	; (8000ef8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000eb4:	4d11      	ldr	r5, [pc, #68]	; (8000efc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000eb6:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000eb8:	682f      	ldr	r7, [r5, #0]
 8000eba:	b282      	uxth	r2, r0
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ebc:	4281      	cmp	r1, r0
 8000ebe:	bf88      	it	hi
 8000ec0:	1a8a      	subhi	r2, r1, r2
 8000ec2:	b2b8      	uxth	r0, r7
 8000ec4:	bf98      	it	ls
 8000ec6:	1a52      	subls	r2, r2, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ec8:	42bb      	cmp	r3, r7
 8000eca:	bf8c      	ite	hi
 8000ecc:	1a18      	subhi	r0, r3, r0
 8000ece:	1ac0      	subls	r0, r0, r3
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ed0:	b292      	uxth	r2, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ed2:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000ed4:	4402      	add	r2, r0
 8000ed6:	2a05      	cmp	r2, #5
        {
            _x = x;
 8000ed8:	bfc4      	itt	gt
 8000eda:	6031      	strgt	r1, [r6, #0]
            _y = y;
 8000edc:	602b      	strgt	r3, [r5, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8000ede:	6833      	ldr	r3, [r6, #0]
 8000ee0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000ee2:	682b      	ldr	r3, [r5, #0]
 8000ee4:	80a3      	strh	r3, [r4, #4]
    }
}
 8000ee6:	b003      	add	sp, #12
 8000ee8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eea:	bf00      	nop
 8000eec:	20000190 	.word	0x20000190
 8000ef0:	2000018e 	.word	0x2000018e
 8000ef4:	2000018c 	.word	0x2000018c
 8000ef8:	20000194 	.word	0x20000194
 8000efc:	20000198 	.word	0x20000198

08000f00 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000f00:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000f02:	4668      	mov	r0, sp
{
 8000f04:	460d      	mov	r5, r1
 8000f06:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000f08:	f7ff ff96 	bl	8000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000f0c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000f10:	b130      	cbz	r0, 8000f20 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000f12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000f16:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000f18:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000f1c:	6023      	str	r3, [r4, #0]
        return true;
 8000f1e:	2001      	movs	r0, #1
}
 8000f20:	b003      	add	sp, #12
 8000f22:	bd30      	pop	{r4, r5, pc}

08000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000f24:	4770      	bx	lr

08000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000f26:	4770      	bx	lr

08000f28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000f28:	4770      	bx	lr

08000f2a <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000f2a:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000f2c:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000f30:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000f34:	4770      	bx	lr

08000f36 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000f36:	2000      	movs	r0, #0
 8000f38:	4770      	bx	lr

08000f3a <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000f3a:	2000      	movs	r0, #0
 8000f3c:	4770      	bx	lr

08000f3e <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000f3e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000f40:	b10b      	cbz	r3, 8000f46 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000f42:	4608      	mov	r0, r1
 8000f44:	4718      	bx	r3
        }
    }
 8000f46:	4770      	bx	lr

08000f48 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000f48:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000f4c:	4770      	bx	lr

08000f4e <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000f4e:	6840      	ldr	r0, [r0, #4]
 8000f50:	6803      	ldr	r3, [r0, #0]
 8000f52:	699b      	ldr	r3, [r3, #24]
 8000f54:	4718      	bx	r3

08000f56 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000f56:	4770      	bx	lr

08000f58 <_ZN11TouchGFXHAL9taskEntryEv>:

    TouchGFXGeneratedHAL::initialize();
}

void TouchGFXHAL::taskEntry()
{
 8000f58:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000f5a:	6803      	ldr	r3, [r0, #0]
{
 8000f5c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000f5e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000f60:	4798      	blx	r3
    enableInterrupts();
 8000f62:	6823      	ldr	r3, [r4, #0]
 8000f64:	4620      	mov	r0, r4
 8000f66:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000f68:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000f6a:	f000 f957 	bl	800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	4620      	mov	r0, r4
 8000f72:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f74:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000f76:	2029      	movs	r0, #41	; 0x29
 8000f78:	f001 f8b2 	bl	80020e0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000f7c:	f000 f94e 	bl	800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000f80:	6823      	ldr	r3, [r4, #0]
 8000f82:	4620      	mov	r0, r4
 8000f84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f86:	4798      	blx	r3
 8000f88:	e7f8      	b.n	8000f7c <_ZN11TouchGFXHAL9taskEntryEv+0x24>

08000f8a <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000f8a:	b510      	push	{r4, lr}
 8000f8c:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000f8e:	f00b f9e9 	bl	800c364 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000f92:	6823      	ldr	r3, [r4, #0]
 8000f94:	4620      	mov	r0, r4
 8000f96:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    }
 8000f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000f9e:	4718      	bx	r3

08000fa0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000fa0:	f000 bcb6 	b.w	8001910 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000fa4 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000fa4:	f000 bcba 	b.w	800191c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000fa8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000fa8:	f000 bcc0 	b.w	800192c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000fac <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000fac:	f000 bc8c 	b.w	80018c8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000fb0 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000fb0:	f000 bcbe 	b.w	8001930 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000fb4 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000fb4:	f000 bcc6 	b.w	8001944 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000fb8 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000fb8:	f000 bc90 	b.w	80018dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000fbc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000fbc:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000fbe:	b931      	cbnz	r1, 8000fce <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 8000fc0:	4b0a      	ldr	r3, [pc, #40]	; (8000fec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000fc2:	4a0b      	ldr	r2, [pc, #44]	; (8000ff0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000fc4:	480b      	ldr	r0, [pc, #44]	; (8000ff4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000fc6:	f44f 7127 	mov.w	r1, #668	; 0x29c
 8000fca:	f01b f9d7 	bl	801c37c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000fce:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000fd2:	3200      	adds	r2, #0
 8000fd4:	4908      	ldr	r1, [pc, #32]	; (8000ff8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000fd6:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000fd8:	bf18      	it	ne
 8000fda:	2201      	movne	r2, #1
 8000fdc:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000fde:	3300      	adds	r3, #0
 8000fe0:	4a06      	ldr	r2, [pc, #24]	; (8000ffc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 8000fe2:	bf18      	it	ne
 8000fe4:	2301      	movne	r3, #1
 8000fe6:	7013      	strb	r3, [r2, #0]
    }
 8000fe8:	bd08      	pop	{r3, pc}
 8000fea:	bf00      	nop
 8000fec:	0801d41d 	.word	0x0801d41d
 8000ff0:	0801d5a8 	.word	0x0801d5a8
 8000ff4:	0801d455 	.word	0x0801d455
 8000ff8:	200124b6 	.word	0x200124b6
 8000ffc:	200124b7 	.word	0x200124b7

08001000 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
    TOUCHGFX_DEPRECATED(
 8001000:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001004:	4699      	mov	r9, r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001006:	4b1c      	ldr	r3, [pc, #112]	; (8001078 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
    TOUCHGFX_DEPRECATED(
 8001008:	f89d 5020 	ldrb.w	r5, [sp, #32]
 800100c:	4688      	mov	r8, r1
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800100e:	6819      	ldr	r1, [r3, #0]
 8001010:	f891 3076 	ldrb.w	r3, [r1, #118]	; 0x76
    TOUCHGFX_DEPRECATED(
 8001014:	4607      	mov	r7, r0
 8001016:	4614      	mov	r4, r2
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001018:	b10b      	cbz	r3, 800101e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x1e>
 800101a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800101c:	b900      	cbnz	r0, 8001020 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x20>
            return instance->lcdRef;
 800101e:	6888      	ldr	r0, [r1, #8]
        uint16_t stride = lcd().framebufferStride();
 8001020:	6803      	ldr	r3, [r0, #0]
 8001022:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001024:	4798      	blx	r3
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 8001026:	4b15      	ldr	r3, [pc, #84]	; (800107c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x7c>)
 8001028:	881e      	ldrh	r6, [r3, #0]
 800102a:	4370      	muls	r0, r6
        if (useDoubleBuffering)
 800102c:	f1b9 0f00 	cmp.w	r9, #0
 8001030:	d016      	beq.n	8001060 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x60>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8001032:	eb08 0100 	add.w	r1, r8, r0
            double_buf = (void*)ptr;
 8001036:	460a      	mov	r2, r1
        if (useAnimationStorage)
 8001038:	b1ad      	cbz	r5, 8001066 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x66>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800103a:	180b      	adds	r3, r1, r0
 800103c:	3c01      	subs	r4, #1
 800103e:	b2a4      	uxth	r4, r4
 8001040:	2c1f      	cmp	r4, #31
 8001042:	d812      	bhi.n	800106a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
 8001044:	2101      	movs	r1, #1
 8001046:	fa01 f404 	lsl.w	r4, r1, r4
 800104a:	490d      	ldr	r1, [pc, #52]	; (8001080 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x80>)
 800104c:	4021      	ands	r1, r4
 800104e:	b161      	cbz	r1, 800106a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8001050:	6839      	ldr	r1, [r7, #0]
 8001052:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8001054:	4638      	mov	r0, r7
 8001056:	4641      	mov	r1, r8
 8001058:	46a4      	mov	ip, r4
    }
 800105a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 800105e:	4760      	bx	ip
        uint8_t* ptr = (uint8_t*)adr;
 8001060:	4641      	mov	r1, r8
        void* double_buf = 0;
 8001062:	464a      	mov	r2, r9
 8001064:	e7e8      	b.n	8001038 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x38>
        void* anim_store = 0;
 8001066:	462b      	mov	r3, r5
 8001068:	e7e8      	b.n	800103c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x3c>
            assert(0 && "Unsupported bit depth");
 800106a:	4b06      	ldr	r3, [pc, #24]	; (8001084 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x84>)
 800106c:	4a06      	ldr	r2, [pc, #24]	; (8001088 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x88>)
 800106e:	4807      	ldr	r0, [pc, #28]	; (800108c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x8c>)
 8001070:	f240 2189 	movw	r1, #649	; 0x289
 8001074:	f01b f982 	bl	801c37c <__assert_func>
 8001078:	200124b8 	.word	0x200124b8
 800107c:	200124b4 	.word	0x200124b4
 8001080:	8080808b 	.word	0x8080808b
 8001084:	0801d400 	.word	0x0801d400
 8001088:	0801d554 	.word	0x0801d554
 800108c:	0801d455 	.word	0x0801d455

08001090 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001090:	f00a bbf9 	b.w	800b886 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001094 <_ZN11TouchGFXHALD0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	2178      	movs	r1, #120	; 0x78
 8001098:	4604      	mov	r4, r0
 800109a:	f01b f92b 	bl	801c2f4 <_ZdlPvj>
 800109e:	4620      	mov	r0, r4
 80010a0:	bd10      	pop	{r4, pc}

080010a2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80010a2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80010a6:	b11b      	cbz	r3, 80010b0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80010a8:	6840      	ldr	r0, [r0, #4]
 80010aa:	6803      	ldr	r3, [r0, #0]
 80010ac:	681b      	ldr	r3, [r3, #0]
 80010ae:	4718      	bx	r3
    }
 80010b0:	4618      	mov	r0, r3
 80010b2:	4770      	bx	lr

080010b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80010b4:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80010b6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80010ba:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80010be:	4b10      	ldr	r3, [pc, #64]	; (8001100 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80010c0:	428c      	cmp	r4, r1
 80010c2:	781a      	ldrb	r2, [r3, #0]
 80010c4:	d00d      	beq.n	80010e2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80010c6:	b95a      	cbnz	r2, 80010e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010c8:	4a0e      	ldr	r2, [pc, #56]	; (8001104 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80010ca:	490f      	ldr	r1, [pc, #60]	; (8001108 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010cc:	480f      	ldr	r0, [pc, #60]	; (800110c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010ce:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d0:	4d0f      	ldr	r5, [pc, #60]	; (8001110 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010d2:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d4:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80010d6:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d8:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80010da:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80010dc:	2201      	movs	r2, #1
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80010de:	701a      	strb	r2, [r3, #0]
        }
    }
 80010e0:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80010e2:	2a00      	cmp	r2, #0
 80010e4:	d0fc      	beq.n	80010e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80010e6:	4809      	ldr	r0, [pc, #36]	; (800110c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80010e8:	4a07      	ldr	r2, [pc, #28]	; (8001108 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80010ea:	8801      	ldrh	r1, [r0, #0]
 80010ec:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80010ee:	4a05      	ldr	r2, [pc, #20]	; (8001104 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80010f0:	4d07      	ldr	r5, [pc, #28]	; (8001110 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80010f2:	8814      	ldrh	r4, [r2, #0]
 80010f4:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80010f6:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80010f8:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80010fa:	2200      	movs	r2, #0
 80010fc:	e7ef      	b.n	80010de <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80010fe:	bf00      	nop
 8001100:	200124b0 	.word	0x200124b0
 8001104:	200124ac 	.word	0x200124ac
 8001108:	200124b2 	.word	0x200124b2
 800110c:	200124ae 	.word	0x200124ae
 8001110:	200124b4 	.word	0x200124b4

08001114 <_ZN11TouchGFXHAL10initializeEv>:
    TouchGFXGeneratedHAL::initialize();
 8001114:	f000 bc2a 	b.w	800196c <_ZN20TouchGFXGeneratedHAL10initializeEv>

08001118 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001118:	2101      	movs	r1, #1
{
 800111a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800111c:	2200      	movs	r2, #0
 800111e:	4608      	mov	r0, r1
 8001120:	f006 ff2a 	bl	8007f78 <osSemaphoreNew>
 8001124:	4b06      	ldr	r3, [pc, #24]	; (8001140 <_ZN8touchgfx10OSWrappers10initializeEv+0x28>)
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 8001126:	f04f 31ff 	mov.w	r1, #4294967295
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800112a:	6018      	str	r0, [r3, #0]
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 800112c:	f006 ff7a 	bl	8008024 <osSemaphoreAcquire>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001130:	2200      	movs	r2, #0
 8001132:	2104      	movs	r1, #4
 8001134:	2001      	movs	r0, #1
 8001136:	f006 ffe9 	bl	800810c <osMessageQueueNew>
 800113a:	4b02      	ldr	r3, [pc, #8]	; (8001144 <_ZN8touchgfx10OSWrappers10initializeEv+0x2c>)
 800113c:	6018      	str	r0, [r3, #0]
}
 800113e:	bd08      	pop	{r3, pc}
 8001140:	200001a0 	.word	0x200001a0
 8001144:	2000019c 	.word	0x2000019c

08001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8001148:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800114a:	4b07      	ldr	r3, [pc, #28]	; (8001168 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x20>)
 800114c:	6818      	ldr	r0, [r3, #0]
 800114e:	b928      	cbnz	r0, 800115c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x14>
 8001150:	4b06      	ldr	r3, [pc, #24]	; (800116c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x24>)
 8001152:	4a07      	ldr	r2, [pc, #28]	; (8001170 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8001154:	4807      	ldr	r0, [pc, #28]	; (8001174 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2c>)
 8001156:	2131      	movs	r1, #49	; 0x31
 8001158:	f01b f910 	bl	801c37c <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800115c:	f04f 31ff 	mov.w	r1, #4294967295
}
 8001160:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001164:	f006 bf5e 	b.w	8008024 <osSemaphoreAcquire>
 8001168:	200001a0 	.word	0x200001a0
 800116c:	0801d5f6 	.word	0x0801d5f6
 8001170:	0801d692 	.word	0x0801d692
 8001174:	0801d607 	.word	0x0801d607

08001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8001178:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x1c>)
 800117c:	6818      	ldr	r0, [r3, #0]
 800117e:	b928      	cbnz	r0, 800118c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>
 8001180:	4b05      	ldr	r3, [pc, #20]	; (8001198 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x20>)
 8001182:	4a06      	ldr	r2, [pc, #24]	; (800119c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x24>)
 8001184:	4806      	ldr	r0, [pc, #24]	; (80011a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x28>)
 8001186:	213a      	movs	r1, #58	; 0x3a
 8001188:	f01b f8f8 	bl	801c37c <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 800118c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 8001190:	f006 bf84 	b.w	800809c <osSemaphoreRelease>
 8001194:	200001a0 	.word	0x200001a0
 8001198:	0801d5f6 	.word	0x0801d5f6
 800119c:	0801d655 	.word	0x0801d655
 80011a0:	0801d607 	.word	0x0801d607

080011a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80011a4:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80011a6:	4b07      	ldr	r3, [pc, #28]	; (80011c4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x20>)
 80011a8:	6818      	ldr	r0, [r3, #0]
 80011aa:	b928      	cbnz	r0, 80011b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>
 80011ac:	4b06      	ldr	r3, [pc, #24]	; (80011c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x24>)
 80011ae:	4a07      	ldr	r2, [pc, #28]	; (80011cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x28>)
 80011b0:	4807      	ldr	r0, [pc, #28]	; (80011d0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x2c>)
 80011b2:	2147      	movs	r1, #71	; 0x47
 80011b4:	f01b f8e2 	bl	801c37c <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011b8:	2100      	movs	r1, #0
}
 80011ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011be:	f006 bf31 	b.w	8008024 <osSemaphoreAcquire>
 80011c2:	bf00      	nop
 80011c4:	200001a0 	.word	0x200001a0
 80011c8:	0801d5f6 	.word	0x0801d5f6
 80011cc:	0801d6cf 	.word	0x0801d6cf
 80011d0:	0801d607 	.word	0x0801d607

080011d4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80011d4:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80011d6:	4b06      	ldr	r3, [pc, #24]	; (80011f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x1c>)
 80011d8:	6818      	ldr	r0, [r3, #0]
 80011da:	b928      	cbnz	r0, 80011e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>
 80011dc:	4b05      	ldr	r3, [pc, #20]	; (80011f4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x20>)
 80011de:	4a06      	ldr	r2, [pc, #24]	; (80011f8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x24>)
 80011e0:	4806      	ldr	r0, [pc, #24]	; (80011fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x28>)
 80011e2:	2154      	movs	r1, #84	; 0x54
 80011e4:	f01b f8ca 	bl	801c37c <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80011e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 80011ec:	f006 bf56 	b.w	800809c <osSemaphoreRelease>
 80011f0:	200001a0 	.word	0x200001a0
 80011f4:	0801d5f6 	.word	0x0801d5f6
 80011f8:	0801d70f 	.word	0x0801d70f
 80011fc:	0801d607 	.word	0x0801d607

08001200 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    if (vsync_queue)
 8001200:	4b04      	ldr	r3, [pc, #16]	; (8001214 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001202:	6818      	ldr	r0, [r3, #0]
 8001204:	b120      	cbz	r0, 8001210 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>
    {
        osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001206:	2300      	movs	r3, #0
 8001208:	461a      	mov	r2, r3
 800120a:	4903      	ldr	r1, [pc, #12]	; (8001218 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
 800120c:	f006 bfc4 	b.w	8008198 <osMessageQueuePut>
    }
}
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop
 8001214:	2000019c 	.word	0x2000019c
 8001218:	20000004 	.word	0x20000004

0800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 800121c:	b513      	push	{r0, r1, r4, lr}
    if (vsync_queue)
 800121e:	4c08      	ldr	r4, [pc, #32]	; (8001240 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001220:	6820      	ldr	r0, [r4, #0]
 8001222:	b158      	cbz	r0, 800123c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x20>
    {
        uint32_t dummyGet;
        // First make sure the queue is empty, by trying to remove an element with 0 timeout.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001224:	2300      	movs	r3, #0
 8001226:	461a      	mov	r2, r3
 8001228:	a901      	add	r1, sp, #4
 800122a:	f006 fff7 	bl	800821c <osMessageQueueGet>

        // Then, wait for next VSYNC to occur.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 800122e:	f04f 33ff 	mov.w	r3, #4294967295
 8001232:	2200      	movs	r2, #0
 8001234:	a901      	add	r1, sp, #4
 8001236:	6820      	ldr	r0, [r4, #0]
 8001238:	f006 fff0 	bl	800821c <osMessageQueueGet>
    }
}
 800123c:	b002      	add	sp, #8
 800123e:	bd10      	pop	{r4, pc}
 8001240:	2000019c 	.word	0x2000019c

08001244 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001244:	6803      	ldr	r3, [r0, #0]
 8001246:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001248:	4718      	bx	r3

0800124a <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 800124a:	2000      	movs	r0, #0
 800124c:	4770      	bx	lr

0800124e <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800124e:	6803      	ldr	r3, [r0, #0]
 8001250:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001252:	4718      	bx	r3

08001254 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001254:	f240 10ef 	movw	r0, #495	; 0x1ef
 8001258:	4770      	bx	lr
	...

0800125c <_ZN10STM32F4DMA10initializeEv>:
{
 800125c:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 800125e:	4c07      	ldr	r4, [pc, #28]	; (800127c <_ZN10STM32F4DMA10initializeEv+0x20>)
 8001260:	4b07      	ldr	r3, [pc, #28]	; (8001280 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8001262:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8001264:	4620      	mov	r0, r4
 8001266:	f004 f95f 	bl	8005528 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800126a:	4b06      	ldr	r3, [pc, #24]	; (8001284 <_ZN10STM32F4DMA10initializeEv+0x28>)
 800126c:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800126e:	4b06      	ldr	r3, [pc, #24]	; (8001288 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8001270:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001272:	4b06      	ldr	r3, [pc, #24]	; (800128c <_ZN10STM32F4DMA10initializeEv+0x30>)
 8001274:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001278:	609a      	str	r2, [r3, #8]
}
 800127a:	bd10      	pop	{r4, pc}
 800127c:	20012b18 	.word	0x20012b18
 8001280:	4002b000 	.word	0x4002b000
 8001284:	080012ad 	.word	0x080012ad
 8001288:	08001291 	.word	0x08001291
 800128c:	e000e100 	.word	0xe000e100

08001290 <DMA2D_XferErrorCallback>:
    {
 8001290:	b508      	push	{r3, lr}
        assert(0);
 8001292:	4a03      	ldr	r2, [pc, #12]	; (80012a0 <DMA2D_XferErrorCallback+0x10>)
 8001294:	4b03      	ldr	r3, [pc, #12]	; (80012a4 <DMA2D_XferErrorCallback+0x14>)
 8001296:	4804      	ldr	r0, [pc, #16]	; (80012a8 <DMA2D_XferErrorCallback+0x18>)
 8001298:	2136      	movs	r1, #54	; 0x36
 800129a:	f01b f86f 	bl	801c37c <__assert_func>
 800129e:	bf00      	nop
 80012a0:	0801d7f0 	.word	0x0801d7f0
 80012a4:	0801e13b 	.word	0x0801e13b
 80012a8:	0801d753 	.word	0x0801d753

080012ac <DMA2D_XferCpltCallback>:
        touchgfx::HAL::getInstance()->signalDMAInterrupt();
 80012ac:	4b02      	ldr	r3, [pc, #8]	; (80012b8 <DMA2D_XferCpltCallback+0xc>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80012b2:	6803      	ldr	r3, [r0, #0]
 80012b4:	695b      	ldr	r3, [r3, #20]
 80012b6:	4718      	bx	r3
 80012b8:	200124b8 	.word	0x200124b8

080012bc <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 80012bc:	4b08      	ldr	r3, [pc, #32]	; (80012e0 <_ZN10STM32F4DMAD1Ev+0x24>)
 80012be:	b510      	push	{r4, lr}
 80012c0:	6003      	str	r3, [r0, #0]
 80012c2:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 80012c4:	4807      	ldr	r0, [pc, #28]	; (80012e4 <_ZN10STM32F4DMAD1Ev+0x28>)
 80012c6:	f004 f9f7 	bl	80056b8 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80012ca:	4b07      	ldr	r3, [pc, #28]	; (80012e8 <_ZN10STM32F4DMAD1Ev+0x2c>)
 80012cc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80012d0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80012d4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012d8:	f3bf 8f6f 	isb	sy
}
 80012dc:	4620      	mov	r0, r4
 80012de:	bd10      	pop	{r4, pc}
 80012e0:	0801d7a8 	.word	0x0801d7a8
 80012e4:	20012b18 	.word	0x20012b18
 80012e8:	e000e100 	.word	0xe000e100

080012ec <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 80012ec:	b510      	push	{r4, lr}
 80012ee:	4604      	mov	r4, r0
}
 80012f0:	f7ff ffe4 	bl	80012bc <_ZN10STM32F4DMAD1Ev>
 80012f4:	4620      	mov	r0, r4
 80012f6:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 80012fa:	f01a fffb 	bl	801c2f4 <_ZdlPvj>
 80012fe:	4620      	mov	r0, r4
 8001300:	bd10      	pop	{r4, pc}
	...

08001304 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001304:	4b04      	ldr	r3, [pc, #16]	; (8001318 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800130c:	b10a      	cbz	r2, 8001312 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800130e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001310:	b900      	cbnz	r0, 8001314 <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8001312:	6898      	ldr	r0, [r3, #8]
    }
 8001314:	4770      	bx	lr
 8001316:	bf00      	nop
 8001318:	200124b8 	.word	0x200124b8

0800131c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800131c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8001320:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001322:	2d20      	cmp	r5, #32
{
 8001324:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001326:	f000 8097 	beq.w	8001458 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800132a:	2d40      	cmp	r5, #64	; 0x40
 800132c:	f000 8094 	beq.w	8001458 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001330:	1f2a      	subs	r2, r5, #4
 8001332:	4256      	negs	r6, r2
 8001334:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8001336:	2d80      	cmp	r5, #128	; 0x80
 8001338:	f000 8090 	beq.w	800145c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 800133c:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8001340:	425d      	negs	r5, r3
 8001342:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8001344:	f7ff ffde 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8001348:	6803      	ldr	r3, [r0, #0]
 800134a:	69db      	ldr	r3, [r3, #28]
 800134c:	4798      	blx	r3

    switch (blitOp.operation)
 800134e:	6823      	ldr	r3, [r4, #0]
 8001350:	2b40      	cmp	r3, #64	; 0x40
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8001352:	4686      	mov	lr, r0
    switch (blitOp.operation)
 8001354:	f000 8099 	beq.w	800148a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
 8001358:	f200 8082 	bhi.w	8001460 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>
 800135c:	2b04      	cmp	r3, #4
 800135e:	f000 808d 	beq.w	800147c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
 8001362:	2b20      	cmp	r3, #32
 8001364:	f000 8091 	beq.w	800148a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001368:	f1be 0f10 	cmp.w	lr, #16
 800136c:	bf14      	ite	ne
 800136e:	f04f 0c01 	movne.w	ip, #1
 8001372:	f04f 0c02 	moveq.w	ip, #2
 8001376:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8001378:	4b4b      	ldr	r3, [pc, #300]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800137a:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800137e:	6819      	ldr	r1, [r3, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001380:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001382:	f8d1 9000 	ldr.w	r9, [r1]
    hdma2d.Init.Mode = dma2dTransferMode;
 8001386:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001388:	f1be 0f10 	cmp.w	lr, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800138c:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001390:	bf14      	ite	ne
 8001392:	2001      	movne	r0, #1
 8001394:	2002      	moveq	r0, #2
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001396:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800139a:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800139e:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 80013a0:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80013a2:	600a      	str	r2, [r1, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80013a4:	6b4a      	ldr	r2, [r1, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 80013a6:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80013aa:	f022 0207 	bic.w	r2, r2, #7
 80013ae:	4302      	orrs	r2, r0
 80013b0:	634a      	str	r2, [r1, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 80013b2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80013b4:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 80013b8:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 80013bc:	433a      	orrs	r2, r7
 80013be:	640a      	str	r2, [r1, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 80013c0:	8aa2      	ldrh	r2, [r4, #20]
 80013c2:	eba2 0208 	sub.w	r2, r2, r8
 80013c6:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 80013c8:	b906      	cbnz	r6, 80013cc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
 80013ca:	b395      	cbz	r5, 8001432 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
    {
        if (blitOp.alpha < 255)
 80013cc:	7f22      	ldrb	r2, [r4, #28]
 80013ce:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 80013d0:	bf15      	itete	ne
 80013d2:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013d4:	2200      	moveq	r2, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 80013d6:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013da:	631a      	streq	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 80013dc:	b31d      	cbz	r5, 8001426 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
 80013de:	7f22      	ldrb	r2, [r4, #28]
 80013e0:	69a1      	ldr	r1, [r4, #24]
        {
            if (bitDepth == 16)
 80013e2:	f1be 0f10 	cmp.w	lr, #16
 80013e6:	ea4f 6c02 	mov.w	ip, r2, lsl #24
 80013ea:	d151      	bne.n	8001490 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80013ec:	f04f 081f 	mov.w	r8, #31
 80013f0:	f3c1 22c4 	ubfx	r2, r1, #11, #5
 80013f4:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 80013f8:	fbb2 fef8 	udiv	lr, r2, r8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80013fc:	ea01 0208 	and.w	r2, r1, r8
 8001400:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8001404:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8001408:	ea42 020c 	orr.w	r2, r2, ip
 800140c:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8001410:	f3c1 1145 	ubfx	r1, r1, #5, #6
 8001414:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8001418:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 800141c:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8001420:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001424:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001426:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800142a:	2100      	movs	r1, #0
 800142c:	481e      	ldr	r0, [pc, #120]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 800142e:	f004 fa03 	bl	8005838 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001432:	2101      	movs	r1, #1
 8001434:	481c      	ldr	r0, [pc, #112]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8001436:	f004 f9ff 	bl	8005838 <HAL_DMA2D_ConfigLayer>
 800143a:	8a23      	ldrh	r3, [r4, #16]
 800143c:	8a62      	ldrh	r2, [r4, #18]

    if (blendingImage || blendingText)
 800143e:	b906      	cbnz	r6, 8001442 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
 8001440:	b355      	cbz	r5, 8001498 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8001442:	e9cd 3200 	strd	r3, r2, [sp]
 8001446:	68e3      	ldr	r3, [r4, #12]
 8001448:	6861      	ldr	r1, [r4, #4]
 800144a:	4817      	ldr	r0, [pc, #92]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 800144c:	461a      	mov	r2, r3
 800144e:	f004 f8b5 	bl	80055bc <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8001452:	b003      	add	sp, #12
 8001454:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001458:	2601      	movs	r6, #1
 800145a:	e76f      	b.n	800133c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 800145c:	2501      	movs	r5, #1
 800145e:	e771      	b.n	8001344 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8001460:	2b80      	cmp	r3, #128	; 0x80
 8001462:	d006      	beq.n	8001472 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
 8001464:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001468:	f47f af7e 	bne.w	8001368 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
        dma2dColorMode = CM_A8;
 800146c:	f04f 0c09 	mov.w	ip, #9
 8001470:	e001      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_A4;
 8001472:	f04f 0c0a 	mov.w	ip, #10
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8001476:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800147a:	e77d      	b.n	8001378 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800147c:	2810      	cmp	r0, #16
 800147e:	bf14      	ite	ne
 8001480:	f04f 0c01 	movne.w	ip, #1
 8001484:	f04f 0c02 	moveq.w	ip, #2
 8001488:	e7f5      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_ARGB8888;
 800148a:	f04f 0c00 	mov.w	ip, #0
 800148e:	e7f2      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8001490:	ea4c 0101 	orr.w	r1, ip, r1
 8001494:	6359      	str	r1, [r3, #52]	; 0x34
 8001496:	e7c6      	b.n	8001426 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
        HAL_DMA2D_Start_IT(&hdma2d,
 8001498:	9200      	str	r2, [sp, #0]
 800149a:	6861      	ldr	r1, [r4, #4]
 800149c:	68e2      	ldr	r2, [r4, #12]
 800149e:	4802      	ldr	r0, [pc, #8]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 80014a0:	f004 f86e 	bl	8005580 <HAL_DMA2D_Start_IT>
}
 80014a4:	e7d5      	b.n	8001452 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 80014a6:	bf00      	nop
 80014a8:	20012b18 	.word	0x20012b18

080014ac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 80014ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014ae:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 80014b0:	f7ff ff28 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 80014b4:	6803      	ldr	r3, [r0, #0]
 80014b6:	69db      	ldr	r3, [r3, #28]
 80014b8:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80014ba:	2810      	cmp	r0, #16
 80014bc:	69ab      	ldr	r3, [r5, #24]
 80014be:	7f29      	ldrb	r1, [r5, #28]
 80014c0:	d166      	bne.n	8001590 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80014c2:	f003 021f 	and.w	r2, r3, #31
 80014c6:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 80014ca:	201f      	movs	r0, #31
 80014cc:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014d0:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014d4:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014d8:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014dc:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014e0:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014e4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014e8:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 80014ec:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80014ee:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014f0:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014f4:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 80014f8:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 80014fa:	4827      	ldr	r0, [pc, #156]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 80014fc:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80014fe:	6802      	ldr	r2, [r0, #0]
    switch (blitOp.operation)
 8001500:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001502:	8a2b      	ldrh	r3, [r5, #16]
 8001504:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001508:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800150a:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 800150c:	bf0c      	ite	eq
 800150e:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8001512:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001516:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800151a:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800151c:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001520:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8001522:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001524:	f023 0307 	bic.w	r3, r3, #7
 8001528:	430b      	orrs	r3, r1
 800152a:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800152c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800152e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001532:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001536:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001538:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800153c:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800153e:	d11c      	bne.n	800157a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8001540:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8001542:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8001546:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001548:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800154c:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800154e:	2100      	movs	r1, #0
 8001550:	f004 f972 	bl	8005838 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001554:	2101      	movs	r1, #1
 8001556:	4810      	ldr	r0, [pc, #64]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8001558:	f004 f96e 	bl	8005838 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800155c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8001560:	8a2b      	ldrh	r3, [r5, #16]
 8001562:	8a6a      	ldrh	r2, [r5, #18]
 8001564:	d10d      	bne.n	8001582 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8001566:	68e9      	ldr	r1, [r5, #12]
 8001568:	480b      	ldr	r0, [pc, #44]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 800156a:	e9cd 3200 	strd	r3, r2, [sp]
 800156e:	460b      	mov	r3, r1
 8001570:	460a      	mov	r2, r1
 8001572:	f004 f823 	bl	80055bc <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8001576:	b003      	add	sp, #12
 8001578:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 800157a:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800157c:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800157e:	6283      	str	r3, [r0, #40]	; 0x28
 8001580:	e7e8      	b.n	8001554 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8001582:	9200      	str	r2, [sp, #0]
 8001584:	4621      	mov	r1, r4
 8001586:	68ea      	ldr	r2, [r5, #12]
 8001588:	4803      	ldr	r0, [pc, #12]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 800158a:	f003 fff9 	bl	8005580 <HAL_DMA2D_Start_IT>
}
 800158e:	e7f2      	b.n	8001576 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8001590:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001594:	2101      	movs	r1, #1
 8001596:	e7af      	b.n	80014f8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 8001598:	20012b18 	.word	0x20012b18

0800159c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800159c:	b570      	push	{r4, r5, r6, lr}
 800159e:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80015a0:	462c      	mov	r4, r5
 80015a2:	4b0a      	ldr	r3, [pc, #40]	; (80015cc <_ZN10STM32F4DMAC1Ev+0x30>)
 80015a4:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80015a6:	2600      	movs	r6, #0
 80015a8:	6068      	str	r0, [r5, #4]
 80015aa:	722e      	strb	r6, [r5, #8]
 80015ac:	726e      	strb	r6, [r5, #9]
 80015ae:	f844 3b20 	str.w	r3, [r4], #32
 80015b2:	2260      	movs	r2, #96	; 0x60
 80015b4:	4621      	mov	r1, r4
 80015b6:	f00b f801 	bl	800c5bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80015ba:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80015be:	61a6      	str	r6, [r4, #24]
 80015c0:	3420      	adds	r4, #32
 80015c2:	42a3      	cmp	r3, r4
 80015c4:	d1fb      	bne.n	80015be <_ZN10STM32F4DMAC1Ev+0x22>
{}
 80015c6:	4628      	mov	r0, r5
 80015c8:	bd70      	pop	{r4, r5, r6, pc}
 80015ca:	bf00      	nop
 80015cc:	0801d7a8 	.word	0x0801d7a8

080015d0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
     * @see touchgfx::AbstractPartition::capacity
     */
    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80015d0:	2001      	movs	r0, #1
 80015d2:	4770      	bx	lr

080015d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:
     * @see touchgfx::AbstractPartition::element_size
     */
    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80015d4:	2054      	movs	r0, #84	; 0x54
 80015d6:	4770      	bx	lr

080015d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80015d8:	2354      	movs	r3, #84	; 0x54
 80015da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015de:	3008      	adds	r0, #8
 80015e0:	4770      	bx	lr

080015e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80015e2:	2354      	movs	r3, #84	; 0x54
 80015e4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015e8:	3008      	adds	r0, #8
 80015ea:	4770      	bx	lr

080015ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80015ec:	2001      	movs	r0, #1
 80015ee:	4770      	bx	lr

080015f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80015f0:	f240 603c 	movw	r0, #1596	; 0x63c
 80015f4:	4770      	bx	lr

080015f6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80015f6:	f240 633c 	movw	r3, #1596	; 0x63c
 80015fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015fe:	3008      	adds	r0, #8
 8001600:	4770      	bx	lr

08001602 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001602:	f240 633c 	movw	r3, #1596	; 0x63c
 8001606:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800160a:	3008      	adds	r0, #8
 800160c:	4770      	bx	lr

0800160e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800160e:	2001      	movs	r0, #1
 8001610:	4770      	bx	lr

08001612 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001612:	2010      	movs	r0, #16
 8001614:	4770      	bx	lr

08001616 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001616:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800161a:	3008      	adds	r0, #8
 800161c:	4770      	bx	lr

0800161e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800161e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001622:	3008      	adds	r0, #8
 8001624:	4770      	bx	lr

08001626 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
 8001626:	4608      	mov	r0, r1
 8001628:	f001 bcb8 	b.w	8002f9c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>

0800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800162c:	b510      	push	{r4, lr}
 800162e:	4b03      	ldr	r3, [pc, #12]	; (800163c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001630:	6003      	str	r3, [r0, #0]
 8001632:	4604      	mov	r4, r0
 8001634:	f008 fdbc 	bl	800a1b0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001638:	4620      	mov	r0, r4
 800163a:	bd10      	pop	{r4, pc}
 800163c:	0801d894 	.word	0x0801d894

08001640 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001640:	b510      	push	{r4, lr}
 8001642:	4604      	mov	r4, r0
 8001644:	f7ff fff2 	bl	800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001648:	4620      	mov	r0, r4
 800164a:	215c      	movs	r1, #92	; 0x5c
 800164c:	f01a fe52 	bl	801c2f4 <_ZdlPvj>
 8001650:	4620      	mov	r0, r4
 8001652:	bd10      	pop	{r4, pc}

08001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001654:	b510      	push	{r4, lr}
 8001656:	4b03      	ldr	r3, [pc, #12]	; (8001664 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001658:	6003      	str	r3, [r0, #0]
 800165a:	4604      	mov	r4, r0
 800165c:	f008 fda8 	bl	800a1b0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001660:	4620      	mov	r0, r4
 8001662:	bd10      	pop	{r4, pc}
 8001664:	0801d860 	.word	0x0801d860

08001668 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001668:	b510      	push	{r4, lr}
 800166a:	4604      	mov	r4, r0
 800166c:	f7ff fff2 	bl	8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001670:	4620      	mov	r0, r4
 8001672:	f240 6144 	movw	r1, #1604	; 0x644
 8001676:	f01a fe3d 	bl	801c2f4 <_ZdlPvj>
 800167a:	4620      	mov	r0, r4
 800167c:	bd10      	pop	{r4, pc}
	...

08001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001680:	b510      	push	{r4, lr}
 8001682:	4b03      	ldr	r3, [pc, #12]	; (8001690 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001684:	6003      	str	r3, [r0, #0]
 8001686:	4604      	mov	r4, r0
 8001688:	f008 fd92 	bl	800a1b0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800168c:	4620      	mov	r0, r4
 800168e:	bd10      	pop	{r4, pc}
 8001690:	0801d82c 	.word	0x0801d82c

08001694 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001694:	b510      	push	{r4, lr}
 8001696:	4604      	mov	r4, r0
 8001698:	f7ff fff2 	bl	8001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800169c:	4620      	mov	r0, r4
 800169e:	2118      	movs	r1, #24
 80016a0:	f01a fe28 	bl	801c2f4 <_ZdlPvj>
 80016a4:	4620      	mov	r0, r4
 80016a6:	bd10      	pop	{r4, pc}

080016a8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80016a8:	b510      	push	{r4, lr}
 80016aa:	4b08      	ldr	r3, [pc, #32]	; (80016cc <_ZN12FrontendHeapD1Ev+0x24>)
 80016ac:	6003      	str	r3, [r0, #0]
 80016ae:	4604      	mov	r4, r0
 80016b0:	f500 60ce 	add.w	r0, r0, #1648	; 0x670
 80016b4:	f7ff ffba 	bl	800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80016b8:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80016bc:	f7ff ffca 	bl	8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18sequenceScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016c0:	f104 0014 	add.w	r0, r4, #20
 80016c4:	f7ff ffdc 	bl	8001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016c8:	4620      	mov	r0, r4
 80016ca:	bd10      	pop	{r4, pc}
 80016cc:	0801d8c8 	.word	0x0801d8c8

080016d0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80016d0:	b508      	push	{r3, lr}
 80016d2:	4802      	ldr	r0, [pc, #8]	; (80016dc <__tcf_0+0xc>)
 80016d4:	f7ff ffe8 	bl	80016a8 <_ZN12FrontendHeapD1Ev>
 80016d8:	bd08      	pop	{r3, pc}
 80016da:	bf00      	nop
 80016dc:	200001a8 	.word	0x200001a8

080016e0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80016e0:	b510      	push	{r4, lr}
 80016e2:	4604      	mov	r4, r0
 80016e4:	f7ff ffe0 	bl	80016a8 <_ZN12FrontendHeapD1Ev>
 80016e8:	4620      	mov	r0, r4
 80016ea:	f640 0128 	movw	r1, #2088	; 0x828
 80016ee:	f01a fe01 	bl	801c2f4 <_ZdlPvj>
 80016f2:	4620      	mov	r0, r4
 80016f4:	bd10      	pop	{r4, pc}
	...

080016f8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80016f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80016fc:	f001 f982 	bl	8002a04 <_ZN14BitmapDatabase11getInstanceEv>
 8001700:	4605      	mov	r5, r0
 8001702:	f001 f983 	bl	8002a0c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001706:	2400      	movs	r4, #0
 8001708:	4601      	mov	r1, r0
 800170a:	4623      	mov	r3, r4
 800170c:	4628      	mov	r0, r5
 800170e:	4622      	mov	r2, r4
 8001710:	9400      	str	r4, [sp, #0]
 8001712:	f00f f939 	bl	8010988 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001716:	4b25      	ldr	r3, [pc, #148]	; (80017ac <touchgfx_init+0xb4>)
 8001718:	4a25      	ldr	r2, [pc, #148]	; (80017b0 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 800171a:	4d26      	ldr	r5, [pc, #152]	; (80017b4 <touchgfx_init+0xbc>)
 800171c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800171e:	4620      	mov	r0, r4
 8001720:	f002 f88e 	bl	8003840 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001724:	4824      	ldr	r0, [pc, #144]	; (80017b8 <touchgfx_init+0xc0>)
 8001726:	f00f f879 	bl	801081c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800172a:	782b      	ldrb	r3, [r5, #0]
 800172c:	f3bf 8f5b 	dmb	ish
 8001730:	07db      	lsls	r3, r3, #31
 8001732:	d435      	bmi.n	80017a0 <touchgfx_init+0xa8>
 8001734:	4628      	mov	r0, r5
 8001736:	f01a fdf0 	bl	801c31a <__cxa_guard_acquire>
 800173a:	b388      	cbz	r0, 80017a0 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800173c:	4c1f      	ldr	r4, [pc, #124]	; (80017bc <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800173e:	4b20      	ldr	r3, [pc, #128]	; (80017c0 <touchgfx_init+0xc8>)
 8001740:	6023      	str	r3, [r4, #0]
 8001742:	f504 66da 	add.w	r6, r4, #1744	; 0x6d0
 8001746:	f104 0014 	add.w	r0, r4, #20
 800174a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800174e:	f504 67ce 	add.w	r7, r4, #1648	; 0x670
 8001752:	6060      	str	r0, [r4, #4]
 8001754:	f8c4 8008 	str.w	r8, [r4, #8]
 8001758:	60e7      	str	r7, [r4, #12]
 800175a:	6126      	str	r6, [r4, #16]
 800175c:	f008 fd2a 	bl	800a1b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001760:	4b18      	ldr	r3, [pc, #96]	; (80017c4 <touchgfx_init+0xcc>)
 8001762:	6163      	str	r3, [r4, #20]
 8001764:	4640      	mov	r0, r8
 8001766:	f008 fd25 	bl	800a1b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800176a:	4b17      	ldr	r3, [pc, #92]	; (80017c8 <touchgfx_init+0xd0>)
 800176c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800176e:	4638      	mov	r0, r7
 8001770:	f008 fd20 	bl	800a1b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001774:	4b15      	ldr	r3, [pc, #84]	; (80017cc <touchgfx_init+0xd4>)
 8001776:	f8c4 3670 	str.w	r3, [r4, #1648]	; 0x670
 800177a:	f204 60cc 	addw	r0, r4, #1740	; 0x6cc
 800177e:	f002 ffdf 	bl	8004740 <_ZN5ModelC1Ev>
 8001782:	4622      	mov	r2, r4
 8001784:	f204 61cc 	addw	r1, r4, #1740	; 0x6cc
 8001788:	4630      	mov	r0, r6
 800178a:	f002 ffcf 	bl	800472c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800178e:	4630      	mov	r0, r6
 8001790:	f001 fc04 	bl	8002f9c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001794:	4628      	mov	r0, r5
 8001796:	f01a fdcc 	bl	801c332 <__cxa_guard_release>
 800179a:	480d      	ldr	r0, [pc, #52]	; (80017d0 <touchgfx_init+0xd8>)
 800179c:	f01a fe0c 	bl	801c3b8 <atexit>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 80017a0:	480c      	ldr	r0, [pc, #48]	; (80017d4 <touchgfx_init+0xdc>)
}
 80017a2:	b002      	add	sp, #8
 80017a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80017a8:	f7ff bcb4 	b.w	8001114 <_ZN11TouchGFXHAL10initializeEv>
 80017ac:	20012534 	.word	0x20012534
 80017b0:	2000166c 	.word	0x2000166c
 80017b4:	200001a4 	.word	0x200001a4
 80017b8:	20000008 	.word	0x20000008
 80017bc:	200001a8 	.word	0x200001a8
 80017c0:	0801d8c8 	.word	0x0801d8c8
 80017c4:	0801d82c 	.word	0x0801d82c
 80017c8:	0801d860 	.word	0x0801d860
 80017cc:	0801d894 	.word	0x0801d894
 80017d0:	080016d1 	.word	0x080016d1
 80017d4:	200015f4 	.word	0x200015f4

080017d8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80017d8:	4801      	ldr	r0, [pc, #4]	; (80017e0 <touchgfx_taskEntry+0x8>)
 80017da:	f7ff bbbd 	b.w	8000f58 <_ZN11TouchGFXHAL9taskEntryEv>
 80017de:	bf00      	nop
 80017e0:	200015f4 	.word	0x200015f4

080017e4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80017e4:	b570      	push	{r4, r5, r6, lr}
static STM32F4DMA dma;
 80017e6:	4e28      	ldr	r6, [pc, #160]	; (8001888 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
{
public:

    STM32TouchController() {}
 80017e8:	4c28      	ldr	r4, [pc, #160]	; (800188c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
static LCD16bpp display;
 80017ea:	4d29      	ldr	r5, [pc, #164]	; (8001890 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 80017ec:	4b29      	ldr	r3, [pc, #164]	; (8001894 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80017ee:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80017f0:	4630      	mov	r0, r6
 80017f2:	f7ff fed3 	bl	800159c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80017f6:	4628      	mov	r0, r5
 80017f8:	f012 f8c0 	bl	801397c <_ZN8touchgfx8LCD16bppC1Ev>
          useDMAAcceleration(true)
 80017fc:	4b26      	ldr	r3, [pc, #152]	; (8001898 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 80017fe:	4827      	ldr	r0, [pc, #156]	; (800189c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001800:	6658      	str	r0, [r3, #100]	; 0x64
        instance = this;
 8001802:	4827      	ldr	r0, [pc, #156]	; (80018a0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useDMAAcceleration(true)
 8001804:	60dc      	str	r4, [r3, #12]
 8001806:	2200      	movs	r2, #0
 8001808:	2101      	movs	r1, #1
 800180a:	e9c3 6501 	strd	r6, r5, [r3, #4]
 800180e:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8001812:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001816:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800181a:	851a      	strh	r2, [r3, #40]	; 0x28
 800181c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001820:	62da      	str	r2, [r3, #44]	; 0x2c
 8001822:	861a      	strh	r2, [r3, #48]	; 0x30
 8001824:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001828:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 800182c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001830:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        this->x = 0;
 8001834:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
        this->y = 0;
 8001838:	655a      	str	r2, [r3, #84]	; 0x54
 800183a:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800183e:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8001842:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 8001846:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800184a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800184e:	671a      	str	r2, [r3, #112]	; 0x70
 8001850:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001854:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8001858:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
 800185c:	f883 1077 	strb.w	r1, [r3, #119]	; 0x77
        instance = this;
 8001860:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 8001862:	4810      	ldr	r0, [pc, #64]	; (80018a4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        DISPLAY_HEIGHT = height;
 8001864:	4d10      	ldr	r5, [pc, #64]	; (80018a8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001866:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_WIDTH = width;
 800186a:	24f0      	movs	r4, #240	; 0xf0
 800186c:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 800186e:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8001872:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 8001874:	4d0d      	ldr	r5, [pc, #52]	; (80018ac <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8001876:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001878:	4a0d      	ldr	r2, [pc, #52]	; (80018b0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 800187a:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800187c:	4a0d      	ldr	r2, [pc, #52]	; (80018b4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 800187e:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001880:	4a0d      	ldr	r2, [pc, #52]	; (80018b8 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 8001882:	601a      	str	r2, [r3, #0]
}
 8001884:	bd70      	pop	{r4, r5, r6, pc}
 8001886:	bf00      	nop
 8001888:	200009d4 	.word	0x200009d4
 800188c:	200009d0 	.word	0x200009d0
 8001890:	20001670 	.word	0x20001670
 8001894:	0801d3f0 	.word	0x0801d3f0
 8001898:	200015f4 	.word	0x200015f4
 800189c:	01000001 	.word	0x01000001
 80018a0:	200124b8 	.word	0x200124b8
 80018a4:	200124ac 	.word	0x200124ac
 80018a8:	200124ae 	.word	0x200124ae
 80018ac:	200124b0 	.word	0x200124b0
 80018b0:	200124b2 	.word	0x200124b2
 80018b4:	200124b4 	.word	0x200124b4
 80018b8:	0801d4a4 	.word	0x0801d4a4

080018bc <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 80018bc:	4801      	ldr	r0, [pc, #4]	; (80018c4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80018be:	f7ff bcfd 	b.w	80012bc <_ZN10STM32F4DMAD1Ev>
 80018c2:	bf00      	nop
 80018c4:	200009d4 	.word	0x200009d4

080018c8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80018c8:	4b03      	ldr	r3, [pc, #12]	; (80018d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80018ca:	2290      	movs	r2, #144	; 0x90
 80018cc:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80018d0:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80018d4:	4770      	bx	lr
 80018d6:	bf00      	nop
 80018d8:	e000e100 	.word	0xe000e100

080018dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80018dc:	4a09      	ldr	r2, [pc, #36]	; (8001904 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80018de:	490a      	ldr	r1, [pc, #40]	; (8001908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80018e0:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80018e2:	480a      	ldr	r0, [pc, #40]	; (800190c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80018e4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80018e8:	3b01      	subs	r3, #1
 80018ea:	b29b      	uxth	r3, r3
 80018ec:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80018ee:	6911      	ldr	r1, [r2, #16]
 80018f0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80018f4:	3901      	subs	r1, #1
 80018f6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80018f8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80018fa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80018fc:	f043 0301 	orr.w	r3, r3, #1
 8001900:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001902:	4770      	bx	lr
 8001904:	40016800 	.word	0x40016800
 8001908:	200016ea 	.word	0x200016ea
 800190c:	200016e8 	.word	0x200016e8

08001910 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001910:	4b01      	ldr	r3, [pc, #4]	; (8001918 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001912:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 8001914:	4770      	bx	lr
 8001916:	bf00      	nop
 8001918:	40016884 	.word	0x40016884

0800191c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800191c:	4b02      	ldr	r3, [pc, #8]	; (8001928 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800191e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001920:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001922:	f843 2c60 	str.w	r2, [r3, #-96]
}
 8001926:	4770      	bx	lr
 8001928:	40016884 	.word	0x40016884

0800192c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800192c:	f009 bfb1 	b.w	800b892 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001930 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001930:	4b03      	ldr	r3, [pc, #12]	; (8001940 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001932:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001936:	609a      	str	r2, [r3, #8]
 8001938:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800193c:	609a      	str	r2, [r3, #8]
}
 800193e:	4770      	bx	lr
 8001940:	e000e100 	.word	0xe000e100

08001944 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001944:	4b08      	ldr	r3, [pc, #32]	; (8001968 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001946:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800194a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800194e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001952:	f3bf 8f6f 	isb	sy
 8001956:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800195a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800195e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001962:	f3bf 8f6f 	isb	sy
}
 8001966:	4770      	bx	lr
 8001968:	e000e100 	.word	0xe000e100

0800196c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800196c:	b538      	push	{r3, r4, r5, lr}
 800196e:	4604      	mov	r4, r0
    HAL::initialize();
 8001970:	f00a fa70 	bl	800be54 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(touchgfx::Application::getInstance()));
 8001974:	6823      	ldr	r3, [r4, #0]
 8001976:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8001978:	f00c fbfe 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800197c:	4601      	mov	r1, r0
 800197e:	4620      	mov	r0, r4
 8001980:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001982:	6823      	ldr	r3, [r4, #0]
 8001984:	4a05      	ldr	r2, [pc, #20]	; (800199c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001986:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 8001988:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800198c:	2300      	movs	r3, #0
 800198e:	4620      	mov	r0, r4
 8001990:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 8001992:	2300      	movs	r3, #0
 8001994:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8001998:	bd38      	pop	{r3, r4, r5, pc}
 800199a:	bf00      	nop
 800199c:	d0025800 	.word	0xd0025800

080019a0 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80019a0:	4b13      	ldr	r3, [pc, #76]	; (80019f0 <HAL_LTDC_LineEventCallback+0x50>)
 80019a2:	4a14      	ldr	r2, [pc, #80]	; (80019f4 <HAL_LTDC_LineEventCallback+0x54>)
 80019a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019a6:	8811      	ldrh	r1, [r2, #0]
 80019a8:	428b      	cmp	r3, r1
    {
 80019aa:	b510      	push	{r4, lr}
 80019ac:	4c12      	ldr	r4, [pc, #72]	; (80019f8 <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80019ae:	d113      	bne.n	80019d8 <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80019b0:	4b12      	ldr	r3, [pc, #72]	; (80019fc <HAL_LTDC_LineEventCallback+0x5c>)
 80019b2:	8819      	ldrh	r1, [r3, #0]
 80019b4:	f004 fe50 	bl	8006658 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80019b8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80019ba:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80019be:	3301      	adds	r3, #1
 80019c0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80019c4:	f7ff fc1c 	bl	8001200 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80019c8:	6820      	ldr	r0, [r4, #0]
 80019ca:	f00a fccb 	bl	800c364 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80019ce:	2000      	movs	r0, #0
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80019d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80019d4:	f7ff baa6 	b.w	8000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80019d8:	f004 fe3e 	bl	8006658 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80019dc:	2000      	movs	r0, #0
 80019de:	f7ff faa2 	bl	8000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80019e2:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80019e4:	6803      	ldr	r3, [r0, #0]
    }
 80019e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80019ea:	699b      	ldr	r3, [r3, #24]
 80019ec:	4718      	bx	r3
 80019ee:	bf00      	nop
 80019f0:	40016800 	.word	0x40016800
 80019f4:	200016ea 	.word	0x200016ea
 80019f8:	200124b8 	.word	0x200124b8
 80019fc:	200016e8 	.word	0x200016e8

08001a00 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a00:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a02:	4b06      	ldr	r3, [pc, #24]	; (8001a1c <SPI5_Write+0x1c>)
{
 8001a04:	a902      	add	r1, sp, #8
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a06:	681b      	ldr	r3, [r3, #0]
{
 8001a08:	f821 0d02 	strh.w	r0, [r1, #-2]!
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a0c:	2201      	movs	r2, #1
 8001a0e:	4804      	ldr	r0, [pc, #16]	; (8001a20 <SPI5_Write+0x20>)
 8001a10:	f005 fb1d 	bl	800704e <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a14:	b003      	add	sp, #12
 8001a16:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a1a:	bf00      	nop
 8001a1c:	20000010 	.word	0x20000010
 8001a20:	2001282c 	.word	0x2001282c

08001a24 <SystemClock_Config>:
{
 8001a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a26:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a28:	2210      	movs	r2, #16
 8001a2a:	2100      	movs	r1, #0
 8001a2c:	a80a      	add	r0, sp, #40	; 0x28
 8001a2e:	f01a fd2e 	bl	801c48e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a32:	2214      	movs	r2, #20
 8001a34:	2100      	movs	r1, #0
 8001a36:	a803      	add	r0, sp, #12
 8001a38:	f01a fd29 	bl	801c48e <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001a3c:	2100      	movs	r1, #0
 8001a3e:	2230      	movs	r2, #48	; 0x30
 8001a40:	a814      	add	r0, sp, #80	; 0x50
 8001a42:	f01a fd24 	bl	801c48e <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a46:	2400      	movs	r4, #0
 8001a48:	4b22      	ldr	r3, [pc, #136]	; (8001ad4 <SystemClock_Config+0xb0>)
 8001a4a:	9401      	str	r4, [sp, #4]
 8001a4c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a4e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001a52:	641a      	str	r2, [r3, #64]	; 0x40
 8001a54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a5a:	9301      	str	r3, [sp, #4]
 8001a5c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a5e:	4b1e      	ldr	r3, [pc, #120]	; (8001ad8 <SystemClock_Config+0xb4>)
 8001a60:	9402      	str	r4, [sp, #8]
 8001a62:	681a      	ldr	r2, [r3, #0]
 8001a64:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001a68:	601a      	str	r2, [r3, #0]
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001a70:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a72:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a74:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a76:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001a7a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001a7e:	2502      	movs	r5, #2
 8001a80:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001a84:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001a88:	2708      	movs	r7, #8
 8001a8a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a8e:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a90:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001a92:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001a96:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a98:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a9a:	f004 fdfb 	bl	8006694 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a9e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001aa0:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001aa4:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001aa8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001aac:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ab0:	a803      	add	r0, sp, #12
 8001ab2:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001ab4:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ab6:	f004 ffc1 	bl	8006a3c <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001aba:	23c0      	movs	r3, #192	; 0xc0
 8001abc:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001abe:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001ac4:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001ac6:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac8:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001aca:	f005 f87f 	bl	8006bcc <HAL_RCCEx_PeriphCLKConfig>
}
 8001ace:	b021      	add	sp, #132	; 0x84
 8001ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ad2:	bf00      	nop
 8001ad4:	40023800 	.word	0x40023800
 8001ad8:	40007000 	.word	0x40007000

08001adc <main>:
{
 8001adc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001ae0:	b09f      	sub	sp, #124	; 0x7c
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ae2:	2400      	movs	r4, #0
 8001ae4:	4dc7      	ldr	r5, [pc, #796]	; (8001e04 <main+0x328>)
  hi2c3.Instance = I2C3;
 8001ae6:	4ec8      	ldr	r6, [pc, #800]	; (8001e08 <main+0x32c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ae8:	f8df b360 	ldr.w	fp, [pc, #864]	; 8001e4c <main+0x370>
  HAL_Init();
 8001aec:	f003 fb54 	bl	8005198 <HAL_Init>
  SystemClock_Config();
 8001af0:	f7ff ff98 	bl	8001a24 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001af4:	2214      	movs	r2, #20
 8001af6:	2100      	movs	r1, #0
 8001af8:	a811      	add	r0, sp, #68	; 0x44
 8001afa:	f01a fcc8 	bl	801c48e <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001afe:	9402      	str	r4, [sp, #8]
 8001b00:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b02:	48c2      	ldr	r0, [pc, #776]	; (8001e0c <main+0x330>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b04:	f043 0320 	orr.w	r3, r3, #32
 8001b08:	632b      	str	r3, [r5, #48]	; 0x30
 8001b0a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b0c:	f003 0320 	and.w	r3, r3, #32
 8001b10:	9302      	str	r3, [sp, #8]
 8001b12:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b14:	9403      	str	r4, [sp, #12]
 8001b16:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001b1c:	632b      	str	r3, [r5, #48]	; 0x30
 8001b1e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b20:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b24:	9303      	str	r3, [sp, #12]
 8001b26:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b28:	9404      	str	r4, [sp, #16]
 8001b2a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b2c:	f043 0304 	orr.w	r3, r3, #4
 8001b30:	632b      	str	r3, [r5, #48]	; 0x30
 8001b32:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b34:	f003 0304 	and.w	r3, r3, #4
 8001b38:	9304      	str	r3, [sp, #16]
 8001b3a:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b3c:	9405      	str	r4, [sp, #20]
 8001b3e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b40:	f043 0301 	orr.w	r3, r3, #1
 8001b44:	632b      	str	r3, [r5, #48]	; 0x30
 8001b46:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b48:	f003 0301 	and.w	r3, r3, #1
 8001b4c:	9305      	str	r3, [sp, #20]
 8001b4e:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b50:	9406      	str	r4, [sp, #24]
 8001b52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b54:	f043 0302 	orr.w	r3, r3, #2
 8001b58:	632b      	str	r3, [r5, #48]	; 0x30
 8001b5a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b5c:	f003 0302 	and.w	r3, r3, #2
 8001b60:	9306      	str	r3, [sp, #24]
 8001b62:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b64:	9407      	str	r4, [sp, #28]
 8001b66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001b6c:	632b      	str	r3, [r5, #48]	; 0x30
 8001b6e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b70:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001b74:	9307      	str	r3, [sp, #28]
 8001b76:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b78:	9408      	str	r4, [sp, #32]
 8001b7a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b7c:	f043 0310 	orr.w	r3, r3, #16
 8001b80:	632b      	str	r3, [r5, #48]	; 0x30
 8001b82:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b84:	f003 0310 	and.w	r3, r3, #16
 8001b88:	9308      	str	r3, [sp, #32]
 8001b8a:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b8c:	9409      	str	r4, [sp, #36]	; 0x24
 8001b8e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b90:	f043 0308 	orr.w	r3, r3, #8
 8001b94:	632b      	str	r3, [r5, #48]	; 0x30
 8001b96:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b98:	f003 0308 	and.w	r3, r3, #8
 8001b9c:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b9e:	4622      	mov	r2, r4
 8001ba0:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ba4:	f003 ff7e 	bl	8005aa4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001ba8:	4622      	mov	r2, r4
 8001baa:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001bae:	4898      	ldr	r0, [pc, #608]	; (8001e10 <main+0x334>)
 8001bb0:	f003 ff78 	bl	8005aa4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bb4:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bb6:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bba:	f04f 0904 	mov.w	r9, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bbe:	a911      	add	r1, sp, #68	; 0x44
 8001bc0:	4892      	ldr	r0, [pc, #584]	; (8001e0c <main+0x330>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bc2:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bc6:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bca:	9413      	str	r4, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bcc:	f003 fe7e 	bl	80058cc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bd0:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001bd2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bd6:	488e      	ldr	r0, [pc, #568]	; (8001e10 <main+0x334>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bd8:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bdc:	e9cd 4813 	strd	r4, r8, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001be0:	f003 fe74 	bl	80058cc <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001be4:	488b      	ldr	r0, [pc, #556]	; (8001e14 <main+0x338>)
 8001be6:	4b8c      	ldr	r3, [pc, #560]	; (8001e18 <main+0x33c>)
 8001be8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001bea:	f003 fb7d 	bl	80052e8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001bee:	4a8b      	ldr	r2, [pc, #556]	; (8001e1c <main+0x340>)
 8001bf0:	4b8b      	ldr	r3, [pc, #556]	; (8001e20 <main+0x344>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001bf2:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001bf4:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001bf8:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001bfa:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001bfe:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001c02:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c06:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c0a:	f004 f925 	bl	8005e58 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001c0e:	2110      	movs	r1, #16
 8001c10:	4630      	mov	r0, r6
 8001c12:	f004 fb69 	bl	80062e8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c16:	4621      	mov	r1, r4
 8001c18:	4630      	mov	r0, r6
 8001c1a:	f004 fb84 	bl	8006326 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001c1e:	4881      	ldr	r0, [pc, #516]	; (8001e24 <main+0x348>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c20:	4981      	ldr	r1, [pc, #516]	; (8001e28 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001c22:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c24:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001c28:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001c2c:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001c30:	2318      	movs	r3, #24
 8001c32:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001c36:	230a      	movs	r3, #10
 8001c38:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001c3a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001c3e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001c42:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001c46:	f005 f9c5 	bl	8006fd4 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001c4a:	4a78      	ldr	r2, [pc, #480]	; (8001e2c <main+0x350>)
  SdramTiming.LoadToActiveDelay = 2;
 8001c4c:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001c50:	f04f 0a10 	mov.w	sl, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001c54:	e9cb 2700 	strd	r2, r7, [fp]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001c58:	2240      	movs	r2, #64	; 0x40
 8001c5a:	e9cb a204 	strd	sl, r2, [fp, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001c5e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001c62:	e9cb 2406 	strd	r2, r4, [fp, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001c66:	f44f 6200 	mov.w	r2, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001c6a:	e9cb 2408 	strd	r2, r4, [fp, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c6e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001c72:	2303      	movs	r3, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c74:	f8cb 2028 	str.w	r2, [fp, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c78:	a911      	add	r1, sp, #68	; 0x44
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001c7a:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c7c:	4658      	mov	r0, fp
  SdramTiming.RPDelay = 2;
 8001c7e:	e9cd 3815 	strd	r3, r8, [sp, #84]	; 0x54
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c82:	2608      	movs	r6, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001c84:	e9cb 4902 	strd	r4, r9, [fp, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001c88:	e9cd 2912 	strd	r2, r9, [sp, #72]	; 0x48
  SdramTiming.RowCycleDelay = 7;
 8001c8c:	9214      	str	r2, [sp, #80]	; 0x50
  SdramTiming.RCDDelay = 2;
 8001c8e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c92:	f005 f8c5 	bl	8006e20 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001c96:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c9a:	a90d      	add	r1, sp, #52	; 0x34
 8001c9c:	4658      	mov	r0, fp
  Command->AutoRefreshNumber       = 1;
 8001c9e:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001ca2:	970d      	str	r7, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001ca4:	940a      	str	r4, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 8001ca6:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ca8:	f005 f8da 	bl	8006e60 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001cac:	4638      	mov	r0, r7
 8001cae:	f003 fa9f 	bl	80051f0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001cb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cb6:	a90d      	add	r1, sp, #52	; 0x34
 8001cb8:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cba:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001cbe:	e9cd 740f 	strd	r7, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001cc2:	f005 f8cd 	bl	8006e60 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001cc6:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ccc:	a90d      	add	r1, sp, #52	; 0x34
 8001cce:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cd0:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001cd4:	e9cd 940f 	strd	r9, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cd8:	f005 f8c2 	bl	8006e60 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001cdc:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001ce0:	920a      	str	r2, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 8001ce2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001ce4:	9210      	str	r2, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ce6:	a90d      	add	r1, sp, #52	; 0x34
 8001ce8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cec:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cee:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  Command->AutoRefreshNumber       = 1;
 8001cf2:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cf4:	f005 f8b4 	bl	8006e60 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001cf8:	f240 516a 	movw	r1, #1386	; 0x56a
 8001cfc:	4658      	mov	r0, fp
 8001cfe:	f005 f8c6 	bl	8006e8e <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001d02:	2234      	movs	r2, #52	; 0x34
 8001d04:	4621      	mov	r1, r4
 8001d06:	a811      	add	r0, sp, #68	; 0x44
 8001d08:	f01a fbc1 	bl	801c48e <memset>
  hltdc.Instance = LTDC;
 8001d0c:	4e48      	ldr	r6, [pc, #288]	; (8001e30 <main+0x354>)
 8001d0e:	4b49      	ldr	r3, [pc, #292]	; (8001e34 <main+0x358>)
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001d10:	6134      	str	r4, [r6, #16]
  hltdc.Instance = LTDC;
 8001d12:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001d16:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedHBP = 29;
 8001d18:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.HorizontalSync = 9;
 8001d1c:	e9c6 3705 	strd	r3, r7, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001d20:	2303      	movs	r3, #3
 8001d22:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveW = 269;
 8001d26:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001d2a:	f240 1343 	movw	r3, #323	; 0x143
 8001d2e:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalWidth = 279;
 8001d32:	f240 1b17 	movw	fp, #279	; 0x117
 8001d36:	f240 1347 	movw	r3, #327	; 0x147
 8001d3a:	e9c6 b30b 	strd	fp, r3, [r6, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001d3e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.TotalHeigh = 327;
 8001d42:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001d44:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001d48:	4630      	mov	r0, r6
 8001d4a:	f004 fb91 	bl	8006470 <HAL_LTDC_Init>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001d4e:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
 8001d50:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha = 255;
 8001d52:	e9cd 1416 	strd	r1, r4, [sp, #88]	; 0x58
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001d56:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8001d5a:	2105      	movs	r1, #5
  pLayerCfg.WindowY0 = 0;
 8001d5c:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001d60:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  pLayerCfg.WindowX1 = 240;
 8001d64:	e9cd 2412 	strd	r2, r4, [sp, #72]	; 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d68:	a911      	add	r1, sp, #68	; 0x44
  pLayerCfg.FBStartAdress = 0;
 8001d6a:	e9cd 421a 	strd	r4, r2, [sp, #104]	; 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d6e:	4630      	mov	r0, r6
 8001d70:	4622      	mov	r2, r4
  pLayerCfg.WindowY1 = 320;
 8001d72:	e9cd 3814 	strd	r3, r8, [sp, #80]	; 0x50
  LcdDrv = &ili9341_drv;
 8001d76:	4e30      	ldr	r6, [pc, #192]	; (8001e38 <main+0x35c>)
  pLayerCfg.ImageWidth = 240;
 8001d78:	931c      	str	r3, [sp, #112]	; 0x70
  pLayerCfg.WindowX0 = 0;
 8001d7a:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.ImageHeight = 320;
 8001d7c:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
  pLayerCfg.Backcolor.Green = 0;
 8001d80:	f88d 4076 	strb.w	r4, [sp, #118]	; 0x76
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d84:	f004 fc3f 	bl	8006606 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001d88:	4b2c      	ldr	r3, [pc, #176]	; (8001e3c <main+0x360>)
 8001d8a:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001d90:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 8001d92:	4e2b      	ldr	r6, [pc, #172]	; (8001e40 <main+0x364>)
  LcdDrv->DisplayOff();
 8001d94:	68db      	ldr	r3, [r3, #12]
 8001d96:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001d98:	4b2a      	ldr	r3, [pc, #168]	; (8001e44 <main+0x368>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001d9a:	e9c6 480a 	strd	r4, r8, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001d9e:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001da2:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001da4:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001da8:	e9c6 8402 	strd	r8, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001dac:	f003 fbbc 	bl	8005528 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001db0:	4639      	mov	r1, r7
 8001db2:	4630      	mov	r0, r6
 8001db4:	f003 fd40 	bl	8005838 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001db8:	f7ff f809 	bl	8000dce <MX_TouchGFX_Init>
  */
static void MX_DMA_Init(void)
{

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dbc:	9401      	str	r4, [sp, #4]
 8001dbe:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dc0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001dc4:	632b      	str	r3, [r5, #48]	; 0x30
 8001dc6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  htim2.Instance = TIM2;
 8001dc8:	4d1f      	ldr	r5, [pc, #124]	; (8001e48 <main+0x36c>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dca:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001dce:	9301      	str	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dd0:	4652      	mov	r2, sl
 8001dd2:	4621      	mov	r1, r4
 8001dd4:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dd6:	9b01      	ldr	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dd8:	f01a fb59 	bl	801c48e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ddc:	221c      	movs	r2, #28
 8001dde:	4621      	mov	r1, r4
 8001de0:	a811      	add	r0, sp, #68	; 0x44
  htim2.Init.Prescaler = 167;
 8001de2:	f04f 0ba7 	mov.w	fp, #167	; 0xa7
  htim2.Init.Period = 9999;
 8001de6:	f242 780f 	movw	r8, #9999	; 0x270f
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001dea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001dee:	f01a fb4e 	bl	801c48e <memset>
  htim2.Init.Prescaler = 167;
 8001df2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001df6:	4628      	mov	r0, r5
  htim2.Init.Prescaler = 167;
 8001df8:	e9c5 3b00 	strd	r3, fp, [r5]
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001dfc:	f44f 5780 	mov.w	r7, #4096	; 0x1000
 8001e00:	e026      	b.n	8001e50 <main+0x374>
 8001e02:	bf00      	nop
 8001e04:	40023800 	.word	0x40023800
 8001e08:	200127d8 	.word	0x200127d8
 8001e0c:	40020800 	.word	0x40020800
 8001e10:	40020c00 	.word	0x40020c00
 8001e14:	200128c4 	.word	0x200128c4
 8001e18:	40023000 	.word	0x40023000
 8001e1c:	40005c00 	.word	0x40005c00
 8001e20:	000186a0 	.word	0x000186a0
 8001e24:	2001282c 	.word	0x2001282c
 8001e28:	40015000 	.word	0x40015000
 8001e2c:	a0000140 	.word	0xa0000140
 8001e30:	200129ac 	.word	0x200129ac
 8001e34:	40016800 	.word	0x40016800
 8001e38:	200016ec 	.word	0x200016ec
 8001e3c:	20000024 	.word	0x20000024
 8001e40:	20012b18 	.word	0x20012b18
 8001e44:	4002b000 	.word	0x4002b000
 8001e48:	20012b58 	.word	0x20012b58
 8001e4c:	20012bf8 	.word	0x20012bf8
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e50:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e52:	e9c5 8403 	strd	r8, r4, [r5, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e56:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001e58:	f005 fd1a 	bl	8007890 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e5c:	a90d      	add	r1, sp, #52	; 0x34
 8001e5e:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001e60:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e62:	f005 fdeb 	bl	8007a3c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001e66:	4628      	mov	r0, r5
 8001e68:	f005 fd2c 	bl	80078c4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e6c:	a90b      	add	r1, sp, #44	; 0x2c
 8001e6e:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001e70:	2660      	movs	r6, #96	; 0x60
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e72:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e76:	f005 ff0d 	bl	8007c94 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001e7a:	220c      	movs	r2, #12
 8001e7c:	a911      	add	r1, sp, #68	; 0x44
 8001e7e:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001e80:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001e84:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001e86:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001e88:	f005 fd6c 	bl	8007964 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim2);
 8001e8c:	4628      	mov	r0, r5
 8001e8e:	f000 fc87 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e92:	4652      	mov	r2, sl
 8001e94:	4621      	mov	r1, r4
 8001e96:	a80d      	add	r0, sp, #52	; 0x34
  htim3.Instance = TIM3;
 8001e98:	4d4d      	ldr	r5, [pc, #308]	; (8001fd0 <main+0x4f4>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e9a:	f01a faf8 	bl	801c48e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001e9e:	221c      	movs	r2, #28
 8001ea0:	4621      	mov	r1, r4
 8001ea2:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ea4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ea8:	f01a faf1 	bl	801c48e <memset>
  htim3.Instance = TIM3;
 8001eac:	4b49      	ldr	r3, [pc, #292]	; (8001fd4 <main+0x4f8>)
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001eae:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001eb0:	4628      	mov	r0, r5
  htim3.Init.Prescaler = 167;
 8001eb2:	e9c5 3b00 	strd	r3, fp, [r5]
  htim3.Init.Period = 9999;
 8001eb6:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001eba:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001ebc:	f005 fce8 	bl	8007890 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001ec0:	a90d      	add	r1, sp, #52	; 0x34
 8001ec2:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001ec4:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001ec6:	f005 fdb9 	bl	8007a3c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001eca:	4628      	mov	r0, r5
 8001ecc:	f005 fcfa 	bl	80078c4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ed0:	a90b      	add	r1, sp, #44	; 0x2c
 8001ed2:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ed4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ed8:	f005 fedc 	bl	8007c94 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001edc:	464a      	mov	r2, r9
 8001ede:	a911      	add	r1, sp, #68	; 0x44
 8001ee0:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001ee2:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001ee6:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001ee8:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001eea:	f005 fd3b 	bl	8007964 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 8001eee:	4628      	mov	r0, r5
 8001ef0:	f000 fc56 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ef4:	4652      	mov	r2, sl
 8001ef6:	4621      	mov	r1, r4
 8001ef8:	a80d      	add	r0, sp, #52	; 0x34
  htim4.Instance = TIM4;
 8001efa:	4d37      	ldr	r5, [pc, #220]	; (8001fd8 <main+0x4fc>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001efc:	f01a fac7 	bl	801c48e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f00:	221c      	movs	r2, #28
 8001f02:	4621      	mov	r1, r4
 8001f04:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f0a:	f01a fac0 	bl	801c48e <memset>
  htim4.Instance = TIM4;
 8001f0e:	4b33      	ldr	r3, [pc, #204]	; (8001fdc <main+0x500>)
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f10:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001f12:	4628      	mov	r0, r5
  htim4.Init.Prescaler = 167;
 8001f14:	e9c5 3b00 	strd	r3, fp, [r5]
  htim4.Init.Period = 9999;
 8001f18:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f1c:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001f1e:	f005 fcb7 	bl	8007890 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001f22:	a90d      	add	r1, sp, #52	; 0x34
 8001f24:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f26:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001f28:	f005 fd88 	bl	8007a3c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001f2c:	4628      	mov	r0, r5
 8001f2e:	f005 fcc9 	bl	80078c4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001f32:	a90b      	add	r1, sp, #44	; 0x2c
 8001f34:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f36:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001f3a:	f005 feab 	bl	8007c94 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f3e:	4622      	mov	r2, r4
 8001f40:	a911      	add	r1, sp, #68	; 0x44
 8001f42:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001f44:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001f48:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001f4a:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f4c:	f005 fd0a 	bl	8007964 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim4);
 8001f50:	4628      	mov	r0, r5
 8001f52:	f000 fc25 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f56:	4652      	mov	r2, sl
 8001f58:	4621      	mov	r1, r4
 8001f5a:	a80d      	add	r0, sp, #52	; 0x34
  htim5.Instance = TIM5;
 8001f5c:	4d20      	ldr	r5, [pc, #128]	; (8001fe0 <main+0x504>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f5e:	f01a fa96 	bl	801c48e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f62:	221c      	movs	r2, #28
 8001f64:	4621      	mov	r1, r4
 8001f66:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f68:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f6c:	f01a fa8f 	bl	801c48e <memset>
  htim5.Instance = TIM5;
 8001f70:	4b1c      	ldr	r3, [pc, #112]	; (8001fe4 <main+0x508>)
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f72:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001f74:	4628      	mov	r0, r5
  htim5.Init.Prescaler = 167;
 8001f76:	e9c5 3b00 	strd	r3, fp, [r5]
  htim5.Init.Period = 9999;
 8001f7a:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f7e:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001f80:	f005 fc86 	bl	8007890 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001f84:	a90d      	add	r1, sp, #52	; 0x34
 8001f86:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f88:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001f8a:	f005 fd57 	bl	8007a3c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8001f8e:	4628      	mov	r0, r5
 8001f90:	f005 fc98 	bl	80078c4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001f94:	a90b      	add	r1, sp, #44	; 0x2c
 8001f96:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f98:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001f9c:	f005 fe7a 	bl	8007c94 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fa0:	4622      	mov	r2, r4
 8001fa2:	a911      	add	r1, sp, #68	; 0x44
 8001fa4:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001fa6:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001faa:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001fac:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fae:	f005 fcd9 	bl	8007964 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim5);
 8001fb2:	4628      	mov	r0, r5
 8001fb4:	f000 fbf4 	bl	80027a0 <HAL_TIM_MspPostInit>
  osKernelInitialize();
 8001fb8:	f005 ff4e 	bl	8007e58 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001fbc:	4a0a      	ldr	r2, [pc, #40]	; (8001fe8 <main+0x50c>)
 8001fbe:	480b      	ldr	r0, [pc, #44]	; (8001fec <main+0x510>)
 8001fc0:	4621      	mov	r1, r4
 8001fc2:	f005 ff83 	bl	8007ecc <osThreadNew>
 8001fc6:	4b0a      	ldr	r3, [pc, #40]	; (8001ff0 <main+0x514>)
 8001fc8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001fca:	f005 ff5f 	bl	8007e8c <osKernelStart>
 8001fce:	e7fe      	b.n	8001fce <main+0x4f2>
 8001fd0:	2001296c 	.word	0x2001296c
 8001fd4:	40000400 	.word	0x40000400
 8001fd8:	20012884 	.word	0x20012884
 8001fdc:	40000800 	.word	0x40000800
 8001fe0:	2001292c 	.word	0x2001292c
 8001fe4:	40000c00 	.word	0x40000c00
 8001fe8:	0801d8d4 	.word	0x0801d8d4
 8001fec:	08000dd3 	.word	0x08000dd3
 8001ff0:	20012b14 	.word	0x20012b14

08001ff4 <IOE_Init>:
 8001ff4:	4770      	bx	lr

08001ff6 <IOE_ITConfig>:
 8001ff6:	4770      	bx	lr

08001ff8 <IOE_Write>:
{
 8001ff8:	b510      	push	{r4, lr}
 8001ffa:	b086      	sub	sp, #24
 8001ffc:	ac06      	add	r4, sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001ffe:	4b07      	ldr	r3, [pc, #28]	; (800201c <IOE_Write+0x24>)
 8002000:	f804 2d01 	strb.w	r2, [r4, #-1]!
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	9302      	str	r3, [sp, #8]
 8002008:	2301      	movs	r3, #1
 800200a:	460a      	mov	r2, r1
 800200c:	e9cd 4300 	strd	r4, r3, [sp]
 8002010:	4601      	mov	r1, r0
 8002012:	4803      	ldr	r0, [pc, #12]	; (8002020 <IOE_Write+0x28>)
 8002014:	f003 ffcc 	bl	8005fb0 <HAL_I2C_Mem_Write>
}
 8002018:	b006      	add	sp, #24
 800201a:	bd10      	pop	{r4, pc}
 800201c:	2000000c 	.word	0x2000000c
 8002020:	200127d8 	.word	0x200127d8

08002024 <IOE_Read>:
{
 8002024:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8002026:	aa06      	add	r2, sp, #24
 8002028:	2300      	movs	r3, #0
 800202a:	f802 3d01 	strb.w	r3, [r2, #-1]!
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800202e:	4b08      	ldr	r3, [pc, #32]	; (8002050 <IOE_Read+0x2c>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	9302      	str	r3, [sp, #8]
 8002034:	2301      	movs	r3, #1
 8002036:	e9cd 2300 	strd	r2, r3, [sp]
 800203a:	460a      	mov	r2, r1
 800203c:	4601      	mov	r1, r0
 800203e:	4805      	ldr	r0, [pc, #20]	; (8002054 <IOE_Read+0x30>)
 8002040:	f004 f846 	bl	80060d0 <HAL_I2C_Mem_Read>
}
 8002044:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002048:	b007      	add	sp, #28
 800204a:	f85d fb04 	ldr.w	pc, [sp], #4
 800204e:	bf00      	nop
 8002050:	2000000c 	.word	0x2000000c
 8002054:	200127d8 	.word	0x200127d8

08002058 <IOE_ReadMultiple>:
{
 8002058:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800205a:	4c08      	ldr	r4, [pc, #32]	; (800207c <IOE_ReadMultiple+0x24>)
 800205c:	6824      	ldr	r4, [r4, #0]
 800205e:	9200      	str	r2, [sp, #0]
 8002060:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002064:	460a      	mov	r2, r1
 8002066:	2301      	movs	r3, #1
 8002068:	4601      	mov	r1, r0
 800206a:	4805      	ldr	r0, [pc, #20]	; (8002080 <IOE_ReadMultiple+0x28>)
 800206c:	f004 f830 	bl	80060d0 <HAL_I2C_Mem_Read>
}
 8002070:	3000      	adds	r0, #0
 8002072:	bf18      	it	ne
 8002074:	2001      	movne	r0, #1
 8002076:	b004      	add	sp, #16
 8002078:	bd10      	pop	{r4, pc}
 800207a:	bf00      	nop
 800207c:	2000000c 	.word	0x2000000c
 8002080:	200127d8 	.word	0x200127d8

08002084 <IOE_Delay>:
 8002084:	f003 b8b4 	b.w	80051f0 <HAL_Delay>

08002088 <LCD_IO_Init>:
{
 8002088:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800208a:	4c06      	ldr	r4, [pc, #24]	; (80020a4 <LCD_IO_Init+0x1c>)
 800208c:	2200      	movs	r2, #0
 800208e:	4620      	mov	r0, r4
 8002090:	2104      	movs	r1, #4
 8002092:	f003 fd07 	bl	8005aa4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002096:	4620      	mov	r0, r4
 8002098:	2201      	movs	r2, #1
 800209a:	2104      	movs	r1, #4
}
 800209c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020a0:	f003 bd00 	b.w	8005aa4 <HAL_GPIO_WritePin>
 80020a4:	40020800 	.word	0x40020800

080020a8 <LCD_IO_WriteData>:
{
 80020a8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020aa:	4c0b      	ldr	r4, [pc, #44]	; (80020d8 <LCD_IO_WriteData+0x30>)
{
 80020ac:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020ae:	2201      	movs	r2, #1
 80020b0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020b4:	4809      	ldr	r0, [pc, #36]	; (80020dc <LCD_IO_WriteData+0x34>)
 80020b6:	f003 fcf5 	bl	8005aa4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020ba:	2200      	movs	r2, #0
 80020bc:	2104      	movs	r1, #4
 80020be:	4620      	mov	r0, r4
 80020c0:	f003 fcf0 	bl	8005aa4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80020c4:	4628      	mov	r0, r5
 80020c6:	f7ff fc9b 	bl	8001a00 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020ca:	4620      	mov	r0, r4
 80020cc:	2201      	movs	r2, #1
 80020ce:	2104      	movs	r1, #4
}
 80020d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020d4:	f003 bce6 	b.w	8005aa4 <HAL_GPIO_WritePin>
 80020d8:	40020800 	.word	0x40020800
 80020dc:	40020c00 	.word	0x40020c00

080020e0 <LCD_IO_WriteReg>:
{
 80020e0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020e2:	4c0b      	ldr	r4, [pc, #44]	; (8002110 <LCD_IO_WriteReg+0x30>)
{
 80020e4:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80020e6:	2200      	movs	r2, #0
 80020e8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020ec:	4809      	ldr	r0, [pc, #36]	; (8002114 <LCD_IO_WriteReg+0x34>)
 80020ee:	f003 fcd9 	bl	8005aa4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020f2:	2200      	movs	r2, #0
 80020f4:	2104      	movs	r1, #4
 80020f6:	4620      	mov	r0, r4
 80020f8:	f003 fcd4 	bl	8005aa4 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80020fc:	4628      	mov	r0, r5
 80020fe:	f7ff fc7f 	bl	8001a00 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002102:	4620      	mov	r0, r4
 8002104:	2201      	movs	r2, #1
 8002106:	2104      	movs	r1, #4
}
 8002108:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800210c:	f003 bcca 	b.w	8005aa4 <HAL_GPIO_WritePin>
 8002110:	40020800 	.word	0x40020800
 8002114:	40020c00 	.word	0x40020c00

08002118 <LCD_IO_ReadData>:
{
 8002118:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800211a:	4c14      	ldr	r4, [pc, #80]	; (800216c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800211c:	4d14      	ldr	r5, [pc, #80]	; (8002170 <LCD_IO_ReadData+0x58>)
{
 800211e:	4607      	mov	r7, r0
 8002120:	460e      	mov	r6, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002122:	4620      	mov	r0, r4
 8002124:	2200      	movs	r2, #0
 8002126:	2104      	movs	r1, #4
 8002128:	f003 fcbc 	bl	8005aa4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800212c:	2200      	movs	r2, #0
 800212e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002132:	4628      	mov	r0, r5
 8002134:	f003 fcb6 	bl	8005aa4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002138:	4638      	mov	r0, r7
 800213a:	f7ff fc61 	bl	8001a00 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800213e:	4b0d      	ldr	r3, [pc, #52]	; (8002174 <LCD_IO_ReadData+0x5c>)
 8002140:	480d      	ldr	r0, [pc, #52]	; (8002178 <LCD_IO_ReadData+0x60>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	4632      	mov	r2, r6
 8002146:	a901      	add	r1, sp, #4
 8002148:	f005 f919 	bl	800737e <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800214c:	4628      	mov	r0, r5
 800214e:	2201      	movs	r2, #1
 8002150:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002154:	9e01      	ldr	r6, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002156:	f003 fca5 	bl	8005aa4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800215a:	4620      	mov	r0, r4
 800215c:	2201      	movs	r2, #1
 800215e:	2104      	movs	r1, #4
 8002160:	f003 fca0 	bl	8005aa4 <HAL_GPIO_WritePin>
}
 8002164:	4630      	mov	r0, r6
 8002166:	b003      	add	sp, #12
 8002168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800216a:	bf00      	nop
 800216c:	40020800 	.word	0x40020800
 8002170:	40020c00 	.word	0x40020c00
 8002174:	20000010 	.word	0x20000010
 8002178:	2001282c 	.word	0x2001282c

0800217c <LCD_Delay>:
  HAL_Delay(Delay);
 800217c:	f003 b838 	b.w	80051f0 <HAL_Delay>

08002180 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 8002180:	6802      	ldr	r2, [r0, #0]
 8002182:	4b03      	ldr	r3, [pc, #12]	; (8002190 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002184:	429a      	cmp	r2, r3
 8002186:	d101      	bne.n	800218c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8002188:	f003 b820 	b.w	80051cc <HAL_IncTick>
}
 800218c:	4770      	bx	lr
 800218e:	bf00      	nop
 8002190:	40001000 	.word	0x40001000

08002194 <Error_Handler>:
}
 8002194:	4770      	bx	lr
	...

08002198 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002198:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800219a:	4b0e      	ldr	r3, [pc, #56]	; (80021d4 <HAL_MspInit+0x3c>)
 800219c:	2200      	movs	r2, #0
 800219e:	9200      	str	r2, [sp, #0]
 80021a0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021a2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80021a6:	6459      	str	r1, [r3, #68]	; 0x44
 80021a8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021aa:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80021ae:	9100      	str	r1, [sp, #0]
 80021b0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021b2:	9201      	str	r2, [sp, #4]
 80021b4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80021b6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80021ba:	6419      	str	r1, [r3, #64]	; 0x40
 80021bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021be:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021c2:	9301      	str	r3, [sp, #4]
 80021c4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021c6:	210f      	movs	r1, #15
 80021c8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80021cc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021ce:	f003 b835 	b.w	800523c <HAL_NVIC_SetPriority>
 80021d2:	bf00      	nop
 80021d4:	40023800 	.word	0x40023800

080021d8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80021d8:	6802      	ldr	r2, [r0, #0]
 80021da:	4b09      	ldr	r3, [pc, #36]	; (8002200 <HAL_CRC_MspInit+0x28>)
 80021dc:	429a      	cmp	r2, r3
{
 80021de:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80021e0:	d10b      	bne.n	80021fa <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80021e2:	2300      	movs	r3, #0
 80021e4:	9301      	str	r3, [sp, #4]
 80021e6:	4b07      	ldr	r3, [pc, #28]	; (8002204 <HAL_CRC_MspInit+0x2c>)
 80021e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021ea:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80021ee:	631a      	str	r2, [r3, #48]	; 0x30
 80021f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021f2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80021f6:	9301      	str	r3, [sp, #4]
 80021f8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80021fa:	b002      	add	sp, #8
 80021fc:	4770      	bx	lr
 80021fe:	bf00      	nop
 8002200:	40023000 	.word	0x40023000
 8002204:	40023800 	.word	0x40023800

08002208 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002208:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800220a:	4b0f      	ldr	r3, [pc, #60]	; (8002248 <HAL_DMA2D_MspInit+0x40>)
 800220c:	6802      	ldr	r2, [r0, #0]
 800220e:	429a      	cmp	r2, r3
 8002210:	d116      	bne.n	8002240 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002212:	2200      	movs	r2, #0
 8002214:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002218:	9201      	str	r2, [sp, #4]
 800221a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800221c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002220:	6319      	str	r1, [r3, #48]	; 0x30
 8002222:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002224:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002228:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800222a:	2105      	movs	r1, #5
 800222c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800222e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002230:	f003 f804 	bl	800523c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002234:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002236:	b003      	add	sp, #12
 8002238:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800223c:	f003 b832 	b.w	80052a4 <HAL_NVIC_EnableIRQ>
}
 8002240:	b003      	add	sp, #12
 8002242:	f85d fb04 	ldr.w	pc, [sp], #4
 8002246:	bf00      	nop
 8002248:	4002b000 	.word	0x4002b000

0800224c <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 800224c:	6802      	ldr	r2, [r0, #0]
 800224e:	4b06      	ldr	r3, [pc, #24]	; (8002268 <HAL_DMA2D_MspDeInit+0x1c>)
 8002250:	429a      	cmp	r2, r3
 8002252:	d107      	bne.n	8002264 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8002254:	4a05      	ldr	r2, [pc, #20]	; (800226c <HAL_DMA2D_MspDeInit+0x20>)
 8002256:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8002258:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800225c:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 800225e:	205a      	movs	r0, #90	; 0x5a
 8002260:	f003 b82e 	b.w	80052c0 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8002264:	4770      	bx	lr
 8002266:	bf00      	nop
 8002268:	4002b000 	.word	0x4002b000
 800226c:	40023800 	.word	0x40023800

08002270 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002270:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002274:	4604      	mov	r4, r0
 8002276:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002278:	2214      	movs	r2, #20
 800227a:	2100      	movs	r1, #0
 800227c:	a803      	add	r0, sp, #12
 800227e:	f01a f906 	bl	801c48e <memset>
  if(hi2c->Instance==I2C3)
 8002282:	6822      	ldr	r2, [r4, #0]
 8002284:	4b24      	ldr	r3, [pc, #144]	; (8002318 <HAL_I2C_MspInit+0xa8>)
 8002286:	429a      	cmp	r2, r3
 8002288:	d143      	bne.n	8002312 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800228a:	4c24      	ldr	r4, [pc, #144]	; (800231c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800228c:	4824      	ldr	r0, [pc, #144]	; (8002320 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800228e:	2500      	movs	r5, #0
 8002290:	9500      	str	r5, [sp, #0]
 8002292:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002294:	f043 0304 	orr.w	r3, r3, #4
 8002298:	6323      	str	r3, [r4, #48]	; 0x30
 800229a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800229c:	f003 0304 	and.w	r3, r3, #4
 80022a0:	9300      	str	r3, [sp, #0]
 80022a2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022a4:	9501      	str	r5, [sp, #4]
 80022a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022a8:	f043 0301 	orr.w	r3, r3, #1
 80022ac:	6323      	str	r3, [r4, #48]	; 0x30
 80022ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022b0:	f003 0301 	and.w	r3, r3, #1
 80022b4:	9301      	str	r3, [sp, #4]
 80022b6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022b8:	f04f 0912 	mov.w	r9, #18
 80022bc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022c0:	f04f 0801 	mov.w	r8, #1
 80022c4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022c6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022c8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022ca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022ce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022d2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022d4:	f003 fafa 	bl	80058cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022d8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022dc:	a903      	add	r1, sp, #12
 80022de:	4811      	ldr	r0, [pc, #68]	; (8002324 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022e0:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022e2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022e6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022ea:	f003 faef 	bl	80058cc <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022ee:	9502      	str	r5, [sp, #8]
 80022f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80022f2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022f6:	6423      	str	r3, [r4, #64]	; 0x40
 80022f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80022fa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80022fe:	9302      	str	r3, [sp, #8]
 8002300:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002302:	6a23      	ldr	r3, [r4, #32]
 8002304:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002308:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800230a:	6a23      	ldr	r3, [r4, #32]
 800230c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002310:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002312:	b009      	add	sp, #36	; 0x24
 8002314:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002318:	40005c00 	.word	0x40005c00
 800231c:	40023800 	.word	0x40023800
 8002320:	40020800 	.word	0x40020800
 8002324:	40020000 	.word	0x40020000

08002328 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002328:	b5f0      	push	{r4, r5, r6, r7, lr}
 800232a:	4604      	mov	r4, r0
 800232c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800232e:	2214      	movs	r2, #20
 8002330:	2100      	movs	r1, #0
 8002332:	a807      	add	r0, sp, #28
 8002334:	f01a f8ab 	bl	801c48e <memset>
  if(hltdc->Instance==LTDC)
 8002338:	6822      	ldr	r2, [r4, #0]
 800233a:	4b57      	ldr	r3, [pc, #348]	; (8002498 <HAL_LTDC_MspInit+0x170>)
 800233c:	429a      	cmp	r2, r3
 800233e:	f040 80a8 	bne.w	8002492 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002342:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8002346:	2500      	movs	r5, #0
 8002348:	9500      	str	r5, [sp, #0]
 800234a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800234c:	4853      	ldr	r0, [pc, #332]	; (800249c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 800234e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002352:	645a      	str	r2, [r3, #68]	; 0x44
 8002354:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002356:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800235a:	9200      	str	r2, [sp, #0]
 800235c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800235e:	9501      	str	r5, [sp, #4]
 8002360:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002362:	f042 0220 	orr.w	r2, r2, #32
 8002366:	631a      	str	r2, [r3, #48]	; 0x30
 8002368:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800236a:	f002 0220 	and.w	r2, r2, #32
 800236e:	9201      	str	r2, [sp, #4]
 8002370:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002372:	9502      	str	r5, [sp, #8]
 8002374:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002376:	f042 0201 	orr.w	r2, r2, #1
 800237a:	631a      	str	r2, [r3, #48]	; 0x30
 800237c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800237e:	f002 0201 	and.w	r2, r2, #1
 8002382:	9202      	str	r2, [sp, #8]
 8002384:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002386:	9503      	str	r5, [sp, #12]
 8002388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800238a:	f042 0202 	orr.w	r2, r2, #2
 800238e:	631a      	str	r2, [r3, #48]	; 0x30
 8002390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002392:	f002 0202 	and.w	r2, r2, #2
 8002396:	9203      	str	r2, [sp, #12]
 8002398:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800239a:	9504      	str	r5, [sp, #16]
 800239c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800239e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80023a2:	631a      	str	r2, [r3, #48]	; 0x30
 80023a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023a6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80023aa:	9204      	str	r2, [sp, #16]
 80023ac:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ae:	9505      	str	r5, [sp, #20]
 80023b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023b2:	f042 0204 	orr.w	r2, r2, #4
 80023b6:	631a      	str	r2, [r3, #48]	; 0x30
 80023b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023ba:	f002 0204 	and.w	r2, r2, #4
 80023be:	9205      	str	r2, [sp, #20]
 80023c0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023c2:	9506      	str	r5, [sp, #24]
 80023c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023c6:	f042 0208 	orr.w	r2, r2, #8
 80023ca:	631a      	str	r2, [r3, #48]	; 0x30
 80023cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ce:	f003 0308 	and.w	r3, r3, #8
 80023d2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023d4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023d6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023d8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023da:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023e2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023e6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e8:	f003 fa70 	bl	80058cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 80023ec:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023f0:	a907      	add	r1, sp, #28
 80023f2:	482b      	ldr	r0, [pc, #172]	; (80024a0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023f4:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023f6:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80023fa:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023fc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002400:	f003 fa64 	bl	80058cc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002404:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002406:	a907      	add	r1, sp, #28
 8002408:	4826      	ldr	r0, [pc, #152]	; (80024a4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800240a:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800240c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002410:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002414:	f003 fa5a 	bl	80058cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002418:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800241c:	a907      	add	r1, sp, #28
 800241e:	4821      	ldr	r0, [pc, #132]	; (80024a4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002420:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002422:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002426:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800242a:	f003 fa4f 	bl	80058cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800242e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002432:	a907      	add	r1, sp, #28
 8002434:	481c      	ldr	r0, [pc, #112]	; (80024a8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002436:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002438:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800243c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002440:	f003 fa44 	bl	80058cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002444:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002446:	a907      	add	r1, sp, #28
 8002448:	4818      	ldr	r0, [pc, #96]	; (80024ac <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800244a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800244c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002450:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002454:	f003 fa3a 	bl	80058cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002458:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800245a:	a907      	add	r1, sp, #28
 800245c:	4814      	ldr	r0, [pc, #80]	; (80024b0 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800245e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002460:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002464:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002468:	f003 fa30 	bl	80058cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800246c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002470:	a907      	add	r1, sp, #28
 8002472:	480d      	ldr	r0, [pc, #52]	; (80024a8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002474:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002476:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800247a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800247e:	f003 fa25 	bl	80058cc <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002482:	2058      	movs	r0, #88	; 0x58
 8002484:	462a      	mov	r2, r5
 8002486:	2105      	movs	r1, #5
 8002488:	f002 fed8 	bl	800523c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800248c:	2058      	movs	r0, #88	; 0x58
 800248e:	f002 ff09 	bl	80052a4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002492:	b00d      	add	sp, #52	; 0x34
 8002494:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002496:	bf00      	nop
 8002498:	40016800 	.word	0x40016800
 800249c:	40021400 	.word	0x40021400
 80024a0:	40020000 	.word	0x40020000
 80024a4:	40020400 	.word	0x40020400
 80024a8:	40021800 	.word	0x40021800
 80024ac:	40020800 	.word	0x40020800
 80024b0:	40020c00 	.word	0x40020c00

080024b4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024b4:	b510      	push	{r4, lr}
 80024b6:	4604      	mov	r4, r0
 80024b8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024ba:	2214      	movs	r2, #20
 80024bc:	2100      	movs	r1, #0
 80024be:	a803      	add	r0, sp, #12
 80024c0:	f019 ffe5 	bl	801c48e <memset>
  if(hspi->Instance==SPI5)
 80024c4:	6822      	ldr	r2, [r4, #0]
 80024c6:	4b14      	ldr	r3, [pc, #80]	; (8002518 <HAL_SPI_MspInit+0x64>)
 80024c8:	429a      	cmp	r2, r3
 80024ca:	d123      	bne.n	8002514 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024cc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80024d0:	2100      	movs	r1, #0
 80024d2:	9101      	str	r1, [sp, #4]
 80024d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024d6:	4811      	ldr	r0, [pc, #68]	; (800251c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024d8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80024dc:	645a      	str	r2, [r3, #68]	; 0x44
 80024de:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80024e0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 80024e4:	9201      	str	r2, [sp, #4]
 80024e6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024e8:	9102      	str	r1, [sp, #8]
 80024ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ec:	f042 0220 	orr.w	r2, r2, #32
 80024f0:	631a      	str	r2, [r3, #48]	; 0x30
 80024f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024f4:	f003 0320 	and.w	r3, r3, #32
 80024f8:	9302      	str	r3, [sp, #8]
 80024fa:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002500:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002502:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002504:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002508:	2305      	movs	r3, #5
 800250a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800250e:	a903      	add	r1, sp, #12
 8002510:	f003 f9dc 	bl	80058cc <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002514:	b008      	add	sp, #32
 8002516:	bd10      	pop	{r4, pc}
 8002518:	40015000 	.word	0x40015000
 800251c:	40021400 	.word	0x40021400

08002520 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002524:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002526:	2214      	movs	r2, #20
 8002528:	2100      	movs	r1, #0
 800252a:	a801      	add	r0, sp, #4
 800252c:	f019 ffaf 	bl	801c48e <memset>
  if (FMC_Initialized) {
 8002530:	4b2b      	ldr	r3, [pc, #172]	; (80025e0 <HAL_SDRAM_MspInit+0xc0>)
 8002532:	681c      	ldr	r4, [r3, #0]
 8002534:	2c00      	cmp	r4, #0
 8002536:	d14f      	bne.n	80025d8 <HAL_SDRAM_MspInit+0xb8>
  FMC_Initialized = 1;
 8002538:	f04f 0801 	mov.w	r8, #1
 800253c:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002540:	4b28      	ldr	r3, [pc, #160]	; (80025e4 <HAL_SDRAM_MspInit+0xc4>)
 8002542:	9400      	str	r4, [sp, #0]
 8002544:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002546:	4828      	ldr	r0, [pc, #160]	; (80025e8 <HAL_SDRAM_MspInit+0xc8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002548:	ea42 0208 	orr.w	r2, r2, r8
 800254c:	639a      	str	r2, [r3, #56]	; 0x38
 800254e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002550:	ea03 0308 	and.w	r3, r3, r8
 8002554:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002556:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002558:	2603      	movs	r6, #3
 800255a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800255c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800255e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002560:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002564:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002568:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800256c:	f003 f9ae 	bl	80058cc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002570:	a901      	add	r1, sp, #4
 8002572:	481e      	ldr	r0, [pc, #120]	; (80025ec <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002574:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002576:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800257a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800257e:	f003 f9a5 	bl	80058cc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 8002582:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002586:	a901      	add	r1, sp, #4
 8002588:	4819      	ldr	r0, [pc, #100]	; (80025f0 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800258a:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800258c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002590:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002594:	f003 f99a 	bl	80058cc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 8002598:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800259c:	a901      	add	r1, sp, #4
 800259e:	4815      	ldr	r0, [pc, #84]	; (80025f4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025a0:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025a2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025a6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80025aa:	f003 f98f 	bl	80058cc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 80025ae:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025b2:	a901      	add	r1, sp, #4
 80025b4:	4810      	ldr	r0, [pc, #64]	; (80025f8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025b6:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025b8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025bc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025c0:	f003 f984 	bl	80058cc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025c4:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025c6:	a901      	add	r1, sp, #4
 80025c8:	480c      	ldr	r0, [pc, #48]	; (80025fc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025ca:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025cc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025d0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025d4:	f003 f97a 	bl	80058cc <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80025d8:	b006      	add	sp, #24
 80025da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80025de:	bf00      	nop
 80025e0:	200016f0 	.word	0x200016f0
 80025e4:	40023800 	.word	0x40023800
 80025e8:	40021400 	.word	0x40021400
 80025ec:	40020800 	.word	0x40020800
 80025f0:	40021800 	.word	0x40021800
 80025f4:	40021000 	.word	0x40021000
 80025f8:	40020c00 	.word	0x40020c00
 80025fc:	40020400 	.word	0x40020400

08002600 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002600:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM2)
 8002602:	6803      	ldr	r3, [r0, #0]
 8002604:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8002608:	b085      	sub	sp, #20
 800260a:	4605      	mov	r5, r0
  if(htim_base->Instance==TIM2)
 800260c:	d12e      	bne.n	800266c <HAL_TIM_Base_MspInit+0x6c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800260e:	2300      	movs	r3, #0
 8002610:	4a57      	ldr	r2, [pc, #348]	; (8002770 <HAL_TIM_Base_MspInit+0x170>)
 8002612:	9300      	str	r3, [sp, #0]
 8002614:	6c11      	ldr	r1, [r2, #64]	; 0x40

    /* TIM2 DMA Init */
    /* TIM2_UP_CH4 Init */
    hdma_tim2_up_ch4.Instance = DMA1_Stream7;
 8002616:	4c57      	ldr	r4, [pc, #348]	; (8002774 <HAL_TIM_Base_MspInit+0x174>)
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 8002618:	f8df e17c 	ldr.w	lr, [pc, #380]	; 8002798 <HAL_TIM_Base_MspInit+0x198>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800261c:	f041 0101 	orr.w	r1, r1, #1
 8002620:	6411      	str	r1, [r2, #64]	; 0x40
 8002622:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002624:	f002 0201 	and.w	r2, r2, #1
 8002628:	9200      	str	r2, [sp, #0]
 800262a:	9a00      	ldr	r2, [sp, #0]
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 800262c:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8002630:	e9c4 e200 	strd	lr, r2, [r4]
    hdma_tim2_up_ch4.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002634:	2240      	movs	r2, #64	; 0x40
    hdma_tim2_up_ch4.Init.PeriphInc = DMA_PINC_DISABLE;
 8002636:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim2_up_ch4.Init.MemInc = DMA_MINC_ENABLE;
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800263a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800263e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    hdma_tim2_up_ch4.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 8002642:	f44f 4080 	mov.w	r0, #16384	; 0x4000
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8002646:	e9c4 1204 	strd	r1, r2, [r4, #16]
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 800264a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800264e:	e9c4 0206 	strd	r0, r2, [r4, #24]
    hdma_tim2_up_ch4.Init.Priority = DMA_PRIORITY_LOW;
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8002652:	4620      	mov	r0, r4
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002654:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8002658:	f002 fe6c 	bl	8005334 <HAL_DMA_Init>
 800265c:	b108      	cbz	r0, 8002662 <HAL_TIM_Base_MspInit+0x62>
    {
      Error_Handler();
 800265e:	f7ff fd99 	bl	8002194 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch4);
 8002662:	622c      	str	r4, [r5, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC4],hdma_tim2_up_ch4);
 8002664:	632c      	str	r4, [r5, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
    {
      Error_Handler();
    }

    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8002666:	63a5      	str	r5, [r4, #56]	; 0x38
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
 8002668:	b005      	add	sp, #20
 800266a:	bd30      	pop	{r4, r5, pc}
  else if(htim_base->Instance==TIM3)
 800266c:	4a42      	ldr	r2, [pc, #264]	; (8002778 <HAL_TIM_Base_MspInit+0x178>)
 800266e:	4293      	cmp	r3, r2
 8002670:	d12b      	bne.n	80026ca <HAL_TIM_Base_MspInit+0xca>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002672:	2300      	movs	r3, #0
 8002674:	f502 320d 	add.w	r2, r2, #144384	; 0x23400
 8002678:	9301      	str	r3, [sp, #4]
 800267a:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim3_ch2.Instance = DMA1_Stream5;
 800267c:	4c3f      	ldr	r4, [pc, #252]	; (800277c <HAL_TIM_Base_MspInit+0x17c>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 800267e:	f041 0102 	orr.w	r1, r1, #2
 8002682:	6411      	str	r1, [r2, #64]	; 0x40
 8002684:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8002686:	493e      	ldr	r1, [pc, #248]	; (8002780 <HAL_TIM_Base_MspInit+0x180>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002688:	f002 0202 	and.w	r2, r2, #2
 800268c:	9201      	str	r2, [sp, #4]
 800268e:	9a01      	ldr	r2, [sp, #4]
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8002690:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8002694:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim3_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002698:	2240      	movs	r2, #64	; 0x40
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800269a:	f44f 6080 	mov.w	r0, #1024	; 0x400
    hdma_tim3_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 800269e:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80026a6:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 80026aa:	f44f 5c00 	mov.w	ip, #8192	; 0x2000
 80026ae:	f44f 7280 	mov.w	r2, #256	; 0x100
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 80026b2:	4620      	mov	r0, r4
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 80026b4:	e9c4 c206 	strd	ip, r2, [r4, #24]
    hdma_tim3_ch2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80026b8:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 80026bc:	f002 fe3a 	bl	8005334 <HAL_DMA_Init>
 80026c0:	b108      	cbz	r0, 80026c6 <HAL_TIM_Base_MspInit+0xc6>
      Error_Handler();
 80026c2:	f7ff fd67 	bl	8002194 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC2],hdma_tim3_ch2);
 80026c6:	62ac      	str	r4, [r5, #40]	; 0x28
 80026c8:	e7cd      	b.n	8002666 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM4)
 80026ca:	4a2e      	ldr	r2, [pc, #184]	; (8002784 <HAL_TIM_Base_MspInit+0x184>)
 80026cc:	4293      	cmp	r3, r2
 80026ce:	d12c      	bne.n	800272a <HAL_TIM_Base_MspInit+0x12a>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80026d0:	f502 320c 	add.w	r2, r2, #143360	; 0x23000
 80026d4:	2300      	movs	r3, #0
 80026d6:	9302      	str	r3, [sp, #8]
 80026d8:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim4_ch1.Instance = DMA1_Stream0;
 80026da:	4c2b      	ldr	r4, [pc, #172]	; (8002788 <HAL_TIM_Base_MspInit+0x188>)
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 80026dc:	f8df c0bc 	ldr.w	ip, [pc, #188]	; 800279c <HAL_TIM_Base_MspInit+0x19c>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80026e0:	f041 0104 	orr.w	r1, r1, #4
 80026e4:	6411      	str	r1, [r2, #64]	; 0x40
 80026e6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80026e8:	f002 0204 	and.w	r2, r2, #4
 80026ec:	9202      	str	r2, [sp, #8]
 80026ee:	9a02      	ldr	r2, [sp, #8]
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 80026f0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80026f4:	e9c4 c200 	strd	ip, r2, [r4]
    hdma_tim4_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80026f8:	2240      	movs	r2, #64	; 0x40
    hdma_tim4_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 80026fa:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim4_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026fe:	f44f 6e80 	mov.w	lr, #1024	; 0x400
 8002702:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002706:	e9c4 e204 	strd	lr, r2, [r4, #16]
    hdma_tim4_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800270a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 800270e:	61a2      	str	r2, [r4, #24]
    hdma_tim5_ch1.Init.Mode = DMA_CIRCULAR;
 8002710:	f44f 7280 	mov.w	r2, #256	; 0x100
    hdma_tim5_ch1.Init.Priority = DMA_PRIORITY_LOW;
 8002714:	e9c4 2307 	strd	r2, r3, [r4, #28]
    hdma_tim5_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002718:	6263      	str	r3, [r4, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
 800271a:	4620      	mov	r0, r4
 800271c:	f002 fe0a 	bl	8005334 <HAL_DMA_Init>
 8002720:	b108      	cbz	r0, 8002726 <HAL_TIM_Base_MspInit+0x126>
      Error_Handler();
 8002722:	f7ff fd37 	bl	8002194 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8002726:	626c      	str	r4, [r5, #36]	; 0x24
 8002728:	e79d      	b.n	8002666 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM5)
 800272a:	4a18      	ldr	r2, [pc, #96]	; (800278c <HAL_TIM_Base_MspInit+0x18c>)
 800272c:	4293      	cmp	r3, r2
 800272e:	d19b      	bne.n	8002668 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002730:	f502 320b 	add.w	r2, r2, #142336	; 0x22c00
 8002734:	2300      	movs	r3, #0
 8002736:	9303      	str	r3, [sp, #12]
 8002738:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim5_ch1.Instance = DMA1_Stream2;
 800273a:	4c15      	ldr	r4, [pc, #84]	; (8002790 <HAL_TIM_Base_MspInit+0x190>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 800273c:	f041 0108 	orr.w	r1, r1, #8
 8002740:	6411      	str	r1, [r2, #64]	; 0x40
 8002742:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 8002744:	4913      	ldr	r1, [pc, #76]	; (8002794 <HAL_TIM_Base_MspInit+0x194>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002746:	f002 0208 	and.w	r2, r2, #8
 800274a:	9203      	str	r2, [sp, #12]
 800274c:	9a03      	ldr	r2, [sp, #12]
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 800274e:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8002752:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim5_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002756:	2240      	movs	r2, #64	; 0x40
    hdma_tim5_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8002758:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim5_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800275c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8002760:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002764:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8002768:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800276c:	e7cf      	b.n	800270e <HAL_TIM_Base_MspInit+0x10e>
 800276e:	bf00      	nop
 8002770:	40023800 	.word	0x40023800
 8002774:	20012778 	.word	0x20012778
 8002778:	40000400 	.word	0x40000400
 800277c:	20012ab4 	.word	0x20012ab4
 8002780:	40026088 	.word	0x40026088
 8002784:	40000800 	.word	0x40000800
 8002788:	20012b98 	.word	0x20012b98
 800278c:	40000c00 	.word	0x40000c00
 8002790:	20012a54 	.word	0x20012a54
 8002794:	40026040 	.word	0x40026040
 8002798:	400260b8 	.word	0x400260b8
 800279c:	40026010 	.word	0x40026010

080027a0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80027a0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a2:	2214      	movs	r2, #20
{
 80027a4:	b08a      	sub	sp, #40	; 0x28
 80027a6:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a8:	2100      	movs	r1, #0
 80027aa:	eb0d 0002 	add.w	r0, sp, r2
 80027ae:	f019 fe6e 	bl	801c48e <memset>
  if(htim->Instance==TIM2)
 80027b2:	6823      	ldr	r3, [r4, #0]
 80027b4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80027b8:	d114      	bne.n	80027e4 <HAL_TIM_MspPostInit+0x44>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ba:	2300      	movs	r3, #0
 80027bc:	9301      	str	r3, [sp, #4]
 80027be:	4b29      	ldr	r3, [pc, #164]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 80027c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027c2:	f042 0201 	orr.w	r2, r2, #1
 80027c6:	631a      	str	r2, [r3, #48]	; 0x30
 80027c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ca:	f003 0301 	and.w	r3, r3, #1
 80027ce:	9301      	str	r3, [sp, #4]
 80027d0:	9b01      	ldr	r3, [sp, #4]
    /**TIM2 GPIO Configuration
    PA3     ------> TIM2_CH4
    */
    GPIO_InitStruct.Pin = xAxisPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027d2:	2108      	movs	r1, #8
 80027d4:	2302      	movs	r3, #2
 80027d6:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80027da:	2301      	movs	r3, #1
    */
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80027dc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 80027de:	a905      	add	r1, sp, #20
 80027e0:	4821      	ldr	r0, [pc, #132]	; (8002868 <HAL_TIM_MspPostInit+0xc8>)
 80027e2:	e02a      	b.n	800283a <HAL_TIM_MspPostInit+0x9a>
  else if(htim->Instance==TIM3)
 80027e4:	4a21      	ldr	r2, [pc, #132]	; (800286c <HAL_TIM_MspPostInit+0xcc>)
 80027e6:	4293      	cmp	r3, r2
 80027e8:	d110      	bne.n	800280c <HAL_TIM_MspPostInit+0x6c>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ea:	2300      	movs	r3, #0
 80027ec:	9302      	str	r3, [sp, #8]
 80027ee:	4b1d      	ldr	r3, [pc, #116]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 80027f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027f2:	f042 0201 	orr.w	r2, r2, #1
 80027f6:	631a      	str	r2, [r3, #48]	; 0x30
 80027f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027fa:	f003 0301 	and.w	r3, r3, #1
 80027fe:	9302      	str	r3, [sp, #8]
 8002800:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = yAxisPWM_L_Pin;
 8002802:	2380      	movs	r3, #128	; 0x80
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002804:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002806:	2302      	movs	r3, #2
 8002808:	9306      	str	r3, [sp, #24]
 800280a:	e7e7      	b.n	80027dc <HAL_TIM_MspPostInit+0x3c>
  else if(htim->Instance==TIM4)
 800280c:	4a18      	ldr	r2, [pc, #96]	; (8002870 <HAL_TIM_MspPostInit+0xd0>)
 800280e:	4293      	cmp	r3, r2
 8002810:	d117      	bne.n	8002842 <HAL_TIM_MspPostInit+0xa2>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002812:	2300      	movs	r3, #0
 8002814:	9303      	str	r3, [sp, #12]
 8002816:	4b13      	ldr	r3, [pc, #76]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 8002818:	4816      	ldr	r0, [pc, #88]	; (8002874 <HAL_TIM_MspPostInit+0xd4>)
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800281a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800281c:	f042 0208 	orr.w	r2, r2, #8
 8002820:	631a      	str	r2, [r3, #48]	; 0x30
 8002822:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002824:	f003 0308 	and.w	r3, r3, #8
 8002828:	9303      	str	r3, [sp, #12]
 800282a:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800282c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002830:	2302      	movs	r3, #2
 8002832:	e9cd 2305 	strd	r2, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002836:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 8002838:	a905      	add	r1, sp, #20
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 800283a:	f003 f847 	bl	80058cc <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 800283e:	b00a      	add	sp, #40	; 0x28
 8002840:	bd10      	pop	{r4, pc}
  else if(htim->Instance==TIM5)
 8002842:	4a0d      	ldr	r2, [pc, #52]	; (8002878 <HAL_TIM_MspPostInit+0xd8>)
 8002844:	4293      	cmp	r3, r2
 8002846:	d1fa      	bne.n	800283e <HAL_TIM_MspPostInit+0x9e>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002848:	2300      	movs	r3, #0
 800284a:	9304      	str	r3, [sp, #16]
 800284c:	4b05      	ldr	r3, [pc, #20]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 800284e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002850:	f042 0201 	orr.w	r2, r2, #1
 8002854:	631a      	str	r2, [r3, #48]	; 0x30
 8002856:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002858:	f003 0301 	and.w	r3, r3, #1
 800285c:	9304      	str	r3, [sp, #16]
 800285e:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002860:	2301      	movs	r3, #1
 8002862:	e7cf      	b.n	8002804 <HAL_TIM_MspPostInit+0x64>
 8002864:	40023800 	.word	0x40023800
 8002868:	40020000 	.word	0x40020000
 800286c:	40000400 	.word	0x40000400
 8002870:	40000800 	.word	0x40000800
 8002874:	40020c00 	.word	0x40020c00
 8002878:	40000c00 	.word	0x40000c00

0800287c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800287c:	b530      	push	{r4, r5, lr}
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 800287e:	4601      	mov	r1, r0
{
 8002880:	b089      	sub	sp, #36	; 0x24
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8002882:	2200      	movs	r2, #0
 8002884:	2036      	movs	r0, #54	; 0x36
 8002886:	f002 fcd9 	bl	800523c <HAL_NVIC_SetPriority>
  
  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn); 
 800288a:	2036      	movs	r0, #54	; 0x36
 800288c:	f002 fd0a 	bl	80052a4 <HAL_NVIC_EnableIRQ>
  
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002890:	2500      	movs	r5, #0
 8002892:	4b15      	ldr	r3, [pc, #84]	; (80028e8 <HAL_InitTick+0x6c>)
 8002894:	9502      	str	r5, [sp, #8]
 8002896:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  
  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002898:	4c14      	ldr	r4, [pc, #80]	; (80028ec <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 800289a:	f042 0210 	orr.w	r2, r2, #16
 800289e:	641a      	str	r2, [r3, #64]	; 0x40
 80028a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028a2:	f003 0310 	and.w	r3, r3, #16
 80028a6:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028a8:	a901      	add	r1, sp, #4
 80028aa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028ac:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028ae:	f004 f96f 	bl	8006b90 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028b2:	f004 f95d 	bl	8006b70 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80028b6:	4b0e      	ldr	r3, [pc, #56]	; (80028f0 <HAL_InitTick+0x74>)
 80028b8:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 80028ba:	f240 33e7 	movw	r3, #999	; 0x3e7
 80028be:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028c0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80028c2:	4b0c      	ldr	r3, [pc, #48]	; (80028f4 <HAL_InitTick+0x78>)
 80028c4:	fbb0 f0f3 	udiv	r0, r0, r3
 80028c8:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80028ca:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028cc:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80028ce:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028d0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028d2:	f004 ffdd 	bl	8007890 <HAL_TIM_Base_Init>
 80028d6:	b920      	cbnz	r0, 80028e2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80028d8:	4620      	mov	r0, r4
 80028da:	f004 fe75 	bl	80075c8 <HAL_TIM_Base_Start_IT>
  }
  
  /* Return function status */
  return HAL_ERROR;
}
 80028de:	b009      	add	sp, #36	; 0x24
 80028e0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80028e2:	2001      	movs	r0, #1
 80028e4:	e7fb      	b.n	80028de <HAL_InitTick+0x62>
 80028e6:	bf00      	nop
 80028e8:	40023800 	.word	0x40023800
 80028ec:	20012c2c 	.word	0x20012c2c
 80028f0:	40001000 	.word	0x40001000
 80028f4:	000f4240 	.word	0x000f4240

080028f8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80028f8:	4770      	bx	lr

080028fa <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80028fa:	e7fe      	b.n	80028fa <HardFault_Handler>

080028fc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80028fc:	e7fe      	b.n	80028fc <MemManage_Handler>

080028fe <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80028fe:	e7fe      	b.n	80028fe <BusFault_Handler>

08002900 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002900:	e7fe      	b.n	8002900 <UsageFault_Handler>

08002902 <DebugMon_Handler>:
 8002902:	4770      	bx	lr

08002904 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002904:	4801      	ldr	r0, [pc, #4]	; (800290c <TIM6_DAC_IRQHandler+0x8>)
 8002906:	f004 beb1 	b.w	800766c <HAL_TIM_IRQHandler>
 800290a:	bf00      	nop
 800290c:	20012c2c 	.word	0x20012c2c

08002910 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002910:	4801      	ldr	r0, [pc, #4]	; (8002918 <LTDC_IRQHandler+0x8>)
 8002912:	f003 be1b 	b.w	800654c <HAL_LTDC_IRQHandler>
 8002916:	bf00      	nop
 8002918:	200129ac 	.word	0x200129ac

0800291c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800291c:	4801      	ldr	r0, [pc, #4]	; (8002924 <DMA2D_IRQHandler+0x8>)
 800291e:	f002 bf01 	b.w	8005724 <HAL_DMA2D_IRQHandler>
 8002922:	bf00      	nop
 8002924:	20012b18 	.word	0x20012b18

08002928 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002928:	2001      	movs	r0, #1
 800292a:	4770      	bx	lr

0800292c <_kill>:

int _kill(int pid, int sig)
{
 800292c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800292e:	f019 fd57 	bl	801c3e0 <__errno>
 8002932:	2316      	movs	r3, #22
 8002934:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002936:	f04f 30ff 	mov.w	r0, #4294967295
 800293a:	bd08      	pop	{r3, pc}

0800293c <_exit>:

void _exit (int status)
{
 800293c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800293e:	f019 fd4f 	bl	801c3e0 <__errno>
 8002942:	2316      	movs	r3, #22
 8002944:	6003      	str	r3, [r0, #0]
 8002946:	e7fe      	b.n	8002946 <_exit+0xa>

08002948 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002948:	b570      	push	{r4, r5, r6, lr}
 800294a:	460e      	mov	r6, r1
 800294c:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800294e:	460c      	mov	r4, r1
 8002950:	1ba3      	subs	r3, r4, r6
 8002952:	429d      	cmp	r5, r3
 8002954:	dc01      	bgt.n	800295a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002956:	4628      	mov	r0, r5
 8002958:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800295a:	f3af 8000 	nop.w
 800295e:	f804 0b01 	strb.w	r0, [r4], #1
 8002962:	e7f5      	b.n	8002950 <_read+0x8>

08002964 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002964:	b570      	push	{r4, r5, r6, lr}
 8002966:	460e      	mov	r6, r1
 8002968:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800296a:	460c      	mov	r4, r1
 800296c:	1ba3      	subs	r3, r4, r6
 800296e:	429d      	cmp	r5, r3
 8002970:	dc01      	bgt.n	8002976 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002972:	4628      	mov	r0, r5
 8002974:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002976:	f814 0b01 	ldrb.w	r0, [r4], #1
 800297a:	f3af 8000 	nop.w
 800297e:	e7f5      	b.n	800296c <_write+0x8>

08002980 <_close>:

int _close(int file)
{
	return -1;
}
 8002980:	f04f 30ff 	mov.w	r0, #4294967295
 8002984:	4770      	bx	lr

08002986 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002986:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800298a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800298c:	2000      	movs	r0, #0
 800298e:	4770      	bx	lr

08002990 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002990:	2001      	movs	r0, #1
 8002992:	4770      	bx	lr

08002994 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002994:	2000      	movs	r0, #0
 8002996:	4770      	bx	lr

08002998 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002998:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800299a:	4b0a      	ldr	r3, [pc, #40]	; (80029c4 <_sbrk+0x2c>)
 800299c:	6819      	ldr	r1, [r3, #0]
{
 800299e:	4602      	mov	r2, r0
	if (heap_end == 0)
 80029a0:	b909      	cbnz	r1, 80029a6 <_sbrk+0xe>
		heap_end = &end;
 80029a2:	4909      	ldr	r1, [pc, #36]	; (80029c8 <_sbrk+0x30>)
 80029a4:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 80029a6:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 80029a8:	4669      	mov	r1, sp
 80029aa:	4402      	add	r2, r0
 80029ac:	428a      	cmp	r2, r1
 80029ae:	d906      	bls.n	80029be <_sbrk+0x26>
	{
		errno = ENOMEM;
 80029b0:	f019 fd16 	bl	801c3e0 <__errno>
 80029b4:	230c      	movs	r3, #12
 80029b6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80029b8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80029bc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80029be:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 80029c0:	e7fc      	b.n	80029bc <_sbrk+0x24>
 80029c2:	bf00      	nop
 80029c4:	200016f4 	.word	0x200016f4
 80029c8:	20012cb8 	.word	0x20012cb8

080029cc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80029cc:	4770      	bx	lr

080029ce <_ZN23ApplicationFontProviderD0Ev>:
 80029ce:	b510      	push	{r4, lr}
 80029d0:	2104      	movs	r1, #4
 80029d2:	4604      	mov	r4, r0
 80029d4:	f019 fc8e 	bl	801c2f4 <_ZdlPvj>
 80029d8:	4620      	mov	r0, r4
 80029da:	bd10      	pop	{r4, pc}

080029dc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80029dc:	2901      	cmp	r1, #1
{
 80029de:	b508      	push	{r3, lr}
    switch (typography)
 80029e0:	d008      	beq.n	80029f4 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 80029e2:	d303      	bcc.n	80029ec <_ZN23ApplicationFontProvider7getFontEt+0x10>
 80029e4:	2902      	cmp	r1, #2
 80029e6:	d009      	beq.n	80029fc <_ZN23ApplicationFontProvider7getFontEt+0x20>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
 80029e8:	2000      	movs	r0, #0
 80029ea:	e002      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80029ec:	f000 ff72 	bl	80038d4 <_ZN17TypedTextDatabase8getFontsEv>
 80029f0:	6800      	ldr	r0, [r0, #0]
    }
}
 80029f2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80029f4:	f000 ff6e 	bl	80038d4 <_ZN17TypedTextDatabase8getFontsEv>
 80029f8:	6840      	ldr	r0, [r0, #4]
 80029fa:	e7fa      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80029fc:	f000 ff6a 	bl	80038d4 <_ZN17TypedTextDatabase8getFontsEv>
 8002a00:	6880      	ldr	r0, [r0, #8]
 8002a02:	e7f6      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>

08002a04 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002a04:	4800      	ldr	r0, [pc, #0]	; (8002a08 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002a06:	4770      	bx	lr
 8002a08:	0801d918 	.word	0x0801d918

08002a0c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002a0c:	200f      	movs	r0, #15
 8002a0e:	4770      	bx	lr

08002a10 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002a10:	b513      	push	{r0, r1, r4, lr}
 8002a12:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8002a14:	b149      	cbz	r1, 8002a2a <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8002a16:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 8002a18:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002a1a:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002a1e:	6802      	ldr	r2, [r0, #0]
 8002a20:	6894      	ldr	r4, [r2, #8]
 8002a22:	aa01      	add	r2, sp, #4
 8002a24:	47a0      	blx	r4
        return glyph;
    }
 8002a26:	b002      	add	sp, #8
 8002a28:	bd10      	pop	{r4, pc}
            return 0;
 8002a2a:	4608      	mov	r0, r1
 8002a2c:	e7fb      	b.n	8002a26 <_ZNK8touchgfx4Font8getGlyphEt+0x16>

08002a2e <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002a2e:	8940      	ldrh	r0, [r0, #10]
 8002a30:	4770      	bx	lr

08002a32 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002a32:	8980      	ldrh	r0, [r0, #12]
 8002a34:	4770      	bx	lr

08002a36 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002a36:	8880      	ldrh	r0, [r0, #4]
 8002a38:	4770      	bx	lr

08002a3a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002a3a:	7983      	ldrb	r3, [r0, #6]
 8002a3c:	8880      	ldrh	r0, [r0, #4]
 8002a3e:	4418      	add	r0, r3
    }
 8002a40:	b280      	uxth	r0, r0
 8002a42:	4770      	bx	lr

08002a44 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002a44:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a46:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002a4a:	4770      	bx	lr

08002a4c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002a4c:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a4e:	09c0      	lsrs	r0, r0, #7
 8002a50:	4770      	bx	lr

08002a52 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002a52:	4770      	bx	lr

08002a54 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002a54:	b510      	push	{r4, lr}
    }
 8002a56:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002a58:	4604      	mov	r4, r0
    }
 8002a5a:	f019 fc4b 	bl	801c2f4 <_ZdlPvj>
 8002a5e:	4620      	mov	r0, r4
 8002a60:	bd10      	pop	{r4, pc}

08002a62 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002a62:	4770      	bx	lr

08002a64 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002a64:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002a68:	6808      	ldr	r0, [r1, #0]
 8002a6a:	6849      	ldr	r1, [r1, #4]
 8002a6c:	c303      	stmia	r3!, {r0, r1}
    };
 8002a6e:	4770      	bx	lr

08002a70 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002a70:	4770      	bx	lr

08002a72 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002a72:	4770      	bx	lr

08002a74 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002a74:	6041      	str	r1, [r0, #4]
    }
 8002a76:	4770      	bx	lr

08002a78 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002a78:	4770      	bx	lr

08002a7a <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	7203      	strb	r3, [r0, #8]
    }
 8002a7e:	4770      	bx	lr

08002a80 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a80:	4770      	bx	lr

08002a82 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED1Ev>:
 8002a82:	4770      	bx	lr

08002a84 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8002a84:	4770      	bx	lr

08002a86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 8002a86:	4770      	bx	lr

08002a88 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002a88:	4770      	bx	lr

08002a8a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a8a:	4770      	bx	lr

08002a8c <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 8002a8c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002a8e:	68c5      	ldr	r5, [r0, #12]
 8002a90:	6844      	ldr	r4, [r0, #4]
 8002a92:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8002a94:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002a96:	07ed      	lsls	r5, r5, #31
 8002a98:	eb04 0002 	add.w	r0, r4, r2
 8002a9c:	689b      	ldr	r3, [r3, #8]
 8002a9e:	bf48      	it	mi
 8002aa0:	58a2      	ldrmi	r2, [r4, r2]
    }
 8002aa2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002aa4:	bf48      	it	mi
 8002aa6:	58d3      	ldrmi	r3, [r2, r3]
 8002aa8:	4718      	bx	r3

08002aaa <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002aaa:	6843      	ldr	r3, [r0, #4]
 8002aac:	b12b      	cbz	r3, 8002aba <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x10>
 8002aae:	6883      	ldr	r3, [r0, #8]
 8002ab0:	b92b      	cbnz	r3, 8002abe <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x14>
 8002ab2:	68c0      	ldr	r0, [r0, #12]
 8002ab4:	f000 0001 	and.w	r0, r0, #1
 8002ab8:	4770      	bx	lr
 8002aba:	4618      	mov	r0, r3
 8002abc:	4770      	bx	lr
 8002abe:	2001      	movs	r0, #1
    }
 8002ac0:	4770      	bx	lr

08002ac2 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 8002ac2:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002ac4:	68c5      	ldr	r5, [r0, #12]
 8002ac6:	6844      	ldr	r4, [r0, #4]
 8002ac8:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8002aca:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002acc:	07ed      	lsls	r5, r5, #31
 8002ace:	eb04 0002 	add.w	r0, r4, r2
 8002ad2:	689b      	ldr	r3, [r3, #8]
 8002ad4:	bf48      	it	mi
 8002ad6:	58a2      	ldrmi	r2, [r4, r2]
    }
 8002ad8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002ada:	bf48      	it	mi
 8002adc:	58d3      	ldrmi	r3, [r2, r3]
 8002ade:	4718      	bx	r3

08002ae0 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002ae0:	6843      	ldr	r3, [r0, #4]
 8002ae2:	b12b      	cbz	r3, 8002af0 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x10>
 8002ae4:	6883      	ldr	r3, [r0, #8]
 8002ae6:	b92b      	cbnz	r3, 8002af4 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x14>
 8002ae8:	68c0      	ldr	r0, [r0, #12]
 8002aea:	f000 0001 	and.w	r0, r0, #1
 8002aee:	4770      	bx	lr
 8002af0:	4618      	mov	r0, r3
 8002af2:	4770      	bx	lr
 8002af4:	2001      	movs	r0, #1
    }
 8002af6:	4770      	bx	lr

08002af8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002af8:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002afa:	68c4      	ldr	r4, [r0, #12]
 8002afc:	6841      	ldr	r1, [r0, #4]
 8002afe:	1062      	asrs	r2, r4, #1
    virtual void execute()
 8002b00:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002b02:	07e4      	lsls	r4, r4, #31
 8002b04:	eb01 0002 	add.w	r0, r1, r2
 8002b08:	689b      	ldr	r3, [r3, #8]
 8002b0a:	bf48      	it	mi
 8002b0c:	588a      	ldrmi	r2, [r1, r2]
    }
 8002b0e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002b12:	bf48      	it	mi
 8002b14:	58d3      	ldrmi	r3, [r2, r3]
 8002b16:	4718      	bx	r3

08002b18 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002b18:	6843      	ldr	r3, [r0, #4]
 8002b1a:	b12b      	cbz	r3, 8002b28 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002b1c:	6883      	ldr	r3, [r0, #8]
 8002b1e:	b92b      	cbnz	r3, 8002b2c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002b20:	68c0      	ldr	r0, [r0, #12]
 8002b22:	f000 0001 	and.w	r0, r0, #1
 8002b26:	4770      	bx	lr
 8002b28:	4618      	mov	r0, r3
 8002b2a:	4770      	bx	lr
 8002b2c:	2001      	movs	r0, #1
    }
 8002b2e:	4770      	bx	lr

08002b30 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002b30:	b510      	push	{r4, lr}
 8002b32:	210c      	movs	r1, #12
 8002b34:	4604      	mov	r4, r0
 8002b36:	f019 fbdd 	bl	801c2f4 <_ZdlPvj>
 8002b3a:	4620      	mov	r0, r4
 8002b3c:	bd10      	pop	{r4, pc}

08002b3e <_ZN23FrontendApplicationBaseD0Ev>:
 8002b3e:	b510      	push	{r4, lr}
 8002b40:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002b44:	4604      	mov	r4, r0
 8002b46:	f019 fbd5 	bl	801c2f4 <_ZdlPvj>
 8002b4a:	4620      	mov	r0, r4
 8002b4c:	bd10      	pop	{r4, pc}

08002b4e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b4e:	b510      	push	{r4, lr}
 8002b50:	2110      	movs	r1, #16
 8002b52:	4604      	mov	r4, r0
 8002b54:	f019 fbce 	bl	801c2f4 <_ZdlPvj>
 8002b58:	4620      	mov	r0, r4
 8002b5a:	bd10      	pop	{r4, pc}

08002b5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 8002b5c:	b510      	push	{r4, lr}
 8002b5e:	2154      	movs	r1, #84	; 0x54
 8002b60:	4604      	mov	r4, r0
 8002b62:	f019 fbc7 	bl	801c2f4 <_ZdlPvj>
 8002b66:	4620      	mov	r0, r4
 8002b68:	bd10      	pop	{r4, pc}

08002b6a <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b6a:	b510      	push	{r4, lr}
 8002b6c:	2110      	movs	r1, #16
 8002b6e:	4604      	mov	r4, r0
 8002b70:	f019 fbc0 	bl	801c2f4 <_ZdlPvj>
 8002b74:	4620      	mov	r0, r4
 8002b76:	bd10      	pop	{r4, pc}

08002b78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8002b78:	b510      	push	{r4, lr}
 8002b7a:	2154      	movs	r1, #84	; 0x54
 8002b7c:	4604      	mov	r4, r0
 8002b7e:	f019 fbb9 	bl	801c2f4 <_ZdlPvj>
 8002b82:	4620      	mov	r0, r4
 8002b84:	bd10      	pop	{r4, pc}

08002b86 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED0Ev>:
 8002b86:	b510      	push	{r4, lr}
 8002b88:	2110      	movs	r1, #16
 8002b8a:	4604      	mov	r4, r0
 8002b8c:	f019 fbb2 	bl	801c2f4 <_ZdlPvj>
 8002b90:	4620      	mov	r0, r4
 8002b92:	bd10      	pop	{r4, pc}

08002b94 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002b94:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8002b96:	f00b faef 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 8002b9a:	6803      	ldr	r3, [r0, #0]
    }
 8002b9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002ba0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ba2:	4718      	bx	r3

08002ba4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE>:
    /**
     * Moves the Drawable.
     *
     * @param [in] d The Drawable to move.
     */
    virtual void tickMoveDrawable(Drawable& d)
 8002ba4:	4603      	mov	r3, r0
 8002ba6:	b410      	push	{r4}
    {
        if (&d == snapshotPtr)
 8002ba8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002baa:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8002bac:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8002bae:	d018      	beq.n	8002be2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x3e>
        {
            return;
        }

        switch (direction)
 8002bb0:	f893 204c 	ldrb.w	r2, [r3, #76]	; 0x4c
 8002bb4:	2a03      	cmp	r2, #3
 8002bb6:	d812      	bhi.n	8002bde <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x3a>
 8002bb8:	e8df f002 	tbb	[pc, r2]
 8002bbc:	02020b0b 	.word	0x02020b0b
        {
        case EAST:
        case WEST:
            d.moveRelative(calculatedValue, 0);
 8002bc0:	6802      	ldr	r2, [r0, #0]
 8002bc2:	f9b3 1052 	ldrsh.w	r1, [r3, #82]	; 0x52
 8002bc6:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002bc8:	2200      	movs	r2, #0
            break;
        case NORTH:
        case SOUTH:
            d.moveRelative(0, calculatedValue);
 8002bca:	4623      	mov	r3, r4
        default:
            // Special case, do not move. Class NoTransition can be used instead.
            done = true;
            break;
        }
    }
 8002bcc:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, calculatedValue);
 8002bd0:	4718      	bx	r3
 8002bd2:	6802      	ldr	r2, [r0, #0]
 8002bd4:	2100      	movs	r1, #0
 8002bd6:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002bd8:	f9b3 2052 	ldrsh.w	r2, [r3, #82]	; 0x52
 8002bdc:	e7f5      	b.n	8002bca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x26>
            done = true;
 8002bde:	2201      	movs	r2, #1
 8002be0:	721a      	strb	r2, [r3, #8]
    }
 8002be2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002be6:	4770      	bx	lr

08002be8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 8002be8:	4603      	mov	r3, r0
 8002bea:	b410      	push	{r4}
        if (&d == snapshotPtr)
 8002bec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002bee:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8002bf0:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8002bf2:	d018      	beq.n	8002c26 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x3e>
        switch (direction)
 8002bf4:	f893 204c 	ldrb.w	r2, [r3, #76]	; 0x4c
 8002bf8:	2a03      	cmp	r2, #3
 8002bfa:	d812      	bhi.n	8002c22 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x3a>
 8002bfc:	e8df f002 	tbb	[pc, r2]
 8002c00:	02020b0b 	.word	0x02020b0b
            d.moveRelative(calculatedValue, 0);
 8002c04:	6802      	ldr	r2, [r0, #0]
 8002c06:	f9b3 1052 	ldrsh.w	r1, [r3, #82]	; 0x52
 8002c0a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002c0c:	2200      	movs	r2, #0
            d.moveRelative(0, calculatedValue);
 8002c0e:	4623      	mov	r3, r4
    }
 8002c10:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, calculatedValue);
 8002c14:	4718      	bx	r3
 8002c16:	6802      	ldr	r2, [r0, #0]
 8002c18:	2100      	movs	r1, #0
 8002c1a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002c1c:	f9b3 2052 	ldrsh.w	r2, [r3, #82]	; 0x52
 8002c20:	e7f5      	b.n	8002c0e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x26>
            done = true;
 8002c22:	2201      	movs	r2, #1
 8002c24:	721a      	strb	r2, [r3, #8]
    }
 8002c26:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002c2a:	4770      	bx	lr

08002c2c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002c2c:	4b05      	ldr	r3, [pc, #20]	; (8002c44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 8002c2e:	781b      	ldrb	r3, [r3, #0]
 8002c30:	b13b      	cbz	r3, 8002c42 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
 8002c32:	6843      	ldr	r3, [r0, #4]
 8002c34:	b12b      	cbz	r3, 8002c42 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
 8002c36:	681a      	ldr	r2, [r3, #0]
 8002c38:	f100 010c 	add.w	r1, r0, #12
 8002c3c:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8002c3e:	4618      	mov	r0, r3
 8002c40:	4710      	bx	r2
    }
 8002c42:	4770      	bx	lr
 8002c44:	200124b7 	.word	0x200124b7

08002c48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE.part.5>:
            d.moveRelative(0, -HAL::DISPLAY_HEIGHT);
 8002c48:	4b03      	ldr	r3, [pc, #12]	; (8002c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE.part.5+0x10>)
 8002c4a:	881a      	ldrh	r2, [r3, #0]
 8002c4c:	6803      	ldr	r3, [r0, #0]
 8002c4e:	4252      	negs	r2, r2
 8002c50:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002c52:	b212      	sxth	r2, r2
 8002c54:	2100      	movs	r1, #0
 8002c56:	4718      	bx	r3
 8002c58:	200124ae 	.word	0x200124ae

08002c5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE>:
        switch (direction)
 8002c5c:	f890 204c 	ldrb.w	r2, [r0, #76]	; 0x4c
    virtual void initMoveDrawable(Drawable& d)
 8002c60:	b410      	push	{r4}
 8002c62:	460b      	mov	r3, r1
        switch (direction)
 8002c64:	2a03      	cmp	r2, #3
 8002c66:	d822      	bhi.n	8002cae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x52>
 8002c68:	e8df f002 	tbb	[pc, r2]
 8002c6c:	0d021a15 	.word	0x0d021a15
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 8002c70:	4910      	ldr	r1, [pc, #64]	; (8002cb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x58>)
 8002c72:	681a      	ldr	r2, [r3, #0]
 8002c74:	f9b1 1000 	ldrsh.w	r1, [r1]
 8002c78:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002c7a:	2200      	movs	r2, #0
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002c7c:	4618      	mov	r0, r3
 8002c7e:	4623      	mov	r3, r4
    }
 8002c80:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002c84:	4718      	bx	r3
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 8002c86:	4a0b      	ldr	r2, [pc, #44]	; (8002cb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x58>)
 8002c88:	8811      	ldrh	r1, [r2, #0]
 8002c8a:	681a      	ldr	r2, [r3, #0]
 8002c8c:	4249      	negs	r1, r1
 8002c8e:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002c90:	b209      	sxth	r1, r1
 8002c92:	2200      	movs	r2, #0
 8002c94:	e7f2      	b.n	8002c7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x20>
 8002c96:	4618      	mov	r0, r3
    }
 8002c98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002c9c:	f7ff bfd4 	b.w	8002c48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE.part.5>
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002ca0:	681a      	ldr	r2, [r3, #0]
 8002ca2:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002ca4:	4a04      	ldr	r2, [pc, #16]	; (8002cb8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x5c>)
 8002ca6:	2100      	movs	r1, #0
 8002ca8:	f9b2 2000 	ldrsh.w	r2, [r2]
 8002cac:	e7e6      	b.n	8002c7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x20>
    }
 8002cae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002cb2:	4770      	bx	lr
 8002cb4:	200124ac 	.word	0x200124ac
 8002cb8:	200124ae 	.word	0x200124ae

08002cbc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002cbc:	4b05      	ldr	r3, [pc, #20]	; (8002cd4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 8002cbe:	781b      	ldrb	r3, [r3, #0]
 8002cc0:	b13b      	cbz	r3, 8002cd2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
 8002cc2:	6843      	ldr	r3, [r0, #4]
 8002cc4:	b12b      	cbz	r3, 8002cd2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
 8002cc6:	681a      	ldr	r2, [r3, #0]
 8002cc8:	f100 010c 	add.w	r1, r0, #12
 8002ccc:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8002cce:	4618      	mov	r0, r3
 8002cd0:	4710      	bx	r2
    }
 8002cd2:	4770      	bx	lr
 8002cd4:	200124b7 	.word	0x200124b7

08002cd8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE>:
        switch (direction)
 8002cd8:	f890 204c 	ldrb.w	r2, [r0, #76]	; 0x4c
    virtual void initMoveDrawable(Drawable& d)
 8002cdc:	b410      	push	{r4}
 8002cde:	460b      	mov	r3, r1
        switch (direction)
 8002ce0:	2a03      	cmp	r2, #3
 8002ce2:	d822      	bhi.n	8002d2a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x52>
 8002ce4:	e8df f002 	tbb	[pc, r2]
 8002ce8:	0d021a15 	.word	0x0d021a15
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 8002cec:	4910      	ldr	r1, [pc, #64]	; (8002d30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x58>)
 8002cee:	681a      	ldr	r2, [r3, #0]
 8002cf0:	f9b1 1000 	ldrsh.w	r1, [r1]
 8002cf4:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002cf6:	2200      	movs	r2, #0
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	4623      	mov	r3, r4
    }
 8002cfc:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002d00:	4718      	bx	r3
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 8002d02:	4a0b      	ldr	r2, [pc, #44]	; (8002d30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x58>)
 8002d04:	8811      	ldrh	r1, [r2, #0]
 8002d06:	681a      	ldr	r2, [r3, #0]
 8002d08:	4249      	negs	r1, r1
 8002d0a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002d0c:	b209      	sxth	r1, r1
 8002d0e:	2200      	movs	r2, #0
 8002d10:	e7f2      	b.n	8002cf8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x20>
 8002d12:	4618      	mov	r0, r3
    }
 8002d14:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002d18:	f7ff bf96 	b.w	8002c48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE.part.5>
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002d1c:	681a      	ldr	r2, [r3, #0]
 8002d1e:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002d20:	4a04      	ldr	r2, [pc, #16]	; (8002d34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x5c>)
 8002d22:	2100      	movs	r1, #0
 8002d24:	f9b2 2000 	ldrsh.w	r2, [r2]
 8002d28:	e7e6      	b.n	8002cf8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x20>
    }
 8002d2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002d2e:	4770      	bx	lr
 8002d30:	200124ac 	.word	0x200124ac
 8002d34:	200124ae 	.word	0x200124ae

08002d38 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8002d38:	4b29      	ldr	r3, [pc, #164]	; (8002de0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa8>)
 8002d3a:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8002d3c:	b510      	push	{r4, lr}
 8002d3e:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 8002d40:	b913      	cbnz	r3, 8002d48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x10>
            done = true;
 8002d42:	2301      	movs	r3, #1
 8002d44:	7203      	strb	r3, [r0, #8]
    }
 8002d46:	bd10      	pop	{r4, pc}
        animationCounter++;
 8002d48:	f890 004e 	ldrb.w	r0, [r0, #78]	; 0x4e
        if (animationCounter <= animationSteps)
 8002d4c:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
        animationCounter++;
 8002d50:	3001      	adds	r0, #1
 8002d52:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8002d54:	4298      	cmp	r0, r3
        animationCounter++;
 8002d56:	f884 004e 	strb.w	r0, [r4, #78]	; 0x4e
        if (animationCounter <= animationSteps)
 8002d5a:	d818      	bhi.n	8002d8e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x56>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002d5c:	f9b4 2050 	ldrsh.w	r2, [r4, #80]	; 0x50
 8002d60:	2100      	movs	r1, #0
 8002d62:	f00c fc23 	bl	800f5ac <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002d66:	b283      	uxth	r3, r0
 8002d68:	f013 0201 	ands.w	r2, r3, #1
 8002d6c:	d015      	beq.n	8002d9a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x62>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002d6e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002d72:	2800      	cmp	r0, #0
 8002d74:	bfd8      	it	le
 8002d76:	460a      	movle	r2, r1
 8002d78:	4413      	add	r3, r2
 8002d7a:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
        switch (direction)
 8002d7e:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 8002d82:	2b03      	cmp	r3, #3
 8002d84:	d829      	bhi.n	8002dda <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa2>
 8002d86:	e8df f003 	tbb	[pc, r3]
 8002d8a:	1f1f      	.short	0x1f1f
 8002d8c:	0b0b      	.short	0x0b0b
            done = true;
 8002d8e:	2301      	movs	r3, #1
 8002d90:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002d92:	2300      	movs	r3, #0
 8002d94:	f884 304e 	strb.w	r3, [r4, #78]	; 0x4e
            return;
 8002d98:	e7d5      	b.n	8002d46 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002d9a:	f8a4 0052 	strh.w	r0, [r4, #82]	; 0x52
 8002d9e:	e7ee      	b.n	8002d7e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x46>
            calculatedValue -= snapshot.getX();
 8002da0:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 8002da4:	8a23      	ldrh	r3, [r4, #16]
 8002da6:	1ac9      	subs	r1, r1, r3
 8002da8:	b209      	sxth	r1, r1
 8002daa:	f8a4 1052 	strh.w	r1, [r4, #82]	; 0x52
            snapshot.moveRelative(calculatedValue, 0);
 8002dae:	2200      	movs	r2, #0
            snapshot.moveRelative(0, calculatedValue);
 8002db0:	f104 000c 	add.w	r0, r4, #12
 8002db4:	f00b ff27 	bl	800ec06 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8002db8:	6860      	ldr	r0, [r4, #4]
 8002dba:	6803      	ldr	r3, [r0, #0]
 8002dbc:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8002dc0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    }
 8002dc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002dc6:	4718      	bx	r3
            calculatedValue -= snapshot.getY();
 8002dc8:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
 8002dcc:	8a63      	ldrh	r3, [r4, #18]
 8002dce:	1ad2      	subs	r2, r2, r3
 8002dd0:	b212      	sxth	r2, r2
 8002dd2:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
            snapshot.moveRelative(0, calculatedValue);
 8002dd6:	2100      	movs	r1, #0
 8002dd8:	e7ea      	b.n	8002db0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x78>
            done = true;
 8002dda:	2301      	movs	r3, #1
 8002ddc:	7223      	strb	r3, [r4, #8]
            break;
 8002dde:	e7eb      	b.n	8002db8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>
 8002de0:	200124b7 	.word	0x200124b7

08002de4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8002de4:	4b29      	ldr	r3, [pc, #164]	; (8002e8c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa8>)
 8002de6:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8002de8:	b510      	push	{r4, lr}
 8002dea:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 8002dec:	b913      	cbnz	r3, 8002df4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x10>
            done = true;
 8002dee:	2301      	movs	r3, #1
 8002df0:	7203      	strb	r3, [r0, #8]
    }
 8002df2:	bd10      	pop	{r4, pc}
        animationCounter++;
 8002df4:	f890 004e 	ldrb.w	r0, [r0, #78]	; 0x4e
        if (animationCounter <= animationSteps)
 8002df8:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
        animationCounter++;
 8002dfc:	3001      	adds	r0, #1
 8002dfe:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8002e00:	4298      	cmp	r0, r3
        animationCounter++;
 8002e02:	f884 004e 	strb.w	r0, [r4, #78]	; 0x4e
        if (animationCounter <= animationSteps)
 8002e06:	d818      	bhi.n	8002e3a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x56>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002e08:	f9b4 2050 	ldrsh.w	r2, [r4, #80]	; 0x50
 8002e0c:	2100      	movs	r1, #0
 8002e0e:	f00c fbcd 	bl	800f5ac <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002e12:	b283      	uxth	r3, r0
 8002e14:	f013 0201 	ands.w	r2, r3, #1
 8002e18:	d015      	beq.n	8002e46 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x62>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002e1a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002e1e:	2800      	cmp	r0, #0
 8002e20:	bfd8      	it	le
 8002e22:	460a      	movle	r2, r1
 8002e24:	4413      	add	r3, r2
 8002e26:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
        switch (direction)
 8002e2a:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 8002e2e:	2b03      	cmp	r3, #3
 8002e30:	d829      	bhi.n	8002e86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa2>
 8002e32:	e8df f003 	tbb	[pc, r3]
 8002e36:	1f1f      	.short	0x1f1f
 8002e38:	0b0b      	.short	0x0b0b
            done = true;
 8002e3a:	2301      	movs	r3, #1
 8002e3c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002e3e:	2300      	movs	r3, #0
 8002e40:	f884 304e 	strb.w	r3, [r4, #78]	; 0x4e
            return;
 8002e44:	e7d5      	b.n	8002df2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002e46:	f8a4 0052 	strh.w	r0, [r4, #82]	; 0x52
 8002e4a:	e7ee      	b.n	8002e2a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x46>
            calculatedValue -= snapshot.getX();
 8002e4c:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 8002e50:	8a23      	ldrh	r3, [r4, #16]
 8002e52:	1ac9      	subs	r1, r1, r3
 8002e54:	b209      	sxth	r1, r1
 8002e56:	f8a4 1052 	strh.w	r1, [r4, #82]	; 0x52
            snapshot.moveRelative(calculatedValue, 0);
 8002e5a:	2200      	movs	r2, #0
            snapshot.moveRelative(0, calculatedValue);
 8002e5c:	f104 000c 	add.w	r0, r4, #12
 8002e60:	f00b fed1 	bl	800ec06 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8002e64:	6860      	ldr	r0, [r4, #4]
 8002e66:	6803      	ldr	r3, [r0, #0]
 8002e68:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8002e6c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    }
 8002e6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002e72:	4718      	bx	r3
            calculatedValue -= snapshot.getY();
 8002e74:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
 8002e78:	8a63      	ldrh	r3, [r4, #18]
 8002e7a:	1ad2      	subs	r2, r2, r3
 8002e7c:	b212      	sxth	r2, r2
 8002e7e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
            snapshot.moveRelative(0, calculatedValue);
 8002e82:	2100      	movs	r1, #0
 8002e84:	e7ea      	b.n	8002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x78>
            done = true;
 8002e86:	2301      	movs	r3, #1
 8002e88:	7223      	strb	r3, [r4, #8]
            break;
 8002e8a:	e7eb      	b.n	8002e64 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
 8002e8c:	200124b7 	.word	0x200124b7

08002e90 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002e90:	b510      	push	{r4, lr}
 8002e92:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002e94:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002e98:	b158      	cbz	r0, 8002eb2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002e9a:	6803      	ldr	r3, [r0, #0]
 8002e9c:	68db      	ldr	r3, [r3, #12]
 8002e9e:	4798      	blx	r3
 8002ea0:	b138      	cbz	r0, 8002eb2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002ea2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002ea6:	6803      	ldr	r3, [r0, #0]
 8002ea8:	689b      	ldr	r3, [r3, #8]
 8002eaa:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002eac:	2300      	movs	r3, #0
 8002eae:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002eb2:	bd10      	pop	{r4, pc}

08002eb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
    virtual void init()
 8002eb4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 8002eb6:	4b0c      	ldr	r3, [pc, #48]	; (8002ee8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x34>)
 8002eb8:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8002eba:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8002ebc:	b18b      	cbz	r3, 8002ee2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x2e>
    {
 8002ebe:	4b0b      	ldr	r3, [pc, #44]	; (8002eec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>)
        this->pmemfun_1 = pmemfun_1;
 8002ec0:	221c      	movs	r2, #28
        this->pobject = pobject;
 8002ec2:	e9cd 3000 	strd	r3, r0, [sp]
        this->pmemfun_1 = pmemfun_1;
 8002ec6:	2301      	movs	r3, #1
 8002ec8:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8002ecc:	6840      	ldr	r0, [r0, #4]
 8002ece:	6803      	ldr	r3, [r0, #0]
 8002ed0:	4669      	mov	r1, sp
 8002ed2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002ed4:	4798      	blx	r3
            screenContainer->add(snapshot);
 8002ed6:	6860      	ldr	r0, [r4, #4]
 8002ed8:	6803      	ldr	r3, [r0, #0]
 8002eda:	f104 010c 	add.w	r1, r4, #12
 8002ede:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002ee0:	4798      	blx	r3
    }
 8002ee2:	b004      	add	sp, #16
 8002ee4:	bd10      	pop	{r4, pc}
 8002ee6:	bf00      	nop
 8002ee8:	200124b7 	.word	0x200124b7
 8002eec:	0801db20 	.word	0x0801db20

08002ef0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8002ef0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 8002ef2:	4b0c      	ldr	r3, [pc, #48]	; (8002f24 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x34>)
 8002ef4:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8002ef6:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8002ef8:	b18b      	cbz	r3, 8002f1e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
    {
 8002efa:	4b0b      	ldr	r3, [pc, #44]	; (8002f28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>)
        this->pmemfun_1 = pmemfun_1;
 8002efc:	221c      	movs	r2, #28
        this->pobject = pobject;
 8002efe:	e9cd 3000 	strd	r3, r0, [sp]
        this->pmemfun_1 = pmemfun_1;
 8002f02:	2301      	movs	r3, #1
 8002f04:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8002f08:	6840      	ldr	r0, [r0, #4]
 8002f0a:	6803      	ldr	r3, [r0, #0]
 8002f0c:	4669      	mov	r1, sp
 8002f0e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002f10:	4798      	blx	r3
            screenContainer->add(snapshot);
 8002f12:	6860      	ldr	r0, [r4, #4]
 8002f14:	6803      	ldr	r3, [r0, #0]
 8002f16:	f104 010c 	add.w	r1, r4, #12
 8002f1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002f1c:	4798      	blx	r3
    }
 8002f1e:	b004      	add	sp, #16
 8002f20:	bd10      	pop	{r4, pc}
 8002f22:	bf00      	nop
 8002f24:	200124b7 	.word	0x200124b7
 8002f28:	0801dadc 	.word	0x0801dadc

08002f2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/sequencescreen_screen/sequenceScreenView.hpp>
#include <gui/sequencescreen_screen/sequenceScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002f2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f2e:	4604      	mov	r4, r0
 8002f30:	4617      	mov	r7, r2
 8002f32:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002f34:	f00b f988 	bl	800e248 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002f38:	4b14      	ldr	r3, [pc, #80]	; (8002f8c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8002f3a:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8002f3e:	601c      	str	r4, [r3, #0]
        return instance;
 8002f40:	4e13      	ldr	r6, [pc, #76]	; (8002f90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8002f42:	4b14      	ldr	r3, [pc, #80]	; (8002f94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8002f44:	6023      	str	r3, [r4, #0]
          pendingScreenTransitionCallback(0)
 8002f46:	2500      	movs	r5, #0
 8002f48:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun_0(0)
 8002f4a:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8002f4e:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8002f52:	4b11      	ldr	r3, [pc, #68]	; (8002f98 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8002f54:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f58:	6803      	ldr	r3, [r0, #0]
 8002f5a:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8002f5e:	689b      	ldr	r3, [r3, #8]
 8002f60:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 8002f64:	2101      	movs	r1, #1
 8002f66:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 8002f6a:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f6e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002f70:	4628      	mov	r0, r5
 8002f72:	f000 fc65 	bl	8003840 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002f76:	6833      	ldr	r3, [r6, #0]
 8002f78:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002f7c:	b10a      	cbz	r2, 8002f82 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 8002f7e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002f80:	b900      	cbnz	r0, 8002f84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 8002f82:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002f84:	f012 f933 	bl	80151ee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002f88:	4620      	mov	r0, r4
 8002f8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f8c:	20012524 	.word	0x20012524
 8002f90:	200124b8 	.word	0x200124b8
 8002f94:	0801da74 	.word	0x0801da74
 8002f98:	0801da5c 	.word	0x0801da5c

08002f9c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f9c:	4b06      	ldr	r3, [pc, #24]	; (8002fb8 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv+0x1c>)
 8002f9e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002fa2:	2300      	movs	r3, #0
 8002fa4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002fa8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002fac:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002fb0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002fb4:	4770      	bx	lr
 8002fb6:	bf00      	nop
 8002fb8:	0800313d 	.word	0x0800313d

08002fbc <_ZN23FrontendApplicationBase39gotomainScreenScreenSlideTransitionWestEv>:
 8002fbc:	4b06      	ldr	r3, [pc, #24]	; (8002fd8 <_ZN23FrontendApplicationBase39gotomainScreenScreenSlideTransitionWestEv+0x1c>)
 8002fbe:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002fc2:	2300      	movs	r3, #0
 8002fc4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
}

void FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002fc8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002fcc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002fd0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002fd4:	4770      	bx	lr
 8002fd6:	bf00      	nop
 8002fd8:	08003335 	.word	0x08003335

08002fdc <_ZN23FrontendApplicationBase43gotosequenceScreenScreenSlideTransitionEastEv>:
 8002fdc:	4b06      	ldr	r3, [pc, #24]	; (8002ff8 <_ZN23FrontendApplicationBase43gotosequenceScreenScreenSlideTransitionEastEv+0x1c>)
 8002fde:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002fe2:	2300      	movs	r3, #0
 8002fe4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// sequenceScreen

void FrontendApplicationBase::gotosequenceScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotosequenceScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002fe8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002fec:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ff0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ff4:	4770      	bx	lr
 8002ff6:	bf00      	nop
 8002ff8:	0800352d 	.word	0x0800352d

08002ffc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002ffc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003000:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003002:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003004:	f8dd a020 	ldr.w	sl, [sp, #32]
 8003008:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800300a:	6803      	ldr	r3, [r0, #0]
 800300c:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800300e:	4688      	mov	r8, r1
 8003010:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003012:	4798      	blx	r3
 8003014:	f5b0 6faa 	cmp.w	r0, #1360	; 0x550
 8003018:	d205      	bcs.n	8003026 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 800301a:	4b42      	ldr	r3, [pc, #264]	; (8003124 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800301c:	4a42      	ldr	r2, [pc, #264]	; (8003128 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800301e:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003020:	4842      	ldr	r0, [pc, #264]	; (800312c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8003022:	f019 f9ab 	bl	801c37c <__assert_func>
 8003026:	6868      	ldr	r0, [r5, #4]
 8003028:	6803      	ldr	r3, [r0, #0]
 800302a:	6a1b      	ldr	r3, [r3, #32]
 800302c:	4798      	blx	r3
 800302e:	280f      	cmp	r0, #15
 8003030:	d803      	bhi.n	800303a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 8003032:	4b3f      	ldr	r3, [pc, #252]	; (8003130 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8003034:	4a3c      	ldr	r2, [pc, #240]	; (8003128 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8003036:	21a8      	movs	r1, #168	; 0xa8
 8003038:	e7f2      	b.n	8003020 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800303a:	68e8      	ldr	r0, [r5, #12]
 800303c:	6803      	ldr	r3, [r0, #0]
 800303e:	6a1b      	ldr	r3, [r3, #32]
 8003040:	4798      	blx	r3
 8003042:	280b      	cmp	r0, #11
 8003044:	d803      	bhi.n	800304e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 8003046:	4b3b      	ldr	r3, [pc, #236]	; (8003134 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8003048:	4a37      	ldr	r2, [pc, #220]	; (8003128 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800304a:	21a9      	movs	r1, #169	; 0xa9
 800304c:	e7e8      	b.n	8003020 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 800304e:	f00b f893 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 8003052:	f00b f8df 	bl	800e214 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8003056:	f8d9 0000 	ldr.w	r0, [r9]
 800305a:	b110      	cbz	r0, 8003062 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 800305c:	6803      	ldr	r3, [r0, #0]
 800305e:	68db      	ldr	r3, [r3, #12]
 8003060:	4798      	blx	r3
    if (*currentTrans)
 8003062:	f8d9 0000 	ldr.w	r0, [r9]
 8003066:	b110      	cbz	r0, 800306e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8003068:	6803      	ldr	r3, [r0, #0]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	4798      	blx	r3
    if (*currentScreen)
 800306e:	6838      	ldr	r0, [r7, #0]
 8003070:	b110      	cbz	r0, 8003078 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 8003072:	6803      	ldr	r3, [r0, #0]
 8003074:	695b      	ldr	r3, [r3, #20]
 8003076:	4798      	blx	r3
    if (*currentPresenter)
 8003078:	f8d8 0000 	ldr.w	r0, [r8]
 800307c:	b110      	cbz	r0, 8003084 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 800307e:	6803      	ldr	r3, [r0, #0]
 8003080:	685b      	ldr	r3, [r3, #4]
 8003082:	4798      	blx	r3
    if (*currentScreen)
 8003084:	6838      	ldr	r0, [r7, #0]
 8003086:	b110      	cbz	r0, 800308e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8003088:	6803      	ldr	r3, [r0, #0]
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	4798      	blx	r3
    if (*currentPresenter)
 800308e:	f8d8 0000 	ldr.w	r0, [r8]
 8003092:	b110      	cbz	r0, 800309a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 8003094:	6803      	ldr	r3, [r0, #0]
 8003096:	689b      	ldr	r3, [r3, #8]
 8003098:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800309a:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800309c:	6803      	ldr	r3, [r0, #0]
 800309e:	2100      	movs	r1, #0
 80030a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030a2:	4798      	blx	r3
 80030a4:	4604      	mov	r4, r0
 80030a6:	b120      	cbz	r0, 80030b2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        : screenContainer(0), done(false)
 80030a8:	2300      	movs	r3, #0
 80030aa:	6043      	str	r3, [r0, #4]
 80030ac:	7203      	strb	r3, [r0, #8]
 80030ae:	4b22      	ldr	r3, [pc, #136]	; (8003138 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 80030b0:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80030b2:	68a8      	ldr	r0, [r5, #8]
 80030b4:	6803      	ldr	r3, [r0, #0]
 80030b6:	2100      	movs	r1, #0
 80030b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030ba:	4798      	blx	r3
 80030bc:	4606      	mov	r6, r0
 80030be:	b108      	cbz	r0, 80030c4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
 80030c0:	f001 fbc8 	bl	8004854 <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80030c4:	6868      	ldr	r0, [r5, #4]
 80030c6:	6803      	ldr	r3, [r0, #0]
 80030c8:	2100      	movs	r1, #0
 80030ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030cc:	4798      	blx	r3
 80030ce:	4605      	mov	r5, r0
 80030d0:	b110      	cbz	r0, 80030d8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 80030d2:	4631      	mov	r1, r6
 80030d4:	f001 fb46 	bl	8004764 <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 80030d8:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80030dc:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 80030e0:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80030e2:	b1e5      	cbz	r5, 800311e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 80030e4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80030e6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80030ea:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80030ec:	f8c5 a008 	str.w	sl, [r5, #8]
 80030f0:	4630      	mov	r0, r6
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80030f2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80030f4:	68db      	ldr	r3, [r3, #12]
 80030f6:	4798      	blx	r3
    newPresenter->activate();
 80030f8:	682b      	ldr	r3, [r5, #0]
 80030fa:	4628      	mov	r0, r5
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003100:	4621      	mov	r1, r4
 8003102:	4630      	mov	r0, r6
 8003104:	f00c fa0c 	bl	800f520 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003108:	6823      	ldr	r3, [r4, #0]
 800310a:	4620      	mov	r0, r4
 800310c:	691b      	ldr	r3, [r3, #16]
 800310e:	4798      	blx	r3
    newTransition->invalidate();
 8003110:	6823      	ldr	r3, [r4, #0]
 8003112:	4620      	mov	r0, r4
 8003114:	695b      	ldr	r3, [r3, #20]
 8003116:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8003118:	4628      	mov	r0, r5
 800311a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 800311e:	462b      	mov	r3, r5
 8003120:	e7e1      	b.n	80030e6 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 8003122:	bf00      	nop
 8003124:	0801db5c 	.word	0x0801db5c
 8003128:	0801dd77 	.word	0x0801dd77
 800312c:	0801dbea 	.word	0x0801dbea
 8003130:	0801dc31 	.word	0x0801dc31
 8003134:	0801dcd4 	.word	0x0801dcd4
 8003138:	0801dab8 	.word	0x0801dab8

0800313c <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv>:
{
 800313c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800313e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8003142:	9300      	str	r3, [sp, #0]
 8003144:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8003148:	4b04      	ldr	r3, [pc, #16]	; (800315c <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x20>)
 800314a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 800314e:	4804      	ldr	r0, [pc, #16]	; (8003160 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x24>)
 8003150:	f7ff ff54 	bl	8002ffc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8003154:	b003      	add	sp, #12
 8003156:	f85d fb04 	ldr.w	pc, [sp], #4
 800315a:	bf00      	nop
 800315c:	20012518 	.word	0x20012518
 8003160:	20012514 	.word	0x20012514

08003164 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003164:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003168:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800316a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800316c:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800316e:	6803      	ldr	r3, [r0, #0]
 8003170:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003172:	4688      	mov	r8, r1
 8003174:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003176:	4798      	blx	r3
 8003178:	f5b0 6faa 	cmp.w	r0, #1360	; 0x550
 800317c:	d205      	bcs.n	800318a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
 800317e:	4b63      	ldr	r3, [pc, #396]	; (800330c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a8>)
 8003180:	4a63      	ldr	r2, [pc, #396]	; (8003310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 8003182:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003184:	4863      	ldr	r0, [pc, #396]	; (8003314 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>)
 8003186:	f019 f8f9 	bl	801c37c <__assert_func>
 800318a:	6868      	ldr	r0, [r5, #4]
 800318c:	6803      	ldr	r3, [r0, #0]
 800318e:	6a1b      	ldr	r3, [r3, #32]
 8003190:	4798      	blx	r3
 8003192:	280f      	cmp	r0, #15
 8003194:	d803      	bhi.n	800319e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3a>
 8003196:	4b60      	ldr	r3, [pc, #384]	; (8003318 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>)
 8003198:	4a5d      	ldr	r2, [pc, #372]	; (8003310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 800319a:	21a8      	movs	r1, #168	; 0xa8
 800319c:	e7f2      	b.n	8003184 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800319e:	68e8      	ldr	r0, [r5, #12]
 80031a0:	6803      	ldr	r3, [r0, #0]
 80031a2:	6a1b      	ldr	r3, [r3, #32]
 80031a4:	4798      	blx	r3
 80031a6:	2853      	cmp	r0, #83	; 0x53
 80031a8:	d803      	bhi.n	80031b2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x4e>
 80031aa:	4b5c      	ldr	r3, [pc, #368]	; (800331c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b8>)
 80031ac:	4a58      	ldr	r2, [pc, #352]	; (8003310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 80031ae:	21a9      	movs	r1, #169	; 0xa9
 80031b0:	e7e8      	b.n	8003184 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80031b2:	f00a ffe1 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 80031b6:	f00b f82d 	bl	800e214 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80031ba:	f8d9 0000 	ldr.w	r0, [r9]
 80031be:	b110      	cbz	r0, 80031c6 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x62>
        (*currentTrans)->tearDown();
 80031c0:	6803      	ldr	r3, [r0, #0]
 80031c2:	68db      	ldr	r3, [r3, #12]
 80031c4:	4798      	blx	r3
    if (*currentTrans)
 80031c6:	f8d9 0000 	ldr.w	r0, [r9]
 80031ca:	b110      	cbz	r0, 80031d2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x6e>
        (*currentTrans)->~Transition();
 80031cc:	6803      	ldr	r3, [r0, #0]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	4798      	blx	r3
    if (*currentScreen)
 80031d2:	6838      	ldr	r0, [r7, #0]
 80031d4:	b110      	cbz	r0, 80031dc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x78>
        (*currentScreen)->tearDownScreen();
 80031d6:	6803      	ldr	r3, [r0, #0]
 80031d8:	695b      	ldr	r3, [r3, #20]
 80031da:	4798      	blx	r3
    if (*currentPresenter)
 80031dc:	f8d8 0000 	ldr.w	r0, [r8]
 80031e0:	b110      	cbz	r0, 80031e8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x84>
        (*currentPresenter)->deactivate();
 80031e2:	6803      	ldr	r3, [r0, #0]
 80031e4:	685b      	ldr	r3, [r3, #4]
 80031e6:	4798      	blx	r3
    if (*currentScreen)
 80031e8:	6838      	ldr	r0, [r7, #0]
 80031ea:	b110      	cbz	r0, 80031f2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8e>
        (*currentScreen)->~Screen();
 80031ec:	6803      	ldr	r3, [r0, #0]
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	4798      	blx	r3
    if (*currentPresenter)
 80031f2:	f8d8 0000 	ldr.w	r0, [r8]
 80031f6:	b110      	cbz	r0, 80031fe <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9a>
        (*currentPresenter)->~Presenter();
 80031f8:	6803      	ldr	r3, [r0, #0]
 80031fa:	689b      	ldr	r3, [r3, #8]
 80031fc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80031fe:	68e8      	ldr	r0, [r5, #12]
 8003200:	6803      	ldr	r3, [r0, #0]
 8003202:	2100      	movs	r1, #0
 8003204:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003206:	4798      	blx	r3
 8003208:	4604      	mov	r4, r0
 800320a:	2800      	cmp	r0, #0
 800320c:	d03e      	beq.n	800328c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
          calculatedValue(0)
 800320e:	4682      	mov	sl, r0
 8003210:	2200      	movs	r2, #0
 8003212:	4943      	ldr	r1, [pc, #268]	; (8003320 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1bc>)
 8003214:	6042      	str	r2, [r0, #4]
 8003216:	7202      	strb	r2, [r0, #8]
 8003218:	f84a 1b0c 	str.w	r1, [sl], #12
 800321c:	4650      	mov	r0, sl
 800321e:	9201      	str	r2, [sp, #4]
 8003220:	f009 fa7c 	bl	800c71c <_ZN8touchgfx14SnapshotWidgetC1Ev>
    {
 8003224:	493f      	ldr	r1, [pc, #252]	; (8003324 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c0>)
 8003226:	9a01      	ldr	r2, [sp, #4]
 8003228:	f8c4 a038 	str.w	sl, [r4, #56]	; 0x38
        this->pobject = pobject;
 800322c:	e9c4 140f 	strd	r1, r4, [r4, #60]	; 0x3c
        this->pmemfun_1 = pmemfun_1;
 8003230:	2320      	movs	r3, #32
 8003232:	2101      	movs	r1, #1
 8003234:	e9c4 3111 	strd	r3, r1, [r4, #68]	; 0x44
 8003238:	2103      	movs	r1, #3
 800323a:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
 800323e:	2114      	movs	r1, #20
 8003240:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
        if (HAL::USE_ANIMATION_STORAGE)
 8003244:	4938      	ldr	r1, [pc, #224]	; (8003328 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c4>)
          calculatedValue(0)
 8003246:	f884 204e 	strb.w	r2, [r4, #78]	; 0x4e
        if (HAL::USE_ANIMATION_STORAGE)
 800324a:	7809      	ldrb	r1, [r1, #0]
          calculatedValue(0)
 800324c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
        if (HAL::USE_ANIMATION_STORAGE)
 8003250:	b1e1      	cbz	r1, 800328c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003252:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8003330 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1cc>
 8003256:	4e35      	ldr	r6, [pc, #212]	; (800332c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c8>)
 8003258:	f9bb 0000 	ldrsh.w	r0, [fp]
 800325c:	f9b6 1000 	ldrsh.w	r1, [r6]
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003260:	82a0      	strh	r0, [r4, #20]
        rect.x = x;
 8003262:	6122      	str	r2, [r4, #16]
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003264:	82e1      	strh	r1, [r4, #22]
            snapshot.makeSnapshot();
 8003266:	4650      	mov	r0, sl
 8003268:	f009 f9d3 	bl	800c612 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            switch (direction)
 800326c:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 8003270:	2b03      	cmp	r3, #3
 8003272:	d845      	bhi.n	8003300 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x19c>
 8003274:	e8df f003 	tbb	[pc, r3]
 8003278:	06024240 	.word	0x06024240
                targetValue = -HAL::DISPLAY_WIDTH;
 800327c:	f8bb 3000 	ldrh.w	r3, [fp]
                targetValue = -HAL::DISPLAY_HEIGHT;
 8003280:	425b      	negs	r3, r3
 8003282:	e001      	b.n	8003288 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
                targetValue = HAL::DISPLAY_WIDTH;
 8003284:	f8bb 3000 	ldrh.w	r3, [fp]
                targetValue = HAL::DISPLAY_HEIGHT;
 8003288:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800328c:	68a8      	ldr	r0, [r5, #8]
 800328e:	6803      	ldr	r3, [r0, #0]
 8003290:	2100      	movs	r1, #0
 8003292:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003294:	4798      	blx	r3
 8003296:	4606      	mov	r6, r0
 8003298:	b108      	cbz	r0, 800329e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13a>
 800329a:	f001 fadb 	bl	8004854 <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800329e:	6868      	ldr	r0, [r5, #4]
 80032a0:	6803      	ldr	r3, [r0, #0]
 80032a2:	2100      	movs	r1, #0
 80032a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032a6:	4798      	blx	r3
 80032a8:	4605      	mov	r5, r0
 80032aa:	b110      	cbz	r0, 80032b2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14e>
 80032ac:	4631      	mov	r1, r6
 80032ae:	f001 fa59 	bl	8004764 <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 80032b2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80032b6:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 80032ba:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80032bc:	b31d      	cbz	r5, 8003306 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a2>
 80032be:	1d2b      	adds	r3, r5, #4
 80032c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80032c2:	6013      	str	r3, [r2, #0]
    newScreen->setupScreen();
 80032c4:	6833      	ldr	r3, [r6, #0]
 80032c6:	60aa      	str	r2, [r5, #8]
 80032c8:	4630      	mov	r0, r6
 80032ca:	63f5      	str	r5, [r6, #60]	; 0x3c
 80032cc:	68db      	ldr	r3, [r3, #12]
 80032ce:	4798      	blx	r3
    newPresenter->activate();
 80032d0:	682b      	ldr	r3, [r5, #0]
 80032d2:	4628      	mov	r0, r5
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80032d8:	4621      	mov	r1, r4
 80032da:	4630      	mov	r0, r6
 80032dc:	f00c f920 	bl	800f520 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80032e0:	6823      	ldr	r3, [r4, #0]
 80032e2:	4620      	mov	r0, r4
 80032e4:	691b      	ldr	r3, [r3, #16]
 80032e6:	4798      	blx	r3
    newTransition->invalidate();
 80032e8:	6823      	ldr	r3, [r4, #0]
 80032ea:	4620      	mov	r0, r4
 80032ec:	695b      	ldr	r3, [r3, #20]
 80032ee:	4798      	blx	r3
}
 80032f0:	4628      	mov	r0, r5
 80032f2:	b003      	add	sp, #12
 80032f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032f8:	8833      	ldrh	r3, [r6, #0]
 80032fa:	e7c5      	b.n	8003288 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
                targetValue = -HAL::DISPLAY_HEIGHT;
 80032fc:	8833      	ldrh	r3, [r6, #0]
 80032fe:	e7bf      	b.n	8003280 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11c>
                done = true;
 8003300:	2301      	movs	r3, #1
 8003302:	7223      	strb	r3, [r4, #8]
 8003304:	e7c2      	b.n	800328c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
    model->bind(newPresenter);
 8003306:	462b      	mov	r3, r5
 8003308:	e7da      	b.n	80032c0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>
 800330a:	bf00      	nop
 800330c:	0801db5c 	.word	0x0801db5c
 8003310:	0801de81 	.word	0x0801de81
 8003314:	0801dbea 	.word	0x0801dbea
 8003318:	0801dc31 	.word	0x0801dc31
 800331c:	0801dcd4 	.word	0x0801dcd4
 8003320:	0801db38 	.word	0x0801db38
 8003324:	0801db20 	.word	0x0801db20
 8003328:	200124b7 	.word	0x200124b7
 800332c:	200124ae 	.word	0x200124ae
 8003330:	200124ac 	.word	0x200124ac

08003334 <_ZN23FrontendApplicationBase43gotomainScreenScreenSlideTransitionWestImplEv>:
{
 8003334:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003336:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800333a:	9300      	str	r3, [sp, #0]
 800333c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8003340:	4b04      	ldr	r3, [pc, #16]	; (8003354 <_ZN23FrontendApplicationBase43gotomainScreenScreenSlideTransitionWestImplEv+0x20>)
 8003342:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8003346:	4804      	ldr	r0, [pc, #16]	; (8003358 <_ZN23FrontendApplicationBase43gotomainScreenScreenSlideTransitionWestImplEv+0x24>)
 8003348:	f7ff ff0c 	bl	8003164 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800334c:	b003      	add	sp, #12
 800334e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003352:	bf00      	nop
 8003354:	20012518 	.word	0x20012518
 8003358:	20012514 	.word	0x20012514

0800335c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800335c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003360:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003362:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003364:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003366:	6803      	ldr	r3, [r0, #0]
 8003368:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800336a:	4688      	mov	r8, r1
 800336c:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800336e:	4798      	blx	r3
 8003370:	f240 633b 	movw	r3, #1595	; 0x63b
 8003374:	4298      	cmp	r0, r3
 8003376:	d805      	bhi.n	8003384 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x28>
 8003378:	4b62      	ldr	r3, [pc, #392]	; (8003504 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a8>)
 800337a:	4a63      	ldr	r2, [pc, #396]	; (8003508 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 800337c:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800337e:	4863      	ldr	r0, [pc, #396]	; (800350c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>)
 8003380:	f018 fffc 	bl	801c37c <__assert_func>
 8003384:	6868      	ldr	r0, [r5, #4]
 8003386:	6803      	ldr	r3, [r0, #0]
 8003388:	6a1b      	ldr	r3, [r3, #32]
 800338a:	4798      	blx	r3
 800338c:	280f      	cmp	r0, #15
 800338e:	d803      	bhi.n	8003398 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3c>
 8003390:	4b5f      	ldr	r3, [pc, #380]	; (8003510 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>)
 8003392:	4a5d      	ldr	r2, [pc, #372]	; (8003508 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 8003394:	21a8      	movs	r1, #168	; 0xa8
 8003396:	e7f2      	b.n	800337e <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003398:	68e8      	ldr	r0, [r5, #12]
 800339a:	6803      	ldr	r3, [r0, #0]
 800339c:	6a1b      	ldr	r3, [r3, #32]
 800339e:	4798      	blx	r3
 80033a0:	2853      	cmp	r0, #83	; 0x53
 80033a2:	d803      	bhi.n	80033ac <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x50>
 80033a4:	4b5b      	ldr	r3, [pc, #364]	; (8003514 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b8>)
 80033a6:	4a58      	ldr	r2, [pc, #352]	; (8003508 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 80033a8:	21a9      	movs	r1, #169	; 0xa9
 80033aa:	e7e8      	b.n	800337e <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 80033ac:	f00a fee4 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 80033b0:	f00a ff30 	bl	800e214 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80033b4:	f8d9 0000 	ldr.w	r0, [r9]
 80033b8:	b110      	cbz	r0, 80033c0 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x64>
        (*currentTrans)->tearDown();
 80033ba:	6803      	ldr	r3, [r0, #0]
 80033bc:	68db      	ldr	r3, [r3, #12]
 80033be:	4798      	blx	r3
    if (*currentTrans)
 80033c0:	f8d9 0000 	ldr.w	r0, [r9]
 80033c4:	b110      	cbz	r0, 80033cc <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
        (*currentTrans)->~Transition();
 80033c6:	6803      	ldr	r3, [r0, #0]
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	4798      	blx	r3
    if (*currentScreen)
 80033cc:	6838      	ldr	r0, [r7, #0]
 80033ce:	b110      	cbz	r0, 80033d6 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
        (*currentScreen)->tearDownScreen();
 80033d0:	6803      	ldr	r3, [r0, #0]
 80033d2:	695b      	ldr	r3, [r3, #20]
 80033d4:	4798      	blx	r3
    if (*currentPresenter)
 80033d6:	f8d8 0000 	ldr.w	r0, [r8]
 80033da:	b110      	cbz	r0, 80033e2 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x86>
        (*currentPresenter)->deactivate();
 80033dc:	6803      	ldr	r3, [r0, #0]
 80033de:	685b      	ldr	r3, [r3, #4]
 80033e0:	4798      	blx	r3
    if (*currentScreen)
 80033e2:	6838      	ldr	r0, [r7, #0]
 80033e4:	b110      	cbz	r0, 80033ec <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x90>
        (*currentScreen)->~Screen();
 80033e6:	6803      	ldr	r3, [r0, #0]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	4798      	blx	r3
    if (*currentPresenter)
 80033ec:	f8d8 0000 	ldr.w	r0, [r8]
 80033f0:	b110      	cbz	r0, 80033f8 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9c>
        (*currentPresenter)->~Presenter();
 80033f2:	6803      	ldr	r3, [r0, #0]
 80033f4:	689b      	ldr	r3, [r3, #8]
 80033f6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80033f8:	68e8      	ldr	r0, [r5, #12]
 80033fa:	6803      	ldr	r3, [r0, #0]
 80033fc:	2100      	movs	r1, #0
 80033fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003400:	4798      	blx	r3
 8003402:	4604      	mov	r4, r0
 8003404:	2800      	cmp	r0, #0
 8003406:	d03e      	beq.n	8003486 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
          calculatedValue(0)
 8003408:	4682      	mov	sl, r0
 800340a:	2200      	movs	r2, #0
 800340c:	4942      	ldr	r1, [pc, #264]	; (8003518 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1bc>)
 800340e:	6042      	str	r2, [r0, #4]
 8003410:	7202      	strb	r2, [r0, #8]
 8003412:	f84a 1b0c 	str.w	r1, [sl], #12
 8003416:	4650      	mov	r0, sl
 8003418:	9201      	str	r2, [sp, #4]
 800341a:	f009 f97f 	bl	800c71c <_ZN8touchgfx14SnapshotWidgetC1Ev>
    {
 800341e:	493f      	ldr	r1, [pc, #252]	; (800351c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c0>)
 8003420:	9a01      	ldr	r2, [sp, #4]
 8003422:	f8c4 a038 	str.w	sl, [r4, #56]	; 0x38
        this->pobject = pobject;
 8003426:	e9c4 140f 	strd	r1, r4, [r4, #60]	; 0x3c
        this->pmemfun_1 = pmemfun_1;
 800342a:	2320      	movs	r3, #32
 800342c:	2101      	movs	r1, #1
 800342e:	e9c4 3111 	strd	r3, r1, [r4, #68]	; 0x44
 8003432:	2102      	movs	r1, #2
 8003434:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
 8003438:	2114      	movs	r1, #20
 800343a:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
        if (HAL::USE_ANIMATION_STORAGE)
 800343e:	4938      	ldr	r1, [pc, #224]	; (8003520 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c4>)
          calculatedValue(0)
 8003440:	f884 204e 	strb.w	r2, [r4, #78]	; 0x4e
        if (HAL::USE_ANIMATION_STORAGE)
 8003444:	7809      	ldrb	r1, [r1, #0]
          calculatedValue(0)
 8003446:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
        if (HAL::USE_ANIMATION_STORAGE)
 800344a:	b1e1      	cbz	r1, 8003486 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800344c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8003528 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1cc>
 8003450:	4e34      	ldr	r6, [pc, #208]	; (8003524 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c8>)
 8003452:	f9bb 0000 	ldrsh.w	r0, [fp]
 8003456:	f9b6 1000 	ldrsh.w	r1, [r6]
        rect.width = width;
 800345a:	82a0      	strh	r0, [r4, #20]
        rect.x = x;
 800345c:	6122      	str	r2, [r4, #16]
        rect.height = height;
 800345e:	82e1      	strh	r1, [r4, #22]
            snapshot.makeSnapshot();
 8003460:	4650      	mov	r0, sl
 8003462:	f009 f8d6 	bl	800c612 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            switch (direction)
 8003466:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800346a:	2b03      	cmp	r3, #3
 800346c:	d845      	bhi.n	80034fa <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x19e>
 800346e:	e8df f003 	tbb	[pc, r3]
 8003472:	4240      	.short	0x4240
 8003474:	0602      	.short	0x0602
                targetValue = -HAL::DISPLAY_WIDTH;
 8003476:	f8bb 3000 	ldrh.w	r3, [fp]
                targetValue = -HAL::DISPLAY_HEIGHT;
 800347a:	425b      	negs	r3, r3
 800347c:	e001      	b.n	8003482 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x126>
                targetValue = HAL::DISPLAY_WIDTH;
 800347e:	f8bb 3000 	ldrh.w	r3, [fp]
                targetValue = HAL::DISPLAY_HEIGHT;
 8003482:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003486:	68a8      	ldr	r0, [r5, #8]
 8003488:	6803      	ldr	r3, [r0, #0]
 800348a:	2100      	movs	r1, #0
 800348c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800348e:	4798      	blx	r3
 8003490:	4606      	mov	r6, r0
 8003492:	b108      	cbz	r0, 8003498 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>
 8003494:	f001 fa64 	bl	8004960 <_ZN18sequenceScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003498:	6868      	ldr	r0, [r5, #4]
 800349a:	6803      	ldr	r3, [r0, #0]
 800349c:	2100      	movs	r1, #0
 800349e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034a0:	4798      	blx	r3
 80034a2:	4605      	mov	r5, r0
 80034a4:	b110      	cbz	r0, 80034ac <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x150>
 80034a6:	4631      	mov	r1, r6
 80034a8:	f001 fa30 	bl	800490c <_ZN23sequenceScreenPresenterC1ER18sequenceScreenView>
    *currentTrans = newTransition;
 80034ac:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80034b0:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 80034b4:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80034b6:	b31d      	cbz	r5, 8003500 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a4>
 80034b8:	1d2b      	adds	r3, r5, #4
 80034ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80034bc:	6013      	str	r3, [r2, #0]
    newScreen->setupScreen();
 80034be:	6833      	ldr	r3, [r6, #0]
 80034c0:	60aa      	str	r2, [r5, #8]
 80034c2:	4630      	mov	r0, r6
 80034c4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80034c6:	68db      	ldr	r3, [r3, #12]
 80034c8:	4798      	blx	r3
    newPresenter->activate();
 80034ca:	682b      	ldr	r3, [r5, #0]
 80034cc:	4628      	mov	r0, r5
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80034d2:	4621      	mov	r1, r4
 80034d4:	4630      	mov	r0, r6
 80034d6:	f00c f823 	bl	800f520 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80034da:	6823      	ldr	r3, [r4, #0]
 80034dc:	4620      	mov	r0, r4
 80034de:	691b      	ldr	r3, [r3, #16]
 80034e0:	4798      	blx	r3
    newTransition->invalidate();
 80034e2:	6823      	ldr	r3, [r4, #0]
 80034e4:	4620      	mov	r0, r4
 80034e6:	695b      	ldr	r3, [r3, #20]
 80034e8:	4798      	blx	r3
}
 80034ea:	4628      	mov	r0, r5
 80034ec:	b003      	add	sp, #12
 80034ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034f2:	8833      	ldrh	r3, [r6, #0]
 80034f4:	e7c5      	b.n	8003482 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x126>
                targetValue = -HAL::DISPLAY_HEIGHT;
 80034f6:	8833      	ldrh	r3, [r6, #0]
 80034f8:	e7bf      	b.n	800347a <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11e>
                done = true;
 80034fa:	2301      	movs	r3, #1
 80034fc:	7223      	strb	r3, [r4, #8]
 80034fe:	e7c2      	b.n	8003486 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
    model->bind(newPresenter);
 8003500:	462b      	mov	r3, r5
 8003502:	e7da      	b.n	80034ba <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15e>
 8003504:	0801db5c 	.word	0x0801db5c
 8003508:	0801dfa6 	.word	0x0801dfa6
 800350c:	0801dbea 	.word	0x0801dbea
 8003510:	0801dc31 	.word	0x0801dc31
 8003514:	0801dcd4 	.word	0x0801dcd4
 8003518:	0801daf4 	.word	0x0801daf4
 800351c:	0801dadc 	.word	0x0801dadc
 8003520:	200124b7 	.word	0x200124b7
 8003524:	200124ae 	.word	0x200124ae
 8003528:	200124ac 	.word	0x200124ac

0800352c <_ZN23FrontendApplicationBase47gotosequenceScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotosequenceScreenScreenSlideTransitionEastImpl()
{
 800352c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<sequenceScreenView, sequenceScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800352e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8003532:	9300      	str	r3, [sp, #0]
 8003534:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8003538:	4b04      	ldr	r3, [pc, #16]	; (800354c <_ZN23FrontendApplicationBase47gotosequenceScreenScreenSlideTransitionEastImplEv+0x20>)
 800353a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 800353e:	4804      	ldr	r0, [pc, #16]	; (8003550 <_ZN23FrontendApplicationBase47gotosequenceScreenScreenSlideTransitionEastImplEv+0x24>)
 8003540:	f7ff ff0c 	bl	800335c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8003544:	b003      	add	sp, #12
 8003546:	f85d fb04 	ldr.w	pc, [sp], #4
 800354a:	bf00      	nop
 800354c:	20012518 	.word	0x20012518
 8003550:	20012514 	.word	0x20012514

08003554 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003554:	6a00      	ldr	r0, [r0, #32]
 8003556:	4770      	bx	lr

08003558 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003558:	4770      	bx	lr

0800355a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800355a:	888b      	ldrh	r3, [r1, #4]
 800355c:	6980      	ldr	r0, [r0, #24]
 800355e:	680a      	ldr	r2, [r1, #0]
 8003560:	0adb      	lsrs	r3, r3, #11
 8003562:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8003566:	4410      	add	r0, r2
 8003568:	4770      	bx	lr

0800356a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800356a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800356c:	b1c2      	cbz	r2, 80035a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800356e:	7b13      	ldrb	r3, [r2, #12]
 8003570:	b1b3      	cbz	r3, 80035a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003572:	7b54      	ldrb	r4, [r2, #13]
 8003574:	7ad2      	ldrb	r2, [r2, #11]
 8003576:	0224      	lsls	r4, r4, #8
 8003578:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800357c:	4314      	orrs	r4, r2
 800357e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003580:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003582:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003586:	8813      	ldrh	r3, [r2, #0]
 8003588:	428b      	cmp	r3, r1
 800358a:	d102      	bne.n	8003592 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800358c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8003590:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003592:	d805      	bhi.n	80035a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003594:	3801      	subs	r0, #1
 8003596:	b280      	uxth	r0, r0
 8003598:	3204      	adds	r2, #4
 800359a:	2800      	cmp	r0, #0
 800359c:	d1f3      	bne.n	8003586 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800359e:	e7f7      	b.n	8003590 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80035a0:	2000      	movs	r0, #0
 80035a2:	e7f5      	b.n	8003590 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080035a4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80035a4:	b510      	push	{r4, lr}
 80035a6:	2124      	movs	r1, #36	; 0x24
 80035a8:	4604      	mov	r4, r0
 80035aa:	f018 fea3 	bl	801c2f4 <_ZdlPvj>
 80035ae:	4620      	mov	r0, r4
 80035b0:	bd10      	pop	{r4, pc}
	...

080035b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 80035b4:	b530      	push	{r4, r5, lr}
 80035b6:	b089      	sub	sp, #36	; 0x24
 80035b8:	4604      	mov	r4, r0
    gsubTable(gsubData)
 80035ba:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80035be:	9506      	str	r5, [sp, #24]
 80035c0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80035c4:	9505      	str	r5, [sp, #20]
 80035c6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80035ca:	9504      	str	r5, [sp, #16]
 80035cc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80035d0:	9503      	str	r5, [sp, #12]
 80035d2:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80035d6:	9502      	str	r5, [sp, #8]
 80035d8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80035dc:	9501      	str	r5, [sp, #4]
 80035de:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80035e2:	9500      	str	r5, [sp, #0]
 80035e4:	f00b fb9a 	bl	800ed1c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80035e8:	4b05      	ldr	r3, [pc, #20]	; (8003600 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 80035ea:	6023      	str	r3, [r4, #0]
 80035ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80035ee:	61a3      	str	r3, [r4, #24]
 80035f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80035f2:	61e3      	str	r3, [r4, #28]
 80035f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80035f6:	6223      	str	r3, [r4, #32]
}
 80035f8:	4620      	mov	r0, r4
 80035fa:	b009      	add	sp, #36	; 0x24
 80035fc:	bd30      	pop	{r4, r5, pc}
 80035fe:	bf00      	nop
 8003600:	0801e0dc 	.word	0x0801e0dc

08003604 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003604:	4770      	bx	lr
	...

08003608 <_Z23getFont_verdana_10_4bppv>:
{
 8003608:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800360a:	4d14      	ldr	r5, [pc, #80]	; (800365c <_Z23getFont_verdana_10_4bppv+0x54>)
 800360c:	782c      	ldrb	r4, [r5, #0]
 800360e:	f3bf 8f5b 	dmb	ish
 8003612:	f014 0401 	ands.w	r4, r4, #1
{
 8003616:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003618:	d11d      	bne.n	8003656 <_Z23getFont_verdana_10_4bppv+0x4e>
 800361a:	4628      	mov	r0, r5
 800361c:	f018 fe7d 	bl	801c31a <__cxa_guard_acquire>
 8003620:	b1c8      	cbz	r0, 8003656 <_Z23getFont_verdana_10_4bppv+0x4e>
 8003622:	233f      	movs	r3, #63	; 0x3f
 8003624:	9307      	str	r3, [sp, #28]
 8003626:	4b0e      	ldr	r3, [pc, #56]	; (8003660 <_Z23getFont_verdana_10_4bppv+0x58>)
 8003628:	9306      	str	r3, [sp, #24]
 800362a:	4b0e      	ldr	r3, [pc, #56]	; (8003664 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800362c:	490e      	ldr	r1, [pc, #56]	; (8003668 <_Z23getFont_verdana_10_4bppv+0x60>)
 800362e:	9403      	str	r4, [sp, #12]
 8003630:	2201      	movs	r2, #1
 8003632:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003636:	2304      	movs	r3, #4
 8003638:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800363c:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003640:	230a      	movs	r3, #10
 8003642:	9400      	str	r4, [sp, #0]
 8003644:	4809      	ldr	r0, [pc, #36]	; (800366c <_Z23getFont_verdana_10_4bppv+0x64>)
 8003646:	f7ff ffb5 	bl	80035b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800364a:	4628      	mov	r0, r5
 800364c:	f018 fe71 	bl	801c332 <__cxa_guard_release>
 8003650:	4807      	ldr	r0, [pc, #28]	; (8003670 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003652:	f018 feb1 	bl	801c3b8 <atexit>
    return verdana_10_4bpp;
}
 8003656:	4805      	ldr	r0, [pc, #20]	; (800366c <_Z23getFont_verdana_10_4bppv+0x64>)
 8003658:	b00b      	add	sp, #44	; 0x2c
 800365a:	bd30      	pop	{r4, r5, pc}
 800365c:	200016f8 	.word	0x200016f8
 8003660:	080220f0 	.word	0x080220f0
 8003664:	0801e128 	.word	0x0801e128
 8003668:	08021f38 	.word	0x08021f38
 800366c:	200016fc 	.word	0x200016fc
 8003670:	08003605 	.word	0x08003605

08003674 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 29, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003674:	4770      	bx	lr
	...

08003678 <_Z23getFont_verdana_20_4bppv>:
{
 8003678:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 29, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 800367a:	4d15      	ldr	r5, [pc, #84]	; (80036d0 <_Z23getFont_verdana_20_4bppv+0x58>)
 800367c:	782c      	ldrb	r4, [r5, #0]
 800367e:	f3bf 8f5b 	dmb	ish
 8003682:	f014 0401 	ands.w	r4, r4, #1
{
 8003686:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 29, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003688:	d11e      	bne.n	80036c8 <_Z23getFont_verdana_20_4bppv+0x50>
 800368a:	4628      	mov	r0, r5
 800368c:	f018 fe45 	bl	801c31a <__cxa_guard_acquire>
 8003690:	b1d0      	cbz	r0, 80036c8 <_Z23getFont_verdana_20_4bppv+0x50>
 8003692:	233f      	movs	r3, #63	; 0x3f
 8003694:	9307      	str	r3, [sp, #28]
 8003696:	4b0f      	ldr	r3, [pc, #60]	; (80036d4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003698:	9306      	str	r3, [sp, #24]
 800369a:	4b0f      	ldr	r3, [pc, #60]	; (80036d8 <_Z23getFont_verdana_20_4bppv+0x60>)
 800369c:	9305      	str	r3, [sp, #20]
 800369e:	2301      	movs	r3, #1
 80036a0:	e9cd 4303 	strd	r4, r3, [sp, #12]
 80036a4:	9302      	str	r3, [sp, #8]
 80036a6:	2304      	movs	r3, #4
 80036a8:	e9cd 3300 	strd	r3, r3, [sp]
 80036ac:	221d      	movs	r2, #29
 80036ae:	2314      	movs	r3, #20
 80036b0:	490a      	ldr	r1, [pc, #40]	; (80036dc <_Z23getFont_verdana_20_4bppv+0x64>)
 80036b2:	480b      	ldr	r0, [pc, #44]	; (80036e0 <_Z23getFont_verdana_20_4bppv+0x68>)
 80036b4:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80036b8:	f7ff ff7c 	bl	80035b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80036bc:	4628      	mov	r0, r5
 80036be:	f018 fe38 	bl	801c332 <__cxa_guard_release>
 80036c2:	4808      	ldr	r0, [pc, #32]	; (80036e4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80036c4:	f018 fe78 	bl	801c3b8 <atexit>
    return verdana_20_4bpp;
}
 80036c8:	4805      	ldr	r0, [pc, #20]	; (80036e0 <_Z23getFont_verdana_20_4bppv+0x68>)
 80036ca:	b00b      	add	sp, #44	; 0x2c
 80036cc:	bd30      	pop	{r4, r5, pc}
 80036ce:	bf00      	nop
 80036d0:	20001720 	.word	0x20001720
 80036d4:	080220f4 	.word	0x080220f4
 80036d8:	0801e12c 	.word	0x0801e12c
 80036dc:	08021f48 	.word	0x08021f48
 80036e0:	20001724 	.word	0x20001724
 80036e4:	08003675 	.word	0x08003675

080036e8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80036e8:	4770      	bx	lr
	...

080036ec <_Z23getFont_verdana_40_4bppv>:
{
 80036ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80036ee:	4d14      	ldr	r5, [pc, #80]	; (8003740 <_Z23getFont_verdana_40_4bppv+0x54>)
 80036f0:	782c      	ldrb	r4, [r5, #0]
 80036f2:	f3bf 8f5b 	dmb	ish
 80036f6:	f014 0401 	ands.w	r4, r4, #1
{
 80036fa:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80036fc:	d11d      	bne.n	800373a <_Z23getFont_verdana_40_4bppv+0x4e>
 80036fe:	4628      	mov	r0, r5
 8003700:	f018 fe0b 	bl	801c31a <__cxa_guard_acquire>
 8003704:	b1c8      	cbz	r0, 800373a <_Z23getFont_verdana_40_4bppv+0x4e>
 8003706:	233f      	movs	r3, #63	; 0x3f
 8003708:	9307      	str	r3, [sp, #28]
 800370a:	4b0e      	ldr	r3, [pc, #56]	; (8003744 <_Z23getFont_verdana_40_4bppv+0x58>)
 800370c:	9306      	str	r3, [sp, #24]
 800370e:	4b0e      	ldr	r3, [pc, #56]	; (8003748 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003710:	490e      	ldr	r1, [pc, #56]	; (800374c <_Z23getFont_verdana_40_4bppv+0x60>)
 8003712:	9403      	str	r4, [sp, #12]
 8003714:	2201      	movs	r2, #1
 8003716:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800371a:	2304      	movs	r3, #4
 800371c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003720:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003724:	2328      	movs	r3, #40	; 0x28
 8003726:	9400      	str	r4, [sp, #0]
 8003728:	4809      	ldr	r0, [pc, #36]	; (8003750 <_Z23getFont_verdana_40_4bppv+0x64>)
 800372a:	f7ff ff43 	bl	80035b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800372e:	4628      	mov	r0, r5
 8003730:	f018 fdff 	bl	801c332 <__cxa_guard_release>
 8003734:	4807      	ldr	r0, [pc, #28]	; (8003754 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003736:	f018 fe3f 	bl	801c3b8 <atexit>
    return verdana_40_4bpp;
}
 800373a:	4805      	ldr	r0, [pc, #20]	; (8003750 <_Z23getFont_verdana_40_4bppv+0x64>)
 800373c:	b00b      	add	sp, #44	; 0x2c
 800373e:	bd30      	pop	{r4, r5, pc}
 8003740:	20001748 	.word	0x20001748
 8003744:	08022134 	.word	0x08022134
 8003748:	0801e130 	.word	0x0801e130
 800374c:	080220e0 	.word	0x080220e0
 8003750:	2000174c 	.word	0x2000174c
 8003754:	080036e9 	.word	0x080036e9

08003758 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003758:	2000      	movs	r0, #0
 800375a:	4770      	bx	lr

0800375c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800375c:	b40e      	push	{r1, r2, r3}
 800375e:	b503      	push	{r0, r1, lr}
 8003760:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003762:	2100      	movs	r1, #0
{
 8003764:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003768:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800376a:	f00b f913 	bl	800e994 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800376e:	b002      	add	sp, #8
 8003770:	f85d eb04 	ldr.w	lr, [sp], #4
 8003774:	b003      	add	sp, #12
 8003776:	4770      	bx	lr

08003778 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003778:	b40c      	push	{r2, r3}
 800377a:	b507      	push	{r0, r1, r2, lr}
 800377c:	ab04      	add	r3, sp, #16
 800377e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003782:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003784:	f00b f906 	bl	800e994 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003788:	b003      	add	sp, #12
 800378a:	f85d eb04 	ldr.w	lr, [sp], #4
 800378e:	b002      	add	sp, #8
 8003790:	4770      	bx	lr
	...

08003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003794:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8003796:	b510      	push	{r4, lr}
 8003798:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800379a:	b373      	cbz	r3, 80037fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800379c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800379e:	b92b      	cbnz	r3, 80037ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80037a0:	4b18      	ldr	r3, [pc, #96]	; (8003804 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80037a2:	4a19      	ldr	r2, [pc, #100]	; (8003808 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80037a4:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80037a6:	4819      	ldr	r0, [pc, #100]	; (800380c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80037a8:	f018 fde8 	bl	801c37c <__assert_func>
            return buffer[pos];
 80037ac:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80037ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80037b2:	8b5b      	ldrh	r3, [r3, #26]
 80037b4:	b30b      	cbz	r3, 80037fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80037b6:	f00c fc81 	bl	80100bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80037ba:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80037bc:	2b01      	cmp	r3, #1
 80037be:	d803      	bhi.n	80037c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80037c0:	4b13      	ldr	r3, [pc, #76]	; (8003810 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80037c2:	4a14      	ldr	r2, [pc, #80]	; (8003814 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80037c4:	21c5      	movs	r1, #197	; 0xc5
 80037c6:	e7ee      	b.n	80037a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80037c8:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80037ca:	1c53      	adds	r3, r2, #1
 80037cc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80037ce:	2b09      	cmp	r3, #9
 80037d0:	4619      	mov	r1, r3
 80037d2:	bf88      	it	hi
 80037d4:	f1a3 010a 	subhi.w	r1, r3, #10
 80037d8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 80037dc:	f640 103f 	movw	r0, #2367	; 0x93f
 80037e0:	8b49      	ldrh	r1, [r1, #26]
 80037e2:	4281      	cmp	r1, r0
 80037e4:	d109      	bne.n	80037fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80037e6:	2b0a      	cmp	r3, #10
 80037e8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80037ec:	bf28      	it	cs
 80037ee:	2300      	movcs	r3, #0
 80037f0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80037f4:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 80037f6:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 80037f8:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80037fa:	4620      	mov	r0, r4
}
 80037fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003800:	f00c bb40 	b.w	800fe84 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003804:	0801e134 	.word	0x0801e134
 8003808:	0801e267 	.word	0x0801e267
 800380c:	0801e13d 	.word	0x0801e13d
 8003810:	0801e187 	.word	0x0801e187
 8003814:	0801e195 	.word	0x0801e195

08003818 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003818:	f00c baee 	b.w	800fdf8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800381c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800381c:	b510      	push	{r4, lr}
 800381e:	b086      	sub	sp, #24
 8003820:	ac02      	add	r4, sp, #8
 8003822:	e884 0006 	stmia.w	r4, {r1, r2}
 8003826:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003828:	ab0a      	add	r3, sp, #40	; 0x28
 800382a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800382c:	9301      	str	r3, [sp, #4]
 800382e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003830:	9300      	str	r3, [sp, #0]
 8003832:	4621      	mov	r1, r4
 8003834:	9b08      	ldr	r3, [sp, #32]
 8003836:	f00a f8ae 	bl	800d996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800383a:	b006      	add	sp, #24
 800383c:	bd10      	pop	{r4, pc}
	...

08003840 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003840:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003842:	b9d8      	cbnz	r0, 800387c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 8003844:	4b11      	ldr	r3, [pc, #68]	; (800388c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8003846:	4812      	ldr	r0, [pc, #72]	; (8003890 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	4912      	ldr	r1, [pc, #72]	; (8003894 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800384c:	b1bb      	cbz	r3, 800387e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800384e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003850:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003852:	441a      	add	r2, r3
 8003854:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003856:	685a      	ldr	r2, [r3, #4]
 8003858:	441a      	add	r2, r3
 800385a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800385c:	441c      	add	r4, r3
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 800385e:	b16c      	cbz	r4, 800387c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 8003860:	4b0d      	ldr	r3, [pc, #52]	; (8003898 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003862:	2200      	movs	r2, #0
 8003864:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003866:	f000 f835 	bl	80038d4 <_ZN17TypedTextDatabase8getFontsEv>
 800386a:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800386c:	f000 f830 	bl	80038d0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003870:	4b0a      	ldr	r3, [pc, #40]	; (800389c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003872:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003874:	4b0a      	ldr	r3, [pc, #40]	; (80038a0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003876:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003878:	4b0a      	ldr	r3, [pc, #40]	; (80038a4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800387a:	8018      	strh	r0, [r3, #0]
    }
}
 800387c:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 800387e:	4b0a      	ldr	r3, [pc, #40]	; (80038a8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003880:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003882:	4b0a      	ldr	r3, [pc, #40]	; (80038ac <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003884:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003886:	4b0a      	ldr	r3, [pc, #40]	; (80038b0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003888:	681c      	ldr	r4, [r3, #0]
 800388a:	e7e8      	b.n	800385e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 800388c:	20001770 	.word	0x20001770
 8003890:	20001774 	.word	0x20001774
 8003894:	20001778 	.word	0x20001778
 8003898:	2000177c 	.word	0x2000177c
 800389c:	20012528 	.word	0x20012528
 80038a0:	20012530 	.word	0x20012530
 80038a4:	2001252c 	.word	0x2001252c
 80038a8:	08022158 	.word	0x08022158
 80038ac:	08022138 	.word	0x08022138
 80038b0:	080221e0 	.word	0x080221e0

080038b4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80038b4:	4b04      	ldr	r3, [pc, #16]	; (80038c8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80038bc:	4b03      	ldr	r3, [pc, #12]	; (80038cc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80038be:	681b      	ldr	r3, [r3, #0]
}
 80038c0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80038c4:	4770      	bx	lr
 80038c6:	bf00      	nop
 80038c8:	20001778 	.word	0x20001778
 80038cc:	20001774 	.word	0x20001774

080038d0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80038d0:	2008      	movs	r0, #8
 80038d2:	4770      	bx	lr

080038d4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80038d4:	4800      	ldr	r0, [pc, #0]	; (80038d8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80038d6:	4770      	bx	lr
 80038d8:	20001780 	.word	0x20001780

080038dc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 80038dc:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80038de:	f7ff fecb 	bl	8003678 <_Z23getFont_verdana_20_4bppv>
};
 80038e2:	4c04      	ldr	r4, [pc, #16]	; (80038f4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80038e4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80038e6:	f7ff ff01 	bl	80036ec <_Z23getFont_verdana_40_4bppv>
};
 80038ea:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80038ec:	f7ff fe8c 	bl	8003608 <_Z23getFont_verdana_10_4bppv>
};
 80038f0:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 80038f2:	bd10      	pop	{r4, pc}
 80038f4:	20001780 	.word	0x20001780

080038f8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80038f8:	b570      	push	{r4, r5, r6, lr}
 80038fa:	461e      	mov	r6, r3
        setXY(x, y);
 80038fc:	6803      	ldr	r3, [r0, #0]
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80038fe:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
        setXY(x, y);
 8003902:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003904:	4604      	mov	r4, r0
        setXY(x, y);
 8003906:	4798      	blx	r3
        setWidth(width);
 8003908:	6823      	ldr	r3, [r4, #0]
 800390a:	4631      	mov	r1, r6
 800390c:	4620      	mov	r0, r4
 800390e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003910:	4790      	blx	r2
        setHeight(height);
 8003912:	6823      	ldr	r3, [r4, #0]
 8003914:	4629      	mov	r1, r5
 8003916:	4620      	mov	r0, r4
 8003918:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800391a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800391e:	4718      	bx	r3

08003920 <_ZN8touchgfx8Drawable4setXEs>:
        rect.x = x;
 8003920:	8081      	strh	r1, [r0, #4]
    }
 8003922:	4770      	bx	lr

08003924 <_ZN8touchgfx8Drawable4setYEs>:
        rect.y = y;
 8003924:	80c1      	strh	r1, [r0, #6]
    }
 8003926:	4770      	bx	lr

08003928 <_ZN8touchgfx8Drawable5setXYEss>:
    virtual void setXY(int16_t x, int16_t y)
 8003928:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800392a:	6803      	ldr	r3, [r0, #0]
    virtual void setXY(int16_t x, int16_t y)
 800392c:	4604      	mov	r4, r0
        setX(x);
 800392e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXY(int16_t x, int16_t y)
 8003930:	4615      	mov	r5, r2
        setX(x);
 8003932:	4798      	blx	r3
        setY(y);
 8003934:	6823      	ldr	r3, [r4, #0]
 8003936:	4629      	mov	r1, r5
 8003938:	4620      	mov	r0, r4
 800393a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 800393c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003940:	4718      	bx	r3

08003942 <_ZN8touchgfx8Drawable8setWidthEs>:
        rect.width = width;
 8003942:	8101      	strh	r1, [r0, #8]
    }
 8003944:	4770      	bx	lr

08003946 <_ZN8touchgfx8Drawable9setHeightEs>:
        rect.height = height;
 8003946:	8141      	strh	r1, [r0, #10]
    }
 8003948:	4770      	bx	lr

0800394a <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800394a:	4770      	bx	lr

0800394c <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 800394c:	4770      	bx	lr

0800394e <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 800394e:	4770      	bx	lr

08003950 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 8003950:	4770      	bx	lr

08003952 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003952:	4770      	bx	lr

08003954 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 8003954:	88c3      	ldrh	r3, [r0, #6]
 8003956:	1ad2      	subs	r2, r2, r3
 8003958:	8883      	ldrh	r3, [r0, #4]
 800395a:	1ac9      	subs	r1, r1, r3
 800395c:	6803      	ldr	r3, [r0, #0]
    virtual void moveTo(int16_t x, int16_t y)
 800395e:	b410      	push	{r4}
        moveRelative(x - rect.x, y - rect.y);
 8003960:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 8003962:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003966:	b212      	sxth	r2, r2
 8003968:	b209      	sxth	r1, r1
 800396a:	4718      	bx	r3

0800396c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800396c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003970:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003972:	f04f 33ff 	mov.w	r3, #4294967295
 8003976:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003978:	6813      	ldr	r3, [r2, #0]
 800397a:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800397c:	6010      	str	r0, [r2, #0]
    }
 800397e:	4770      	bx	lr

08003980 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003980:	4770      	bx	lr

08003982 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003982:	4770      	bx	lr

08003984 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see touchgfx::Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003984:	4770      	bx	lr

08003986 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003986:	4770      	bx	lr

08003988 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8003988:	4770      	bx	lr

0800398a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800398a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800398e:	b11a      	cbz	r2, 8003998 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003990:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003994:	b102      	cbz	r2, 8003998 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8003996:	6018      	str	r0, [r3, #0]
        }
    }
 8003998:	4770      	bx	lr

0800399a <_ZN18mainScreenViewBaseD1Ev>:

class mainScreenViewBase : public touchgfx::View<mainScreenPresenter>
{
public:
    mainScreenViewBase();
    virtual ~mainScreenViewBase() {}
 800399a:	4770      	bx	lr

0800399c <_ZN18mainScreenViewBase24XAxisSliderValue_ChangedEi>:
     * Virtual Action Handlers
     */
    virtual void XAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800399c:	4770      	bx	lr

0800399e <_ZN18mainScreenViewBase27YAxisSlider_L_Value_ChangedEi>:

    virtual void YAxisSlider_L_Value_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800399e:	4770      	bx	lr

080039a0 <_ZN18mainScreenViewBase38ManipulatorControlToggleButton_ClickedEv>:

    virtual void ManipulatorControlToggleButton_Clicked()
    {
        // Override and implement this function in mainScreen
    }
 80039a0:	4770      	bx	lr

080039a2 <_ZN18mainScreenViewBase27YAxisSlider_R_Value_ChangedEi>:

    virtual void YAxisSlider_R_Value_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 80039a2:	4770      	bx	lr

080039a4 <_ZN18mainScreenViewBase11setupScreenEv>:
}

void mainScreenViewBase::setupScreen()
{

}
 80039a4:	4770      	bx	lr

080039a6 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80039a6:	4770      	bx	lr

080039a8 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80039a8:	4770      	bx	lr

080039aa <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 80039aa:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 80039ac:	68c6      	ldr	r6, [r0, #12]
 80039ae:	6845      	ldr	r5, [r0, #4]
 80039b0:	1074      	asrs	r4, r6, #1
    virtual void execute(T1 t1, T2 t2)
 80039b2:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 80039b4:	07f6      	lsls	r6, r6, #31
 80039b6:	eb05 0004 	add.w	r0, r5, r4
 80039ba:	689b      	ldr	r3, [r3, #8]
 80039bc:	bf44      	itt	mi
 80039be:	592c      	ldrmi	r4, [r5, r4]
 80039c0:	58e3      	ldrmi	r3, [r4, r3]
    }
 80039c2:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 80039c4:	4718      	bx	r3

080039c6 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 80039c6:	6843      	ldr	r3, [r0, #4]
 80039c8:	b12b      	cbz	r3, 80039d6 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x10>
 80039ca:	6883      	ldr	r3, [r0, #8]
 80039cc:	b92b      	cbnz	r3, 80039da <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 80039ce:	68c0      	ldr	r0, [r0, #12]
 80039d0:	f000 0001 	and.w	r0, r0, #1
 80039d4:	4770      	bx	lr
 80039d6:	4618      	mov	r0, r3
 80039d8:	4770      	bx	lr
 80039da:	2001      	movs	r0, #1
    }
 80039dc:	4770      	bx	lr

080039de <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80039de:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80039e0:	68c5      	ldr	r5, [r0, #12]
 80039e2:	6844      	ldr	r4, [r0, #4]
 80039e4:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 80039e6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80039e8:	07ed      	lsls	r5, r5, #31
 80039ea:	eb04 0002 	add.w	r0, r4, r2
 80039ee:	689b      	ldr	r3, [r3, #8]
 80039f0:	bf48      	it	mi
 80039f2:	58a2      	ldrmi	r2, [r4, r2]
    }
 80039f4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80039f6:	bf48      	it	mi
 80039f8:	58d3      	ldrmi	r3, [r2, r3]
 80039fa:	4718      	bx	r3

080039fc <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80039fc:	6843      	ldr	r3, [r0, #4]
 80039fe:	b12b      	cbz	r3, 8003a0c <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003a00:	6883      	ldr	r3, [r0, #8]
 8003a02:	b92b      	cbnz	r3, 8003a10 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003a04:	68c0      	ldr	r0, [r0, #12]
 8003a06:	f000 0001 	and.w	r0, r0, #1
 8003a0a:	4770      	bx	lr
 8003a0c:	4618      	mov	r0, r3
 8003a0e:	4770      	bx	lr
 8003a10:	2001      	movs	r0, #1
    }
 8003a12:	4770      	bx	lr

08003a14 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a14:	b510      	push	{r4, lr}
 8003a16:	2110      	movs	r1, #16
 8003a18:	4604      	mov	r4, r0
 8003a1a:	f018 fc6b 	bl	801c2f4 <_ZdlPvj>
 8003a1e:	4620      	mov	r0, r4
 8003a20:	bd10      	pop	{r4, pc}

08003a22 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8003a22:	b510      	push	{r4, lr}
 8003a24:	2110      	movs	r1, #16
 8003a26:	4604      	mov	r4, r0
 8003a28:	f018 fc64 	bl	801c2f4 <_ZdlPvj>
 8003a2c:	4620      	mov	r0, r4
 8003a2e:	bd10      	pop	{r4, pc}

08003a30 <_ZN18mainScreenViewBaseD0Ev>:
    virtual ~mainScreenViewBase() {}
 8003a30:	b510      	push	{r4, lr}
 8003a32:	f44f 61aa 	mov.w	r1, #1360	; 0x550
 8003a36:	4604      	mov	r4, r0
 8003a38:	f018 fc5c 	bl	801c2f4 <_ZdlPvj>
 8003a3c:	4620      	mov	r0, r4
 8003a3e:	bd10      	pop	{r4, pc}

08003a40 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:
        application().gotosequenceScreenScreenSlideTransitionEast();
    }
}

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8003a40:	b410      	push	{r4}
 8003a42:	460c      	mov	r4, r1
 8003a44:	4611      	mov	r1, r2
    if (&src == &yAxisSlider_L)
 8003a46:	f500 72a6 	add.w	r2, r0, #332	; 0x14c
 8003a4a:	4294      	cmp	r4, r2
 8003a4c:	d104      	bne.n	8003a58 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x18>
    {
        //YAxisSlider_L_Value_Changed
        //When yAxisSlider_L value changed call virtual function
        //Call YAxisSlider_L_Value_Changed
        YAxisSlider_L_Value_Changed(value);
 8003a4e:	6803      	ldr	r3, [r0, #0]
 8003a50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        //YAxisSlider_R_Value_Changed
        //When yAxisSlider_R value changed call virtual function
        //Call YAxisSlider_R_Value_Changed
        YAxisSlider_R_Value_Changed(value);
    }
}
 8003a52:	f85d 4b04 	ldr.w	r4, [sp], #4
        YAxisSlider_R_Value_Changed(value);
 8003a56:	4718      	bx	r3
    else if (&src == &xAxisSlider)
 8003a58:	f500 7212 	add.w	r2, r0, #584	; 0x248
 8003a5c:	4294      	cmp	r4, r2
 8003a5e:	d102      	bne.n	8003a66 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x26>
        XAxisSliderValue_Changed(value);
 8003a60:	6803      	ldr	r3, [r0, #0]
 8003a62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003a64:	e7f5      	b.n	8003a52 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x12>
    else if (&src == &yAxisSlider_R)
 8003a66:	f500 7251 	add.w	r2, r0, #836	; 0x344
 8003a6a:	4294      	cmp	r4, r2
 8003a6c:	d102      	bne.n	8003a74 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x34>
        YAxisSlider_R_Value_Changed(value);
 8003a6e:	6803      	ldr	r3, [r0, #0]
 8003a70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003a72:	e7ee      	b.n	8003a52 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x12>
}
 8003a74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003a78:	4770      	bx	lr

08003a7a <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &manipulatorControlToggleButton)
 8003a7a:	f100 029c 	add.w	r2, r0, #156	; 0x9c
 8003a7e:	4291      	cmp	r1, r2
{
 8003a80:	b510      	push	{r4, lr}
    if (&src == &manipulatorControlToggleButton)
 8003a82:	d104      	bne.n	8003a8e <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
        ManipulatorControlToggleButton_Clicked();
 8003a84:	6803      	ldr	r3, [r0, #0]
}
 8003a86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ManipulatorControlToggleButton_Clicked();
 8003a8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003a8c:	4718      	bx	r3
    else if (&src == &sequenceScreenButton)
 8003a8e:	f200 43f4 	addw	r3, r0, #1268	; 0x4f4
 8003a92:	4299      	cmp	r1, r3
 8003a94:	d105      	bne.n	8003aa2 <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003a96:	f00a fb6f 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003a9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotosequenceScreenScreenSlideTransitionEast();
 8003a9e:	f7ff ba9d 	b.w	8002fdc <_ZN23FrontendApplicationBase43gotosequenceScreenScreenSlideTransitionEastEv>
}
 8003aa2:	bd10      	pop	{r4, pc}

08003aa4 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8003aa4:	4a09      	ldr	r2, [pc, #36]	; (8003acc <_ZN8touchgfx8DrawableC1Ev+0x28>)
 8003aa6:	6002      	str	r2, [r0, #0]
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 8003aa8:	2200      	movs	r2, #0
 8003aaa:	8082      	strh	r2, [r0, #4]
        this->y = y;
 8003aac:	80c2      	strh	r2, [r0, #6]
        this->width = width;
 8003aae:	8102      	strh	r2, [r0, #8]
        this->height = height;
 8003ab0:	8142      	strh	r2, [r0, #10]
        this->x = 0;
 8003ab2:	8182      	strh	r2, [r0, #12]
        this->y = 0;
 8003ab4:	81c2      	strh	r2, [r0, #14]
        this->width = 0;
 8003ab6:	8202      	strh	r2, [r0, #16]
        this->height = 0;
 8003ab8:	8242      	strh	r2, [r0, #18]
 8003aba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003abe:	61c2      	str	r2, [r0, #28]
 8003ac0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8003ac4:	2201      	movs	r2, #1
 8003ac6:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
    }
 8003aca:	4770      	bx	lr
 8003acc:	0802020c 	.word	0x0802020c

08003ad0 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8003ad0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8003ad2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8003ad4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8003ad6:	2100      	movs	r1, #0
 8003ad8:	f018 fcd9 	bl	801c48e <memset>
class Widget : public Drawable
 8003adc:	4620      	mov	r0, r4
 8003ade:	f7ff ffe1 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8003ae2:	4b09      	ldr	r3, [pc, #36]	; (8003b08 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8003ae4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8003ae6:	4b09      	ldr	r3, [pc, #36]	; (8003b0c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003ae8:	62a3      	str	r3, [r4, #40]	; 0x28
 8003aea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003aee:	85a3      	strh	r3, [r4, #44]	; 0x2c
        color = col;
 8003af0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003af4:	2300      	movs	r3, #0
 8003af6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8003afa:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8003afe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    {
    }
 8003b02:	4620      	mov	r0, r4
 8003b04:	bd10      	pop	{r4, pc}
 8003b06:	bf00      	nop
 8003b08:	0801fcb8 	.word	0x0801fcb8
 8003b0c:	0801da4c 	.word	0x0801da4c

08003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8003b10:	4613      	mov	r3, r2
        return instance;
 8003b12:	4a0c      	ldr	r2, [pc, #48]	; (8003b44 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8003b14:	b570      	push	{r4, r5, r6, lr}
 8003b16:	6814      	ldr	r4, [r2, #0]
 8003b18:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 8003b1a:	b92c      	cbnz	r4, 8003b28 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 8003b1c:	4b0a      	ldr	r3, [pc, #40]	; (8003b48 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 8003b1e:	4a0b      	ldr	r2, [pc, #44]	; (8003b4c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8003b20:	480b      	ldr	r0, [pc, #44]	; (8003b50 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 8003b22:	2135      	movs	r1, #53	; 0x35
 8003b24:	f018 fc2a 	bl	801c37c <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003b28:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 8003b2c:	b10a      	cbz	r2, 8003b32 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 8003b2e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8003b30:	b900      	cbnz	r0, 8003b34 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 8003b32:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8003b34:	6802      	ldr	r2, [r0, #0]
 8003b36:	6a94      	ldr	r4, [r2, #40]	; 0x28
 8003b38:	460a      	mov	r2, r1
 8003b3a:	46a4      	mov	ip, r4
 8003b3c:	4629      	mov	r1, r5
    }
 8003b3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8003b42:	4760      	bx	ip
 8003b44:	200124b8 	.word	0x200124b8
 8003b48:	0801e344 	.word	0x0801e344
 8003b4c:	0801e410 	.word	0x0801e410
 8003b50:	0801e387 	.word	0x0801e387

08003b54 <_ZN18mainScreenViewBaseC1Ev>:
mainScreenViewBase::mainScreenViewBase() :
 8003b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b58:	4604      	mov	r4, r0
 8003b5a:	b095      	sub	sp, #84	; 0x54
        : presenter(0)
 8003b5c:	f00b fb64 	bl	800f228 <_ZN8touchgfx6ScreenC1Ev>
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
 8003b60:	4622      	mov	r2, r4
 8003b62:	2500      	movs	r5, #0
 8003b64:	4bdf      	ldr	r3, [pc, #892]	; (8003ee4 <_ZN18mainScreenViewBaseC1Ev+0x390>)
 8003b66:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003b68:	f842 3b40 	str.w	r3, [r2], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8003b6c:	f04f 0926 	mov.w	r9, #38	; 0x26
 8003b70:	4613      	mov	r3, r2
 8003b72:	4629      	mov	r1, r5
 8003b74:	9205      	str	r2, [sp, #20]
 8003b76:	4618      	mov	r0, r3
 8003b78:	464a      	mov	r2, r9
 8003b7a:	f018 fc88 	bl	801c48e <memset>
 8003b7e:	9805      	ldr	r0, [sp, #20]
 8003b80:	f7ff ff90 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8003b84:	4bd8      	ldr	r3, [pc, #864]	; (8003ee8 <_ZN18mainScreenViewBaseC1Ev+0x394>)
 8003b86:	6423      	str	r3, [r4, #64]	; 0x40
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003b88:	ae14      	add	r6, sp, #80	; 0x50
 8003b8a:	f104 0370 	add.w	r3, r4, #112	; 0x70
 8003b8e:	f04f 08ff 	mov.w	r8, #255	; 0xff
 8003b92:	f64f 77ff 	movw	r7, #65535	; 0xffff
     * @param  bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), alpha(255)
 8003b96:	464a      	mov	r2, r9
 8003b98:	4629      	mov	r1, r5
 8003b9a:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
 8003b9e:	66a5      	str	r5, [r4, #104]	; 0x68
 8003ba0:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 8003ba4:	4618      	mov	r0, r3
 8003ba6:	f826 7d08 	strh.w	r7, [r6, #-8]!
 8003baa:	9303      	str	r3, [sp, #12]
 8003bac:	f018 fc6f 	bl	801c48e <memset>
 8003bb0:	9803      	ldr	r0, [sp, #12]
 8003bb2:	f7ff ff77 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8003bb6:	4bcd      	ldr	r3, [pc, #820]	; (8003eec <_ZN18mainScreenViewBaseC1Ev+0x398>)
 8003bb8:	6723      	str	r3, [r4, #112]	; 0x70
 8003bba:	f8a4 7096 	strh.w	r7, [r4, #150]	; 0x96
 8003bbe:	f884 7098 	strb.w	r7, [r4, #152]	; 0x98
    {
        setBitmap(bmp);
 8003bc2:	4631      	mov	r1, r6
 8003bc4:	9803      	ldr	r0, [sp, #12]
 8003bc6:	f009 fa7e 	bl	800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003bca:	f104 039c 	add.w	r3, r4, #156	; 0x9c
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8003bce:	464a      	mov	r2, r9
 8003bd0:	4629      	mov	r1, r5
 8003bd2:	4618      	mov	r0, r3
 8003bd4:	9304      	str	r3, [sp, #16]
 8003bd6:	f018 fc5a 	bl	801c48e <memset>
 8003bda:	9804      	ldr	r0, [sp, #16]
 8003bdc:	f7ff ff62 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 8003be0:	f04f 0301 	mov.w	r3, #1
 8003be4:	f884 30c0 	strb.w	r3, [r4, #192]	; 0xc0
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8003be8:	4bc1      	ldr	r3, [pc, #772]	; (8003ef0 <_ZN18mainScreenViewBaseC1Ev+0x39c>)
 8003bea:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8003bee:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003bf2:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8003bf6:	f884 50c8 	strb.w	r5, [r4, #200]	; 0xc8
 8003bfa:	f8a4 70ca 	strh.w	r7, [r4, #202]	; 0xca
 8003bfe:	f8a4 70cc 	strh.w	r7, [r4, #204]	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003c02:	f884 80ce 	strb.w	r8, [r4, #206]	; 0xce
 8003c06:	f8a4 70d0 	strh.w	r7, [r4, #208]	; 0xd0
 8003c0a:	4618      	mov	r0, r3
 8003c0c:	9306      	str	r3, [sp, #24]
 8003c0e:	f7ff ff5f 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c12:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8003c16:	f504 7ba6 	add.w	fp, r4, #332	; 0x14c
 8003c1a:	4618      	mov	r0, r3
 8003c1c:	f504 7a12 	add.w	sl, r4, #584	; 0x248
 8003c20:	9307      	str	r3, [sp, #28]
 8003c22:	f7ff ff55 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c26:	4658      	mov	r0, fp
 8003c28:	f504 7951 	add.w	r9, r4, #836	; 0x344
 8003c2c:	f007 fd8e 	bl	800b74c <_ZN8touchgfx6SliderC1Ev>
 8003c30:	4650      	mov	r0, sl
 8003c32:	f007 fd8b 	bl	800b74c <_ZN8touchgfx6SliderC1Ev>
 8003c36:	4648      	mov	r0, r9
 8003c38:	f007 fd88 	bl	800b74c <_ZN8touchgfx6SliderC1Ev>
 8003c3c:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 8003c40:	4618      	mov	r0, r3
 8003c42:	9308      	str	r3, [sp, #32]
 8003c44:	f7ff ff44 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c48:	f204 437c 	addw	r3, r4, #1148	; 0x47c
 8003c4c:	4618      	mov	r0, r3
 8003c4e:	9309      	str	r3, [sp, #36]	; 0x24
 8003c50:	f7ff ff3e 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c54:	f504 6397 	add.w	r3, r4, #1208	; 0x4b8
 8003c58:	4618      	mov	r0, r3
 8003c5a:	930a      	str	r3, [sp, #40]	; 0x28
 8003c5c:	f7ff ff38 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c60:	f204 43f4 	addw	r3, r4, #1268	; 0x4f4
 8003c64:	4618      	mov	r0, r3
 8003c66:	930b      	str	r3, [sp, #44]	; 0x2c
 8003c68:	f009 fa08 	bl	800d07c <_ZN8touchgfx14ButtonWithIconC1Ev>
    {
 8003c6c:	4ba1      	ldr	r3, [pc, #644]	; (8003ef4 <_ZN18mainScreenViewBaseC1Ev+0x3a0>)
 8003c6e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        this->pmemfun_1 = pmemfun_1;
 8003c72:	4ba1      	ldr	r3, [pc, #644]	; (8003ef8 <_ZN18mainScreenViewBaseC1Ev+0x3a4>)
 8003c74:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
    {
 8003c78:	4ba0      	ldr	r3, [pc, #640]	; (8003efc <_ZN18mainScreenViewBaseC1Ev+0x3a8>)
 8003c7a:	f8c4 3540 	str.w	r3, [r4, #1344]	; 0x540
        this->pmemfun_2 = pmemfun_2;
 8003c7e:	4ba0      	ldr	r3, [pc, #640]	; (8003f00 <_ZN18mainScreenViewBaseC1Ev+0x3ac>)
 8003c80:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
    __background.setPosition(0, 0, 240, 320);
 8003c84:	f44f 73a0 	mov.w	r3, #320	; 0x140
        this->pmemfun_1 = pmemfun_1;
 8003c88:	f8c4 553c 	str.w	r5, [r4, #1340]	; 0x53c
        this->pmemfun_2 = pmemfun_2;
 8003c8c:	f8c4 554c 	str.w	r5, [r4, #1356]	; 0x54c
 8003c90:	9300      	str	r3, [sp, #0]
 8003c92:	462a      	mov	r2, r5
 8003c94:	23f0      	movs	r3, #240	; 0xf0
 8003c96:	4629      	mov	r1, r5
 8003c98:	9805      	ldr	r0, [sp, #20]
        this->pobject = pobject;
 8003c9a:	f8c4 4534 	str.w	r4, [r4, #1332]	; 0x534
        this->pobject = pobject;
 8003c9e:	f8c4 4544 	str.w	r4, [r4, #1348]	; 0x544
 8003ca2:	f7ff fe29 	bl	80038f8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003ca6:	462a      	mov	r2, r5
 8003ca8:	4629      	mov	r1, r5
 8003caa:	4628      	mov	r0, r5
 8003cac:	f7ff ff30 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    backgroundImage.setXY(0, 0);
 8003cb0:	462a      	mov	r2, r5
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8003cb2:	66a0      	str	r0, [r4, #104]	; 0x68
 8003cb4:	4629      	mov	r1, r5
 8003cb6:	9803      	ldr	r0, [sp, #12]
 8003cb8:	4f92      	ldr	r7, [pc, #584]	; (8003f04 <_ZN18mainScreenViewBaseC1Ev+0x3b0>)
 8003cba:	f7ff fe35 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));
 8003cbe:	4631      	mov	r1, r6
 8003cc0:	9803      	ldr	r0, [sp, #12]
 8003cc2:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
 8003cc6:	f009 f9fe 	bl	800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    manipulatorControlToggleButton.setXY(72, 193);
 8003cca:	9804      	ldr	r0, [sp, #16]
 8003ccc:	22c1      	movs	r2, #193	; 0xc1
 8003cce:	2148      	movs	r1, #72	; 0x48
 8003cd0:	f7ff fe2a 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8003cd4:	230c      	movs	r3, #12
 8003cd6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8003cda:	230d      	movs	r3, #13
{
public:

    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
    {
        originalPressed = bmpPressed;
 8003cdc:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        Button::setBitmaps(bmpReleased, bmpPressed);
 8003ce0:	4632      	mov	r2, r6
 8003ce2:	a911      	add	r1, sp, #68	; 0x44
 8003ce4:	9804      	ldr	r0, [sp, #16]
 8003ce6:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8003cea:	f008 ff65 	bl	800cbb8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    manipulatorControlToggleButton.setAction(buttonCallback);
 8003cee:	f504 63a6 	add.w	r3, r4, #1328	; 0x530
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003cf2:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    titleText.setXY(23, 15);
 8003cf6:	9806      	ldr	r0, [sp, #24]
    manipulatorControlToggleButton.setAction(buttonCallback);
 8003cf8:	930d      	str	r3, [sp, #52]	; 0x34
    titleText.setXY(23, 15);
 8003cfa:	220f      	movs	r2, #15
 8003cfc:	2117      	movs	r1, #23
 8003cfe:	f7ff fe13 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    titleText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003d02:	462a      	mov	r2, r5
 8003d04:	4629      	mov	r1, r5
 8003d06:	4628      	mov	r0, r5
 8003d08:	f7ff ff02 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8003d0c:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        this->color = color;
 8003d10:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
    titleText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8003d14:	4631      	mov	r1, r6
 8003d16:	9806      	ldr	r0, [sp, #24]
 8003d18:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 8003d1c:	9712      	str	r7, [sp, #72]	; 0x48
 8003d1e:	f008 ff09 	bl	800cb34 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    manipulatorText.setXY(61, 128);
 8003d22:	9807      	ldr	r0, [sp, #28]
 8003d24:	2280      	movs	r2, #128	; 0x80
 8003d26:	213d      	movs	r1, #61	; 0x3d
 8003d28:	f7ff fdfe 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    manipulatorText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003d2c:	462a      	mov	r2, r5
 8003d2e:	4629      	mov	r1, r5
 8003d30:	4628      	mov	r0, r5
 8003d32:	f7ff feed 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003d36:	f04f 0301 	mov.w	r3, #1
 8003d3a:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
        linespace = space;
 8003d3e:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
    manipulatorText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 8003d42:	4631      	mov	r1, r6
 8003d44:	9807      	ldr	r0, [sp, #28]
 8003d46:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8003d4a:	9712      	str	r7, [sp, #72]	; 0x48
 8003d4c:	f008 fef2 	bl	800cb34 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    yAxisSlider_L.setXY(23, 52);
 8003d50:	4658      	mov	r0, fp
 8003d52:	2234      	movs	r2, #52	; 0x34
 8003d54:	2117      	movs	r1, #23
 8003d56:	f7ff fde7 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    yAxisSlider_L.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 8003d5a:	a911      	add	r1, sp, #68	; 0x44
 8003d5c:	f04f 020a 	mov.w	r2, #10
 8003d60:	f04f 080b 	mov.w	r8, #11
 8003d64:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
 8003d68:	4633      	mov	r3, r6
 8003d6a:	460a      	mov	r2, r1
 8003d6c:	4658      	mov	r0, fp
 8003d6e:	a910      	add	r1, sp, #64	; 0x40
 8003d70:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
 8003d74:	f8ad 8044 	strh.w	r8, [sp, #68]	; 0x44
 8003d78:	f007 fd3c 	bl	800b7f4 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider_L.setupVerticalSlider(7, 3, 0, 0, 125);
 8003d7c:	217d      	movs	r1, #125	; 0x7d
 8003d7e:	462b      	mov	r3, r5
 8003d80:	e9cd 5100 	strd	r5, r1, [sp]
 8003d84:	4658      	mov	r0, fp
 8003d86:	2203      	movs	r2, #3
 8003d88:	2107      	movs	r1, #7
 8003d8a:	f007 fbd9 	bl	800b540 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider_L.setValueRange(0, 100);
 8003d8e:	2264      	movs	r2, #100	; 0x64
 8003d90:	4629      	mov	r1, r5
 8003d92:	4658      	mov	r0, fp
 8003d94:	f007 fad3 	bl	800b33e <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider_L.setValue(0);
 8003d98:	4629      	mov	r1, r5
 8003d9a:	4658      	mov	r0, fp
 8003d9c:	f007 fa5b 	bl	800b256 <_ZN8touchgfx6Slider8setValueEi>
    yAxisSlider_L.setNewValueCallback(sliderValueChangedCallback);
 8003da0:	f504 61a8 	add.w	r1, r4, #1344	; 0x540
 8003da4:	910c      	str	r1, [sp, #48]	; 0x30
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 8003da6:	f8c4 1244 	str.w	r1, [r4, #580]	; 0x244
    xAxisSlider.setXY(31, 261);
 8003daa:	4650      	mov	r0, sl
 8003dac:	f240 1205 	movw	r2, #261	; 0x105
 8003db0:	211f      	movs	r1, #31
 8003db2:	f7ff fdb9 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8003db6:	2309      	movs	r3, #9
 8003db8:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 8003dbc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
    xAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
 8003dc0:	a911      	add	r1, sp, #68	; 0x44
 8003dc2:	2308      	movs	r3, #8
 8003dc4:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8003dc8:	460a      	mov	r2, r1
 8003dca:	4633      	mov	r3, r6
 8003dcc:	a910      	add	r1, sp, #64	; 0x40
 8003dce:	4650      	mov	r0, sl
 8003dd0:	f007 fd10 	bl	800b7f4 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    xAxisSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
 8003dd4:	217d      	movs	r1, #125	; 0x7d
 8003dd6:	462b      	mov	r3, r5
 8003dd8:	e9cd 5100 	strd	r5, r1, [sp]
 8003ddc:	4650      	mov	r0, sl
 8003dde:	2207      	movs	r2, #7
 8003de0:	2103      	movs	r1, #3
 8003de2:	f007 fb49 	bl	800b478 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    xAxisSlider.setValueRange(0, 100);
 8003de6:	2264      	movs	r2, #100	; 0x64
 8003de8:	4629      	mov	r1, r5
 8003dea:	4650      	mov	r0, sl
 8003dec:	f007 faa7 	bl	800b33e <_ZN8touchgfx6Slider13setValueRangeEii>
    xAxisSlider.setValue(50);
 8003df0:	4650      	mov	r0, sl
 8003df2:	2132      	movs	r1, #50	; 0x32
 8003df4:	f007 fa2f 	bl	800b256 <_ZN8touchgfx6Slider8setValueEi>
 8003df8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003dfa:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
    yAxisSlider_R.setXY(183, 52);
 8003dfe:	4648      	mov	r0, r9
 8003e00:	2234      	movs	r2, #52	; 0x34
 8003e02:	21b7      	movs	r1, #183	; 0xb7
 8003e04:	f7ff fd90 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8003e08:	f04f 020a 	mov.w	r2, #10
 8003e0c:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
    yAxisSlider_R.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 8003e10:	4633      	mov	r3, r6
 8003e12:	aa11      	add	r2, sp, #68	; 0x44
 8003e14:	a910      	add	r1, sp, #64	; 0x40
 8003e16:	4648      	mov	r0, r9
 8003e18:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
 8003e1c:	f8ad 8044 	strh.w	r8, [sp, #68]	; 0x44
 8003e20:	f007 fce8 	bl	800b7f4 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider_R.setupVerticalSlider(7, 3, 0, 0, 125);
 8003e24:	227d      	movs	r2, #125	; 0x7d
 8003e26:	462b      	mov	r3, r5
 8003e28:	e9cd 5200 	strd	r5, r2, [sp]
 8003e2c:	4648      	mov	r0, r9
 8003e2e:	2203      	movs	r2, #3
 8003e30:	2107      	movs	r1, #7
 8003e32:	f007 fb85 	bl	800b540 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider_R.setValueRange(0, 100);
 8003e36:	2264      	movs	r2, #100	; 0x64
 8003e38:	4629      	mov	r1, r5
 8003e3a:	4648      	mov	r0, r9
 8003e3c:	f007 fa7f 	bl	800b33e <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider_R.setValue(0);
 8003e40:	4629      	mov	r1, r5
 8003e42:	4648      	mov	r0, r9
 8003e44:	f007 fa07 	bl	800b256 <_ZN8touchgfx6Slider8setValueEi>
 8003e48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003e4a:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
    leftText.setXY(21, 239);
 8003e4e:	9808      	ldr	r0, [sp, #32]
 8003e50:	22ef      	movs	r2, #239	; 0xef
 8003e52:	2115      	movs	r1, #21
 8003e54:	f7ff fd68 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    leftText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003e58:	462a      	mov	r2, r5
 8003e5a:	4629      	mov	r1, r5
 8003e5c:	4628      	mov	r0, r5
 8003e5e:	f7ff fe57 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003e62:	f04f 0802 	mov.w	r8, #2
        this->color = color;
 8003e66:	f8c4 0470 	str.w	r0, [r4, #1136]	; 0x470
        linespace = space;
 8003e6a:	f8a4 5474 	strh.w	r5, [r4, #1140]	; 0x474
    leftText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 8003e6e:	4631      	mov	r1, r6
 8003e70:	9808      	ldr	r0, [sp, #32]
 8003e72:	9712      	str	r7, [sp, #72]	; 0x48
 8003e74:	f8ad 804c 	strh.w	r8, [sp, #76]	; 0x4c
 8003e78:	f008 fe5c 	bl	800cb34 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    rightText.setXY(174, 239);
 8003e7c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e7e:	22ef      	movs	r2, #239	; 0xef
 8003e80:	21ae      	movs	r1, #174	; 0xae
 8003e82:	f7ff fd51 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    rightText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003e86:	462a      	mov	r2, r5
 8003e88:	4629      	mov	r1, r5
 8003e8a:	4628      	mov	r0, r5
 8003e8c:	f7ff fe40 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003e90:	2303      	movs	r3, #3
        this->color = color;
 8003e92:	f8c4 04ac 	str.w	r0, [r4, #1196]	; 0x4ac
        linespace = space;
 8003e96:	f8a4 54b0 	strh.w	r5, [r4, #1200]	; 0x4b0
    rightText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
 8003e9a:	4631      	mov	r1, r6
 8003e9c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e9e:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8003ea2:	9712      	str	r7, [sp, #72]	; 0x48
 8003ea4:	f008 fe46 	bl	800cb34 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    baseText.setXY(96, 295);
 8003ea8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003eaa:	f240 1227 	movw	r2, #295	; 0x127
 8003eae:	2160      	movs	r1, #96	; 0x60
 8003eb0:	f7ff fd3a 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    baseText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003eb4:	462a      	mov	r2, r5
 8003eb6:	4629      	mov	r1, r5
 8003eb8:	4628      	mov	r0, r5
 8003eba:	f7ff fe29 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003ebe:	2304      	movs	r3, #4
        this->color = color;
 8003ec0:	f8c4 04e8 	str.w	r0, [r4, #1256]	; 0x4e8
        linespace = space;
 8003ec4:	f8a4 54ec 	strh.w	r5, [r4, #1260]	; 0x4ec
    baseText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8003ec8:	4631      	mov	r1, r6
 8003eca:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ecc:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8003ed0:	9712      	str	r7, [sp, #72]	; 0x48
 8003ed2:	f008 fe2f 	bl	800cb34 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    sequenceScreenButton.setXY(90, 52);
 8003ed6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003ed8:	2234      	movs	r2, #52	; 0x34
 8003eda:	215a      	movs	r1, #90	; 0x5a
 8003edc:	f7ff fd24 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8003ee0:	e012      	b.n	8003f08 <_ZN18mainScreenViewBaseC1Ev+0x3b4>
 8003ee2:	bf00      	nop
 8003ee4:	0801e3d4 	.word	0x0801e3d4
 8003ee8:	0801fd64 	.word	0x0801fd64
 8003eec:	0801ffb8 	.word	0x0801ffb8
 8003ef0:	0801fbd8 	.word	0x0801fbd8
 8003ef4:	0801e31c 	.word	0x0801e31c
 8003ef8:	08003a7b 	.word	0x08003a7b
 8003efc:	0801e334 	.word	0x0801e334
 8003f00:	08003a41 	.word	0x08003a41
 8003f04:	0801da4c 	.word	0x0801da4c
 8003f08:	f04f 0301 	mov.w	r3, #1
    sequenceScreenButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_SEQUENCE_ICON_32_ID), touchgfx::Bitmap(BITMAP_SEQUENCE_ICON_32_ID));
 8003f0c:	aa10      	add	r2, sp, #64	; 0x40
 8003f0e:	250e      	movs	r5, #14
 8003f10:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8003f14:	a90f      	add	r1, sp, #60	; 0x3c
 8003f16:	ab11      	add	r3, sp, #68	; 0x44
 8003f18:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003f1a:	9600      	str	r6, [sp, #0]
 8003f1c:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
 8003f20:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
 8003f24:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
 8003f28:	f009 f804 	bl	800cf34 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003f2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003f2e:	f8a4 552c 	strh.w	r5, [r4, #1324]	; 0x52c
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
    {
        iconY = y;
 8003f32:	f8a4 552e 	strh.w	r5, [r4, #1326]	; 0x52e
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003f36:	1d25      	adds	r5, r4, #4
 8003f38:	f8c4 351c 	str.w	r3, [r4, #1308]	; 0x51c
 8003f3c:	9905      	ldr	r1, [sp, #20]
 8003f3e:	4628      	mov	r0, r5
 8003f40:	f007 f84a 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f44:	9903      	ldr	r1, [sp, #12]
 8003f46:	4628      	mov	r0, r5
 8003f48:	f007 f846 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f4c:	9904      	ldr	r1, [sp, #16]
 8003f4e:	4628      	mov	r0, r5
 8003f50:	f007 f842 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f54:	9906      	ldr	r1, [sp, #24]
 8003f56:	4628      	mov	r0, r5
 8003f58:	f007 f83e 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f5c:	9907      	ldr	r1, [sp, #28]
 8003f5e:	4628      	mov	r0, r5
 8003f60:	f007 f83a 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f64:	4659      	mov	r1, fp
 8003f66:	4628      	mov	r0, r5
 8003f68:	f007 f836 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f6c:	4651      	mov	r1, sl
 8003f6e:	4628      	mov	r0, r5
 8003f70:	f007 f832 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f74:	4649      	mov	r1, r9
 8003f76:	4628      	mov	r0, r5
 8003f78:	f007 f82e 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f7c:	9908      	ldr	r1, [sp, #32]
 8003f7e:	4628      	mov	r0, r5
 8003f80:	f007 f82a 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f84:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003f86:	4628      	mov	r0, r5
 8003f88:	f007 f826 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f8c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003f8e:	4628      	mov	r0, r5
 8003f90:	f007 f822 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f94:	4628      	mov	r0, r5
 8003f96:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003f98:	f007 f81e 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003f9c:	4620      	mov	r0, r4
 8003f9e:	b015      	add	sp, #84	; 0x54
 8003fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003fa4 <_ZN21positionContainerBaseD1Ev>:

class positionContainerBase : public touchgfx::Container
{
public:
    positionContainerBase();
    virtual ~positionContainerBase() {}
 8003fa4:	4770      	bx	lr

08003fa6 <_ZN21positionContainerBase10initializeEv>:
}

void positionContainerBase::initialize()
{

}
 8003fa6:	4770      	bx	lr

08003fa8 <_ZN21positionContainerBaseD0Ev>:
 8003fa8:	b510      	push	{r4, lr}
 8003faa:	218c      	movs	r1, #140	; 0x8c
 8003fac:	4604      	mov	r4, r0
 8003fae:	f018 f9a1 	bl	801c2f4 <_ZdlPvj>
 8003fb2:	4620      	mov	r0, r4
 8003fb4:	bd10      	pop	{r4, pc}
	...

08003fb8 <_ZN21positionContainerBaseC1Ev>:
positionContainerBase::positionContainerBase()
 8003fb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003fba:	4605      	mov	r5, r0
        this->x = x;
 8003fbc:	2300      	movs	r3, #0
          visible(true)
 8003fbe:	2201      	movs	r2, #1
 8003fc0:	4941      	ldr	r1, [pc, #260]	; (80040c8 <_ZN21positionContainerBaseC1Ev+0x110>)
 8003fc2:	8083      	strh	r3, [r0, #4]
        this->y = y;
 8003fc4:	80c3      	strh	r3, [r0, #6]
        this->x = 0;
 8003fc6:	8183      	strh	r3, [r0, #12]
        this->y = 0;
 8003fc8:	81c3      	strh	r3, [r0, #14]
        this->width = 0;
 8003fca:	8203      	strh	r3, [r0, #16]
        this->height = 0;
 8003fcc:	8243      	strh	r3, [r0, #18]
 8003fce:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8003fd2:	61c3      	str	r3, [r0, #28]
 8003fd4:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8003fd8:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 8003fdc:	6283      	str	r3, [r0, #40]	; 0x28
 8003fde:	f845 1b2c 	str.w	r1, [r5], #44
 8003fe2:	f880 2051 	strb.w	r2, [r0, #81]	; 0x51
 8003fe6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003fea:	f8a0 2058 	strh.w	r2, [r0, #88]	; 0x58
 8003fee:	4f37      	ldr	r7, [pc, #220]	; (80040cc <_ZN21positionContainerBaseC1Ev+0x114>)
        this->x = x;
 8003ff0:	8603      	strh	r3, [r0, #48]	; 0x30
        color = col;
 8003ff2:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
        this->y = y;
 8003ff6:	8643      	strh	r3, [r0, #50]	; 0x32
        this->width = width;
 8003ff8:	8683      	strh	r3, [r0, #52]	; 0x34
        this->height = height;
 8003ffa:	86c3      	strh	r3, [r0, #54]	; 0x36
        this->x = 0;
 8003ffc:	8703      	strh	r3, [r0, #56]	; 0x38
        this->y = 0;
 8003ffe:	8743      	strh	r3, [r0, #58]	; 0x3a
        this->width = 0;
 8004000:	8783      	strh	r3, [r0, #60]	; 0x3c
        this->height = 0;
 8004002:	87c3      	strh	r3, [r0, #62]	; 0x3e
 8004004:	e9c0 3310 	strd	r3, r3, [r0, #64]	; 0x40
 8004008:	6483      	str	r3, [r0, #72]	; 0x48
 800400a:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
        color = col;
 800400e:	65c3      	str	r3, [r0, #92]	; 0x5c
 8004010:	6602      	str	r2, [r0, #96]	; 0x60
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8004012:	f880 3064 	strb.w	r3, [r0, #100]	; 0x64
 8004016:	6547      	str	r7, [r0, #84]	; 0x54
 8004018:	f880 3065 	strb.w	r3, [r0, #101]	; 0x65
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 800401c:	6683      	str	r3, [r0, #104]	; 0x68
        rect.width = width;
 800401e:	23f0      	movs	r3, #240	; 0xf0
 8004020:	8103      	strh	r3, [r0, #8]
 8004022:	4a2b      	ldr	r2, [pc, #172]	; (80040d0 <_ZN21positionContainerBaseC1Ev+0x118>)
 8004024:	62c2      	str	r2, [r0, #44]	; 0x2c
        rect.height = height;
 8004026:	2329      	movs	r3, #41	; 0x29
 8004028:	8143      	strh	r3, [r0, #10]
 800402a:	4604      	mov	r4, r0
    positionText.setXY(12, 8);
 800402c:	2208      	movs	r2, #8
 800402e:	210c      	movs	r1, #12
 8004030:	4628      	mov	r0, r5
 8004032:	f7ff fc79 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
        return instance;
 8004036:	4b27      	ldr	r3, [pc, #156]	; (80040d4 <_ZN21positionContainerBaseC1Ev+0x11c>)
 8004038:	681b      	ldr	r3, [r3, #0]
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 800403a:	b92b      	cbnz	r3, 8004048 <_ZN21positionContainerBaseC1Ev+0x90>
 800403c:	4b26      	ldr	r3, [pc, #152]	; (80040d8 <_ZN21positionContainerBaseC1Ev+0x120>)
 800403e:	4a27      	ldr	r2, [pc, #156]	; (80040dc <_ZN21positionContainerBaseC1Ev+0x124>)
 8004040:	4827      	ldr	r0, [pc, #156]	; (80040e0 <_ZN21positionContainerBaseC1Ev+0x128>)
 8004042:	2135      	movs	r1, #53	; 0x35
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004044:	f018 f99a 	bl	801c37c <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004048:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800404c:	b10a      	cbz	r2, 8004052 <_ZN21positionContainerBaseC1Ev+0x9a>
 800404e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004050:	b900      	cbnz	r0, 8004054 <_ZN21positionContainerBaseC1Ev+0x9c>
            return instance->lcdRef;
 8004052:	6898      	ldr	r0, [r3, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8004054:	6803      	ldr	r3, [r0, #0]
 8004056:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 8004058:	2300      	movs	r3, #0
 800405a:	461a      	mov	r2, r3
 800405c:	4619      	mov	r1, r3
 800405e:	47b0      	blx	r6
        linespace = space;
 8004060:	2300      	movs	r3, #0
 8004062:	f8a4 3060 	strh.w	r3, [r4, #96]	; 0x60
 8004066:	4b1f      	ldr	r3, [pc, #124]	; (80040e4 <_ZN21positionContainerBaseC1Ev+0x12c>)
        this->color = color;
 8004068:	65e0      	str	r0, [r4, #92]	; 0x5c
 800406a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(positionTextBuffer, POSITIONTEXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID9).getText());
 800406c:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8004070:	b923      	cbnz	r3, 800407c <_ZN21positionContainerBaseC1Ev+0xc4>
 8004072:	4b1d      	ldr	r3, [pc, #116]	; (80040e8 <_ZN21positionContainerBaseC1Ev+0x130>)
 8004074:	4a1d      	ldr	r2, [pc, #116]	; (80040ec <_ZN21positionContainerBaseC1Ev+0x134>)
 8004076:	21b1      	movs	r1, #177	; 0xb1
 8004078:	481d      	ldr	r0, [pc, #116]	; (80040f0 <_ZN21positionContainerBaseC1Ev+0x138>)
 800407a:	e7e3      	b.n	8004044 <_ZN21positionContainerBaseC1Ev+0x8c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800407c:	4b1d      	ldr	r3, [pc, #116]	; (80040f4 <_ZN21positionContainerBaseC1Ev+0x13c>)
 800407e:	881b      	ldrh	r3, [r3, #0]
 8004080:	2b07      	cmp	r3, #7
 8004082:	d803      	bhi.n	800408c <_ZN21positionContainerBaseC1Ev+0xd4>
 8004084:	4b1c      	ldr	r3, [pc, #112]	; (80040f8 <_ZN21positionContainerBaseC1Ev+0x140>)
 8004086:	4a19      	ldr	r2, [pc, #100]	; (80040ec <_ZN21positionContainerBaseC1Ev+0x134>)
 8004088:	21b2      	movs	r1, #178	; 0xb2
 800408a:	e7f5      	b.n	8004078 <_ZN21positionContainerBaseC1Ev+0xc0>
        return texts->getText(typedTextId);
 800408c:	4b1b      	ldr	r3, [pc, #108]	; (80040fc <_ZN21positionContainerBaseC1Ev+0x144>)
 800408e:	2107      	movs	r1, #7
 8004090:	6818      	ldr	r0, [r3, #0]
 8004092:	f7ff fc0f 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 8004096:	4a1a      	ldr	r2, [pc, #104]	; (8004100 <_ZN21positionContainerBaseC1Ev+0x148>)
 8004098:	4603      	mov	r3, r0
 800409a:	2110      	movs	r1, #16
 800409c:	4630      	mov	r0, r6
 800409e:	f00c fbaf 	bl	8010800 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    positionText.resizeToCurrentText();
 80040a2:	4628      	mov	r0, r5
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 80040a4:	66a6      	str	r6, [r4, #104]	; 0x68
 80040a6:	f008 fd1b 	bl	800cae0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80040aa:	2306      	movs	r3, #6
    positionText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
 80040ac:	4669      	mov	r1, sp
 80040ae:	4628      	mov	r0, r5
 80040b0:	f8ad 3004 	strh.w	r3, [sp, #4]
 80040b4:	9700      	str	r7, [sp, #0]
 80040b6:	f008 fd3d 	bl	800cb34 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    add(positionText);
 80040ba:	4620      	mov	r0, r4
 80040bc:	4629      	mov	r1, r5
 80040be:	f006 ff8b 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80040c2:	4620      	mov	r0, r4
 80040c4:	b003      	add	sp, #12
 80040c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80040c8:	0801e554 	.word	0x0801e554
 80040cc:	0801da4c 	.word	0x0801da4c
 80040d0:	0801fe64 	.word	0x0801fe64
 80040d4:	200124b8 	.word	0x200124b8
 80040d8:	0801e344 	.word	0x0801e344
 80040dc:	0801e5dc 	.word	0x0801e5dc
 80040e0:	0801e387 	.word	0x0801e387
 80040e4:	20012528 	.word	0x20012528
 80040e8:	0801e46c 	.word	0x0801e46c
 80040ec:	0801e638 	.word	0x0801e638
 80040f0:	0801e4ae 	.word	0x0801e4ae
 80040f4:	2001252c 	.word	0x2001252c
 80040f8:	0801e4f5 	.word	0x0801e4f5
 80040fc:	20012534 	.word	0x20012534
 8004100:	0801e547 	.word	0x0801e547

08004104 <_ZN22sequenceScreenViewBase23positionsListUpdateItemER17positionContainers>:
    virtual void setupScreen();

    virtual void positionsListUpdateItem(positionContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in sequenceScreen
    }
 8004104:	4770      	bx	lr

08004106 <_ZN22sequenceScreenViewBase26SaveSequenceButton_ClickedEv>:
     * Virtual Action Handlers
     */
    virtual void SaveSequenceButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }
 8004106:	4770      	bx	lr

08004108 <_ZN22sequenceScreenViewBase26PlaySequenceButton_ClickedEv>:

    virtual void PlaySequenceButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }
 8004108:	4770      	bx	lr

0800410a <_ZN22sequenceScreenViewBase28AddNewPositionButton_ClickedEv>:

    virtual void AddNewPositionButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }
 800410a:	4770      	bx	lr

0800410c <_ZN22sequenceScreenViewBase28DeletePositionButton_ClickedEv>:

    virtual void DeletePositionButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }
 800410c:	4770      	bx	lr

0800410e <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EE20getNumberOfDrawablesEv>:
    }

    virtual int16_t getNumberOfDrawables()
    {
        return SIZE;
    }
 800410e:	2006      	movs	r0, #6
 8004110:	4770      	bx	lr

08004112 <_ZN8touchgfx8CallbackI22sequenceScreenViewBasePNS_26DrawableListItemsInterfaceEssED1Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 8004112:	4770      	bx	lr

08004114 <_ZN8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004114:	4770      	bx	lr
	...

08004118 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EED1Ev>:
class DrawableListItems : public DrawableListItemsInterface
 8004118:	b570      	push	{r4, r5, r6, lr}
 800411a:	4606      	mov	r6, r0
 800411c:	4b07      	ldr	r3, [pc, #28]	; (800413c <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EED1Ev+0x24>)
 800411e:	f846 3b04 	str.w	r3, [r6], #4
 8004122:	4605      	mov	r5, r0
 8004124:	f500 7453 	add.w	r4, r0, #844	; 0x34c
 8004128:	42a6      	cmp	r6, r4
 800412a:	d005      	beq.n	8004138 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EED1Ev+0x20>
 800412c:	f854 3d8c 	ldr.w	r3, [r4, #-140]!
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	4620      	mov	r0, r4
 8004134:	4798      	blx	r3
 8004136:	e7f7      	b.n	8004128 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EED1Ev+0x10>
 8004138:	4628      	mov	r0, r5
 800413a:	bd70      	pop	{r4, r5, r6, pc}
 800413c:	0801e744 	.word	0x0801e744

08004140 <_ZN22sequenceScreenViewBaseD1Ev>:
    virtual ~sequenceScreenViewBase() {}
 8004140:	b510      	push	{r4, lr}
 8004142:	4b04      	ldr	r3, [pc, #16]	; (8004154 <_ZN22sequenceScreenViewBaseD1Ev+0x14>)
 8004144:	6003      	str	r3, [r0, #0]
 8004146:	4604      	mov	r4, r0
 8004148:	f500 7034 	add.w	r0, r0, #720	; 0x2d0
 800414c:	f7ff ffe4 	bl	8004118 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EED1Ev>
 8004150:	4620      	mov	r0, r4
 8004152:	bd10      	pop	{r4, pc}
 8004154:	0801e808 	.word	0x0801e808

08004158 <_ZN8touchgfx13ClickListenerINS_10ScrollListEED1Ev>:
 * receives a click event.
 *
 * @tparam T specifies the type to extend with the ClickListener behavior.
 */
template <class T>
class ClickListener : public T
 8004158:	4770      	bx	lr

0800415a <_ZN8touchgfx8CallbackI22sequenceScreenViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss>:
    virtual void execute(T1 t1, T2 t2, T3 t3)
 800415a:	b4f0      	push	{r4, r5, r6, r7}
        (pobject->*pmemfun_3)(t1, t2, t3);
 800415c:	68c7      	ldr	r7, [r0, #12]
 800415e:	6846      	ldr	r6, [r0, #4]
 8004160:	6884      	ldr	r4, [r0, #8]
 8004162:	107d      	asrs	r5, r7, #1
 8004164:	07f8      	lsls	r0, r7, #31
 8004166:	bf44      	itt	mi
 8004168:	5970      	ldrmi	r0, [r6, r5]
 800416a:	5904      	ldrmi	r4, [r0, r4]
 800416c:	eb06 0c05 	add.w	ip, r6, r5
 8004170:	4660      	mov	r0, ip
 8004172:	46a4      	mov	ip, r4
    }
 8004174:	bcf0      	pop	{r4, r5, r6, r7}
        (pobject->*pmemfun_3)(t1, t2, t3);
 8004176:	4760      	bx	ip

08004178 <_ZNK8touchgfx8CallbackI22sequenceScreenViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv>:
        return (pobject != 0) && (pmemfun_3 != 0);
 8004178:	6843      	ldr	r3, [r0, #4]
 800417a:	b12b      	cbz	r3, 8004188 <_ZNK8touchgfx8CallbackI22sequenceScreenViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x10>
 800417c:	6883      	ldr	r3, [r0, #8]
 800417e:	b92b      	cbnz	r3, 800418c <_ZNK8touchgfx8CallbackI22sequenceScreenViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x14>
 8004180:	68c0      	ldr	r0, [r0, #12]
 8004182:	f000 0001 	and.w	r0, r0, #1
 8004186:	4770      	bx	lr
 8004188:	4618      	mov	r0, r3
 800418a:	4770      	bx	lr
 800418c:	2001      	movs	r0, #1
    }
 800418e:	4770      	bx	lr

08004190 <_ZN8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004190:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8004192:	68c5      	ldr	r5, [r0, #12]
 8004194:	6844      	ldr	r4, [r0, #4]
 8004196:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8004198:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800419a:	07ed      	lsls	r5, r5, #31
 800419c:	eb04 0002 	add.w	r0, r4, r2
 80041a0:	689b      	ldr	r3, [r3, #8]
 80041a2:	bf48      	it	mi
 80041a4:	58a2      	ldrmi	r2, [r4, r2]
    }
 80041a6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80041a8:	bf48      	it	mi
 80041aa:	58d3      	ldrmi	r3, [r2, r3]
 80041ac:	4718      	bx	r3

080041ae <_ZNK8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80041ae:	6843      	ldr	r3, [r0, #4]
 80041b0:	b12b      	cbz	r3, 80041be <_ZNK8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80041b2:	6883      	ldr	r3, [r0, #8]
 80041b4:	b92b      	cbnz	r3, 80041c2 <_ZNK8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80041b6:	68c0      	ldr	r0, [r0, #12]
 80041b8:	f000 0001 	and.w	r0, r0, #1
 80041bc:	4770      	bx	lr
 80041be:	4618      	mov	r0, r3
 80041c0:	4770      	bx	lr
 80041c2:	2001      	movs	r0, #1
    }
 80041c4:	4770      	bx	lr

080041c6 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EED0Ev>:
 80041c6:	b510      	push	{r4, lr}
 80041c8:	4604      	mov	r4, r0
 80041ca:	f7ff ffa5 	bl	8004118 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EED1Ev>
 80041ce:	4620      	mov	r0, r4
 80041d0:	f44f 7153 	mov.w	r1, #844	; 0x34c
 80041d4:	f018 f88e 	bl	801c2f4 <_ZdlPvj>
 80041d8:	4620      	mov	r0, r4
 80041da:	bd10      	pop	{r4, pc}

080041dc <_ZN8touchgfx13ClickListenerINS_10ScrollListEED0Ev>:
 80041dc:	b510      	push	{r4, lr}
 80041de:	21c8      	movs	r1, #200	; 0xc8
 80041e0:	4604      	mov	r4, r0
 80041e2:	f018 f887 	bl	801c2f4 <_ZdlPvj>
 80041e6:	4620      	mov	r0, r4
 80041e8:	bd10      	pop	{r4, pc}

080041ea <_ZN8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80041ea:	b510      	push	{r4, lr}
 80041ec:	2110      	movs	r1, #16
 80041ee:	4604      	mov	r4, r0
 80041f0:	f018 f880 	bl	801c2f4 <_ZdlPvj>
 80041f4:	4620      	mov	r0, r4
 80041f6:	bd10      	pop	{r4, pc}

080041f8 <_ZN8touchgfx8CallbackI22sequenceScreenViewBasePNS_26DrawableListItemsInterfaceEssED0Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 80041f8:	b510      	push	{r4, lr}
 80041fa:	2110      	movs	r1, #16
 80041fc:	4604      	mov	r4, r0
 80041fe:	f018 f879 	bl	801c2f4 <_ZdlPvj>
 8004202:	4620      	mov	r0, r4
 8004204:	bd10      	pop	{r4, pc}

08004206 <_ZN22sequenceScreenViewBaseD0Ev>:
 8004206:	b510      	push	{r4, lr}
 8004208:	4604      	mov	r4, r0
 800420a:	f7ff ff99 	bl	8004140 <_ZN22sequenceScreenViewBaseD1Ev>
 800420e:	4620      	mov	r0, r4
 8004210:	f240 613c 	movw	r1, #1596	; 0x63c
 8004214:	f018 f86e 	bl	801c2f4 <_ZdlPvj>
 8004218:	4620      	mov	r0, r4
 800421a:	bd10      	pop	{r4, pc}

0800421c <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EE11getDrawableEs>:
    virtual Drawable* getDrawable(int16_t index)
 800421c:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 800421e:	b28b      	uxth	r3, r1
 8004220:	2b05      	cmp	r3, #5
 8004222:	d905      	bls.n	8004230 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EE11getDrawableEs+0x14>
 8004224:	4b05      	ldr	r3, [pc, #20]	; (800423c <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EE11getDrawableEs+0x20>)
 8004226:	4a06      	ldr	r2, [pc, #24]	; (8004240 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EE11getDrawableEs+0x24>)
 8004228:	4806      	ldr	r0, [pc, #24]	; (8004244 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EE11getDrawableEs+0x28>)
 800422a:	2154      	movs	r1, #84	; 0x54
 800422c:	f018 f8a6 	bl	801c37c <__assert_func>
        return &element[index];
 8004230:	238c      	movs	r3, #140	; 0x8c
 8004232:	fb01 0003 	mla	r0, r1, r3, r0
    }
 8004236:	3004      	adds	r0, #4
 8004238:	bd08      	pop	{r3, pc}
 800423a:	bf00      	nop
 800423c:	0801e784 	.word	0x0801e784
 8004240:	0801e848 	.word	0x0801e848
 8004244:	0801e79f 	.word	0x0801e79f

08004248 <_ZN8touchgfx10ScrollBase10initializeEv>:
    virtual void itemChanged(int itemIndex);

    /** Removed all drawables and initializes the content of these items. */
    virtual void initialize()
    {
        list.refreshDrawables();
 8004248:	302c      	adds	r0, #44	; 0x2c
 800424a:	f006 b95f 	b.w	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800424e <_ZN22sequenceScreenViewBase11setupScreenEv>:
    add(infoTextArea);
    add(positionsList);
}

void sequenceScreenViewBase::setupScreen()
{
 800424e:	b570      	push	{r4, r5, r6, lr}
 8004250:	4605      	mov	r5, r0
 8004252:	f500 700d 	add.w	r0, r0, #564	; 0x234
 8004256:	f006 f959 	bl	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 800425a:	f44f 7435 	mov.w	r4, #724	; 0x2d4
    positionsList.initialize();
    for (int i = 0; i < positionsListListItems.getNumberOfDrawables(); i++)
 800425e:	f240 661c 	movw	r6, #1564	; 0x61c
    {
        positionsListListItems[i].initialize();
 8004262:	592b      	ldr	r3, [r5, r4]
 8004264:	1928      	adds	r0, r5, r4
 8004266:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800426a:	348c      	adds	r4, #140	; 0x8c
 800426c:	4798      	blx	r3
    for (int i = 0; i < positionsListListItems.getNumberOfDrawables(); i++)
 800426e:	42b4      	cmp	r4, r6
 8004270:	d1f7      	bne.n	8004262 <_ZN22sequenceScreenViewBase11setupScreenEv+0x14>
    }
}
 8004272:	bd70      	pop	{r4, r5, r6, pc}

08004274 <_ZN8touchgfx13ClickListenerINS_10ScrollListEE16handleClickEventERKNS_10ClickEventE>:
     * Ensures that the clickEvent is propagated to the super class T and to the clickAction
     * listener.
     *
     * @param  event Information about the click.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8004274:	b570      	push	{r4, r5, r6, lr}
 8004276:	4604      	mov	r4, r0
 8004278:	460d      	mov	r5, r1
    {
        T::handleClickEvent(event);
 800427a:	f006 f9da 	bl	800a632 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE>
        if (clickAction && clickAction->isValid())
 800427e:	f8d4 00c4 	ldr.w	r0, [r4, #196]	; 0xc4
 8004282:	b160      	cbz	r0, 800429e <_ZN8touchgfx13ClickListenerINS_10ScrollListEE16handleClickEventERKNS_10ClickEventE+0x2a>
 8004284:	6803      	ldr	r3, [r0, #0]
 8004286:	68db      	ldr	r3, [r3, #12]
 8004288:	4798      	blx	r3
 800428a:	b140      	cbz	r0, 800429e <_ZN8touchgfx13ClickListenerINS_10ScrollListEE16handleClickEventERKNS_10ClickEventE+0x2a>
        {
            clickAction->execute(*this, event);
 800428c:	f8d4 00c4 	ldr.w	r0, [r4, #196]	; 0xc4
 8004290:	6803      	ldr	r3, [r0, #0]
 8004292:	462a      	mov	r2, r5
 8004294:	4621      	mov	r1, r4
 8004296:	689b      	ldr	r3, [r3, #8]
        }
    }
 8004298:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
 800429c:	4718      	bx	r3
    }
 800429e:	bd70      	pop	{r4, r5, r6, pc}

080042a0 <_ZN22sequenceScreenViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss>:
        SaveSequenceButton_Clicked();
    }
}

void sequenceScreenViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
 80042a0:	b570      	push	{r4, r5, r6, lr}
 80042a2:	4604      	mov	r4, r0
    if (items == &positionsListListItems)
 80042a4:	f500 7034 	add.w	r0, r0, #720	; 0x2d0
 80042a8:	4288      	cmp	r0, r1
{
 80042aa:	461e      	mov	r6, r3
    if (items == &positionsListListItems)
 80042ac:	d10b      	bne.n	80042c6 <_ZN22sequenceScreenViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x26>
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
 80042ae:	4611      	mov	r1, r2
 80042b0:	f7ff ffb4 	bl	800421c <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EE11getDrawableEs>
        positionContainer* cc = (positionContainer*)d;
        positionsListUpdateItem(*cc, itemIndex);
 80042b4:	6823      	ldr	r3, [r4, #0]
 80042b6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80042b8:	4632      	mov	r2, r6
 80042ba:	4601      	mov	r1, r0
 80042bc:	462b      	mov	r3, r5
 80042be:	4620      	mov	r0, r4
    }
}
 80042c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        positionsListUpdateItem(*cc, itemIndex);
 80042c4:	4718      	bx	r3
}
 80042c6:	bd70      	pop	{r4, r5, r6, pc}

080042c8 <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &backButton)
 80042c8:	f100 029c 	add.w	r2, r0, #156	; 0x9c
 80042cc:	4291      	cmp	r1, r2
{
 80042ce:	b510      	push	{r4, lr}
    if (&src == &backButton)
 80042d0:	d105      	bne.n	80042de <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80042d2:	f009 ff51 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
}
 80042d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotomainScreenScreenSlideTransitionWest();
 80042da:	f7fe be6f 	b.w	8002fbc <_ZN23FrontendApplicationBase39gotomainScreenScreenSlideTransitionWestEv>
    else if (&src == &deletePositionButton)
 80042de:	f100 02d8 	add.w	r2, r0, #216	; 0xd8
 80042e2:	4291      	cmp	r1, r2
 80042e4:	d104      	bne.n	80042f0 <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
        DeletePositionButton_Clicked();
 80042e6:	6803      	ldr	r3, [r0, #0]
 80042e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
 80042ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        SaveSequenceButton_Clicked();
 80042ee:	4718      	bx	r3
    else if (&src == &addNewPositionButton)
 80042f0:	f500 728a 	add.w	r2, r0, #276	; 0x114
 80042f4:	4291      	cmp	r1, r2
 80042f6:	d102      	bne.n	80042fe <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
        AddNewPositionButton_Clicked();
 80042f8:	6803      	ldr	r3, [r0, #0]
 80042fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80042fc:	e7f5      	b.n	80042ea <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    else if (&src == &playSequenceButton)
 80042fe:	f500 72a8 	add.w	r2, r0, #336	; 0x150
 8004302:	4291      	cmp	r1, r2
 8004304:	d102      	bne.n	800430c <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x44>
        PlaySequenceButton_Clicked();
 8004306:	6803      	ldr	r3, [r0, #0]
 8004308:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800430a:	e7ee      	b.n	80042ea <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    else if (&src == &saveSequenceButton)
 800430c:	f500 72c6 	add.w	r2, r0, #396	; 0x18c
 8004310:	4291      	cmp	r1, r2
 8004312:	d102      	bne.n	800431a <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x52>
        SaveSequenceButton_Clicked();
 8004314:	6803      	ldr	r3, [r0, #0]
 8004316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004318:	e7e7      	b.n	80042ea <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
}
 800431a:	bd10      	pop	{r4, pc}

0800431c <_ZN22sequenceScreenViewBaseC1Ev>:
sequenceScreenViewBase::sequenceScreenViewBase() :
 800431c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004320:	4604      	mov	r4, r0
 8004322:	b091      	sub	sp, #68	; 0x44
    updateItemCallback(this, &sequenceScreenViewBase::updateItemCallbackHandler)
 8004324:	46a1      	mov	r9, r4
 8004326:	2500      	movs	r5, #0
 8004328:	f00a ff7e 	bl	800f228 <_ZN8touchgfx6ScreenC1Ev>
 800432c:	4bda      	ldr	r3, [pc, #872]	; (8004698 <_ZN22sequenceScreenViewBaseC1Ev+0x37c>)
 800432e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004330:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8004334:	4629      	mov	r1, r5
 8004336:	2226      	movs	r2, #38	; 0x26
 8004338:	4648      	mov	r0, r9
 800433a:	f018 f8a8 	bl	801c48e <memset>
 800433e:	4648      	mov	r0, r9
 8004340:	f7ff fbb0 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8004344:	4bd5      	ldr	r3, [pc, #852]	; (800469c <_ZN22sequenceScreenViewBaseC1Ev+0x380>)
 8004346:	6423      	str	r3, [r4, #64]	; 0x40
 8004348:	f104 0a70 	add.w	sl, r4, #112	; 0x70
 800434c:	23ff      	movs	r3, #255	; 0xff
 800434e:	af10      	add	r7, sp, #64	; 0x40
        : Widget(), alpha(255)
 8004350:	2226      	movs	r2, #38	; 0x26
 8004352:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8004356:	4629      	mov	r1, r5
 8004358:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800435c:	66a5      	str	r5, [r4, #104]	; 0x68
 800435e:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 8004362:	4650      	mov	r0, sl
 8004364:	f827 6d08 	strh.w	r6, [r7, #-8]!
 8004368:	f018 f891 	bl	801c48e <memset>
 800436c:	4650      	mov	r0, sl
 800436e:	f7ff fb99 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8004372:	4bcb      	ldr	r3, [pc, #812]	; (80046a0 <_ZN22sequenceScreenViewBaseC1Ev+0x384>)
 8004374:	6723      	str	r3, [r4, #112]	; 0x70
        setBitmap(bmp);
 8004376:	4639      	mov	r1, r7
 8004378:	f8a4 6096 	strh.w	r6, [r4, #150]	; 0x96
        : Widget(), alpha(255)
 800437c:	f884 6098 	strb.w	r6, [r4, #152]	; 0x98
        setBitmap(bmp);
 8004380:	4650      	mov	r0, sl
 8004382:	f008 fea0 	bl	800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004386:	f104 039c 	add.w	r3, r4, #156	; 0x9c
 800438a:	4618      	mov	r0, r3
 800438c:	9304      	str	r3, [sp, #16]
 800438e:	f008 fe75 	bl	800d07c <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004392:	f104 03d8 	add.w	r3, r4, #216	; 0xd8
 8004396:	4618      	mov	r0, r3
 8004398:	9305      	str	r3, [sp, #20]
 800439a:	f008 fe6f 	bl	800d07c <_ZN8touchgfx14ButtonWithIconC1Ev>
 800439e:	f504 738a 	add.w	r3, r4, #276	; 0x114
 80043a2:	4618      	mov	r0, r3
 80043a4:	9306      	str	r3, [sp, #24]
 80043a6:	f008 fe69 	bl	800d07c <_ZN8touchgfx14ButtonWithIconC1Ev>
 80043aa:	f504 73a8 	add.w	r3, r4, #336	; 0x150
 80043ae:	4618      	mov	r0, r3
 80043b0:	9307      	str	r3, [sp, #28]
 80043b2:	f008 fe63 	bl	800d07c <_ZN8touchgfx14ButtonWithIconC1Ev>
 80043b6:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 80043ba:	4618      	mov	r0, r3
 80043bc:	9308      	str	r3, [sp, #32]
 80043be:	f008 fe5d 	bl	800d07c <_ZN8touchgfx14ButtonWithIconC1Ev>
 80043c2:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80043c6:	4629      	mov	r1, r5
 80043c8:	2226      	movs	r2, #38	; 0x26
 80043ca:	4618      	mov	r0, r3
 80043cc:	9302      	str	r3, [sp, #8]
 80043ce:	f018 f85e 	bl	801c48e <memset>
 80043d2:	9802      	ldr	r0, [sp, #8]
 80043d4:	f7ff fb66 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 80043d8:	4bb2      	ldr	r3, [pc, #712]	; (80046a4 <_ZN22sequenceScreenViewBaseC1Ev+0x388>)
 80043da:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 80043de:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80043e2:	f8a4 61f4 	strh.w	r6, [r4, #500]	; 0x1f4
 80043e6:	f8c4 31fc 	str.w	r3, [r4, #508]	; 0x1fc
 80043ea:	f504 7602 	add.w	r6, r4, #520	; 0x208
        : TextArea(), wildcard(0)
 80043ee:	4bae      	ldr	r3, [pc, #696]	; (80046a8 <_ZN22sequenceScreenViewBaseC1Ev+0x38c>)
 80043f0:	f8c4 51f8 	str.w	r5, [r4, #504]	; 0x1f8
 80043f4:	f884 5200 	strb.w	r5, [r4, #512]	; 0x200
 80043f8:	f884 5201 	strb.w	r5, [r4, #513]	; 0x201
 80043fc:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
 8004400:	f8c4 5204 	str.w	r5, [r4, #516]	; 0x204
        : T(), clickAction(0)
 8004404:	4630      	mov	r0, r6
 8004406:	f006 facf 	bl	800a9a8 <_ZN8touchgfx10ScrollListC1Ev>
 800440a:	4ba8      	ldr	r3, [pc, #672]	; (80046ac <_ZN22sequenceScreenViewBaseC1Ev+0x390>)
 800440c:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
        touchable = touch;
 8004410:	2301      	movs	r3, #1
 8004412:	f884 322c 	strb.w	r3, [r4, #556]	; 0x22c
 8004416:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800441a:	9309      	str	r3, [sp, #36]	; 0x24
class DrawableListItems : public DrawableListItemsInterface
 800441c:	4ba4      	ldr	r3, [pc, #656]	; (80046b0 <_ZN22sequenceScreenViewBaseC1Ev+0x394>)
 800441e:	f8c4 52cc 	str.w	r5, [r4, #716]	; 0x2cc
 8004422:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8004426:	f504 7535 	add.w	r5, r4, #724	; 0x2d4
 800442a:	f204 671c 	addw	r7, r4, #1564	; 0x61c
 800442e:	4628      	mov	r0, r5
 8004430:	358c      	adds	r5, #140	; 0x8c
 8004432:	f000 fa4b 	bl	80048cc <_ZN17positionContainerC1Ev>
 8004436:	42af      	cmp	r7, r5
 8004438:	d1f9      	bne.n	800442e <_ZN22sequenceScreenViewBaseC1Ev+0x112>
    {
 800443a:	4b9e      	ldr	r3, [pc, #632]	; (80046b4 <_ZN22sequenceScreenViewBaseC1Ev+0x398>)
 800443c:	f8c4 361c 	str.w	r3, [r4, #1564]	; 0x61c
        this->pmemfun_1 = pmemfun_1;
 8004440:	4b9d      	ldr	r3, [pc, #628]	; (80046b8 <_ZN22sequenceScreenViewBaseC1Ev+0x39c>)
 8004442:	f8c4 3624 	str.w	r3, [r4, #1572]	; 0x624
    {
 8004446:	4b9d      	ldr	r3, [pc, #628]	; (80046bc <_ZN22sequenceScreenViewBaseC1Ev+0x3a0>)
 8004448:	f8c4 362c 	str.w	r3, [r4, #1580]	; 0x62c
        this->pmemfun_3 = pmemfun_3;
 800444c:	4b9c      	ldr	r3, [pc, #624]	; (80046c0 <_ZN22sequenceScreenViewBaseC1Ev+0x3a4>)
 800444e:	f8c4 3634 	str.w	r3, [r4, #1588]	; 0x634
        this->pmemfun_1 = pmemfun_1;
 8004452:	2500      	movs	r5, #0
    __background.setPosition(0, 0, 240, 320);
 8004454:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004458:	f8c4 5628 	str.w	r5, [r4, #1576]	; 0x628
        this->pmemfun_3 = pmemfun_3;
 800445c:	f8c4 5638 	str.w	r5, [r4, #1592]	; 0x638
 8004460:	9300      	str	r3, [sp, #0]
 8004462:	462a      	mov	r2, r5
 8004464:	23f0      	movs	r3, #240	; 0xf0
 8004466:	4629      	mov	r1, r5
 8004468:	4648      	mov	r0, r9
        this->pobject = pobject;
 800446a:	f8c4 4620 	str.w	r4, [r4, #1568]	; 0x620
        this->pobject = pobject;
 800446e:	f8c4 4630 	str.w	r4, [r4, #1584]	; 0x630
 8004472:	f7ff fa41 	bl	80038f8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8004476:	462a      	mov	r2, r5
 8004478:	4629      	mov	r1, r5
 800447a:	4628      	mov	r0, r5
 800447c:	f7ff fb48 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8004480:	af10      	add	r7, sp, #64	; 0x40
    backgroundImage.setXY(0, 0);
 8004482:	462a      	mov	r2, r5
        this->color = color;
 8004484:	66a0      	str	r0, [r4, #104]	; 0x68
 8004486:	4629      	mov	r1, r5
 8004488:	4650      	mov	r0, sl
 800448a:	f7ff fa4d 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800448e:	f827 5d08 	strh.w	r5, [r7, #-8]!
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));
 8004492:	4650      	mov	r0, sl
 8004494:	4639      	mov	r1, r7
 8004496:	f008 fe16 	bl	800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    backButton.setXY(0, 260);
 800449a:	4629      	mov	r1, r5
 800449c:	9804      	ldr	r0, [sp, #16]
 800449e:	f44f 7282 	mov.w	r2, #260	; 0x104
 80044a2:	f7ff fa41 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 80044a6:	2304      	movs	r3, #4
 80044a8:	f04f 0802 	mov.w	r8, #2
 80044ac:	f04f 0b01 	mov.w	fp, #1
 80044b0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80044b4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
 80044b8:	aa0c      	add	r2, sp, #48	; 0x30
 80044ba:	ab0d      	add	r3, sp, #52	; 0x34
 80044bc:	a90b      	add	r1, sp, #44	; 0x2c
 80044be:	9804      	ldr	r0, [sp, #16]
 80044c0:	9700      	str	r7, [sp, #0]
 80044c2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80044c6:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80044ca:	f008 fd33 	bl	800cf34 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 80044ce:	2316      	movs	r3, #22
    backButton.setAction(buttonCallback);
 80044d0:	f204 621c 	addw	r2, r4, #1564	; 0x61c
 80044d4:	f8a4 30d4 	strh.w	r3, [r4, #212]	; 0xd4
        iconY = y;
 80044d8:	f04f 030f 	mov.w	r3, #15
 80044dc:	f8a4 30d6 	strh.w	r3, [r4, #214]	; 0xd6
 80044e0:	9203      	str	r2, [sp, #12]
 80044e2:	f8c4 20c4 	str.w	r2, [r4, #196]	; 0xc4
    deletePositionButton.setXY(180, 0);
 80044e6:	9805      	ldr	r0, [sp, #20]
 80044e8:	462a      	mov	r2, r5
 80044ea:	21b4      	movs	r1, #180	; 0xb4
 80044ec:	f7ff fa1c 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 80044f0:	2307      	movs	r3, #7
    deletePositionButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
 80044f2:	aa0d      	add	r2, sp, #52	; 0x34
 80044f4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80044f8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80044fc:	a90b      	add	r1, sp, #44	; 0x2c
 80044fe:	4613      	mov	r3, r2
 8004500:	9805      	ldr	r0, [sp, #20]
 8004502:	9700      	str	r7, [sp, #0]
 8004504:	aa0c      	add	r2, sp, #48	; 0x30
 8004506:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800450a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
        iconX = x;
 800450e:	f04f 0b10 	mov.w	fp, #16
 8004512:	f008 fd0f 	bl	800cf34 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004516:	9b03      	ldr	r3, [sp, #12]
 8004518:	f8a4 b110 	strh.w	fp, [r4, #272]	; 0x110
        iconY = y;
 800451c:	f8a4 b112 	strh.w	fp, [r4, #274]	; 0x112
 8004520:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    addNewPositionButton.setXY(90, 260);
 8004524:	9806      	ldr	r0, [sp, #24]
 8004526:	f44f 7282 	mov.w	r2, #260	; 0x104
 800452a:	215a      	movs	r1, #90	; 0x5a
 800452c:	f7ff f9fc 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8004530:	f04f 0301 	mov.w	r3, #1
 8004534:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    addNewPositionButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
 8004538:	aa0d      	add	r2, sp, #52	; 0x34
 800453a:	2303      	movs	r3, #3
 800453c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8004540:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8004544:	a90b      	add	r1, sp, #44	; 0x2c
 8004546:	4613      	mov	r3, r2
 8004548:	9806      	ldr	r0, [sp, #24]
 800454a:	9700      	str	r7, [sp, #0]
 800454c:	aa0c      	add	r2, sp, #48	; 0x30
 800454e:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8004552:	f008 fcef 	bl	800cf34 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004556:	9b03      	ldr	r3, [sp, #12]
        iconX = x;
 8004558:	f8a4 b14c 	strh.w	fp, [r4, #332]	; 0x14c
        iconY = y;
 800455c:	f8a4 b14e 	strh.w	fp, [r4, #334]	; 0x14e
 8004560:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    playSequenceButton.setXY(180, 260);
 8004564:	9807      	ldr	r0, [sp, #28]
 8004566:	f44f 7282 	mov.w	r2, #260	; 0x104
 800456a:	21b4      	movs	r1, #180	; 0xb4
 800456c:	f7ff f9dc 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8004570:	2306      	movs	r3, #6
    playSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID));
 8004572:	aa0d      	add	r2, sp, #52	; 0x34
 8004574:	f04f 0b01 	mov.w	fp, #1
 8004578:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800457c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8004580:	a90b      	add	r1, sp, #44	; 0x2c
 8004582:	4613      	mov	r3, r2
 8004584:	9807      	ldr	r0, [sp, #28]
 8004586:	9700      	str	r7, [sp, #0]
 8004588:	aa0c      	add	r2, sp, #48	; 0x30
 800458a:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800458e:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8004592:	f008 fccf 	bl	800cf34 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 8004596:	2314      	movs	r3, #20
 8004598:	f8a4 3188 	strh.w	r3, [r4, #392]	; 0x188
        iconY = y;
 800459c:	f04f 030f 	mov.w	r3, #15
 80045a0:	f8a4 318a 	strh.w	r3, [r4, #394]	; 0x18a
 80045a4:	9b03      	ldr	r3, [sp, #12]
 80045a6:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
    saveSequenceButton.setXY(0, 0);
 80045aa:	462a      	mov	r2, r5
 80045ac:	4629      	mov	r1, r5
 80045ae:	9808      	ldr	r0, [sp, #32]
 80045b0:	f7ff f9ba 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    saveSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DONE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DONE_32_ID));
 80045b4:	aa0d      	add	r2, sp, #52	; 0x34
 80045b6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80045ba:	4613      	mov	r3, r2
 80045bc:	f04f 0b05 	mov.w	fp, #5
 80045c0:	aa0c      	add	r2, sp, #48	; 0x30
 80045c2:	a90b      	add	r1, sp, #44	; 0x2c
 80045c4:	9808      	ldr	r0, [sp, #32]
 80045c6:	9700      	str	r7, [sp, #0]
 80045c8:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80045cc:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 80045d0:	f8ad b038 	strh.w	fp, [sp, #56]	; 0x38
 80045d4:	f008 fcae 	bl	800cf34 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 80045d8:	f04f 030f 	mov.w	r3, #15
 80045dc:	f8a4 31c4 	strh.w	r3, [r4, #452]	; 0x1c4
        iconY = y;
 80045e0:	f8a4 31c6 	strh.w	r3, [r4, #454]	; 0x1c6
 80045e4:	9b03      	ldr	r3, [sp, #12]
 80045e6:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
    infoTextArea.setXY(95, 18);
 80045ea:	9802      	ldr	r0, [sp, #8]
 80045ec:	2212      	movs	r2, #18
 80045ee:	215f      	movs	r1, #95	; 0x5f
 80045f0:	f7ff f99a 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    infoTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80045f4:	462a      	mov	r2, r5
 80045f6:	4629      	mov	r1, r5
 80045f8:	4628      	mov	r0, r5
 80045fa:	f7ff fa89 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        linespace = space;
 80045fe:	f8a4 51fc 	strh.w	r5, [r4, #508]	; 0x1fc
        this->color = color;
 8004602:	f8c4 01f8 	str.w	r0, [r4, #504]	; 0x1f8
 8004606:	4b27      	ldr	r3, [pc, #156]	; (80046a4 <_ZN22sequenceScreenViewBaseC1Ev+0x388>)
    infoTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
 8004608:	9802      	ldr	r0, [sp, #8]
 800460a:	930e      	str	r3, [sp, #56]	; 0x38
 800460c:	4639      	mov	r1, r7
 800460e:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 8004612:	f008 fa8f 	bl	800cb34 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    positionsList.setPosition(0, 60, 240, 200);
 8004616:	23c8      	movs	r3, #200	; 0xc8
 8004618:	223c      	movs	r2, #60	; 0x3c
 800461a:	9300      	str	r3, [sp, #0]
 800461c:	4629      	mov	r1, r5
 800461e:	23f0      	movs	r3, #240	; 0xf0
 8004620:	4630      	mov	r0, r6
 8004622:	f7ff f969 	bl	80038f8 <_ZN8touchgfx8Drawable11setPositionEssss>
    positionsList.setHorizontal(false);
 8004626:	4629      	mov	r1, r5
 8004628:	4630      	mov	r0, r6
 800462a:	f006 fbc6 	bl	800adba <_ZN8touchgfx10ScrollBase13setHorizontalEb>
    positionsList.setCircular(false);
 800462e:	4629      	mov	r1, r5
 8004630:	4630      	mov	r0, r6
 8004632:	f006 fc1b 	bl	800ae6c <_ZN8touchgfx10ScrollBase11setCircularEb>
    positionsList.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
 8004636:	4630      	mov	r0, r6
 8004638:	4922      	ldr	r1, [pc, #136]	; (80046c4 <_ZN22sequenceScreenViewBaseC1Ev+0x3a8>)
 800463a:	f006 fb02 	bl	800ac42 <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>
    positionsList.setSwipeAcceleration(10);
 800463e:	4630      	mov	r0, r6
 8004640:	210a      	movs	r1, #10
 8004642:	f006 fb01 	bl	800ac48 <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>
    positionsList.setDragAcceleration(10);
 8004646:	4630      	mov	r0, r6
 8004648:	210a      	movs	r1, #10
 800464a:	f006 fb00 	bl	800ac4e <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>
    positionsList.setNumberOfItems(2);
 800464e:	4641      	mov	r1, r8
 8004650:	4630      	mov	r0, r6
 8004652:	f006 fa72 	bl	800ab3a <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
    positionsList.setPadding(0, 0);
 8004656:	462a      	mov	r2, r5
 8004658:	4629      	mov	r1, r5
 800465a:	4630      	mov	r0, r6
 800465c:	f006 f9b6 	bl	800a9cc <_ZN8touchgfx10ScrollList10setPaddingEss>
    positionsList.setSnapping(true);
 8004660:	4630      	mov	r0, r6
 8004662:	2101      	movs	r1, #1
 8004664:	f006 f9ca 	bl	800a9fc <_ZN8touchgfx10ScrollList11setSnappingEb>
    positionsList.setDrawableSize(41, 0);
 8004668:	462a      	mov	r2, r5
 800466a:	4630      	mov	r0, r6
 800466c:	2129      	movs	r1, #41	; 0x29
 800466e:	1d25      	adds	r5, r4, #4
 8004670:	f006 fae0 	bl	800ac34 <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>
    positionsList.setDrawables(positionsListListItems, updateItemCallback);
 8004674:	f204 622c 	addw	r2, r4, #1580	; 0x62c
 8004678:	9909      	ldr	r1, [sp, #36]	; 0x24
 800467a:	4630      	mov	r0, r6
 800467c:	f006 f8c7 	bl	800a80e <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>
 8004680:	4649      	mov	r1, r9
 8004682:	4628      	mov	r0, r5
 8004684:	f006 fca8 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004688:	4651      	mov	r1, sl
 800468a:	4628      	mov	r0, r5
 800468c:	f006 fca4 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004690:	9904      	ldr	r1, [sp, #16]
 8004692:	4628      	mov	r0, r5
 8004694:	e018      	b.n	80046c8 <_ZN22sequenceScreenViewBaseC1Ev+0x3ac>
 8004696:	bf00      	nop
 8004698:	0801e808 	.word	0x0801e808
 800469c:	0801fd64 	.word	0x0801fd64
 80046a0:	0801ffb8 	.word	0x0801ffb8
 80046a4:	0801da4c 	.word	0x0801da4c
 80046a8:	0801fe64 	.word	0x0801fe64
 80046ac:	0801e670 	.word	0x0801e670
 80046b0:	0801e744 	.word	0x0801e744
 80046b4:	0801e75c 	.word	0x0801e75c
 80046b8:	080042c9 	.word	0x080042c9
 80046bc:	0801e774 	.word	0x0801e774
 80046c0:	080042a1 	.word	0x080042a1
 80046c4:	0800f52d 	.word	0x0800f52d
 80046c8:	f006 fc86 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80046cc:	9905      	ldr	r1, [sp, #20]
 80046ce:	4628      	mov	r0, r5
 80046d0:	f006 fc82 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80046d4:	9906      	ldr	r1, [sp, #24]
 80046d6:	4628      	mov	r0, r5
 80046d8:	f006 fc7e 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80046dc:	9907      	ldr	r1, [sp, #28]
 80046de:	4628      	mov	r0, r5
 80046e0:	f006 fc7a 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80046e4:	9908      	ldr	r1, [sp, #32]
 80046e6:	4628      	mov	r0, r5
 80046e8:	f006 fc76 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80046ec:	9902      	ldr	r1, [sp, #8]
 80046ee:	4628      	mov	r0, r5
 80046f0:	f006 fc72 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80046f4:	4628      	mov	r0, r5
 80046f6:	4631      	mov	r1, r6
 80046f8:	f006 fc6e 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80046fc:	4620      	mov	r0, r4
 80046fe:	b011      	add	sp, #68	; 0x44
 8004700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004704 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004704:	4770      	bx	lr

08004706 <_ZN19FrontendApplicationD0Ev>:
 8004706:	b510      	push	{r4, lr}
 8004708:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800470c:	4604      	mov	r4, r0
 800470e:	f017 fdf1 	bl	801c2f4 <_ZdlPvj>
 8004712:	4620      	mov	r0, r4
 8004714:	bd10      	pop	{r4, pc}

08004716 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004716:	b510      	push	{r4, lr}
 8004718:	4604      	mov	r4, r0
    {
        model.tick();
 800471a:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800471e:	f000 f812 	bl	8004746 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004722:	4620      	mov	r0, r4
    }
 8004724:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004728:	f009 bbfe 	b.w	800df28 <_ZN8touchgfx11Application15handleTickEventEv>

0800472c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800472c:	b510      	push	{r4, lr}
 800472e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004730:	f7fe fbfc 	bl	8002f2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004734:	4b01      	ldr	r3, [pc, #4]	; (800473c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004736:	6023      	str	r3, [r4, #0]
{

}
 8004738:	4620      	mov	r0, r4
 800473a:	bd10      	pop	{r4, pc}
 800473c:	0801e8e8 	.word	0x0801e8e8

08004740 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8004740:	2200      	movs	r2, #0
 8004742:	6002      	str	r2, [r0, #0]
{

}
 8004744:	4770      	bx	lr

08004746 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8004746:	4770      	bx	lr

08004748 <_ZN19mainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~mainScreenPresenter() {};
 8004748:	4770      	bx	lr

0800474a <_ZThn4_N19mainScreenPresenterD1Ev>:
 800474a:	3804      	subs	r0, #4
 800474c:	4770      	bx	lr

0800474e <_ZN19mainScreenPresenter10deactivateEv>:
}

void mainScreenPresenter::activate()
{

}
 800474e:	4770      	bx	lr

08004750 <_ZN19mainScreenPresenterD0Ev>:
 8004750:	b510      	push	{r4, lr}
 8004752:	2110      	movs	r1, #16
 8004754:	4604      	mov	r4, r0
 8004756:	f017 fdcd 	bl	801c2f4 <_ZdlPvj>
 800475a:	4620      	mov	r0, r4
 800475c:	bd10      	pop	{r4, pc}

0800475e <_ZThn4_N19mainScreenPresenterD0Ev>:
 800475e:	f1a0 0004 	sub.w	r0, r0, #4
 8004762:	e7f5      	b.n	8004750 <_ZN19mainScreenPresenterD0Ev>

08004764 <_ZN19mainScreenPresenterC1ER14mainScreenView>:
mainScreenPresenter::mainScreenPresenter(mainScreenView& v)
 8004764:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004766:	2200      	movs	r2, #0
 8004768:	6082      	str	r2, [r0, #8]
    : view(v)
 800476a:	4a04      	ldr	r2, [pc, #16]	; (800477c <_ZN19mainScreenPresenterC1ER14mainScreenView+0x18>)
 800476c:	60c1      	str	r1, [r0, #12]
 800476e:	f102 0408 	add.w	r4, r2, #8
 8004772:	3220      	adds	r2, #32
 8004774:	6004      	str	r4, [r0, #0]
 8004776:	6042      	str	r2, [r0, #4]
}
 8004778:	bd10      	pop	{r4, pc}
 800477a:	bf00      	nop
 800477c:	0801e924 	.word	0x0801e924

08004780 <_ZN14mainScreenViewD1Ev>:

class mainScreenView : public mainScreenViewBase
{
public:
    mainScreenView();
    virtual ~mainScreenView() {}
 8004780:	4770      	bx	lr

08004782 <_ZN14mainScreenView14tearDownScreenEv>:
}

void mainScreenView::tearDownScreen()
{
    mainScreenViewBase::tearDownScreen();
}
 8004782:	4770      	bx	lr

08004784 <_ZN14mainScreenView24XAxisSliderValue_ChangedEi>:

void mainScreenView::XAxisSliderValue_Changed(int value)
{
	xAxisPWMDuty = 275 + 9 * value;
 8004784:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 8004788:	4b02      	ldr	r3, [pc, #8]	; (8004794 <_ZN14mainScreenView24XAxisSliderValue_ChangedEi+0x10>)
 800478a:	f201 1113 	addw	r1, r1, #275	; 0x113
 800478e:	6019      	str	r1, [r3, #0]
}
 8004790:	4770      	bx	lr
 8004792:	bf00      	nop
 8004794:	20000018 	.word	0x20000018

08004798 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi>:

void mainScreenView::YAxisSlider_L_Value_Changed(int value)
{
	yAxisPWMDuty_L = (int) (842.0 + 5.06 * (float)value);
 8004798:	ee07 1a90 	vmov	s15, r1
 800479c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 80047a0:	b508      	push	{r3, lr}
	yAxisPWMDuty_L = (int) (842.0 + 5.06 * (float)value);
 80047a2:	ee17 0a90 	vmov	r0, s15
 80047a6:	f7fb fed7 	bl	8000558 <__aeabi_f2d>
 80047aa:	a309      	add	r3, pc, #36	; (adr r3, 80047d0 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x38>)
 80047ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80047b0:	f7fb ff2a 	bl	8000608 <__aeabi_dmul>
 80047b4:	4b04      	ldr	r3, [pc, #16]	; (80047c8 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x30>)
 80047b6:	2200      	movs	r2, #0
 80047b8:	f7fb fd70 	bl	800029c <__adddf3>
 80047bc:	f7fc f936 	bl	8000a2c <__aeabi_d2iz>
 80047c0:	4b02      	ldr	r3, [pc, #8]	; (80047cc <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x34>)
 80047c2:	6018      	str	r0, [r3, #0]
}
 80047c4:	bd08      	pop	{r3, pc}
 80047c6:	bf00      	nop
 80047c8:	408a5000 	.word	0x408a5000
 80047cc:	2000001c 	.word	0x2000001c
 80047d0:	a3d70a3d 	.word	0xa3d70a3d
 80047d4:	40143d70 	.word	0x40143d70

080047d8 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi>:

void mainScreenView::YAxisSlider_R_Value_Changed(int value)
{
	yAxisPWMDuty_R = (int) (842.0 + 3.42 * (float)value);
 80047d8:	ee07 1a90 	vmov	s15, r1
 80047dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 80047e0:	b508      	push	{r3, lr}
	yAxisPWMDuty_R = (int) (842.0 + 3.42 * (float)value);
 80047e2:	ee17 0a90 	vmov	r0, s15
 80047e6:	f7fb feb7 	bl	8000558 <__aeabi_f2d>
 80047ea:	a309      	add	r3, pc, #36	; (adr r3, 8004810 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x38>)
 80047ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80047f0:	f7fb ff0a 	bl	8000608 <__aeabi_dmul>
 80047f4:	4b04      	ldr	r3, [pc, #16]	; (8004808 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x30>)
 80047f6:	2200      	movs	r2, #0
 80047f8:	f7fb fd50 	bl	800029c <__adddf3>
 80047fc:	f7fc f916 	bl	8000a2c <__aeabi_d2iz>
 8004800:	4b02      	ldr	r3, [pc, #8]	; (800480c <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x34>)
 8004802:	6018      	str	r0, [r3, #0]
}
 8004804:	bd08      	pop	{r3, pc}
 8004806:	bf00      	nop
 8004808:	408a5000 	.word	0x408a5000
 800480c:	20000020 	.word	0x20000020
 8004810:	f5c28f5c 	.word	0xf5c28f5c
 8004814:	400b5c28 	.word	0x400b5c28

08004818 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv>:

void mainScreenView::ManipulatorControlToggleButton_Clicked()
{
	static bool state = false;

	if (state)
 8004818:	4b07      	ldr	r3, [pc, #28]	; (8004838 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x20>)
 800481a:	4a08      	ldr	r2, [pc, #32]	; (800483c <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x24>)
 800481c:	7819      	ldrb	r1, [r3, #0]
 800481e:	b129      	cbz	r1, 800482c <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x14>
	{
		manipulatorPWMDuty = 275;
 8004820:	f240 1113 	movw	r1, #275	; 0x113
 8004824:	6011      	str	r1, [r2, #0]
		state = false;
 8004826:	2200      	movs	r2, #0
	}
	else
	{
		manipulatorPWMDuty = 700;
		state = true;
 8004828:	701a      	strb	r2, [r3, #0]
	}
}
 800482a:	4770      	bx	lr
		manipulatorPWMDuty = 700;
 800482c:	f44f 712f 	mov.w	r1, #700	; 0x2bc
 8004830:	6011      	str	r1, [r2, #0]
		state = true;
 8004832:	2201      	movs	r2, #1
 8004834:	e7f8      	b.n	8004828 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x10>
 8004836:	bf00      	nop
 8004838:	2000178c 	.word	0x2000178c
 800483c:	20000014 	.word	0x20000014

08004840 <_ZN14mainScreenView11setupScreenEv>:
    mainScreenViewBase::setupScreen();
 8004840:	f7ff b8b0 	b.w	80039a4 <_ZN18mainScreenViewBase11setupScreenEv>

08004844 <_ZN14mainScreenViewD0Ev>:
 8004844:	b510      	push	{r4, lr}
 8004846:	f44f 61aa 	mov.w	r1, #1360	; 0x550
 800484a:	4604      	mov	r4, r0
 800484c:	f017 fd52 	bl	801c2f4 <_ZdlPvj>
 8004850:	4620      	mov	r0, r4
 8004852:	bd10      	pop	{r4, pc}

08004854 <_ZN14mainScreenViewC1Ev>:
mainScreenView::mainScreenView()
 8004854:	b510      	push	{r4, lr}
 8004856:	4604      	mov	r4, r0
 8004858:	f7ff f97c 	bl	8003b54 <_ZN18mainScreenViewBaseC1Ev>
 800485c:	4b0d      	ldr	r3, [pc, #52]	; (8004894 <_ZN14mainScreenViewC1Ev+0x40>)
 800485e:	6023      	str	r3, [r4, #0]
	HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_4, &xAxisPWMDuty, 1);
 8004860:	4a0d      	ldr	r2, [pc, #52]	; (8004898 <_ZN14mainScreenViewC1Ev+0x44>)
 8004862:	480e      	ldr	r0, [pc, #56]	; (800489c <_ZN14mainScreenViewC1Ev+0x48>)
 8004864:	2301      	movs	r3, #1
 8004866:	210c      	movs	r1, #12
 8004868:	f003 fa12 	bl	8007c90 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim3, TIM_CHANNEL_2, &yAxisPWMDuty_L, 1);
 800486c:	2301      	movs	r3, #1
 800486e:	4a0c      	ldr	r2, [pc, #48]	; (80048a0 <_ZN14mainScreenViewC1Ev+0x4c>)
 8004870:	480c      	ldr	r0, [pc, #48]	; (80048a4 <_ZN14mainScreenViewC1Ev+0x50>)
 8004872:	2104      	movs	r1, #4
 8004874:	f003 fa0c 	bl	8007c90 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim4, TIM_CHANNEL_1, &yAxisPWMDuty_R, 1);
 8004878:	2301      	movs	r3, #1
 800487a:	4a0b      	ldr	r2, [pc, #44]	; (80048a8 <_ZN14mainScreenViewC1Ev+0x54>)
 800487c:	480b      	ldr	r0, [pc, #44]	; (80048ac <_ZN14mainScreenViewC1Ev+0x58>)
 800487e:	2100      	movs	r1, #0
 8004880:	f003 fa06 	bl	8007c90 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim5, TIM_CHANNEL_1, &manipulatorPWMDuty, 1);
 8004884:	2301      	movs	r3, #1
 8004886:	4a0a      	ldr	r2, [pc, #40]	; (80048b0 <_ZN14mainScreenViewC1Ev+0x5c>)
 8004888:	480a      	ldr	r0, [pc, #40]	; (80048b4 <_ZN14mainScreenViewC1Ev+0x60>)
 800488a:	2100      	movs	r1, #0
 800488c:	f003 fa00 	bl	8007c90 <HAL_TIM_PWM_Start_DMA>
}
 8004890:	4620      	mov	r0, r4
 8004892:	bd10      	pop	{r4, pc}
 8004894:	0801e954 	.word	0x0801e954
 8004898:	20000018 	.word	0x20000018
 800489c:	20012b58 	.word	0x20012b58
 80048a0:	2000001c 	.word	0x2000001c
 80048a4:	2001296c 	.word	0x2001296c
 80048a8:	20000020 	.word	0x20000020
 80048ac:	20012884 	.word	0x20012884
 80048b0:	20000014 	.word	0x20000014
 80048b4:	2001292c 	.word	0x2001292c

080048b8 <_ZN17positionContainerD1Ev>:

class positionContainer : public positionContainerBase
{
public:
    positionContainer();
    virtual ~positionContainer() {}
 80048b8:	4770      	bx	lr

080048ba <_ZN17positionContainer10initializeEv>:

}

void positionContainer::initialize()
{
    positionContainerBase::initialize();
 80048ba:	f7ff bb74 	b.w	8003fa6 <_ZN21positionContainerBase10initializeEv>

080048be <_ZN17positionContainerD0Ev>:
 80048be:	b510      	push	{r4, lr}
 80048c0:	218c      	movs	r1, #140	; 0x8c
 80048c2:	4604      	mov	r4, r0
 80048c4:	f017 fd16 	bl	801c2f4 <_ZdlPvj>
 80048c8:	4620      	mov	r0, r4
 80048ca:	bd10      	pop	{r4, pc}

080048cc <_ZN17positionContainerC1Ev>:
positionContainer::positionContainer()
 80048cc:	b510      	push	{r4, lr}
 80048ce:	4604      	mov	r4, r0
 80048d0:	f7ff fb72 	bl	8003fb8 <_ZN21positionContainerBaseC1Ev>
 80048d4:	4b01      	ldr	r3, [pc, #4]	; (80048dc <_ZN17positionContainerC1Ev+0x10>)
 80048d6:	6023      	str	r3, [r4, #0]
}
 80048d8:	4620      	mov	r0, r4
 80048da:	bd10      	pop	{r4, pc}
 80048dc:	0801e998 	.word	0x0801e998

080048e0 <_ZN17positionContainer7SetTextEPt>:
		Unicode::snprintf(positionTextBuffer, POSITIONTEXT_SIZE, t);
}

void positionContainer::SetText(touchgfx::Unicode::UnicodeChar* t)
{
		Unicode::snprintf(positionTextBuffer, POSITIONTEXT_SIZE, "%s", t);
 80048e0:	460b      	mov	r3, r1
 80048e2:	4a02      	ldr	r2, [pc, #8]	; (80048ec <_ZN17positionContainer7SetTextEPt+0xc>)
 80048e4:	2110      	movs	r1, #16
 80048e6:	306c      	adds	r0, #108	; 0x6c
 80048e8:	f00b bf8a 	b.w	8010800 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80048ec:	0801e547 	.word	0x0801e547

080048f0 <_ZN23sequenceScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~sequenceScreenPresenter() {};
 80048f0:	4770      	bx	lr

080048f2 <_ZThn4_N23sequenceScreenPresenterD1Ev>:
 80048f2:	3804      	subs	r0, #4
 80048f4:	4770      	bx	lr

080048f6 <_ZN23sequenceScreenPresenter10deactivateEv>:
}

void sequenceScreenPresenter::activate()
{

}
 80048f6:	4770      	bx	lr

080048f8 <_ZN23sequenceScreenPresenterD0Ev>:
 80048f8:	b510      	push	{r4, lr}
 80048fa:	2110      	movs	r1, #16
 80048fc:	4604      	mov	r4, r0
 80048fe:	f017 fcf9 	bl	801c2f4 <_ZdlPvj>
 8004902:	4620      	mov	r0, r4
 8004904:	bd10      	pop	{r4, pc}

08004906 <_ZThn4_N23sequenceScreenPresenterD0Ev>:
 8004906:	f1a0 0004 	sub.w	r0, r0, #4
 800490a:	e7f5      	b.n	80048f8 <_ZN23sequenceScreenPresenterD0Ev>

0800490c <_ZN23sequenceScreenPresenterC1ER18sequenceScreenView>:
sequenceScreenPresenter::sequenceScreenPresenter(sequenceScreenView& v)
 800490c:	b510      	push	{r4, lr}
 800490e:	2200      	movs	r2, #0
 8004910:	6082      	str	r2, [r0, #8]
    : view(v)
 8004912:	4a04      	ldr	r2, [pc, #16]	; (8004924 <_ZN23sequenceScreenPresenterC1ER18sequenceScreenView+0x18>)
 8004914:	60c1      	str	r1, [r0, #12]
 8004916:	f102 0408 	add.w	r4, r2, #8
 800491a:	3220      	adds	r2, #32
 800491c:	6004      	str	r4, [r0, #0]
 800491e:	6042      	str	r2, [r0, #4]
}
 8004920:	bd10      	pop	{r4, pc}
 8004922:	bf00      	nop
 8004924:	0801ea20 	.word	0x0801ea20

08004928 <_ZN18sequenceScreenView14tearDownScreenEv>:
}

void sequenceScreenView::tearDownScreen()
{
    sequenceScreenViewBase::tearDownScreen();
}
 8004928:	4770      	bx	lr

0800492a <_ZN18sequenceScreenView11setupScreenEv>:
    sequenceScreenViewBase::setupScreen();
 800492a:	f7ff bc90 	b.w	800424e <_ZN22sequenceScreenViewBase11setupScreenEv>
	...

08004930 <_ZN18sequenceScreenViewD1Ev>:

class sequenceScreenView : public sequenceScreenViewBase
{
public:
    sequenceScreenView();
    virtual ~sequenceScreenView() {}
 8004930:	b510      	push	{r4, lr}
    virtual ~sequenceScreenViewBase() {}
 8004932:	4b04      	ldr	r3, [pc, #16]	; (8004944 <_ZN18sequenceScreenViewD1Ev+0x14>)
 8004934:	6003      	str	r3, [r0, #0]
 8004936:	4604      	mov	r4, r0
 8004938:	f500 7034 	add.w	r0, r0, #720	; 0x2d0
 800493c:	f7ff fbec 	bl	8004118 <_ZN8touchgfx17DrawableListItemsI17positionContainerLi6EED1Ev>
 8004940:	4620      	mov	r0, r4
 8004942:	bd10      	pop	{r4, pc}
 8004944:	0801e808 	.word	0x0801e808

08004948 <_ZN18sequenceScreenViewD0Ev>:
 8004948:	b510      	push	{r4, lr}
 800494a:	4604      	mov	r4, r0
 800494c:	f7ff fff0 	bl	8004930 <_ZN18sequenceScreenViewD1Ev>
 8004950:	4620      	mov	r0, r4
 8004952:	f240 613c 	movw	r1, #1596	; 0x63c
 8004956:	f017 fccd 	bl	801c2f4 <_ZdlPvj>
 800495a:	4620      	mov	r0, r4
 800495c:	bd10      	pop	{r4, pc}
	...

08004960 <_ZN18sequenceScreenViewC1Ev>:
sequenceScreenView::sequenceScreenView()
 8004960:	b510      	push	{r4, lr}
 8004962:	4604      	mov	r4, r0
 8004964:	f7ff fcda 	bl	800431c <_ZN22sequenceScreenViewBaseC1Ev>
 8004968:	4b01      	ldr	r3, [pc, #4]	; (8004970 <_ZN18sequenceScreenViewC1Ev+0x10>)
 800496a:	6023      	str	r3, [r4, #0]
}
 800496c:	4620      	mov	r0, r4
 800496e:	bd10      	pop	{r4, pc}
 8004970:	0801eac4 	.word	0x0801eac4

08004974 <_ZN21positionContainerBaseC1ERKS_>:
class positionContainerBase : public touchgfx::Container
 8004974:	b570      	push	{r4, r5, r6, lr}
 8004976:	460c      	mov	r4, r1
class Drawable
 8004978:	3104      	adds	r1, #4
 800497a:	4605      	mov	r5, r0
 800497c:	1d02      	adds	r2, r0, #4
 800497e:	c903      	ldmia	r1, {r0, r1}
 8004980:	e882 0003 	stmia.w	r2, {r0, r1}
 8004984:	f104 010c 	add.w	r1, r4, #12
 8004988:	c903      	ldmia	r1, {r0, r1}
 800498a:	f105 020c 	add.w	r2, r5, #12
 800498e:	e882 0003 	stmia.w	r2, {r0, r1}
 8004992:	6962      	ldr	r2, [r4, #20]
 8004994:	616a      	str	r2, [r5, #20]
 8004996:	69a2      	ldr	r2, [r4, #24]
 8004998:	61aa      	str	r2, [r5, #24]
 800499a:	69e2      	ldr	r2, [r4, #28]
 800499c:	61ea      	str	r2, [r5, #28]
 800499e:	f9b4 2020 	ldrsh.w	r2, [r4, #32]
 80049a2:	842a      	strh	r2, [r5, #32]
 80049a4:	f9b4 2022 	ldrsh.w	r2, [r4, #34]	; 0x22
 80049a8:	846a      	strh	r2, [r5, #34]	; 0x22
 80049aa:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 80049ae:	f885 2024 	strb.w	r2, [r5, #36]	; 0x24
 80049b2:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 80049b6:	f885 2025 	strb.w	r2, [r5, #37]	; 0x25
class Container : public Drawable
 80049ba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80049bc:	62aa      	str	r2, [r5, #40]	; 0x28
 80049be:	462a      	mov	r2, r5
 80049c0:	4929      	ldr	r1, [pc, #164]	; (8004a68 <_ZN21positionContainerBaseC1ERKS_+0xf4>)
 80049c2:	f842 1b30 	str.w	r1, [r2], #48
 80049c6:	f104 0130 	add.w	r1, r4, #48	; 0x30
 80049ca:	c903      	ldmia	r1, {r0, r1}
 80049cc:	e882 0003 	stmia.w	r2, {r0, r1}
 80049d0:	f104 0138 	add.w	r1, r4, #56	; 0x38
 80049d4:	c903      	ldmia	r1, {r0, r1}
 80049d6:	f105 0238 	add.w	r2, r5, #56	; 0x38
 80049da:	e882 0003 	stmia.w	r2, {r0, r1}
 80049de:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80049e0:	642a      	str	r2, [r5, #64]	; 0x40
 80049e2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80049e4:	646a      	str	r2, [r5, #68]	; 0x44
 80049e6:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80049e8:	64aa      	str	r2, [r5, #72]	; 0x48
 80049ea:	f9b4 204c 	ldrsh.w	r2, [r4, #76]	; 0x4c
 80049ee:	f8a5 204c 	strh.w	r2, [r5, #76]	; 0x4c
 80049f2:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 80049f6:	f8a5 204e 	strh.w	r2, [r5, #78]	; 0x4e
 80049fa:	f894 2050 	ldrb.w	r2, [r4, #80]	; 0x50
 80049fe:	f885 2050 	strb.w	r2, [r5, #80]	; 0x50
 8004a02:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 8004a06:	f885 2051 	strb.w	r2, [r5, #81]	; 0x51
 8004a0a:	4a18      	ldr	r2, [pc, #96]	; (8004a6c <_ZN21positionContainerBaseC1ERKS_+0xf8>)
 8004a0c:	62ea      	str	r2, [r5, #44]	; 0x2c
class TypedText
 8004a0e:	4a18      	ldr	r2, [pc, #96]	; (8004a70 <_ZN21positionContainerBaseC1ERKS_+0xfc>)
 8004a10:	656a      	str	r2, [r5, #84]	; 0x54
 8004a12:	f8b4 2058 	ldrh.w	r2, [r4, #88]	; 0x58
 8004a16:	f8a5 2058 	strh.w	r2, [r5, #88]	; 0x58
class TextArea : public Widget
 8004a1a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8004a1c:	65ea      	str	r2, [r5, #92]	; 0x5c
 8004a1e:	f9b4 2060 	ldrsh.w	r2, [r4, #96]	; 0x60
 8004a22:	f8a5 2060 	strh.w	r2, [r5, #96]	; 0x60
 8004a26:	f894 2062 	ldrb.w	r2, [r4, #98]	; 0x62
 8004a2a:	f885 2062 	strb.w	r2, [r5, #98]	; 0x62
 8004a2e:	f894 2063 	ldrb.w	r2, [r4, #99]	; 0x63
 8004a32:	f885 2063 	strb.w	r2, [r5, #99]	; 0x63
 8004a36:	f894 2064 	ldrb.w	r2, [r4, #100]	; 0x64
 8004a3a:	f885 2064 	strb.w	r2, [r5, #100]	; 0x64
 8004a3e:	f894 2065 	ldrb.w	r2, [r4, #101]	; 0x65
 8004a42:	f885 2065 	strb.w	r2, [r5, #101]	; 0x65
class TextAreaWithOneWildcard : public TextArea
 8004a46:	4a0b      	ldr	r2, [pc, #44]	; (8004a74 <_ZN21positionContainerBaseC1ERKS_+0x100>)
 8004a48:	62ea      	str	r2, [r5, #44]	; 0x2c
 8004a4a:	346c      	adds	r4, #108	; 0x6c
 8004a4c:	f854 2c04 	ldr.w	r2, [r4, #-4]
 8004a50:	66aa      	str	r2, [r5, #104]	; 0x68
 8004a52:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004a54:	f105 066c 	add.w	r6, r5, #108	; 0x6c
 8004a58:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8004a5a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8004a5e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8004a62:	4628      	mov	r0, r5
 8004a64:	bd70      	pop	{r4, r5, r6, pc}
 8004a66:	bf00      	nop
 8004a68:	0801e554 	.word	0x0801e554
 8004a6c:	0801ea50 	.word	0x0801ea50
 8004a70:	0801da4c 	.word	0x0801da4c
 8004a74:	0801fe64 	.word	0x0801fe64

08004a78 <_ZSt34__uninitialized_move_if_noexcept_aIP17positionContainerS1_SaIS0_EET0_T_S4_S3_RT1_.isra.17>:
    }

  template<typename _InputIterator, typename _ForwardIterator,
	   typename _Allocator>
    inline _ForwardIterator
    __uninitialized_move_if_noexcept_a(_InputIterator __first,
 8004a78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
class positionContainer : public positionContainerBase
 8004a7c:	f8df 9040 	ldr.w	r9, [pc, #64]	; 8004ac0 <_ZSt34__uninitialized_move_if_noexcept_aIP17positionContainerS1_SaIS0_EET0_T_S4_S3_RT1_.isra.17+0x48>
 8004a80:	4680      	mov	r8, r0
 8004a82:	460c      	mov	r4, r1
 8004a84:	4617      	mov	r7, r2
 8004a86:	4606      	mov	r6, r0
	  _ForwardIterator __cur = __result;
 8004a88:	4615      	mov	r5, r2
	      for (; __first != __last; ++__first, (void)++__cur)
 8004a8a:	42b4      	cmp	r4, r6
 8004a8c:	d009      	beq.n	8004aa2 <_ZSt34__uninitialized_move_if_noexcept_aIP17positionContainerS1_SaIS0_EET0_T_S4_S3_RT1_.isra.17+0x2a>
   */
#if __cplusplus >= 201103L
  template<typename _T1, typename... _Args>
    inline void
    _Construct(_T1* __p, _Args&&... __args)
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 8004a8e:	b12d      	cbz	r5, 8004a9c <_ZSt34__uninitialized_move_if_noexcept_aIP17positionContainerS1_SaIS0_EET0_T_S4_S3_RT1_.isra.17+0x24>
 8004a90:	4631      	mov	r1, r6
 8004a92:	4628      	mov	r0, r5
 8004a94:	f7ff ff6e 	bl	8004974 <_ZN21positionContainerBaseC1ERKS_>
 8004a98:	f8c5 9000 	str.w	r9, [r5]
      { return _M_current; }

      _GLIBCXX17_CONSTEXPR move_iterator&
      operator++()
      {
	++_M_current;
 8004a9c:	368c      	adds	r6, #140	; 0x8c
 8004a9e:	358c      	adds	r5, #140	; 0x8c
 8004aa0:	e7f3      	b.n	8004a8a <_ZSt34__uninitialized_move_if_noexcept_aIP17positionContainerS1_SaIS0_EET0_T_S4_S3_RT1_.isra.17+0x12>
				       _ForwardIterator __result,
				       _Allocator& __alloc)
    {
      return std::__uninitialized_copy_a
	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 8004aa2:	eba4 0408 	sub.w	r4, r4, r8
 8004aa6:	4805      	ldr	r0, [pc, #20]	; (8004abc <_ZSt34__uninitialized_move_if_noexcept_aIP17positionContainerS1_SaIS0_EET0_T_S4_S3_RT1_.isra.17+0x44>)
 8004aa8:	08a4      	lsrs	r4, r4, #2
 8004aaa:	4344      	muls	r4, r0
 8004aac:	f024 4440 	bic.w	r4, r4, #3221225472	; 0xc0000000
    }
 8004ab0:	208c      	movs	r0, #140	; 0x8c
 8004ab2:	fb00 7004 	mla	r0, r0, r4, r7
 8004ab6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004aba:	bf00      	nop
 8004abc:	0af8af8b 	.word	0x0af8af8b
 8004ac0:	0801e998 	.word	0x0801e998

08004ac4 <_ZNSt12_Destroy_auxILb0EE9__destroyIP17positionContainerEEvT_S4_>:
  template<bool>
    struct _Destroy_aux
    {
      template<typename _ForwardIterator>
        static void
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8004ac4:	b538      	push	{r3, r4, r5, lr}
 8004ac6:	4604      	mov	r4, r0
 8004ac8:	460d      	mov	r5, r1
	{
	  for (; __first != __last; ++__first)
 8004aca:	42ac      	cmp	r4, r5
 8004acc:	d005      	beq.n	8004ada <_ZNSt12_Destroy_auxILb0EE9__destroyIP17positionContainerEEvT_S4_+0x16>
    { __pointer->~_Tp(); }
 8004ace:	6823      	ldr	r3, [r4, #0]
 8004ad0:	4620      	mov	r0, r4
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	4798      	blx	r3
	  for (; __first != __last; ++__first)
 8004ad6:	348c      	adds	r4, #140	; 0x8c
 8004ad8:	e7f7      	b.n	8004aca <_ZNSt12_Destroy_auxILb0EE9__destroyIP17positionContainerEEvT_S4_+0x6>
	    std::_Destroy(std::__addressof(*__first));
	}
 8004ada:	bd38      	pop	{r3, r4, r5, pc}

08004adc <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv>:
{

}

void sequenceScreenView::AddNewPositionButton_Clicked()
{
 8004adc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ae0:	b0b0      	sub	sp, #192	; 0xc0
 8004ae2:	4605      	mov	r5, r0
	positionContainer newPosition;
 8004ae4:	a80d      	add	r0, sp, #52	; 0x34
 8004ae6:	f7ff fef1 	bl	80048cc <_ZN17positionContainerC1Ev>
	touchgfx::Unicode::UnicodeChar positionUnicodeChar[16];
	Unicode::snprintf(positionUnicodeChar, 16, "%d,%d,%d,%d", xAxisPWMDuty, yAxisPWMDuty_L, yAxisPWMDuty_R, manipulatorPWMDuty == 700 ? 1 : 0);
 8004aea:	4b3f      	ldr	r3, [pc, #252]	; (8004be8 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x10c>)
       *  available.
       */
      void
      push_back(const value_type& __x)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8004aec:	4f3f      	ldr	r7, [pc, #252]	; (8004bec <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x110>)
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	4e3f      	ldr	r6, [pc, #252]	; (8004bf0 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x114>)
 8004af2:	f5a3 722f 	sub.w	r2, r3, #700	; 0x2bc
 8004af6:	4253      	negs	r3, r2
 8004af8:	4153      	adcs	r3, r2
 8004afa:	9302      	str	r3, [sp, #8]
 8004afc:	4b3d      	ldr	r3, [pc, #244]	; (8004bf4 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x118>)
 8004afe:	4a3e      	ldr	r2, [pc, #248]	; (8004bf8 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x11c>)
 8004b00:	681b      	ldr	r3, [r3, #0]
 8004b02:	9301      	str	r3, [sp, #4]
 8004b04:	4b3d      	ldr	r3, [pc, #244]	; (8004bfc <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x120>)
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	9300      	str	r3, [sp, #0]
 8004b0a:	4b3d      	ldr	r3, [pc, #244]	; (8004c00 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x124>)
 8004b0c:	2110      	movs	r1, #16
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	a805      	add	r0, sp, #20
 8004b12:	f00b fe75 	bl	8010800 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	newPosition.SetText(positionUnicodeChar);
 8004b16:	a905      	add	r1, sp, #20
 8004b18:	a80d      	add	r0, sp, #52	; 0x34
 8004b1a:	f7ff fee1 	bl	80048e0 <_ZN17positionContainer7SetTextEPt>
 8004b1e:	e9d7 9301 	ldrd	r9, r3, [r7, #4]
 8004b22:	4599      	cmp	r9, r3
 8004b24:	d024      	beq.n	8004b70 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x94>

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8004b26:	f1b9 0f00 	cmp.w	r9, #0
 8004b2a:	d006      	beq.n	8004b3a <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x5e>
 8004b2c:	a90d      	add	r1, sp, #52	; 0x34
 8004b2e:	4648      	mov	r0, r9
 8004b30:	f7ff ff20 	bl	8004974 <_ZN21positionContainerBaseC1ERKS_>
 8004b34:	4b33      	ldr	r3, [pc, #204]	; (8004c04 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x128>)
 8004b36:	f8c9 3000 	str.w	r3, [r9]
	  {
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
				     __x);
	    ++this->_M_impl._M_finish;
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	338c      	adds	r3, #140	; 0x8c
 8004b3e:	607b      	str	r3, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8004b40:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004b44:	1a9b      	subs	r3, r3, r2
 8004b46:	109b      	asrs	r3, r3, #2
 8004b48:	4373      	muls	r3, r6
	positionContainersList.push_back(newPosition);

	positionsList.add(positionContainersList[positionContainersList.size() - 1]);
 8004b4a:	3b01      	subs	r3, #1
 8004b4c:	f505 7402 	add.w	r4, r5, #520	; 0x208
 8004b50:	218c      	movs	r1, #140	; 0x8c
 8004b52:	fb01 2103 	mla	r1, r1, r3, r2
 8004b56:	4620      	mov	r0, r4
 8004b58:	f006 fa3e 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b5c:	f505 700d 	add.w	r0, r5, #564	; 0x234
 8004b60:	f005 fcd4 	bl	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
	positionsList.initialize();
	positionsList.invalidate();
 8004b64:	4620      	mov	r0, r4
 8004b66:	f00a f81e 	bl	800eba6 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004b6a:	b030      	add	sp, #192	; 0xc0
 8004b6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004b70:	683b      	ldr	r3, [r7, #0]
 8004b72:	eba9 0a03 	sub.w	sl, r9, r3
 8004b76:	ea4f 04aa 	mov.w	r4, sl, asr #2
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
	return __b;
 8004b7a:	4374      	muls	r4, r6
 8004b7c:	bf14      	ite	ne
 8004b7e:	4623      	movne	r3, r4
 8004b80:	2301      	moveq	r3, #1
 8004b82:	18e4      	adds	r4, r4, r3
 8004b84:	4b20      	ldr	r3, [pc, #128]	; (8004c08 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x12c>)
      {
	if (max_size() - size() < __n)
	  __throw_length_error(__N(__s));

	const size_type __len = size() + std::max(size(), __n);
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8004b86:	d227      	bcs.n	8004bd8 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0xfc>
 8004b88:	429c      	cmp	r4, r3
 8004b8a:	d825      	bhi.n	8004bd8 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0xfc>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8004b8c:	bb2c      	cbnz	r4, 8004bda <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0xfe>
 8004b8e:	46a0      	mov	r8, r4
 8004b90:	eb18 000a 	adds.w	r0, r8, sl
 8004b94:	d005      	beq.n	8004ba2 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0xc6>
 8004b96:	a90d      	add	r1, sp, #52	; 0x34
 8004b98:	f7ff feec 	bl	8004974 <_ZN21positionContainerBaseC1ERKS_>
 8004b9c:	4b19      	ldr	r3, [pc, #100]	; (8004c04 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x128>)
 8004b9e:	f848 300a 	str.w	r3, [r8, sl]
#else
				   __x);
#endif
	  __new_finish = pointer();

	  __new_finish
 8004ba2:	4649      	mov	r1, r9
 8004ba4:	4642      	mov	r2, r8
 8004ba6:	6838      	ldr	r0, [r7, #0]
 8004ba8:	f7ff ff66 	bl	8004a78 <_ZSt34__uninitialized_move_if_noexcept_aIP17positionContainerS1_SaIS0_EET0_T_S4_S3_RT1_.isra.17>
	    (this->_M_impl._M_start, __position.base(),
	     __new_start, _M_get_Tp_allocator());

	  ++__new_finish;

	  __new_finish
 8004bac:	6879      	ldr	r1, [r7, #4]
 8004bae:	f100 028c 	add.w	r2, r0, #140	; 0x8c
 8004bb2:	4648      	mov	r0, r9
 8004bb4:	f7ff ff60 	bl	8004a78 <_ZSt34__uninitialized_move_if_noexcept_aIP17positionContainerS1_SaIS0_EET0_T_S4_S3_RT1_.isra.17>
 8004bb8:	4681      	mov	r9, r0
      // A deleted destructor is trivial, this ensures we reject such types:
      static_assert(is_destructible<_Value_type>::value,
		    "value type is destructible");
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
 8004bba:	e9d7 0100 	ldrd	r0, r1, [r7]
 8004bbe:	f7ff ff81 	bl	8004ac4 <_ZNSt12_Destroy_auxILb0EE9__destroyIP17positionContainerEEvT_S4_>
	  _M_deallocate(__new_start, __len);
	  __throw_exception_again;
	}
      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		    _M_get_Tp_allocator());
      _M_deallocate(this->_M_impl._M_start,
 8004bc2:	6838      	ldr	r0, [r7, #0]
	if (__p)
 8004bc4:	b108      	cbz	r0, 8004bca <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0xee>
	::operator delete(__p);
 8004bc6:	f017 fbbf 	bl	801c348 <_ZdlPv>
		    this->_M_impl._M_end_of_storage
		    - this->_M_impl._M_start);
      this->_M_impl._M_start = __new_start;
      this->_M_impl._M_finish = __new_finish;
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8004bca:	238c      	movs	r3, #140	; 0x8c
 8004bcc:	fb03 8404 	mla	r4, r3, r4, r8
      this->_M_impl._M_finish = __new_finish;
 8004bd0:	e9c7 8900 	strd	r8, r9, [r7]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8004bd4:	60bc      	str	r4, [r7, #8]
 8004bd6:	e7b3      	b.n	8004b40 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0x64>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8004bd8:	461c      	mov	r4, r3
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8004bda:	208c      	movs	r0, #140	; 0x8c
 8004bdc:	4360      	muls	r0, r4
 8004bde:	f017 fb8b 	bl	801c2f8 <_Znwj>
 8004be2:	4680      	mov	r8, r0
 8004be4:	e7d4      	b.n	8004b90 <_ZN18sequenceScreenView28AddNewPositionButton_ClickedEv+0xb4>
 8004be6:	bf00      	nop
 8004be8:	20000014 	.word	0x20000014
 8004bec:	20001790 	.word	0x20001790
 8004bf0:	8af8af8b 	.word	0x8af8af8b
 8004bf4:	20000020 	.word	0x20000020
 8004bf8:	0801eab0 	.word	0x0801eab0
 8004bfc:	2000001c 	.word	0x2000001c
 8004c00:	20000018 	.word	0x20000018
 8004c04:	0801e998 	.word	0x0801e998
 8004c08:	01d41d41 	.word	0x01d41d41

08004c0c <_GLOBAL__sub_I__ZN18sequenceScreenViewC2Ev>:
	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
 8004c0c:	4b02      	ldr	r3, [pc, #8]	; (8004c18 <_GLOBAL__sub_I__ZN18sequenceScreenViewC2Ev+0xc>)
 8004c0e:	2200      	movs	r2, #0
 8004c10:	e9c3 2200 	strd	r2, r2, [r3]
 8004c14:	609a      	str	r2, [r3, #8]

void sequenceScreenView::DeletePositionButton_Clicked()
{

}
 8004c16:	4770      	bx	lr
 8004c18:	20001790 	.word	0x20001790

08004c1c <_GLOBAL__sub_D__ZN18sequenceScreenViewC2Ev>:
 8004c1c:	b510      	push	{r4, lr}
      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004c1e:	4c06      	ldr	r4, [pc, #24]	; (8004c38 <_GLOBAL__sub_D__ZN18sequenceScreenViewC2Ev+0x1c>)
 8004c20:	e9d4 0100 	ldrd	r0, r1, [r4]
 8004c24:	f7ff ff4e 	bl	8004ac4 <_ZNSt12_Destroy_auxILb0EE9__destroyIP17positionContainerEEvT_S4_>
      { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 8004c28:	6820      	ldr	r0, [r4, #0]
	if (__p)
 8004c2a:	b118      	cbz	r0, 8004c34 <_GLOBAL__sub_D__ZN18sequenceScreenViewC2Ev+0x18>
 8004c2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	::operator delete(__p);
 8004c30:	f017 bb8a 	b.w	801c348 <_ZdlPv>
 8004c34:	bd10      	pop	{r4, pc}
 8004c36:	bf00      	nop
 8004c38:	20001790 	.word	0x20001790

08004c3c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8004c3c:	20f0      	movs	r0, #240	; 0xf0
 8004c3e:	4770      	bx	lr

08004c40 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8004c40:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8004c44:	4770      	bx	lr

08004c46 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8004c46:	2029      	movs	r0, #41	; 0x29
 8004c48:	f7fd ba4a 	b.w	80020e0 <LCD_IO_WriteReg>

08004c4c <ili9341_DisplayOff>:
 8004c4c:	2028      	movs	r0, #40	; 0x28
 8004c4e:	f7fd ba47 	b.w	80020e0 <LCD_IO_WriteReg>

08004c52 <ili9341_Init>:
{
 8004c52:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004c54:	f7fd fa18 	bl	8002088 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004c58:	20ca      	movs	r0, #202	; 0xca
 8004c5a:	f7fd fa41 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c5e:	20c3      	movs	r0, #195	; 0xc3
 8004c60:	f7fd fa22 	bl	80020a8 <LCD_IO_WriteData>
 8004c64:	2008      	movs	r0, #8
 8004c66:	f7fd fa1f 	bl	80020a8 <LCD_IO_WriteData>
 8004c6a:	2050      	movs	r0, #80	; 0x50
 8004c6c:	f7fd fa1c 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c70:	20cf      	movs	r0, #207	; 0xcf
 8004c72:	f7fd fa35 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c76:	2000      	movs	r0, #0
 8004c78:	f7fd fa16 	bl	80020a8 <LCD_IO_WriteData>
 8004c7c:	20c1      	movs	r0, #193	; 0xc1
 8004c7e:	f7fd fa13 	bl	80020a8 <LCD_IO_WriteData>
 8004c82:	2030      	movs	r0, #48	; 0x30
 8004c84:	f7fd fa10 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004c88:	20ed      	movs	r0, #237	; 0xed
 8004c8a:	f7fd fa29 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004c8e:	2064      	movs	r0, #100	; 0x64
 8004c90:	f7fd fa0a 	bl	80020a8 <LCD_IO_WriteData>
 8004c94:	2003      	movs	r0, #3
 8004c96:	f7fd fa07 	bl	80020a8 <LCD_IO_WriteData>
 8004c9a:	2012      	movs	r0, #18
 8004c9c:	f7fd fa04 	bl	80020a8 <LCD_IO_WriteData>
 8004ca0:	2081      	movs	r0, #129	; 0x81
 8004ca2:	f7fd fa01 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004ca6:	20e8      	movs	r0, #232	; 0xe8
 8004ca8:	f7fd fa1a 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004cac:	2085      	movs	r0, #133	; 0x85
 8004cae:	f7fd f9fb 	bl	80020a8 <LCD_IO_WriteData>
 8004cb2:	2000      	movs	r0, #0
 8004cb4:	f7fd f9f8 	bl	80020a8 <LCD_IO_WriteData>
 8004cb8:	2078      	movs	r0, #120	; 0x78
 8004cba:	f7fd f9f5 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004cbe:	20cb      	movs	r0, #203	; 0xcb
 8004cc0:	f7fd fa0e 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004cc4:	2039      	movs	r0, #57	; 0x39
 8004cc6:	f7fd f9ef 	bl	80020a8 <LCD_IO_WriteData>
 8004cca:	202c      	movs	r0, #44	; 0x2c
 8004ccc:	f7fd f9ec 	bl	80020a8 <LCD_IO_WriteData>
 8004cd0:	2000      	movs	r0, #0
 8004cd2:	f7fd f9e9 	bl	80020a8 <LCD_IO_WriteData>
 8004cd6:	2034      	movs	r0, #52	; 0x34
 8004cd8:	f7fd f9e6 	bl	80020a8 <LCD_IO_WriteData>
 8004cdc:	2002      	movs	r0, #2
 8004cde:	f7fd f9e3 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004ce2:	20f7      	movs	r0, #247	; 0xf7
 8004ce4:	f7fd f9fc 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004ce8:	2020      	movs	r0, #32
 8004cea:	f7fd f9dd 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004cee:	20ea      	movs	r0, #234	; 0xea
 8004cf0:	f7fd f9f6 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004cf4:	2000      	movs	r0, #0
 8004cf6:	f7fd f9d7 	bl	80020a8 <LCD_IO_WriteData>
 8004cfa:	2000      	movs	r0, #0
 8004cfc:	f7fd f9d4 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d00:	20b1      	movs	r0, #177	; 0xb1
 8004d02:	f7fd f9ed 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d06:	2000      	movs	r0, #0
 8004d08:	f7fd f9ce 	bl	80020a8 <LCD_IO_WriteData>
 8004d0c:	201b      	movs	r0, #27
 8004d0e:	f7fd f9cb 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d12:	20b6      	movs	r0, #182	; 0xb6
 8004d14:	f7fd f9e4 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d18:	200a      	movs	r0, #10
 8004d1a:	f7fd f9c5 	bl	80020a8 <LCD_IO_WriteData>
 8004d1e:	20a2      	movs	r0, #162	; 0xa2
 8004d20:	f7fd f9c2 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d24:	20c0      	movs	r0, #192	; 0xc0
 8004d26:	f7fd f9db 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d2a:	2010      	movs	r0, #16
 8004d2c:	f7fd f9bc 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d30:	20c1      	movs	r0, #193	; 0xc1
 8004d32:	f7fd f9d5 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d36:	2010      	movs	r0, #16
 8004d38:	f7fd f9b6 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d3c:	20c5      	movs	r0, #197	; 0xc5
 8004d3e:	f7fd f9cf 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d42:	2045      	movs	r0, #69	; 0x45
 8004d44:	f7fd f9b0 	bl	80020a8 <LCD_IO_WriteData>
 8004d48:	2015      	movs	r0, #21
 8004d4a:	f7fd f9ad 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d4e:	20c7      	movs	r0, #199	; 0xc7
 8004d50:	f7fd f9c6 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d54:	2090      	movs	r0, #144	; 0x90
 8004d56:	f7fd f9a7 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d5a:	2036      	movs	r0, #54	; 0x36
 8004d5c:	f7fd f9c0 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d60:	20c8      	movs	r0, #200	; 0xc8
 8004d62:	f7fd f9a1 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d66:	20f2      	movs	r0, #242	; 0xf2
 8004d68:	f7fd f9ba 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d6c:	2000      	movs	r0, #0
 8004d6e:	f7fd f99b 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d72:	20b0      	movs	r0, #176	; 0xb0
 8004d74:	f7fd f9b4 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d78:	20c2      	movs	r0, #194	; 0xc2
 8004d7a:	f7fd f995 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d7e:	20b6      	movs	r0, #182	; 0xb6
 8004d80:	f7fd f9ae 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004d84:	200a      	movs	r0, #10
 8004d86:	f7fd f98f 	bl	80020a8 <LCD_IO_WriteData>
 8004d8a:	20a7      	movs	r0, #167	; 0xa7
 8004d8c:	f7fd f98c 	bl	80020a8 <LCD_IO_WriteData>
 8004d90:	2027      	movs	r0, #39	; 0x27
 8004d92:	f7fd f989 	bl	80020a8 <LCD_IO_WriteData>
 8004d96:	2004      	movs	r0, #4
 8004d98:	f7fd f986 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004d9c:	202a      	movs	r0, #42	; 0x2a
 8004d9e:	f7fd f99f 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004da2:	2000      	movs	r0, #0
 8004da4:	f7fd f980 	bl	80020a8 <LCD_IO_WriteData>
 8004da8:	2000      	movs	r0, #0
 8004daa:	f7fd f97d 	bl	80020a8 <LCD_IO_WriteData>
 8004dae:	2000      	movs	r0, #0
 8004db0:	f7fd f97a 	bl	80020a8 <LCD_IO_WriteData>
 8004db4:	20ef      	movs	r0, #239	; 0xef
 8004db6:	f7fd f977 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004dba:	202b      	movs	r0, #43	; 0x2b
 8004dbc:	f7fd f990 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004dc0:	2000      	movs	r0, #0
 8004dc2:	f7fd f971 	bl	80020a8 <LCD_IO_WriteData>
 8004dc6:	2000      	movs	r0, #0
 8004dc8:	f7fd f96e 	bl	80020a8 <LCD_IO_WriteData>
 8004dcc:	2001      	movs	r0, #1
 8004dce:	f7fd f96b 	bl	80020a8 <LCD_IO_WriteData>
 8004dd2:	203f      	movs	r0, #63	; 0x3f
 8004dd4:	f7fd f968 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004dd8:	20f6      	movs	r0, #246	; 0xf6
 8004dda:	f7fd f981 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004dde:	2001      	movs	r0, #1
 8004de0:	f7fd f962 	bl	80020a8 <LCD_IO_WriteData>
 8004de4:	2000      	movs	r0, #0
 8004de6:	f7fd f95f 	bl	80020a8 <LCD_IO_WriteData>
 8004dea:	2006      	movs	r0, #6
 8004dec:	f7fd f95c 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004df0:	202c      	movs	r0, #44	; 0x2c
 8004df2:	f7fd f975 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004df6:	20c8      	movs	r0, #200	; 0xc8
 8004df8:	f7fd f9c0 	bl	800217c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004dfc:	2026      	movs	r0, #38	; 0x26
 8004dfe:	f7fd f96f 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004e02:	2001      	movs	r0, #1
 8004e04:	f7fd f950 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004e08:	20e0      	movs	r0, #224	; 0xe0
 8004e0a:	f7fd f969 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004e0e:	200f      	movs	r0, #15
 8004e10:	f7fd f94a 	bl	80020a8 <LCD_IO_WriteData>
 8004e14:	2029      	movs	r0, #41	; 0x29
 8004e16:	f7fd f947 	bl	80020a8 <LCD_IO_WriteData>
 8004e1a:	2024      	movs	r0, #36	; 0x24
 8004e1c:	f7fd f944 	bl	80020a8 <LCD_IO_WriteData>
 8004e20:	200c      	movs	r0, #12
 8004e22:	f7fd f941 	bl	80020a8 <LCD_IO_WriteData>
 8004e26:	200e      	movs	r0, #14
 8004e28:	f7fd f93e 	bl	80020a8 <LCD_IO_WriteData>
 8004e2c:	2009      	movs	r0, #9
 8004e2e:	f7fd f93b 	bl	80020a8 <LCD_IO_WriteData>
 8004e32:	204e      	movs	r0, #78	; 0x4e
 8004e34:	f7fd f938 	bl	80020a8 <LCD_IO_WriteData>
 8004e38:	2078      	movs	r0, #120	; 0x78
 8004e3a:	f7fd f935 	bl	80020a8 <LCD_IO_WriteData>
 8004e3e:	203c      	movs	r0, #60	; 0x3c
 8004e40:	f7fd f932 	bl	80020a8 <LCD_IO_WriteData>
 8004e44:	2009      	movs	r0, #9
 8004e46:	f7fd f92f 	bl	80020a8 <LCD_IO_WriteData>
 8004e4a:	2013      	movs	r0, #19
 8004e4c:	f7fd f92c 	bl	80020a8 <LCD_IO_WriteData>
 8004e50:	2005      	movs	r0, #5
 8004e52:	f7fd f929 	bl	80020a8 <LCD_IO_WriteData>
 8004e56:	2017      	movs	r0, #23
 8004e58:	f7fd f926 	bl	80020a8 <LCD_IO_WriteData>
 8004e5c:	2011      	movs	r0, #17
 8004e5e:	f7fd f923 	bl	80020a8 <LCD_IO_WriteData>
 8004e62:	2000      	movs	r0, #0
 8004e64:	f7fd f920 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004e68:	20e1      	movs	r0, #225	; 0xe1
 8004e6a:	f7fd f939 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004e6e:	2000      	movs	r0, #0
 8004e70:	f7fd f91a 	bl	80020a8 <LCD_IO_WriteData>
 8004e74:	2016      	movs	r0, #22
 8004e76:	f7fd f917 	bl	80020a8 <LCD_IO_WriteData>
 8004e7a:	201b      	movs	r0, #27
 8004e7c:	f7fd f914 	bl	80020a8 <LCD_IO_WriteData>
 8004e80:	2004      	movs	r0, #4
 8004e82:	f7fd f911 	bl	80020a8 <LCD_IO_WriteData>
 8004e86:	2011      	movs	r0, #17
 8004e88:	f7fd f90e 	bl	80020a8 <LCD_IO_WriteData>
 8004e8c:	2007      	movs	r0, #7
 8004e8e:	f7fd f90b 	bl	80020a8 <LCD_IO_WriteData>
 8004e92:	2031      	movs	r0, #49	; 0x31
 8004e94:	f7fd f908 	bl	80020a8 <LCD_IO_WriteData>
 8004e98:	2033      	movs	r0, #51	; 0x33
 8004e9a:	f7fd f905 	bl	80020a8 <LCD_IO_WriteData>
 8004e9e:	2042      	movs	r0, #66	; 0x42
 8004ea0:	f7fd f902 	bl	80020a8 <LCD_IO_WriteData>
 8004ea4:	2005      	movs	r0, #5
 8004ea6:	f7fd f8ff 	bl	80020a8 <LCD_IO_WriteData>
 8004eaa:	200c      	movs	r0, #12
 8004eac:	f7fd f8fc 	bl	80020a8 <LCD_IO_WriteData>
 8004eb0:	200a      	movs	r0, #10
 8004eb2:	f7fd f8f9 	bl	80020a8 <LCD_IO_WriteData>
 8004eb6:	2028      	movs	r0, #40	; 0x28
 8004eb8:	f7fd f8f6 	bl	80020a8 <LCD_IO_WriteData>
 8004ebc:	202f      	movs	r0, #47	; 0x2f
 8004ebe:	f7fd f8f3 	bl	80020a8 <LCD_IO_WriteData>
 8004ec2:	200f      	movs	r0, #15
 8004ec4:	f7fd f8f0 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004ec8:	2011      	movs	r0, #17
 8004eca:	f7fd f909 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004ece:	20c8      	movs	r0, #200	; 0xc8
 8004ed0:	f7fd f954 	bl	800217c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004ed4:	2029      	movs	r0, #41	; 0x29
 8004ed6:	f7fd f903 	bl	80020e0 <LCD_IO_WriteReg>
 8004eda:	202c      	movs	r0, #44	; 0x2c
}
 8004edc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8004ee0:	f7fd b8fe 	b.w	80020e0 <LCD_IO_WriteReg>

08004ee4 <ili9341_ReadID>:
{
 8004ee4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004ee6:	f7fd f8cf 	bl	8002088 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8004eea:	2103      	movs	r1, #3
 8004eec:	20d3      	movs	r0, #211	; 0xd3
 8004eee:	f7fd f913 	bl	8002118 <LCD_IO_ReadData>
}
 8004ef2:	b280      	uxth	r0, r0
 8004ef4:	bd08      	pop	{r3, pc}

08004ef6 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8004ef6:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004ef8:	b2c4      	uxtb	r4, r0
 8004efa:	2202      	movs	r2, #2
 8004efc:	2103      	movs	r1, #3
 8004efe:	4620      	mov	r0, r4
 8004f00:	f7fd f87a 	bl	8001ff8 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8004f04:	200a      	movs	r0, #10
 8004f06:	f7fd f8bd 	bl	8002084 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8004f0a:	4620      	mov	r0, r4
 8004f0c:	2200      	movs	r2, #0
 8004f0e:	2103      	movs	r1, #3
 8004f10:	f7fd f872 	bl	8001ff8 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 8004f14:	2002      	movs	r0, #2
}
 8004f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8004f1a:	f7fd b8b3 	b.w	8002084 <IOE_Delay>

08004f1e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8004f1e:	b538      	push	{r3, r4, r5, lr}
 8004f20:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004f22:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8004f24:	f7fd f866 	bl	8001ff4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004f28:	2100      	movs	r1, #0
 8004f2a:	4620      	mov	r0, r4
 8004f2c:	f7fd f87a 	bl	8002024 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004f30:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004f32:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004f34:	4620      	mov	r0, r4
 8004f36:	f7fd f875 	bl	8002024 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004f3a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8004f3e:	b280      	uxth	r0, r0
 8004f40:	bd38      	pop	{r3, r4, r5, pc}

08004f42 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8004f42:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8004f44:	b2c4      	uxtb	r4, r0
 8004f46:	2140      	movs	r1, #64	; 0x40
 8004f48:	4620      	mov	r0, r4
 8004f4a:	f7fd f86b 	bl	8002024 <IOE_Read>
  
  if(state > 0)
 8004f4e:	0603      	lsls	r3, r0, #24
 8004f50:	d507      	bpl.n	8004f62 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8004f52:	214c      	movs	r1, #76	; 0x4c
 8004f54:	4620      	mov	r0, r4
 8004f56:	f7fd f865 	bl	8002024 <IOE_Read>
    {
      ret = 1;
 8004f5a:	3000      	adds	r0, #0
 8004f5c:	bf18      	it	ne
 8004f5e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8004f60:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004f62:	2201      	movs	r2, #1
 8004f64:	214b      	movs	r1, #75	; 0x4b
 8004f66:	4620      	mov	r0, r4
 8004f68:	f7fd f846 	bl	8001ff8 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004f6c:	4620      	mov	r0, r4
 8004f6e:	2200      	movs	r2, #0
 8004f70:	214b      	movs	r1, #75	; 0x4b
 8004f72:	f7fd f841 	bl	8001ff8 <IOE_Write>
  uint8_t ret = 0;
 8004f76:	2000      	movs	r0, #0
 8004f78:	e7f2      	b.n	8004f60 <stmpe811_TS_DetectTouch+0x1e>

08004f7a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8004f7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004f7c:	2304      	movs	r3, #4
 8004f7e:	b2c4      	uxtb	r4, r0
{
 8004f80:	460e      	mov	r6, r1
 8004f82:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004f84:	21d7      	movs	r1, #215	; 0xd7
 8004f86:	eb0d 0203 	add.w	r2, sp, r3
 8004f8a:	4620      	mov	r0, r4
 8004f8c:	f7fd f864 	bl	8002058 <IOE_ReadMultiple>
 8004f90:	9b01      	ldr	r3, [sp, #4]
 8004f92:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004f94:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004f96:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004f9a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004f9c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004f9e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004fa0:	2201      	movs	r2, #1
 8004fa2:	214b      	movs	r1, #75	; 0x4b
 8004fa4:	f7fd f828 	bl	8001ff8 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004fa8:	2200      	movs	r2, #0
 8004faa:	214b      	movs	r1, #75	; 0x4b
 8004fac:	4620      	mov	r0, r4
 8004fae:	f7fd f823 	bl	8001ff8 <IOE_Write>
}
 8004fb2:	b002      	add	sp, #8
 8004fb4:	bd70      	pop	{r4, r5, r6, pc}
	...

08004fb8 <stmpe811_Init>:
{
 8004fb8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004fba:	4a0a      	ldr	r2, [pc, #40]	; (8004fe4 <stmpe811_Init+0x2c>)
 8004fbc:	7813      	ldrb	r3, [r2, #0]
 8004fbe:	4298      	cmp	r0, r3
{
 8004fc0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8004fc2:	d00d      	beq.n	8004fe0 <stmpe811_Init+0x28>
 8004fc4:	7851      	ldrb	r1, [r2, #1]
 8004fc6:	4288      	cmp	r0, r1
 8004fc8:	d00a      	beq.n	8004fe0 <stmpe811_Init+0x28>
 8004fca:	b10b      	cbz	r3, 8004fd0 <stmpe811_Init+0x18>
 8004fcc:	b941      	cbnz	r1, 8004fe0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8004fce:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8004fd0:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8004fd2:	f7fd f80f 	bl	8001ff4 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8004fd6:	4620      	mov	r0, r4
}
 8004fd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8004fdc:	f7ff bf8b 	b.w	8004ef6 <stmpe811_Reset>
}
 8004fe0:	bd10      	pop	{r4, pc}
 8004fe2:	bf00      	nop
 8004fe4:	2000179c 	.word	0x2000179c

08004fe8 <stmpe811_EnableGlobalIT>:
{
 8004fe8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004fea:	b2c4      	uxtb	r4, r0
 8004fec:	2109      	movs	r1, #9
 8004fee:	4620      	mov	r0, r4
 8004ff0:	f7fd f818 	bl	8002024 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8004ff4:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004ff8:	b2d2      	uxtb	r2, r2
 8004ffa:	4620      	mov	r0, r4
 8004ffc:	2109      	movs	r1, #9
}
 8004ffe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005002:	f7fc bff9 	b.w	8001ff8 <IOE_Write>

08005006 <stmpe811_DisableGlobalIT>:
{
 8005006:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005008:	b2c4      	uxtb	r4, r0
 800500a:	2109      	movs	r1, #9
 800500c:	4620      	mov	r0, r4
 800500e:	f7fd f809 	bl	8002024 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005012:	2109      	movs	r1, #9
 8005014:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005018:	4620      	mov	r0, r4
}
 800501a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800501e:	f7fc bfeb 	b.w	8001ff8 <IOE_Write>

08005022 <stmpe811_EnableITSource>:
{
 8005022:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005024:	b2c5      	uxtb	r5, r0
{
 8005026:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005028:	4628      	mov	r0, r5
 800502a:	210a      	movs	r1, #10
 800502c:	f7fc fffa 	bl	8002024 <IOE_Read>
  tmp |= Source; 
 8005030:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005034:	b2d2      	uxtb	r2, r2
 8005036:	4628      	mov	r0, r5
 8005038:	210a      	movs	r1, #10
}
 800503a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800503e:	f7fc bfdb 	b.w	8001ff8 <IOE_Write>

08005042 <stmpe811_TS_EnableIT>:
{
 8005042:	b510      	push	{r4, lr}
 8005044:	4604      	mov	r4, r0
  IOE_ITConfig();
 8005046:	f7fc ffd6 	bl	8001ff6 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800504a:	4620      	mov	r0, r4
 800504c:	211f      	movs	r1, #31
 800504e:	f7ff ffe8 	bl	8005022 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005052:	4620      	mov	r0, r4
}
 8005054:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005058:	f7ff bfc6 	b.w	8004fe8 <stmpe811_EnableGlobalIT>

0800505c <stmpe811_DisableITSource>:
{
 800505c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800505e:	b2c5      	uxtb	r5, r0
{
 8005060:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005062:	4628      	mov	r0, r5
 8005064:	210a      	movs	r1, #10
 8005066:	f7fc ffdd 	bl	8002024 <IOE_Read>
  tmp &= ~Source; 
 800506a:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800506e:	b2d2      	uxtb	r2, r2
 8005070:	4628      	mov	r0, r5
 8005072:	210a      	movs	r1, #10
}
 8005074:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005078:	f7fc bfbe 	b.w	8001ff8 <IOE_Write>

0800507c <stmpe811_TS_DisableIT>:
{
 800507c:	b510      	push	{r4, lr}
 800507e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005080:	f7ff ffc1 	bl	8005006 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005084:	4620      	mov	r0, r4
 8005086:	211f      	movs	r1, #31
}
 8005088:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800508c:	f7ff bfe6 	b.w	800505c <stmpe811_DisableITSource>

08005090 <stmpe811_ReadGITStatus>:
{
 8005090:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005092:	b2c0      	uxtb	r0, r0
{
 8005094:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005096:	210b      	movs	r1, #11
 8005098:	f7fc ffc4 	bl	8002024 <IOE_Read>
}
 800509c:	4020      	ands	r0, r4
 800509e:	bd10      	pop	{r4, pc}

080050a0 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80050a0:	211f      	movs	r1, #31
 80050a2:	f7ff bff5 	b.w	8005090 <stmpe811_ReadGITStatus>

080050a6 <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80050a6:	460a      	mov	r2, r1
 80050a8:	b2c0      	uxtb	r0, r0
 80050aa:	210b      	movs	r1, #11
 80050ac:	f7fc bfa4 	b.w	8001ff8 <IOE_Write>

080050b0 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 80050b0:	211f      	movs	r1, #31
 80050b2:	f7ff bff8 	b.w	80050a6 <stmpe811_ClearGlobalIT>

080050b6 <stmpe811_IO_EnableAF>:
{
 80050b6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80050b8:	b2c5      	uxtb	r5, r0
{
 80050ba:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80050bc:	4628      	mov	r0, r5
 80050be:	2117      	movs	r1, #23
 80050c0:	f7fc ffb0 	bl	8002024 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 80050c4:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80050c8:	b2d2      	uxtb	r2, r2
 80050ca:	4628      	mov	r0, r5
 80050cc:	2117      	movs	r1, #23
}
 80050ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80050d2:	f7fc bf91 	b.w	8001ff8 <IOE_Write>

080050d6 <stmpe811_TS_Start>:
{
 80050d6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80050d8:	b2c4      	uxtb	r4, r0
{
 80050da:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80050dc:	2104      	movs	r1, #4
 80050de:	4620      	mov	r0, r4
 80050e0:	f7fc ffa0 	bl	8002024 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80050e4:	2104      	movs	r1, #4
 80050e6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80050ea:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80050ec:	4620      	mov	r0, r4
 80050ee:	f7fc ff83 	bl	8001ff8 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80050f2:	4630      	mov	r0, r6
 80050f4:	21f0      	movs	r1, #240	; 0xf0
 80050f6:	f7ff ffde 	bl	80050b6 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80050fa:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80050fe:	4620      	mov	r0, r4
 8005100:	2104      	movs	r1, #4
 8005102:	f7fc ff79 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005106:	2249      	movs	r2, #73	; 0x49
 8005108:	2120      	movs	r1, #32
 800510a:	4620      	mov	r0, r4
 800510c:	f7fc ff74 	bl	8001ff8 <IOE_Write>
  IOE_Delay(2); 
 8005110:	2002      	movs	r0, #2
 8005112:	f7fc ffb7 	bl	8002084 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005116:	4620      	mov	r0, r4
 8005118:	2201      	movs	r2, #1
 800511a:	2121      	movs	r1, #33	; 0x21
 800511c:	f7fc ff6c 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005120:	4620      	mov	r0, r4
 8005122:	229a      	movs	r2, #154	; 0x9a
 8005124:	2141      	movs	r1, #65	; 0x41
 8005126:	f7fc ff67 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800512a:	4620      	mov	r0, r4
 800512c:	2201      	movs	r2, #1
 800512e:	214a      	movs	r1, #74	; 0x4a
 8005130:	f7fc ff62 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005134:	4620      	mov	r0, r4
 8005136:	2201      	movs	r2, #1
 8005138:	214b      	movs	r1, #75	; 0x4b
 800513a:	f7fc ff5d 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800513e:	4620      	mov	r0, r4
 8005140:	2200      	movs	r2, #0
 8005142:	214b      	movs	r1, #75	; 0x4b
 8005144:	f7fc ff58 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005148:	4620      	mov	r0, r4
 800514a:	2201      	movs	r2, #1
 800514c:	2156      	movs	r1, #86	; 0x56
 800514e:	f7fc ff53 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005152:	4620      	mov	r0, r4
 8005154:	2201      	movs	r2, #1
 8005156:	2158      	movs	r1, #88	; 0x58
 8005158:	f7fc ff4e 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800515c:	4620      	mov	r0, r4
 800515e:	2201      	movs	r2, #1
 8005160:	2140      	movs	r1, #64	; 0x40
 8005162:	f7fc ff49 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005166:	4620      	mov	r0, r4
 8005168:	22ff      	movs	r2, #255	; 0xff
 800516a:	210b      	movs	r1, #11
 800516c:	f7fc ff44 	bl	8001ff8 <IOE_Write>
  IOE_Delay(2); 
 8005170:	2002      	movs	r0, #2
}
 8005172:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005176:	f7fc bf85 	b.w	8002084 <IOE_Delay>
	...

0800517c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800517c:	4b05      	ldr	r3, [pc, #20]	; (8005194 <SystemInit+0x18>)
 800517e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005182:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005186:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800518a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800518e:	609a      	str	r2, [r3, #8]
#endif
}
 8005190:	4770      	bx	lr
 8005192:	bf00      	nop
 8005194:	e000ed00 	.word	0xe000ed00

08005198 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005198:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800519a:	4b0b      	ldr	r3, [pc, #44]	; (80051c8 <HAL_Init+0x30>)
 800519c:	681a      	ldr	r2, [r3, #0]
 800519e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80051a2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80051a4:	681a      	ldr	r2, [r3, #0]
 80051a6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80051aa:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80051ac:	681a      	ldr	r2, [r3, #0]
 80051ae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80051b2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80051b4:	2003      	movs	r0, #3
 80051b6:	f000 f82f 	bl	8005218 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80051ba:	2000      	movs	r0, #0
 80051bc:	f7fd fb5e 	bl	800287c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80051c0:	f7fc ffea 	bl	8002198 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80051c4:	2000      	movs	r0, #0
 80051c6:	bd08      	pop	{r3, pc}
 80051c8:	40023c00 	.word	0x40023c00

080051cc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80051cc:	4a03      	ldr	r2, [pc, #12]	; (80051dc <HAL_IncTick+0x10>)
 80051ce:	4b04      	ldr	r3, [pc, #16]	; (80051e0 <HAL_IncTick+0x14>)
 80051d0:	6811      	ldr	r1, [r2, #0]
 80051d2:	781b      	ldrb	r3, [r3, #0]
 80051d4:	440b      	add	r3, r1
 80051d6:	6013      	str	r3, [r2, #0]
}
 80051d8:	4770      	bx	lr
 80051da:	bf00      	nop
 80051dc:	20012c6c 	.word	0x20012c6c
 80051e0:	20000088 	.word	0x20000088

080051e4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80051e4:	4b01      	ldr	r3, [pc, #4]	; (80051ec <HAL_GetTick+0x8>)
 80051e6:	6818      	ldr	r0, [r3, #0]
}
 80051e8:	4770      	bx	lr
 80051ea:	bf00      	nop
 80051ec:	20012c6c 	.word	0x20012c6c

080051f0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80051f0:	b538      	push	{r3, r4, r5, lr}
 80051f2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80051f4:	f7ff fff6 	bl	80051e4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80051f8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80051fa:	bf1c      	itt	ne
 80051fc:	4b05      	ldrne	r3, [pc, #20]	; (8005214 <HAL_Delay+0x24>)
 80051fe:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005200:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005202:	bf18      	it	ne
 8005204:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005206:	f7ff ffed 	bl	80051e4 <HAL_GetTick>
 800520a:	1b40      	subs	r0, r0, r5
 800520c:	42a0      	cmp	r0, r4
 800520e:	d3fa      	bcc.n	8005206 <HAL_Delay+0x16>
  {
  }
}
 8005210:	bd38      	pop	{r3, r4, r5, pc}
 8005212:	bf00      	nop
 8005214:	20000088 	.word	0x20000088

08005218 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005218:	4a07      	ldr	r2, [pc, #28]	; (8005238 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800521a:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800521c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005220:	041b      	lsls	r3, r3, #16
 8005222:	0c1b      	lsrs	r3, r3, #16
 8005224:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005228:	0200      	lsls	r0, r0, #8
 800522a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800522e:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8005232:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8005234:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8005236:	4770      	bx	lr
 8005238:	e000ed00 	.word	0xe000ed00

0800523c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800523c:	4b17      	ldr	r3, [pc, #92]	; (800529c <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800523e:	b570      	push	{r4, r5, r6, lr}
 8005240:	68dc      	ldr	r4, [r3, #12]
 8005242:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005246:	f1c4 0507 	rsb	r5, r4, #7
 800524a:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800524c:	f104 0304 	add.w	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005250:	bf28      	it	cs
 8005252:	2504      	movcs	r5, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005254:	f04f 36ff 	mov.w	r6, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005258:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800525a:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800525e:	bf8c      	ite	hi
 8005260:	3c03      	subhi	r4, #3
 8005262:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005264:	ea21 0303 	bic.w	r3, r1, r3
 8005268:	40a3      	lsls	r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800526a:	fa06 f404 	lsl.w	r4, r6, r4
 800526e:	ea22 0404 	bic.w	r4, r2, r4
  if ((int32_t)(IRQn) >= 0)
 8005272:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005274:	ea43 0304 	orr.w	r3, r3, r4
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005278:	bfa8      	it	ge
 800527a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 800527e:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005282:	bfbc      	itt	lt
 8005284:	f000 000f 	andlt.w	r0, r0, #15
 8005288:	4a05      	ldrlt	r2, [pc, #20]	; (80052a0 <HAL_NVIC_SetPriority+0x64>)
 800528a:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800528c:	bfaa      	itet	ge
 800528e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005292:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005294:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005298:	bd70      	pop	{r4, r5, r6, pc}
 800529a:	bf00      	nop
 800529c:	e000ed00 	.word	0xe000ed00
 80052a0:	e000ed14 	.word	0xe000ed14

080052a4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80052a4:	2800      	cmp	r0, #0
 80052a6:	db08      	blt.n	80052ba <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80052a8:	0942      	lsrs	r2, r0, #5
 80052aa:	2301      	movs	r3, #1
 80052ac:	f000 001f 	and.w	r0, r0, #31
 80052b0:	fa03 f000 	lsl.w	r0, r3, r0
 80052b4:	4b01      	ldr	r3, [pc, #4]	; (80052bc <HAL_NVIC_EnableIRQ+0x18>)
 80052b6:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80052ba:	4770      	bx	lr
 80052bc:	e000e100 	.word	0xe000e100

080052c0 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80052c0:	2800      	cmp	r0, #0
 80052c2:	db0d      	blt.n	80052e0 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80052c4:	0943      	lsrs	r3, r0, #5
 80052c6:	2201      	movs	r2, #1
 80052c8:	f000 001f 	and.w	r0, r0, #31
 80052cc:	fa02 f000 	lsl.w	r0, r2, r0
 80052d0:	3320      	adds	r3, #32
 80052d2:	4a04      	ldr	r2, [pc, #16]	; (80052e4 <HAL_NVIC_DisableIRQ+0x24>)
 80052d4:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80052d8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80052dc:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 80052e0:	4770      	bx	lr
 80052e2:	bf00      	nop
 80052e4:	e000e100 	.word	0xe000e100

080052e8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80052e8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80052ea:	4604      	mov	r4, r0
 80052ec:	b150      	cbz	r0, 8005304 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80052ee:	7943      	ldrb	r3, [r0, #5]
 80052f0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80052f4:	b913      	cbnz	r3, 80052fc <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80052f6:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80052f8:	f7fc ff6e 	bl	80021d8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80052fc:	2301      	movs	r3, #1
 80052fe:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8005300:	2000      	movs	r0, #0
}
 8005302:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005304:	2001      	movs	r0, #1
 8005306:	e7fc      	b.n	8005302 <HAL_CRC_Init+0x1a>

08005308 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8005308:	6803      	ldr	r3, [r0, #0]
 800530a:	b2da      	uxtb	r2, r3
 800530c:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8005310:	f023 0303 	bic.w	r3, r3, #3
 8005314:	2118      	movs	r1, #24
 8005316:	3a10      	subs	r2, #16
 8005318:	fbb2 f2f1 	udiv	r2, r2, r1
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800531c:	4904      	ldr	r1, [pc, #16]	; (8005330 <DMA_CalcBaseAndBitshift+0x28>)
  
  if (stream_number > 3U)
 800531e:	2a03      	cmp	r2, #3
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8005320:	bf88      	it	hi
 8005322:	3304      	addhi	r3, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8005324:	5c89      	ldrb	r1, [r1, r2]
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8005326:	6583      	str	r3, [r0, #88]	; 0x58
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8005328:	65c1      	str	r1, [r0, #92]	; 0x5c
  }
  
  return hdma->StreamBaseAddress;
}
 800532a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800532c:	4770      	bx	lr
 800532e:	bf00      	nop
 8005330:	0801eb1c 	.word	0x0801eb1c

08005334 <HAL_DMA_Init>:
{
 8005334:	b570      	push	{r4, r5, r6, lr}
 8005336:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005338:	f7ff ff54 	bl	80051e4 <HAL_GetTick>
 800533c:	4605      	mov	r5, r0
  if(hdma == NULL)
 800533e:	2c00      	cmp	r4, #0
 8005340:	d071      	beq.n	8005426 <HAL_DMA_Init+0xf2>
  __HAL_UNLOCK(hdma);
 8005342:	2300      	movs	r3, #0
 8005344:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8005348:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 800534a:	2302      	movs	r3, #2
 800534c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8005350:	6813      	ldr	r3, [r2, #0]
 8005352:	f023 0301 	bic.w	r3, r3, #1
 8005356:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8005358:	6821      	ldr	r1, [r4, #0]
 800535a:	680b      	ldr	r3, [r1, #0]
 800535c:	07d8      	lsls	r0, r3, #31
 800535e:	d43c      	bmi.n	80053da <HAL_DMA_Init+0xa6>
  tmp = hdma->Instance->CR;
 8005360:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8005362:	4d32      	ldr	r5, [pc, #200]	; (800542c <HAL_DMA_Init+0xf8>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8005364:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8005366:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8005368:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800536c:	4313      	orrs	r3, r2
 800536e:	68e2      	ldr	r2, [r4, #12]
 8005370:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8005372:	6922      	ldr	r2, [r4, #16]
 8005374:	4313      	orrs	r3, r2
 8005376:	6962      	ldr	r2, [r4, #20]
 8005378:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800537a:	69e2      	ldr	r2, [r4, #28]
 800537c:	4303      	orrs	r3, r0
 800537e:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8005380:	6a22      	ldr	r2, [r4, #32]
 8005382:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8005384:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005386:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8005388:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800538c:	bf02      	ittt	eq
 800538e:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8005392:	4335      	orreq	r5, r6
 8005394:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8005396:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8005398:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800539a:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800539c:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 80053a0:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80053a4:	d10b      	bne.n	80053be <HAL_DMA_Init+0x8a>
    tmp |= hdma->Init.FIFOThreshold;
 80053a6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80053a8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 80053aa:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80053ac:	b13d      	cbz	r5, 80053be <HAL_DMA_Init+0x8a>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 80053ae:	b9f8      	cbnz	r0, 80053f0 <HAL_DMA_Init+0xbc>
  {
    switch (tmp)
 80053b0:	2a01      	cmp	r2, #1
 80053b2:	d02d      	beq.n	8005410 <HAL_DMA_Init+0xdc>
 80053b4:	d301      	bcc.n	80053ba <HAL_DMA_Init+0x86>
 80053b6:	2a02      	cmp	r2, #2
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80053b8:	d101      	bne.n	80053be <HAL_DMA_Init+0x8a>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80053ba:	01ea      	lsls	r2, r5, #7
 80053bc:	d42b      	bmi.n	8005416 <HAL_DMA_Init+0xe2>
  hdma->Instance->FCR = tmp;
 80053be:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80053c0:	4620      	mov	r0, r4
 80053c2:	f7ff ffa1 	bl	8005308 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80053c6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80053c8:	233f      	movs	r3, #63	; 0x3f
 80053ca:	4093      	lsls	r3, r2
 80053cc:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80053ce:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80053d0:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80053d2:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80053d4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 80053d8:	e009      	b.n	80053ee <HAL_DMA_Init+0xba>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80053da:	f7ff ff03 	bl	80051e4 <HAL_GetTick>
 80053de:	1b40      	subs	r0, r0, r5
 80053e0:	2805      	cmp	r0, #5
 80053e2:	d9b9      	bls.n	8005358 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80053e4:	2320      	movs	r3, #32
 80053e6:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80053e8:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 80053ea:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 80053ee:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80053f0:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 80053f4:	d113      	bne.n	800541e <HAL_DMA_Init+0xea>
    switch (tmp)
 80053f6:	2a03      	cmp	r2, #3
 80053f8:	d8e1      	bhi.n	80053be <HAL_DMA_Init+0x8a>
 80053fa:	a001      	add	r0, pc, #4	; (adr r0, 8005400 <HAL_DMA_Init+0xcc>)
 80053fc:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8005400:	08005417 	.word	0x08005417
 8005404:	080053bb 	.word	0x080053bb
 8005408:	08005417 	.word	0x08005417
 800540c:	08005411 	.word	0x08005411
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8005410:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8005414:	d1d3      	bne.n	80053be <HAL_DMA_Init+0x8a>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8005416:	2340      	movs	r3, #64	; 0x40
 8005418:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800541a:	2001      	movs	r0, #1
 800541c:	e7e5      	b.n	80053ea <HAL_DMA_Init+0xb6>
    switch (tmp)
 800541e:	2a02      	cmp	r2, #2
 8005420:	d9f9      	bls.n	8005416 <HAL_DMA_Init+0xe2>
 8005422:	2a03      	cmp	r2, #3
 8005424:	e7c8      	b.n	80053b8 <HAL_DMA_Init+0x84>
    return HAL_ERROR;
 8005426:	2001      	movs	r0, #1
 8005428:	e7e1      	b.n	80053ee <HAL_DMA_Init+0xba>
 800542a:	bf00      	nop
 800542c:	f010803f 	.word	0xf010803f

08005430 <HAL_DMA_Start_IT>:
{
 8005430:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 8005432:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8005436:	2c01      	cmp	r4, #1
 8005438:	d032      	beq.n	80054a0 <HAL_DMA_Start_IT+0x70>
 800543a:	2401      	movs	r4, #1
 800543c:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 8005440:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8005444:	6d86      	ldr	r6, [r0, #88]	; 0x58
  if(HAL_DMA_STATE_READY == hdma->State)
 8005446:	2c01      	cmp	r4, #1
 8005448:	f04f 0500 	mov.w	r5, #0
 800544c:	f04f 0402 	mov.w	r4, #2
 8005450:	d124      	bne.n	800549c <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 8005452:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8005456:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8005458:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800545a:	6825      	ldr	r5, [r4, #0]
 800545c:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 8005460:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 8005462:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8005464:	6883      	ldr	r3, [r0, #8]
 8005466:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 8005468:	bf0e      	itee	eq
 800546a:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 800546c:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 800546e:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005470:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 8005472:	bf08      	it	eq
 8005474:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005476:	233f      	movs	r3, #63	; 0x3f
 8005478:	4093      	lsls	r3, r2
 800547a:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 800547c:	6823      	ldr	r3, [r4, #0]
 800547e:	f043 0316 	orr.w	r3, r3, #22
 8005482:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 8005484:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8005486:	b11b      	cbz	r3, 8005490 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 8005488:	6823      	ldr	r3, [r4, #0]
 800548a:	f043 0308 	orr.w	r3, r3, #8
 800548e:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 8005490:	6823      	ldr	r3, [r4, #0]
 8005492:	f043 0301 	orr.w	r3, r3, #1
 8005496:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8005498:	2000      	movs	r0, #0
}
 800549a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 800549c:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 80054a0:	2002      	movs	r0, #2
 80054a2:	e7fa      	b.n	800549a <HAL_DMA_Start_IT+0x6a>

080054a4 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 80054a4:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 80054a6:	6804      	ldr	r4, [r0, #0]
 80054a8:	9d04      	ldr	r5, [sp, #16]
 80054aa:	6c66      	ldr	r6, [r4, #68]	; 0x44
 80054ac:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80054b0:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 80054b4:	4333      	orrs	r3, r6
 80054b6:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 80054b8:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 80054ba:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 80054bc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80054c0:	d130      	bne.n	8005524 <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 80054c2:	6886      	ldr	r6, [r0, #8]
 80054c4:	b11e      	cbz	r6, 80054ce <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 80054c6:	2e01      	cmp	r6, #1
 80054c8:	d103      	bne.n	80054d2 <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 80054ca:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 80054ce:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 80054d0:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80054d2:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 80054d4:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 80054d8:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 80054dc:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80054de:	d107      	bne.n	80054f0 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 80054e0:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10U);
 80054e2:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 80054e4:	02c9      	lsls	r1, r1, #11
 80054e6:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 80054ea:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 80054ee:	e7ee      	b.n	80054ce <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80054f0:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 80054f2:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80054f6:	d10a      	bne.n	800550e <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 80054f8:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11U);
 80054fa:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80054fc:	029b      	lsls	r3, r3, #10
 80054fe:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 8005502:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 8005506:	0fd1      	lsrs	r1, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8005508:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 800550c:	e7df      	b.n	80054ce <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 800550e:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 8005510:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8005512:	0209      	lsls	r1, r1, #8
 8005514:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8005518:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 800551c:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 800551e:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 8005522:	e7d4      	b.n	80054ce <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8005524:	60e1      	str	r1, [r4, #12]
}
 8005526:	e7d3      	b.n	80054d0 <DMA2D_SetConfig+0x2c>

08005528 <HAL_DMA2D_Init>:
{
 8005528:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 800552a:	4604      	mov	r4, r0
 800552c:	b330      	cbz	r0, 800557c <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800552e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8005532:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005536:	b91b      	cbnz	r3, 8005540 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8005538:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 800553c:	f7fc fe64 	bl	8002208 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005540:	6822      	ldr	r2, [r4, #0]
 8005542:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005544:	2302      	movs	r3, #2
 8005546:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800554a:	6813      	ldr	r3, [r2, #0]
 800554c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005550:	430b      	orrs	r3, r1
 8005552:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8005554:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005556:	68a1      	ldr	r1, [r4, #8]
 8005558:	f023 0307 	bic.w	r3, r3, #7
 800555c:	430b      	orrs	r3, r1
 800555e:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005560:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005562:	68e1      	ldr	r1, [r4, #12]
 8005564:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8005568:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800556c:	430b      	orrs	r3, r1
 800556e:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005570:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005572:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005574:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005576:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 800557a:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800557c:	2001      	movs	r0, #1
 800557e:	e7fc      	b.n	800557a <HAL_DMA2D_Init+0x52>

08005580 <HAL_DMA2D_Start_IT>:
{
 8005580:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 8005582:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 8005586:	2c01      	cmp	r4, #1
{
 8005588:	4605      	mov	r5, r0
 800558a:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hdma2d);
 800558e:	d013      	beq.n	80055b8 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005590:	f880 4039 	strb.w	r4, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8005594:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8005596:	9c06      	ldr	r4, [sp, #24]
  __HAL_LOCK(hdma2d);
 8005598:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 800559c:	9400      	str	r4, [sp, #0]
 800559e:	f7ff ff81 	bl	80054a4 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80055a2:	682b      	ldr	r3, [r5, #0]
 80055a4:	681a      	ldr	r2, [r3, #0]
 80055a6:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80055aa:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80055ac:	681a      	ldr	r2, [r3, #0]
 80055ae:	4332      	orrs	r2, r6
 80055b0:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80055b2:	2000      	movs	r0, #0
}
 80055b4:	b002      	add	sp, #8
 80055b6:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80055b8:	4620      	mov	r0, r4
 80055ba:	e7fb      	b.n	80055b4 <HAL_DMA2D_Start_IT+0x34>

080055bc <HAL_DMA2D_BlendingStart_IT>:
{
 80055bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80055be:	4615      	mov	r5, r2
 80055c0:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 80055c2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80055c6:	2b01      	cmp	r3, #1
{
 80055c8:	4604      	mov	r4, r0
 80055ca:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 80055ce:	d016      	beq.n	80055fe <HAL_DMA2D_BlendingStart_IT+0x42>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80055d0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80055d4:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(hdma2d);
 80055d6:	2601      	movs	r6, #1
 80055d8:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80055dc:	615d      	str	r5, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 80055de:	9b07      	ldr	r3, [sp, #28]
 80055e0:	9300      	str	r3, [sp, #0]
 80055e2:	9b06      	ldr	r3, [sp, #24]
 80055e4:	f7ff ff5e 	bl	80054a4 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80055e8:	6823      	ldr	r3, [r4, #0]
 80055ea:	681a      	ldr	r2, [r3, #0]
 80055ec:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80055f0:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80055f2:	681a      	ldr	r2, [r3, #0]
 80055f4:	4332      	orrs	r2, r6
 80055f6:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80055f8:	2000      	movs	r0, #0
}
 80055fa:	b002      	add	sp, #8
 80055fc:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80055fe:	4618      	mov	r0, r3
 8005600:	e7fb      	b.n	80055fa <HAL_DMA2D_BlendingStart_IT+0x3e>

08005602 <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8005602:	6802      	ldr	r2, [r0, #0]
{
 8005604:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8005606:	6813      	ldr	r3, [r2, #0]
 8005608:	f023 0305 	bic.w	r3, r3, #5
 800560c:	f043 0304 	orr.w	r3, r3, #4
 8005610:	6013      	str	r3, [r2, #0]
{
 8005612:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 8005614:	f7ff fde6 	bl	80051e4 <HAL_GetTick>
 8005618:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 800561a:	6823      	ldr	r3, [r4, #0]
 800561c:	6818      	ldr	r0, [r3, #0]
 800561e:	f010 0001 	ands.w	r0, r0, #1
 8005622:	d109      	bne.n	8005638 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8005624:	681a      	ldr	r2, [r3, #0]
 8005626:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 800562a:	601a      	str	r2, [r3, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800562c:	2301      	movs	r3, #1
 800562e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8005632:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8005636:	e00f      	b.n	8005658 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8005638:	f7ff fdd4 	bl	80051e4 <HAL_GetTick>
 800563c:	1b40      	subs	r0, r0, r5
 800563e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005642:	d9ea      	bls.n	800561a <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8005644:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005646:	f043 0320 	orr.w	r3, r3, #32
 800564a:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 800564c:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 800564e:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8005650:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8005654:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8005658:	bd38      	pop	{r3, r4, r5, pc}

0800565a <HAL_DMA2D_CLUTLoading_Abort>:
{
 800565a:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 800565c:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 800565e:	682a      	ldr	r2, [r5, #0]
 8005660:	f042 0204 	orr.w	r2, r2, #4
 8005664:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8005666:	2901      	cmp	r1, #1
{
 8005668:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 800566a:	bf14      	ite	ne
 800566c:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 800566e:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 8005670:	f7ff fdb8 	bl	80051e4 <HAL_GetTick>
 8005674:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8005676:	6828      	ldr	r0, [r5, #0]
 8005678:	f010 0020 	ands.w	r0, r0, #32
 800567c:	d10a      	bne.n	8005694 <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 800567e:	6822      	ldr	r2, [r4, #0]
 8005680:	6813      	ldr	r3, [r2, #0]
 8005682:	f423 5364 	bic.w	r3, r3, #14592	; 0x3900
 8005686:	6013      	str	r3, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005688:	2301      	movs	r3, #1
 800568a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800568e:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8005692:	e00f      	b.n	80056b4 <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8005694:	f7ff fda6 	bl	80051e4 <HAL_GetTick>
 8005698:	1b80      	subs	r0, r0, r6
 800569a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800569e:	d9ea      	bls.n	8005676 <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80056a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80056a2:	f043 0320 	orr.w	r3, r3, #32
 80056a6:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80056a8:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 80056aa:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80056ac:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80056b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 80056b4:	bd70      	pop	{r4, r5, r6, pc}
	...

080056b8 <HAL_DMA2D_DeInit>:
{
 80056b8:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 80056ba:	4605      	mov	r5, r0
 80056bc:	b908      	cbnz	r0, 80056c2 <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 80056be:	2001      	movs	r0, #1
}
 80056c0:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 80056c2:	4b16      	ldr	r3, [pc, #88]	; (800571c <HAL_DMA2D_DeInit+0x64>)
 80056c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80056c6:	0219      	lsls	r1, r3, #8
 80056c8:	d413      	bmi.n	80056f2 <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 80056ca:	682b      	ldr	r3, [r5, #0]
 80056cc:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 80056ce:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 80056d0:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 80056d2:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 80056d4:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 80056d6:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 80056d8:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 80056da:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 80056dc:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 80056de:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 80056e0:	f7fc fdb4 	bl	800224c <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80056e4:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 80056e6:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 80056ea:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 80056ee:	4620      	mov	r0, r4
 80056f0:	e7e6      	b.n	80056c0 <HAL_DMA2D_DeInit+0x8>
 80056f2:	6803      	ldr	r3, [r0, #0]
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 80056f4:	6819      	ldr	r1, [r3, #0]
 80056f6:	f011 0101 	ands.w	r1, r1, #1
 80056fa:	d004      	beq.n	8005706 <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 80056fc:	f7ff ff81 	bl	8005602 <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8005700:	2800      	cmp	r0, #0
 8005702:	d0e2      	beq.n	80056ca <HAL_DMA2D_DeInit+0x12>
 8005704:	e7db      	b.n	80056be <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8005706:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005708:	0692      	lsls	r2, r2, #26
 800570a:	d502      	bpl.n	8005712 <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 800570c:	f7ff ffa5 	bl	800565a <HAL_DMA2D_CLUTLoading_Abort>
 8005710:	e7f6      	b.n	8005700 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8005712:	69db      	ldr	r3, [r3, #28]
 8005714:	069b      	lsls	r3, r3, #26
 8005716:	d5d8      	bpl.n	80056ca <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8005718:	2101      	movs	r1, #1
 800571a:	e7f7      	b.n	800570c <HAL_DMA2D_DeInit+0x54>
 800571c:	40023800 	.word	0x40023800

08005720 <HAL_DMA2D_LineEventCallback>:
 8005720:	4770      	bx	lr

08005722 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8005722:	4770      	bx	lr

08005724 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005724:	6803      	ldr	r3, [r0, #0]
{
 8005726:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005728:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800572a:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800572c:	07f2      	lsls	r2, r6, #31
{
 800572e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005730:	d514      	bpl.n	800575c <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8005732:	05e9      	lsls	r1, r5, #23
 8005734:	d512      	bpl.n	800575c <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005736:	681a      	ldr	r2, [r3, #0]
 8005738:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800573c:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800573e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8005740:	f042 0201 	orr.w	r2, r2, #1
 8005744:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005746:	2201      	movs	r2, #1
 8005748:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800574a:	2304      	movs	r3, #4
 800574c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8005750:	2300      	movs	r3, #0
 8005752:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8005756:	6943      	ldr	r3, [r0, #20]
 8005758:	b103      	cbz	r3, 800575c <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800575a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800575c:	06b2      	lsls	r2, r6, #26
 800575e:	d516      	bpl.n	800578e <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005760:	04ab      	lsls	r3, r5, #18
 8005762:	d514      	bpl.n	800578e <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8005764:	6823      	ldr	r3, [r4, #0]
 8005766:	681a      	ldr	r2, [r3, #0]
 8005768:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800576c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800576e:	2220      	movs	r2, #32
 8005770:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005772:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005774:	f043 0302 	orr.w	r3, r3, #2
 8005778:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800577a:	2304      	movs	r3, #4
 800577c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8005780:	2300      	movs	r3, #0
 8005782:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8005786:	6963      	ldr	r3, [r4, #20]
 8005788:	b10b      	cbz	r3, 800578e <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800578a:	4620      	mov	r0, r4
 800578c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800578e:	0730      	lsls	r0, r6, #28
 8005790:	d516      	bpl.n	80057c0 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005792:	0529      	lsls	r1, r5, #20
 8005794:	d514      	bpl.n	80057c0 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005796:	6823      	ldr	r3, [r4, #0]
 8005798:	681a      	ldr	r2, [r3, #0]
 800579a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800579e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80057a0:	2208      	movs	r2, #8
 80057a2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80057a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80057a6:	f043 0304 	orr.w	r3, r3, #4
 80057aa:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80057ac:	2304      	movs	r3, #4
 80057ae:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80057b2:	2300      	movs	r3, #0
 80057b4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80057b8:	6963      	ldr	r3, [r4, #20]
 80057ba:	b10b      	cbz	r3, 80057c0 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 80057bc:	4620      	mov	r0, r4
 80057be:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80057c0:	0772      	lsls	r2, r6, #29
 80057c2:	d50b      	bpl.n	80057dc <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 80057c4:	056b      	lsls	r3, r5, #21
 80057c6:	d509      	bpl.n	80057dc <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80057c8:	6823      	ldr	r3, [r4, #0]
 80057ca:	681a      	ldr	r2, [r3, #0]
 80057cc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80057d0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80057d2:	2204      	movs	r2, #4
 80057d4:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80057d6:	4620      	mov	r0, r4
 80057d8:	f7ff ffa2 	bl	8005720 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80057dc:	07b0      	lsls	r0, r6, #30
 80057de:	d514      	bpl.n	800580a <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80057e0:	05a9      	lsls	r1, r5, #22
 80057e2:	d512      	bpl.n	800580a <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80057e4:	6823      	ldr	r3, [r4, #0]
 80057e6:	681a      	ldr	r2, [r3, #0]
 80057e8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80057ec:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80057ee:	2202      	movs	r2, #2
 80057f0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80057f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80057f4:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80057f6:	2301      	movs	r3, #1
 80057f8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80057fc:	2300      	movs	r3, #0
 80057fe:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 8005802:	6923      	ldr	r3, [r4, #16]
 8005804:	b10b      	cbz	r3, 800580a <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8005806:	4620      	mov	r0, r4
 8005808:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800580a:	06f2      	lsls	r2, r6, #27
 800580c:	d513      	bpl.n	8005836 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800580e:	04eb      	lsls	r3, r5, #19
 8005810:	d511      	bpl.n	8005836 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005812:	6823      	ldr	r3, [r4, #0]
 8005814:	681a      	ldr	r2, [r3, #0]
 8005816:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800581a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800581c:	2210      	movs	r2, #16
 800581e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005820:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005822:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005824:	2301      	movs	r3, #1
 8005826:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800582a:	2300      	movs	r3, #0
 800582c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005830:	4620      	mov	r0, r4
 8005832:	f7ff ff76 	bl	8005722 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8005836:	bd70      	pop	{r4, r5, r6, pc}

08005838 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 8005838:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800583c:	2b01      	cmp	r3, #1
{
 800583e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005840:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 8005844:	d036      	beq.n	80058b4 <HAL_DMA2D_ConfigLayer+0x7c>
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005846:	010e      	lsls	r6, r1, #4
  __HAL_LOCK(hdma2d);
 8005848:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800584a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800584e:	1983      	adds	r3, r0, r6
  __HAL_LOCK(hdma2d);
 8005850:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005854:	e9d3 5207 	ldrd	r5, r2, [r3, #28]
 8005858:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800585c:	3d09      	subs	r5, #9
 800585e:	2d01      	cmp	r5, #1
 8005860:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8005862:	4f19      	ldr	r7, [pc, #100]	; (80058c8 <HAL_DMA2D_ConfigLayer+0x90>)
 8005864:	6803      	ldr	r3, [r0, #0]
 8005866:	d80f      	bhi.n	8005888 <HAL_DMA2D_ConfigLayer+0x50>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8005868:	f004 4c7f 	and.w	ip, r4, #4278190080	; 0xff000000
 800586c:	ea4c 0202 	orr.w	r2, ip, r2
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005870:	b969      	cbnz	r1, 800588e <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005872:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8005874:	4039      	ands	r1, r7
 8005876:	430a      	orrs	r2, r1
 8005878:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800587a:	6982      	ldr	r2, [r0, #24]
 800587c:	619a      	str	r2, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800587e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005880:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8005884:	629a      	str	r2, [r3, #40]	; 0x28
 8005886:	e00f      	b.n	80058a8 <HAL_DMA2D_ConfigLayer+0x70>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005888:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800588c:	b1a1      	cbz	r1, 80058b8 <HAL_DMA2D_ConfigLayer+0x80>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800588e:	69d9      	ldr	r1, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005890:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005892:	4039      	ands	r1, r7
 8005894:	430a      	orrs	r2, r1
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005896:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005898:	61da      	str	r2, [r3, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800589a:	bf98      	it	ls
 800589c:	f024 447f 	bicls.w	r4, r4, #4278190080	; 0xff000000
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80058a0:	69b2      	ldr	r2, [r6, #24]
 80058a2:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 80058a4:	bf98      	it	ls
 80058a6:	621c      	strls	r4, [r3, #32]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80058a8:	2301      	movs	r3, #1
 80058aa:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80058ae:	2300      	movs	r3, #0
 80058b0:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80058b4:	4618      	mov	r0, r3
}
 80058b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80058b8:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80058ba:	4039      	ands	r1, r7
 80058bc:	430a      	orrs	r2, r1
 80058be:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80058c0:	6982      	ldr	r2, [r0, #24]
 80058c2:	619a      	str	r2, [r3, #24]
 80058c4:	e7f0      	b.n	80058a8 <HAL_DMA2D_ConfigLayer+0x70>
 80058c6:	bf00      	nop
 80058c8:	00fcfff0 	.word	0x00fcfff0

080058cc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80058cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80058d0:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80058d2:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80058d4:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8005a9c <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80058d8:	4a6e      	ldr	r2, [pc, #440]	; (8005a94 <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80058da:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8005aa0 <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80058de:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80058e0:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 80058e2:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80058e4:	9d01      	ldr	r5, [sp, #4]
    ioposition = 0x01U << position;
 80058e6:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80058e8:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 80058ea:	42ac      	cmp	r4, r5
 80058ec:	f040 80b8 	bne.w	8005a60 <HAL_GPIO_Init+0x194>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80058f0:	684c      	ldr	r4, [r1, #4]
 80058f2:	f024 0c10 	bic.w	ip, r4, #16
 80058f6:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 80058fa:	2603      	movs	r6, #3
 80058fc:	f10c 37ff 	add.w	r7, ip, #4294967295
 8005900:	fa06 f60e 	lsl.w	r6, r6, lr
 8005904:	2f01      	cmp	r7, #1
 8005906:	ea6f 0606 	mvn.w	r6, r6
 800590a:	d811      	bhi.n	8005930 <HAL_GPIO_Init+0x64>
        temp = GPIOx->OSPEEDR; 
 800590c:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800590e:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005912:	68cf      	ldr	r7, [r1, #12]
 8005914:	fa07 f70e 	lsl.w	r7, r7, lr
 8005918:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 800591c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800591e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005920:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8005924:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8005928:	409f      	lsls	r7, r3
 800592a:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 800592e:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8005930:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005932:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005936:	688f      	ldr	r7, [r1, #8]
 8005938:	fa07 f70e 	lsl.w	r7, r7, lr
 800593c:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005940:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8005944:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005946:	d116      	bne.n	8005976 <HAL_GPIO_Init+0xaa>
        temp = GPIOx->AFR[position >> 3U];
 8005948:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800594c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005950:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005954:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005958:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800595c:	f04f 0c0f 	mov.w	ip, #15
 8005960:	fa0c fc0b 	lsl.w	ip, ip, fp
 8005964:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005968:	690f      	ldr	r7, [r1, #16]
 800596a:	fa07 f70b 	lsl.w	r7, r7, fp
 800596e:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8005972:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8005976:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005978:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800597a:	f004 0703 	and.w	r7, r4, #3
 800597e:	fa07 fe0e 	lsl.w	lr, r7, lr
 8005982:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 8005986:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8005988:	00e6      	lsls	r6, r4, #3
 800598a:	d569      	bpl.n	8005a60 <HAL_GPIO_Init+0x194>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800598c:	f04f 0b00 	mov.w	fp, #0
 8005990:	f8cd b00c 	str.w	fp, [sp, #12]
 8005994:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005998:	4e3f      	ldr	r6, [pc, #252]	; (8005a98 <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800599a:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 800599e:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80059a2:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80059a6:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80059aa:	9703      	str	r7, [sp, #12]
 80059ac:	9f03      	ldr	r7, [sp, #12]
 80059ae:	f023 0703 	bic.w	r7, r3, #3
 80059b2:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80059b6:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80059ba:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80059be:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80059c2:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80059c6:	f04f 0c0f 	mov.w	ip, #15
 80059ca:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80059ce:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80059d0:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80059d4:	d04b      	beq.n	8005a6e <HAL_GPIO_Init+0x1a2>
 80059d6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80059da:	42b0      	cmp	r0, r6
 80059dc:	d049      	beq.n	8005a72 <HAL_GPIO_Init+0x1a6>
 80059de:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80059e2:	42b0      	cmp	r0, r6
 80059e4:	d047      	beq.n	8005a76 <HAL_GPIO_Init+0x1aa>
 80059e6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80059ea:	42b0      	cmp	r0, r6
 80059ec:	d045      	beq.n	8005a7a <HAL_GPIO_Init+0x1ae>
 80059ee:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80059f2:	42b0      	cmp	r0, r6
 80059f4:	d043      	beq.n	8005a7e <HAL_GPIO_Init+0x1b2>
 80059f6:	4548      	cmp	r0, r9
 80059f8:	d043      	beq.n	8005a82 <HAL_GPIO_Init+0x1b6>
 80059fa:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 80059fe:	42b0      	cmp	r0, r6
 8005a00:	d041      	beq.n	8005a86 <HAL_GPIO_Init+0x1ba>
 8005a02:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005a06:	42b0      	cmp	r0, r6
 8005a08:	d03f      	beq.n	8005a8a <HAL_GPIO_Init+0x1be>
 8005a0a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005a0e:	42b0      	cmp	r0, r6
 8005a10:	d03d      	beq.n	8005a8e <HAL_GPIO_Init+0x1c2>
 8005a12:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005a16:	42b0      	cmp	r0, r6
 8005a18:	bf14      	ite	ne
 8005a1a:	260a      	movne	r6, #10
 8005a1c:	2609      	moveq	r6, #9
 8005a1e:	fa06 f60e 	lsl.w	r6, r6, lr
 8005a22:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005a26:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR;
 8005a28:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8005a2a:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8005a2c:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8005a30:	bf0c      	ite	eq
 8005a32:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8005a34:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;
 8005a36:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 8005a38:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8005a3a:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8005a3e:	bf0c      	ite	eq
 8005a40:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8005a42:	432e      	orrne	r6, r5
        }
        EXTI->EMR = temp;
 8005a44:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005a46:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8005a48:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8005a4c:	bf0c      	ite	eq
 8005a4e:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8005a50:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;
 8005a52:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 8005a54:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8005a56:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8005a58:	bf54      	ite	pl
 8005a5a:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 8005a5c:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 8005a5e:	60d6      	str	r6, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005a60:	3301      	adds	r3, #1
 8005a62:	2b10      	cmp	r3, #16
 8005a64:	f47f af3d 	bne.w	80058e2 <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 8005a68:	b005      	add	sp, #20
 8005a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005a6e:	465e      	mov	r6, fp
 8005a70:	e7d5      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a72:	2601      	movs	r6, #1
 8005a74:	e7d3      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a76:	2602      	movs	r6, #2
 8005a78:	e7d1      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a7a:	2603      	movs	r6, #3
 8005a7c:	e7cf      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a7e:	2604      	movs	r6, #4
 8005a80:	e7cd      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a82:	2605      	movs	r6, #5
 8005a84:	e7cb      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a86:	2606      	movs	r6, #6
 8005a88:	e7c9      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a8a:	2607      	movs	r6, #7
 8005a8c:	e7c7      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a8e:	2608      	movs	r6, #8
 8005a90:	e7c5      	b.n	8005a1e <HAL_GPIO_Init+0x152>
 8005a92:	bf00      	nop
 8005a94:	40013c00 	.word	0x40013c00
 8005a98:	40020000 	.word	0x40020000
 8005a9c:	40023800 	.word	0x40023800
 8005aa0:	40021400 	.word	0x40021400

08005aa4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005aa4:	b10a      	cbz	r2, 8005aaa <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005aa6:	6181      	str	r1, [r0, #24]
  }
}
 8005aa8:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005aaa:	0409      	lsls	r1, r1, #16
 8005aac:	e7fb      	b.n	8005aa6 <HAL_GPIO_WritePin+0x2>

08005aae <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005aae:	6801      	ldr	r1, [r0, #0]
 8005ab0:	694b      	ldr	r3, [r1, #20]
 8005ab2:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8005ab6:	f04f 0200 	mov.w	r2, #0
 8005aba:	d010      	beq.n	8005ade <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005abc:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005ac0:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005ac2:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8005ac4:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005ac6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005aca:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005ace:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005ad0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005ad4:	f043 0304 	orr.w	r3, r3, #4
 8005ad8:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8005ada:	2001      	movs	r0, #1
 8005adc:	4770      	bx	lr
  }
  return HAL_OK;
 8005ade:	4618      	mov	r0, r3
}
 8005ae0:	4770      	bx	lr

08005ae2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8005ae2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ae6:	4604      	mov	r4, r0
 8005ae8:	4616      	mov	r6, r2
 8005aea:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005aec:	b28f      	uxth	r7, r1
 8005aee:	6825      	ldr	r5, [r4, #0]
 8005af0:	6968      	ldr	r0, [r5, #20]
 8005af2:	ea37 0000 	bics.w	r0, r7, r0
 8005af6:	d017      	beq.n	8005b28 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005af8:	696b      	ldr	r3, [r5, #20]
 8005afa:	055a      	lsls	r2, r3, #21
 8005afc:	d516      	bpl.n	8005b2c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005afe:	682b      	ldr	r3, [r5, #0]
 8005b00:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005b04:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005b06:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005b0a:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005b0c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005b0e:	2300      	movs	r3, #0
 8005b10:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005b12:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005b16:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005b1a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005b1c:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005b20:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005b22:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8005b26:	2001      	movs	r0, #1
}
 8005b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8005b2c:	1c73      	adds	r3, r6, #1
 8005b2e:	d0df      	beq.n	8005af0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005b30:	f7ff fb58 	bl	80051e4 <HAL_GetTick>
 8005b34:	eba0 0008 	sub.w	r0, r0, r8
 8005b38:	42b0      	cmp	r0, r6
 8005b3a:	d801      	bhi.n	8005b40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>
 8005b3c:	2e00      	cmp	r6, #0
 8005b3e:	d1d6      	bne.n	8005aee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005b40:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005b42:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005b44:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005b46:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005b4a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005b4e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005b50:	f042 0220 	orr.w	r2, r2, #32
 8005b54:	e7e4      	b.n	8005b20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x3e>

08005b56 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005b56:	b570      	push	{r4, r5, r6, lr}
 8005b58:	4604      	mov	r4, r0
 8005b5a:	460d      	mov	r5, r1
 8005b5c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005b5e:	6823      	ldr	r3, [r4, #0]
 8005b60:	695b      	ldr	r3, [r3, #20]
 8005b62:	075b      	lsls	r3, r3, #29
 8005b64:	d501      	bpl.n	8005b6a <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005b66:	2000      	movs	r0, #0
}
 8005b68:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005b6a:	4620      	mov	r0, r4
 8005b6c:	f7ff ff9f 	bl	8005aae <I2C_IsAcknowledgeFailed>
 8005b70:	b9a8      	cbnz	r0, 8005b9e <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005b72:	1c6a      	adds	r2, r5, #1
 8005b74:	d0f3      	beq.n	8005b5e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005b76:	f7ff fb35 	bl	80051e4 <HAL_GetTick>
 8005b7a:	1b80      	subs	r0, r0, r6
 8005b7c:	42a8      	cmp	r0, r5
 8005b7e:	d801      	bhi.n	8005b84 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005b80:	2d00      	cmp	r5, #0
 8005b82:	d1ec      	bne.n	8005b5e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005b84:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005b86:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005b88:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005b8a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005b8e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005b92:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005b94:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005b98:	f042 0220 	orr.w	r2, r2, #32
 8005b9c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005b9e:	2001      	movs	r0, #1
 8005ba0:	e7e2      	b.n	8005b68 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08005ba2 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8005ba2:	b570      	push	{r4, r5, r6, lr}
 8005ba4:	4604      	mov	r4, r0
 8005ba6:	460d      	mov	r5, r1
 8005ba8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005baa:	6820      	ldr	r0, [r4, #0]
 8005bac:	6943      	ldr	r3, [r0, #20]
 8005bae:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8005bb2:	d001      	beq.n	8005bb8 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8005bb4:	2000      	movs	r0, #0
 8005bb6:	e010      	b.n	8005bda <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005bb8:	6942      	ldr	r2, [r0, #20]
 8005bba:	06d2      	lsls	r2, r2, #27
 8005bbc:	d50e      	bpl.n	8005bdc <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005bbe:	f06f 0210 	mvn.w	r2, #16
 8005bc2:	6142      	str	r2, [r0, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005bc4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005bc6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005bc8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005bcc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005bd0:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005bd2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005bd4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8005bd8:	2001      	movs	r0, #1
}
 8005bda:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005bdc:	f7ff fb02 	bl	80051e4 <HAL_GetTick>
 8005be0:	1b80      	subs	r0, r0, r6
 8005be2:	42a8      	cmp	r0, r5
 8005be4:	d801      	bhi.n	8005bea <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8005be6:	2d00      	cmp	r5, #0
 8005be8:	d1df      	bne.n	8005baa <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005bea:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005bec:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005bee:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005bf0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005bf4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005bf8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005bfa:	f042 0220 	orr.w	r2, r2, #32
 8005bfe:	e7e8      	b.n	8005bd2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08005c00 <I2C_WaitOnFlagUntilTimeout>:
{
 8005c00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005c04:	9e08      	ldr	r6, [sp, #32]
 8005c06:	4604      	mov	r4, r0
 8005c08:	4690      	mov	r8, r2
 8005c0a:	461f      	mov	r7, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005c0c:	ea4f 4911 	mov.w	r9, r1, lsr #16
 8005c10:	b28d      	uxth	r5, r1
 8005c12:	6821      	ldr	r1, [r4, #0]
 8005c14:	f1b9 0f01 	cmp.w	r9, #1
 8005c18:	bf0c      	ite	eq
 8005c1a:	694b      	ldreq	r3, [r1, #20]
 8005c1c:	698b      	ldrne	r3, [r1, #24]
 8005c1e:	ea35 0303 	bics.w	r3, r5, r3
 8005c22:	bf0c      	ite	eq
 8005c24:	2301      	moveq	r3, #1
 8005c26:	2300      	movne	r3, #0
 8005c28:	4598      	cmp	r8, r3
 8005c2a:	d001      	beq.n	8005c30 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005c2c:	2000      	movs	r0, #0
 8005c2e:	e016      	b.n	8005c5e <I2C_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 8005c30:	1c7b      	adds	r3, r7, #1
 8005c32:	d0ef      	beq.n	8005c14 <I2C_WaitOnFlagUntilTimeout+0x14>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005c34:	f7ff fad6 	bl	80051e4 <HAL_GetTick>
 8005c38:	1b80      	subs	r0, r0, r6
 8005c3a:	42b8      	cmp	r0, r7
 8005c3c:	d801      	bhi.n	8005c42 <I2C_WaitOnFlagUntilTimeout+0x42>
 8005c3e:	2f00      	cmp	r7, #0
 8005c40:	d1e7      	bne.n	8005c12 <I2C_WaitOnFlagUntilTimeout+0x12>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005c42:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005c44:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005c46:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005c48:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005c4c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005c50:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005c52:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005c56:	f042 0220 	orr.w	r2, r2, #32
 8005c5a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005c5c:	2001      	movs	r0, #1
}
 8005c5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08005c62 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005c62:	b570      	push	{r4, r5, r6, lr}
 8005c64:	4604      	mov	r4, r0
 8005c66:	460d      	mov	r5, r1
 8005c68:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005c6a:	6823      	ldr	r3, [r4, #0]
 8005c6c:	695b      	ldr	r3, [r3, #20]
 8005c6e:	061b      	lsls	r3, r3, #24
 8005c70:	d501      	bpl.n	8005c76 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005c72:	2000      	movs	r0, #0
}
 8005c74:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005c76:	4620      	mov	r0, r4
 8005c78:	f7ff ff19 	bl	8005aae <I2C_IsAcknowledgeFailed>
 8005c7c:	b9a8      	cbnz	r0, 8005caa <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005c7e:	1c6a      	adds	r2, r5, #1
 8005c80:	d0f3      	beq.n	8005c6a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005c82:	f7ff faaf 	bl	80051e4 <HAL_GetTick>
 8005c86:	1b80      	subs	r0, r0, r6
 8005c88:	42a8      	cmp	r0, r5
 8005c8a:	d801      	bhi.n	8005c90 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005c8c:	2d00      	cmp	r5, #0
 8005c8e:	d1ec      	bne.n	8005c6a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005c90:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005c92:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005c94:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005c96:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005c9a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005c9e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005ca0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005ca4:	f042 0220 	orr.w	r2, r2, #32
 8005ca8:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005caa:	2001      	movs	r0, #1
 8005cac:	e7e2      	b.n	8005c74 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08005cb0 <I2C_RequestMemoryWrite>:
{
 8005cb0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005cb4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005cb6:	6802      	ldr	r2, [r0, #0]
{
 8005cb8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005cba:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005cbc:	6813      	ldr	r3, [r2, #0]
 8005cbe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005cc2:	6013      	str	r3, [r2, #0]
{
 8005cc4:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005cc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005cc8:	9600      	str	r6, [sp, #0]
 8005cca:	2200      	movs	r2, #0
 8005ccc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005cd0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005cd2:	f7ff ff95 	bl	8005c00 <I2C_WaitOnFlagUntilTimeout>
 8005cd6:	6823      	ldr	r3, [r4, #0]
 8005cd8:	b138      	cbz	r0, 8005cea <I2C_RequestMemoryWrite+0x3a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	05db      	lsls	r3, r3, #23
 8005cde:	d502      	bpl.n	8005ce6 <I2C_RequestMemoryWrite+0x36>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005ce0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005ce4:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005ce6:	2003      	movs	r0, #3
 8005ce8:	e00a      	b.n	8005d00 <I2C_RequestMemoryWrite+0x50>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005cea:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 8005cee:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005cf0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005cf2:	4919      	ldr	r1, [pc, #100]	; (8005d58 <I2C_RequestMemoryWrite+0xa8>)
 8005cf4:	4633      	mov	r3, r6
 8005cf6:	4620      	mov	r0, r4
 8005cf8:	f7ff fef3 	bl	8005ae2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005cfc:	b118      	cbz	r0, 8005d06 <I2C_RequestMemoryWrite+0x56>
      return HAL_ERROR;
 8005cfe:	2001      	movs	r0, #1
}
 8005d00:	b004      	add	sp, #16
 8005d02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d06:	6823      	ldr	r3, [r4, #0]
 8005d08:	9003      	str	r0, [sp, #12]
 8005d0a:	695a      	ldr	r2, [r3, #20]
 8005d0c:	9203      	str	r2, [sp, #12]
 8005d0e:	699b      	ldr	r3, [r3, #24]
 8005d10:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d12:	4632      	mov	r2, r6
 8005d14:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d16:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d18:	4620      	mov	r0, r4
 8005d1a:	f7ff ffa2 	bl	8005c62 <I2C_WaitOnTXEFlagUntilTimeout>
 8005d1e:	b140      	cbz	r0, 8005d32 <I2C_RequestMemoryWrite+0x82>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005d20:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d22:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005d24:	bf01      	itttt	eq
 8005d26:	6822      	ldreq	r2, [r4, #0]
 8005d28:	6813      	ldreq	r3, [r2, #0]
 8005d2a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005d2e:	6013      	streq	r3, [r2, #0]
 8005d30:	e7e5      	b.n	8005cfe <I2C_RequestMemoryWrite+0x4e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005d32:	f1b8 0f01 	cmp.w	r8, #1
 8005d36:	6823      	ldr	r3, [r4, #0]
 8005d38:	d102      	bne.n	8005d40 <I2C_RequestMemoryWrite+0x90>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005d3a:	b2ed      	uxtb	r5, r5
 8005d3c:	611d      	str	r5, [r3, #16]
 8005d3e:	e7df      	b.n	8005d00 <I2C_RequestMemoryWrite+0x50>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005d40:	0a2a      	lsrs	r2, r5, #8
 8005d42:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005d44:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005d46:	4632      	mov	r2, r6
 8005d48:	4620      	mov	r0, r4
 8005d4a:	f7ff ff8a 	bl	8005c62 <I2C_WaitOnTXEFlagUntilTimeout>
 8005d4e:	2800      	cmp	r0, #0
 8005d50:	d1e6      	bne.n	8005d20 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005d52:	6823      	ldr	r3, [r4, #0]
 8005d54:	e7f1      	b.n	8005d3a <I2C_RequestMemoryWrite+0x8a>
 8005d56:	bf00      	nop
 8005d58:	00010002 	.word	0x00010002

08005d5c <I2C_RequestMemoryRead>:
{
 8005d5c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005d60:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005d62:	6803      	ldr	r3, [r0, #0]
{
 8005d64:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005d66:	4616      	mov	r6, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005d68:	681a      	ldr	r2, [r3, #0]
 8005d6a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005d6e:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005d70:	681a      	ldr	r2, [r3, #0]
 8005d72:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005d76:	601a      	str	r2, [r3, #0]
{
 8005d78:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005d7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005d7c:	9500      	str	r5, [sp, #0]
 8005d7e:	2200      	movs	r2, #0
 8005d80:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005d84:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005d86:	f7ff ff3b 	bl	8005c00 <I2C_WaitOnFlagUntilTimeout>
 8005d8a:	6823      	ldr	r3, [r4, #0]
 8005d8c:	b148      	cbz	r0, 8005da2 <I2C_RequestMemoryRead+0x46>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	05db      	lsls	r3, r3, #23
 8005d92:	d502      	bpl.n	8005d9a <I2C_RequestMemoryRead+0x3e>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005d94:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005d98:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005d9a:	2003      	movs	r0, #3
}
 8005d9c:	b004      	add	sp, #16
 8005d9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005da2:	b2ff      	uxtb	r7, r7
 8005da4:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 8005da8:	611a      	str	r2, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005daa:	492a      	ldr	r1, [pc, #168]	; (8005e54 <I2C_RequestMemoryRead+0xf8>)
 8005dac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005dae:	462b      	mov	r3, r5
 8005db0:	4620      	mov	r0, r4
 8005db2:	f7ff fe96 	bl	8005ae2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005db6:	b108      	cbz	r0, 8005dbc <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 8005db8:	2001      	movs	r0, #1
 8005dba:	e7ef      	b.n	8005d9c <I2C_RequestMemoryRead+0x40>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005dbc:	6823      	ldr	r3, [r4, #0]
 8005dbe:	9003      	str	r0, [sp, #12]
 8005dc0:	695a      	ldr	r2, [r3, #20]
 8005dc2:	9203      	str	r2, [sp, #12]
 8005dc4:	699b      	ldr	r3, [r3, #24]
 8005dc6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005dc8:	462a      	mov	r2, r5
 8005dca:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005dcc:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005dce:	4620      	mov	r0, r4
 8005dd0:	f7ff ff47 	bl	8005c62 <I2C_WaitOnTXEFlagUntilTimeout>
 8005dd4:	b140      	cbz	r0, 8005de8 <I2C_RequestMemoryRead+0x8c>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005dd6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005dd8:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005dda:	bf01      	itttt	eq
 8005ddc:	6822      	ldreq	r2, [r4, #0]
 8005dde:	6813      	ldreq	r3, [r2, #0]
 8005de0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005de4:	6013      	streq	r3, [r2, #0]
 8005de6:	e7e7      	b.n	8005db8 <I2C_RequestMemoryRead+0x5c>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005de8:	f1b8 0f01 	cmp.w	r8, #1
 8005dec:	6823      	ldr	r3, [r4, #0]
 8005dee:	d125      	bne.n	8005e3c <I2C_RequestMemoryRead+0xe0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005df0:	b2f6      	uxtb	r6, r6
 8005df2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005df4:	462a      	mov	r2, r5
 8005df6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005df8:	4620      	mov	r0, r4
 8005dfa:	f7ff ff32 	bl	8005c62 <I2C_WaitOnTXEFlagUntilTimeout>
 8005dfe:	4602      	mov	r2, r0
 8005e00:	2800      	cmp	r0, #0
 8005e02:	d1e8      	bne.n	8005dd6 <I2C_RequestMemoryRead+0x7a>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005e04:	6821      	ldr	r1, [r4, #0]
 8005e06:	680b      	ldr	r3, [r1, #0]
 8005e08:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005e0c:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005e0e:	4620      	mov	r0, r4
 8005e10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e12:	9500      	str	r5, [sp, #0]
 8005e14:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005e18:	f7ff fef2 	bl	8005c00 <I2C_WaitOnFlagUntilTimeout>
 8005e1c:	6823      	ldr	r3, [r4, #0]
 8005e1e:	2800      	cmp	r0, #0
 8005e20:	d1b5      	bne.n	8005d8e <I2C_RequestMemoryRead+0x32>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005e22:	f047 0701 	orr.w	r7, r7, #1
 8005e26:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005e28:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005e2a:	490a      	ldr	r1, [pc, #40]	; (8005e54 <I2C_RequestMemoryRead+0xf8>)
 8005e2c:	462b      	mov	r3, r5
 8005e2e:	4620      	mov	r0, r4
 8005e30:	f7ff fe57 	bl	8005ae2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005e34:	3000      	adds	r0, #0
 8005e36:	bf18      	it	ne
 8005e38:	2001      	movne	r0, #1
 8005e3a:	e7af      	b.n	8005d9c <I2C_RequestMemoryRead+0x40>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005e3c:	0a32      	lsrs	r2, r6, #8
 8005e3e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005e40:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005e42:	462a      	mov	r2, r5
 8005e44:	4620      	mov	r0, r4
 8005e46:	f7ff ff0c 	bl	8005c62 <I2C_WaitOnTXEFlagUntilTimeout>
 8005e4a:	2800      	cmp	r0, #0
 8005e4c:	d1c3      	bne.n	8005dd6 <I2C_RequestMemoryRead+0x7a>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005e4e:	6823      	ldr	r3, [r4, #0]
 8005e50:	e7ce      	b.n	8005df0 <I2C_RequestMemoryRead+0x94>
 8005e52:	bf00      	nop
 8005e54:	00010002 	.word	0x00010002

08005e58 <HAL_I2C_Init>:
{
 8005e58:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005e5a:	4604      	mov	r4, r0
 8005e5c:	b908      	cbnz	r0, 8005e62 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005e5e:	2001      	movs	r0, #1
}
 8005e60:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005e62:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005e66:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005e6a:	b91b      	cbnz	r3, 8005e74 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005e6c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005e70:	f7fc f9fe 	bl	8002270 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005e74:	2324      	movs	r3, #36	; 0x24
 8005e76:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005e7a:	6823      	ldr	r3, [r4, #0]
 8005e7c:	681a      	ldr	r2, [r3, #0]
 8005e7e:	f022 0201 	bic.w	r2, r2, #1
 8005e82:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005e84:	681a      	ldr	r2, [r3, #0]
 8005e86:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005e8a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005e8c:	681a      	ldr	r2, [r3, #0]
 8005e8e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005e92:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005e94:	f000 fe6c 	bl	8006b70 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005e98:	6863      	ldr	r3, [r4, #4]
 8005e9a:	4a41      	ldr	r2, [pc, #260]	; (8005fa0 <HAL_I2C_Init+0x148>)
 8005e9c:	4293      	cmp	r3, r2
 8005e9e:	d84d      	bhi.n	8005f3c <HAL_I2C_Init+0xe4>
 8005ea0:	4a40      	ldr	r2, [pc, #256]	; (8005fa4 <HAL_I2C_Init+0x14c>)
 8005ea2:	4290      	cmp	r0, r2
 8005ea4:	d9db      	bls.n	8005e5e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005ea6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8005ea8:	493f      	ldr	r1, [pc, #252]	; (8005fa8 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005eaa:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005eac:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005eb0:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005eb4:	430d      	orrs	r5, r1
 8005eb6:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005eb8:	6a15      	ldr	r5, [r2, #32]
 8005eba:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005ebe:	3101      	adds	r1, #1
 8005ec0:	4329      	orrs	r1, r5
 8005ec2:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005ec4:	69d1      	ldr	r1, [r2, #28]
 8005ec6:	4d36      	ldr	r5, [pc, #216]	; (8005fa0 <HAL_I2C_Init+0x148>)
 8005ec8:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005ecc:	42ab      	cmp	r3, r5
 8005ece:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005ed2:	f100 30ff 	add.w	r0, r0, #4294967295
 8005ed6:	d848      	bhi.n	8005f6a <HAL_I2C_Init+0x112>
 8005ed8:	005b      	lsls	r3, r3, #1
 8005eda:	fbb0 f0f3 	udiv	r0, r0, r3
 8005ede:	1c43      	adds	r3, r0, #1
 8005ee0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ee4:	2b04      	cmp	r3, #4
 8005ee6:	bf38      	it	cc
 8005ee8:	2304      	movcc	r3, #4
 8005eea:	430b      	orrs	r3, r1
 8005eec:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005eee:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005ef2:	6811      	ldr	r1, [r2, #0]
 8005ef4:	4303      	orrs	r3, r0
 8005ef6:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005efa:	430b      	orrs	r3, r1
 8005efc:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005efe:	6891      	ldr	r1, [r2, #8]
 8005f00:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005f04:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8005f08:	4303      	orrs	r3, r0
 8005f0a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005f0e:	430b      	orrs	r3, r1
 8005f10:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005f12:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005f16:	68d1      	ldr	r1, [r2, #12]
 8005f18:	4303      	orrs	r3, r0
 8005f1a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005f1e:	430b      	orrs	r3, r1
 8005f20:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005f22:	6813      	ldr	r3, [r2, #0]
 8005f24:	f043 0301 	orr.w	r3, r3, #1
 8005f28:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005f2a:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8005f2c:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005f2e:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005f30:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005f34:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005f36:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005f3a:	e791      	b.n	8005e60 <HAL_I2C_Init+0x8>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005f3c:	4a1b      	ldr	r2, [pc, #108]	; (8005fac <HAL_I2C_Init+0x154>)
 8005f3e:	4290      	cmp	r0, r2
 8005f40:	d98d      	bls.n	8005e5e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005f42:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8005f44:	4e18      	ldr	r6, [pc, #96]	; (8005fa8 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005f46:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005f48:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005f4c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005f50:	4335      	orrs	r5, r6
 8005f52:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005f54:	6a15      	ldr	r5, [r2, #32]
 8005f56:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8005f5a:	4371      	muls	r1, r6
 8005f5c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005f60:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8005f64:	fbb1 f1f6 	udiv	r1, r1, r6
 8005f68:	e7a9      	b.n	8005ebe <HAL_I2C_Init+0x66>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005f6a:	68a5      	ldr	r5, [r4, #8]
 8005f6c:	b955      	cbnz	r5, 8005f84 <HAL_I2C_Init+0x12c>
 8005f6e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8005f72:	fbb0 f0f3 	udiv	r0, r0, r3
 8005f76:	1c43      	adds	r3, r0, #1
 8005f78:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f7c:	b16b      	cbz	r3, 8005f9a <HAL_I2C_Init+0x142>
 8005f7e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005f82:	e7b2      	b.n	8005eea <HAL_I2C_Init+0x92>
 8005f84:	2519      	movs	r5, #25
 8005f86:	436b      	muls	r3, r5
 8005f88:	fbb0 f0f3 	udiv	r0, r0, r3
 8005f8c:	1c43      	adds	r3, r0, #1
 8005f8e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f92:	b113      	cbz	r3, 8005f9a <HAL_I2C_Init+0x142>
 8005f94:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005f98:	e7a7      	b.n	8005eea <HAL_I2C_Init+0x92>
 8005f9a:	2301      	movs	r3, #1
 8005f9c:	e7a5      	b.n	8005eea <HAL_I2C_Init+0x92>
 8005f9e:	bf00      	nop
 8005fa0:	000186a0 	.word	0x000186a0
 8005fa4:	001e847f 	.word	0x001e847f
 8005fa8:	000f4240 	.word	0x000f4240
 8005fac:	003d08ff 	.word	0x003d08ff

08005fb0 <HAL_I2C_Mem_Write>:
{
 8005fb0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005fb4:	4604      	mov	r4, r0
 8005fb6:	4699      	mov	r9, r3
 8005fb8:	460f      	mov	r7, r1
 8005fba:	4690      	mov	r8, r2
 8005fbc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  uint32_t tickstart = HAL_GetTick();
 8005fbe:	f7ff f911 	bl	80051e4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005fc2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005fc6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005fc8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005fca:	d003      	beq.n	8005fd4 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8005fcc:	2002      	movs	r0, #2
}
 8005fce:	b003      	add	sp, #12
 8005fd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005fd4:	9000      	str	r0, [sp, #0]
 8005fd6:	2319      	movs	r3, #25
 8005fd8:	2201      	movs	r2, #1
 8005fda:	493b      	ldr	r1, [pc, #236]	; (80060c8 <HAL_I2C_Mem_Write+0x118>)
 8005fdc:	4620      	mov	r0, r4
 8005fde:	f7ff fe0f 	bl	8005c00 <I2C_WaitOnFlagUntilTimeout>
 8005fe2:	2800      	cmp	r0, #0
 8005fe4:	d1f2      	bne.n	8005fcc <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8005fe6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005fea:	2b01      	cmp	r3, #1
 8005fec:	d0ee      	beq.n	8005fcc <HAL_I2C_Mem_Write+0x1c>
 8005fee:	2301      	movs	r3, #1
 8005ff0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005ff4:	6823      	ldr	r3, [r4, #0]
 8005ff6:	681a      	ldr	r2, [r3, #0]
 8005ff8:	07d1      	lsls	r1, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8005ffa:	bf5e      	ittt	pl
 8005ffc:	681a      	ldrpl	r2, [r3, #0]
 8005ffe:	f042 0201 	orrpl.w	r2, r2, #1
 8006002:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006004:	681a      	ldr	r2, [r3, #0]
 8006006:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800600a:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800600c:	2321      	movs	r3, #33	; 0x21
 800600e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006012:	2340      	movs	r3, #64	; 0x40
 8006014:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006018:	2300      	movs	r3, #0
 800601a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800601c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800601e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006020:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006024:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006026:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006028:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800602a:	4b28      	ldr	r3, [pc, #160]	; (80060cc <HAL_I2C_Mem_Write+0x11c>)
 800602c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800602e:	e9cd 6500 	strd	r6, r5, [sp]
 8006032:	464b      	mov	r3, r9
 8006034:	4642      	mov	r2, r8
 8006036:	4639      	mov	r1, r7
 8006038:	4620      	mov	r0, r4
 800603a:	f7ff fe39 	bl	8005cb0 <I2C_RequestMemoryWrite>
 800603e:	2800      	cmp	r0, #0
 8006040:	d02a      	beq.n	8006098 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006042:	2001      	movs	r0, #1
 8006044:	e7c3      	b.n	8005fce <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006046:	f7ff fe0c 	bl	8005c62 <I2C_WaitOnTXEFlagUntilTimeout>
 800604a:	b140      	cbz	r0, 800605e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800604c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800604e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006050:	bf01      	itttt	eq
 8006052:	6822      	ldreq	r2, [r4, #0]
 8006054:	6813      	ldreq	r3, [r2, #0]
 8006056:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800605a:	6013      	streq	r3, [r2, #0]
 800605c:	e7f1      	b.n	8006042 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800605e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006060:	6827      	ldr	r7, [r4, #0]
 8006062:	461a      	mov	r2, r3
 8006064:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006068:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800606a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800606c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800606e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006070:	3a01      	subs	r2, #1
 8006072:	b292      	uxth	r2, r2
 8006074:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006076:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006078:	1e48      	subs	r0, r1, #1
 800607a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800607c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800607e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006080:	d50a      	bpl.n	8006098 <HAL_I2C_Mem_Write+0xe8>
 8006082:	b148      	cbz	r0, 8006098 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006084:	785a      	ldrb	r2, [r3, #1]
 8006086:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006088:	3302      	adds	r3, #2
 800608a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800608c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800608e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006090:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006092:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006094:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006096:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006098:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800609a:	462a      	mov	r2, r5
 800609c:	4631      	mov	r1, r6
 800609e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80060a0:	2b00      	cmp	r3, #0
 80060a2:	d1d0      	bne.n	8006046 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80060a4:	f7ff fd57 	bl	8005b56 <I2C_WaitOnBTFFlagUntilTimeout>
 80060a8:	2800      	cmp	r0, #0
 80060aa:	d1cf      	bne.n	800604c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80060ac:	6822      	ldr	r2, [r4, #0]
 80060ae:	6813      	ldr	r3, [r2, #0]
 80060b0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80060b4:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80060b6:	2320      	movs	r3, #32
 80060b8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80060bc:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80060c0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80060c4:	e783      	b.n	8005fce <HAL_I2C_Mem_Write+0x1e>
 80060c6:	bf00      	nop
 80060c8:	00100002 	.word	0x00100002
 80060cc:	ffff0000 	.word	0xffff0000

080060d0 <HAL_I2C_Mem_Read>:
{
 80060d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80060d4:	4604      	mov	r4, r0
 80060d6:	b087      	sub	sp, #28
 80060d8:	4699      	mov	r9, r3
 80060da:	460d      	mov	r5, r1
 80060dc:	4690      	mov	r8, r2
 80060de:	9f10      	ldr	r7, [sp, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 80060e0:	f7ff f880 	bl	80051e4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80060e4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80060e8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80060ea:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80060ec:	d004      	beq.n	80060f8 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80060ee:	2502      	movs	r5, #2
}
 80060f0:	4628      	mov	r0, r5
 80060f2:	b007      	add	sp, #28
 80060f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80060f8:	9000      	str	r0, [sp, #0]
 80060fa:	2319      	movs	r3, #25
 80060fc:	2201      	movs	r2, #1
 80060fe:	4977      	ldr	r1, [pc, #476]	; (80062dc <HAL_I2C_Mem_Read+0x20c>)
 8006100:	4620      	mov	r0, r4
 8006102:	f7ff fd7d 	bl	8005c00 <I2C_WaitOnFlagUntilTimeout>
 8006106:	2800      	cmp	r0, #0
 8006108:	d1f1      	bne.n	80060ee <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800610a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800610e:	2b01      	cmp	r3, #1
 8006110:	d0ed      	beq.n	80060ee <HAL_I2C_Mem_Read+0x1e>
 8006112:	2301      	movs	r3, #1
 8006114:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006118:	6823      	ldr	r3, [r4, #0]
 800611a:	681a      	ldr	r2, [r3, #0]
 800611c:	07d0      	lsls	r0, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 800611e:	bf5e      	ittt	pl
 8006120:	681a      	ldrpl	r2, [r3, #0]
 8006122:	f042 0201 	orrpl.w	r2, r2, #1
 8006126:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006128:	681a      	ldr	r2, [r3, #0]
 800612a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800612e:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006130:	2322      	movs	r3, #34	; 0x22
 8006132:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006136:	2340      	movs	r3, #64	; 0x40
 8006138:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800613c:	2300      	movs	r3, #0
 800613e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006140:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006142:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006144:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006148:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800614a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800614c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800614e:	4b64      	ldr	r3, [pc, #400]	; (80062e0 <HAL_I2C_Mem_Read+0x210>)
 8006150:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006152:	4629      	mov	r1, r5
 8006154:	e9cd 7600 	strd	r7, r6, [sp]
 8006158:	464b      	mov	r3, r9
 800615a:	4642      	mov	r2, r8
 800615c:	4620      	mov	r0, r4
 800615e:	f7ff fdfd 	bl	8005d5c <I2C_RequestMemoryRead>
 8006162:	4605      	mov	r5, r0
 8006164:	b108      	cbz	r0, 800616a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006166:	2501      	movs	r5, #1
 8006168:	e7c2      	b.n	80060f0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800616a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800616c:	6823      	ldr	r3, [r4, #0]
 800616e:	b992      	cbnz	r2, 8006196 <HAL_I2C_Mem_Read+0xc6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006170:	9002      	str	r0, [sp, #8]
 8006172:	695a      	ldr	r2, [r3, #20]
 8006174:	9202      	str	r2, [sp, #8]
 8006176:	699a      	ldr	r2, [r3, #24]
 8006178:	9202      	str	r2, [sp, #8]
 800617a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800617c:	681a      	ldr	r2, [r3, #0]
 800617e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006182:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006184:	2320      	movs	r3, #32
 8006186:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800618a:	2300      	movs	r3, #0
 800618c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 8006190:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 8006194:	e7ac      	b.n	80060f0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006196:	2a01      	cmp	r2, #1
 8006198:	d12c      	bne.n	80061f4 <HAL_I2C_Mem_Read+0x124>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800619a:	681a      	ldr	r2, [r3, #0]
 800619c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80061a0:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80061a2:	9003      	str	r0, [sp, #12]
 80061a4:	695a      	ldr	r2, [r3, #20]
 80061a6:	9203      	str	r2, [sp, #12]
 80061a8:	699a      	ldr	r2, [r3, #24]
 80061aa:	9203      	str	r2, [sp, #12]
 80061ac:	9a03      	ldr	r2, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80061ae:	681a      	ldr	r2, [r3, #0]
 80061b0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80061b4:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80061b6:	f8df 812c 	ldr.w	r8, [pc, #300]	; 80062e4 <HAL_I2C_Mem_Read+0x214>
    while (hi2c->XferSize > 0U)
 80061ba:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80061bc:	2b00      	cmp	r3, #0
 80061be:	d0e1      	beq.n	8006184 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80061c0:	2b03      	cmp	r3, #3
 80061c2:	d86e      	bhi.n	80062a2 <HAL_I2C_Mem_Read+0x1d2>
        if (hi2c->XferSize == 1U)
 80061c4:	2b01      	cmp	r3, #1
 80061c6:	d12d      	bne.n	8006224 <HAL_I2C_Mem_Read+0x154>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80061c8:	4632      	mov	r2, r6
 80061ca:	4639      	mov	r1, r7
 80061cc:	4620      	mov	r0, r4
 80061ce:	f7ff fce8 	bl	8005ba2 <I2C_WaitOnRXNEFlagUntilTimeout>
 80061d2:	2800      	cmp	r0, #0
 80061d4:	d1c7      	bne.n	8006166 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80061d6:	6823      	ldr	r3, [r4, #0]
 80061d8:	691a      	ldr	r2, [r3, #16]
 80061da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80061dc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80061de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80061e0:	3301      	adds	r3, #1
 80061e2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80061e4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80061e6:	3b01      	subs	r3, #1
 80061e8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80061ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80061ec:	3b01      	subs	r3, #1
 80061ee:	b29b      	uxth	r3, r3
 80061f0:	8563      	strh	r3, [r4, #42]	; 0x2a
 80061f2:	e7e2      	b.n	80061ba <HAL_I2C_Mem_Read+0xea>
    else if (hi2c->XferSize == 2U)
 80061f4:	2a02      	cmp	r2, #2
 80061f6:	d10e      	bne.n	8006216 <HAL_I2C_Mem_Read+0x146>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80061f8:	681a      	ldr	r2, [r3, #0]
 80061fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80061fe:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006200:	681a      	ldr	r2, [r3, #0]
 8006202:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006206:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006208:	9004      	str	r0, [sp, #16]
 800620a:	695a      	ldr	r2, [r3, #20]
 800620c:	9204      	str	r2, [sp, #16]
 800620e:	699b      	ldr	r3, [r3, #24]
 8006210:	9304      	str	r3, [sp, #16]
 8006212:	9b04      	ldr	r3, [sp, #16]
 8006214:	e7cf      	b.n	80061b6 <HAL_I2C_Mem_Read+0xe6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006216:	9005      	str	r0, [sp, #20]
 8006218:	695a      	ldr	r2, [r3, #20]
 800621a:	9205      	str	r2, [sp, #20]
 800621c:	699b      	ldr	r3, [r3, #24]
 800621e:	9305      	str	r3, [sp, #20]
 8006220:	9b05      	ldr	r3, [sp, #20]
 8006222:	e7c8      	b.n	80061b6 <HAL_I2C_Mem_Read+0xe6>
        else if (hi2c->XferSize == 2U)
 8006224:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006226:	9600      	str	r6, [sp, #0]
 8006228:	463b      	mov	r3, r7
 800622a:	f04f 0200 	mov.w	r2, #0
 800622e:	4641      	mov	r1, r8
 8006230:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006232:	d119      	bne.n	8006268 <HAL_I2C_Mem_Read+0x198>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006234:	f7ff fce4 	bl	8005c00 <I2C_WaitOnFlagUntilTimeout>
 8006238:	2800      	cmp	r0, #0
 800623a:	d194      	bne.n	8006166 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800623c:	6823      	ldr	r3, [r4, #0]
 800623e:	681a      	ldr	r2, [r3, #0]
 8006240:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006244:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006246:	691a      	ldr	r2, [r3, #16]
 8006248:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800624a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800624c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800624e:	1c53      	adds	r3, r2, #1
 8006250:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006252:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006254:	3b01      	subs	r3, #1
 8006256:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006258:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800625a:	3b01      	subs	r3, #1
 800625c:	b29b      	uxth	r3, r3
 800625e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006260:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006262:	691b      	ldr	r3, [r3, #16]
 8006264:	7053      	strb	r3, [r2, #1]
 8006266:	e7ba      	b.n	80061de <HAL_I2C_Mem_Read+0x10e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006268:	f7ff fcca 	bl	8005c00 <I2C_WaitOnFlagUntilTimeout>
 800626c:	4602      	mov	r2, r0
 800626e:	2800      	cmp	r0, #0
 8006270:	f47f af79 	bne.w	8006166 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006274:	6823      	ldr	r3, [r4, #0]
 8006276:	6819      	ldr	r1, [r3, #0]
 8006278:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800627c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800627e:	6919      	ldr	r1, [r3, #16]
 8006280:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006282:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8006284:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006286:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006288:	3301      	adds	r3, #1
 800628a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800628c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800628e:	3b01      	subs	r3, #1
 8006290:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006292:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006294:	3b01      	subs	r3, #1
 8006296:	b29b      	uxth	r3, r3
 8006298:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800629a:	4641      	mov	r1, r8
 800629c:	463b      	mov	r3, r7
 800629e:	4620      	mov	r0, r4
 80062a0:	e7c8      	b.n	8006234 <HAL_I2C_Mem_Read+0x164>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80062a2:	4632      	mov	r2, r6
 80062a4:	4639      	mov	r1, r7
 80062a6:	4620      	mov	r0, r4
 80062a8:	f7ff fc7b 	bl	8005ba2 <I2C_WaitOnRXNEFlagUntilTimeout>
 80062ac:	2800      	cmp	r0, #0
 80062ae:	f47f af5a 	bne.w	8006166 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80062b2:	6823      	ldr	r3, [r4, #0]
 80062b4:	691a      	ldr	r2, [r3, #16]
 80062b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80062b8:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 80062ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80062bc:	1c53      	adds	r3, r2, #1
 80062be:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 80062c0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80062c2:	3b01      	subs	r3, #1
 80062c4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80062c6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80062c8:	3b01      	subs	r3, #1
 80062ca:	b29b      	uxth	r3, r3
 80062cc:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80062ce:	6823      	ldr	r3, [r4, #0]
 80062d0:	6959      	ldr	r1, [r3, #20]
 80062d2:	0749      	lsls	r1, r1, #29
 80062d4:	f57f af71 	bpl.w	80061ba <HAL_I2C_Mem_Read+0xea>
 80062d8:	e7c3      	b.n	8006262 <HAL_I2C_Mem_Read+0x192>
 80062da:	bf00      	nop
 80062dc:	00100002 	.word	0x00100002
 80062e0:	ffff0000 	.word	0xffff0000
 80062e4:	00010004 	.word	0x00010004

080062e8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80062e8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 80062ec:	b2d2      	uxtb	r2, r2
 80062ee:	2a20      	cmp	r2, #32
{
 80062f0:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80062f2:	d116      	bne.n	8006322 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80062f4:	2324      	movs	r3, #36	; 0x24
 80062f6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80062fa:	6803      	ldr	r3, [r0, #0]
 80062fc:	681c      	ldr	r4, [r3, #0]
 80062fe:	f024 0401 	bic.w	r4, r4, #1
 8006302:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006304:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8006306:	f024 0410 	bic.w	r4, r4, #16
 800630a:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800630c:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 800630e:	4321      	orrs	r1, r4
 8006310:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006312:	6819      	ldr	r1, [r3, #0]
 8006314:	f041 0101 	orr.w	r1, r1, #1
 8006318:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800631a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 800631e:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006320:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006322:	2002      	movs	r0, #2
 8006324:	e7fc      	b.n	8006320 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006326 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006326:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006328:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 800632c:	b2e4      	uxtb	r4, r4
 800632e:	2c20      	cmp	r4, #32
 8006330:	d116      	bne.n	8006360 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006332:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006334:	2324      	movs	r3, #36	; 0x24
 8006336:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800633a:	6815      	ldr	r5, [r2, #0]
 800633c:	f025 0501 	bic.w	r5, r5, #1
 8006340:	6015      	str	r5, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006342:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006344:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006348:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800634a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800634c:	b29b      	uxth	r3, r3
 800634e:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006350:	6813      	ldr	r3, [r2, #0]
 8006352:	f043 0301 	orr.w	r3, r3, #1
 8006356:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006358:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 800635c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800635e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006360:	2002      	movs	r0, #2
 8006362:	e7fc      	b.n	800635e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006364 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8006364:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006368:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800636a:	6804      	ldr	r4, [r0, #0]
 800636c:	684f      	ldr	r7, [r1, #4]
 800636e:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006370:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006374:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006378:	3284      	adds	r2, #132	; 0x84
 800637a:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800637c:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006380:	6858      	ldr	r0, [r3, #4]
 8006382:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8006386:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006388:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800638a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800638e:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8006392:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006394:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006396:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800639a:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800639c:	68e0      	ldr	r0, [r4, #12]
 800639e:	68cd      	ldr	r5, [r1, #12]
 80063a0:	f3c0 000a 	ubfx	r0, r0, #0, #11
 80063a4:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80063a6:	6898      	ldr	r0, [r3, #8]
 80063a8:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 80063ac:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80063ae:	68e6      	ldr	r6, [r4, #12]
 80063b0:	6888      	ldr	r0, [r1, #8]
 80063b2:	f3c6 060a 	ubfx	r6, r6, #0, #11
 80063b6:	3001      	adds	r0, #1
 80063b8:	4430      	add	r0, r6
 80063ba:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80063be:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80063c0:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80063c2:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80063c4:	f020 0007 	bic.w	r0, r0, #7
 80063c8:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80063ca:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80063ce:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80063d0:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80063d2:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80063d6:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80063da:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80063de:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80063e2:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80063e6:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80063ea:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80063ee:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80063f0:	6958      	ldr	r0, [r3, #20]
 80063f2:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 80063f6:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80063f8:	6948      	ldr	r0, [r1, #20]
 80063fa:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80063fc:	69d8      	ldr	r0, [r3, #28]
 80063fe:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8006402:	f020 0007 	bic.w	r0, r0, #7
 8006406:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006408:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 800640c:	4305      	orrs	r5, r0
 800640e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006410:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006412:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006414:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006418:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800641a:	b31e      	cbz	r6, 8006464 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800641c:	2e01      	cmp	r6, #1
 800641e:	d023      	beq.n	8006468 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006420:	1eb0      	subs	r0, r6, #2
 8006422:	2802      	cmp	r0, #2
 8006424:	d922      	bls.n	800646c <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8006426:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006428:	bf0c      	ite	eq
 800642a:	2002      	moveq	r0, #2
 800642c:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800642e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8006430:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 8006434:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006436:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006438:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800643a:	eba7 070c 	sub.w	r7, r7, ip
 800643e:	4345      	muls	r5, r0
 8006440:	4378      	muls	r0, r7
 8006442:	3003      	adds	r0, #3
 8006444:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8006448:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800644a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800644c:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8006450:	f020 0007 	bic.w	r0, r0, #7
 8006454:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006456:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006458:	58a3      	ldr	r3, [r4, r2]
 800645a:	f043 0301 	orr.w	r3, r3, #1
 800645e:	50a3      	str	r3, [r4, r2]
}
 8006460:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006464:	2004      	movs	r0, #4
 8006466:	e7e2      	b.n	800642e <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006468:	2003      	movs	r0, #3
 800646a:	e7e0      	b.n	800642e <LTDC_SetConfig+0xca>
    tmp = 2U;
 800646c:	2002      	movs	r0, #2
 800646e:	e7de      	b.n	800642e <LTDC_SetConfig+0xca>

08006470 <HAL_LTDC_Init>:
{
 8006470:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006472:	4604      	mov	r4, r0
 8006474:	2800      	cmp	r0, #0
 8006476:	d063      	beq.n	8006540 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006478:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800647c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006480:	b91b      	cbnz	r3, 800648a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006482:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006486:	f7fb ff4f 	bl	8002328 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800648a:	2302      	movs	r3, #2
 800648c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006490:	6823      	ldr	r3, [r4, #0]
 8006492:	699a      	ldr	r2, [r3, #24]
 8006494:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006498:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800649a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800649e:	4302      	orrs	r2, r0
 80064a0:	68e0      	ldr	r0, [r4, #12]
 80064a2:	6999      	ldr	r1, [r3, #24]
 80064a4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80064a6:	6920      	ldr	r0, [r4, #16]
 80064a8:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80064aa:	430a      	orrs	r2, r1
 80064ac:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80064ae:	689a      	ldr	r2, [r3, #8]
 80064b0:	4924      	ldr	r1, [pc, #144]	; (8006544 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80064b2:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80064b4:	400a      	ands	r2, r1
 80064b6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80064b8:	689a      	ldr	r2, [r3, #8]
 80064ba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80064be:	69a0      	ldr	r0, [r4, #24]
 80064c0:	4302      	orrs	r2, r0
 80064c2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80064c4:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80064c6:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80064c8:	400a      	ands	r2, r1
 80064ca:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80064cc:	68da      	ldr	r2, [r3, #12]
 80064ce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80064d2:	6a20      	ldr	r0, [r4, #32]
 80064d4:	4302      	orrs	r2, r0
 80064d6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80064d8:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80064da:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80064dc:	400a      	ands	r2, r1
 80064de:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80064e0:	691a      	ldr	r2, [r3, #16]
 80064e2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80064e6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80064e8:	4302      	orrs	r2, r0
 80064ea:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80064ec:	695a      	ldr	r2, [r3, #20]
 80064ee:	4011      	ands	r1, r2
 80064f0:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80064f2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80064f4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80064f6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80064fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80064fc:	430a      	orrs	r2, r1
 80064fe:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006500:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006502:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006506:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800650a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800650e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006510:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006512:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8006516:	430a      	orrs	r2, r1
 8006518:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800651c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006520:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006522:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006524:	f042 0206 	orr.w	r2, r2, #6
 8006528:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800652a:	699a      	ldr	r2, [r3, #24]
 800652c:	f042 0201 	orr.w	r2, r2, #1
 8006530:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006532:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006534:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006536:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800653a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800653e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006540:	2001      	movs	r0, #1
 8006542:	e7fc      	b.n	800653e <HAL_LTDC_Init+0xce>
 8006544:	f000f800 	.word	0xf000f800

08006548 <HAL_LTDC_ErrorCallback>:
 8006548:	4770      	bx	lr

0800654a <HAL_LTDC_ReloadEventCallback>:
 800654a:	4770      	bx	lr

0800654c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800654c:	6803      	ldr	r3, [r0, #0]
{
 800654e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006550:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006552:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006554:	0772      	lsls	r2, r6, #29
{
 8006556:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006558:	d514      	bpl.n	8006584 <HAL_LTDC_IRQHandler+0x38>
 800655a:	0769      	lsls	r1, r5, #29
 800655c:	d512      	bpl.n	8006584 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800655e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006560:	f022 0204 	bic.w	r2, r2, #4
 8006564:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8006566:	2204      	movs	r2, #4
 8006568:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800656a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800656e:	f043 0301 	orr.w	r3, r3, #1
 8006572:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8006576:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006578:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800657c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006580:	f7ff ffe2 	bl	8006548 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006584:	07b2      	lsls	r2, r6, #30
 8006586:	d516      	bpl.n	80065b6 <HAL_LTDC_IRQHandler+0x6a>
 8006588:	07ab      	lsls	r3, r5, #30
 800658a:	d514      	bpl.n	80065b6 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800658c:	6823      	ldr	r3, [r4, #0]
 800658e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006590:	f022 0202 	bic.w	r2, r2, #2
 8006594:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006596:	2202      	movs	r2, #2
 8006598:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800659a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800659e:	4313      	orrs	r3, r2
 80065a0:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80065a4:	2304      	movs	r3, #4
 80065a6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80065aa:	2300      	movs	r3, #0
 80065ac:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80065b0:	4620      	mov	r0, r4
 80065b2:	f7ff ffc9 	bl	8006548 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80065b6:	07f0      	lsls	r0, r6, #31
 80065b8:	d510      	bpl.n	80065dc <HAL_LTDC_IRQHandler+0x90>
 80065ba:	07e9      	lsls	r1, r5, #31
 80065bc:	d50e      	bpl.n	80065dc <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80065be:	6823      	ldr	r3, [r4, #0]
 80065c0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80065c2:	f022 0201 	bic.w	r2, r2, #1
 80065c6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80065c8:	2201      	movs	r2, #1
 80065ca:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80065cc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80065ce:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80065d2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80065d6:	4620      	mov	r0, r4
 80065d8:	f7fb f9e2 	bl	80019a0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80065dc:	0732      	lsls	r2, r6, #28
 80065de:	d511      	bpl.n	8006604 <HAL_LTDC_IRQHandler+0xb8>
 80065e0:	072b      	lsls	r3, r5, #28
 80065e2:	d50f      	bpl.n	8006604 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80065e4:	6823      	ldr	r3, [r4, #0]
 80065e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80065e8:	f022 0208 	bic.w	r2, r2, #8
 80065ec:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80065ee:	2208      	movs	r2, #8
 80065f0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80065f2:	2301      	movs	r3, #1
 80065f4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80065f8:	2300      	movs	r3, #0
 80065fa:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80065fe:	4620      	mov	r0, r4
 8006600:	f7ff ffa3 	bl	800654a <HAL_LTDC_ReloadEventCallback>
}
 8006604:	bd70      	pop	{r4, r5, r6, pc}

08006606 <HAL_LTDC_ConfigLayer>:
{
 8006606:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 8006608:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800660c:	2b01      	cmp	r3, #1
{
 800660e:	4606      	mov	r6, r0
 8006610:	468c      	mov	ip, r1
 8006612:	4696      	mov	lr, r2
 8006614:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8006618:	d01d      	beq.n	8006656 <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800661a:	2434      	movs	r4, #52	; 0x34
 800661c:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800661e:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006622:	fb04 6402 	mla	r4, r4, r2, r6
 8006626:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 8006628:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800662a:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 800662c:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006630:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006632:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006634:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006636:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006638:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800663a:	682b      	ldr	r3, [r5, #0]
 800663c:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800663e:	4630      	mov	r0, r6
 8006640:	4672      	mov	r2, lr
 8006642:	4661      	mov	r1, ip
 8006644:	f7ff fe8e 	bl	8006364 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006648:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800664a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800664c:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800664e:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006652:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8006656:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006658 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8006658:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800665c:	2b01      	cmp	r3, #1
 800665e:	f04f 0302 	mov.w	r3, #2
 8006662:	d012      	beq.n	800668a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006664:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006668:	6803      	ldr	r3, [r0, #0]
 800666a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800666c:	f022 0201 	bic.w	r2, r2, #1
 8006670:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006672:	4a07      	ldr	r2, [pc, #28]	; (8006690 <HAL_LTDC_ProgramLineEvent+0x38>)
 8006674:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006676:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006678:	f042 0201 	orr.w	r2, r2, #1
 800667c:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800667e:	2301      	movs	r3, #1
 8006680:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006684:	2300      	movs	r3, #0
 8006686:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800668a:	4618      	mov	r0, r3
}
 800668c:	4770      	bx	lr
 800668e:	bf00      	nop
 8006690:	40016800 	.word	0x40016800

08006694 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006694:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006698:	4604      	mov	r4, r0
 800669a:	b908      	cbnz	r0, 80066a0 <HAL_RCC_OscConfig+0xc>
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
      {
        return HAL_ERROR;
 800669c:	2001      	movs	r0, #1
 800669e:	e03f      	b.n	8006720 <HAL_RCC_OscConfig+0x8c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80066a0:	6803      	ldr	r3, [r0, #0]
 80066a2:	07dd      	lsls	r5, r3, #31
 80066a4:	d410      	bmi.n	80066c8 <HAL_RCC_OscConfig+0x34>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80066a6:	6823      	ldr	r3, [r4, #0]
 80066a8:	0798      	lsls	r0, r3, #30
 80066aa:	d45a      	bmi.n	8006762 <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80066ac:	6823      	ldr	r3, [r4, #0]
 80066ae:	071a      	lsls	r2, r3, #28
 80066b0:	f100 809c 	bmi.w	80067ec <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80066b4:	6823      	ldr	r3, [r4, #0]
 80066b6:	075b      	lsls	r3, r3, #29
 80066b8:	f100 80ba 	bmi.w	8006830 <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80066bc:	69a0      	ldr	r0, [r4, #24]
 80066be:	2800      	cmp	r0, #0
 80066c0:	f040 811b 	bne.w	80068fa <HAL_RCC_OscConfig+0x266>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80066c4:	2000      	movs	r0, #0
 80066c6:	e02b      	b.n	8006720 <HAL_RCC_OscConfig+0x8c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80066c8:	4ba7      	ldr	r3, [pc, #668]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 80066ca:	689a      	ldr	r2, [r3, #8]
 80066cc:	f002 020c 	and.w	r2, r2, #12
 80066d0:	2a04      	cmp	r2, #4
 80066d2:	d007      	beq.n	80066e4 <HAL_RCC_OscConfig+0x50>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80066d4:	689a      	ldr	r2, [r3, #8]
 80066d6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80066da:	2a08      	cmp	r2, #8
 80066dc:	d10a      	bne.n	80066f4 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80066de:	685b      	ldr	r3, [r3, #4]
 80066e0:	0259      	lsls	r1, r3, #9
 80066e2:	d507      	bpl.n	80066f4 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80066e4:	4ba0      	ldr	r3, [pc, #640]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	039a      	lsls	r2, r3, #14
 80066ea:	d5dc      	bpl.n	80066a6 <HAL_RCC_OscConfig+0x12>
 80066ec:	6863      	ldr	r3, [r4, #4]
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d1d9      	bne.n	80066a6 <HAL_RCC_OscConfig+0x12>
 80066f2:	e7d3      	b.n	800669c <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80066f4:	6863      	ldr	r3, [r4, #4]
 80066f6:	4d9c      	ldr	r5, [pc, #624]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 80066f8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80066fc:	d113      	bne.n	8006726 <HAL_RCC_OscConfig+0x92>
 80066fe:	682b      	ldr	r3, [r5, #0]
 8006700:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006704:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006706:	f7fe fd6d 	bl	80051e4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800670a:	4d97      	ldr	r5, [pc, #604]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 800670c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800670e:	682b      	ldr	r3, [r5, #0]
 8006710:	039b      	lsls	r3, r3, #14
 8006712:	d4c8      	bmi.n	80066a6 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006714:	f7fe fd66 	bl	80051e4 <HAL_GetTick>
 8006718:	1b80      	subs	r0, r0, r6
 800671a:	2864      	cmp	r0, #100	; 0x64
 800671c:	d9f7      	bls.n	800670e <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 800671e:	2003      	movs	r0, #3
}
 8006720:	b002      	add	sp, #8
 8006722:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006726:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800672a:	d104      	bne.n	8006736 <HAL_RCC_OscConfig+0xa2>
 800672c:	682b      	ldr	r3, [r5, #0]
 800672e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006732:	602b      	str	r3, [r5, #0]
 8006734:	e7e3      	b.n	80066fe <HAL_RCC_OscConfig+0x6a>
 8006736:	682a      	ldr	r2, [r5, #0]
 8006738:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800673c:	602a      	str	r2, [r5, #0]
 800673e:	682a      	ldr	r2, [r5, #0]
 8006740:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8006744:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006746:	2b00      	cmp	r3, #0
 8006748:	d1dd      	bne.n	8006706 <HAL_RCC_OscConfig+0x72>
        tickstart = HAL_GetTick();
 800674a:	f7fe fd4b 	bl	80051e4 <HAL_GetTick>
 800674e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006750:	682b      	ldr	r3, [r5, #0]
 8006752:	039f      	lsls	r7, r3, #14
 8006754:	d5a7      	bpl.n	80066a6 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006756:	f7fe fd45 	bl	80051e4 <HAL_GetTick>
 800675a:	1b80      	subs	r0, r0, r6
 800675c:	2864      	cmp	r0, #100	; 0x64
 800675e:	d9f7      	bls.n	8006750 <HAL_RCC_OscConfig+0xbc>
 8006760:	e7dd      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006762:	4b81      	ldr	r3, [pc, #516]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 8006764:	689a      	ldr	r2, [r3, #8]
 8006766:	f012 0f0c 	tst.w	r2, #12
 800676a:	d007      	beq.n	800677c <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800676c:	689a      	ldr	r2, [r3, #8]
 800676e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006772:	2a08      	cmp	r2, #8
 8006774:	d111      	bne.n	800679a <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006776:	685b      	ldr	r3, [r3, #4]
 8006778:	025e      	lsls	r6, r3, #9
 800677a:	d40e      	bmi.n	800679a <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800677c:	4b7a      	ldr	r3, [pc, #488]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 800677e:	681a      	ldr	r2, [r3, #0]
 8006780:	0795      	lsls	r5, r2, #30
 8006782:	d502      	bpl.n	800678a <HAL_RCC_OscConfig+0xf6>
 8006784:	68e2      	ldr	r2, [r4, #12]
 8006786:	2a01      	cmp	r2, #1
 8006788:	d188      	bne.n	800669c <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800678a:	681a      	ldr	r2, [r3, #0]
 800678c:	6921      	ldr	r1, [r4, #16]
 800678e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8006792:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8006796:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006798:	e788      	b.n	80066ac <HAL_RCC_OscConfig+0x18>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800679a:	68e2      	ldr	r2, [r4, #12]
 800679c:	4b73      	ldr	r3, [pc, #460]	; (800696c <HAL_RCC_OscConfig+0x2d8>)
 800679e:	b1b2      	cbz	r2, 80067ce <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 80067a0:	2201      	movs	r2, #1
 80067a2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80067a4:	f7fe fd1e 	bl	80051e4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80067a8:	4d6f      	ldr	r5, [pc, #444]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80067aa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80067ac:	682b      	ldr	r3, [r5, #0]
 80067ae:	0798      	lsls	r0, r3, #30
 80067b0:	d507      	bpl.n	80067c2 <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80067b2:	682b      	ldr	r3, [r5, #0]
 80067b4:	6922      	ldr	r2, [r4, #16]
 80067b6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80067ba:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80067be:	602b      	str	r3, [r5, #0]
 80067c0:	e774      	b.n	80066ac <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80067c2:	f7fe fd0f 	bl	80051e4 <HAL_GetTick>
 80067c6:	1b80      	subs	r0, r0, r6
 80067c8:	2802      	cmp	r0, #2
 80067ca:	d9ef      	bls.n	80067ac <HAL_RCC_OscConfig+0x118>
 80067cc:	e7a7      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 80067ce:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80067d0:	f7fe fd08 	bl	80051e4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80067d4:	4d64      	ldr	r5, [pc, #400]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80067d6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80067d8:	682b      	ldr	r3, [r5, #0]
 80067da:	0799      	lsls	r1, r3, #30
 80067dc:	f57f af66 	bpl.w	80066ac <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80067e0:	f7fe fd00 	bl	80051e4 <HAL_GetTick>
 80067e4:	1b80      	subs	r0, r0, r6
 80067e6:	2802      	cmp	r0, #2
 80067e8:	d9f6      	bls.n	80067d8 <HAL_RCC_OscConfig+0x144>
 80067ea:	e798      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80067ec:	6962      	ldr	r2, [r4, #20]
 80067ee:	4b60      	ldr	r3, [pc, #384]	; (8006970 <HAL_RCC_OscConfig+0x2dc>)
 80067f0:	b17a      	cbz	r2, 8006812 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80067f2:	2201      	movs	r2, #1
 80067f4:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80067f6:	f7fe fcf5 	bl	80051e4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80067fa:	4d5b      	ldr	r5, [pc, #364]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 80067fc:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80067fe:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006800:	079f      	lsls	r7, r3, #30
 8006802:	f53f af57 	bmi.w	80066b4 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006806:	f7fe fced 	bl	80051e4 <HAL_GetTick>
 800680a:	1b80      	subs	r0, r0, r6
 800680c:	2802      	cmp	r0, #2
 800680e:	d9f6      	bls.n	80067fe <HAL_RCC_OscConfig+0x16a>
 8006810:	e785      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 8006812:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8006814:	f7fe fce6 	bl	80051e4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006818:	4d53      	ldr	r5, [pc, #332]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 800681a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800681c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800681e:	0798      	lsls	r0, r3, #30
 8006820:	f57f af48 	bpl.w	80066b4 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006824:	f7fe fcde 	bl	80051e4 <HAL_GetTick>
 8006828:	1b80      	subs	r0, r0, r6
 800682a:	2802      	cmp	r0, #2
 800682c:	d9f6      	bls.n	800681c <HAL_RCC_OscConfig+0x188>
 800682e:	e776      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006830:	4b4d      	ldr	r3, [pc, #308]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 8006832:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006834:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006838:	d128      	bne.n	800688c <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 800683a:	9201      	str	r2, [sp, #4]
 800683c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800683e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006842:	641a      	str	r2, [r3, #64]	; 0x40
 8006844:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006846:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800684a:	9301      	str	r3, [sp, #4]
 800684c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800684e:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006850:	4d48      	ldr	r5, [pc, #288]	; (8006974 <HAL_RCC_OscConfig+0x2e0>)
 8006852:	682b      	ldr	r3, [r5, #0]
 8006854:	05d9      	lsls	r1, r3, #23
 8006856:	d51b      	bpl.n	8006890 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006858:	68a3      	ldr	r3, [r4, #8]
 800685a:	4d43      	ldr	r5, [pc, #268]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 800685c:	2b01      	cmp	r3, #1
 800685e:	d127      	bne.n	80068b0 <HAL_RCC_OscConfig+0x21c>
 8006860:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006862:	f043 0301 	orr.w	r3, r3, #1
 8006866:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006868:	f7fe fcbc 	bl	80051e4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800686c:	4d3e      	ldr	r5, [pc, #248]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 800686e:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006870:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006874:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006876:	079b      	lsls	r3, r3, #30
 8006878:	d539      	bpl.n	80068ee <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 800687a:	2e00      	cmp	r6, #0
 800687c:	f43f af1e 	beq.w	80066bc <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006880:	4a39      	ldr	r2, [pc, #228]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 8006882:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006884:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006888:	6413      	str	r3, [r2, #64]	; 0x40
 800688a:	e717      	b.n	80066bc <HAL_RCC_OscConfig+0x28>
    FlagStatus       pwrclkchanged = RESET;
 800688c:	2600      	movs	r6, #0
 800688e:	e7df      	b.n	8006850 <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006890:	682b      	ldr	r3, [r5, #0]
 8006892:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006896:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006898:	f7fe fca4 	bl	80051e4 <HAL_GetTick>
 800689c:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800689e:	682b      	ldr	r3, [r5, #0]
 80068a0:	05da      	lsls	r2, r3, #23
 80068a2:	d4d9      	bmi.n	8006858 <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80068a4:	f7fe fc9e 	bl	80051e4 <HAL_GetTick>
 80068a8:	1bc0      	subs	r0, r0, r7
 80068aa:	2802      	cmp	r0, #2
 80068ac:	d9f7      	bls.n	800689e <HAL_RCC_OscConfig+0x20a>
 80068ae:	e736      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80068b0:	2b05      	cmp	r3, #5
 80068b2:	d104      	bne.n	80068be <HAL_RCC_OscConfig+0x22a>
 80068b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80068b6:	f043 0304 	orr.w	r3, r3, #4
 80068ba:	672b      	str	r3, [r5, #112]	; 0x70
 80068bc:	e7d0      	b.n	8006860 <HAL_RCC_OscConfig+0x1cc>
 80068be:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80068c0:	f022 0201 	bic.w	r2, r2, #1
 80068c4:	672a      	str	r2, [r5, #112]	; 0x70
 80068c6:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80068c8:	f022 0204 	bic.w	r2, r2, #4
 80068cc:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80068ce:	2b00      	cmp	r3, #0
 80068d0:	d1ca      	bne.n	8006868 <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 80068d2:	f7fe fc87 	bl	80051e4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80068d6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80068da:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80068dc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80068de:	0798      	lsls	r0, r3, #30
 80068e0:	d5cb      	bpl.n	800687a <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80068e2:	f7fe fc7f 	bl	80051e4 <HAL_GetTick>
 80068e6:	1bc0      	subs	r0, r0, r7
 80068e8:	4540      	cmp	r0, r8
 80068ea:	d9f7      	bls.n	80068dc <HAL_RCC_OscConfig+0x248>
 80068ec:	e717      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80068ee:	f7fe fc79 	bl	80051e4 <HAL_GetTick>
 80068f2:	1bc0      	subs	r0, r0, r7
 80068f4:	4540      	cmp	r0, r8
 80068f6:	d9bd      	bls.n	8006874 <HAL_RCC_OscConfig+0x1e0>
 80068f8:	e711      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80068fa:	4d1b      	ldr	r5, [pc, #108]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
 80068fc:	68ab      	ldr	r3, [r5, #8]
 80068fe:	f003 030c 	and.w	r3, r3, #12
 8006902:	2b08      	cmp	r3, #8
 8006904:	d047      	beq.n	8006996 <HAL_RCC_OscConfig+0x302>
 8006906:	4e1c      	ldr	r6, [pc, #112]	; (8006978 <HAL_RCC_OscConfig+0x2e4>)
 8006908:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800690a:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800690c:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800690e:	d135      	bne.n	800697c <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 8006910:	f7fe fc68 	bl	80051e4 <HAL_GetTick>
 8006914:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006916:	682b      	ldr	r3, [r5, #0]
 8006918:	0199      	lsls	r1, r3, #6
 800691a:	d41e      	bmi.n	800695a <HAL_RCC_OscConfig+0x2c6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800691c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006920:	4313      	orrs	r3, r2
 8006922:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006924:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006928:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800692a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800692e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006930:	4c0d      	ldr	r4, [pc, #52]	; (8006968 <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006932:	0852      	lsrs	r2, r2, #1
 8006934:	3a01      	subs	r2, #1
 8006936:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800693a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800693c:	2301      	movs	r3, #1
 800693e:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8006940:	f7fe fc50 	bl	80051e4 <HAL_GetTick>
 8006944:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006946:	6823      	ldr	r3, [r4, #0]
 8006948:	019a      	lsls	r2, r3, #6
 800694a:	f53f aebb 	bmi.w	80066c4 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800694e:	f7fe fc49 	bl	80051e4 <HAL_GetTick>
 8006952:	1b40      	subs	r0, r0, r5
 8006954:	2802      	cmp	r0, #2
 8006956:	d9f6      	bls.n	8006946 <HAL_RCC_OscConfig+0x2b2>
 8006958:	e6e1      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800695a:	f7fe fc43 	bl	80051e4 <HAL_GetTick>
 800695e:	1bc0      	subs	r0, r0, r7
 8006960:	2802      	cmp	r0, #2
 8006962:	d9d8      	bls.n	8006916 <HAL_RCC_OscConfig+0x282>
 8006964:	e6db      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
 8006966:	bf00      	nop
 8006968:	40023800 	.word	0x40023800
 800696c:	42470000 	.word	0x42470000
 8006970:	42470e80 	.word	0x42470e80
 8006974:	40007000 	.word	0x40007000
 8006978:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 800697c:	f7fe fc32 	bl	80051e4 <HAL_GetTick>
 8006980:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006982:	682b      	ldr	r3, [r5, #0]
 8006984:	019b      	lsls	r3, r3, #6
 8006986:	f57f ae9d 	bpl.w	80066c4 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800698a:	f7fe fc2b 	bl	80051e4 <HAL_GetTick>
 800698e:	1b00      	subs	r0, r0, r4
 8006990:	2802      	cmp	r0, #2
 8006992:	d9f6      	bls.n	8006982 <HAL_RCC_OscConfig+0x2ee>
 8006994:	e6c3      	b.n	800671e <HAL_RCC_OscConfig+0x8a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006996:	2801      	cmp	r0, #1
 8006998:	f43f aec2 	beq.w	8006720 <HAL_RCC_OscConfig+0x8c>
        pll_config = RCC->PLLCFGR;
 800699c:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800699e:	69e3      	ldr	r3, [r4, #28]
 80069a0:	f400 0280 	and.w	r2, r0, #4194304	; 0x400000
 80069a4:	429a      	cmp	r2, r3
 80069a6:	f47f ae79 	bne.w	800669c <HAL_RCC_OscConfig+0x8>
 80069aa:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80069ac:	f000 033f 	and.w	r3, r0, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80069b0:	4293      	cmp	r3, r2
 80069b2:	f47f ae73 	bne.w	800669c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80069b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80069b8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80069bc:	4003      	ands	r3, r0
 80069be:	4293      	cmp	r3, r2
 80069c0:	f47f ae6c 	bne.w	800669c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80069c4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80069c6:	f400 3340 	and.w	r3, r0, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80069ca:	4293      	cmp	r3, r2
 80069cc:	f47f ae66 	bne.w	800669c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80069d0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 80069d2:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
    return HAL_ERROR;
 80069d6:	1ac0      	subs	r0, r0, r3
 80069d8:	bf18      	it	ne
 80069da:	2001      	movne	r0, #1
 80069dc:	e6a0      	b.n	8006720 <HAL_RCC_OscConfig+0x8c>
 80069de:	bf00      	nop

080069e0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80069e0:	4913      	ldr	r1, [pc, #76]	; (8006a30 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80069e2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80069e4:	688b      	ldr	r3, [r1, #8]
 80069e6:	f003 030c 	and.w	r3, r3, #12
 80069ea:	2b04      	cmp	r3, #4
 80069ec:	d003      	beq.n	80069f6 <HAL_RCC_GetSysClockFreq+0x16>
 80069ee:	2b08      	cmp	r3, #8
 80069f0:	d003      	beq.n	80069fa <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80069f2:	4810      	ldr	r0, [pc, #64]	; (8006a34 <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 80069f4:	e000      	b.n	80069f8 <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 80069f6:	4810      	ldr	r0, [pc, #64]	; (8006a38 <HAL_RCC_GetSysClockFreq+0x58>)
}
 80069f8:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80069fa:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80069fc:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80069fe:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006a00:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a04:	bf14      	ite	ne
 8006a06:	480c      	ldrne	r0, [pc, #48]	; (8006a38 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a08:	480a      	ldreq	r0, [pc, #40]	; (8006a34 <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a0a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006a0e:	bf18      	it	ne
 8006a10:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006a12:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a16:	fba1 0100 	umull	r0, r1, r1, r0
 8006a1a:	f7fa f82f 	bl	8000a7c <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006a1e:	4b04      	ldr	r3, [pc, #16]	; (8006a30 <HAL_RCC_GetSysClockFreq+0x50>)
 8006a20:	685b      	ldr	r3, [r3, #4]
 8006a22:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006a26:	3301      	adds	r3, #1
 8006a28:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 8006a2a:	fbb0 f0f3 	udiv	r0, r0, r3
 8006a2e:	e7e3      	b.n	80069f8 <HAL_RCC_GetSysClockFreq+0x18>
 8006a30:	40023800 	.word	0x40023800
 8006a34:	00f42400 	.word	0x00f42400
 8006a38:	007a1200 	.word	0x007a1200

08006a3c <HAL_RCC_ClockConfig>:
{
 8006a3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a40:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006a42:	4604      	mov	r4, r0
 8006a44:	b910      	cbnz	r0, 8006a4c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006a46:	2001      	movs	r0, #1
}
 8006a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006a4c:	4b43      	ldr	r3, [pc, #268]	; (8006b5c <HAL_RCC_ClockConfig+0x120>)
 8006a4e:	681a      	ldr	r2, [r3, #0]
 8006a50:	f002 020f 	and.w	r2, r2, #15
 8006a54:	428a      	cmp	r2, r1
 8006a56:	d328      	bcc.n	8006aaa <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006a58:	6821      	ldr	r1, [r4, #0]
 8006a5a:	078f      	lsls	r7, r1, #30
 8006a5c:	d42d      	bmi.n	8006aba <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006a5e:	07c8      	lsls	r0, r1, #31
 8006a60:	d440      	bmi.n	8006ae4 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006a62:	4b3e      	ldr	r3, [pc, #248]	; (8006b5c <HAL_RCC_ClockConfig+0x120>)
 8006a64:	681a      	ldr	r2, [r3, #0]
 8006a66:	f002 020f 	and.w	r2, r2, #15
 8006a6a:	42aa      	cmp	r2, r5
 8006a6c:	d865      	bhi.n	8006b3a <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006a6e:	6822      	ldr	r2, [r4, #0]
 8006a70:	0751      	lsls	r1, r2, #29
 8006a72:	d46b      	bmi.n	8006b4c <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006a74:	0713      	lsls	r3, r2, #28
 8006a76:	d507      	bpl.n	8006a88 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006a78:	4a39      	ldr	r2, [pc, #228]	; (8006b60 <HAL_RCC_ClockConfig+0x124>)
 8006a7a:	6921      	ldr	r1, [r4, #16]
 8006a7c:	6893      	ldr	r3, [r2, #8]
 8006a7e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8006a82:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006a86:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006a88:	f7ff ffaa 	bl	80069e0 <HAL_RCC_GetSysClockFreq>
 8006a8c:	4b34      	ldr	r3, [pc, #208]	; (8006b60 <HAL_RCC_ClockConfig+0x124>)
 8006a8e:	4a35      	ldr	r2, [pc, #212]	; (8006b64 <HAL_RCC_ClockConfig+0x128>)
 8006a90:	689b      	ldr	r3, [r3, #8]
 8006a92:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006a96:	5cd3      	ldrb	r3, [r2, r3]
 8006a98:	40d8      	lsrs	r0, r3
 8006a9a:	4b33      	ldr	r3, [pc, #204]	; (8006b68 <HAL_RCC_ClockConfig+0x12c>)
 8006a9c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006a9e:	4b33      	ldr	r3, [pc, #204]	; (8006b6c <HAL_RCC_ClockConfig+0x130>)
 8006aa0:	6818      	ldr	r0, [r3, #0]
 8006aa2:	f7fb feeb 	bl	800287c <HAL_InitTick>
  return HAL_OK;
 8006aa6:	2000      	movs	r0, #0
 8006aa8:	e7ce      	b.n	8006a48 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006aaa:	b2ca      	uxtb	r2, r1
 8006aac:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	f003 030f 	and.w	r3, r3, #15
 8006ab4:	428b      	cmp	r3, r1
 8006ab6:	d1c6      	bne.n	8006a46 <HAL_RCC_ClockConfig+0xa>
 8006ab8:	e7ce      	b.n	8006a58 <HAL_RCC_ClockConfig+0x1c>
 8006aba:	4b29      	ldr	r3, [pc, #164]	; (8006b60 <HAL_RCC_ClockConfig+0x124>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006abc:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006ac0:	bf1e      	ittt	ne
 8006ac2:	689a      	ldrne	r2, [r3, #8]
 8006ac4:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 8006ac8:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006aca:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006acc:	bf42      	ittt	mi
 8006ace:	689a      	ldrmi	r2, [r3, #8]
 8006ad0:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 8006ad4:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006ad6:	689a      	ldr	r2, [r3, #8]
 8006ad8:	68a0      	ldr	r0, [r4, #8]
 8006ada:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8006ade:	4302      	orrs	r2, r0
 8006ae0:	609a      	str	r2, [r3, #8]
 8006ae2:	e7bc      	b.n	8006a5e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006ae4:	6862      	ldr	r2, [r4, #4]
 8006ae6:	4b1e      	ldr	r3, [pc, #120]	; (8006b60 <HAL_RCC_ClockConfig+0x124>)
 8006ae8:	2a01      	cmp	r2, #1
 8006aea:	d11c      	bne.n	8006b26 <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006aec:	681b      	ldr	r3, [r3, #0]
 8006aee:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006af2:	d0a8      	beq.n	8006a46 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006af4:	4e1a      	ldr	r6, [pc, #104]	; (8006b60 <HAL_RCC_ClockConfig+0x124>)
 8006af6:	68b3      	ldr	r3, [r6, #8]
 8006af8:	f023 0303 	bic.w	r3, r3, #3
 8006afc:	4313      	orrs	r3, r2
 8006afe:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006b00:	f7fe fb70 	bl	80051e4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006b04:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8006b08:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006b0a:	68b3      	ldr	r3, [r6, #8]
 8006b0c:	6862      	ldr	r2, [r4, #4]
 8006b0e:	f003 030c 	and.w	r3, r3, #12
 8006b12:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006b16:	d0a4      	beq.n	8006a62 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006b18:	f7fe fb64 	bl	80051e4 <HAL_GetTick>
 8006b1c:	1bc0      	subs	r0, r0, r7
 8006b1e:	4540      	cmp	r0, r8
 8006b20:	d9f3      	bls.n	8006b0a <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8006b22:	2003      	movs	r0, #3
 8006b24:	e790      	b.n	8006a48 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006b26:	1e91      	subs	r1, r2, #2
 8006b28:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006b2a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006b2c:	d802      	bhi.n	8006b34 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006b2e:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006b32:	e7de      	b.n	8006af2 <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006b34:	f013 0f02 	tst.w	r3, #2
 8006b38:	e7db      	b.n	8006af2 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006b3a:	b2ea      	uxtb	r2, r5
 8006b3c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006b3e:	681b      	ldr	r3, [r3, #0]
 8006b40:	f003 030f 	and.w	r3, r3, #15
 8006b44:	42ab      	cmp	r3, r5
 8006b46:	f47f af7e 	bne.w	8006a46 <HAL_RCC_ClockConfig+0xa>
 8006b4a:	e790      	b.n	8006a6e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006b4c:	4904      	ldr	r1, [pc, #16]	; (8006b60 <HAL_RCC_ClockConfig+0x124>)
 8006b4e:	68e0      	ldr	r0, [r4, #12]
 8006b50:	688b      	ldr	r3, [r1, #8]
 8006b52:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006b56:	4303      	orrs	r3, r0
 8006b58:	608b      	str	r3, [r1, #8]
 8006b5a:	e78b      	b.n	8006a74 <HAL_RCC_ClockConfig+0x38>
 8006b5c:	40023c00 	.word	0x40023c00
 8006b60:	40023800 	.word	0x40023800
 8006b64:	0801eb04 	.word	0x0801eb04
 8006b68:	20000084 	.word	0x20000084
 8006b6c:	2000008c 	.word	0x2000008c

08006b70 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006b70:	4b04      	ldr	r3, [pc, #16]	; (8006b84 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006b72:	4a05      	ldr	r2, [pc, #20]	; (8006b88 <HAL_RCC_GetPCLK1Freq+0x18>)
 8006b74:	689b      	ldr	r3, [r3, #8]
 8006b76:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006b7a:	5cd3      	ldrb	r3, [r2, r3]
 8006b7c:	4a03      	ldr	r2, [pc, #12]	; (8006b8c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006b7e:	6810      	ldr	r0, [r2, #0]
}
 8006b80:	40d8      	lsrs	r0, r3
 8006b82:	4770      	bx	lr
 8006b84:	40023800 	.word	0x40023800
 8006b88:	0801eb14 	.word	0x0801eb14
 8006b8c:	20000084 	.word	0x20000084

08006b90 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006b90:	230f      	movs	r3, #15
 8006b92:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006b94:	4b0b      	ldr	r3, [pc, #44]	; (8006bc4 <HAL_RCC_GetClockConfig+0x34>)
 8006b96:	689a      	ldr	r2, [r3, #8]
 8006b98:	f002 0203 	and.w	r2, r2, #3
 8006b9c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006b9e:	689a      	ldr	r2, [r3, #8]
 8006ba0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006ba4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006ba6:	689a      	ldr	r2, [r3, #8]
 8006ba8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006bac:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006bae:	689b      	ldr	r3, [r3, #8]
 8006bb0:	08db      	lsrs	r3, r3, #3
 8006bb2:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8006bb6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006bb8:	4b03      	ldr	r3, [pc, #12]	; (8006bc8 <HAL_RCC_GetClockConfig+0x38>)
 8006bba:	681b      	ldr	r3, [r3, #0]
 8006bbc:	f003 030f 	and.w	r3, r3, #15
 8006bc0:	600b      	str	r3, [r1, #0]
}
 8006bc2:	4770      	bx	lr
 8006bc4:	40023800 	.word	0x40023800
 8006bc8:	40023c00 	.word	0x40023c00

08006bcc <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006bcc:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006bce:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8006bd2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006bd4:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006bd6:	f040 808a 	bne.w	8006cee <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006bda:	6823      	ldr	r3, [r4, #0]
 8006bdc:	f013 0f0c 	tst.w	r3, #12
 8006be0:	d044      	beq.n	8006c6c <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006be2:	4d89      	ldr	r5, [pc, #548]	; (8006e08 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006be4:	4e89      	ldr	r6, [pc, #548]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006be6:	2300      	movs	r3, #0
 8006be8:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006bea:	f7fe fafb 	bl	80051e4 <HAL_GetTick>
 8006bee:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006bf0:	6833      	ldr	r3, [r6, #0]
 8006bf2:	009b      	lsls	r3, r3, #2
 8006bf4:	f100 80cc 	bmi.w	8006d90 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006bf8:	6821      	ldr	r1, [r4, #0]
 8006bfa:	074f      	lsls	r7, r1, #29
 8006bfc:	d515      	bpl.n	8006c2a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006bfe:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006c02:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006c06:	061b      	lsls	r3, r3, #24
 8006c08:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8006c0c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006c10:	4313      	orrs	r3, r2
 8006c12:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006c16:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8006c1a:	6a22      	ldr	r2, [r4, #32]
 8006c1c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006c20:	3a01      	subs	r2, #1
 8006c22:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006c26:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006c2a:	070e      	lsls	r6, r1, #28
 8006c2c:	d514      	bpl.n	8006c58 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006c2e:	4a77      	ldr	r2, [pc, #476]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006c30:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006c32:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006c36:	6920      	ldr	r0, [r4, #16]
 8006c38:	071b      	lsls	r3, r3, #28
 8006c3a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8006c3e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006c42:	430b      	orrs	r3, r1
 8006c44:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006c48:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006c4c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006c4e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006c52:	430b      	orrs	r3, r1
 8006c54:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006c58:	2301      	movs	r3, #1
 8006c5a:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006c5c:	f7fe fac2 	bl	80051e4 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006c60:	4d6a      	ldr	r5, [pc, #424]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 8006c62:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006c64:	682b      	ldr	r3, [r5, #0]
 8006c66:	0098      	lsls	r0, r3, #2
 8006c68:	f140 8099 	bpl.w	8006d9e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006c6c:	6823      	ldr	r3, [r4, #0]
 8006c6e:	069a      	lsls	r2, r3, #26
 8006c70:	d533      	bpl.n	8006cda <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006c72:	2300      	movs	r3, #0
 8006c74:	9301      	str	r3, [sp, #4]
 8006c76:	4b65      	ldr	r3, [pc, #404]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006c78:	4d65      	ldr	r5, [pc, #404]	; (8006e10 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006c7a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006c7c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006c80:	641a      	str	r2, [r3, #64]	; 0x40
 8006c82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c84:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006c88:	9301      	str	r3, [sp, #4]
 8006c8a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006c8c:	682b      	ldr	r3, [r5, #0]
 8006c8e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006c92:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006c94:	f7fe faa6 	bl	80051e4 <HAL_GetTick>
 8006c98:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006c9a:	682b      	ldr	r3, [r5, #0]
 8006c9c:	05d9      	lsls	r1, r3, #23
 8006c9e:	f140 8085 	bpl.w	8006dac <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006ca2:	4d5a      	ldr	r5, [pc, #360]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8006ca4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006ca6:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006caa:	f040 8086 	bne.w	8006dba <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006cae:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006cb0:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006cb4:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006cb8:	4a54      	ldr	r2, [pc, #336]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8006cba:	f040 80a0 	bne.w	8006dfe <HAL_RCCEx_PeriphCLKConfig+0x232>
 8006cbe:	6891      	ldr	r1, [r2, #8]
 8006cc0:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8006cc4:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006cc8:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8006ccc:	4301      	orrs	r1, r0
 8006cce:	6091      	str	r1, [r2, #8]
 8006cd0:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006cd2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006cd6:	430b      	orrs	r3, r1
 8006cd8:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006cda:	6820      	ldr	r0, [r4, #0]
 8006cdc:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006ce0:	bf1f      	itttt	ne
 8006ce2:	4b4c      	ldrne	r3, [pc, #304]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006ce4:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8006ce8:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 8006cea:	2000      	movne	r0, #0
 8006cec:	e04e      	b.n	8006d8c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 8006cee:	4d4a      	ldr	r5, [pc, #296]	; (8006e18 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006cf0:	4e46      	ldr	r6, [pc, #280]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006cf2:	2300      	movs	r3, #0
 8006cf4:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006cf6:	f7fe fa75 	bl	80051e4 <HAL_GetTick>
 8006cfa:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006cfc:	6833      	ldr	r3, [r6, #0]
 8006cfe:	011b      	lsls	r3, r3, #4
 8006d00:	d43e      	bmi.n	8006d80 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006d02:	6821      	ldr	r1, [r4, #0]
 8006d04:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006d06:	bf41      	itttt	mi
 8006d08:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006d0c:	071b      	lslmi	r3, r3, #28
 8006d0e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006d12:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006d16:	078e      	lsls	r6, r1, #30
 8006d18:	d515      	bpl.n	8006d46 <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006d1a:	4a3c      	ldr	r2, [pc, #240]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006d1c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006d1e:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006d22:	6866      	ldr	r6, [r4, #4]
 8006d24:	061b      	lsls	r3, r3, #24
 8006d26:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006d2a:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 8006d2e:	4303      	orrs	r3, r0
 8006d30:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006d34:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006d38:	69e3      	ldr	r3, [r4, #28]
 8006d3a:	f020 001f 	bic.w	r0, r0, #31
 8006d3e:	3b01      	subs	r3, #1
 8006d40:	4303      	orrs	r3, r0
 8006d42:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006d46:	0648      	lsls	r0, r1, #25
 8006d48:	d50a      	bpl.n	8006d60 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006d4a:	68e3      	ldr	r3, [r4, #12]
 8006d4c:	6862      	ldr	r2, [r4, #4]
 8006d4e:	061b      	lsls	r3, r3, #24
 8006d50:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006d54:	68a2      	ldr	r2, [r4, #8]
 8006d56:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006d5a:	4a2c      	ldr	r2, [pc, #176]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8006d5c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006d60:	2301      	movs	r3, #1
 8006d62:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006d64:	f7fe fa3e 	bl	80051e4 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006d68:	4d28      	ldr	r5, [pc, #160]	; (8006e0c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 8006d6a:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006d6c:	682b      	ldr	r3, [r5, #0]
 8006d6e:	0119      	lsls	r1, r3, #4
 8006d70:	f53f af33 	bmi.w	8006bda <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006d74:	f7fe fa36 	bl	80051e4 <HAL_GetTick>
 8006d78:	1b80      	subs	r0, r0, r6
 8006d7a:	2802      	cmp	r0, #2
 8006d7c:	d9f6      	bls.n	8006d6c <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8006d7e:	e004      	b.n	8006d8a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006d80:	f7fe fa30 	bl	80051e4 <HAL_GetTick>
 8006d84:	1bc0      	subs	r0, r0, r7
 8006d86:	2802      	cmp	r0, #2
 8006d88:	d9b8      	bls.n	8006cfc <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 8006d8a:	2003      	movs	r0, #3
}
 8006d8c:	b003      	add	sp, #12
 8006d8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006d90:	f7fe fa28 	bl	80051e4 <HAL_GetTick>
 8006d94:	1bc0      	subs	r0, r0, r7
 8006d96:	2802      	cmp	r0, #2
 8006d98:	f67f af2a 	bls.w	8006bf0 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8006d9c:	e7f5      	b.n	8006d8a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006d9e:	f7fe fa21 	bl	80051e4 <HAL_GetTick>
 8006da2:	1b80      	subs	r0, r0, r6
 8006da4:	2802      	cmp	r0, #2
 8006da6:	f67f af5d 	bls.w	8006c64 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8006daa:	e7ee      	b.n	8006d8a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006dac:	f7fe fa1a 	bl	80051e4 <HAL_GetTick>
 8006db0:	1b80      	subs	r0, r0, r6
 8006db2:	2802      	cmp	r0, #2
 8006db4:	f67f af71 	bls.w	8006c9a <HAL_RCCEx_PeriphCLKConfig+0xce>
 8006db8:	e7e7      	b.n	8006d8a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006dba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006dbc:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006dc0:	4293      	cmp	r3, r2
 8006dc2:	f43f af74 	beq.w	8006cae <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006dc6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006dc8:	4a14      	ldr	r2, [pc, #80]	; (8006e1c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8006dca:	2101      	movs	r1, #1
 8006dcc:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006dce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006dd2:	2100      	movs	r1, #0
 8006dd4:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 8006dd6:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006dd8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006dda:	07da      	lsls	r2, r3, #31
 8006ddc:	f57f af67 	bpl.w	8006cae <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 8006de0:	f7fe fa00 	bl	80051e4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006de4:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006de8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006dea:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006dec:	079b      	lsls	r3, r3, #30
 8006dee:	f53f af5e 	bmi.w	8006cae <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006df2:	f7fe f9f7 	bl	80051e4 <HAL_GetTick>
 8006df6:	1b80      	subs	r0, r0, r6
 8006df8:	42b8      	cmp	r0, r7
 8006dfa:	d9f6      	bls.n	8006dea <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8006dfc:	e7c5      	b.n	8006d8a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006dfe:	6891      	ldr	r1, [r2, #8]
 8006e00:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006e04:	e763      	b.n	8006cce <HAL_RCCEx_PeriphCLKConfig+0x102>
 8006e06:	bf00      	nop
 8006e08:	42470070 	.word	0x42470070
 8006e0c:	40023800 	.word	0x40023800
 8006e10:	40007000 	.word	0x40007000
 8006e14:	424711e0 	.word	0x424711e0
 8006e18:	42470068 	.word	0x42470068
 8006e1c:	42470e40 	.word	0x42470e40

08006e20 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006e20:	b538      	push	{r3, r4, r5, lr}
 8006e22:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006e24:	4604      	mov	r4, r0
 8006e26:	b1c8      	cbz	r0, 8006e5c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006e28:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006e2c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006e30:	b91b      	cbnz	r3, 8006e3a <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006e32:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006e36:	f7fb fb73 	bl	8002520 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e3a:	2302      	movs	r3, #2
 8006e3c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006e40:	1d21      	adds	r1, r4, #4
 8006e42:	6820      	ldr	r0, [r4, #0]
 8006e44:	f000 ff6a 	bl	8007d1c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006e48:	6862      	ldr	r2, [r4, #4]
 8006e4a:	6820      	ldr	r0, [r4, #0]
 8006e4c:	4629      	mov	r1, r5
 8006e4e:	f000 ff9b 	bl	8007d88 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006e52:	2301      	movs	r3, #1
 8006e54:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006e58:	2000      	movs	r0, #0
}
 8006e5a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006e5c:	2001      	movs	r0, #1
 8006e5e:	e7fc      	b.n	8006e5a <HAL_SDRAM_Init+0x3a>

08006e60 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006e60:	b538      	push	{r3, r4, r5, lr}
 8006e62:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e64:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8006e68:	b2c0      	uxtb	r0, r0
 8006e6a:	2802      	cmp	r0, #2
{
 8006e6c:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e6e:	d00d      	beq.n	8006e8c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e70:	2302      	movs	r3, #2
 8006e72:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006e76:	6820      	ldr	r0, [r4, #0]
 8006e78:	f000 ffc3 	bl	8007e02 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006e7c:	682b      	ldr	r3, [r5, #0]
 8006e7e:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006e80:	bf0c      	ite	eq
 8006e82:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006e84:	2301      	movne	r3, #1
 8006e86:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006e8a:	2000      	movs	r0, #0
}
 8006e8c:	bd38      	pop	{r3, r4, r5, pc}

08006e8e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006e8e:	b510      	push	{r4, lr}
 8006e90:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e92:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8006e96:	b2c0      	uxtb	r0, r0
 8006e98:	2802      	cmp	r0, #2
 8006e9a:	d009      	beq.n	8006eb0 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e9c:	2302      	movs	r3, #2
 8006e9e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8006ea2:	6820      	ldr	r0, [r4, #0]
 8006ea4:	f000 ffd2 	bl	8007e4c <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006ea8:	2301      	movs	r3, #1
 8006eaa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8006eae:	2000      	movs	r0, #0
}
 8006eb0:	bd10      	pop	{r4, pc}

08006eb2 <SPI_WaitFlagStateUntilTimeout.constprop.7>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8006eb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006eb4:	4604      	mov	r4, r0
 8006eb6:	460e      	mov	r6, r1
 8006eb8:	4615      	mov	r5, r2
 8006eba:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006ebc:	6821      	ldr	r1, [r4, #0]
 8006ebe:	688a      	ldr	r2, [r1, #8]
 8006ec0:	ea36 0302 	bics.w	r3, r6, r2
 8006ec4:	d001      	beq.n	8006eca <SPI_WaitFlagStateUntilTimeout.constprop.7+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006ec6:	2000      	movs	r0, #0
 8006ec8:	e02d      	b.n	8006f26 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8006eca:	1c6b      	adds	r3, r5, #1
 8006ecc:	d0f7      	beq.n	8006ebe <SPI_WaitFlagStateUntilTimeout.constprop.7+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8006ece:	f7fe f989 	bl	80051e4 <HAL_GetTick>
 8006ed2:	1bc0      	subs	r0, r0, r7
 8006ed4:	4285      	cmp	r5, r0
 8006ed6:	d8f1      	bhi.n	8006ebc <SPI_WaitFlagStateUntilTimeout.constprop.7+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006ed8:	6823      	ldr	r3, [r4, #0]
 8006eda:	685a      	ldr	r2, [r3, #4]
 8006edc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006ee0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006ee2:	6862      	ldr	r2, [r4, #4]
 8006ee4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006ee8:	d10a      	bne.n	8006f00 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
 8006eea:	68a2      	ldr	r2, [r4, #8]
 8006eec:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006ef0:	d002      	beq.n	8006ef8 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006ef2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006ef6:	d103      	bne.n	8006f00 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8006ef8:	681a      	ldr	r2, [r3, #0]
 8006efa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006efe:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006f00:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006f02:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8006f06:	d107      	bne.n	8006f18 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x66>
          SPI_RESET_CRC(hspi);
 8006f08:	681a      	ldr	r2, [r3, #0]
 8006f0a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006f0e:	601a      	str	r2, [r3, #0]
 8006f10:	681a      	ldr	r2, [r3, #0]
 8006f12:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006f16:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8006f18:	2301      	movs	r3, #1
 8006f1a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8006f1e:	2300      	movs	r3, #0
 8006f20:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8006f24:	2003      	movs	r0, #3
}
 8006f26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006f28 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006f28:	b538      	push	{r3, r4, r5, lr}
 8006f2a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006f2c:	6842      	ldr	r2, [r0, #4]
 8006f2e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8006f32:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006f34:	d11f      	bne.n	8006f76 <SPI_EndRxTransaction+0x4e>
 8006f36:	6882      	ldr	r2, [r0, #8]
 8006f38:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006f3c:	d002      	beq.n	8006f44 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006f3e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006f42:	d107      	bne.n	8006f54 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006f44:	6825      	ldr	r5, [r4, #0]
 8006f46:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006f48:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8006f4c:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8006f50:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006f52:	d007      	beq.n	8006f64 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006f54:	460a      	mov	r2, r1
 8006f56:	2180      	movs	r1, #128	; 0x80
 8006f58:	4620      	mov	r0, r4
 8006f5a:	f7ff ffaa 	bl	8006eb2 <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8006f5e:	b920      	cbnz	r0, 8006f6a <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8006f60:	2000      	movs	r0, #0
}
 8006f62:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006f64:	460a      	mov	r2, r1
 8006f66:	2101      	movs	r1, #1
 8006f68:	e7f6      	b.n	8006f58 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f6a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006f6c:	f043 0320 	orr.w	r3, r3, #32
 8006f70:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8006f72:	2003      	movs	r0, #3
 8006f74:	e7f5      	b.n	8006f62 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006f76:	460a      	mov	r2, r1
 8006f78:	2101      	movs	r1, #1
 8006f7a:	e7ee      	b.n	8006f5a <SPI_EndRxTransaction+0x32>

08006f7c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006f7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006f7e:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006f80:	4a12      	ldr	r2, [pc, #72]	; (8006fcc <SPI_EndRxTxTransaction+0x50>)
 8006f82:	4e13      	ldr	r6, [pc, #76]	; (8006fd0 <SPI_EndRxTxTransaction+0x54>)
 8006f84:	6815      	ldr	r5, [r2, #0]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006f86:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006f88:	fbb5 f6f6 	udiv	r6, r5, r6
 8006f8c:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8006f90:	4375      	muls	r5, r6
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006f92:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8006f96:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006f98:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006f9a:	d10b      	bne.n	8006fb4 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006f9c:	460a      	mov	r2, r1
 8006f9e:	2180      	movs	r1, #128	; 0x80
 8006fa0:	f7ff ff87 	bl	8006eb2 <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8006fa4:	b178      	cbz	r0, 8006fc6 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006fa6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006fa8:	f043 0320 	orr.w	r3, r3, #32
 8006fac:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8006fae:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006fb0:	b002      	add	sp, #8
 8006fb2:	bd70      	pop	{r4, r5, r6, pc}
      if (count == 0U)
 8006fb4:	9b01      	ldr	r3, [sp, #4]
 8006fb6:	b133      	cbz	r3, 8006fc6 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8006fb8:	9b01      	ldr	r3, [sp, #4]
 8006fba:	3b01      	subs	r3, #1
 8006fbc:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006fbe:	6823      	ldr	r3, [r4, #0]
 8006fc0:	689b      	ldr	r3, [r3, #8]
 8006fc2:	061b      	lsls	r3, r3, #24
 8006fc4:	d4f6      	bmi.n	8006fb4 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8006fc6:	2000      	movs	r0, #0
 8006fc8:	e7f2      	b.n	8006fb0 <SPI_EndRxTxTransaction+0x34>
 8006fca:	bf00      	nop
 8006fcc:	20000084 	.word	0x20000084
 8006fd0:	016e3600 	.word	0x016e3600

08006fd4 <HAL_SPI_Init>:
{
 8006fd4:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8006fd6:	4604      	mov	r4, r0
 8006fd8:	2800      	cmp	r0, #0
 8006fda:	d036      	beq.n	800704a <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006fdc:	2300      	movs	r3, #0
 8006fde:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006fe0:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8006fe4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006fe8:	b91b      	cbnz	r3, 8006ff2 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8006fea:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8006fee:	f7fb fa61 	bl	80024b4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006ff2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8006ff4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006ff6:	2302      	movs	r3, #2
 8006ff8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8006ffc:	680b      	ldr	r3, [r1, #0]
 8006ffe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007002:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007004:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007008:	4303      	orrs	r3, r0
 800700a:	68e0      	ldr	r0, [r4, #12]
 800700c:	4303      	orrs	r3, r0
 800700e:	6920      	ldr	r0, [r4, #16]
 8007010:	4303      	orrs	r3, r0
 8007012:	6960      	ldr	r0, [r4, #20]
 8007014:	4303      	orrs	r3, r0
 8007016:	69e0      	ldr	r0, [r4, #28]
 8007018:	4303      	orrs	r3, r0
 800701a:	6a20      	ldr	r0, [r4, #32]
 800701c:	4303      	orrs	r3, r0
 800701e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007020:	4303      	orrs	r3, r0
 8007022:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007026:	4303      	orrs	r3, r0
 8007028:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 800702a:	0c12      	lsrs	r2, r2, #16
 800702c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800702e:	f002 0204 	and.w	r2, r2, #4
 8007032:	431a      	orrs	r2, r3
 8007034:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007036:	69cb      	ldr	r3, [r1, #28]
 8007038:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800703c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800703e:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007040:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007042:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007044:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007048:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800704a:	2001      	movs	r0, #1
 800704c:	e7fc      	b.n	8007048 <HAL_SPI_Init+0x74>

0800704e <HAL_SPI_Transmit>:
{
 800704e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007052:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007054:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007058:	2b01      	cmp	r3, #1
{
 800705a:	4604      	mov	r4, r0
 800705c:	460d      	mov	r5, r1
 800705e:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8007060:	f000 809b 	beq.w	800719a <HAL_SPI_Transmit+0x14c>
 8007064:	2301      	movs	r3, #1
 8007066:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800706a:	f7fe f8bb 	bl	80051e4 <HAL_GetTick>
 800706e:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007070:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8007074:	b2c0      	uxtb	r0, r0
 8007076:	2801      	cmp	r0, #1
 8007078:	f040 808d 	bne.w	8007196 <HAL_SPI_Transmit+0x148>
  if ((pData == NULL) || (Size == 0U))
 800707c:	2d00      	cmp	r5, #0
 800707e:	d05d      	beq.n	800713c <HAL_SPI_Transmit+0xee>
 8007080:	f1b8 0f00 	cmp.w	r8, #0
 8007084:	d05a      	beq.n	800713c <HAL_SPI_Transmit+0xee>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007086:	2303      	movs	r3, #3
 8007088:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800708c:	2000      	movs	r0, #0
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800708e:	68a3      	ldr	r3, [r4, #8]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007090:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007092:	63a0      	str	r0, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 8007094:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8007098:	87a0      	strh	r0, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800709a:	87e0      	strh	r0, [r4, #62]	; 0x3e
  hspi->RxISR       = NULL;
 800709c:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 80070a0:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80070a2:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80070a4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 80070a8:	bf08      	it	eq
 80070aa:	6803      	ldreq	r3, [r0, #0]
  hspi->TxXferSize  = Size;
 80070ac:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 80070b0:	bf04      	itt	eq
 80070b2:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 80070b6:	6003      	streq	r3, [r0, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80070b8:	6803      	ldr	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80070ba:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80070bc:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 80070be:	bf5e      	ittt	pl
 80070c0:	6803      	ldrpl	r3, [r0, #0]
 80070c2:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 80070c6:	6003      	strpl	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80070c8:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 80070cc:	6863      	ldr	r3, [r4, #4]
 80070ce:	d13e      	bne.n	800714e <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80070d0:	b113      	cbz	r3, 80070d8 <HAL_SPI_Transmit+0x8a>
 80070d2:	f1b8 0f01 	cmp.w	r8, #1
 80070d6:	d107      	bne.n	80070e8 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80070d8:	f835 3b02 	ldrh.w	r3, [r5], #2
 80070dc:	60c3      	str	r3, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80070de:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80070e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80070e2:	3b01      	subs	r3, #1
 80070e4:	b29b      	uxth	r3, r3
 80070e6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80070e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80070ea:	b29b      	uxth	r3, r3
 80070ec:	b9a3      	cbnz	r3, 8007118 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80070ee:	463a      	mov	r2, r7
 80070f0:	4631      	mov	r1, r6
 80070f2:	4620      	mov	r0, r4
 80070f4:	f7ff ff42 	bl	8006f7c <SPI_EndRxTxTransaction>
 80070f8:	2800      	cmp	r0, #0
 80070fa:	d149      	bne.n	8007190 <HAL_SPI_Transmit+0x142>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80070fc:	68a3      	ldr	r3, [r4, #8]
 80070fe:	b933      	cbnz	r3, 800710e <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007100:	9301      	str	r3, [sp, #4]
 8007102:	6823      	ldr	r3, [r4, #0]
 8007104:	68da      	ldr	r2, [r3, #12]
 8007106:	9201      	str	r2, [sp, #4]
 8007108:	689b      	ldr	r3, [r3, #8]
 800710a:	9301      	str	r3, [sp, #4]
 800710c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800710e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007110:	3000      	adds	r0, #0
 8007112:	bf18      	it	ne
 8007114:	2001      	movne	r0, #1
error:
 8007116:	e011      	b.n	800713c <HAL_SPI_Transmit+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007118:	6822      	ldr	r2, [r4, #0]
 800711a:	6893      	ldr	r3, [r2, #8]
 800711c:	0798      	lsls	r0, r3, #30
 800711e:	d505      	bpl.n	800712c <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007120:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007122:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007126:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007128:	6323      	str	r3, [r4, #48]	; 0x30
 800712a:	e7d9      	b.n	80070e0 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800712c:	f7fe f85a 	bl	80051e4 <HAL_GetTick>
 8007130:	1bc0      	subs	r0, r0, r7
 8007132:	42b0      	cmp	r0, r6
 8007134:	d3d8      	bcc.n	80070e8 <HAL_SPI_Transmit+0x9a>
 8007136:	1c71      	adds	r1, r6, #1
 8007138:	d0d6      	beq.n	80070e8 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 800713a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800713c:	2301      	movs	r3, #1
 800713e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007142:	2300      	movs	r3, #0
 8007144:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007148:	b002      	add	sp, #8
 800714a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800714e:	b113      	cbz	r3, 8007156 <HAL_SPI_Transmit+0x108>
 8007150:	f1b8 0f01 	cmp.w	r8, #1
 8007154:	d108      	bne.n	8007168 <HAL_SPI_Transmit+0x11a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007156:	782b      	ldrb	r3, [r5, #0]
 8007158:	7303      	strb	r3, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800715a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800715c:	3301      	adds	r3, #1
 800715e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007160:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007162:	3b01      	subs	r3, #1
 8007164:	b29b      	uxth	r3, r3
 8007166:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007168:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800716a:	b29b      	uxth	r3, r3
 800716c:	2b00      	cmp	r3, #0
 800716e:	d0be      	beq.n	80070ee <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007170:	6823      	ldr	r3, [r4, #0]
 8007172:	689a      	ldr	r2, [r3, #8]
 8007174:	0792      	lsls	r2, r2, #30
 8007176:	d503      	bpl.n	8007180 <HAL_SPI_Transmit+0x132>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007178:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800717a:	7812      	ldrb	r2, [r2, #0]
 800717c:	731a      	strb	r2, [r3, #12]
 800717e:	e7ec      	b.n	800715a <HAL_SPI_Transmit+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007180:	f7fe f830 	bl	80051e4 <HAL_GetTick>
 8007184:	1bc0      	subs	r0, r0, r7
 8007186:	42b0      	cmp	r0, r6
 8007188:	d3ee      	bcc.n	8007168 <HAL_SPI_Transmit+0x11a>
 800718a:	1c73      	adds	r3, r6, #1
 800718c:	d0ec      	beq.n	8007168 <HAL_SPI_Transmit+0x11a>
 800718e:	e7d4      	b.n	800713a <HAL_SPI_Transmit+0xec>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007190:	2320      	movs	r3, #32
 8007192:	6563      	str	r3, [r4, #84]	; 0x54
 8007194:	e7b2      	b.n	80070fc <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8007196:	2002      	movs	r0, #2
 8007198:	e7d0      	b.n	800713c <HAL_SPI_Transmit+0xee>
  __HAL_LOCK(hspi);
 800719a:	2002      	movs	r0, #2
 800719c:	e7d4      	b.n	8007148 <HAL_SPI_Transmit+0xfa>

0800719e <HAL_SPI_TransmitReceive>:
{
 800719e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80071a2:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80071a4:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 80071a8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 80071aa:	2b01      	cmp	r3, #1
{
 80071ac:	4604      	mov	r4, r0
 80071ae:	460d      	mov	r5, r1
 80071b0:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 80071b2:	f000 80e2 	beq.w	800737a <HAL_SPI_TransmitReceive+0x1dc>
 80071b6:	2301      	movs	r3, #1
 80071b8:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80071bc:	f7fe f812 	bl	80051e4 <HAL_GetTick>
  tmp_state           = hspi->State;
 80071c0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 80071c4:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 80071c6:	b2db      	uxtb	r3, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80071c8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80071ca:	4680      	mov	r8, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80071cc:	d00a      	beq.n	80071e4 <HAL_SPI_TransmitReceive+0x46>
 80071ce:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 80071d2:	f040 80d0 	bne.w	8007376 <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80071d6:	68a0      	ldr	r0, [r4, #8]
 80071d8:	2800      	cmp	r0, #0
 80071da:	f040 80cc 	bne.w	8007376 <HAL_SPI_TransmitReceive+0x1d8>
 80071de:	2b04      	cmp	r3, #4
 80071e0:	f040 80c9 	bne.w	8007376 <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80071e4:	2d00      	cmp	r5, #0
 80071e6:	f000 80c4 	beq.w	8007372 <HAL_SPI_TransmitReceive+0x1d4>
 80071ea:	f1b9 0f00 	cmp.w	r9, #0
 80071ee:	f000 80c0 	beq.w	8007372 <HAL_SPI_TransmitReceive+0x1d4>
 80071f2:	2e00      	cmp	r6, #0
 80071f4:	f000 80bd 	beq.w	8007372 <HAL_SPI_TransmitReceive+0x1d4>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80071f8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80071fc:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007200:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007202:	bf1c      	itt	ne
 8007204:	2305      	movne	r3, #5
 8007206:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800720a:	2300      	movs	r3, #0
 800720c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800720e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007212:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007214:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007216:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007218:	681a      	ldr	r2, [r3, #0]
  hspi->RxXferSize  = Size;
 800721a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800721c:	0650      	lsls	r0, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800721e:	bf58      	it	pl
 8007220:	681a      	ldrpl	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007222:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007224:	bf58      	it	pl
 8007226:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
  hspi->TxXferSize  = Size;
 800722a:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 800722c:	bf58      	it	pl
 800722e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007230:	68e2      	ldr	r2, [r4, #12]
 8007232:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8007236:	d158      	bne.n	80072ea <HAL_SPI_TransmitReceive+0x14c>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007238:	b109      	cbz	r1, 800723e <HAL_SPI_TransmitReceive+0xa0>
 800723a:	2e01      	cmp	r6, #1
 800723c:	d107      	bne.n	800724e <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800723e:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007242:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007244:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007246:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007248:	3b01      	subs	r3, #1
 800724a:	b29b      	uxth	r3, r3
 800724c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800724e:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007250:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007252:	b29b      	uxth	r3, r3
 8007254:	b9ab      	cbnz	r3, 8007282 <HAL_SPI_TransmitReceive+0xe4>
 8007256:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007258:	b29b      	uxth	r3, r3
 800725a:	b993      	cbnz	r3, 8007282 <HAL_SPI_TransmitReceive+0xe4>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800725c:	4642      	mov	r2, r8
 800725e:	4639      	mov	r1, r7
 8007260:	4620      	mov	r0, r4
 8007262:	f7ff fe8b 	bl	8006f7c <SPI_EndRxTxTransaction>
 8007266:	2800      	cmp	r0, #0
 8007268:	f040 8081 	bne.w	800736e <HAL_SPI_TransmitReceive+0x1d0>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800726c:	68a3      	ldr	r3, [r4, #8]
 800726e:	2b00      	cmp	r3, #0
 8007270:	d132      	bne.n	80072d8 <HAL_SPI_TransmitReceive+0x13a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007272:	6823      	ldr	r3, [r4, #0]
 8007274:	9001      	str	r0, [sp, #4]
 8007276:	68da      	ldr	r2, [r3, #12]
 8007278:	9201      	str	r2, [sp, #4]
 800727a:	689b      	ldr	r3, [r3, #8]
 800727c:	9301      	str	r3, [sp, #4]
 800727e:	9b01      	ldr	r3, [sp, #4]
 8007280:	e02a      	b.n	80072d8 <HAL_SPI_TransmitReceive+0x13a>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007282:	6822      	ldr	r2, [r4, #0]
 8007284:	6893      	ldr	r3, [r2, #8]
 8007286:	0799      	lsls	r1, r3, #30
 8007288:	d50d      	bpl.n	80072a6 <HAL_SPI_TransmitReceive+0x108>
 800728a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800728c:	b29b      	uxth	r3, r3
 800728e:	b153      	cbz	r3, 80072a6 <HAL_SPI_TransmitReceive+0x108>
 8007290:	b14d      	cbz	r5, 80072a6 <HAL_SPI_TransmitReceive+0x108>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007292:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007294:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007298:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800729a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800729c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800729e:	3b01      	subs	r3, #1
 80072a0:	b29b      	uxth	r3, r3
 80072a2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80072a4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80072a6:	6893      	ldr	r3, [r2, #8]
 80072a8:	07db      	lsls	r3, r3, #31
 80072aa:	d50c      	bpl.n	80072c6 <HAL_SPI_TransmitReceive+0x128>
 80072ac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80072ae:	b29b      	uxth	r3, r3
 80072b0:	b14b      	cbz	r3, 80072c6 <HAL_SPI_TransmitReceive+0x128>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80072b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80072b4:	68d2      	ldr	r2, [r2, #12]
 80072b6:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80072ba:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80072bc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80072be:	3b01      	subs	r3, #1
 80072c0:	b29b      	uxth	r3, r3
 80072c2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80072c4:	2501      	movs	r5, #1
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80072c6:	f7fd ff8d 	bl	80051e4 <HAL_GetTick>
 80072ca:	eba0 0008 	sub.w	r0, r0, r8
 80072ce:	4287      	cmp	r7, r0
 80072d0:	d8be      	bhi.n	8007250 <HAL_SPI_TransmitReceive+0xb2>
 80072d2:	1c7e      	adds	r6, r7, #1
 80072d4:	d0bc      	beq.n	8007250 <HAL_SPI_TransmitReceive+0xb2>
        errorcode = HAL_TIMEOUT;
 80072d6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80072d8:	2301      	movs	r3, #1
 80072da:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80072de:	2300      	movs	r3, #0
 80072e0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80072e4:	b003      	add	sp, #12
 80072e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80072ea:	b109      	cbz	r1, 80072f0 <HAL_SPI_TransmitReceive+0x152>
 80072ec:	2e01      	cmp	r6, #1
 80072ee:	d108      	bne.n	8007302 <HAL_SPI_TransmitReceive+0x164>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80072f0:	782a      	ldrb	r2, [r5, #0]
 80072f2:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80072f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80072f6:	3301      	adds	r3, #1
 80072f8:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80072fa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80072fc:	3b01      	subs	r3, #1
 80072fe:	b29b      	uxth	r3, r3
 8007300:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007302:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007304:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007306:	b29b      	uxth	r3, r3
 8007308:	b91b      	cbnz	r3, 8007312 <HAL_SPI_TransmitReceive+0x174>
 800730a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800730c:	b29b      	uxth	r3, r3
 800730e:	2b00      	cmp	r3, #0
 8007310:	d0a4      	beq.n	800725c <HAL_SPI_TransmitReceive+0xbe>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007312:	6822      	ldr	r2, [r4, #0]
 8007314:	6893      	ldr	r3, [r2, #8]
 8007316:	0798      	lsls	r0, r3, #30
 8007318:	d50e      	bpl.n	8007338 <HAL_SPI_TransmitReceive+0x19a>
 800731a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800731c:	b29b      	uxth	r3, r3
 800731e:	b15b      	cbz	r3, 8007338 <HAL_SPI_TransmitReceive+0x19a>
 8007320:	b155      	cbz	r5, 8007338 <HAL_SPI_TransmitReceive+0x19a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007322:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007324:	781b      	ldrb	r3, [r3, #0]
 8007326:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007328:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800732a:	3301      	adds	r3, #1
 800732c:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800732e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007330:	3b01      	subs	r3, #1
 8007332:	b29b      	uxth	r3, r3
 8007334:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007336:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007338:	6822      	ldr	r2, [r4, #0]
 800733a:	6893      	ldr	r3, [r2, #8]
 800733c:	07d9      	lsls	r1, r3, #31
 800733e:	d50d      	bpl.n	800735c <HAL_SPI_TransmitReceive+0x1be>
 8007340:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007342:	b29b      	uxth	r3, r3
 8007344:	b153      	cbz	r3, 800735c <HAL_SPI_TransmitReceive+0x1be>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007346:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007348:	68d2      	ldr	r2, [r2, #12]
 800734a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800734c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800734e:	3301      	adds	r3, #1
 8007350:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007352:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007354:	3b01      	subs	r3, #1
 8007356:	b29b      	uxth	r3, r3
 8007358:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800735a:	2501      	movs	r5, #1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800735c:	f7fd ff42 	bl	80051e4 <HAL_GetTick>
 8007360:	eba0 0008 	sub.w	r0, r0, r8
 8007364:	4287      	cmp	r7, r0
 8007366:	d8cd      	bhi.n	8007304 <HAL_SPI_TransmitReceive+0x166>
 8007368:	1c7b      	adds	r3, r7, #1
 800736a:	d0cb      	beq.n	8007304 <HAL_SPI_TransmitReceive+0x166>
 800736c:	e7b3      	b.n	80072d6 <HAL_SPI_TransmitReceive+0x138>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800736e:	2320      	movs	r3, #32
 8007370:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007372:	2001      	movs	r0, #1
 8007374:	e7b0      	b.n	80072d8 <HAL_SPI_TransmitReceive+0x13a>
    errorcode = HAL_BUSY;
 8007376:	2002      	movs	r0, #2
 8007378:	e7ae      	b.n	80072d8 <HAL_SPI_TransmitReceive+0x13a>
  __HAL_LOCK(hspi);
 800737a:	2002      	movs	r0, #2
 800737c:	e7b2      	b.n	80072e4 <HAL_SPI_TransmitReceive+0x146>

0800737e <HAL_SPI_Receive>:
{
 800737e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007382:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007384:	6843      	ldr	r3, [r0, #4]
 8007386:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800738a:	4604      	mov	r4, r0
 800738c:	4688      	mov	r8, r1
 800738e:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007390:	d10c      	bne.n	80073ac <HAL_SPI_Receive+0x2e>
 8007392:	6883      	ldr	r3, [r0, #8]
 8007394:	b953      	cbnz	r3, 80073ac <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007396:	2304      	movs	r3, #4
 8007398:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800739c:	4613      	mov	r3, r2
 800739e:	9500      	str	r5, [sp, #0]
 80073a0:	460a      	mov	r2, r1
 80073a2:	f7ff fefc 	bl	800719e <HAL_SPI_TransmitReceive>
}
 80073a6:	b002      	add	sp, #8
 80073a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 80073ac:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 80073b0:	2b01      	cmp	r3, #1
 80073b2:	d079      	beq.n	80074a8 <HAL_SPI_Receive+0x12a>
 80073b4:	2301      	movs	r3, #1
 80073b6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 80073ba:	f7fd ff13 	bl	80051e4 <HAL_GetTick>
 80073be:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80073c0:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 80073c4:	b2c0      	uxtb	r0, r0
 80073c6:	2801      	cmp	r0, #1
 80073c8:	d16c      	bne.n	80074a4 <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 80073ca:	f1b8 0f00 	cmp.w	r8, #0
 80073ce:	d057      	beq.n	8007480 <HAL_SPI_Receive+0x102>
 80073d0:	2f00      	cmp	r7, #0
 80073d2:	d055      	beq.n	8007480 <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80073d4:	2304      	movs	r3, #4
 80073d6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80073da:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 80073dc:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80073de:	2300      	movs	r3, #0
 80073e0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80073e2:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->RxXferCount = Size;
 80073e4:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferSize  = 0U;
 80073e6:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 80073e8:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxISR       = NULL;
 80073ea:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 80073ee:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80073f0:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80073f4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 80073f8:	bf02      	ittt	eq
 80073fa:	681a      	ldreq	r2, [r3, #0]
 80073fc:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 8007400:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007402:	681a      	ldr	r2, [r3, #0]
 8007404:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007406:	bf5e      	ittt	pl
 8007408:	681a      	ldrpl	r2, [r3, #0]
 800740a:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800740e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007410:	68e3      	ldr	r3, [r4, #12]
 8007412:	b1f3      	cbz	r3, 8007452 <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 8007414:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007416:	b29b      	uxth	r3, r3
 8007418:	b1fb      	cbz	r3, 800745a <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800741a:	6823      	ldr	r3, [r4, #0]
 800741c:	689a      	ldr	r2, [r3, #8]
 800741e:	07d2      	lsls	r2, r2, #31
 8007420:	d535      	bpl.n	800748e <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007422:	68da      	ldr	r2, [r3, #12]
 8007424:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007426:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800742a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800742c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800742e:	3b01      	subs	r3, #1
 8007430:	b29b      	uxth	r3, r3
 8007432:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007434:	e7ee      	b.n	8007414 <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007436:	6823      	ldr	r3, [r4, #0]
 8007438:	689a      	ldr	r2, [r3, #8]
 800743a:	07d0      	lsls	r0, r2, #31
 800743c:	d518      	bpl.n	8007470 <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800743e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007440:	7b1b      	ldrb	r3, [r3, #12]
 8007442:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007444:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007446:	3301      	adds	r3, #1
 8007448:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800744a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800744c:	3b01      	subs	r3, #1
 800744e:	b29b      	uxth	r3, r3
 8007450:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8007452:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007454:	b29b      	uxth	r3, r3
 8007456:	2b00      	cmp	r3, #0
 8007458:	d1ed      	bne.n	8007436 <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800745a:	4632      	mov	r2, r6
 800745c:	4629      	mov	r1, r5
 800745e:	4620      	mov	r0, r4
 8007460:	f7ff fd62 	bl	8006f28 <SPI_EndRxTransaction>
 8007464:	b9d8      	cbnz	r0, 800749e <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007466:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007468:	3000      	adds	r0, #0
 800746a:	bf18      	it	ne
 800746c:	2001      	movne	r0, #1
error :
 800746e:	e007      	b.n	8007480 <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007470:	f7fd feb8 	bl	80051e4 <HAL_GetTick>
 8007474:	1b80      	subs	r0, r0, r6
 8007476:	42a8      	cmp	r0, r5
 8007478:	d3eb      	bcc.n	8007452 <HAL_SPI_Receive+0xd4>
 800747a:	1c69      	adds	r1, r5, #1
 800747c:	d0e9      	beq.n	8007452 <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 800747e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007480:	2301      	movs	r3, #1
 8007482:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007486:	2300      	movs	r3, #0
 8007488:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 800748c:	e78b      	b.n	80073a6 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800748e:	f7fd fea9 	bl	80051e4 <HAL_GetTick>
 8007492:	1b80      	subs	r0, r0, r6
 8007494:	42a8      	cmp	r0, r5
 8007496:	d3bd      	bcc.n	8007414 <HAL_SPI_Receive+0x96>
 8007498:	1c6b      	adds	r3, r5, #1
 800749a:	d0bb      	beq.n	8007414 <HAL_SPI_Receive+0x96>
 800749c:	e7ef      	b.n	800747e <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800749e:	2320      	movs	r3, #32
 80074a0:	6563      	str	r3, [r4, #84]	; 0x54
 80074a2:	e7e0      	b.n	8007466 <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 80074a4:	2002      	movs	r0, #2
 80074a6:	e7eb      	b.n	8007480 <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 80074a8:	2002      	movs	r0, #2
 80074aa:	e77c      	b.n	80073a6 <HAL_SPI_Receive+0x28>

080074ac <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80074ac:	6a03      	ldr	r3, [r0, #32]
 80074ae:	f023 0301 	bic.w	r3, r3, #1
 80074b2:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80074b4:	6a03      	ldr	r3, [r0, #32]
{
 80074b6:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80074b8:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80074ba:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80074bc:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 80074be:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 80074c2:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 80074c4:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 80074c6:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 80074ca:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 80074cc:	4d0e      	ldr	r5, [pc, #56]	; (8007508 <TIM_OC1_SetConfig+0x5c>)
 80074ce:	42a8      	cmp	r0, r5
 80074d0:	d002      	beq.n	80074d8 <TIM_OC1_SetConfig+0x2c>
 80074d2:	4e0e      	ldr	r6, [pc, #56]	; (800750c <TIM_OC1_SetConfig+0x60>)
 80074d4:	42b0      	cmp	r0, r6
 80074d6:	d110      	bne.n	80074fa <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 80074d8:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 80074da:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 80074de:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80074e0:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 80074e2:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80074e6:	d002      	beq.n	80074ee <TIM_OC1_SetConfig+0x42>
 80074e8:	4d08      	ldr	r5, [pc, #32]	; (800750c <TIM_OC1_SetConfig+0x60>)
 80074ea:	42a8      	cmp	r0, r5
 80074ec:	d105      	bne.n	80074fa <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80074ee:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 80074f2:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 80074f6:	4335      	orrs	r5, r6
 80074f8:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80074fa:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80074fc:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80074fe:	684a      	ldr	r2, [r1, #4]
 8007500:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007502:	6203      	str	r3, [r0, #32]
}
 8007504:	bd70      	pop	{r4, r5, r6, pc}
 8007506:	bf00      	nop
 8007508:	40010000 	.word	0x40010000
 800750c:	40010400 	.word	0x40010400

08007510 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8007510:	6a03      	ldr	r3, [r0, #32]
 8007512:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007516:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007518:	6a03      	ldr	r3, [r0, #32]
{
 800751a:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800751c:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800751e:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007520:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8007522:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8007526:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8007528:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800752a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800752e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8007532:	4d11      	ldr	r5, [pc, #68]	; (8007578 <TIM_OC3_SetConfig+0x68>)
 8007534:	42a8      	cmp	r0, r5
 8007536:	d003      	beq.n	8007540 <TIM_OC3_SetConfig+0x30>
 8007538:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800753c:	42a8      	cmp	r0, r5
 800753e:	d114      	bne.n	800756a <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007540:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8007542:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007546:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800754a:	4d0b      	ldr	r5, [pc, #44]	; (8007578 <TIM_OC3_SetConfig+0x68>)
 800754c:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800754e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007552:	d003      	beq.n	800755c <TIM_OC3_SetConfig+0x4c>
 8007554:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8007558:	42a8      	cmp	r0, r5
 800755a:	d106      	bne.n	800756a <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800755c:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8007560:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8007564:	4335      	orrs	r5, r6
 8007566:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800756a:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800756c:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800756e:	684a      	ldr	r2, [r1, #4]
 8007570:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007572:	6203      	str	r3, [r0, #32]
}
 8007574:	bd70      	pop	{r4, r5, r6, pc}
 8007576:	bf00      	nop
 8007578:	40010000 	.word	0x40010000

0800757c <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800757c:	6a03      	ldr	r3, [r0, #32]
 800757e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007582:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007584:	6a03      	ldr	r3, [r0, #32]
{
 8007586:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007588:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800758a:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800758c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800758e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007592:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007596:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8007598:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800759c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80075a0:	4d08      	ldr	r5, [pc, #32]	; (80075c4 <TIM_OC4_SetConfig+0x48>)
 80075a2:	42a8      	cmp	r0, r5
 80075a4:	d003      	beq.n	80075ae <TIM_OC4_SetConfig+0x32>
 80075a6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80075aa:	42a8      	cmp	r0, r5
 80075ac:	d104      	bne.n	80075b8 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80075ae:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 80075b0:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80075b4:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80075b8:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80075ba:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 80075bc:	684a      	ldr	r2, [r1, #4]
 80075be:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80075c0:	6203      	str	r3, [r0, #32]
}
 80075c2:	bd30      	pop	{r4, r5, pc}
 80075c4:	40010000 	.word	0x40010000

080075c8 <HAL_TIM_Base_Start_IT>:
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80075c8:	6803      	ldr	r3, [r0, #0]
 80075ca:	68da      	ldr	r2, [r3, #12]
 80075cc:	f042 0201 	orr.w	r2, r2, #1
 80075d0:	60da      	str	r2, [r3, #12]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80075d2:	689a      	ldr	r2, [r3, #8]
 80075d4:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80075d8:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 80075da:	bf1e      	ittt	ne
 80075dc:	681a      	ldrne	r2, [r3, #0]
 80075de:	f042 0201 	orrne.w	r2, r2, #1
 80075e2:	601a      	strne	r2, [r3, #0]
}
 80075e4:	2000      	movs	r0, #0
 80075e6:	4770      	bx	lr

080075e8 <HAL_TIM_PWM_MspInit>:
 80075e8:	4770      	bx	lr

080075ea <HAL_TIM_OC_DelayElapsedCallback>:
 80075ea:	4770      	bx	lr

080075ec <HAL_TIM_IC_CaptureCallback>:
 80075ec:	4770      	bx	lr

080075ee <HAL_TIM_PWM_PulseFinishedCallback>:
 80075ee:	4770      	bx	lr

080075f0 <TIM_DMADelayPulseCplt>:
{
 80075f0:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80075f2:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80075f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 80075f6:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80075f8:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 80075fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80075fe:	d106      	bne.n	800760e <TIM_DMADelayPulseCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007600:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007602:	4620      	mov	r0, r4
 8007604:	f7ff fff3 	bl	80075ee <HAL_TIM_PWM_PulseFinishedCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007608:	2300      	movs	r3, #0
 800760a:	7723      	strb	r3, [r4, #28]
}
 800760c:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 800760e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007610:	4283      	cmp	r3, r0
 8007612:	d101      	bne.n	8007618 <TIM_DMADelayPulseCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007614:	2302      	movs	r3, #2
 8007616:	e7f3      	b.n	8007600 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 8007618:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800761a:	4283      	cmp	r3, r0
 800761c:	d101      	bne.n	8007622 <TIM_DMADelayPulseCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800761e:	2304      	movs	r3, #4
 8007620:	e7ee      	b.n	8007600 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8007622:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007624:	4283      	cmp	r3, r0
 8007626:	d1ec      	bne.n	8007602 <TIM_DMADelayPulseCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007628:	2308      	movs	r3, #8
 800762a:	e7e9      	b.n	8007600 <TIM_DMADelayPulseCplt+0x10>

0800762c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 800762c:	4770      	bx	lr

0800762e <TIM_DMADelayPulseHalfCplt>:
{
 800762e:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007630:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8007632:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 8007634:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8007636:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 8007638:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 800763c:	d106      	bne.n	800764c <TIM_DMADelayPulseHalfCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800763e:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
 8007640:	4620      	mov	r0, r4
 8007642:	f7ff fff3 	bl	800762c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007646:	2300      	movs	r3, #0
 8007648:	7723      	strb	r3, [r4, #28]
}
 800764a:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 800764c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800764e:	4283      	cmp	r3, r0
 8007650:	d101      	bne.n	8007656 <TIM_DMADelayPulseHalfCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007652:	2302      	movs	r3, #2
 8007654:	e7f3      	b.n	800763e <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 8007656:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007658:	4283      	cmp	r3, r0
 800765a:	d101      	bne.n	8007660 <TIM_DMADelayPulseHalfCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800765c:	2304      	movs	r3, #4
 800765e:	e7ee      	b.n	800763e <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8007660:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007662:	4283      	cmp	r3, r0
 8007664:	d1ec      	bne.n	8007640 <TIM_DMADelayPulseHalfCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007666:	2308      	movs	r3, #8
 8007668:	e7e9      	b.n	800763e <TIM_DMADelayPulseHalfCplt+0x10>

0800766a <HAL_TIM_TriggerCallback>:
 800766a:	4770      	bx	lr

0800766c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800766c:	6803      	ldr	r3, [r0, #0]
 800766e:	691a      	ldr	r2, [r3, #16]
 8007670:	0791      	lsls	r1, r2, #30
{
 8007672:	b510      	push	{r4, lr}
 8007674:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007676:	d50e      	bpl.n	8007696 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007678:	68da      	ldr	r2, [r3, #12]
 800767a:	0792      	lsls	r2, r2, #30
 800767c:	d50b      	bpl.n	8007696 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800767e:	f06f 0202 	mvn.w	r2, #2
 8007682:	611a      	str	r2, [r3, #16]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007684:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007686:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007688:	079b      	lsls	r3, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800768a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800768c:	d077      	beq.n	800777e <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 800768e:	f7ff ffad 	bl	80075ec <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007692:	2300      	movs	r3, #0
 8007694:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8007696:	6823      	ldr	r3, [r4, #0]
 8007698:	691a      	ldr	r2, [r3, #16]
 800769a:	0750      	lsls	r0, r2, #29
 800769c:	d510      	bpl.n	80076c0 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800769e:	68da      	ldr	r2, [r3, #12]
 80076a0:	0751      	lsls	r1, r2, #29
 80076a2:	d50d      	bpl.n	80076c0 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80076a4:	f06f 0204 	mvn.w	r2, #4
 80076a8:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80076aa:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80076ac:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80076ae:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80076b2:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 80076b4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80076b6:	d068      	beq.n	800778a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80076b8:	f7ff ff98 	bl	80075ec <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80076bc:	2300      	movs	r3, #0
 80076be:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80076c0:	6823      	ldr	r3, [r4, #0]
 80076c2:	691a      	ldr	r2, [r3, #16]
 80076c4:	0712      	lsls	r2, r2, #28
 80076c6:	d50f      	bpl.n	80076e8 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80076c8:	68da      	ldr	r2, [r3, #12]
 80076ca:	0710      	lsls	r0, r2, #28
 80076cc:	d50c      	bpl.n	80076e8 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80076ce:	f06f 0208 	mvn.w	r2, #8
 80076d2:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80076d4:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80076d6:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80076d8:	0799      	lsls	r1, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80076da:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 80076dc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80076de:	d05a      	beq.n	8007796 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80076e0:	f7ff ff84 	bl	80075ec <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80076e4:	2300      	movs	r3, #0
 80076e6:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80076e8:	6823      	ldr	r3, [r4, #0]
 80076ea:	691a      	ldr	r2, [r3, #16]
 80076ec:	06d2      	lsls	r2, r2, #27
 80076ee:	d510      	bpl.n	8007712 <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80076f0:	68da      	ldr	r2, [r3, #12]
 80076f2:	06d0      	lsls	r0, r2, #27
 80076f4:	d50d      	bpl.n	8007712 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80076f6:	f06f 0210 	mvn.w	r2, #16
 80076fa:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80076fc:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80076fe:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007700:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007704:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8007706:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007708:	d04b      	beq.n	80077a2 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800770a:	f7ff ff6f 	bl	80075ec <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800770e:	2300      	movs	r3, #0
 8007710:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8007712:	6823      	ldr	r3, [r4, #0]
 8007714:	691a      	ldr	r2, [r3, #16]
 8007716:	07d1      	lsls	r1, r2, #31
 8007718:	d508      	bpl.n	800772c <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800771a:	68da      	ldr	r2, [r3, #12]
 800771c:	07d2      	lsls	r2, r2, #31
 800771e:	d505      	bpl.n	800772c <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8007720:	f06f 0201 	mvn.w	r2, #1
 8007724:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8007726:	4620      	mov	r0, r4
 8007728:	f7fa fd2a 	bl	8002180 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800772c:	6823      	ldr	r3, [r4, #0]
 800772e:	691a      	ldr	r2, [r3, #16]
 8007730:	0610      	lsls	r0, r2, #24
 8007732:	d508      	bpl.n	8007746 <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8007734:	68da      	ldr	r2, [r3, #12]
 8007736:	0611      	lsls	r1, r2, #24
 8007738:	d505      	bpl.n	8007746 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800773a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800773e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007740:	4620      	mov	r0, r4
 8007742:	f000 faea 	bl	8007d1a <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8007746:	6823      	ldr	r3, [r4, #0]
 8007748:	691a      	ldr	r2, [r3, #16]
 800774a:	0652      	lsls	r2, r2, #25
 800774c:	d508      	bpl.n	8007760 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800774e:	68da      	ldr	r2, [r3, #12]
 8007750:	0650      	lsls	r0, r2, #25
 8007752:	d505      	bpl.n	8007760 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007754:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8007758:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800775a:	4620      	mov	r0, r4
 800775c:	f7ff ff85 	bl	800766a <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007760:	6823      	ldr	r3, [r4, #0]
 8007762:	691a      	ldr	r2, [r3, #16]
 8007764:	0691      	lsls	r1, r2, #26
 8007766:	d522      	bpl.n	80077ae <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007768:	68da      	ldr	r2, [r3, #12]
 800776a:	0692      	lsls	r2, r2, #26
 800776c:	d51f      	bpl.n	80077ae <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800776e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8007772:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007774:	611a      	str	r2, [r3, #16]
}
 8007776:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800777a:	f000 bacd 	b.w	8007d18 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800777e:	f7ff ff34 	bl	80075ea <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007782:	4620      	mov	r0, r4
 8007784:	f7ff ff33 	bl	80075ee <HAL_TIM_PWM_PulseFinishedCallback>
 8007788:	e783      	b.n	8007692 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800778a:	f7ff ff2e 	bl	80075ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800778e:	4620      	mov	r0, r4
 8007790:	f7ff ff2d 	bl	80075ee <HAL_TIM_PWM_PulseFinishedCallback>
 8007794:	e792      	b.n	80076bc <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007796:	f7ff ff28 	bl	80075ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800779a:	4620      	mov	r0, r4
 800779c:	f7ff ff27 	bl	80075ee <HAL_TIM_PWM_PulseFinishedCallback>
 80077a0:	e7a0      	b.n	80076e4 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80077a2:	f7ff ff22 	bl	80075ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80077a6:	4620      	mov	r0, r4
 80077a8:	f7ff ff21 	bl	80075ee <HAL_TIM_PWM_PulseFinishedCallback>
 80077ac:	e7af      	b.n	800770e <HAL_TIM_IRQHandler+0xa2>
}
 80077ae:	bd10      	pop	{r4, pc}

080077b0 <HAL_TIM_ErrorCallback>:
 80077b0:	4770      	bx	lr

080077b2 <TIM_DMAError>:
{
 80077b2:	b508      	push	{r3, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80077b4:	6b80      	ldr	r0, [r0, #56]	; 0x38
  htim->State = HAL_TIM_STATE_READY;
 80077b6:	2301      	movs	r3, #1
 80077b8:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  HAL_TIM_ErrorCallback(htim);
 80077bc:	f7ff fff8 	bl	80077b0 <HAL_TIM_ErrorCallback>
}
 80077c0:	bd08      	pop	{r3, pc}
	...

080077c4 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80077c4:	4a30      	ldr	r2, [pc, #192]	; (8007888 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80077c6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80077c8:	4290      	cmp	r0, r2
 80077ca:	d012      	beq.n	80077f2 <TIM_Base_SetConfig+0x2e>
 80077cc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80077d0:	d00f      	beq.n	80077f2 <TIM_Base_SetConfig+0x2e>
 80077d2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80077d6:	4290      	cmp	r0, r2
 80077d8:	d00b      	beq.n	80077f2 <TIM_Base_SetConfig+0x2e>
 80077da:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80077de:	4290      	cmp	r0, r2
 80077e0:	d007      	beq.n	80077f2 <TIM_Base_SetConfig+0x2e>
 80077e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80077e6:	4290      	cmp	r0, r2
 80077e8:	d003      	beq.n	80077f2 <TIM_Base_SetConfig+0x2e>
 80077ea:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80077ee:	4290      	cmp	r0, r2
 80077f0:	d119      	bne.n	8007826 <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 80077f2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80077f4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80077f8:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80077fa:	4a23      	ldr	r2, [pc, #140]	; (8007888 <TIM_Base_SetConfig+0xc4>)
 80077fc:	4290      	cmp	r0, r2
 80077fe:	d029      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 8007800:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007804:	d026      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 8007806:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800780a:	4290      	cmp	r0, r2
 800780c:	d022      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 800780e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007812:	4290      	cmp	r0, r2
 8007814:	d01e      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 8007816:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800781a:	4290      	cmp	r0, r2
 800781c:	d01a      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 800781e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007822:	4290      	cmp	r0, r2
 8007824:	d016      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 8007826:	4a19      	ldr	r2, [pc, #100]	; (800788c <TIM_Base_SetConfig+0xc8>)
 8007828:	4290      	cmp	r0, r2
 800782a:	d013      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 800782c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007830:	4290      	cmp	r0, r2
 8007832:	d00f      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 8007834:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007838:	4290      	cmp	r0, r2
 800783a:	d00b      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 800783c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8007840:	4290      	cmp	r0, r2
 8007842:	d007      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 8007844:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007848:	4290      	cmp	r0, r2
 800784a:	d003      	beq.n	8007854 <TIM_Base_SetConfig+0x90>
 800784c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007850:	4290      	cmp	r0, r2
 8007852:	d103      	bne.n	800785c <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007854:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8007856:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800785a:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800785c:	694a      	ldr	r2, [r1, #20]
 800785e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007862:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8007864:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007866:	688b      	ldr	r3, [r1, #8]
 8007868:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800786a:	680b      	ldr	r3, [r1, #0]
 800786c:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800786e:	4b06      	ldr	r3, [pc, #24]	; (8007888 <TIM_Base_SetConfig+0xc4>)
 8007870:	4298      	cmp	r0, r3
 8007872:	d003      	beq.n	800787c <TIM_Base_SetConfig+0xb8>
 8007874:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007878:	4298      	cmp	r0, r3
 800787a:	d101      	bne.n	8007880 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 800787c:	690b      	ldr	r3, [r1, #16]
 800787e:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8007880:	2301      	movs	r3, #1
 8007882:	6143      	str	r3, [r0, #20]
}
 8007884:	4770      	bx	lr
 8007886:	bf00      	nop
 8007888:	40010000 	.word	0x40010000
 800788c:	40014000 	.word	0x40014000

08007890 <HAL_TIM_Base_Init>:
{
 8007890:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007892:	4604      	mov	r4, r0
 8007894:	b1a0      	cbz	r0, 80078c0 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007896:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800789a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800789e:	b91b      	cbnz	r3, 80078a8 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80078a0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80078a4:	f7fa feac 	bl	8002600 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80078a8:	2302      	movs	r3, #2
 80078aa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80078ae:	6820      	ldr	r0, [r4, #0]
 80078b0:	1d21      	adds	r1, r4, #4
 80078b2:	f7ff ff87 	bl	80077c4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80078b6:	2301      	movs	r3, #1
 80078b8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80078bc:	2000      	movs	r0, #0
}
 80078be:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80078c0:	2001      	movs	r0, #1
 80078c2:	e7fc      	b.n	80078be <HAL_TIM_Base_Init+0x2e>

080078c4 <HAL_TIM_PWM_Init>:
{
 80078c4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80078c6:	4604      	mov	r4, r0
 80078c8:	b1a0      	cbz	r0, 80078f4 <HAL_TIM_PWM_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80078ca:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80078ce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80078d2:	b91b      	cbnz	r3, 80078dc <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80078d4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 80078d8:	f7ff fe86 	bl	80075e8 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80078dc:	2302      	movs	r3, #2
 80078de:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80078e2:	6820      	ldr	r0, [r4, #0]
 80078e4:	1d21      	adds	r1, r4, #4
 80078e6:	f7ff ff6d 	bl	80077c4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80078ea:	2301      	movs	r3, #1
 80078ec:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80078f0:	2000      	movs	r0, #0
}
 80078f2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80078f4:	2001      	movs	r0, #1
 80078f6:	e7fc      	b.n	80078f2 <HAL_TIM_PWM_Init+0x2e>

080078f8 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80078f8:	6a03      	ldr	r3, [r0, #32]
 80078fa:	f023 0310 	bic.w	r3, r3, #16
 80078fe:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8007900:	6a03      	ldr	r3, [r0, #32]
{
 8007902:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 8007904:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8007906:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007908:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800790a:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800790e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8007912:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8007914:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8007918:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800791c:	4d10      	ldr	r5, [pc, #64]	; (8007960 <TIM_OC2_SetConfig+0x68>)
 800791e:	42a8      	cmp	r0, r5
 8007920:	d003      	beq.n	800792a <TIM_OC2_SetConfig+0x32>
 8007922:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8007926:	42a8      	cmp	r0, r5
 8007928:	d114      	bne.n	8007954 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800792a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800792c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007930:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007934:	4d0a      	ldr	r5, [pc, #40]	; (8007960 <TIM_OC2_SetConfig+0x68>)
 8007936:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 8007938:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800793c:	d003      	beq.n	8007946 <TIM_OC2_SetConfig+0x4e>
 800793e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8007942:	42a8      	cmp	r0, r5
 8007944:	d106      	bne.n	8007954 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007946:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800794a:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800794e:	4335      	orrs	r5, r6
 8007950:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 8007954:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8007956:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8007958:	684a      	ldr	r2, [r1, #4]
 800795a:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800795c:	6203      	str	r3, [r0, #32]
}
 800795e:	bd70      	pop	{r4, r5, r6, pc}
 8007960:	40010000 	.word	0x40010000

08007964 <HAL_TIM_PWM_ConfigChannel>:
{
 8007964:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 8007966:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800796a:	2b01      	cmp	r3, #1
{
 800796c:	4604      	mov	r4, r0
 800796e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 8007972:	d025      	beq.n	80079c0 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8007974:	2301      	movs	r3, #1
 8007976:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 800797a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 800797e:	2a0c      	cmp	r2, #12
 8007980:	d818      	bhi.n	80079b4 <HAL_TIM_PWM_ConfigChannel+0x50>
 8007982:	e8df f002 	tbb	[pc, r2]
 8007986:	1707      	.short	0x1707
 8007988:	171e1717 	.word	0x171e1717
 800798c:	172f1717 	.word	0x172f1717
 8007990:	1717      	.short	0x1717
 8007992:	40          	.byte	0x40
 8007993:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8007994:	6820      	ldr	r0, [r4, #0]
 8007996:	f7ff fd89 	bl	80074ac <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800799a:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800799c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800799e:	699a      	ldr	r2, [r3, #24]
 80079a0:	f042 0208 	orr.w	r2, r2, #8
 80079a4:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80079a6:	699a      	ldr	r2, [r3, #24]
 80079a8:	f022 0204 	bic.w	r2, r2, #4
 80079ac:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80079ae:	699a      	ldr	r2, [r3, #24]
 80079b0:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80079b2:	619a      	str	r2, [r3, #24]
  htim->State = HAL_TIM_STATE_READY;
 80079b4:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 80079b6:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 80079b8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 80079bc:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 80079c0:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80079c2:	6820      	ldr	r0, [r4, #0]
 80079c4:	f7ff ff98 	bl	80078f8 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80079c8:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80079ca:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80079cc:	699a      	ldr	r2, [r3, #24]
 80079ce:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80079d2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 80079d4:	699a      	ldr	r2, [r3, #24]
 80079d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80079da:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80079dc:	699a      	ldr	r2, [r3, #24]
 80079de:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80079e2:	e7e6      	b.n	80079b2 <HAL_TIM_PWM_ConfigChannel+0x4e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80079e4:	6820      	ldr	r0, [r4, #0]
 80079e6:	f7ff fd93 	bl	8007510 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80079ea:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80079ec:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80079ee:	69da      	ldr	r2, [r3, #28]
 80079f0:	f042 0208 	orr.w	r2, r2, #8
 80079f4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80079f6:	69da      	ldr	r2, [r3, #28]
 80079f8:	f022 0204 	bic.w	r2, r2, #4
 80079fc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80079fe:	69da      	ldr	r2, [r3, #28]
 8007a00:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8007a02:	61da      	str	r2, [r3, #28]
      break;
 8007a04:	e7d6      	b.n	80079b4 <HAL_TIM_PWM_ConfigChannel+0x50>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8007a06:	6820      	ldr	r0, [r4, #0]
 8007a08:	f7ff fdb8 	bl	800757c <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8007a0c:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8007a0e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8007a10:	69da      	ldr	r2, [r3, #28]
 8007a12:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007a16:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8007a18:	69da      	ldr	r2, [r3, #28]
 8007a1a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007a1e:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8007a20:	69da      	ldr	r2, [r3, #28]
 8007a22:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8007a26:	e7ec      	b.n	8007a02 <HAL_TIM_PWM_ConfigChannel+0x9e>

08007a28 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007a28:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007a2a:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007a2c:	430a      	orrs	r2, r1
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007a2e:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007a32:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 8007a36:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007a38:	6083      	str	r3, [r0, #8]
}
 8007a3a:	bd10      	pop	{r4, pc}

08007a3c <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 8007a3c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007a40:	2b01      	cmp	r3, #1
{
 8007a42:	b570      	push	{r4, r5, r6, lr}
 8007a44:	4604      	mov	r4, r0
 8007a46:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 8007a4a:	d019      	beq.n	8007a80 <HAL_TIM_ConfigClockSource+0x44>
  htim->State = HAL_TIM_STATE_BUSY;
 8007a4c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  tmpsmcr = htim->Instance->SMCR;
 8007a50:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(htim);
 8007a52:	2301      	movs	r3, #1
 8007a54:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 8007a58:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007a5a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007a5e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 8007a62:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 8007a64:	680b      	ldr	r3, [r1, #0]
 8007a66:	2b40      	cmp	r3, #64	; 0x40
 8007a68:	d065      	beq.n	8007b36 <HAL_TIM_ConfigClockSource+0xfa>
 8007a6a:	d815      	bhi.n	8007a98 <HAL_TIM_ConfigClockSource+0x5c>
 8007a6c:	2b10      	cmp	r3, #16
 8007a6e:	d00c      	beq.n	8007a8a <HAL_TIM_ConfigClockSource+0x4e>
 8007a70:	d807      	bhi.n	8007a82 <HAL_TIM_ConfigClockSource+0x46>
 8007a72:	b153      	cbz	r3, 8007a8a <HAL_TIM_ConfigClockSource+0x4e>
  htim->State = HAL_TIM_STATE_READY;
 8007a74:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 8007a76:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8007a78:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8007a7c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 8007a80:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 8007a82:	2b20      	cmp	r3, #32
 8007a84:	d001      	beq.n	8007a8a <HAL_TIM_ConfigClockSource+0x4e>
 8007a86:	2b30      	cmp	r3, #48	; 0x30
 8007a88:	d1f4      	bne.n	8007a74 <HAL_TIM_ConfigClockSource+0x38>
  tmpsmcr = TIMx->SMCR;
 8007a8a:	6882      	ldr	r2, [r0, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007a8c:	f043 0307 	orr.w	r3, r3, #7
  tmpsmcr &= ~TIM_SMCR_TS;
 8007a90:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007a94:	4313      	orrs	r3, r2
 8007a96:	e01a      	b.n	8007ace <HAL_TIM_ConfigClockSource+0x92>
  switch (sClockSourceConfig->ClockSource)
 8007a98:	2b60      	cmp	r3, #96	; 0x60
 8007a9a:	d034      	beq.n	8007b06 <HAL_TIM_ConfigClockSource+0xca>
 8007a9c:	d819      	bhi.n	8007ad2 <HAL_TIM_ConfigClockSource+0x96>
 8007a9e:	2b50      	cmp	r3, #80	; 0x50
 8007aa0:	d1e8      	bne.n	8007a74 <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007aa2:	684a      	ldr	r2, [r1, #4]
 8007aa4:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 8007aa6:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007aa8:	6a05      	ldr	r5, [r0, #32]
 8007aaa:	f025 0501 	bic.w	r5, r5, #1
 8007aae:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007ab0:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007ab2:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007ab6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007aba:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8007abe:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8007ac0:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8007ac2:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8007ac4:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8007ac6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007aca:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 8007ace:	6083      	str	r3, [r0, #8]
 8007ad0:	e7d0      	b.n	8007a74 <HAL_TIM_ConfigClockSource+0x38>
  switch (sClockSourceConfig->ClockSource)
 8007ad2:	2b70      	cmp	r3, #112	; 0x70
 8007ad4:	d00c      	beq.n	8007af0 <HAL_TIM_ConfigClockSource+0xb4>
 8007ad6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ada:	d1cb      	bne.n	8007a74 <HAL_TIM_ConfigClockSource+0x38>
      TIM_ETR_SetConfig(htim->Instance,
 8007adc:	68cb      	ldr	r3, [r1, #12]
 8007ade:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8007ae2:	f7ff ffa1 	bl	8007a28 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007ae6:	6822      	ldr	r2, [r4, #0]
 8007ae8:	6893      	ldr	r3, [r2, #8]
 8007aea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007aee:	e008      	b.n	8007b02 <HAL_TIM_ConfigClockSource+0xc6>
      TIM_ETR_SetConfig(htim->Instance,
 8007af0:	68cb      	ldr	r3, [r1, #12]
 8007af2:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8007af6:	f7ff ff97 	bl	8007a28 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 8007afa:	6822      	ldr	r2, [r4, #0]
 8007afc:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8007afe:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007b02:	6093      	str	r3, [r2, #8]
      break;
 8007b04:	e7b6      	b.n	8007a74 <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI2_ConfigInputStage(htim->Instance,
 8007b06:	684d      	ldr	r5, [r1, #4]
 8007b08:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007b0a:	6a01      	ldr	r1, [r0, #32]
 8007b0c:	f021 0110 	bic.w	r1, r1, #16
 8007b10:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007b12:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 8007b14:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007b16:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007b1a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 8007b1e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8007b22:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 8007b26:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 8007b28:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8007b2a:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8007b2c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007b30:	f043 0367 	orr.w	r3, r3, #103	; 0x67
 8007b34:	e7cb      	b.n	8007ace <HAL_TIM_ConfigClockSource+0x92>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007b36:	684a      	ldr	r2, [r1, #4]
 8007b38:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 8007b3a:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007b3c:	6a05      	ldr	r5, [r0, #32]
 8007b3e:	f025 0501 	bic.w	r5, r5, #1
 8007b42:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007b44:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007b46:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007b4a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007b4e:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8007b52:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8007b54:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8007b56:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8007b58:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8007b5a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007b5e:	f043 0347 	orr.w	r3, r3, #71	; 0x47
 8007b62:	e7b4      	b.n	8007ace <HAL_TIM_ConfigClockSource+0x92>

08007b64 <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007b64:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007b66:	f001 011f 	and.w	r1, r1, #31
{
 8007b6a:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007b6c:	2401      	movs	r4, #1
 8007b6e:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 8007b70:	ea23 0304 	bic.w	r3, r3, r4
 8007b74:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007b76:	6a03      	ldr	r3, [r0, #32]
 8007b78:	408a      	lsls	r2, r1
 8007b7a:	431a      	orrs	r2, r3
 8007b7c:	6202      	str	r2, [r0, #32]
}
 8007b7e:	bd10      	pop	{r4, pc}

08007b80 <HAL_TIM_OC_Start_DMA>:
{
 8007b80:	b570      	push	{r4, r5, r6, lr}
 8007b82:	4604      	mov	r4, r0
  if (htim->State == HAL_TIM_STATE_BUSY)
 8007b84:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
 8007b88:	b2c0      	uxtb	r0, r0
 8007b8a:	2802      	cmp	r0, #2
{
 8007b8c:	460d      	mov	r5, r1
 8007b8e:	4611      	mov	r1, r2
  if (htim->State == HAL_TIM_STATE_BUSY)
 8007b90:	d006      	beq.n	8007ba0 <HAL_TIM_OC_Start_DMA+0x20>
  else if (htim->State == HAL_TIM_STATE_READY)
 8007b92:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8007b96:	2a01      	cmp	r2, #1
 8007b98:	d106      	bne.n	8007ba8 <HAL_TIM_OC_Start_DMA+0x28>
    if ((pData == NULL) && (Length > 0U))
 8007b9a:	b911      	cbnz	r1, 8007ba2 <HAL_TIM_OC_Start_DMA+0x22>
 8007b9c:	b10b      	cbz	r3, 8007ba2 <HAL_TIM_OC_Start_DMA+0x22>
      return HAL_ERROR;
 8007b9e:	2001      	movs	r0, #1
}
 8007ba0:	bd70      	pop	{r4, r5, r6, pc}
      htim->State = HAL_TIM_STATE_BUSY;
 8007ba2:	2202      	movs	r2, #2
 8007ba4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8007ba8:	6822      	ldr	r2, [r4, #0]
  switch (Channel)
 8007baa:	2d0c      	cmp	r5, #12
 8007bac:	d819      	bhi.n	8007be2 <HAL_TIM_OC_Start_DMA+0x62>
 8007bae:	e8df f005 	tbb	[pc, r5]
 8007bb2:	1807      	.short	0x1807
 8007bb4:	18341818 	.word	0x18341818
 8007bb8:	18451818 	.word	0x18451818
 8007bbc:	1818      	.short	0x1818
 8007bbe:	56          	.byte	0x56
 8007bbf:	00          	.byte	0x00
      htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007bc0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007bc2:	4e2f      	ldr	r6, [pc, #188]	; (8007c80 <HAL_TIM_OC_Start_DMA+0x100>)
 8007bc4:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8007bc6:	4e2f      	ldr	r6, [pc, #188]	; (8007c84 <HAL_TIM_OC_Start_DMA+0x104>)
 8007bc8:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 8007bca:	4e2f      	ldr	r6, [pc, #188]	; (8007c88 <HAL_TIM_OC_Start_DMA+0x108>)
 8007bcc:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1, Length) != HAL_OK)
 8007bce:	3234      	adds	r2, #52	; 0x34
 8007bd0:	f7fd fc2e 	bl	8005430 <HAL_DMA_Start_IT>
 8007bd4:	2800      	cmp	r0, #0
 8007bd6:	d1e2      	bne.n	8007b9e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 8007bd8:	6822      	ldr	r2, [r4, #0]
 8007bda:	68d3      	ldr	r3, [r2, #12]
 8007bdc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8007be0:	60d3      	str	r3, [r2, #12]
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8007be2:	2201      	movs	r2, #1
 8007be4:	4629      	mov	r1, r5
 8007be6:	6820      	ldr	r0, [r4, #0]
 8007be8:	f7ff ffbc 	bl	8007b64 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007bec:	6823      	ldr	r3, [r4, #0]
 8007bee:	4a27      	ldr	r2, [pc, #156]	; (8007c8c <HAL_TIM_OC_Start_DMA+0x10c>)
 8007bf0:	4293      	cmp	r3, r2
 8007bf2:	d003      	beq.n	8007bfc <HAL_TIM_OC_Start_DMA+0x7c>
 8007bf4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007bf8:	4293      	cmp	r3, r2
 8007bfa:	d103      	bne.n	8007c04 <HAL_TIM_OC_Start_DMA+0x84>
    __HAL_TIM_MOE_ENABLE(htim);
 8007bfc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8007bfe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007c02:	645a      	str	r2, [r3, #68]	; 0x44
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007c04:	689a      	ldr	r2, [r3, #8]
 8007c06:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007c0a:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 8007c0c:	bf1e      	ittt	ne
 8007c0e:	681a      	ldrne	r2, [r3, #0]
 8007c10:	f042 0201 	orrne.w	r2, r2, #1
 8007c14:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 8007c16:	2000      	movs	r0, #0
 8007c18:	e7c2      	b.n	8007ba0 <HAL_TIM_OC_Start_DMA+0x20>
      htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007c1a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007c1c:	4e18      	ldr	r6, [pc, #96]	; (8007c80 <HAL_TIM_OC_Start_DMA+0x100>)
 8007c1e:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8007c20:	4e18      	ldr	r6, [pc, #96]	; (8007c84 <HAL_TIM_OC_Start_DMA+0x104>)
 8007c22:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 8007c24:	4e18      	ldr	r6, [pc, #96]	; (8007c88 <HAL_TIM_OC_Start_DMA+0x108>)
 8007c26:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2, Length) != HAL_OK)
 8007c28:	3238      	adds	r2, #56	; 0x38
 8007c2a:	f7fd fc01 	bl	8005430 <HAL_DMA_Start_IT>
 8007c2e:	2800      	cmp	r0, #0
 8007c30:	d1b5      	bne.n	8007b9e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 8007c32:	6822      	ldr	r2, [r4, #0]
 8007c34:	68d3      	ldr	r3, [r2, #12]
 8007c36:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8007c3a:	e7d1      	b.n	8007be0 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007c3c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8007c3e:	4e10      	ldr	r6, [pc, #64]	; (8007c80 <HAL_TIM_OC_Start_DMA+0x100>)
 8007c40:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8007c42:	4e10      	ldr	r6, [pc, #64]	; (8007c84 <HAL_TIM_OC_Start_DMA+0x104>)
 8007c44:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 8007c46:	4e10      	ldr	r6, [pc, #64]	; (8007c88 <HAL_TIM_OC_Start_DMA+0x108>)
 8007c48:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3, Length) != HAL_OK)
 8007c4a:	323c      	adds	r2, #60	; 0x3c
 8007c4c:	f7fd fbf0 	bl	8005430 <HAL_DMA_Start_IT>
 8007c50:	2800      	cmp	r0, #0
 8007c52:	d1a4      	bne.n	8007b9e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 8007c54:	6822      	ldr	r2, [r4, #0]
 8007c56:	68d3      	ldr	r3, [r2, #12]
 8007c58:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8007c5c:	e7c0      	b.n	8007be0 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007c5e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007c60:	4e07      	ldr	r6, [pc, #28]	; (8007c80 <HAL_TIM_OC_Start_DMA+0x100>)
 8007c62:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8007c64:	4e07      	ldr	r6, [pc, #28]	; (8007c84 <HAL_TIM_OC_Start_DMA+0x104>)
 8007c66:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 8007c68:	4e07      	ldr	r6, [pc, #28]	; (8007c88 <HAL_TIM_OC_Start_DMA+0x108>)
 8007c6a:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4, Length) != HAL_OK)
 8007c6c:	3240      	adds	r2, #64	; 0x40
 8007c6e:	f7fd fbdf 	bl	8005430 <HAL_DMA_Start_IT>
 8007c72:	2800      	cmp	r0, #0
 8007c74:	d193      	bne.n	8007b9e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8007c76:	6822      	ldr	r2, [r4, #0]
 8007c78:	68d3      	ldr	r3, [r2, #12]
 8007c7a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8007c7e:	e7af      	b.n	8007be0 <HAL_TIM_OC_Start_DMA+0x60>
 8007c80:	080075f1 	.word	0x080075f1
 8007c84:	0800762f 	.word	0x0800762f
 8007c88:	080077b3 	.word	0x080077b3
 8007c8c:	40010000 	.word	0x40010000

08007c90 <HAL_TIM_PWM_Start_DMA>:
 8007c90:	f7ff bf76 	b.w	8007b80 <HAL_TIM_OC_Start_DMA>

08007c94 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007c94:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007c98:	2b01      	cmp	r3, #1
{
 8007c9a:	b530      	push	{r4, r5, lr}
 8007c9c:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 8007ca0:	d035      	beq.n	8007d0e <HAL_TIMEx_MasterConfigSynchronization+0x7a>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007ca2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007ca6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007ca8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8007caa:	685c      	ldr	r4, [r3, #4]
  tmpcr2 &= ~TIM_CR2_MMS;
 8007cac:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  __HAL_LOCK(htim);
 8007cb0:	2201      	movs	r2, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007cb2:	432c      	orrs	r4, r5
  __HAL_LOCK(htim);
 8007cb4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 8007cb8:	689a      	ldr	r2, [r3, #8]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007cba:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007cbc:	4c15      	ldr	r4, [pc, #84]	; (8007d14 <HAL_TIMEx_MasterConfigSynchronization+0x80>)
 8007cbe:	42a3      	cmp	r3, r4
 8007cc0:	d01a      	beq.n	8007cf8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007cc2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007cc6:	d017      	beq.n	8007cf8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007cc8:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8007ccc:	42a3      	cmp	r3, r4
 8007cce:	d013      	beq.n	8007cf8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007cd0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007cd4:	42a3      	cmp	r3, r4
 8007cd6:	d00f      	beq.n	8007cf8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007cd8:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007cdc:	42a3      	cmp	r3, r4
 8007cde:	d00b      	beq.n	8007cf8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007ce0:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8007ce4:	42a3      	cmp	r3, r4
 8007ce6:	d007      	beq.n	8007cf8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007ce8:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8007cec:	42a3      	cmp	r3, r4
 8007cee:	d003      	beq.n	8007cf8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007cf0:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8007cf4:	42a3      	cmp	r3, r4
 8007cf6:	d104      	bne.n	8007d02 <HAL_TIMEx_MasterConfigSynchronization+0x6e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007cf8:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007cfa:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007cfe:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007d00:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007d02:	2301      	movs	r3, #1
 8007d04:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007d08:	2300      	movs	r3, #0
 8007d0a:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8007d0e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8007d10:	bd30      	pop	{r4, r5, pc}
 8007d12:	bf00      	nop
 8007d14:	40010000 	.word	0x40010000

08007d18 <HAL_TIMEx_CommutCallback>:
 8007d18:	4770      	bx	lr

08007d1a <HAL_TIMEx_BreakCallback>:
 8007d1a:	4770      	bx	lr

08007d1c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007d1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007d20:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8007d22:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8007d26:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8007d2a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8007d2e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007d32:	6809      	ldr	r1, [r1, #0]
 8007d34:	2901      	cmp	r1, #1
 8007d36:	ea43 0304 	orr.w	r3, r3, r4
 8007d3a:	4912      	ldr	r1, [pc, #72]	; (8007d84 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007d3c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007d3e:	d00f      	beq.n	8007d60 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007d40:	431a      	orrs	r2, r3
 8007d42:	432a      	orrs	r2, r5
 8007d44:	ea42 0308 	orr.w	r3, r2, r8
 8007d48:	ea43 030e 	orr.w	r3, r3, lr
 8007d4c:	ea43 030c 	orr.w	r3, r3, ip
 8007d50:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007d52:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007d54:	4333      	orrs	r3, r6
 8007d56:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007d58:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8007d5a:	2000      	movs	r0, #0
 8007d5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007d60:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007d62:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007d64:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007d66:	ea45 0208 	orr.w	r2, r5, r8
 8007d6a:	ea42 020e 	orr.w	r2, r2, lr
 8007d6e:	ea42 020c 	orr.w	r2, r2, ip
 8007d72:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8007d74:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007d78:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007d7a:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007d7c:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007d7e:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007d80:	6042      	str	r2, [r0, #4]
 8007d82:	e7ea      	b.n	8007d5a <FMC_SDRAM_Init+0x3e>
 8007d84:	ffff8000 	.word	0xffff8000

08007d88 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8007d88:	68cb      	ldr	r3, [r1, #12]
 8007d8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d8c:	680c      	ldr	r4, [r1, #0]
 8007d8e:	688e      	ldr	r6, [r1, #8]
 8007d90:	690d      	ldr	r5, [r1, #16]
 8007d92:	1e5f      	subs	r7, r3, #1
 8007d94:	694b      	ldr	r3, [r1, #20]
 8007d96:	f104 3cff 	add.w	ip, r4, #4294967295
 8007d9a:	684c      	ldr	r4, [r1, #4]
 8007d9c:	6989      	ldr	r1, [r1, #24]
 8007d9e:	3b01      	subs	r3, #1
 8007da0:	051b      	lsls	r3, r3, #20
 8007da2:	3c01      	subs	r4, #1
 8007da4:	3e01      	subs	r6, #1
 8007da6:	3d01      	subs	r5, #1
 8007da8:	3901      	subs	r1, #1
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8007daa:	2a01      	cmp	r2, #1
 8007dac:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8007db0:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8007db4:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8007db8:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8007dbc:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8007dc0:	d00c      	beq.n	8007ddc <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007dc2:	ea43 030c 	orr.w	r3, r3, ip
 8007dc6:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007dc8:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007dca:	4333      	orrs	r3, r6
 8007dcc:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007dce:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007dd2:	430b      	orrs	r3, r1
 8007dd4:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007dd6:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8007dd8:	2000      	movs	r0, #0
 8007dda:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007ddc:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007dde:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8007de2:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007de6:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007dea:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007dec:	ea42 020c 	orr.w	r2, r2, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007df0:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007df2:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007df4:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007df6:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007dfa:	430a      	orrs	r2, r1
 8007dfc:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007dfe:	60c2      	str	r2, [r0, #12]
 8007e00:	e7ea      	b.n	8007dd8 <FMC_SDRAM_Timing_Init+0x50>

08007e02 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007e02:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8007e04:	2300      	movs	r3, #0
 8007e06:	9301      	str	r3, [sp, #4]
{
 8007e08:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007e0a:	e9d1 3200 	ldrd	r3, r2, [r1]
 8007e0e:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8007e10:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007e12:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007e16:	688a      	ldr	r2, [r1, #8]
 8007e18:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007e1a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007e1e:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8007e20:	9b01      	ldr	r3, [sp, #4]
 8007e22:	6103      	str	r3, [r0, #16]
{
 8007e24:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007e26:	f7fd f9dd 	bl	80051e4 <HAL_GetTick>
 8007e2a:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007e2c:	69a0      	ldr	r0, [r4, #24]
 8007e2e:	f010 0020 	ands.w	r0, r0, #32
 8007e32:	d003      	beq.n	8007e3c <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8007e34:	1c6b      	adds	r3, r5, #1
 8007e36:	d0f9      	beq.n	8007e2c <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007e38:	b915      	cbnz	r5, 8007e40 <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 8007e3a:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 8007e3c:	b002      	add	sp, #8
 8007e3e:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007e40:	f7fd f9d0 	bl	80051e4 <HAL_GetTick>
 8007e44:	1b80      	subs	r0, r0, r6
 8007e46:	42a8      	cmp	r0, r5
 8007e48:	d9f0      	bls.n	8007e2c <FMC_SDRAM_SendCommand+0x2a>
 8007e4a:	e7f6      	b.n	8007e3a <FMC_SDRAM_SendCommand+0x38>

08007e4c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007e4c:	6943      	ldr	r3, [r0, #20]
 8007e4e:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8007e52:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8007e54:	2000      	movs	r0, #0
 8007e56:	4770      	bx	lr

08007e58 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007e58:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007e5c:	b113      	cbz	r3, 8007e64 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8007e5e:	f06f 0005 	mvn.w	r0, #5
 8007e62:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007e64:	f3ef 8210 	mrs	r2, PRIMASK
 8007e68:	4b07      	ldr	r3, [pc, #28]	; (8007e88 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8007e6a:	b912      	cbnz	r2, 8007e72 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007e6c:	f3ef 8211 	mrs	r2, BASEPRI
 8007e70:	b112      	cbz	r2, 8007e78 <osKernelInitialize+0x20>
 8007e72:	681a      	ldr	r2, [r3, #0]
 8007e74:	2a02      	cmp	r2, #2
 8007e76:	d0f2      	beq.n	8007e5e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007e78:	6818      	ldr	r0, [r3, #0]
 8007e7a:	b910      	cbnz	r0, 8007e82 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007e7c:	2201      	movs	r2, #1
 8007e7e:	601a      	str	r2, [r3, #0]
 8007e80:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 8007e82:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007e86:	4770      	bx	lr
 8007e88:	20001a00 	.word	0x20001a00

08007e8c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007e8c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007e8e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007e92:	b113      	cbz	r3, 8007e9a <osKernelStart+0xe>
    stat = osErrorISR;
 8007e94:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007e98:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007e9a:	f3ef 8210 	mrs	r2, PRIMASK
 8007e9e:	4b0a      	ldr	r3, [pc, #40]	; (8007ec8 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007ea0:	b912      	cbnz	r2, 8007ea8 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007ea2:	f3ef 8211 	mrs	r2, BASEPRI
 8007ea6:	b112      	cbz	r2, 8007eae <osKernelStart+0x22>
 8007ea8:	681a      	ldr	r2, [r3, #0]
 8007eaa:	2a02      	cmp	r2, #2
 8007eac:	d0f2      	beq.n	8007e94 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8007eae:	681a      	ldr	r2, [r3, #0]
 8007eb0:	2a01      	cmp	r2, #1
 8007eb2:	d105      	bne.n	8007ec0 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8007eb4:	2202      	movs	r2, #2
 8007eb6:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8007eb8:	f001 fbb2 	bl	8009620 <vTaskStartScheduler>
      stat = osOK;
 8007ebc:	2000      	movs	r0, #0
 8007ebe:	e7eb      	b.n	8007e98 <osKernelStart+0xc>
      stat = osError;
 8007ec0:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007ec4:	e7e8      	b.n	8007e98 <osKernelStart+0xc>
 8007ec6:	bf00      	nop
 8007ec8:	20001a00 	.word	0x20001a00

08007ecc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007ece:	b087      	sub	sp, #28
 8007ed0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007ed2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007ed4:	460b      	mov	r3, r1
  hTask = NULL;
 8007ed6:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007ed8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007edc:	bb32      	cbnz	r2, 8007f2c <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007ede:	f3ef 8210 	mrs	r2, PRIMASK
 8007ee2:	b912      	cbnz	r2, 8007eea <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007ee4:	f3ef 8211 	mrs	r2, BASEPRI
 8007ee8:	b11a      	cbz	r2, 8007ef2 <osThreadNew+0x26>
 8007eea:	4a22      	ldr	r2, [pc, #136]	; (8007f74 <osThreadNew+0xa8>)
 8007eec:	6812      	ldr	r2, [r2, #0]
 8007eee:	2a02      	cmp	r2, #2
 8007ef0:	d01c      	beq.n	8007f2c <osThreadNew+0x60>
 8007ef2:	b1d8      	cbz	r0, 8007f2c <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007ef4:	2c00      	cmp	r4, #0
 8007ef6:	d036      	beq.n	8007f66 <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007ef8:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 8007efa:	6821      	ldr	r1, [r4, #0]
 8007efc:	2d00      	cmp	r5, #0
 8007efe:	bf08      	it	eq
 8007f00:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007f02:	1e6a      	subs	r2, r5, #1
 8007f04:	2a37      	cmp	r2, #55	; 0x37
 8007f06:	462f      	mov	r7, r5
 8007f08:	d831      	bhi.n	8007f6e <osThreadNew+0xa2>
 8007f0a:	6862      	ldr	r2, [r4, #4]
 8007f0c:	07d2      	lsls	r2, r2, #31
 8007f0e:	d42e      	bmi.n	8007f6e <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007f10:	6966      	ldr	r6, [r4, #20]
 8007f12:	b176      	cbz	r6, 8007f32 <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007f14:	08b2      	lsrs	r2, r6, #2
 8007f16:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007f1a:	f1bc 0f00 	cmp.w	ip, #0
 8007f1e:	d00a      	beq.n	8007f36 <osThreadNew+0x6a>
 8007f20:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8007f24:	d902      	bls.n	8007f2c <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007f26:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007f28:	b104      	cbz	r4, 8007f2c <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007f2a:	b9ae      	cbnz	r6, 8007f58 <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007f2c:	9805      	ldr	r0, [sp, #20]
}
 8007f2e:	b007      	add	sp, #28
 8007f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007f32:	2280      	movs	r2, #128	; 0x80
 8007f34:	e7ef      	b.n	8007f16 <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007f36:	f1be 0f00 	cmp.w	lr, #0
 8007f3a:	d1f7      	bne.n	8007f2c <osThreadNew+0x60>
      if (mem == 0) {
 8007f3c:	6924      	ldr	r4, [r4, #16]
 8007f3e:	2c00      	cmp	r4, #0
 8007f40:	d1f4      	bne.n	8007f2c <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007f42:	ac05      	add	r4, sp, #20
 8007f44:	e9cd 7400 	strd	r7, r4, [sp]
 8007f48:	b292      	uxth	r2, r2
 8007f4a:	f001 fb3b 	bl	80095c4 <xTaskCreate>
 8007f4e:	2801      	cmp	r0, #1
          hTask = NULL;
 8007f50:	bf1c      	itt	ne
 8007f52:	2300      	movne	r3, #0
 8007f54:	9305      	strne	r3, [sp, #20]
 8007f56:	e7e9      	b.n	8007f2c <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007f58:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 8007f5c:	9500      	str	r5, [sp, #0]
 8007f5e:	f001 faf9 	bl	8009554 <xTaskCreateStatic>
 8007f62:	9005      	str	r0, [sp, #20]
 8007f64:	e7e2      	b.n	8007f2c <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 8007f66:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 8007f68:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 8007f6a:	4621      	mov	r1, r4
 8007f6c:	e7e9      	b.n	8007f42 <osThreadNew+0x76>
        return (NULL);
 8007f6e:	2000      	movs	r0, #0
 8007f70:	e7dd      	b.n	8007f2e <osThreadNew+0x62>
 8007f72:	bf00      	nop
 8007f74:	20001a00 	.word	0x20001a00

08007f78 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007f78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007f7a:	460e      	mov	r6, r1
 8007f7c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007f7e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007f82:	b11b      	cbz	r3, 8007f8c <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8007f84:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007f86:	4620      	mov	r0, r4
 8007f88:	b002      	add	sp, #8
 8007f8a:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007f8c:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007f90:	b913      	cbnz	r3, 8007f98 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007f92:	f3ef 8311 	mrs	r3, BASEPRI
 8007f96:	b11b      	cbz	r3, 8007fa0 <osSemaphoreNew+0x28>
 8007f98:	4b21      	ldr	r3, [pc, #132]	; (8008020 <osSemaphoreNew+0xa8>)
 8007f9a:	681b      	ldr	r3, [r3, #0]
 8007f9c:	2b02      	cmp	r3, #2
 8007f9e:	d0f1      	beq.n	8007f84 <osSemaphoreNew+0xc>
 8007fa0:	2800      	cmp	r0, #0
 8007fa2:	d0ef      	beq.n	8007f84 <osSemaphoreNew+0xc>
 8007fa4:	42b0      	cmp	r0, r6
 8007fa6:	d3ed      	bcc.n	8007f84 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8007fa8:	b1ed      	cbz	r5, 8007fe6 <osSemaphoreNew+0x6e>
 8007faa:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007fae:	b1c3      	cbz	r3, 8007fe2 <osSemaphoreNew+0x6a>
 8007fb0:	2a4f      	cmp	r2, #79	; 0x4f
 8007fb2:	d9e7      	bls.n	8007f84 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007fb4:	2801      	cmp	r0, #1
 8007fb6:	d126      	bne.n	8008006 <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007fb8:	2203      	movs	r2, #3
 8007fba:	9200      	str	r2, [sp, #0]
 8007fbc:	2200      	movs	r2, #0
 8007fbe:	4611      	mov	r1, r2
 8007fc0:	f000 fd30 	bl	8008a24 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8007fc4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007fc6:	2800      	cmp	r0, #0
 8007fc8:	d0dc      	beq.n	8007f84 <osSemaphoreNew+0xc>
 8007fca:	b1ce      	cbz	r6, 8008000 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007fcc:	2300      	movs	r3, #0
 8007fce:	461a      	mov	r2, r3
 8007fd0:	4619      	mov	r1, r3
 8007fd2:	f000 fddd 	bl	8008b90 <xQueueGenericSend>
 8007fd6:	2801      	cmp	r0, #1
 8007fd8:	d012      	beq.n	8008000 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8007fda:	4620      	mov	r0, r4
 8007fdc:	f001 f918 	bl	8009210 <vQueueDelete>
 8007fe0:	e7d0      	b.n	8007f84 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007fe2:	2a00      	cmp	r2, #0
 8007fe4:	d1ce      	bne.n	8007f84 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007fe6:	2801      	cmp	r0, #1
 8007fe8:	d104      	bne.n	8007ff4 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8007fea:	2203      	movs	r2, #3
 8007fec:	2100      	movs	r1, #0
 8007fee:	f000 fd67 	bl	8008ac0 <xQueueGenericCreate>
 8007ff2:	e7e7      	b.n	8007fc4 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007ff4:	4631      	mov	r1, r6
 8007ff6:	f000 fdac 	bl	8008b52 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007ffa:	4604      	mov	r4, r0
 8007ffc:	2800      	cmp	r0, #0
 8007ffe:	d0c1      	beq.n	8007f84 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008000:	b945      	cbnz	r5, 8008014 <osSemaphoreNew+0x9c>
          name = NULL;
 8008002:	4629      	mov	r1, r5
 8008004:	e007      	b.n	8008016 <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008006:	461a      	mov	r2, r3
 8008008:	4631      	mov	r1, r6
 800800a:	f000 fd80 	bl	8008b0e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800800e:	4604      	mov	r4, r0
 8008010:	2800      	cmp	r0, #0
 8008012:	d0b7      	beq.n	8007f84 <osSemaphoreNew+0xc>
          name = attr->name;
 8008014:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 8008016:	4620      	mov	r0, r4
 8008018:	f001 f8d4 	bl	80091c4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800801c:	e7b3      	b.n	8007f86 <osSemaphoreNew+0xe>
 800801e:	bf00      	nop
 8008020:	20001a00 	.word	0x20001a00

08008024 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008024:	b513      	push	{r0, r1, r4, lr}
 8008026:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008028:	b918      	cbnz	r0, 8008032 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800802a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800802e:	b002      	add	sp, #8
 8008030:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008032:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008036:	b16b      	cbz	r3, 8008054 <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 8008038:	2c00      	cmp	r4, #0
 800803a:	d1f6      	bne.n	800802a <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 800803c:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800803e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8008040:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008044:	f001 f86e 	bl	8009124 <xQueueReceiveFromISR>
 8008048:	2801      	cmp	r0, #1
 800804a:	d113      	bne.n	8008074 <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 800804c:	9b01      	ldr	r3, [sp, #4]
 800804e:	b9a3      	cbnz	r3, 800807a <osSemaphoreAcquire+0x56>
  stat = osOK;
 8008050:	2000      	movs	r0, #0
 8008052:	e7ec      	b.n	800802e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008054:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008058:	b913      	cbnz	r3, 8008060 <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800805a:	f3ef 8311 	mrs	r3, BASEPRI
 800805e:	b11b      	cbz	r3, 8008068 <osSemaphoreAcquire+0x44>
 8008060:	4b0c      	ldr	r3, [pc, #48]	; (8008094 <osSemaphoreAcquire+0x70>)
 8008062:	681b      	ldr	r3, [r3, #0]
 8008064:	2b02      	cmp	r3, #2
 8008066:	d0e7      	beq.n	8008038 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008068:	4621      	mov	r1, r4
 800806a:	f000 ff99 	bl	8008fa0 <xQueueSemaphoreTake>
 800806e:	2801      	cmp	r0, #1
 8008070:	d0ee      	beq.n	8008050 <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 8008072:	b95c      	cbnz	r4, 800808c <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 8008074:	f06f 0002 	mvn.w	r0, #2
 8008078:	e7d9      	b.n	800802e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 800807a:	4b07      	ldr	r3, [pc, #28]	; (8008098 <osSemaphoreAcquire+0x74>)
 800807c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008080:	601a      	str	r2, [r3, #0]
 8008082:	f3bf 8f4f 	dsb	sy
 8008086:	f3bf 8f6f 	isb	sy
 800808a:	e7e1      	b.n	8008050 <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 800808c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008090:	e7cd      	b.n	800802e <osSemaphoreAcquire+0xa>
 8008092:	bf00      	nop
 8008094:	20001a00 	.word	0x20001a00
 8008098:	e000ed04 	.word	0xe000ed04

0800809c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800809c:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800809e:	b368      	cbz	r0, 80080fc <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80080a0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80080a4:	b153      	cbz	r3, 80080bc <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 80080a6:	a902      	add	r1, sp, #8
 80080a8:	2400      	movs	r4, #0
 80080aa:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80080ae:	f000 fe82 	bl	8008db6 <xQueueGiveFromISR>
 80080b2:	2801      	cmp	r0, #1
 80080b4:	d014      	beq.n	80080e0 <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80080b6:	f06f 0002 	mvn.w	r0, #2
 80080ba:	e014      	b.n	80080e6 <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80080bc:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80080c0:	b913      	cbnz	r3, 80080c8 <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80080c2:	f3ef 8311 	mrs	r3, BASEPRI
 80080c6:	b11b      	cbz	r3, 80080d0 <osSemaphoreRelease+0x34>
 80080c8:	4b0e      	ldr	r3, [pc, #56]	; (8008104 <osSemaphoreRelease+0x68>)
 80080ca:	681b      	ldr	r3, [r3, #0]
 80080cc:	2b02      	cmp	r3, #2
 80080ce:	d0ea      	beq.n	80080a6 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80080d0:	2300      	movs	r3, #0
 80080d2:	461a      	mov	r2, r3
 80080d4:	4619      	mov	r1, r3
 80080d6:	f000 fd5b 	bl	8008b90 <xQueueGenericSend>
 80080da:	2801      	cmp	r0, #1
 80080dc:	d002      	beq.n	80080e4 <osSemaphoreRelease+0x48>
 80080de:	e7ea      	b.n	80080b6 <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 80080e0:	9b01      	ldr	r3, [sp, #4]
 80080e2:	b913      	cbnz	r3, 80080ea <osSemaphoreRelease+0x4e>
  stat = osOK;
 80080e4:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80080e6:	b002      	add	sp, #8
 80080e8:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80080ea:	4b07      	ldr	r3, [pc, #28]	; (8008108 <osSemaphoreRelease+0x6c>)
 80080ec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80080f0:	601a      	str	r2, [r3, #0]
 80080f2:	f3bf 8f4f 	dsb	sy
 80080f6:	f3bf 8f6f 	isb	sy
 80080fa:	e7f3      	b.n	80080e4 <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 80080fc:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008100:	e7f1      	b.n	80080e6 <osSemaphoreRelease+0x4a>
 8008102:	bf00      	nop
 8008104:	20001a00 	.word	0x20001a00
 8008108:	e000ed04 	.word	0xe000ed04

0800810c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800810c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800810e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008110:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008114:	b11b      	cbz	r3, 800811e <osMessageQueueNew+0x12>
  hQueue = NULL;
 8008116:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008118:	4628      	mov	r0, r5
 800811a:	b002      	add	sp, #8
 800811c:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800811e:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008122:	b913      	cbnz	r3, 800812a <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008124:	f3ef 8311 	mrs	r3, BASEPRI
 8008128:	b11b      	cbz	r3, 8008132 <osMessageQueueNew+0x26>
 800812a:	4b1a      	ldr	r3, [pc, #104]	; (8008194 <osMessageQueueNew+0x88>)
 800812c:	681b      	ldr	r3, [r3, #0]
 800812e:	2b02      	cmp	r3, #2
 8008130:	d0f1      	beq.n	8008116 <osMessageQueueNew+0xa>
 8008132:	2800      	cmp	r0, #0
 8008134:	d0ef      	beq.n	8008116 <osMessageQueueNew+0xa>
 8008136:	2900      	cmp	r1, #0
 8008138:	d0ed      	beq.n	8008116 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800813a:	b304      	cbz	r4, 800817e <osMessageQueueNew+0x72>
 800813c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008140:	b1ab      	cbz	r3, 800816e <osMessageQueueNew+0x62>
 8008142:	2a4f      	cmp	r2, #79	; 0x4f
 8008144:	d9e7      	bls.n	8008116 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008146:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008148:	2a00      	cmp	r2, #0
 800814a:	d0e4      	beq.n	8008116 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800814c:	6966      	ldr	r6, [r4, #20]
 800814e:	fb01 f500 	mul.w	r5, r1, r0
 8008152:	42ae      	cmp	r6, r5
 8008154:	d3df      	bcc.n	8008116 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008156:	2500      	movs	r5, #0
 8008158:	9500      	str	r5, [sp, #0]
 800815a:	f000 fc63 	bl	8008a24 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800815e:	4605      	mov	r5, r0
 8008160:	2800      	cmp	r0, #0
 8008162:	d0d8      	beq.n	8008116 <osMessageQueueNew+0xa>
        name = attr->name;
 8008164:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 8008166:	4628      	mov	r0, r5
 8008168:	f001 f82c 	bl	80091c4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800816c:	e7d4      	b.n	8008118 <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800816e:	2a00      	cmp	r2, #0
 8008170:	d1d1      	bne.n	8008116 <osMessageQueueNew+0xa>
 8008172:	6923      	ldr	r3, [r4, #16]
 8008174:	2b00      	cmp	r3, #0
 8008176:	d1ce      	bne.n	8008116 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008178:	6963      	ldr	r3, [r4, #20]
 800817a:	2b00      	cmp	r3, #0
 800817c:	d1cb      	bne.n	8008116 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800817e:	2200      	movs	r2, #0
 8008180:	f000 fc9e 	bl	8008ac0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008184:	4605      	mov	r5, r0
 8008186:	2800      	cmp	r0, #0
 8008188:	d0c5      	beq.n	8008116 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800818a:	2c00      	cmp	r4, #0
 800818c:	d1ea      	bne.n	8008164 <osMessageQueueNew+0x58>
        name = NULL;
 800818e:	4621      	mov	r1, r4
 8008190:	e7e9      	b.n	8008166 <osMessageQueueNew+0x5a>
 8008192:	bf00      	nop
 8008194:	20001a00 	.word	0x20001a00

08008198 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008198:	b513      	push	{r0, r1, r4, lr}
 800819a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800819c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80081a0:	b123      	cbz	r3, 80081ac <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80081a2:	b9d8      	cbnz	r0, 80081dc <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80081a4:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80081a8:	b002      	add	sp, #8
 80081aa:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80081ac:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80081b0:	b913      	cbnz	r3, 80081b8 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80081b2:	f3ef 8311 	mrs	r3, BASEPRI
 80081b6:	b11b      	cbz	r3, 80081c0 <osMessageQueuePut+0x28>
 80081b8:	4b16      	ldr	r3, [pc, #88]	; (8008214 <osMessageQueuePut+0x7c>)
 80081ba:	681b      	ldr	r3, [r3, #0]
 80081bc:	2b02      	cmp	r3, #2
 80081be:	d0f0      	beq.n	80081a2 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80081c0:	2800      	cmp	r0, #0
 80081c2:	d0ef      	beq.n	80081a4 <osMessageQueuePut+0xc>
 80081c4:	2900      	cmp	r1, #0
 80081c6:	d0ed      	beq.n	80081a4 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80081c8:	2300      	movs	r3, #0
 80081ca:	4622      	mov	r2, r4
 80081cc:	f000 fce0 	bl	8008b90 <xQueueGenericSend>
 80081d0:	2801      	cmp	r0, #1
 80081d2:	d011      	beq.n	80081f8 <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 80081d4:	b9dc      	cbnz	r4, 800820e <osMessageQueuePut+0x76>
          stat = osErrorResource;
 80081d6:	f06f 0002 	mvn.w	r0, #2
 80081da:	e7e5      	b.n	80081a8 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80081dc:	2900      	cmp	r1, #0
 80081de:	d0e1      	beq.n	80081a4 <osMessageQueuePut+0xc>
 80081e0:	2c00      	cmp	r4, #0
 80081e2:	d1df      	bne.n	80081a4 <osMessageQueuePut+0xc>
      yield = pdFALSE;
 80081e4:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80081e6:	4623      	mov	r3, r4
      yield = pdFALSE;
 80081e8:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80081ec:	f000 fd82 	bl	8008cf4 <xQueueGenericSendFromISR>
 80081f0:	2801      	cmp	r0, #1
 80081f2:	d1f0      	bne.n	80081d6 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 80081f4:	9b01      	ldr	r3, [sp, #4]
 80081f6:	b90b      	cbnz	r3, 80081fc <osMessageQueuePut+0x64>
  stat = osOK;
 80081f8:	2000      	movs	r0, #0
 80081fa:	e7d5      	b.n	80081a8 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80081fc:	4b06      	ldr	r3, [pc, #24]	; (8008218 <osMessageQueuePut+0x80>)
 80081fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008202:	601a      	str	r2, [r3, #0]
 8008204:	f3bf 8f4f 	dsb	sy
 8008208:	f3bf 8f6f 	isb	sy
 800820c:	e7f4      	b.n	80081f8 <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 800820e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008212:	e7c9      	b.n	80081a8 <osMessageQueuePut+0x10>
 8008214:	20001a00 	.word	0x20001a00
 8008218:	e000ed04 	.word	0xe000ed04

0800821c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800821c:	b513      	push	{r0, r1, r4, lr}
 800821e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008220:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008224:	b123      	cbz	r3, 8008230 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008226:	b9d0      	cbnz	r0, 800825e <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8008228:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800822c:	b002      	add	sp, #8
 800822e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008230:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008234:	b913      	cbnz	r3, 800823c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008236:	f3ef 8311 	mrs	r3, BASEPRI
 800823a:	b11b      	cbz	r3, 8008244 <osMessageQueueGet+0x28>
 800823c:	4b15      	ldr	r3, [pc, #84]	; (8008294 <osMessageQueueGet+0x78>)
 800823e:	681b      	ldr	r3, [r3, #0]
 8008240:	2b02      	cmp	r3, #2
 8008242:	d0f0      	beq.n	8008226 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008244:	2800      	cmp	r0, #0
 8008246:	d0ef      	beq.n	8008228 <osMessageQueueGet+0xc>
 8008248:	2900      	cmp	r1, #0
 800824a:	d0ed      	beq.n	8008228 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800824c:	4622      	mov	r2, r4
 800824e:	f000 fe07 	bl	8008e60 <xQueueReceive>
 8008252:	2801      	cmp	r0, #1
 8008254:	d010      	beq.n	8008278 <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 8008256:	b9d4      	cbnz	r4, 800828e <osMessageQueueGet+0x72>
          stat = osErrorResource;
 8008258:	f06f 0002 	mvn.w	r0, #2
 800825c:	e7e6      	b.n	800822c <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800825e:	2900      	cmp	r1, #0
 8008260:	d0e2      	beq.n	8008228 <osMessageQueueGet+0xc>
 8008262:	2c00      	cmp	r4, #0
 8008264:	d1e0      	bne.n	8008228 <osMessageQueueGet+0xc>
      yield = pdFALSE;
 8008266:	aa02      	add	r2, sp, #8
 8008268:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800826c:	f000 ff5a 	bl	8009124 <xQueueReceiveFromISR>
 8008270:	2801      	cmp	r0, #1
 8008272:	d1f1      	bne.n	8008258 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8008274:	9b01      	ldr	r3, [sp, #4]
 8008276:	b90b      	cbnz	r3, 800827c <osMessageQueueGet+0x60>
  stat = osOK;
 8008278:	2000      	movs	r0, #0
 800827a:	e7d7      	b.n	800822c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800827c:	4b06      	ldr	r3, [pc, #24]	; (8008298 <osMessageQueueGet+0x7c>)
 800827e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008282:	601a      	str	r2, [r3, #0]
 8008284:	f3bf 8f4f 	dsb	sy
 8008288:	f3bf 8f6f 	isb	sy
 800828c:	e7f4      	b.n	8008278 <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 800828e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008292:	e7cb      	b.n	800822c <osMessageQueueGet+0x10>
 8008294:	20001a00 	.word	0x20001a00
 8008298:	e000ed04 	.word	0xe000ed04

0800829c <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800829c:	4b03      	ldr	r3, [pc, #12]	; (80082ac <vApplicationGetIdleTaskMemory+0x10>)
 800829e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80082a0:	4b03      	ldr	r3, [pc, #12]	; (80082b0 <vApplicationGetIdleTaskMemory+0x14>)
 80082a2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80082a4:	2380      	movs	r3, #128	; 0x80
 80082a6:	6013      	str	r3, [r2, #0]
}
 80082a8:	4770      	bx	lr
 80082aa:	bf00      	nop
 80082ac:	200019a0 	.word	0x200019a0
 80082b0:	200017a0 	.word	0x200017a0

080082b4 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80082b4:	4b03      	ldr	r3, [pc, #12]	; (80082c4 <vApplicationGetTimerTaskMemory+0x10>)
 80082b6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80082b8:	4b03      	ldr	r3, [pc, #12]	; (80082c8 <vApplicationGetTimerTaskMemory+0x14>)
 80082ba:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80082bc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80082c0:	6013      	str	r3, [r2, #0]
}
 80082c2:	4770      	bx	lr
 80082c4:	20001e04 	.word	0x20001e04
 80082c8:	20001a04 	.word	0x20001a04

080082cc <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80082cc:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80082ce:	4b0f      	ldr	r3, [pc, #60]	; (800830c <prvInsertBlockIntoFreeList+0x40>)
 80082d0:	681a      	ldr	r2, [r3, #0]
 80082d2:	4282      	cmp	r2, r0
 80082d4:	d318      	bcc.n	8008308 <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80082d6:	685c      	ldr	r4, [r3, #4]
 80082d8:	1919      	adds	r1, r3, r4
 80082da:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80082dc:	bf01      	itttt	eq
 80082de:	6841      	ldreq	r1, [r0, #4]
 80082e0:	4618      	moveq	r0, r3
 80082e2:	1909      	addeq	r1, r1, r4
 80082e4:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80082e6:	6844      	ldr	r4, [r0, #4]
 80082e8:	1901      	adds	r1, r0, r4
 80082ea:	428a      	cmp	r2, r1
 80082ec:	d107      	bne.n	80082fe <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80082ee:	4908      	ldr	r1, [pc, #32]	; (8008310 <prvInsertBlockIntoFreeList+0x44>)
 80082f0:	6809      	ldr	r1, [r1, #0]
 80082f2:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80082f4:	bf1f      	itttt	ne
 80082f6:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80082f8:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80082fa:	1909      	addne	r1, r1, r4
 80082fc:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80082fe:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008300:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008302:	bf18      	it	ne
 8008304:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008306:	bd10      	pop	{r4, pc}
 8008308:	4613      	mov	r3, r2
 800830a:	e7e1      	b.n	80082d0 <prvInsertBlockIntoFreeList+0x4>
 800830c:	20011e74 	.word	0x20011e74
 8008310:	20001e64 	.word	0x20001e64

08008314 <pvPortMalloc>:
{
 8008314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008318:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800831a:	f001 f9c5 	bl	80096a8 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800831e:	493d      	ldr	r1, [pc, #244]	; (8008414 <pvPortMalloc+0x100>)
 8008320:	4d3d      	ldr	r5, [pc, #244]	; (8008418 <pvPortMalloc+0x104>)
 8008322:	680b      	ldr	r3, [r1, #0]
 8008324:	b9fb      	cbnz	r3, 8008366 <pvPortMalloc+0x52>
	uxAddress = ( size_t ) ucHeap;
 8008326:	4a3d      	ldr	r2, [pc, #244]	; (800841c <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008328:	0756      	lsls	r6, r2, #29
 800832a:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800832e:	bf1d      	ittte	ne
 8008330:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008332:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008336:	1a9b      	subne	r3, r3, r2
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008338:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800833c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800833e:	4e38      	ldr	r6, [pc, #224]	; (8008420 <pvPortMalloc+0x10c>)
	uxAddress -= xHeapStructSize;
 8008340:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008342:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008346:	2000      	movs	r0, #0
 8008348:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800834a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800834c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008350:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8008352:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008354:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008358:	4b32      	ldr	r3, [pc, #200]	; (8008424 <pvPortMalloc+0x110>)
 800835a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800835c:	4b32      	ldr	r3, [pc, #200]	; (8008428 <pvPortMalloc+0x114>)
 800835e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008360:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008364:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008366:	682f      	ldr	r7, [r5, #0]
 8008368:	4227      	tst	r7, r4
 800836a:	d14e      	bne.n	800840a <pvPortMalloc+0xf6>
			if( xWantedSize > 0 )
 800836c:	2c00      	cmp	r4, #0
 800836e:	d03f      	beq.n	80083f0 <pvPortMalloc+0xdc>
				xWantedSize += xHeapStructSize;
 8008370:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008374:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008376:	bf1c      	itt	ne
 8008378:	f023 0307 	bicne.w	r3, r3, #7
 800837c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800837e:	2b00      	cmp	r3, #0
 8008380:	d043      	beq.n	800840a <pvPortMalloc+0xf6>
 8008382:	4a29      	ldr	r2, [pc, #164]	; (8008428 <pvPortMalloc+0x114>)
 8008384:	6816      	ldr	r6, [r2, #0]
 8008386:	429e      	cmp	r6, r3
 8008388:	4690      	mov	r8, r2
 800838a:	d33e      	bcc.n	800840a <pvPortMalloc+0xf6>
				pxBlock = xStart.pxNextFreeBlock;
 800838c:	4a24      	ldr	r2, [pc, #144]	; (8008420 <pvPortMalloc+0x10c>)
 800838e:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008390:	6868      	ldr	r0, [r5, #4]
 8008392:	4298      	cmp	r0, r3
 8008394:	d201      	bcs.n	800839a <pvPortMalloc+0x86>
 8008396:	682c      	ldr	r4, [r5, #0]
 8008398:	b9a4      	cbnz	r4, 80083c4 <pvPortMalloc+0xb0>
				if( pxBlock != pxEnd )
 800839a:	6809      	ldr	r1, [r1, #0]
 800839c:	42a9      	cmp	r1, r5
 800839e:	d034      	beq.n	800840a <pvPortMalloc+0xf6>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80083a0:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80083a2:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80083a4:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80083a6:	1ac2      	subs	r2, r0, r3
 80083a8:	2a10      	cmp	r2, #16
 80083aa:	d912      	bls.n	80083d2 <pvPortMalloc+0xbe>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80083ac:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80083ae:	0741      	lsls	r1, r0, #29
 80083b0:	d00b      	beq.n	80083ca <pvPortMalloc+0xb6>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80083b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083b6:	f383 8811 	msr	BASEPRI, r3
 80083ba:	f3bf 8f6f 	isb	sy
 80083be:	f3bf 8f4f 	dsb	sy
 80083c2:	e7fe      	b.n	80083c2 <pvPortMalloc+0xae>
 80083c4:	462a      	mov	r2, r5
 80083c6:	4625      	mov	r5, r4
 80083c8:	e7e2      	b.n	8008390 <pvPortMalloc+0x7c>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80083ca:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80083cc:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80083ce:	f7ff ff7d 	bl	80082cc <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80083d2:	4914      	ldr	r1, [pc, #80]	; (8008424 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083d4:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80083d6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083d8:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80083da:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80083dc:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 80083de:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083e2:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80083e6:	bf38      	it	cc
 80083e8:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80083ea:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80083ec:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 80083ee:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 80083f0:	f001 f9f8 	bl	80097e4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80083f4:	0763      	lsls	r3, r4, #29
 80083f6:	d00a      	beq.n	800840e <pvPortMalloc+0xfa>
 80083f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083fc:	f383 8811 	msr	BASEPRI, r3
 8008400:	f3bf 8f6f 	isb	sy
 8008404:	f3bf 8f4f 	dsb	sy
 8008408:	e7fe      	b.n	8008408 <pvPortMalloc+0xf4>
void *pvReturn = NULL;
 800840a:	2400      	movs	r4, #0
 800840c:	e7f0      	b.n	80083f0 <pvPortMalloc+0xdc>
}
 800840e:	4620      	mov	r0, r4
 8008410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008414:	20001e64 	.word	0x20001e64
 8008418:	20011e68 	.word	0x20011e68
 800841c:	20001e68 	.word	0x20001e68
 8008420:	20011e74 	.word	0x20011e74
 8008424:	20011e70 	.word	0x20011e70
 8008428:	20011e6c 	.word	0x20011e6c

0800842c <vPortFree>:
{
 800842c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800842e:	4604      	mov	r4, r0
 8008430:	b370      	cbz	r0, 8008490 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008432:	4a18      	ldr	r2, [pc, #96]	; (8008494 <vPortFree+0x68>)
 8008434:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008438:	6812      	ldr	r2, [r2, #0]
 800843a:	4213      	tst	r3, r2
 800843c:	d108      	bne.n	8008450 <vPortFree+0x24>
 800843e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008442:	f383 8811 	msr	BASEPRI, r3
 8008446:	f3bf 8f6f 	isb	sy
 800844a:	f3bf 8f4f 	dsb	sy
 800844e:	e7fe      	b.n	800844e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008450:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008454:	b141      	cbz	r1, 8008468 <vPortFree+0x3c>
 8008456:	f04f 0350 	mov.w	r3, #80	; 0x50
 800845a:	f383 8811 	msr	BASEPRI, r3
 800845e:	f3bf 8f6f 	isb	sy
 8008462:	f3bf 8f4f 	dsb	sy
 8008466:	e7fe      	b.n	8008466 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008468:	ea23 0302 	bic.w	r3, r3, r2
 800846c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008470:	f001 f91a 	bl	80096a8 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008474:	4a08      	ldr	r2, [pc, #32]	; (8008498 <vPortFree+0x6c>)
 8008476:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800847a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800847c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008480:	440b      	add	r3, r1
 8008482:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008484:	f7ff ff22 	bl	80082cc <prvInsertBlockIntoFreeList>
}
 8008488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800848c:	f001 b9aa 	b.w	80097e4 <xTaskResumeAll>
}
 8008490:	bd10      	pop	{r4, pc}
 8008492:	bf00      	nop
 8008494:	20011e68 	.word	0x20011e68
 8008498:	20011e6c 	.word	0x20011e6c

0800849c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800849c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80084a0:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80084a4:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80084a6:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80084aa:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80084ac:	2300      	movs	r3, #0
 80084ae:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80084b0:	4770      	bx	lr

080084b2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80084b2:	2300      	movs	r3, #0
 80084b4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80084b6:	4770      	bx	lr

080084b8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80084b8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80084ba:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80084bc:	689a      	ldr	r2, [r3, #8]
 80084be:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80084c0:	689a      	ldr	r2, [r3, #8]
 80084c2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80084c4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80084c6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80084c8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80084ca:	3301      	adds	r3, #1
 80084cc:	6003      	str	r3, [r0, #0]
}
 80084ce:	4770      	bx	lr

080084d0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80084d0:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80084d2:	1c53      	adds	r3, r2, #1
{
 80084d4:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 80084d6:	d10a      	bne.n	80084ee <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80084d8:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80084da:	685a      	ldr	r2, [r3, #4]
 80084dc:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80084de:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80084e0:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80084e2:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80084e4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80084e6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80084e8:	3301      	adds	r3, #1
 80084ea:	6003      	str	r3, [r0, #0]
}
 80084ec:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80084ee:	f100 0308 	add.w	r3, r0, #8
 80084f2:	685c      	ldr	r4, [r3, #4]
 80084f4:	6825      	ldr	r5, [r4, #0]
 80084f6:	4295      	cmp	r5, r2
 80084f8:	d8ef      	bhi.n	80084da <vListInsert+0xa>
 80084fa:	4623      	mov	r3, r4
 80084fc:	e7f9      	b.n	80084f2 <vListInsert+0x22>

080084fe <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80084fe:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008502:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008504:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008506:	6882      	ldr	r2, [r0, #8]
 8008508:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800850a:	6859      	ldr	r1, [r3, #4]
 800850c:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800850e:	bf08      	it	eq
 8008510:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008512:	2200      	movs	r2, #0
 8008514:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008516:	681a      	ldr	r2, [r3, #0]
 8008518:	3a01      	subs	r2, #1
 800851a:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800851c:	6818      	ldr	r0, [r3, #0]
}
 800851e:	4770      	bx	lr

08008520 <prvTaskExitError>:
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 8008520:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008522:	2300      	movs	r3, #0
 8008524:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 8008526:	4b0d      	ldr	r3, [pc, #52]	; (800855c <prvTaskExitError+0x3c>)
 8008528:	681b      	ldr	r3, [r3, #0]
 800852a:	3301      	adds	r3, #1
 800852c:	d008      	beq.n	8008540 <prvTaskExitError+0x20>
 800852e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008532:	f383 8811 	msr	BASEPRI, r3
 8008536:	f3bf 8f6f 	isb	sy
 800853a:	f3bf 8f4f 	dsb	sy
 800853e:	e7fe      	b.n	800853e <prvTaskExitError+0x1e>
 8008540:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008544:	f383 8811 	msr	BASEPRI, r3
 8008548:	f3bf 8f6f 	isb	sy
 800854c:	f3bf 8f4f 	dsb	sy
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 8008550:	9b01      	ldr	r3, [sp, #4]
 8008552:	2b00      	cmp	r3, #0
 8008554:	d0fc      	beq.n	8008550 <prvTaskExitError+0x30>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 8008556:	b002      	add	sp, #8
 8008558:	4770      	bx	lr
 800855a:	bf00      	nop
 800855c:	20000090 	.word	0x20000090

08008560 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008560:	4808      	ldr	r0, [pc, #32]	; (8008584 <prvPortStartFirstTask+0x24>)
 8008562:	6800      	ldr	r0, [r0, #0]
 8008564:	6800      	ldr	r0, [r0, #0]
 8008566:	f380 8808 	msr	MSP, r0
 800856a:	f04f 0000 	mov.w	r0, #0
 800856e:	f380 8814 	msr	CONTROL, r0
 8008572:	b662      	cpsie	i
 8008574:	b661      	cpsie	f
 8008576:	f3bf 8f4f 	dsb	sy
 800857a:	f3bf 8f6f 	isb	sy
 800857e:	df00      	svc	0
 8008580:	bf00      	nop
 8008582:	0000      	.short	0x0000
 8008584:	e000ed08 	.word	0xe000ed08

08008588 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008588:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008598 <vPortEnableVFP+0x10>
 800858c:	6801      	ldr	r1, [r0, #0]
 800858e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008592:	6001      	str	r1, [r0, #0]
 8008594:	4770      	bx	lr
 8008596:	0000      	.short	0x0000
 8008598:	e000ed88 	.word	0xe000ed88

0800859c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800859c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80085a0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80085a4:	4b07      	ldr	r3, [pc, #28]	; (80085c4 <pxPortInitialiseStack+0x28>)
 80085a6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80085aa:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80085ae:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80085b2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80085b6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80085ba:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80085be:	3844      	subs	r0, #68	; 0x44
 80085c0:	4770      	bx	lr
 80085c2:	bf00      	nop
 80085c4:	08008521 	.word	0x08008521
	...

080085d0 <SVC_Handler>:
	__asm volatile (
 80085d0:	4b07      	ldr	r3, [pc, #28]	; (80085f0 <pxCurrentTCBConst2>)
 80085d2:	6819      	ldr	r1, [r3, #0]
 80085d4:	6808      	ldr	r0, [r1, #0]
 80085d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80085da:	f380 8809 	msr	PSP, r0
 80085de:	f3bf 8f6f 	isb	sy
 80085e2:	f04f 0000 	mov.w	r0, #0
 80085e6:	f380 8811 	msr	BASEPRI, r0
 80085ea:	4770      	bx	lr
 80085ec:	f3af 8000 	nop.w

080085f0 <pxCurrentTCBConst2>:
 80085f0:	20011e84 	.word	0x20011e84

080085f4 <vPortEnterCritical>:
 80085f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085f8:	f383 8811 	msr	BASEPRI, r3
 80085fc:	f3bf 8f6f 	isb	sy
 8008600:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008604:	4a0a      	ldr	r2, [pc, #40]	; (8008630 <vPortEnterCritical+0x3c>)
 8008606:	6813      	ldr	r3, [r2, #0]
 8008608:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800860a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800860c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800860e:	d10d      	bne.n	800862c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008610:	4b08      	ldr	r3, [pc, #32]	; (8008634 <vPortEnterCritical+0x40>)
 8008612:	681b      	ldr	r3, [r3, #0]
 8008614:	f013 0fff 	tst.w	r3, #255	; 0xff
 8008618:	d008      	beq.n	800862c <vPortEnterCritical+0x38>
 800861a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800861e:	f383 8811 	msr	BASEPRI, r3
 8008622:	f3bf 8f6f 	isb	sy
 8008626:	f3bf 8f4f 	dsb	sy
 800862a:	e7fe      	b.n	800862a <vPortEnterCritical+0x36>
}
 800862c:	4770      	bx	lr
 800862e:	bf00      	nop
 8008630:	20000090 	.word	0x20000090
 8008634:	e000ed04 	.word	0xe000ed04

08008638 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008638:	4a08      	ldr	r2, [pc, #32]	; (800865c <vPortExitCritical+0x24>)
 800863a:	6813      	ldr	r3, [r2, #0]
 800863c:	b943      	cbnz	r3, 8008650 <vPortExitCritical+0x18>
 800863e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008642:	f383 8811 	msr	BASEPRI, r3
 8008646:	f3bf 8f6f 	isb	sy
 800864a:	f3bf 8f4f 	dsb	sy
 800864e:	e7fe      	b.n	800864e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008650:	3b01      	subs	r3, #1
 8008652:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008654:	b90b      	cbnz	r3, 800865a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008656:	f383 8811 	msr	BASEPRI, r3
}
 800865a:	4770      	bx	lr
 800865c:	20000090 	.word	0x20000090

08008660 <PendSV_Handler>:
	__asm volatile
 8008660:	f3ef 8009 	mrs	r0, PSP
 8008664:	f3bf 8f6f 	isb	sy
 8008668:	4b15      	ldr	r3, [pc, #84]	; (80086c0 <pxCurrentTCBConst>)
 800866a:	681a      	ldr	r2, [r3, #0]
 800866c:	f01e 0f10 	tst.w	lr, #16
 8008670:	bf08      	it	eq
 8008672:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008676:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800867a:	6010      	str	r0, [r2, #0]
 800867c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008680:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008684:	f380 8811 	msr	BASEPRI, r0
 8008688:	f3bf 8f4f 	dsb	sy
 800868c:	f3bf 8f6f 	isb	sy
 8008690:	f001 f91c 	bl	80098cc <vTaskSwitchContext>
 8008694:	f04f 0000 	mov.w	r0, #0
 8008698:	f380 8811 	msr	BASEPRI, r0
 800869c:	bc09      	pop	{r0, r3}
 800869e:	6819      	ldr	r1, [r3, #0]
 80086a0:	6808      	ldr	r0, [r1, #0]
 80086a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086a6:	f01e 0f10 	tst.w	lr, #16
 80086aa:	bf08      	it	eq
 80086ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80086b0:	f380 8809 	msr	PSP, r0
 80086b4:	f3bf 8f6f 	isb	sy
 80086b8:	4770      	bx	lr
 80086ba:	bf00      	nop
 80086bc:	f3af 8000 	nop.w

080086c0 <pxCurrentTCBConst>:
 80086c0:	20011e84 	.word	0x20011e84

080086c4 <SysTick_Handler>:
{
 80086c4:	b508      	push	{r3, lr}
	__asm volatile
 80086c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086ca:	f383 8811 	msr	BASEPRI, r3
 80086ce:	f3bf 8f6f 	isb	sy
 80086d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80086d6:	f000 fff5 	bl	80096c4 <xTaskIncrementTick>
 80086da:	b118      	cbz	r0, 80086e4 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80086dc:	4b03      	ldr	r3, [pc, #12]	; (80086ec <SysTick_Handler+0x28>)
 80086de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086e2:	601a      	str	r2, [r3, #0]
	__asm volatile
 80086e4:	2300      	movs	r3, #0
 80086e6:	f383 8811 	msr	BASEPRI, r3
}
 80086ea:	bd08      	pop	{r3, pc}
 80086ec:	e000ed04 	.word	0xe000ed04

080086f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80086f0:	4a08      	ldr	r2, [pc, #32]	; (8008714 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80086f2:	4909      	ldr	r1, [pc, #36]	; (8008718 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80086f4:	2300      	movs	r3, #0
 80086f6:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80086f8:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80086fa:	4b08      	ldr	r3, [pc, #32]	; (800871c <vPortSetupTimerInterrupt+0x2c>)
 80086fc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008700:	681b      	ldr	r3, [r3, #0]
 8008702:	fbb3 f3f1 	udiv	r3, r3, r1
 8008706:	4906      	ldr	r1, [pc, #24]	; (8008720 <vPortSetupTimerInterrupt+0x30>)
 8008708:	3b01      	subs	r3, #1
 800870a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800870c:	2307      	movs	r3, #7
 800870e:	6013      	str	r3, [r2, #0]
}
 8008710:	4770      	bx	lr
 8008712:	bf00      	nop
 8008714:	e000e010 	.word	0xe000e010
 8008718:	e000e018 	.word	0xe000e018
 800871c:	20000084 	.word	0x20000084
 8008720:	e000e014 	.word	0xe000e014

08008724 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008724:	4b39      	ldr	r3, [pc, #228]	; (800880c <xPortStartScheduler+0xe8>)
 8008726:	4a3a      	ldr	r2, [pc, #232]	; (8008810 <xPortStartScheduler+0xec>)
{
 8008728:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800872a:	6819      	ldr	r1, [r3, #0]
 800872c:	4291      	cmp	r1, r2
 800872e:	d108      	bne.n	8008742 <xPortStartScheduler+0x1e>
	__asm volatile
 8008730:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008734:	f383 8811 	msr	BASEPRI, r3
 8008738:	f3bf 8f6f 	isb	sy
 800873c:	f3bf 8f4f 	dsb	sy
 8008740:	e7fe      	b.n	8008740 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008742:	681a      	ldr	r2, [r3, #0]
 8008744:	4b33      	ldr	r3, [pc, #204]	; (8008814 <xPortStartScheduler+0xf0>)
 8008746:	429a      	cmp	r2, r3
 8008748:	d108      	bne.n	800875c <xPortStartScheduler+0x38>
 800874a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800874e:	f383 8811 	msr	BASEPRI, r3
 8008752:	f3bf 8f6f 	isb	sy
 8008756:	f3bf 8f4f 	dsb	sy
 800875a:	e7fe      	b.n	800875a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800875c:	4b2e      	ldr	r3, [pc, #184]	; (8008818 <xPortStartScheduler+0xf4>)
 800875e:	781a      	ldrb	r2, [r3, #0]
 8008760:	b2d2      	uxtb	r2, r2
 8008762:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008764:	22ff      	movs	r2, #255	; 0xff
 8008766:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008768:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800876a:	4a2c      	ldr	r2, [pc, #176]	; (800881c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800876c:	b2db      	uxtb	r3, r3
 800876e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008772:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008776:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800877a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800877c:	4b28      	ldr	r3, [pc, #160]	; (8008820 <xPortStartScheduler+0xfc>)
 800877e:	2207      	movs	r2, #7
 8008780:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008782:	2100      	movs	r1, #0
 8008784:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008788:	0600      	lsls	r0, r0, #24
 800878a:	f102 34ff 	add.w	r4, r2, #4294967295
 800878e:	d40d      	bmi.n	80087ac <xPortStartScheduler+0x88>
 8008790:	b101      	cbz	r1, 8008794 <xPortStartScheduler+0x70>
 8008792:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008794:	681a      	ldr	r2, [r3, #0]
 8008796:	2a03      	cmp	r2, #3
 8008798:	d011      	beq.n	80087be <xPortStartScheduler+0x9a>
 800879a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800879e:	f383 8811 	msr	BASEPRI, r3
 80087a2:	f3bf 8f6f 	isb	sy
 80087a6:	f3bf 8f4f 	dsb	sy
 80087aa:	e7fe      	b.n	80087aa <xPortStartScheduler+0x86>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80087ac:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80087b0:	0052      	lsls	r2, r2, #1
 80087b2:	b2d2      	uxtb	r2, r2
 80087b4:	f88d 2003 	strb.w	r2, [sp, #3]
 80087b8:	2101      	movs	r1, #1
 80087ba:	4622      	mov	r2, r4
 80087bc:	e7e2      	b.n	8008784 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 80087be:	0212      	lsls	r2, r2, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80087c0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80087c4:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80087c6:	9b01      	ldr	r3, [sp, #4]
 80087c8:	4a13      	ldr	r2, [pc, #76]	; (8008818 <xPortStartScheduler+0xf4>)
 80087ca:	b2db      	uxtb	r3, r3
 80087cc:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80087ce:	4b15      	ldr	r3, [pc, #84]	; (8008824 <xPortStartScheduler+0x100>)
 80087d0:	681a      	ldr	r2, [r3, #0]
 80087d2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80087d6:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80087d8:	681a      	ldr	r2, [r3, #0]
 80087da:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 80087de:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 80087e0:	f7ff ff86 	bl	80086f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80087e4:	4b10      	ldr	r3, [pc, #64]	; (8008828 <xPortStartScheduler+0x104>)
 80087e6:	2400      	movs	r4, #0
 80087e8:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 80087ea:	f7ff fecd 	bl	8008588 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80087ee:	4a0f      	ldr	r2, [pc, #60]	; (800882c <xPortStartScheduler+0x108>)
 80087f0:	6813      	ldr	r3, [r2, #0]
 80087f2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80087f6:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 80087f8:	f7ff feb2 	bl	8008560 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80087fc:	f001 f866 	bl	80098cc <vTaskSwitchContext>
	prvTaskExitError();
 8008800:	f7ff fe8e 	bl	8008520 <prvTaskExitError>
}
 8008804:	4620      	mov	r0, r4
 8008806:	b002      	add	sp, #8
 8008808:	bd10      	pop	{r4, pc}
 800880a:	bf00      	nop
 800880c:	e000ed00 	.word	0xe000ed00
 8008810:	410fc271 	.word	0x410fc271
 8008814:	410fc270 	.word	0x410fc270
 8008818:	e000e400 	.word	0xe000e400
 800881c:	20011e7c 	.word	0x20011e7c
 8008820:	20011e80 	.word	0x20011e80
 8008824:	e000ed20 	.word	0xe000ed20
 8008828:	20000090 	.word	0x20000090
 800882c:	e000ef34 	.word	0xe000ef34

08008830 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008830:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008834:	2b0f      	cmp	r3, #15
 8008836:	d90e      	bls.n	8008856 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008838:	4a10      	ldr	r2, [pc, #64]	; (800887c <vPortValidateInterruptPriority+0x4c>)
 800883a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800883c:	4a10      	ldr	r2, [pc, #64]	; (8008880 <vPortValidateInterruptPriority+0x50>)
 800883e:	7812      	ldrb	r2, [r2, #0]
 8008840:	429a      	cmp	r2, r3
 8008842:	d908      	bls.n	8008856 <vPortValidateInterruptPriority+0x26>
 8008844:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008848:	f383 8811 	msr	BASEPRI, r3
 800884c:	f3bf 8f6f 	isb	sy
 8008850:	f3bf 8f4f 	dsb	sy
 8008854:	e7fe      	b.n	8008854 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008856:	4b0b      	ldr	r3, [pc, #44]	; (8008884 <vPortValidateInterruptPriority+0x54>)
 8008858:	4a0b      	ldr	r2, [pc, #44]	; (8008888 <vPortValidateInterruptPriority+0x58>)
 800885a:	681b      	ldr	r3, [r3, #0]
 800885c:	6812      	ldr	r2, [r2, #0]
 800885e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008862:	4293      	cmp	r3, r2
 8008864:	d908      	bls.n	8008878 <vPortValidateInterruptPriority+0x48>
 8008866:	f04f 0350 	mov.w	r3, #80	; 0x50
 800886a:	f383 8811 	msr	BASEPRI, r3
 800886e:	f3bf 8f6f 	isb	sy
 8008872:	f3bf 8f4f 	dsb	sy
 8008876:	e7fe      	b.n	8008876 <vPortValidateInterruptPriority+0x46>
	}
 8008878:	4770      	bx	lr
 800887a:	bf00      	nop
 800887c:	e000e3f0 	.word	0xe000e3f0
 8008880:	20011e7c 	.word	0x20011e7c
 8008884:	e000ed0c 	.word	0xe000ed0c
 8008888:	20011e80 	.word	0x20011e80

0800888c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800888c:	b510      	push	{r4, lr}
 800888e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008890:	f7ff feb0 	bl	80085f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008894:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008896:	f7ff fecf 	bl	8008638 <vPortExitCritical>

	return xReturn;
}
 800889a:	fab4 f084 	clz	r0, r4
 800889e:	0940      	lsrs	r0, r0, #5
 80088a0:	bd10      	pop	{r4, pc}

080088a2 <prvCopyDataToQueue>:
{
 80088a2:	b570      	push	{r4, r5, r6, lr}
 80088a4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80088a6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80088a8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80088aa:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80088ac:	b942      	cbnz	r2, 80088c0 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80088ae:	6805      	ldr	r5, [r0, #0]
 80088b0:	b99d      	cbnz	r5, 80088da <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80088b2:	6880      	ldr	r0, [r0, #8]
 80088b4:	f001 f95c 	bl	8009b70 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80088b8:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80088ba:	3601      	adds	r6, #1
 80088bc:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80088be:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80088c0:	b96d      	cbnz	r5, 80088de <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80088c2:	6840      	ldr	r0, [r0, #4]
 80088c4:	f013 fdd8 	bl	801c478 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80088c8:	6863      	ldr	r3, [r4, #4]
 80088ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80088cc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80088ce:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80088d0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80088d2:	4293      	cmp	r3, r2
 80088d4:	d301      	bcc.n	80088da <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80088d6:	6823      	ldr	r3, [r4, #0]
 80088d8:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80088da:	2000      	movs	r0, #0
 80088dc:	e7ed      	b.n	80088ba <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80088de:	68c0      	ldr	r0, [r0, #12]
 80088e0:	f013 fdca 	bl	801c478 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80088e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80088e6:	68e2      	ldr	r2, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80088e8:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80088ea:	425b      	negs	r3, r3
 80088ec:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80088ee:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80088f0:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80088f2:	bf3e      	ittt	cc
 80088f4:	68a2      	ldrcc	r2, [r4, #8]
 80088f6:	189b      	addcc	r3, r3, r2
 80088f8:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80088fa:	2d02      	cmp	r5, #2
 80088fc:	d1ed      	bne.n	80088da <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80088fe:	b10e      	cbz	r6, 8008904 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8008900:	3e01      	subs	r6, #1
 8008902:	e7ea      	b.n	80088da <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8008904:	4630      	mov	r0, r6
 8008906:	e7d8      	b.n	80088ba <prvCopyDataToQueue+0x18>

08008908 <prvCopyDataFromQueue>:
{
 8008908:	4603      	mov	r3, r0
 800890a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800890c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800890e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008910:	b162      	cbz	r2, 800892c <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008912:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008914:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008916:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008918:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800891a:	60d9      	str	r1, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800891c:	bf24      	itt	cs
 800891e:	6819      	ldrcs	r1, [r3, #0]
 8008920:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008922:	68d9      	ldr	r1, [r3, #12]
}
 8008924:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008928:	f013 bda6 	b.w	801c478 <memcpy>
}
 800892c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008930:	4770      	bx	lr

08008932 <prvUnlockQueue>:
{
 8008932:	b570      	push	{r4, r5, r6, lr}
 8008934:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008936:	f7ff fe5d 	bl	80085f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800893a:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800893e:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008942:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008944:	2d00      	cmp	r5, #0
 8008946:	dc14      	bgt.n	8008972 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008948:	23ff      	movs	r3, #255	; 0xff
 800894a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800894e:	f7ff fe73 	bl	8008638 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008952:	f7ff fe4f 	bl	80085f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008956:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800895a:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800895e:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008960:	2d00      	cmp	r5, #0
 8008962:	dc12      	bgt.n	800898a <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008964:	23ff      	movs	r3, #255	; 0xff
 8008966:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800896a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800896e:	f7ff be63 	b.w	8008638 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008972:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008974:	2b00      	cmp	r3, #0
 8008976:	d0e7      	beq.n	8008948 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008978:	4630      	mov	r0, r6
 800897a:	f001 f81b 	bl	80099b4 <xTaskRemoveFromEventList>
 800897e:	b108      	cbz	r0, 8008984 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008980:	f001 f8a0 	bl	8009ac4 <vTaskMissedYield>
 8008984:	3d01      	subs	r5, #1
 8008986:	b26d      	sxtb	r5, r5
 8008988:	e7dc      	b.n	8008944 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800898a:	6923      	ldr	r3, [r4, #16]
 800898c:	2b00      	cmp	r3, #0
 800898e:	d0e9      	beq.n	8008964 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008990:	4630      	mov	r0, r6
 8008992:	f001 f80f 	bl	80099b4 <xTaskRemoveFromEventList>
 8008996:	b108      	cbz	r0, 800899c <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008998:	f001 f894 	bl	8009ac4 <vTaskMissedYield>
 800899c:	3d01      	subs	r5, #1
 800899e:	b26d      	sxtb	r5, r5
 80089a0:	e7de      	b.n	8008960 <prvUnlockQueue+0x2e>
	...

080089a4 <xQueueGenericReset>:
{
 80089a4:	b538      	push	{r3, r4, r5, lr}
 80089a6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80089a8:	4604      	mov	r4, r0
 80089aa:	b940      	cbnz	r0, 80089be <xQueueGenericReset+0x1a>
 80089ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089b0:	f383 8811 	msr	BASEPRI, r3
 80089b4:	f3bf 8f6f 	isb	sy
 80089b8:	f3bf 8f4f 	dsb	sy
 80089bc:	e7fe      	b.n	80089bc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80089be:	f7ff fe19 	bl	80085f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80089c2:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
 80089c6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80089c8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80089ca:	4343      	muls	r3, r0
 80089cc:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80089ce:	1a1b      	subs	r3, r3, r0
 80089d0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80089d2:	60a1      	str	r1, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80089d4:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80089d6:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80089d8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80089da:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80089dc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80089e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 80089e4:	b995      	cbnz	r5, 8008a0c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80089e6:	6923      	ldr	r3, [r4, #16]
 80089e8:	b163      	cbz	r3, 8008a04 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80089ea:	f104 0010 	add.w	r0, r4, #16
 80089ee:	f000 ffe1 	bl	80099b4 <xTaskRemoveFromEventList>
 80089f2:	b138      	cbz	r0, 8008a04 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 80089f4:	4b0a      	ldr	r3, [pc, #40]	; (8008a20 <xQueueGenericReset+0x7c>)
 80089f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80089fa:	601a      	str	r2, [r3, #0]
 80089fc:	f3bf 8f4f 	dsb	sy
 8008a00:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008a04:	f7ff fe18 	bl	8008638 <vPortExitCritical>
}
 8008a08:	2001      	movs	r0, #1
 8008a0a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008a0c:	f104 0010 	add.w	r0, r4, #16
 8008a10:	f7ff fd44 	bl	800849c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008a14:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008a18:	f7ff fd40 	bl	800849c <vListInitialise>
 8008a1c:	e7f2      	b.n	8008a04 <xQueueGenericReset+0x60>
 8008a1e:	bf00      	nop
 8008a20:	e000ed04 	.word	0xe000ed04

08008a24 <xQueueGenericCreateStatic>:
	{
 8008a24:	b513      	push	{r0, r1, r4, lr}
 8008a26:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008a28:	b940      	cbnz	r0, 8008a3c <xQueueGenericCreateStatic+0x18>
 8008a2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a2e:	f383 8811 	msr	BASEPRI, r3
 8008a32:	f3bf 8f6f 	isb	sy
 8008a36:	f3bf 8f4f 	dsb	sy
 8008a3a:	e7fe      	b.n	8008a3a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8008a3c:	b943      	cbnz	r3, 8008a50 <xQueueGenericCreateStatic+0x2c>
 8008a3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a42:	f383 8811 	msr	BASEPRI, r3
 8008a46:	f3bf 8f6f 	isb	sy
 8008a4a:	f3bf 8f4f 	dsb	sy
 8008a4e:	e7fe      	b.n	8008a4e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008a50:	b14a      	cbz	r2, 8008a66 <xQueueGenericCreateStatic+0x42>
 8008a52:	b991      	cbnz	r1, 8008a7a <xQueueGenericCreateStatic+0x56>
 8008a54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a58:	f383 8811 	msr	BASEPRI, r3
 8008a5c:	f3bf 8f6f 	isb	sy
 8008a60:	f3bf 8f4f 	dsb	sy
 8008a64:	e7fe      	b.n	8008a64 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008a66:	b141      	cbz	r1, 8008a7a <xQueueGenericCreateStatic+0x56>
 8008a68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a6c:	f383 8811 	msr	BASEPRI, r3
 8008a70:	f3bf 8f6f 	isb	sy
 8008a74:	f3bf 8f4f 	dsb	sy
 8008a78:	e7fe      	b.n	8008a78 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008a7a:	2350      	movs	r3, #80	; 0x50
 8008a7c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008a7e:	9b01      	ldr	r3, [sp, #4]
 8008a80:	2b50      	cmp	r3, #80	; 0x50
 8008a82:	d008      	beq.n	8008a96 <xQueueGenericCreateStatic+0x72>
 8008a84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a88:	f383 8811 	msr	BASEPRI, r3
 8008a8c:	f3bf 8f6f 	isb	sy
 8008a90:	f3bf 8f4f 	dsb	sy
 8008a94:	e7fe      	b.n	8008a94 <xQueueGenericCreateStatic+0x70>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008a96:	2900      	cmp	r1, #0
 8008a98:	bf08      	it	eq
 8008a9a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008a9c:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008a9e:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008aa0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008aa2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008aa6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008aaa:	4619      	mov	r1, r3
 8008aac:	4620      	mov	r0, r4
 8008aae:	f7ff ff79 	bl	80089a4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008ab2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008ab6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8008aba:	4620      	mov	r0, r4
 8008abc:	b002      	add	sp, #8
 8008abe:	bd10      	pop	{r4, pc}

08008ac0 <xQueueGenericCreate>:
	{
 8008ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ac2:	460d      	mov	r5, r1
 8008ac4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008ac6:	4606      	mov	r6, r0
 8008ac8:	b940      	cbnz	r0, 8008adc <xQueueGenericCreate+0x1c>
 8008aca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ace:	f383 8811 	msr	BASEPRI, r3
 8008ad2:	f3bf 8f6f 	isb	sy
 8008ad6:	f3bf 8f4f 	dsb	sy
 8008ada:	e7fe      	b.n	8008ada <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008adc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008ade:	3050      	adds	r0, #80	; 0x50
 8008ae0:	f7ff fc18 	bl	8008314 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008ae4:	4604      	mov	r4, r0
 8008ae6:	b160      	cbz	r0, 8008b02 <xQueueGenericCreate+0x42>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008ae8:	2300      	movs	r3, #0
 8008aea:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008aee:	b955      	cbnz	r5, 8008b06 <xQueueGenericCreate+0x46>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008af0:	6020      	str	r0, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008af2:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008af6:	2101      	movs	r1, #1
 8008af8:	4620      	mov	r0, r4
 8008afa:	f7ff ff53 	bl	80089a4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008afe:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008b02:	4620      	mov	r0, r4
 8008b04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b06:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8008b0a:	6003      	str	r3, [r0, #0]
 8008b0c:	e7f1      	b.n	8008af2 <xQueueGenericCreate+0x32>

08008b0e <xQueueCreateCountingSemaphoreStatic>:
	{
 8008b0e:	b513      	push	{r0, r1, r4, lr}
 8008b10:	4613      	mov	r3, r2
 8008b12:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008b14:	b940      	cbnz	r0, 8008b28 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008b16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b1a:	f383 8811 	msr	BASEPRI, r3
 8008b1e:	f3bf 8f6f 	isb	sy
 8008b22:	f3bf 8f4f 	dsb	sy
 8008b26:	e7fe      	b.n	8008b26 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008b28:	4288      	cmp	r0, r1
 8008b2a:	d208      	bcs.n	8008b3e <xQueueCreateCountingSemaphoreStatic+0x30>
 8008b2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b30:	f383 8811 	msr	BASEPRI, r3
 8008b34:	f3bf 8f6f 	isb	sy
 8008b38:	f3bf 8f4f 	dsb	sy
 8008b3c:	e7fe      	b.n	8008b3c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008b3e:	2202      	movs	r2, #2
 8008b40:	9200      	str	r2, [sp, #0]
 8008b42:	2200      	movs	r2, #0
 8008b44:	4611      	mov	r1, r2
 8008b46:	f7ff ff6d 	bl	8008a24 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008b4a:	b100      	cbz	r0, 8008b4e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008b4c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008b4e:	b002      	add	sp, #8
 8008b50:	bd10      	pop	{r4, pc}

08008b52 <xQueueCreateCountingSemaphore>:
	{
 8008b52:	b510      	push	{r4, lr}
 8008b54:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008b56:	b940      	cbnz	r0, 8008b6a <xQueueCreateCountingSemaphore+0x18>
 8008b58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b5c:	f383 8811 	msr	BASEPRI, r3
 8008b60:	f3bf 8f6f 	isb	sy
 8008b64:	f3bf 8f4f 	dsb	sy
 8008b68:	e7fe      	b.n	8008b68 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008b6a:	4288      	cmp	r0, r1
 8008b6c:	d208      	bcs.n	8008b80 <xQueueCreateCountingSemaphore+0x2e>
 8008b6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b72:	f383 8811 	msr	BASEPRI, r3
 8008b76:	f3bf 8f6f 	isb	sy
 8008b7a:	f3bf 8f4f 	dsb	sy
 8008b7e:	e7fe      	b.n	8008b7e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008b80:	2202      	movs	r2, #2
 8008b82:	2100      	movs	r1, #0
 8008b84:	f7ff ff9c 	bl	8008ac0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008b88:	b100      	cbz	r0, 8008b8c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008b8a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008b8c:	bd10      	pop	{r4, pc}
	...

08008b90 <xQueueGenericSend>:
{
 8008b90:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008b94:	4688      	mov	r8, r1
 8008b96:	9201      	str	r2, [sp, #4]
 8008b98:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008b9a:	4604      	mov	r4, r0
 8008b9c:	b940      	cbnz	r0, 8008bb0 <xQueueGenericSend+0x20>
 8008b9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ba2:	f383 8811 	msr	BASEPRI, r3
 8008ba6:	f3bf 8f6f 	isb	sy
 8008baa:	f3bf 8f4f 	dsb	sy
 8008bae:	e7fe      	b.n	8008bae <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008bb0:	b951      	cbnz	r1, 8008bc8 <xQueueGenericSend+0x38>
 8008bb2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008bb4:	b143      	cbz	r3, 8008bc8 <xQueueGenericSend+0x38>
 8008bb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bba:	f383 8811 	msr	BASEPRI, r3
 8008bbe:	f3bf 8f6f 	isb	sy
 8008bc2:	f3bf 8f4f 	dsb	sy
 8008bc6:	e7fe      	b.n	8008bc6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008bc8:	2f02      	cmp	r7, #2
 8008bca:	d10b      	bne.n	8008be4 <xQueueGenericSend+0x54>
 8008bcc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008bce:	2b01      	cmp	r3, #1
 8008bd0:	d008      	beq.n	8008be4 <xQueueGenericSend+0x54>
 8008bd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bd6:	f383 8811 	msr	BASEPRI, r3
 8008bda:	f3bf 8f6f 	isb	sy
 8008bde:	f3bf 8f4f 	dsb	sy
 8008be2:	e7fe      	b.n	8008be2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008be4:	f000 ff74 	bl	8009ad0 <xTaskGetSchedulerState>
 8008be8:	b950      	cbnz	r0, 8008c00 <xQueueGenericSend+0x70>
 8008bea:	9e01      	ldr	r6, [sp, #4]
 8008bec:	b14e      	cbz	r6, 8008c02 <xQueueGenericSend+0x72>
 8008bee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bf2:	f383 8811 	msr	BASEPRI, r3
 8008bf6:	f3bf 8f6f 	isb	sy
 8008bfa:	f3bf 8f4f 	dsb	sy
 8008bfe:	e7fe      	b.n	8008bfe <xQueueGenericSend+0x6e>
 8008c00:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008c02:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8008c06:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8008cf0 <xQueueGenericSend+0x160>
 8008c0a:	e037      	b.n	8008c7c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008c0c:	9d01      	ldr	r5, [sp, #4]
 8008c0e:	b91d      	cbnz	r5, 8008c18 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8008c10:	f7ff fd12 	bl	8008638 <vPortExitCritical>
			return errQUEUE_FULL;
 8008c14:	2000      	movs	r0, #0
 8008c16:	e050      	b.n	8008cba <xQueueGenericSend+0x12a>
				else if( xEntryTimeSet == pdFALSE )
 8008c18:	b916      	cbnz	r6, 8008c20 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008c1a:	a802      	add	r0, sp, #8
 8008c1c:	f000 ff0a 	bl	8009a34 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008c20:	f7ff fd0a 	bl	8008638 <vPortExitCritical>
		vTaskSuspendAll();
 8008c24:	f000 fd40 	bl	80096a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008c28:	f7ff fce4 	bl	80085f4 <vPortEnterCritical>
 8008c2c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008c30:	2bff      	cmp	r3, #255	; 0xff
 8008c32:	bf08      	it	eq
 8008c34:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008c38:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008c3c:	2bff      	cmp	r3, #255	; 0xff
 8008c3e:	bf08      	it	eq
 8008c40:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008c44:	f7ff fcf8 	bl	8008638 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008c48:	a901      	add	r1, sp, #4
 8008c4a:	a802      	add	r0, sp, #8
 8008c4c:	f000 fefe 	bl	8009a4c <xTaskCheckForTimeOut>
 8008c50:	2800      	cmp	r0, #0
 8008c52:	d146      	bne.n	8008ce2 <xQueueGenericSend+0x152>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008c54:	f7ff fcce 	bl	80085f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008c58:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008c5a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008c5c:	429a      	cmp	r2, r3
 8008c5e:	d12f      	bne.n	8008cc0 <xQueueGenericSend+0x130>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008c60:	f7ff fcea 	bl	8008638 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008c64:	9901      	ldr	r1, [sp, #4]
 8008c66:	f104 0010 	add.w	r0, r4, #16
 8008c6a:	f000 fe6b 	bl	8009944 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008c6e:	4620      	mov	r0, r4
 8008c70:	f7ff fe5f 	bl	8008932 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008c74:	f000 fdb6 	bl	80097e4 <xTaskResumeAll>
 8008c78:	b350      	cbz	r0, 8008cd0 <xQueueGenericSend+0x140>
 8008c7a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008c7c:	f7ff fcba 	bl	80085f4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008c80:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008c82:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008c84:	429a      	cmp	r2, r3
 8008c86:	d301      	bcc.n	8008c8c <xQueueGenericSend+0xfc>
 8008c88:	2f02      	cmp	r7, #2
 8008c8a:	d1bf      	bne.n	8008c0c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008c8c:	463a      	mov	r2, r7
 8008c8e:	4641      	mov	r1, r8
 8008c90:	4620      	mov	r0, r4
 8008c92:	f7ff fe06 	bl	80088a2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008c96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008c98:	b11b      	cbz	r3, 8008ca2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008c9a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008c9e:	f000 fe89 	bl	80099b4 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008ca2:	b138      	cbz	r0, 8008cb4 <xQueueGenericSend+0x124>
						queueYIELD_IF_USING_PREEMPTION();
 8008ca4:	4b12      	ldr	r3, [pc, #72]	; (8008cf0 <xQueueGenericSend+0x160>)
 8008ca6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008caa:	601a      	str	r2, [r3, #0]
 8008cac:	f3bf 8f4f 	dsb	sy
 8008cb0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008cb4:	f7ff fcc0 	bl	8008638 <vPortExitCritical>
				return pdPASS;
 8008cb8:	2001      	movs	r0, #1
}
 8008cba:	b004      	add	sp, #16
 8008cbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8008cc0:	f7ff fcba 	bl	8008638 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008cc4:	4620      	mov	r0, r4
 8008cc6:	f7ff fe34 	bl	8008932 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008cca:	f000 fd8b 	bl	80097e4 <xTaskResumeAll>
 8008cce:	e7d4      	b.n	8008c7a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008cd0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008cd4:	f8ca 3000 	str.w	r3, [sl]
 8008cd8:	f3bf 8f4f 	dsb	sy
 8008cdc:	f3bf 8f6f 	isb	sy
 8008ce0:	e7cb      	b.n	8008c7a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8008ce2:	4620      	mov	r0, r4
 8008ce4:	f7ff fe25 	bl	8008932 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008ce8:	f000 fd7c 	bl	80097e4 <xTaskResumeAll>
 8008cec:	e792      	b.n	8008c14 <xQueueGenericSend+0x84>
 8008cee:	bf00      	nop
 8008cf0:	e000ed04 	.word	0xe000ed04

08008cf4 <xQueueGenericSendFromISR>:
{
 8008cf4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008cf8:	4689      	mov	r9, r1
 8008cfa:	4690      	mov	r8, r2
 8008cfc:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008cfe:	4604      	mov	r4, r0
 8008d00:	b940      	cbnz	r0, 8008d14 <xQueueGenericSendFromISR+0x20>
 8008d02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d06:	f383 8811 	msr	BASEPRI, r3
 8008d0a:	f3bf 8f6f 	isb	sy
 8008d0e:	f3bf 8f4f 	dsb	sy
 8008d12:	e7fe      	b.n	8008d12 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008d14:	b951      	cbnz	r1, 8008d2c <xQueueGenericSendFromISR+0x38>
 8008d16:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008d18:	b143      	cbz	r3, 8008d2c <xQueueGenericSendFromISR+0x38>
 8008d1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d1e:	f383 8811 	msr	BASEPRI, r3
 8008d22:	f3bf 8f6f 	isb	sy
 8008d26:	f3bf 8f4f 	dsb	sy
 8008d2a:	e7fe      	b.n	8008d2a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008d2c:	2f02      	cmp	r7, #2
 8008d2e:	d10b      	bne.n	8008d48 <xQueueGenericSendFromISR+0x54>
 8008d30:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008d32:	2b01      	cmp	r3, #1
 8008d34:	d008      	beq.n	8008d48 <xQueueGenericSendFromISR+0x54>
 8008d36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d3a:	f383 8811 	msr	BASEPRI, r3
 8008d3e:	f3bf 8f6f 	isb	sy
 8008d42:	f3bf 8f4f 	dsb	sy
 8008d46:	e7fe      	b.n	8008d46 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008d48:	f7ff fd72 	bl	8008830 <vPortValidateInterruptPriority>
	__asm volatile
 8008d4c:	f3ef 8611 	mrs	r6, BASEPRI
 8008d50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d54:	f383 8811 	msr	BASEPRI, r3
 8008d58:	f3bf 8f6f 	isb	sy
 8008d5c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008d60:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008d62:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008d64:	429a      	cmp	r2, r3
 8008d66:	d301      	bcc.n	8008d6c <xQueueGenericSendFromISR+0x78>
 8008d68:	2f02      	cmp	r7, #2
 8008d6a:	d122      	bne.n	8008db2 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008d6c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008d70:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8008d72:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008d74:	4649      	mov	r1, r9
 8008d76:	4620      	mov	r0, r4
 8008d78:	f7ff fd93 	bl	80088a2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008d7c:	1c6b      	adds	r3, r5, #1
 8008d7e:	d113      	bne.n	8008da8 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008d80:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008d82:	b90b      	cbnz	r3, 8008d88 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8008d84:	2001      	movs	r0, #1
 8008d86:	e00b      	b.n	8008da0 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008d88:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008d8c:	f000 fe12 	bl	80099b4 <xTaskRemoveFromEventList>
 8008d90:	2800      	cmp	r0, #0
 8008d92:	d0f7      	beq.n	8008d84 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8008d94:	f1b8 0f00 	cmp.w	r8, #0
 8008d98:	d0f4      	beq.n	8008d84 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008d9a:	2001      	movs	r0, #1
 8008d9c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008da0:	f386 8811 	msr	BASEPRI, r6
}
 8008da4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008da8:	3501      	adds	r5, #1
 8008daa:	b26d      	sxtb	r5, r5
 8008dac:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008db0:	e7e8      	b.n	8008d84 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8008db2:	2000      	movs	r0, #0
 8008db4:	e7f4      	b.n	8008da0 <xQueueGenericSendFromISR+0xac>

08008db6 <xQueueGiveFromISR>:
{
 8008db6:	b570      	push	{r4, r5, r6, lr}
 8008db8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008dba:	4604      	mov	r4, r0
 8008dbc:	b940      	cbnz	r0, 8008dd0 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008dbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dc2:	f383 8811 	msr	BASEPRI, r3
 8008dc6:	f3bf 8f6f 	isb	sy
 8008dca:	f3bf 8f4f 	dsb	sy
 8008dce:	e7fe      	b.n	8008dce <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008dd0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008dd2:	b143      	cbz	r3, 8008de6 <xQueueGiveFromISR+0x30>
 8008dd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dd8:	f383 8811 	msr	BASEPRI, r3
 8008ddc:	f3bf 8f6f 	isb	sy
 8008de0:	f3bf 8f4f 	dsb	sy
 8008de4:	e7fe      	b.n	8008de4 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008de6:	6803      	ldr	r3, [r0, #0]
 8008de8:	b953      	cbnz	r3, 8008e00 <xQueueGiveFromISR+0x4a>
 8008dea:	6883      	ldr	r3, [r0, #8]
 8008dec:	b143      	cbz	r3, 8008e00 <xQueueGiveFromISR+0x4a>
 8008dee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df2:	f383 8811 	msr	BASEPRI, r3
 8008df6:	f3bf 8f6f 	isb	sy
 8008dfa:	f3bf 8f4f 	dsb	sy
 8008dfe:	e7fe      	b.n	8008dfe <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008e00:	f7ff fd16 	bl	8008830 <vPortValidateInterruptPriority>
	__asm volatile
 8008e04:	f3ef 8611 	mrs	r6, BASEPRI
 8008e08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e0c:	f383 8811 	msr	BASEPRI, r3
 8008e10:	f3bf 8f6f 	isb	sy
 8008e14:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008e1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008e1c:	4293      	cmp	r3, r2
 8008e1e:	d91c      	bls.n	8008e5a <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e20:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008e24:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e26:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008e28:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8008e2a:	1c5a      	adds	r2, r3, #1
 8008e2c:	d110      	bne.n	8008e50 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008e2e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008e30:	b90b      	cbnz	r3, 8008e36 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008e32:	2001      	movs	r0, #1
 8008e34:	e009      	b.n	8008e4a <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008e36:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008e3a:	f000 fdbb 	bl	80099b4 <xTaskRemoveFromEventList>
 8008e3e:	2800      	cmp	r0, #0
 8008e40:	d0f7      	beq.n	8008e32 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008e42:	2d00      	cmp	r5, #0
 8008e44:	d0f5      	beq.n	8008e32 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008e46:	2001      	movs	r0, #1
 8008e48:	6028      	str	r0, [r5, #0]
	__asm volatile
 8008e4a:	f386 8811 	msr	BASEPRI, r6
}
 8008e4e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008e50:	3301      	adds	r3, #1
 8008e52:	b25b      	sxtb	r3, r3
 8008e54:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008e58:	e7eb      	b.n	8008e32 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8008e5a:	2000      	movs	r0, #0
 8008e5c:	e7f5      	b.n	8008e4a <xQueueGiveFromISR+0x94>
	...

08008e60 <xQueueReceive>:
{
 8008e60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008e64:	b085      	sub	sp, #20
 8008e66:	460f      	mov	r7, r1
 8008e68:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008e6a:	4604      	mov	r4, r0
 8008e6c:	b940      	cbnz	r0, 8008e80 <xQueueReceive+0x20>
	__asm volatile
 8008e6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e72:	f383 8811 	msr	BASEPRI, r3
 8008e76:	f3bf 8f6f 	isb	sy
 8008e7a:	f3bf 8f4f 	dsb	sy
 8008e7e:	e7fe      	b.n	8008e7e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008e80:	b951      	cbnz	r1, 8008e98 <xQueueReceive+0x38>
 8008e82:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008e84:	b143      	cbz	r3, 8008e98 <xQueueReceive+0x38>
 8008e86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e8a:	f383 8811 	msr	BASEPRI, r3
 8008e8e:	f3bf 8f6f 	isb	sy
 8008e92:	f3bf 8f4f 	dsb	sy
 8008e96:	e7fe      	b.n	8008e96 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008e98:	f000 fe1a 	bl	8009ad0 <xTaskGetSchedulerState>
 8008e9c:	b950      	cbnz	r0, 8008eb4 <xQueueReceive+0x54>
 8008e9e:	9e01      	ldr	r6, [sp, #4]
 8008ea0:	b14e      	cbz	r6, 8008eb6 <xQueueReceive+0x56>
 8008ea2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ea6:	f383 8811 	msr	BASEPRI, r3
 8008eaa:	f3bf 8f6f 	isb	sy
 8008eae:	f3bf 8f4f 	dsb	sy
 8008eb2:	e7fe      	b.n	8008eb2 <xQueueReceive+0x52>
 8008eb4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008eb6:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 8008eba:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8008f9c <xQueueReceive+0x13c>
 8008ebe:	e03b      	b.n	8008f38 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008ec0:	9d01      	ldr	r5, [sp, #4]
 8008ec2:	b91d      	cbnz	r5, 8008ecc <xQueueReceive+0x6c>
					taskEXIT_CRITICAL();
 8008ec4:	f7ff fbb8 	bl	8008638 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008ec8:	2000      	movs	r0, #0
 8008eca:	e052      	b.n	8008f72 <xQueueReceive+0x112>
				else if( xEntryTimeSet == pdFALSE )
 8008ecc:	b916      	cbnz	r6, 8008ed4 <xQueueReceive+0x74>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008ece:	a802      	add	r0, sp, #8
 8008ed0:	f000 fdb0 	bl	8009a34 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008ed4:	f7ff fbb0 	bl	8008638 <vPortExitCritical>
		vTaskSuspendAll();
 8008ed8:	f000 fbe6 	bl	80096a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008edc:	f7ff fb8a 	bl	80085f4 <vPortEnterCritical>
 8008ee0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008ee4:	2bff      	cmp	r3, #255	; 0xff
 8008ee6:	bf08      	it	eq
 8008ee8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8008eec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008ef0:	2bff      	cmp	r3, #255	; 0xff
 8008ef2:	bf08      	it	eq
 8008ef4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8008ef8:	f7ff fb9e 	bl	8008638 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008efc:	a901      	add	r1, sp, #4
 8008efe:	a802      	add	r0, sp, #8
 8008f00:	f000 fda4 	bl	8009a4c <xTaskCheckForTimeOut>
 8008f04:	2800      	cmp	r0, #0
 8008f06:	d13d      	bne.n	8008f84 <xQueueReceive+0x124>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008f08:	4620      	mov	r0, r4
 8008f0a:	f7ff fcbf 	bl	800888c <prvIsQueueEmpty>
 8008f0e:	b398      	cbz	r0, 8008f78 <xQueueReceive+0x118>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008f10:	9901      	ldr	r1, [sp, #4]
 8008f12:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008f16:	f000 fd15 	bl	8009944 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008f1a:	4620      	mov	r0, r4
 8008f1c:	f7ff fd09 	bl	8008932 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008f20:	f000 fc60 	bl	80097e4 <xTaskResumeAll>
 8008f24:	b938      	cbnz	r0, 8008f36 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8008f26:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008f2a:	f8c9 3000 	str.w	r3, [r9]
 8008f2e:	f3bf 8f4f 	dsb	sy
 8008f32:	f3bf 8f6f 	isb	sy
 8008f36:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008f38:	f7ff fb5c 	bl	80085f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f3c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f3e:	2d00      	cmp	r5, #0
 8008f40:	d0be      	beq.n	8008ec0 <xQueueReceive+0x60>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f42:	4639      	mov	r1, r7
 8008f44:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f46:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f48:	f7ff fcde 	bl	8008908 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f4c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f4e:	6923      	ldr	r3, [r4, #16]
 8008f50:	b163      	cbz	r3, 8008f6c <xQueueReceive+0x10c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f52:	f104 0010 	add.w	r0, r4, #16
 8008f56:	f000 fd2d 	bl	80099b4 <xTaskRemoveFromEventList>
 8008f5a:	b138      	cbz	r0, 8008f6c <xQueueReceive+0x10c>
						queueYIELD_IF_USING_PREEMPTION();
 8008f5c:	4b0f      	ldr	r3, [pc, #60]	; (8008f9c <xQueueReceive+0x13c>)
 8008f5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f62:	601a      	str	r2, [r3, #0]
 8008f64:	f3bf 8f4f 	dsb	sy
 8008f68:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008f6c:	f7ff fb64 	bl	8008638 <vPortExitCritical>
				return pdPASS;
 8008f70:	2001      	movs	r0, #1
}
 8008f72:	b005      	add	sp, #20
 8008f74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8008f78:	4620      	mov	r0, r4
 8008f7a:	f7ff fcda 	bl	8008932 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008f7e:	f000 fc31 	bl	80097e4 <xTaskResumeAll>
 8008f82:	e7d8      	b.n	8008f36 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8008f84:	4620      	mov	r0, r4
 8008f86:	f7ff fcd4 	bl	8008932 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008f8a:	f000 fc2b 	bl	80097e4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008f8e:	4620      	mov	r0, r4
 8008f90:	f7ff fc7c 	bl	800888c <prvIsQueueEmpty>
 8008f94:	2800      	cmp	r0, #0
 8008f96:	d0ce      	beq.n	8008f36 <xQueueReceive+0xd6>
 8008f98:	e796      	b.n	8008ec8 <xQueueReceive+0x68>
 8008f9a:	bf00      	nop
 8008f9c:	e000ed04 	.word	0xe000ed04

08008fa0 <xQueueSemaphoreTake>:
{
 8008fa0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8008fa4:	4604      	mov	r4, r0
{
 8008fa6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008fa8:	b940      	cbnz	r0, 8008fbc <xQueueSemaphoreTake+0x1c>
 8008faa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fae:	f383 8811 	msr	BASEPRI, r3
 8008fb2:	f3bf 8f6f 	isb	sy
 8008fb6:	f3bf 8f4f 	dsb	sy
 8008fba:	e7fe      	b.n	8008fba <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008fbc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8008fbe:	b145      	cbz	r5, 8008fd2 <xQueueSemaphoreTake+0x32>
 8008fc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fc4:	f383 8811 	msr	BASEPRI, r3
 8008fc8:	f3bf 8f6f 	isb	sy
 8008fcc:	f3bf 8f4f 	dsb	sy
 8008fd0:	e7fe      	b.n	8008fd0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008fd2:	f000 fd7d 	bl	8009ad0 <xTaskGetSchedulerState>
 8008fd6:	b950      	cbnz	r0, 8008fee <xQueueSemaphoreTake+0x4e>
 8008fd8:	9d01      	ldr	r5, [sp, #4]
 8008fda:	b145      	cbz	r5, 8008fee <xQueueSemaphoreTake+0x4e>
 8008fdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fe0:	f383 8811 	msr	BASEPRI, r3
 8008fe4:	f3bf 8f6f 	isb	sy
 8008fe8:	f3bf 8f4f 	dsb	sy
 8008fec:	e7fe      	b.n	8008fec <xQueueSemaphoreTake+0x4c>
 8008fee:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008ff0:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 8008ff2:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8009120 <xQueueSemaphoreTake+0x180>
 8008ff6:	e04f      	b.n	8009098 <xQueueSemaphoreTake+0xf8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008ff8:	9b01      	ldr	r3, [sp, #4]
 8008ffa:	b963      	cbnz	r3, 8009016 <xQueueSemaphoreTake+0x76>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008ffc:	b145      	cbz	r5, 8009010 <xQueueSemaphoreTake+0x70>
 8008ffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009002:	f383 8811 	msr	BASEPRI, r3
 8009006:	f3bf 8f6f 	isb	sy
 800900a:	f3bf 8f4f 	dsb	sy
 800900e:	e7fe      	b.n	800900e <xQueueSemaphoreTake+0x6e>
					taskEXIT_CRITICAL();
 8009010:	f7ff fb12 	bl	8008638 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009014:	e05e      	b.n	80090d4 <xQueueSemaphoreTake+0x134>
				else if( xEntryTimeSet == pdFALSE )
 8009016:	b916      	cbnz	r6, 800901e <xQueueSemaphoreTake+0x7e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009018:	a802      	add	r0, sp, #8
 800901a:	f000 fd0b 	bl	8009a34 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800901e:	f7ff fb0b 	bl	8008638 <vPortExitCritical>
		vTaskSuspendAll();
 8009022:	f000 fb41 	bl	80096a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009026:	f7ff fae5 	bl	80085f4 <vPortEnterCritical>
 800902a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800902e:	2bff      	cmp	r3, #255	; 0xff
 8009030:	bf08      	it	eq
 8009032:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009036:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800903a:	2bff      	cmp	r3, #255	; 0xff
 800903c:	bf08      	it	eq
 800903e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009042:	f7ff faf9 	bl	8008638 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009046:	a901      	add	r1, sp, #4
 8009048:	a802      	add	r0, sp, #8
 800904a:	f000 fcff 	bl	8009a4c <xTaskCheckForTimeOut>
 800904e:	2800      	cmp	r0, #0
 8009050:	d14a      	bne.n	80090e8 <xQueueSemaphoreTake+0x148>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009052:	4620      	mov	r0, r4
 8009054:	f7ff fc1a 	bl	800888c <prvIsQueueEmpty>
 8009058:	2800      	cmp	r0, #0
 800905a:	d03f      	beq.n	80090dc <xQueueSemaphoreTake+0x13c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800905c:	6823      	ldr	r3, [r4, #0]
 800905e:	b93b      	cbnz	r3, 8009070 <xQueueSemaphoreTake+0xd0>
						taskENTER_CRITICAL();
 8009060:	f7ff fac8 	bl	80085f4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009064:	68a0      	ldr	r0, [r4, #8]
 8009066:	f000 fd43 	bl	8009af0 <xTaskPriorityInherit>
 800906a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800906c:	f7ff fae4 	bl	8008638 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009070:	9901      	ldr	r1, [sp, #4]
 8009072:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009076:	f000 fc65 	bl	8009944 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800907a:	4620      	mov	r0, r4
 800907c:	f7ff fc59 	bl	8008932 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009080:	f000 fbb0 	bl	80097e4 <xTaskResumeAll>
 8009084:	b938      	cbnz	r0, 8009096 <xQueueSemaphoreTake+0xf6>
					portYIELD_WITHIN_API();
 8009086:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800908a:	f8c8 3000 	str.w	r3, [r8]
 800908e:	f3bf 8f4f 	dsb	sy
 8009092:	f3bf 8f6f 	isb	sy
 8009096:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009098:	f7ff faac 	bl	80085f4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800909c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800909e:	2b00      	cmp	r3, #0
 80090a0:	d0aa      	beq.n	8008ff8 <xQueueSemaphoreTake+0x58>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80090a2:	3b01      	subs	r3, #1
 80090a4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80090a6:	6823      	ldr	r3, [r4, #0]
 80090a8:	b913      	cbnz	r3, 80090b0 <xQueueSemaphoreTake+0x110>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80090aa:	f000 fdf1 	bl	8009c90 <pvTaskIncrementMutexHeldCount>
 80090ae:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80090b0:	6923      	ldr	r3, [r4, #16]
 80090b2:	b163      	cbz	r3, 80090ce <xQueueSemaphoreTake+0x12e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090b4:	f104 0010 	add.w	r0, r4, #16
 80090b8:	f000 fc7c 	bl	80099b4 <xTaskRemoveFromEventList>
 80090bc:	b138      	cbz	r0, 80090ce <xQueueSemaphoreTake+0x12e>
						queueYIELD_IF_USING_PREEMPTION();
 80090be:	4b18      	ldr	r3, [pc, #96]	; (8009120 <xQueueSemaphoreTake+0x180>)
 80090c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80090c4:	601a      	str	r2, [r3, #0]
 80090c6:	f3bf 8f4f 	dsb	sy
 80090ca:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80090ce:	f7ff fab3 	bl	8008638 <vPortExitCritical>
				return pdPASS;
 80090d2:	2501      	movs	r5, #1
}
 80090d4:	4628      	mov	r0, r5
 80090d6:	b004      	add	sp, #16
 80090d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80090dc:	4620      	mov	r0, r4
 80090de:	f7ff fc28 	bl	8008932 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80090e2:	f000 fb7f 	bl	80097e4 <xTaskResumeAll>
 80090e6:	e7d6      	b.n	8009096 <xQueueSemaphoreTake+0xf6>
			prvUnlockQueue( pxQueue );
 80090e8:	4620      	mov	r0, r4
 80090ea:	f7ff fc22 	bl	8008932 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80090ee:	f000 fb79 	bl	80097e4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80090f2:	4620      	mov	r0, r4
 80090f4:	f7ff fbca 	bl	800888c <prvIsQueueEmpty>
 80090f8:	2800      	cmp	r0, #0
 80090fa:	d0cc      	beq.n	8009096 <xQueueSemaphoreTake+0xf6>
					if( xInheritanceOccurred != pdFALSE )
 80090fc:	2d00      	cmp	r5, #0
 80090fe:	d0e9      	beq.n	80090d4 <xQueueSemaphoreTake+0x134>
						taskENTER_CRITICAL();
 8009100:	f7ff fa78 	bl	80085f4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009104:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009106:	b119      	cbz	r1, 8009110 <xQueueSemaphoreTake+0x170>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009108:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800910a:	6819      	ldr	r1, [r3, #0]
 800910c:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009110:	68a0      	ldr	r0, [r4, #8]
 8009112:	f000 fd6f 	bl	8009bf4 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8009116:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8009118:	f7ff fa8e 	bl	8008638 <vPortExitCritical>
 800911c:	e7da      	b.n	80090d4 <xQueueSemaphoreTake+0x134>
 800911e:	bf00      	nop
 8009120:	e000ed04 	.word	0xe000ed04

08009124 <xQueueReceiveFromISR>:
{
 8009124:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009128:	4689      	mov	r9, r1
 800912a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800912c:	4605      	mov	r5, r0
 800912e:	b940      	cbnz	r0, 8009142 <xQueueReceiveFromISR+0x1e>
 8009130:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009134:	f383 8811 	msr	BASEPRI, r3
 8009138:	f3bf 8f6f 	isb	sy
 800913c:	f3bf 8f4f 	dsb	sy
 8009140:	e7fe      	b.n	8009140 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009142:	b951      	cbnz	r1, 800915a <xQueueReceiveFromISR+0x36>
 8009144:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009146:	b143      	cbz	r3, 800915a <xQueueReceiveFromISR+0x36>
 8009148:	f04f 0350 	mov.w	r3, #80	; 0x50
 800914c:	f383 8811 	msr	BASEPRI, r3
 8009150:	f3bf 8f6f 	isb	sy
 8009154:	f3bf 8f4f 	dsb	sy
 8009158:	e7fe      	b.n	8009158 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800915a:	f7ff fb69 	bl	8008830 <vPortValidateInterruptPriority>
	__asm volatile
 800915e:	f3ef 8711 	mrs	r7, BASEPRI
 8009162:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009166:	f383 8811 	msr	BASEPRI, r3
 800916a:	f3bf 8f6f 	isb	sy
 800916e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009172:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009174:	b31c      	cbz	r4, 80091be <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009176:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800917a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800917c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800917e:	4628      	mov	r0, r5
 8009180:	f7ff fbc2 	bl	8008908 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009184:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009186:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009188:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800918a:	d113      	bne.n	80091b4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800918c:	692b      	ldr	r3, [r5, #16]
 800918e:	b90b      	cbnz	r3, 8009194 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009190:	2001      	movs	r0, #1
 8009192:	e00b      	b.n	80091ac <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009194:	f105 0010 	add.w	r0, r5, #16
 8009198:	f000 fc0c 	bl	80099b4 <xTaskRemoveFromEventList>
 800919c:	2800      	cmp	r0, #0
 800919e:	d0f7      	beq.n	8009190 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80091a0:	f1b8 0f00 	cmp.w	r8, #0
 80091a4:	d0f4      	beq.n	8009190 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80091a6:	2001      	movs	r0, #1
 80091a8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80091ac:	f387 8811 	msr	BASEPRI, r7
}
 80091b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80091b4:	3601      	adds	r6, #1
 80091b6:	b276      	sxtb	r6, r6
 80091b8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80091bc:	e7e8      	b.n	8009190 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80091be:	4620      	mov	r0, r4
 80091c0:	e7f4      	b.n	80091ac <xQueueReceiveFromISR+0x88>
	...

080091c4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80091c4:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80091c6:	4a07      	ldr	r2, [pc, #28]	; (80091e4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80091c8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80091ca:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80091ce:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80091d2:	b91d      	cbnz	r5, 80091dc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80091d4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80091d8:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80091da:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80091dc:	3301      	adds	r3, #1
 80091de:	2b08      	cmp	r3, #8
 80091e0:	d1f3      	bne.n	80091ca <vQueueAddToRegistry+0x6>
 80091e2:	e7fa      	b.n	80091da <vQueueAddToRegistry+0x16>
 80091e4:	20012c70 	.word	0x20012c70

080091e8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80091e8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80091ea:	4a08      	ldr	r2, [pc, #32]	; (800920c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80091ec:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80091ee:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 80091f2:	684c      	ldr	r4, [r1, #4]
 80091f4:	4284      	cmp	r4, r0
 80091f6:	d104      	bne.n	8009202 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80091f8:	2000      	movs	r0, #0
 80091fa:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80091fe:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009200:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009202:	3301      	adds	r3, #1
 8009204:	2b08      	cmp	r3, #8
 8009206:	d1f2      	bne.n	80091ee <vQueueUnregisterQueue+0x6>
 8009208:	e7fa      	b.n	8009200 <vQueueUnregisterQueue+0x18>
 800920a:	bf00      	nop
 800920c:	20012c70 	.word	0x20012c70

08009210 <vQueueDelete>:
{
 8009210:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009212:	4604      	mov	r4, r0
 8009214:	b940      	cbnz	r0, 8009228 <vQueueDelete+0x18>
	__asm volatile
 8009216:	f04f 0350 	mov.w	r3, #80	; 0x50
 800921a:	f383 8811 	msr	BASEPRI, r3
 800921e:	f3bf 8f6f 	isb	sy
 8009222:	f3bf 8f4f 	dsb	sy
 8009226:	e7fe      	b.n	8009226 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009228:	f7ff ffde 	bl	80091e8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800922c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009230:	b923      	cbnz	r3, 800923c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009232:	4620      	mov	r0, r4
}
 8009234:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009238:	f7ff b8f8 	b.w	800842c <vPortFree>
}
 800923c:	bd10      	pop	{r4, pc}

0800923e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800923e:	b570      	push	{r4, r5, r6, lr}
 8009240:	4604      	mov	r4, r0
 8009242:	460d      	mov	r5, r1
 8009244:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009246:	f7ff f9d5 	bl	80085f4 <vPortEnterCritical>
 800924a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800924e:	2bff      	cmp	r3, #255	; 0xff
 8009250:	bf04      	itt	eq
 8009252:	2300      	moveq	r3, #0
 8009254:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009258:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800925c:	2bff      	cmp	r3, #255	; 0xff
 800925e:	bf04      	itt	eq
 8009260:	2300      	moveq	r3, #0
 8009262:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009266:	f7ff f9e7 	bl	8008638 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800926a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800926c:	b92b      	cbnz	r3, 800927a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800926e:	4632      	mov	r2, r6
 8009270:	4629      	mov	r1, r5
 8009272:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009276:	f000 fb7f 	bl	8009978 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800927a:	4620      	mov	r0, r4
	}
 800927c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009280:	f7ff bb57 	b.w	8008932 <prvUnlockQueue>

08009284 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009284:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009288:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800928a:	f7ff f9b3 	bl	80085f4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800928e:	4b2f      	ldr	r3, [pc, #188]	; (800934c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009290:	4d2f      	ldr	r5, [pc, #188]	; (8009350 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8009292:	681a      	ldr	r2, [r3, #0]
 8009294:	4f2f      	ldr	r7, [pc, #188]	; (8009354 <prvAddNewTaskToReadyList+0xd0>)
 8009296:	3201      	adds	r2, #1
 8009298:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800929a:	682e      	ldr	r6, [r5, #0]
 800929c:	2e00      	cmp	r6, #0
 800929e:	d149      	bne.n	8009334 <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80092a0:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80092a2:	681b      	ldr	r3, [r3, #0]
 80092a4:	2b01      	cmp	r3, #1
 80092a6:	d11f      	bne.n	80092e8 <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80092a8:	f04f 0814 	mov.w	r8, #20
 80092ac:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80092b0:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80092b2:	f7ff f8f3 	bl	800849c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80092b6:	2e38      	cmp	r6, #56	; 0x38
 80092b8:	d1f8      	bne.n	80092ac <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 80092ba:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009380 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80092be:	4e26      	ldr	r6, [pc, #152]	; (8009358 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80092c0:	4640      	mov	r0, r8
 80092c2:	f7ff f8eb 	bl	800849c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80092c6:	4630      	mov	r0, r6
 80092c8:	f7ff f8e8 	bl	800849c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80092cc:	4823      	ldr	r0, [pc, #140]	; (800935c <prvAddNewTaskToReadyList+0xd8>)
 80092ce:	f7ff f8e5 	bl	800849c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80092d2:	4823      	ldr	r0, [pc, #140]	; (8009360 <prvAddNewTaskToReadyList+0xdc>)
 80092d4:	f7ff f8e2 	bl	800849c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80092d8:	4822      	ldr	r0, [pc, #136]	; (8009364 <prvAddNewTaskToReadyList+0xe0>)
 80092da:	f7ff f8df 	bl	800849c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80092de:	4b22      	ldr	r3, [pc, #136]	; (8009368 <prvAddNewTaskToReadyList+0xe4>)
 80092e0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80092e4:	4b21      	ldr	r3, [pc, #132]	; (800936c <prvAddNewTaskToReadyList+0xe8>)
 80092e6:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 80092e8:	4a21      	ldr	r2, [pc, #132]	; (8009370 <prvAddNewTaskToReadyList+0xec>)
 80092ea:	6813      	ldr	r3, [r2, #0]
 80092ec:	3301      	adds	r3, #1
 80092ee:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80092f0:	4a20      	ldr	r2, [pc, #128]	; (8009374 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80092f2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80092f4:	6811      	ldr	r1, [r2, #0]
 80092f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80092f8:	2014      	movs	r0, #20
 80092fa:	428b      	cmp	r3, r1
 80092fc:	fb00 7003 	mla	r0, r0, r3, r7
 8009300:	f104 0104 	add.w	r1, r4, #4
 8009304:	bf88      	it	hi
 8009306:	6013      	strhi	r3, [r2, #0]
 8009308:	f7ff f8d6 	bl	80084b8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800930c:	f7ff f994 	bl	8008638 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009310:	4b19      	ldr	r3, [pc, #100]	; (8009378 <prvAddNewTaskToReadyList+0xf4>)
 8009312:	681b      	ldr	r3, [r3, #0]
 8009314:	b163      	cbz	r3, 8009330 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009316:	682b      	ldr	r3, [r5, #0]
 8009318:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800931a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800931c:	429a      	cmp	r2, r3
 800931e:	d207      	bcs.n	8009330 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8009320:	4b16      	ldr	r3, [pc, #88]	; (800937c <prvAddNewTaskToReadyList+0xf8>)
 8009322:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009326:	601a      	str	r2, [r3, #0]
 8009328:	f3bf 8f4f 	dsb	sy
 800932c:	f3bf 8f6f 	isb	sy
}
 8009330:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009334:	4b10      	ldr	r3, [pc, #64]	; (8009378 <prvAddNewTaskToReadyList+0xf4>)
 8009336:	681b      	ldr	r3, [r3, #0]
 8009338:	2b00      	cmp	r3, #0
 800933a:	d1d5      	bne.n	80092e8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800933c:	682b      	ldr	r3, [r5, #0]
 800933e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009340:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009342:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009344:	bf98      	it	ls
 8009346:	602c      	strls	r4, [r5, #0]
 8009348:	e7ce      	b.n	80092e8 <prvAddNewTaskToReadyList+0x64>
 800934a:	bf00      	nop
 800934c:	200122f0 	.word	0x200122f0
 8009350:	20011e84 	.word	0x20011e84
 8009354:	20011e90 	.word	0x20011e90
 8009358:	2001231c 	.word	0x2001231c
 800935c:	20012338 	.word	0x20012338
 8009360:	20012364 	.word	0x20012364
 8009364:	20012350 	.word	0x20012350
 8009368:	20011e88 	.word	0x20011e88
 800936c:	20011e8c 	.word	0x20011e8c
 8009370:	20012300 	.word	0x20012300
 8009374:	20012304 	.word	0x20012304
 8009378:	2001234c 	.word	0x2001234c
 800937c:	e000ed04 	.word	0xe000ed04
 8009380:	20012308 	.word	0x20012308

08009384 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 8009384:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009386:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800938a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800938c:	b93b      	cbnz	r3, 800939e <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 800938e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009390:	f7ff f84c 	bl	800842c <vPortFree>
				vPortFree( pxTCB );
 8009394:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 8009396:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800939a:	f7ff b847 	b.w	800842c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800939e:	2b01      	cmp	r3, #1
 80093a0:	d0f9      	beq.n	8009396 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80093a2:	2b02      	cmp	r3, #2
 80093a4:	d008      	beq.n	80093b8 <prvDeleteTCB+0x34>
 80093a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093aa:	f383 8811 	msr	BASEPRI, r3
 80093ae:	f3bf 8f6f 	isb	sy
 80093b2:	f3bf 8f4f 	dsb	sy
 80093b6:	e7fe      	b.n	80093b6 <prvDeleteTCB+0x32>
	}
 80093b8:	bd10      	pop	{r4, pc}
	...

080093bc <prvIdleTask>:
{
 80093bc:	b580      	push	{r7, lr}
				taskYIELD();
 80093be:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800941c <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80093c2:	4f12      	ldr	r7, [pc, #72]	; (800940c <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80093c4:	4c12      	ldr	r4, [pc, #72]	; (8009410 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80093c6:	4d13      	ldr	r5, [pc, #76]	; (8009414 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80093c8:	6823      	ldr	r3, [r4, #0]
 80093ca:	b963      	cbnz	r3, 80093e6 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80093cc:	4b12      	ldr	r3, [pc, #72]	; (8009418 <prvIdleTask+0x5c>)
 80093ce:	681b      	ldr	r3, [r3, #0]
 80093d0:	2b01      	cmp	r3, #1
 80093d2:	d9f8      	bls.n	80093c6 <prvIdleTask+0xa>
				taskYIELD();
 80093d4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80093d8:	f8c8 3000 	str.w	r3, [r8]
 80093dc:	f3bf 8f4f 	dsb	sy
 80093e0:	f3bf 8f6f 	isb	sy
 80093e4:	e7ee      	b.n	80093c4 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 80093e6:	f7ff f905 	bl	80085f4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80093ea:	68fb      	ldr	r3, [r7, #12]
 80093ec:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80093ee:	1d30      	adds	r0, r6, #4
 80093f0:	f7ff f885 	bl	80084fe <uxListRemove>
				--uxCurrentNumberOfTasks;
 80093f4:	682b      	ldr	r3, [r5, #0]
 80093f6:	3b01      	subs	r3, #1
 80093f8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80093fa:	6823      	ldr	r3, [r4, #0]
 80093fc:	3b01      	subs	r3, #1
 80093fe:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009400:	f7ff f91a 	bl	8008638 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009404:	4630      	mov	r0, r6
 8009406:	f7ff ffbd 	bl	8009384 <prvDeleteTCB>
 800940a:	e7dd      	b.n	80093c8 <prvIdleTask+0xc>
 800940c:	20012364 	.word	0x20012364
 8009410:	200122f4 	.word	0x200122f4
 8009414:	200122f0 	.word	0x200122f0
 8009418:	20011e90 	.word	0x20011e90
 800941c:	e000ed04 	.word	0xe000ed04

08009420 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009420:	4a06      	ldr	r2, [pc, #24]	; (800943c <prvResetNextTaskUnblockTime+0x1c>)
 8009422:	6813      	ldr	r3, [r2, #0]
 8009424:	6819      	ldr	r1, [r3, #0]
 8009426:	4b06      	ldr	r3, [pc, #24]	; (8009440 <prvResetNextTaskUnblockTime+0x20>)
 8009428:	b919      	cbnz	r1, 8009432 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800942a:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800942e:	601a      	str	r2, [r3, #0]
	}
}
 8009430:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009432:	6812      	ldr	r2, [r2, #0]
 8009434:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009436:	68d2      	ldr	r2, [r2, #12]
 8009438:	6852      	ldr	r2, [r2, #4]
 800943a:	e7f8      	b.n	800942e <prvResetNextTaskUnblockTime+0xe>
 800943c:	20011e88 	.word	0x20011e88
 8009440:	20012330 	.word	0x20012330

08009444 <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009444:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009448:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800944c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009450:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009452:	4607      	mov	r7, r0
 8009454:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009456:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009458:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800945a:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800945c:	f013 f817 	bl	801c48e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009460:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009462:	f1a9 0904 	sub.w	r9, r9, #4
 8009466:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009468:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800946c:	b3a5      	cbz	r5, 80094d8 <prvInitialiseNewTask.isra.2+0x94>
 800946e:	1e6b      	subs	r3, r5, #1
 8009470:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009474:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009476:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800947a:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800947e:	7819      	ldrb	r1, [r3, #0]
 8009480:	b109      	cbz	r1, 8009486 <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009482:	42ab      	cmp	r3, r5
 8009484:	d1f7      	bne.n	8009476 <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009486:	2300      	movs	r3, #0
 8009488:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800948c:	9d08      	ldr	r5, [sp, #32]
 800948e:	2d37      	cmp	r5, #55	; 0x37
 8009490:	bf28      	it	cs
 8009492:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009494:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009498:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800949a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800949c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800949e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80094a2:	f7ff f806 	bl	80084b2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80094a6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80094aa:	f104 0018 	add.w	r0, r4, #24
 80094ae:	f7ff f800 	bl	80084b2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80094b2:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80094b6:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80094b8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80094ba:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80094bc:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80094c0:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80094c4:	4642      	mov	r2, r8
 80094c6:	4639      	mov	r1, r7
 80094c8:	4648      	mov	r0, r9
 80094ca:	f7ff f867 	bl	800859c <pxPortInitialiseStack>
 80094ce:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80094d0:	b106      	cbz	r6, 80094d4 <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80094d2:	6034      	str	r4, [r6, #0]
}
 80094d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80094d8:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80094dc:	e7d6      	b.n	800948c <prvInitialiseNewTask.isra.2+0x48>
	...

080094e0 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80094e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80094e2:	4b16      	ldr	r3, [pc, #88]	; (800953c <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094e4:	4e16      	ldr	r6, [pc, #88]	; (8009540 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 80094e6:	681c      	ldr	r4, [r3, #0]
{
 80094e8:	4605      	mov	r5, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094ea:	6830      	ldr	r0, [r6, #0]
 80094ec:	3004      	adds	r0, #4
{
 80094ee:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094f0:	f7ff f805 	bl	80084fe <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80094f4:	1c6b      	adds	r3, r5, #1
 80094f6:	4633      	mov	r3, r6
 80094f8:	d107      	bne.n	800950a <prvAddCurrentTaskToDelayedList+0x2a>
 80094fa:	b137      	cbz	r7, 800950a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80094fc:	6831      	ldr	r1, [r6, #0]
 80094fe:	4811      	ldr	r0, [pc, #68]	; (8009544 <prvAddCurrentTaskToDelayedList+0x64>)
 8009500:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009502:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009506:	f7fe bfd7 	b.w	80084b8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800950a:	681a      	ldr	r2, [r3, #0]
 800950c:	1964      	adds	r4, r4, r5
 800950e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8009510:	d307      	bcc.n	8009522 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009512:	4a0d      	ldr	r2, [pc, #52]	; (8009548 <prvAddCurrentTaskToDelayedList+0x68>)
 8009514:	6810      	ldr	r0, [r2, #0]
 8009516:	6819      	ldr	r1, [r3, #0]
}
 8009518:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800951c:	3104      	adds	r1, #4
 800951e:	f7fe bfd7 	b.w	80084d0 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009522:	4a0a      	ldr	r2, [pc, #40]	; (800954c <prvAddCurrentTaskToDelayedList+0x6c>)
 8009524:	6810      	ldr	r0, [r2, #0]
 8009526:	6819      	ldr	r1, [r3, #0]
 8009528:	3104      	adds	r1, #4
 800952a:	f7fe ffd1 	bl	80084d0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800952e:	4b08      	ldr	r3, [pc, #32]	; (8009550 <prvAddCurrentTaskToDelayedList+0x70>)
 8009530:	681a      	ldr	r2, [r3, #0]
 8009532:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009534:	bf88      	it	hi
 8009536:	601c      	strhi	r4, [r3, #0]
}
 8009538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800953a:	bf00      	nop
 800953c:	20012378 	.word	0x20012378
 8009540:	20011e84 	.word	0x20011e84
 8009544:	20012350 	.word	0x20012350
 8009548:	20011e8c 	.word	0x20011e8c
 800954c:	20011e88 	.word	0x20011e88
 8009550:	20012330 	.word	0x20012330

08009554 <xTaskCreateStatic>:
	{
 8009554:	b570      	push	{r4, r5, r6, lr}
 8009556:	b086      	sub	sp, #24
 8009558:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800955c:	b945      	cbnz	r5, 8009570 <xTaskCreateStatic+0x1c>
 800955e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009562:	f383 8811 	msr	BASEPRI, r3
 8009566:	f3bf 8f6f 	isb	sy
 800956a:	f3bf 8f4f 	dsb	sy
 800956e:	e7fe      	b.n	800956e <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009570:	b944      	cbnz	r4, 8009584 <xTaskCreateStatic+0x30>
 8009572:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009576:	f383 8811 	msr	BASEPRI, r3
 800957a:	f3bf 8f6f 	isb	sy
 800957e:	f3bf 8f4f 	dsb	sy
 8009582:	e7fe      	b.n	8009582 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009584:	2660      	movs	r6, #96	; 0x60
 8009586:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009588:	9e05      	ldr	r6, [sp, #20]
 800958a:	2e60      	cmp	r6, #96	; 0x60
 800958c:	d008      	beq.n	80095a0 <xTaskCreateStatic+0x4c>
 800958e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009592:	f383 8811 	msr	BASEPRI, r3
 8009596:	f3bf 8f6f 	isb	sy
 800959a:	f3bf 8f4f 	dsb	sy
 800959e:	e7fe      	b.n	800959e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80095a0:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80095a2:	2502      	movs	r5, #2
 80095a4:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80095a8:	ad04      	add	r5, sp, #16
 80095aa:	9501      	str	r5, [sp, #4]
 80095ac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80095ae:	9402      	str	r4, [sp, #8]
 80095b0:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80095b2:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80095b4:	f7ff ff46 	bl	8009444 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 80095b8:	4620      	mov	r0, r4
 80095ba:	f7ff fe63 	bl	8009284 <prvAddNewTaskToReadyList>
	}
 80095be:	9804      	ldr	r0, [sp, #16]
 80095c0:	b006      	add	sp, #24
 80095c2:	bd70      	pop	{r4, r5, r6, pc}

080095c4 <xTaskCreate>:
	{
 80095c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80095c8:	4607      	mov	r7, r0
 80095ca:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80095cc:	0090      	lsls	r0, r2, #2
	{
 80095ce:	4688      	mov	r8, r1
 80095d0:	4616      	mov	r6, r2
 80095d2:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80095d4:	f7fe fe9e 	bl	8008314 <pvPortMalloc>
			if( pxStack != NULL )
 80095d8:	4605      	mov	r5, r0
 80095da:	b1e8      	cbz	r0, 8009618 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80095dc:	2060      	movs	r0, #96	; 0x60
 80095de:	f7fe fe99 	bl	8008314 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80095e2:	4604      	mov	r4, r0
 80095e4:	b1a8      	cbz	r0, 8009612 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80095e6:	2300      	movs	r3, #0
 80095e8:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80095ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 80095ee:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80095f0:	9301      	str	r3, [sp, #4]
 80095f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80095f4:	9002      	str	r0, [sp, #8]
 80095f6:	9300      	str	r3, [sp, #0]
 80095f8:	4632      	mov	r2, r6
 80095fa:	464b      	mov	r3, r9
 80095fc:	4641      	mov	r1, r8
 80095fe:	4638      	mov	r0, r7
 8009600:	f7ff ff20 	bl	8009444 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009604:	4620      	mov	r0, r4
 8009606:	f7ff fe3d 	bl	8009284 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800960a:	2001      	movs	r0, #1
	}
 800960c:	b005      	add	sp, #20
 800960e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009612:	4628      	mov	r0, r5
 8009614:	f7fe ff0a 	bl	800842c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009618:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800961c:	e7f6      	b.n	800960c <xTaskCreate+0x48>
	...

08009620 <vTaskStartScheduler>:
{
 8009620:	b510      	push	{r4, lr}
 8009622:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009624:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009626:	aa07      	add	r2, sp, #28
 8009628:	a906      	add	r1, sp, #24
 800962a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800962c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009630:	f7fe fe34 	bl	800829c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009634:	9b05      	ldr	r3, [sp, #20]
 8009636:	9302      	str	r3, [sp, #8]
 8009638:	9b06      	ldr	r3, [sp, #24]
 800963a:	9a07      	ldr	r2, [sp, #28]
 800963c:	4915      	ldr	r1, [pc, #84]	; (8009694 <vTaskStartScheduler+0x74>)
 800963e:	4816      	ldr	r0, [pc, #88]	; (8009698 <vTaskStartScheduler+0x78>)
 8009640:	e9cd 4300 	strd	r4, r3, [sp]
 8009644:	4623      	mov	r3, r4
 8009646:	f7ff ff85 	bl	8009554 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800964a:	b1a8      	cbz	r0, 8009678 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 800964c:	f000 fb7e 	bl	8009d4c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009650:	2801      	cmp	r0, #1
 8009652:	d113      	bne.n	800967c <vTaskStartScheduler+0x5c>
 8009654:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009658:	f383 8811 	msr	BASEPRI, r3
 800965c:	f3bf 8f6f 	isb	sy
 8009660:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8009664:	4b0d      	ldr	r3, [pc, #52]	; (800969c <vTaskStartScheduler+0x7c>)
 8009666:	f04f 32ff 	mov.w	r2, #4294967295
 800966a:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800966c:	4b0c      	ldr	r3, [pc, #48]	; (80096a0 <vTaskStartScheduler+0x80>)
 800966e:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009670:	4b0c      	ldr	r3, [pc, #48]	; (80096a4 <vTaskStartScheduler+0x84>)
 8009672:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 8009674:	f7ff f856 	bl	8008724 <xPortStartScheduler>
}
 8009678:	b008      	add	sp, #32
 800967a:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800967c:	3001      	adds	r0, #1
 800967e:	d1fb      	bne.n	8009678 <vTaskStartScheduler+0x58>
 8009680:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009684:	f383 8811 	msr	BASEPRI, r3
 8009688:	f3bf 8f6f 	isb	sy
 800968c:	f3bf 8f4f 	dsb	sy
 8009690:	e7fe      	b.n	8009690 <vTaskStartScheduler+0x70>
 8009692:	bf00      	nop
 8009694:	0801eb24 	.word	0x0801eb24
 8009698:	080093bd 	.word	0x080093bd
 800969c:	20012330 	.word	0x20012330
 80096a0:	2001234c 	.word	0x2001234c
 80096a4:	20012378 	.word	0x20012378

080096a8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80096a8:	4a02      	ldr	r2, [pc, #8]	; (80096b4 <vTaskSuspendAll+0xc>)
 80096aa:	6813      	ldr	r3, [r2, #0]
 80096ac:	3301      	adds	r3, #1
 80096ae:	6013      	str	r3, [r2, #0]
}
 80096b0:	4770      	bx	lr
 80096b2:	bf00      	nop
 80096b4:	200122fc 	.word	0x200122fc

080096b8 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80096b8:	4b01      	ldr	r3, [pc, #4]	; (80096c0 <xTaskGetTickCount+0x8>)
 80096ba:	6818      	ldr	r0, [r3, #0]
}
 80096bc:	4770      	bx	lr
 80096be:	bf00      	nop
 80096c0:	20012378 	.word	0x20012378

080096c4 <xTaskIncrementTick>:
{
 80096c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80096c8:	4b3b      	ldr	r3, [pc, #236]	; (80097b8 <xTaskIncrementTick+0xf4>)
 80096ca:	681b      	ldr	r3, [r3, #0]
 80096cc:	2b00      	cmp	r3, #0
 80096ce:	d16c      	bne.n	80097aa <xTaskIncrementTick+0xe6>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80096d0:	4b3a      	ldr	r3, [pc, #232]	; (80097bc <xTaskIncrementTick+0xf8>)
 80096d2:	681c      	ldr	r4, [r3, #0]
 80096d4:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 80096d6:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80096d8:	b9bc      	cbnz	r4, 800970a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80096da:	4b39      	ldr	r3, [pc, #228]	; (80097c0 <xTaskIncrementTick+0xfc>)
 80096dc:	681a      	ldr	r2, [r3, #0]
 80096de:	6812      	ldr	r2, [r2, #0]
 80096e0:	b142      	cbz	r2, 80096f4 <xTaskIncrementTick+0x30>
 80096e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096e6:	f383 8811 	msr	BASEPRI, r3
 80096ea:	f3bf 8f6f 	isb	sy
 80096ee:	f3bf 8f4f 	dsb	sy
 80096f2:	e7fe      	b.n	80096f2 <xTaskIncrementTick+0x2e>
 80096f4:	4a33      	ldr	r2, [pc, #204]	; (80097c4 <xTaskIncrementTick+0x100>)
 80096f6:	6819      	ldr	r1, [r3, #0]
 80096f8:	6810      	ldr	r0, [r2, #0]
 80096fa:	6018      	str	r0, [r3, #0]
 80096fc:	6011      	str	r1, [r2, #0]
 80096fe:	4a32      	ldr	r2, [pc, #200]	; (80097c8 <xTaskIncrementTick+0x104>)
 8009700:	6813      	ldr	r3, [r2, #0]
 8009702:	3301      	adds	r3, #1
 8009704:	6013      	str	r3, [r2, #0]
 8009706:	f7ff fe8b 	bl	8009420 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800970a:	4d30      	ldr	r5, [pc, #192]	; (80097cc <xTaskIncrementTick+0x108>)
 800970c:	4f30      	ldr	r7, [pc, #192]	; (80097d0 <xTaskIncrementTick+0x10c>)
 800970e:	682b      	ldr	r3, [r5, #0]
 8009710:	42a3      	cmp	r3, r4
BaseType_t xSwitchRequired = pdFALSE;
 8009712:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009716:	d911      	bls.n	800973c <xTaskIncrementTick+0x78>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009718:	683a      	ldr	r2, [r7, #0]
 800971a:	4b2e      	ldr	r3, [pc, #184]	; (80097d4 <xTaskIncrementTick+0x110>)
 800971c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800971e:	2214      	movs	r2, #20
 8009720:	434a      	muls	r2, r1
 8009722:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 8009724:	2a02      	cmp	r2, #2
 8009726:	bf28      	it	cs
 8009728:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 800972c:	4a2a      	ldr	r2, [pc, #168]	; (80097d8 <xTaskIncrementTick+0x114>)
 800972e:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8009730:	2a00      	cmp	r2, #0
}
 8009732:	bf0c      	ite	eq
 8009734:	4658      	moveq	r0, fp
 8009736:	2001      	movne	r0, #1
 8009738:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800973c:	f8df 9080 	ldr.w	r9, [pc, #128]	; 80097c0 <xTaskIncrementTick+0xfc>
					prvAddTaskToReadyList( pxTCB );
 8009740:	f8df a09c 	ldr.w	sl, [pc, #156]	; 80097e0 <xTaskIncrementTick+0x11c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009744:	f8d9 2000 	ldr.w	r2, [r9]
 8009748:	6812      	ldr	r2, [r2, #0]
 800974a:	b91a      	cbnz	r2, 8009754 <xTaskIncrementTick+0x90>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800974c:	f04f 32ff 	mov.w	r2, #4294967295
 8009750:	602a      	str	r2, [r5, #0]
					break;
 8009752:	e7e1      	b.n	8009718 <xTaskIncrementTick+0x54>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009754:	f8d9 2000 	ldr.w	r2, [r9]
 8009758:	68d2      	ldr	r2, [r2, #12]
 800975a:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800975c:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 800975e:	428c      	cmp	r4, r1
 8009760:	d201      	bcs.n	8009766 <xTaskIncrementTick+0xa2>
						xNextTaskUnblockTime = xItemValue;
 8009762:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009764:	e7d8      	b.n	8009718 <xTaskIncrementTick+0x54>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009766:	f106 0804 	add.w	r8, r6, #4
 800976a:	4640      	mov	r0, r8
 800976c:	f7fe fec7 	bl	80084fe <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009770:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 8009772:	b119      	cbz	r1, 800977c <xTaskIncrementTick+0xb8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009774:	f106 0018 	add.w	r0, r6, #24
 8009778:	f7fe fec1 	bl	80084fe <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800977c:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 800977e:	f8da 1000 	ldr.w	r1, [sl]
 8009782:	4b14      	ldr	r3, [pc, #80]	; (80097d4 <xTaskIncrementTick+0x110>)
 8009784:	4288      	cmp	r0, r1
 8009786:	f04f 0214 	mov.w	r2, #20
 800978a:	bf88      	it	hi
 800978c:	f8ca 0000 	strhi.w	r0, [sl]
 8009790:	4641      	mov	r1, r8
 8009792:	fb02 3000 	mla	r0, r2, r0, r3
 8009796:	f7fe fe8f 	bl	80084b8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800979a:	6838      	ldr	r0, [r7, #0]
 800979c:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 800979e:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80097a0:	4291      	cmp	r1, r2
 80097a2:	bf28      	it	cs
 80097a4:	f04f 0b01 	movcs.w	fp, #1
 80097a8:	e7cc      	b.n	8009744 <xTaskIncrementTick+0x80>
		++uxPendedTicks;
 80097aa:	4a0c      	ldr	r2, [pc, #48]	; (80097dc <xTaskIncrementTick+0x118>)
 80097ac:	6813      	ldr	r3, [r2, #0]
 80097ae:	3301      	adds	r3, #1
 80097b0:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 80097b2:	f04f 0b00 	mov.w	fp, #0
 80097b6:	e7b9      	b.n	800972c <xTaskIncrementTick+0x68>
 80097b8:	200122fc 	.word	0x200122fc
 80097bc:	20012378 	.word	0x20012378
 80097c0:	20011e88 	.word	0x20011e88
 80097c4:	20011e8c 	.word	0x20011e8c
 80097c8:	20012334 	.word	0x20012334
 80097cc:	20012330 	.word	0x20012330
 80097d0:	20011e84 	.word	0x20011e84
 80097d4:	20011e90 	.word	0x20011e90
 80097d8:	2001237c 	.word	0x2001237c
 80097dc:	200122f8 	.word	0x200122f8
 80097e0:	20012304 	.word	0x20012304

080097e4 <xTaskResumeAll>:
{
 80097e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 80097e8:	4c2f      	ldr	r4, [pc, #188]	; (80098a8 <xTaskResumeAll+0xc4>)
 80097ea:	6823      	ldr	r3, [r4, #0]
 80097ec:	b943      	cbnz	r3, 8009800 <xTaskResumeAll+0x1c>
 80097ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097f2:	f383 8811 	msr	BASEPRI, r3
 80097f6:	f3bf 8f6f 	isb	sy
 80097fa:	f3bf 8f4f 	dsb	sy
 80097fe:	e7fe      	b.n	80097fe <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8009800:	f7fe fef8 	bl	80085f4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009804:	6823      	ldr	r3, [r4, #0]
 8009806:	3b01      	subs	r3, #1
 8009808:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800980a:	6824      	ldr	r4, [r4, #0]
 800980c:	b12c      	cbz	r4, 800981a <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800980e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009810:	f7fe ff12 	bl	8008638 <vPortExitCritical>
}
 8009814:	4620      	mov	r0, r4
 8009816:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800981a:	4b24      	ldr	r3, [pc, #144]	; (80098ac <xTaskResumeAll+0xc8>)
 800981c:	681b      	ldr	r3, [r3, #0]
 800981e:	2b00      	cmp	r3, #0
 8009820:	d0f5      	beq.n	800980e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009822:	4d23      	ldr	r5, [pc, #140]	; (80098b0 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8009824:	4e23      	ldr	r6, [pc, #140]	; (80098b4 <xTaskResumeAll+0xd0>)
 8009826:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80098c8 <xTaskResumeAll+0xe4>
 800982a:	e01d      	b.n	8009868 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800982c:	68eb      	ldr	r3, [r5, #12]
 800982e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009830:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009832:	f104 0018 	add.w	r0, r4, #24
 8009836:	f7fe fe62 	bl	80084fe <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800983a:	4638      	mov	r0, r7
 800983c:	f7fe fe5f 	bl	80084fe <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009840:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009842:	6832      	ldr	r2, [r6, #0]
 8009844:	2014      	movs	r0, #20
 8009846:	4293      	cmp	r3, r2
 8009848:	fb00 8003 	mla	r0, r0, r3, r8
 800984c:	4639      	mov	r1, r7
 800984e:	bf88      	it	hi
 8009850:	6033      	strhi	r3, [r6, #0]
 8009852:	f7fe fe31 	bl	80084b8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009856:	4b18      	ldr	r3, [pc, #96]	; (80098b8 <xTaskResumeAll+0xd4>)
 8009858:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800985a:	681b      	ldr	r3, [r3, #0]
 800985c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800985e:	429a      	cmp	r2, r3
 8009860:	d302      	bcc.n	8009868 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8009862:	4b16      	ldr	r3, [pc, #88]	; (80098bc <xTaskResumeAll+0xd8>)
 8009864:	2201      	movs	r2, #1
 8009866:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009868:	682b      	ldr	r3, [r5, #0]
 800986a:	2b00      	cmp	r3, #0
 800986c:	d1de      	bne.n	800982c <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800986e:	b10c      	cbz	r4, 8009874 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8009870:	f7ff fdd6 	bl	8009420 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009874:	4d12      	ldr	r5, [pc, #72]	; (80098c0 <xTaskResumeAll+0xdc>)
 8009876:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009878:	b144      	cbz	r4, 800988c <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800987a:	4e10      	ldr	r6, [pc, #64]	; (80098bc <xTaskResumeAll+0xd8>)
 800987c:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800987e:	f7ff ff21 	bl	80096c4 <xTaskIncrementTick>
 8009882:	b100      	cbz	r0, 8009886 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8009884:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009886:	3c01      	subs	r4, #1
 8009888:	d1f9      	bne.n	800987e <xTaskResumeAll+0x9a>
						uxPendedTicks = 0;
 800988a:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800988c:	4b0b      	ldr	r3, [pc, #44]	; (80098bc <xTaskResumeAll+0xd8>)
 800988e:	681b      	ldr	r3, [r3, #0]
 8009890:	2b00      	cmp	r3, #0
 8009892:	d0bc      	beq.n	800980e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8009894:	4b0b      	ldr	r3, [pc, #44]	; (80098c4 <xTaskResumeAll+0xe0>)
 8009896:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800989a:	601a      	str	r2, [r3, #0]
 800989c:	f3bf 8f4f 	dsb	sy
 80098a0:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80098a4:	2401      	movs	r4, #1
 80098a6:	e7b3      	b.n	8009810 <xTaskResumeAll+0x2c>
 80098a8:	200122fc 	.word	0x200122fc
 80098ac:	200122f0 	.word	0x200122f0
 80098b0:	20012338 	.word	0x20012338
 80098b4:	20012304 	.word	0x20012304
 80098b8:	20011e84 	.word	0x20011e84
 80098bc:	2001237c 	.word	0x2001237c
 80098c0:	200122f8 	.word	0x200122f8
 80098c4:	e000ed04 	.word	0xe000ed04
 80098c8:	20011e90 	.word	0x20011e90

080098cc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80098cc:	4b18      	ldr	r3, [pc, #96]	; (8009930 <vTaskSwitchContext+0x64>)
 80098ce:	681a      	ldr	r2, [r3, #0]
 80098d0:	4b18      	ldr	r3, [pc, #96]	; (8009934 <vTaskSwitchContext+0x68>)
{
 80098d2:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80098d4:	b112      	cbz	r2, 80098dc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80098d6:	2201      	movs	r2, #1
 80098d8:	601a      	str	r2, [r3, #0]
}
 80098da:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80098dc:	4d16      	ldr	r5, [pc, #88]	; (8009938 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 80098de:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80098e0:	4a16      	ldr	r2, [pc, #88]	; (800993c <vTaskSwitchContext+0x70>)
 80098e2:	682b      	ldr	r3, [r5, #0]
 80098e4:	2714      	movs	r7, #20
 80098e6:	4616      	mov	r6, r2
 80098e8:	fb07 f103 	mul.w	r1, r7, r3
 80098ec:	1850      	adds	r0, r2, r1
 80098ee:	5854      	ldr	r4, [r2, r1]
 80098f0:	b18c      	cbz	r4, 8009916 <vTaskSwitchContext+0x4a>
 80098f2:	6844      	ldr	r4, [r0, #4]
 80098f4:	3108      	adds	r1, #8
 80098f6:	6864      	ldr	r4, [r4, #4]
 80098f8:	6044      	str	r4, [r0, #4]
 80098fa:	440a      	add	r2, r1
 80098fc:	4294      	cmp	r4, r2
 80098fe:	bf04      	itt	eq
 8009900:	6862      	ldreq	r2, [r4, #4]
 8009902:	6042      	streq	r2, [r0, #4]
 8009904:	2214      	movs	r2, #20
 8009906:	fb02 6203 	mla	r2, r2, r3, r6
 800990a:	6852      	ldr	r2, [r2, #4]
 800990c:	68d1      	ldr	r1, [r2, #12]
 800990e:	4a0c      	ldr	r2, [pc, #48]	; (8009940 <vTaskSwitchContext+0x74>)
 8009910:	6011      	str	r1, [r2, #0]
 8009912:	602b      	str	r3, [r5, #0]
}
 8009914:	e7e1      	b.n	80098da <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009916:	b943      	cbnz	r3, 800992a <vTaskSwitchContext+0x5e>
 8009918:	f04f 0350 	mov.w	r3, #80	; 0x50
 800991c:	f383 8811 	msr	BASEPRI, r3
 8009920:	f3bf 8f6f 	isb	sy
 8009924:	f3bf 8f4f 	dsb	sy
 8009928:	e7fe      	b.n	8009928 <vTaskSwitchContext+0x5c>
 800992a:	3b01      	subs	r3, #1
 800992c:	e7dc      	b.n	80098e8 <vTaskSwitchContext+0x1c>
 800992e:	bf00      	nop
 8009930:	200122fc 	.word	0x200122fc
 8009934:	2001237c 	.word	0x2001237c
 8009938:	20012304 	.word	0x20012304
 800993c:	20011e90 	.word	0x20011e90
 8009940:	20011e84 	.word	0x20011e84

08009944 <vTaskPlaceOnEventList>:
{
 8009944:	b510      	push	{r4, lr}
 8009946:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009948:	b940      	cbnz	r0, 800995c <vTaskPlaceOnEventList+0x18>
 800994a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800994e:	f383 8811 	msr	BASEPRI, r3
 8009952:	f3bf 8f6f 	isb	sy
 8009956:	f3bf 8f4f 	dsb	sy
 800995a:	e7fe      	b.n	800995a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800995c:	4b05      	ldr	r3, [pc, #20]	; (8009974 <vTaskPlaceOnEventList+0x30>)
 800995e:	6819      	ldr	r1, [r3, #0]
 8009960:	3118      	adds	r1, #24
 8009962:	f7fe fdb5 	bl	80084d0 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009966:	4620      	mov	r0, r4
 8009968:	2101      	movs	r1, #1
}
 800996a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800996e:	f7ff bdb7 	b.w	80094e0 <prvAddCurrentTaskToDelayedList>
 8009972:	bf00      	nop
 8009974:	20011e84 	.word	0x20011e84

08009978 <vTaskPlaceOnEventListRestricted>:
	{
 8009978:	b538      	push	{r3, r4, r5, lr}
 800997a:	460d      	mov	r5, r1
 800997c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800997e:	b940      	cbnz	r0, 8009992 <vTaskPlaceOnEventListRestricted+0x1a>
 8009980:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009984:	f383 8811 	msr	BASEPRI, r3
 8009988:	f3bf 8f6f 	isb	sy
 800998c:	f3bf 8f4f 	dsb	sy
 8009990:	e7fe      	b.n	8009990 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009992:	4b07      	ldr	r3, [pc, #28]	; (80099b0 <vTaskPlaceOnEventListRestricted+0x38>)
 8009994:	6819      	ldr	r1, [r3, #0]
 8009996:	3118      	adds	r1, #24
 8009998:	f7fe fd8e 	bl	80084b8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800999c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800999e:	4621      	mov	r1, r4
 80099a0:	bf0c      	ite	eq
 80099a2:	4628      	moveq	r0, r5
 80099a4:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80099a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80099ac:	f7ff bd98 	b.w	80094e0 <prvAddCurrentTaskToDelayedList>
 80099b0:	20011e84 	.word	0x20011e84

080099b4 <xTaskRemoveFromEventList>:
{
 80099b4:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099b6:	68c3      	ldr	r3, [r0, #12]
 80099b8:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80099ba:	b944      	cbnz	r4, 80099ce <xTaskRemoveFromEventList+0x1a>
 80099bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099c0:	f383 8811 	msr	BASEPRI, r3
 80099c4:	f3bf 8f6f 	isb	sy
 80099c8:	f3bf 8f4f 	dsb	sy
 80099cc:	e7fe      	b.n	80099cc <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80099ce:	f104 0518 	add.w	r5, r4, #24
 80099d2:	4628      	mov	r0, r5
 80099d4:	f7fe fd93 	bl	80084fe <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80099d8:	4b10      	ldr	r3, [pc, #64]	; (8009a1c <xTaskRemoveFromEventList+0x68>)
 80099da:	681b      	ldr	r3, [r3, #0]
 80099dc:	b9db      	cbnz	r3, 8009a16 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80099de:	1d25      	adds	r5, r4, #4
 80099e0:	4628      	mov	r0, r5
 80099e2:	f7fe fd8c 	bl	80084fe <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80099e6:	4a0e      	ldr	r2, [pc, #56]	; (8009a20 <xTaskRemoveFromEventList+0x6c>)
 80099e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80099ea:	6811      	ldr	r1, [r2, #0]
 80099ec:	428b      	cmp	r3, r1
 80099ee:	bf88      	it	hi
 80099f0:	6013      	strhi	r3, [r2, #0]
 80099f2:	4a0c      	ldr	r2, [pc, #48]	; (8009a24 <xTaskRemoveFromEventList+0x70>)
 80099f4:	2014      	movs	r0, #20
 80099f6:	4629      	mov	r1, r5
 80099f8:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80099fc:	f7fe fd5c 	bl	80084b8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009a00:	4b09      	ldr	r3, [pc, #36]	; (8009a28 <xTaskRemoveFromEventList+0x74>)
 8009a02:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009a04:	681b      	ldr	r3, [r3, #0]
 8009a06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a08:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009a0a:	bf83      	ittte	hi
 8009a0c:	4b07      	ldrhi	r3, [pc, #28]	; (8009a2c <xTaskRemoveFromEventList+0x78>)
 8009a0e:	2001      	movhi	r0, #1
 8009a10:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8009a12:	2000      	movls	r0, #0
}
 8009a14:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009a16:	4629      	mov	r1, r5
 8009a18:	4805      	ldr	r0, [pc, #20]	; (8009a30 <xTaskRemoveFromEventList+0x7c>)
 8009a1a:	e7ef      	b.n	80099fc <xTaskRemoveFromEventList+0x48>
 8009a1c:	200122fc 	.word	0x200122fc
 8009a20:	20012304 	.word	0x20012304
 8009a24:	20011e90 	.word	0x20011e90
 8009a28:	20011e84 	.word	0x20011e84
 8009a2c:	2001237c 	.word	0x2001237c
 8009a30:	20012338 	.word	0x20012338

08009a34 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009a34:	4b03      	ldr	r3, [pc, #12]	; (8009a44 <vTaskInternalSetTimeOutState+0x10>)
 8009a36:	681b      	ldr	r3, [r3, #0]
 8009a38:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009a3a:	4b03      	ldr	r3, [pc, #12]	; (8009a48 <vTaskInternalSetTimeOutState+0x14>)
 8009a3c:	681b      	ldr	r3, [r3, #0]
 8009a3e:	6043      	str	r3, [r0, #4]
}
 8009a40:	4770      	bx	lr
 8009a42:	bf00      	nop
 8009a44:	20012334 	.word	0x20012334
 8009a48:	20012378 	.word	0x20012378

08009a4c <xTaskCheckForTimeOut>:
{
 8009a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009a4e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009a50:	4605      	mov	r5, r0
 8009a52:	b940      	cbnz	r0, 8009a66 <xTaskCheckForTimeOut+0x1a>
 8009a54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a58:	f383 8811 	msr	BASEPRI, r3
 8009a5c:	f3bf 8f6f 	isb	sy
 8009a60:	f3bf 8f4f 	dsb	sy
 8009a64:	e7fe      	b.n	8009a64 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8009a66:	b941      	cbnz	r1, 8009a7a <xTaskCheckForTimeOut+0x2e>
 8009a68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a6c:	f383 8811 	msr	BASEPRI, r3
 8009a70:	f3bf 8f6f 	isb	sy
 8009a74:	f3bf 8f4f 	dsb	sy
 8009a78:	e7fe      	b.n	8009a78 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8009a7a:	f7fe fdbb 	bl	80085f4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009a7e:	4b0f      	ldr	r3, [pc, #60]	; (8009abc <xTaskCheckForTimeOut+0x70>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009a80:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 8009a82:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009a84:	6823      	ldr	r3, [r4, #0]
 8009a86:	1c5e      	adds	r6, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009a88:	eba1 0200 	sub.w	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 8009a8c:	d00d      	beq.n	8009aaa <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009a8e:	4e0c      	ldr	r6, [pc, #48]	; (8009ac0 <xTaskCheckForTimeOut+0x74>)
 8009a90:	682f      	ldr	r7, [r5, #0]
 8009a92:	6836      	ldr	r6, [r6, #0]
 8009a94:	42b7      	cmp	r7, r6
 8009a96:	d001      	beq.n	8009a9c <xTaskCheckForTimeOut+0x50>
 8009a98:	4288      	cmp	r0, r1
 8009a9a:	d90d      	bls.n	8009ab8 <xTaskCheckForTimeOut+0x6c>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009a9c:	4293      	cmp	r3, r2
 8009a9e:	d909      	bls.n	8009ab4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009aa0:	1a9b      	subs	r3, r3, r2
 8009aa2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009aa4:	4628      	mov	r0, r5
 8009aa6:	f7ff ffc5 	bl	8009a34 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009aaa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009aac:	f7fe fdc4 	bl	8008638 <vPortExitCritical>
}
 8009ab0:	4620      	mov	r0, r4
 8009ab2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 8009ab4:	2300      	movs	r3, #0
 8009ab6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009ab8:	2401      	movs	r4, #1
 8009aba:	e7f7      	b.n	8009aac <xTaskCheckForTimeOut+0x60>
 8009abc:	20012378 	.word	0x20012378
 8009ac0:	20012334 	.word	0x20012334

08009ac4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009ac4:	4b01      	ldr	r3, [pc, #4]	; (8009acc <vTaskMissedYield+0x8>)
 8009ac6:	2201      	movs	r2, #1
 8009ac8:	601a      	str	r2, [r3, #0]
}
 8009aca:	4770      	bx	lr
 8009acc:	2001237c 	.word	0x2001237c

08009ad0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009ad0:	4b05      	ldr	r3, [pc, #20]	; (8009ae8 <xTaskGetSchedulerState+0x18>)
 8009ad2:	681b      	ldr	r3, [r3, #0]
 8009ad4:	b133      	cbz	r3, 8009ae4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ad6:	4b05      	ldr	r3, [pc, #20]	; (8009aec <xTaskGetSchedulerState+0x1c>)
 8009ad8:	681b      	ldr	r3, [r3, #0]
 8009ada:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8009adc:	bf0c      	ite	eq
 8009ade:	2002      	moveq	r0, #2
 8009ae0:	2000      	movne	r0, #0
 8009ae2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009ae4:	2001      	movs	r0, #1
	}
 8009ae6:	4770      	bx	lr
 8009ae8:	2001234c 	.word	0x2001234c
 8009aec:	200122fc 	.word	0x200122fc

08009af0 <xTaskPriorityInherit>:
	{
 8009af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009af2:	4604      	mov	r4, r0
 8009af4:	b340      	cbz	r0, 8009b48 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009af6:	4a1b      	ldr	r2, [pc, #108]	; (8009b64 <xTaskPriorityInherit+0x74>)
 8009af8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009afa:	6811      	ldr	r1, [r2, #0]
 8009afc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8009afe:	428b      	cmp	r3, r1
 8009b00:	4616      	mov	r6, r2
 8009b02:	d226      	bcs.n	8009b52 <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009b04:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009b06:	4d18      	ldr	r5, [pc, #96]	; (8009b68 <xTaskPriorityInherit+0x78>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009b08:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b0a:	bfa1      	itttt	ge
 8009b0c:	6832      	ldrge	r2, [r6, #0]
 8009b0e:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8009b10:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8009b14:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009b16:	2214      	movs	r2, #20
 8009b18:	fb02 5303 	mla	r3, r2, r3, r5
 8009b1c:	6942      	ldr	r2, [r0, #20]
 8009b1e:	429a      	cmp	r2, r3
 8009b20:	d113      	bne.n	8009b4a <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b22:	1d07      	adds	r7, r0, #4
 8009b24:	4638      	mov	r0, r7
 8009b26:	f7fe fcea 	bl	80084fe <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009b2a:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009b2c:	4a0f      	ldr	r2, [pc, #60]	; (8009b6c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009b2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009b30:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009b32:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009b34:	2014      	movs	r0, #20
 8009b36:	428b      	cmp	r3, r1
 8009b38:	fb00 5003 	mla	r0, r0, r3, r5
 8009b3c:	4639      	mov	r1, r7
 8009b3e:	bf88      	it	hi
 8009b40:	6013      	strhi	r3, [r2, #0]
 8009b42:	f7fe fcb9 	bl	80084b8 <vListInsertEnd>
				xReturn = pdTRUE;
 8009b46:	2001      	movs	r0, #1
	}
 8009b48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009b4a:	6833      	ldr	r3, [r6, #0]
 8009b4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b4e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009b50:	e7f9      	b.n	8009b46 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009b52:	6813      	ldr	r3, [r2, #0]
 8009b54:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8009b56:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8009b58:	42a0      	cmp	r0, r4
 8009b5a:	bf2c      	ite	cs
 8009b5c:	2000      	movcs	r0, #0
 8009b5e:	2001      	movcc	r0, #1
 8009b60:	e7f2      	b.n	8009b48 <xTaskPriorityInherit+0x58>
 8009b62:	bf00      	nop
 8009b64:	20011e84 	.word	0x20011e84
 8009b68:	20011e90 	.word	0x20011e90
 8009b6c:	20012304 	.word	0x20012304

08009b70 <xTaskPriorityDisinherit>:
	{
 8009b70:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009b72:	b908      	cbnz	r0, 8009b78 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009b74:	2000      	movs	r0, #0
	}
 8009b76:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009b78:	4b1b      	ldr	r3, [pc, #108]	; (8009be8 <xTaskPriorityDisinherit+0x78>)
 8009b7a:	681c      	ldr	r4, [r3, #0]
 8009b7c:	4284      	cmp	r4, r0
 8009b7e:	d008      	beq.n	8009b92 <xTaskPriorityDisinherit+0x22>
 8009b80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b84:	f383 8811 	msr	BASEPRI, r3
 8009b88:	f3bf 8f6f 	isb	sy
 8009b8c:	f3bf 8f4f 	dsb	sy
 8009b90:	e7fe      	b.n	8009b90 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8009b92:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009b94:	b943      	cbnz	r3, 8009ba8 <xTaskPriorityDisinherit+0x38>
 8009b96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b9a:	f383 8811 	msr	BASEPRI, r3
 8009b9e:	f3bf 8f6f 	isb	sy
 8009ba2:	f3bf 8f4f 	dsb	sy
 8009ba6:	e7fe      	b.n	8009ba6 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009ba8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009baa:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009bac:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009bae:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009bb0:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009bb2:	d0df      	beq.n	8009b74 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009bb4:	2b00      	cmp	r3, #0
 8009bb6:	d1dd      	bne.n	8009b74 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009bb8:	1d25      	adds	r5, r4, #4
 8009bba:	4628      	mov	r0, r5
 8009bbc:	f7fe fc9f 	bl	80084fe <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009bc0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009bc2:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bc4:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8009bc8:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009bca:	4a08      	ldr	r2, [pc, #32]	; (8009bec <xTaskPriorityDisinherit+0x7c>)
 8009bcc:	6811      	ldr	r1, [r2, #0]
 8009bce:	428b      	cmp	r3, r1
 8009bd0:	bf88      	it	hi
 8009bd2:	6013      	strhi	r3, [r2, #0]
 8009bd4:	4a06      	ldr	r2, [pc, #24]	; (8009bf0 <xTaskPriorityDisinherit+0x80>)
 8009bd6:	2014      	movs	r0, #20
 8009bd8:	fb00 2003 	mla	r0, r0, r3, r2
 8009bdc:	4629      	mov	r1, r5
 8009bde:	f7fe fc6b 	bl	80084b8 <vListInsertEnd>
					xReturn = pdTRUE;
 8009be2:	2001      	movs	r0, #1
		return xReturn;
 8009be4:	e7c7      	b.n	8009b76 <xTaskPriorityDisinherit+0x6>
 8009be6:	bf00      	nop
 8009be8:	20011e84 	.word	0x20011e84
 8009bec:	20012304 	.word	0x20012304
 8009bf0:	20011e90 	.word	0x20011e90

08009bf4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009bf4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009bf6:	4604      	mov	r4, r0
 8009bf8:	2800      	cmp	r0, #0
 8009bfa:	d041      	beq.n	8009c80 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8009bfc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009bfe:	b942      	cbnz	r2, 8009c12 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009c00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c04:	f383 8811 	msr	BASEPRI, r3
 8009c08:	f3bf 8f6f 	isb	sy
 8009c0c:	f3bf 8f4f 	dsb	sy
 8009c10:	e7fe      	b.n	8009c10 <vTaskPriorityDisinheritAfterTimeout+0x1c>
 8009c12:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009c14:	4299      	cmp	r1, r3
 8009c16:	bf38      	it	cc
 8009c18:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009c1a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009c1c:	428b      	cmp	r3, r1
 8009c1e:	d02f      	beq.n	8009c80 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009c20:	2a01      	cmp	r2, #1
 8009c22:	d12d      	bne.n	8009c80 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8009c24:	4a17      	ldr	r2, [pc, #92]	; (8009c84 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8009c26:	6812      	ldr	r2, [r2, #0]
 8009c28:	4282      	cmp	r2, r0
 8009c2a:	d108      	bne.n	8009c3e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009c2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c30:	f383 8811 	msr	BASEPRI, r3
 8009c34:	f3bf 8f6f 	isb	sy
 8009c38:	f3bf 8f4f 	dsb	sy
 8009c3c:	e7fe      	b.n	8009c3c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009c3e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009c40:	4d11      	ldr	r5, [pc, #68]	; (8009c88 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009c42:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009c44:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009c46:	f04f 0214 	mov.w	r2, #20
 8009c4a:	fb02 5303 	mla	r3, r2, r3, r5
 8009c4e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009c50:	bfa4      	itt	ge
 8009c52:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8009c56:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009c58:	429a      	cmp	r2, r3
 8009c5a:	d111      	bne.n	8009c80 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009c5c:	1d06      	adds	r6, r0, #4
 8009c5e:	4630      	mov	r0, r6
 8009c60:	f7fe fc4d 	bl	80084fe <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009c64:	4a09      	ldr	r2, [pc, #36]	; (8009c8c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009c66:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009c68:	6811      	ldr	r1, [r2, #0]
 8009c6a:	2014      	movs	r0, #20
 8009c6c:	428b      	cmp	r3, r1
 8009c6e:	fb00 5003 	mla	r0, r0, r3, r5
 8009c72:	4631      	mov	r1, r6
	}
 8009c74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009c78:	bf88      	it	hi
 8009c7a:	6013      	strhi	r3, [r2, #0]
 8009c7c:	f7fe bc1c 	b.w	80084b8 <vListInsertEnd>
	}
 8009c80:	bd70      	pop	{r4, r5, r6, pc}
 8009c82:	bf00      	nop
 8009c84:	20011e84 	.word	0x20011e84
 8009c88:	20011e90 	.word	0x20011e90
 8009c8c:	20012304 	.word	0x20012304

08009c90 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009c90:	4b04      	ldr	r3, [pc, #16]	; (8009ca4 <pvTaskIncrementMutexHeldCount+0x14>)
 8009c92:	681a      	ldr	r2, [r3, #0]
 8009c94:	b11a      	cbz	r2, 8009c9e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009c96:	6819      	ldr	r1, [r3, #0]
 8009c98:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009c9a:	3201      	adds	r2, #1
 8009c9c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8009c9e:	6818      	ldr	r0, [r3, #0]
	}
 8009ca0:	4770      	bx	lr
 8009ca2:	bf00      	nop
 8009ca4:	20011e84 	.word	0x20011e84

08009ca8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009ca8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009caa:	4c11      	ldr	r4, [pc, #68]	; (8009cf0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009cac:	f7fe fca2 	bl	80085f4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009cb0:	6825      	ldr	r5, [r4, #0]
 8009cb2:	b9bd      	cbnz	r5, 8009ce4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009cb4:	4f0f      	ldr	r7, [pc, #60]	; (8009cf4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009cb6:	4e10      	ldr	r6, [pc, #64]	; (8009cf8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009cb8:	4638      	mov	r0, r7
 8009cba:	f7fe fbef 	bl	800849c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009cbe:	4630      	mov	r0, r6
 8009cc0:	f7fe fbec 	bl	800849c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009cc4:	4b0d      	ldr	r3, [pc, #52]	; (8009cfc <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009cc6:	4a0e      	ldr	r2, [pc, #56]	; (8009d00 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009cc8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009cca:	4b0e      	ldr	r3, [pc, #56]	; (8009d04 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009ccc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009cce:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009cd0:	200a      	movs	r0, #10
 8009cd2:	9500      	str	r5, [sp, #0]
 8009cd4:	4b0c      	ldr	r3, [pc, #48]	; (8009d08 <prvCheckForValidListAndQueue+0x60>)
 8009cd6:	f7fe fea5 	bl	8008a24 <xQueueGenericCreateStatic>
 8009cda:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009cdc:	b110      	cbz	r0, 8009ce4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009cde:	490b      	ldr	r1, [pc, #44]	; (8009d0c <prvCheckForValidListAndQueue+0x64>)
 8009ce0:	f7ff fa70 	bl	80091c4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009ce4:	b003      	add	sp, #12
 8009ce6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009cea:	f7fe bca5 	b.w	8008638 <vPortExitCritical>
 8009cee:	bf00      	nop
 8009cf0:	200124a4 	.word	0x200124a4
 8009cf4:	20012428 	.word	0x20012428
 8009cf8:	2001243c 	.word	0x2001243c
 8009cfc:	20012380 	.word	0x20012380
 8009d00:	20012388 	.word	0x20012388
 8009d04:	20012384 	.word	0x20012384
 8009d08:	20012454 	.word	0x20012454
 8009d0c:	0801eb29 	.word	0x0801eb29

08009d10 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009d10:	4291      	cmp	r1, r2
{
 8009d12:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009d14:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009d16:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009d18:	d80a      	bhi.n	8009d30 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d1a:	1ad2      	subs	r2, r2, r3
 8009d1c:	6983      	ldr	r3, [r0, #24]
 8009d1e:	429a      	cmp	r2, r3
 8009d20:	d20d      	bcs.n	8009d3e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009d22:	4b08      	ldr	r3, [pc, #32]	; (8009d44 <prvInsertTimerInActiveList+0x34>)
 8009d24:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009d26:	6818      	ldr	r0, [r3, #0]
 8009d28:	f7fe fbd2 	bl	80084d0 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009d2c:	2000      	movs	r0, #0
}
 8009d2e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009d30:	429a      	cmp	r2, r3
 8009d32:	d201      	bcs.n	8009d38 <prvInsertTimerInActiveList+0x28>
 8009d34:	4299      	cmp	r1, r3
 8009d36:	d202      	bcs.n	8009d3e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009d38:	1d01      	adds	r1, r0, #4
 8009d3a:	4b03      	ldr	r3, [pc, #12]	; (8009d48 <prvInsertTimerInActiveList+0x38>)
 8009d3c:	e7f3      	b.n	8009d26 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009d3e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009d40:	e7f5      	b.n	8009d2e <prvInsertTimerInActiveList+0x1e>
 8009d42:	bf00      	nop
 8009d44:	20012384 	.word	0x20012384
 8009d48:	20012380 	.word	0x20012380

08009d4c <xTimerCreateTimerTask>:
{
 8009d4c:	b510      	push	{r4, lr}
 8009d4e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009d50:	f7ff ffaa 	bl	8009ca8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009d54:	4b12      	ldr	r3, [pc, #72]	; (8009da0 <xTimerCreateTimerTask+0x54>)
 8009d56:	681b      	ldr	r3, [r3, #0]
 8009d58:	b1b3      	cbz	r3, 8009d88 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009d5a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009d5c:	aa07      	add	r2, sp, #28
 8009d5e:	a906      	add	r1, sp, #24
 8009d60:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009d62:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009d66:	f7fe faa5 	bl	80082b4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009d6a:	9b05      	ldr	r3, [sp, #20]
 8009d6c:	9302      	str	r3, [sp, #8]
 8009d6e:	9b06      	ldr	r3, [sp, #24]
 8009d70:	9301      	str	r3, [sp, #4]
 8009d72:	2302      	movs	r3, #2
 8009d74:	9300      	str	r3, [sp, #0]
 8009d76:	9a07      	ldr	r2, [sp, #28]
 8009d78:	490a      	ldr	r1, [pc, #40]	; (8009da4 <xTimerCreateTimerTask+0x58>)
 8009d7a:	480b      	ldr	r0, [pc, #44]	; (8009da8 <xTimerCreateTimerTask+0x5c>)
 8009d7c:	4623      	mov	r3, r4
 8009d7e:	f7ff fbe9 	bl	8009554 <xTaskCreateStatic>
 8009d82:	4b0a      	ldr	r3, [pc, #40]	; (8009dac <xTimerCreateTimerTask+0x60>)
 8009d84:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009d86:	b940      	cbnz	r0, 8009d9a <xTimerCreateTimerTask+0x4e>
 8009d88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d8c:	f383 8811 	msr	BASEPRI, r3
 8009d90:	f3bf 8f6f 	isb	sy
 8009d94:	f3bf 8f4f 	dsb	sy
 8009d98:	e7fe      	b.n	8009d98 <xTimerCreateTimerTask+0x4c>
}
 8009d9a:	2001      	movs	r0, #1
 8009d9c:	b008      	add	sp, #32
 8009d9e:	bd10      	pop	{r4, pc}
 8009da0:	200124a4 	.word	0x200124a4
 8009da4:	0801eb2e 	.word	0x0801eb2e
 8009da8:	08009e89 	.word	0x08009e89
 8009dac:	200124a8 	.word	0x200124a8

08009db0 <xTimerGenericCommand>:
{
 8009db0:	b530      	push	{r4, r5, lr}
 8009db2:	4615      	mov	r5, r2
 8009db4:	b085      	sub	sp, #20
 8009db6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009db8:	4603      	mov	r3, r0
 8009dba:	b940      	cbnz	r0, 8009dce <xTimerGenericCommand+0x1e>
 8009dbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dc0:	f383 8811 	msr	BASEPRI, r3
 8009dc4:	f3bf 8f6f 	isb	sy
 8009dc8:	f3bf 8f4f 	dsb	sy
 8009dcc:	e7fe      	b.n	8009dcc <xTimerGenericCommand+0x1c>
	if( xTimerQueue != NULL )
 8009dce:	4c0d      	ldr	r4, [pc, #52]	; (8009e04 <xTimerGenericCommand+0x54>)
 8009dd0:	6820      	ldr	r0, [r4, #0]
 8009dd2:	b180      	cbz	r0, 8009df6 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009dd4:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009dd6:	e9cd 1500 	strd	r1, r5, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009dda:	9302      	str	r3, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009ddc:	dc0d      	bgt.n	8009dfa <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009dde:	f7ff fe77 	bl	8009ad0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009de2:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009de4:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009de6:	bf08      	it	eq
 8009de8:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009dea:	6820      	ldr	r0, [r4, #0]
 8009dec:	bf18      	it	ne
 8009dee:	461a      	movne	r2, r3
 8009df0:	4669      	mov	r1, sp
 8009df2:	f7fe fecd 	bl	8008b90 <xQueueGenericSend>
}
 8009df6:	b005      	add	sp, #20
 8009df8:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009dfa:	2300      	movs	r3, #0
 8009dfc:	4669      	mov	r1, sp
 8009dfe:	f7fe ff79 	bl	8008cf4 <xQueueGenericSendFromISR>
 8009e02:	e7f8      	b.n	8009df6 <xTimerGenericCommand+0x46>
 8009e04:	200124a4 	.word	0x200124a4

08009e08 <prvSwitchTimerLists>:
{
 8009e08:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009e0c:	4d1c      	ldr	r5, [pc, #112]	; (8009e80 <prvSwitchTimerLists+0x78>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009e0e:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009e12:	682b      	ldr	r3, [r5, #0]
 8009e14:	681a      	ldr	r2, [r3, #0]
 8009e16:	b932      	cbnz	r2, 8009e26 <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 8009e18:	4a1a      	ldr	r2, [pc, #104]	; (8009e84 <prvSwitchTimerLists+0x7c>)
 8009e1a:	6811      	ldr	r1, [r2, #0]
 8009e1c:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8009e1e:	6013      	str	r3, [r2, #0]
}
 8009e20:	b002      	add	sp, #8
 8009e22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009e26:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009e28:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009e2a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009e2c:	1d27      	adds	r7, r4, #4
 8009e2e:	4638      	mov	r0, r7
 8009e30:	f7fe fb65 	bl	80084fe <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009e34:	6a23      	ldr	r3, [r4, #32]
 8009e36:	4620      	mov	r0, r4
 8009e38:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009e3a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009e3e:	075b      	lsls	r3, r3, #29
 8009e40:	d5e7      	bpl.n	8009e12 <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009e42:	69a3      	ldr	r3, [r4, #24]
 8009e44:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 8009e46:	429e      	cmp	r6, r3
 8009e48:	d206      	bcs.n	8009e58 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009e4a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009e4c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009e4e:	4639      	mov	r1, r7
 8009e50:	6828      	ldr	r0, [r5, #0]
 8009e52:	f7fe fb3d 	bl	80084d0 <vListInsert>
 8009e56:	e7dc      	b.n	8009e12 <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009e58:	2300      	movs	r3, #0
 8009e5a:	f8cd 8000 	str.w	r8, [sp]
 8009e5e:	4632      	mov	r2, r6
 8009e60:	4619      	mov	r1, r3
 8009e62:	4620      	mov	r0, r4
 8009e64:	f7ff ffa4 	bl	8009db0 <xTimerGenericCommand>
				configASSERT( xResult );
 8009e68:	2800      	cmp	r0, #0
 8009e6a:	d1d2      	bne.n	8009e12 <prvSwitchTimerLists+0xa>
 8009e6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e70:	f383 8811 	msr	BASEPRI, r3
 8009e74:	f3bf 8f6f 	isb	sy
 8009e78:	f3bf 8f4f 	dsb	sy
 8009e7c:	e7fe      	b.n	8009e7c <prvSwitchTimerLists+0x74>
 8009e7e:	bf00      	nop
 8009e80:	20012380 	.word	0x20012380
 8009e84:	20012384 	.word	0x20012384

08009e88 <prvTimerTask>:
{
 8009e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009e8c:	4d81      	ldr	r5, [pc, #516]	; (800a094 <prvTimerTask+0x20c>)
					portYIELD_WITHIN_API();
 8009e8e:	f8df 8210 	ldr.w	r8, [pc, #528]	; 800a0a0 <prvTimerTask+0x218>
{
 8009e92:	b087      	sub	sp, #28
 8009e94:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009e96:	682a      	ldr	r2, [r5, #0]
 8009e98:	6813      	ldr	r3, [r2, #0]
 8009e9a:	b353      	cbz	r3, 8009ef2 <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009e9c:	68d3      	ldr	r3, [r2, #12]
 8009e9e:	f8d3 9000 	ldr.w	r9, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009ea2:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 8009ea4:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 800a0a4 <prvTimerTask+0x21c>
	vTaskSuspendAll();
 8009ea8:	f7ff fbfe 	bl	80096a8 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8009eac:	f7ff fc04 	bl	80096b8 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009eb0:	f8db 3000 	ldr.w	r3, [fp]
 8009eb4:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8009eb6:	4682      	mov	sl, r0
 8009eb8:	465e      	mov	r6, fp
	if( xTimeNow < xLastTime )
 8009eba:	d31d      	bcc.n	8009ef8 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 8009ebc:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009ec0:	b32c      	cbz	r4, 8009f0e <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009ec2:	4b75      	ldr	r3, [pc, #468]	; (800a098 <prvTimerTask+0x210>)
 8009ec4:	681b      	ldr	r3, [r3, #0]
 8009ec6:	681a      	ldr	r2, [r3, #0]
 8009ec8:	fab2 f282 	clz	r2, r2
 8009ecc:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009ece:	4b73      	ldr	r3, [pc, #460]	; (800a09c <prvTimerTask+0x214>)
 8009ed0:	eba9 010a 	sub.w	r1, r9, sl
 8009ed4:	6818      	ldr	r0, [r3, #0]
 8009ed6:	f7ff f9b2 	bl	800923e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009eda:	f7ff fc83 	bl	80097e4 <xTaskResumeAll>
 8009ede:	b988      	cbnz	r0, 8009f04 <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 8009ee0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009ee4:	f8c8 3000 	str.w	r3, [r8]
 8009ee8:	f3bf 8f4f 	dsb	sy
 8009eec:	f3bf 8f6f 	isb	sy
 8009ef0:	e008      	b.n	8009f04 <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009ef2:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 8009ef4:	4699      	mov	r9, r3
 8009ef6:	e7d5      	b.n	8009ea4 <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 8009ef8:	f7ff ff86 	bl	8009e08 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8009efc:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 8009f00:	f7ff fc70 	bl	80097e4 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009f04:	f8df 9194 	ldr.w	r9, [pc, #404]	; 800a09c <prvTimerTask+0x214>
 8009f08:	f04f 0a00 	mov.w	sl, #0
 8009f0c:	e07d      	b.n	800a00a <prvTimerTask+0x182>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009f0e:	4581      	cmp	r9, r0
 8009f10:	d830      	bhi.n	8009f74 <prvTimerTask+0xec>
				( void ) xTaskResumeAll();
 8009f12:	f7ff fc67 	bl	80097e4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f16:	683b      	ldr	r3, [r7, #0]
 8009f18:	68db      	ldr	r3, [r3, #12]
 8009f1a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009f1e:	f10b 0004 	add.w	r0, fp, #4
 8009f22:	f7fe faec 	bl	80084fe <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009f26:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 8009f2a:	0758      	lsls	r0, r3, #29
 8009f2c:	d519      	bpl.n	8009f62 <prvTimerTask+0xda>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009f2e:	f8db 1018 	ldr.w	r1, [fp, #24]
 8009f32:	464b      	mov	r3, r9
 8009f34:	4652      	mov	r2, sl
 8009f36:	4449      	add	r1, r9
 8009f38:	4658      	mov	r0, fp
 8009f3a:	f7ff fee9 	bl	8009d10 <prvInsertTimerInActiveList>
 8009f3e:	b1a0      	cbz	r0, 8009f6a <prvTimerTask+0xe2>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009f40:	9400      	str	r4, [sp, #0]
 8009f42:	4623      	mov	r3, r4
 8009f44:	464a      	mov	r2, r9
 8009f46:	4621      	mov	r1, r4
 8009f48:	4658      	mov	r0, fp
 8009f4a:	f7ff ff31 	bl	8009db0 <xTimerGenericCommand>
			configASSERT( xResult );
 8009f4e:	b960      	cbnz	r0, 8009f6a <prvTimerTask+0xe2>
 8009f50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f54:	f383 8811 	msr	BASEPRI, r3
 8009f58:	f3bf 8f6f 	isb	sy
 8009f5c:	f3bf 8f4f 	dsb	sy
 8009f60:	e7fe      	b.n	8009f60 <prvTimerTask+0xd8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009f62:	f023 0301 	bic.w	r3, r3, #1
 8009f66:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009f6a:	f8db 3020 	ldr.w	r3, [fp, #32]
 8009f6e:	4658      	mov	r0, fp
 8009f70:	4798      	blx	r3
 8009f72:	e7c7      	b.n	8009f04 <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009f74:	4622      	mov	r2, r4
 8009f76:	e7aa      	b.n	8009ece <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009f78:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009f7c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009f7e:	f043 0301 	orr.w	r3, r3, #1
 8009f82:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009f86:	9b03      	ldr	r3, [sp, #12]
 8009f88:	465a      	mov	r2, fp
 8009f8a:	4419      	add	r1, r3
 8009f8c:	4620      	mov	r0, r4
 8009f8e:	f7ff febf 	bl	8009d10 <prvInsertTimerInActiveList>
 8009f92:	2800      	cmp	r0, #0
 8009f94:	d039      	beq.n	800a00a <prvTimerTask+0x182>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009f96:	6a23      	ldr	r3, [r4, #32]
 8009f98:	4620      	mov	r0, r4
 8009f9a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009f9c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009fa0:	0759      	lsls	r1, r3, #29
 8009fa2:	d532      	bpl.n	800a00a <prvTimerTask+0x182>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009fa4:	69a2      	ldr	r2, [r4, #24]
 8009fa6:	9903      	ldr	r1, [sp, #12]
 8009fa8:	f8cd a000 	str.w	sl, [sp]
 8009fac:	2300      	movs	r3, #0
 8009fae:	440a      	add	r2, r1
 8009fb0:	4620      	mov	r0, r4
 8009fb2:	4619      	mov	r1, r3
 8009fb4:	f7ff fefc 	bl	8009db0 <xTimerGenericCommand>
							configASSERT( xResult );
 8009fb8:	bb38      	cbnz	r0, 800a00a <prvTimerTask+0x182>
 8009fba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fbe:	f383 8811 	msr	BASEPRI, r3
 8009fc2:	f3bf 8f6f 	isb	sy
 8009fc6:	f3bf 8f4f 	dsb	sy
 8009fca:	e7fe      	b.n	8009fca <prvTimerTask+0x142>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009fcc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009fd0:	f023 0301 	bic.w	r3, r3, #1
 8009fd4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009fd8:	e017      	b.n	800a00a <prvTimerTask+0x182>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009fda:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8009fde:	9903      	ldr	r1, [sp, #12]
 8009fe0:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009fe2:	f043 0301 	orr.w	r3, r3, #1
 8009fe6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8009fea:	b941      	cbnz	r1, 8009ffe <prvTimerTask+0x176>
 8009fec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ff0:	f383 8811 	msr	BASEPRI, r3
 8009ff4:	f3bf 8f6f 	isb	sy
 8009ff8:	f3bf 8f4f 	dsb	sy
 8009ffc:	e7fe      	b.n	8009ffc <prvTimerTask+0x174>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8009ffe:	465b      	mov	r3, fp
 800a000:	465a      	mov	r2, fp
 800a002:	4459      	add	r1, fp
 800a004:	4620      	mov	r0, r4
 800a006:	f7ff fe83 	bl	8009d10 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a00a:	2200      	movs	r2, #0
 800a00c:	a902      	add	r1, sp, #8
 800a00e:	f8d9 0000 	ldr.w	r0, [r9]
 800a012:	f7fe ff25 	bl	8008e60 <xQueueReceive>
 800a016:	2800      	cmp	r0, #0
 800a018:	f43f af3d 	beq.w	8009e96 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a01c:	9b02      	ldr	r3, [sp, #8]
 800a01e:	2b00      	cmp	r3, #0
 800a020:	da03      	bge.n	800a02a <prvTimerTask+0x1a2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a022:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a026:	9b03      	ldr	r3, [sp, #12]
 800a028:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a02a:	9b02      	ldr	r3, [sp, #8]
 800a02c:	2b00      	cmp	r3, #0
 800a02e:	dbec      	blt.n	800a00a <prvTimerTask+0x182>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a030:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a032:	6963      	ldr	r3, [r4, #20]
 800a034:	b113      	cbz	r3, 800a03c <prvTimerTask+0x1b4>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a036:	1d20      	adds	r0, r4, #4
 800a038:	f7fe fa61 	bl	80084fe <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800a03c:	f7ff fb3c 	bl	80096b8 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a040:	6833      	ldr	r3, [r6, #0]
 800a042:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800a044:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 800a046:	d201      	bcs.n	800a04c <prvTimerTask+0x1c4>
		prvSwitchTimerLists();
 800a048:	f7ff fede 	bl	8009e08 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 800a04c:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800a04e:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 800a052:	2b09      	cmp	r3, #9
 800a054:	d8d9      	bhi.n	800a00a <prvTimerTask+0x182>
 800a056:	a201      	add	r2, pc, #4	; (adr r2, 800a05c <prvTimerTask+0x1d4>)
 800a058:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a05c:	08009f79 	.word	0x08009f79
 800a060:	08009f79 	.word	0x08009f79
 800a064:	08009f79 	.word	0x08009f79
 800a068:	08009fcd 	.word	0x08009fcd
 800a06c:	08009fdb 	.word	0x08009fdb
 800a070:	0800a085 	.word	0x0800a085
 800a074:	08009f79 	.word	0x08009f79
 800a078:	08009f79 	.word	0x08009f79
 800a07c:	08009fcd 	.word	0x08009fcd
 800a080:	08009fdb 	.word	0x08009fdb
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a084:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a088:	079a      	lsls	r2, r3, #30
 800a08a:	d4a1      	bmi.n	8009fd0 <prvTimerTask+0x148>
							vPortFree( pxTimer );
 800a08c:	4620      	mov	r0, r4
 800a08e:	f7fe f9cd 	bl	800842c <vPortFree>
 800a092:	e7ba      	b.n	800a00a <prvTimerTask+0x182>
 800a094:	20012380 	.word	0x20012380
 800a098:	20012384 	.word	0x20012384
 800a09c:	200124a4 	.word	0x200124a4
 800a0a0:	e000ed04 	.word	0xe000ed04
 800a0a4:	20012450 	.word	0x20012450

0800a0a8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a0a8:	8880      	ldrh	r0, [r0, #4]
 800a0aa:	4770      	bx	lr

0800a0ac <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a0ac:	2300      	movs	r3, #0
 800a0ae:	8083      	strh	r3, [r0, #4]
 800a0b0:	4770      	bx	lr
	...

0800a0b4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a0b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a0b6:	6803      	ldr	r3, [r0, #0]
 800a0b8:	4605      	mov	r5, r0
 800a0ba:	460e      	mov	r6, r1
 800a0bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a0be:	2100      	movs	r1, #0
 800a0c0:	4798      	blx	r3
 800a0c2:	682b      	ldr	r3, [r5, #0]
 800a0c4:	4604      	mov	r4, r0
 800a0c6:	6a1b      	ldr	r3, [r3, #32]
 800a0c8:	4628      	mov	r0, r5
 800a0ca:	4798      	blx	r3
 800a0cc:	88ab      	ldrh	r3, [r5, #4]
 800a0ce:	1b34      	subs	r4, r6, r4
 800a0d0:	b2a4      	uxth	r4, r4
 800a0d2:	fbb4 f4f0 	udiv	r4, r4, r0
 800a0d6:	42a3      	cmp	r3, r4
 800a0d8:	d805      	bhi.n	800a0e6 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800a0da:	4b0e      	ldr	r3, [pc, #56]	; (800a114 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800a0dc:	4a0e      	ldr	r2, [pc, #56]	; (800a118 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a0de:	2120      	movs	r1, #32
 800a0e0:	480e      	ldr	r0, [pc, #56]	; (800a11c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800a0e2:	f012 f94b 	bl	801c37c <__assert_func>
 800a0e6:	682b      	ldr	r3, [r5, #0]
 800a0e8:	2100      	movs	r1, #0
 800a0ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a0ec:	4628      	mov	r0, r5
 800a0ee:	4798      	blx	r3
 800a0f0:	682b      	ldr	r3, [r5, #0]
 800a0f2:	4607      	mov	r7, r0
 800a0f4:	6a1b      	ldr	r3, [r3, #32]
 800a0f6:	4628      	mov	r0, r5
 800a0f8:	4798      	blx	r3
 800a0fa:	1bf3      	subs	r3, r6, r7
 800a0fc:	b29b      	uxth	r3, r3
 800a0fe:	fbb3 f2f0 	udiv	r2, r3, r0
 800a102:	fb02 3010 	mls	r0, r2, r0, r3
 800a106:	b118      	cbz	r0, 800a110 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800a108:	4b05      	ldr	r3, [pc, #20]	; (800a120 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800a10a:	4a03      	ldr	r2, [pc, #12]	; (800a118 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a10c:	2121      	movs	r1, #33	; 0x21
 800a10e:	e7e7      	b.n	800a0e0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800a110:	4620      	mov	r0, r4
 800a112:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a114:	0801eb36 	.word	0x0801eb36
 800a118:	0801eca2 	.word	0x0801eca2
 800a11c:	0801eb4b 	.word	0x0801eb4b
 800a120:	0801eb79 	.word	0x0801eb79

0800a124 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a124:	b538      	push	{r3, r4, r5, lr}
 800a126:	6803      	ldr	r3, [r0, #0]
 800a128:	6a1b      	ldr	r3, [r3, #32]
 800a12a:	460d      	mov	r5, r1
 800a12c:	4604      	mov	r4, r0
 800a12e:	4798      	blx	r3
 800a130:	4285      	cmp	r5, r0
 800a132:	d905      	bls.n	800a140 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800a134:	4b0c      	ldr	r3, [pc, #48]	; (800a168 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800a136:	4a0d      	ldr	r2, [pc, #52]	; (800a16c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a138:	2132      	movs	r1, #50	; 0x32
 800a13a:	480d      	ldr	r0, [pc, #52]	; (800a170 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800a13c:	f012 f91e 	bl	801c37c <__assert_func>
 800a140:	6823      	ldr	r3, [r4, #0]
 800a142:	88a5      	ldrh	r5, [r4, #4]
 800a144:	69db      	ldr	r3, [r3, #28]
 800a146:	4620      	mov	r0, r4
 800a148:	4798      	blx	r3
 800a14a:	4285      	cmp	r5, r0
 800a14c:	d303      	bcc.n	800a156 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800a14e:	4b09      	ldr	r3, [pc, #36]	; (800a174 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800a150:	4a06      	ldr	r2, [pc, #24]	; (800a16c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a152:	2133      	movs	r1, #51	; 0x33
 800a154:	e7f1      	b.n	800a13a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800a156:	6823      	ldr	r3, [r4, #0]
 800a158:	88a1      	ldrh	r1, [r4, #4]
 800a15a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a15c:	4620      	mov	r0, r4
 800a15e:	4798      	blx	r3
 800a160:	88a3      	ldrh	r3, [r4, #4]
 800a162:	3301      	adds	r3, #1
 800a164:	80a3      	strh	r3, [r4, #4]
 800a166:	bd38      	pop	{r3, r4, r5, pc}
 800a168:	0801ebf3 	.word	0x0801ebf3
 800a16c:	0801ece5 	.word	0x0801ece5
 800a170:	0801eb4b 	.word	0x0801eb4b
 800a174:	0801ec0a 	.word	0x0801ec0a

0800a178 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a178:	b570      	push	{r4, r5, r6, lr}
 800a17a:	6803      	ldr	r3, [r0, #0]
 800a17c:	6a1b      	ldr	r3, [r3, #32]
 800a17e:	4616      	mov	r6, r2
 800a180:	4604      	mov	r4, r0
 800a182:	460d      	mov	r5, r1
 800a184:	4798      	blx	r3
 800a186:	4286      	cmp	r6, r0
 800a188:	d905      	bls.n	800a196 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800a18a:	4b06      	ldr	r3, [pc, #24]	; (800a1a4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800a18c:	4a06      	ldr	r2, [pc, #24]	; (800a1a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800a18e:	4807      	ldr	r0, [pc, #28]	; (800a1ac <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800a190:	213c      	movs	r1, #60	; 0x3c
 800a192:	f012 f8f3 	bl	801c37c <__assert_func>
 800a196:	6823      	ldr	r3, [r4, #0]
 800a198:	4629      	mov	r1, r5
 800a19a:	4620      	mov	r0, r4
 800a19c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a19e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a1a2:	4718      	bx	r3
 800a1a4:	0801ebf3 	.word	0x0801ebf3
 800a1a8:	0801ec58 	.word	0x0801ec58
 800a1ac:	0801eb4b 	.word	0x0801eb4b

0800a1b0 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a1b0:	4770      	bx	lr
	...

0800a1b4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a1b4:	4a02      	ldr	r2, [pc, #8]	; (800a1c0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a1b6:	6002      	str	r2, [r0, #0]
 800a1b8:	2200      	movs	r2, #0
 800a1ba:	8082      	strh	r2, [r0, #4]
 800a1bc:	4770      	bx	lr
 800a1be:	bf00      	nop
 800a1c0:	0801ec2c 	.word	0x0801ec2c

0800a1c4 <_ZNK8touchgfx12DrawableList13getHorizontalEv>:
 800a1c4:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800a1c8:	4770      	bx	lr

0800a1ca <_ZNK8touchgfx12DrawableList11getCircularEv>:
 800a1ca:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800a1ce:	4770      	bx	lr

0800a1d0 <_ZNK8touchgfx12DrawableList11getItemSizeEv>:
 800a1d0:	f9b0 0034 	ldrsh.w	r0, [r0, #52]	; 0x34
 800a1d4:	4770      	bx	lr

0800a1d6 <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>:
 800a1d6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800a1d8:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800a1da:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 800a1de:	b200      	sxth	r0, r0
 800a1e0:	4770      	bx	lr

0800a1e2 <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>:
 800a1e2:	f9b0 0036 	ldrsh.w	r0, [r0, #54]	; 0x36
 800a1e6:	4770      	bx	lr

0800a1e8 <_ZN8touchgfx12DrawableListD1Ev>:
 800a1e8:	4770      	bx	lr

0800a1ea <_ZN8touchgfx12DrawableListD0Ev>:
 800a1ea:	b510      	push	{r4, lr}
 800a1ec:	214c      	movs	r1, #76	; 0x4c
 800a1ee:	4604      	mov	r4, r0
 800a1f0:	f012 f880 	bl	801c2f4 <_ZdlPvj>
 800a1f4:	4620      	mov	r0, r4
 800a1f6:	bd10      	pop	{r4, pc}

0800a1f8 <_ZN8touchgfx12DrawableListC1Ev>:
 800a1f8:	2101      	movs	r1, #1
 800a1fa:	2200      	movs	r2, #0
 800a1fc:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800a200:	490f      	ldr	r1, [pc, #60]	; (800a240 <_ZN8touchgfx12DrawableListC1Ev+0x48>)
 800a202:	8082      	strh	r2, [r0, #4]
 800a204:	80c2      	strh	r2, [r0, #6]
 800a206:	8102      	strh	r2, [r0, #8]
 800a208:	8142      	strh	r2, [r0, #10]
 800a20a:	8182      	strh	r2, [r0, #12]
 800a20c:	81c2      	strh	r2, [r0, #14]
 800a20e:	8202      	strh	r2, [r0, #16]
 800a210:	8242      	strh	r2, [r0, #18]
 800a212:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a216:	61c2      	str	r2, [r0, #28]
 800a218:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a21c:	6282      	str	r2, [r0, #40]	; 0x28
 800a21e:	6001      	str	r1, [r0, #0]
 800a220:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800a224:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800a228:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 800a22c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 800a230:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
 800a234:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800a238:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 800a23c:	4770      	bx	lr
 800a23e:	bf00      	nop
 800a240:	0801ed2c 	.word	0x0801ed2c

0800a244 <_ZN8touchgfx12DrawableList15setDrawableSizeEss>:
 800a244:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 800a248:	8681      	strh	r1, [r0, #52]	; 0x34
 800a24a:	86c2      	strh	r2, [r0, #54]	; 0x36
 800a24c:	4770      	bx	lr

0800a24e <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>:
 800a24e:	f9b0 0038 	ldrsh.w	r0, [r0, #56]	; 0x38
 800a252:	4770      	bx	lr

0800a254 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>:
 800a254:	b538      	push	{r3, r4, r5, lr}
 800a256:	4605      	mov	r5, r0
 800a258:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800a25a:	b308      	cbz	r0, 800a2a0 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>
 800a25c:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800a260:	2a00      	cmp	r2, #0
 800a262:	dd21      	ble.n	800a2a8 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x54>
 800a264:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800a268:	b1db      	cbz	r3, 800a2a2 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4e>
 800a26a:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800a26e:	1e63      	subs	r3, r4, #1
 800a270:	1e54      	subs	r4, r2, #1
 800a272:	441c      	add	r4, r3
 800a274:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 800a278:	fb94 f4f2 	sdiv	r4, r4, r2
 800a27c:	3401      	adds	r4, #1
 800a27e:	b224      	sxth	r4, r4
 800a280:	b923      	cbnz	r3, 800a28c <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x38>
 800a282:	f9b5 3038 	ldrsh.w	r3, [r5, #56]	; 0x38
 800a286:	429c      	cmp	r4, r3
 800a288:	bfa8      	it	ge
 800a28a:	461c      	movge	r4, r3
 800a28c:	6803      	ldr	r3, [r0, #0]
 800a28e:	68db      	ldr	r3, [r3, #12]
 800a290:	4798      	blx	r3
 800a292:	f9b5 3042 	ldrsh.w	r3, [r5, #66]	; 0x42
 800a296:	1ac0      	subs	r0, r0, r3
 800a298:	42a0      	cmp	r0, r4
 800a29a:	bfa8      	it	ge
 800a29c:	4620      	movge	r0, r4
 800a29e:	b200      	sxth	r0, r0
 800a2a0:	bd38      	pop	{r3, r4, r5, pc}
 800a2a2:	f9b5 400a 	ldrsh.w	r4, [r5, #10]
 800a2a6:	e7e2      	b.n	800a26e <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x1a>
 800a2a8:	2000      	movs	r0, #0
 800a2aa:	e7f9      	b.n	800a2a0 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>

0800a2ac <_ZN8touchgfx12DrawableList9setOffsetEl>:
 800a2ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2b0:	4604      	mov	r4, r0
 800a2b2:	460d      	mov	r5, r1
 800a2b4:	6321      	str	r1, [r4, #48]	; 0x30
 800a2b6:	f9b0 303a 	ldrsh.w	r3, [r0, #58]	; 0x3a
 800a2ba:	2b00      	cmp	r3, #0
 800a2bc:	f000 80eb 	beq.w	800a496 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800a2c0:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 800a2c4:	2b00      	cmp	r3, #0
 800a2c6:	f000 80e6 	beq.w	800a496 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800a2ca:	f9b0 3034 	ldrsh.w	r3, [r0, #52]	; 0x34
 800a2ce:	2b00      	cmp	r3, #0
 800a2d0:	f000 80e1 	beq.w	800a496 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800a2d4:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800a2d6:	2800      	cmp	r0, #0
 800a2d8:	f000 80dd 	beq.w	800a496 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800a2dc:	6803      	ldr	r3, [r0, #0]
 800a2de:	68db      	ldr	r3, [r3, #12]
 800a2e0:	4798      	blx	r3
 800a2e2:	2800      	cmp	r0, #0
 800a2e4:	f000 80d7 	beq.w	800a496 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800a2e8:	2d00      	cmp	r5, #0
 800a2ea:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800a2ee:	bfc1      	itttt	gt
 800a2f0:	fb95 f2f1 	sdivgt	r2, r5, r1
 800a2f4:	3201      	addgt	r2, #1
 800a2f6:	4253      	neggt	r3, r2
 800a2f8:	fb01 5512 	mlsgt	r5, r1, r2, r5
 800a2fc:	f1c1 0200 	rsb	r2, r1, #0
 800a300:	bfcc      	ite	gt
 800a302:	b21b      	sxthgt	r3, r3
 800a304:	2300      	movle	r3, #0
 800a306:	f894 702d 	ldrb.w	r7, [r4, #45]	; 0x2d
 800a30a:	f9b4 003a 	ldrsh.w	r0, [r4, #58]	; 0x3a
 800a30e:	42aa      	cmp	r2, r5
 800a310:	bfa1      	itttt	ge
 800a312:	fb95 f2f1 	sdivge	r2, r5, r1
 800a316:	1a9b      	subge	r3, r3, r2
 800a318:	b21b      	sxthge	r3, r3
 800a31a:	fb01 5512 	mlsge	r5, r1, r2, r5
 800a31e:	b167      	cbz	r7, 800a33a <_ZN8touchgfx12DrawableList9setOffsetEl+0x8e>
 800a320:	f9b4 1038 	ldrsh.w	r1, [r4, #56]	; 0x38
 800a324:	fb93 f2f1 	sdiv	r2, r3, r1
 800a328:	fb01 3312 	mls	r3, r1, r2, r3
 800a32c:	440b      	add	r3, r1
 800a32e:	fb93 f2f1 	sdiv	r2, r3, r1
 800a332:	fb01 3312 	mls	r3, r1, r2, r3
 800a336:	b21b      	sxth	r3, r3
 800a338:	e004      	b.n	800a344 <_ZN8touchgfx12DrawableList9setOffsetEl+0x98>
 800a33a:	2b00      	cmp	r3, #0
 800a33c:	da64      	bge.n	800a408 <_ZN8touchgfx12DrawableList9setOffsetEl+0x15c>
 800a33e:	fb01 5513 	mls	r5, r1, r3, r5
 800a342:	463b      	mov	r3, r7
 800a344:	f894 6040 	ldrb.w	r6, [r4, #64]	; 0x40
 800a348:	b1be      	cbz	r6, 800a37a <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 800a34a:	f9b4 e03c 	ldrsh.w	lr, [r4, #60]	; 0x3c
 800a34e:	459e      	cmp	lr, r3
 800a350:	d068      	beq.n	800a424 <_ZN8touchgfx12DrawableList9setOffsetEl+0x178>
 800a352:	2601      	movs	r6, #1
 800a354:	4286      	cmp	r6, r0
 800a356:	da67      	bge.n	800a428 <_ZN8touchgfx12DrawableList9setOffsetEl+0x17c>
 800a358:	eb0e 0106 	add.w	r1, lr, r6
 800a35c:	199a      	adds	r2, r3, r6
 800a35e:	b14f      	cbz	r7, 800a374 <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800a360:	f9b4 c038 	ldrsh.w	ip, [r4, #56]	; 0x38
 800a364:	fb91 f8fc 	sdiv	r8, r1, ip
 800a368:	fb0c 1118 	mls	r1, ip, r8, r1
 800a36c:	fb92 f8fc 	sdiv	r8, r2, ip
 800a370:	fb0c 2218 	mls	r2, ip, r8, r2
 800a374:	428b      	cmp	r3, r1
 800a376:	d151      	bne.n	800a41c <_ZN8touchgfx12DrawableList9setOffsetEl+0x170>
 800a378:	4276      	negs	r6, r6
 800a37a:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 800a37e:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800a380:	1b92      	subs	r2, r2, r6
 800a382:	4402      	add	r2, r0
 800a384:	2700      	movs	r7, #0
 800a386:	fb92 f1f0 	sdiv	r1, r2, r0
 800a38a:	fb00 2011 	mls	r0, r0, r1, r2
 800a38e:	87e0      	strh	r0, [r4, #62]	; 0x3e
 800a390:	b2ad      	uxth	r5, r5
 800a392:	46ba      	mov	sl, r7
 800a394:	f04f 0b01 	mov.w	fp, #1
 800a398:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800a39c:	42ba      	cmp	r2, r7
 800a39e:	dd77      	ble.n	800a490 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800a3a0:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 800a3a4:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a3a6:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 800a3aa:	443b      	add	r3, r7
 800a3ac:	fb93 f8f2 	sdiv	r8, r3, r2
 800a3b0:	fb02 3818 	mls	r8, r2, r8, r3
 800a3b4:	fa1f f888 	uxth.w	r8, r8
 800a3b8:	6803      	ldr	r3, [r0, #0]
 800a3ba:	4441      	add	r1, r8
 800a3bc:	689b      	ldr	r3, [r3, #8]
 800a3be:	b209      	sxth	r1, r1
 800a3c0:	4798      	blx	r3
 800a3c2:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800a3c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800a3c8:	f8b4 c034 	ldrh.w	ip, [r4, #52]	; 0x34
 800a3cc:	6802      	ldr	r2, [r0, #0]
 800a3ce:	4681      	mov	r9, r0
 800a3d0:	fa1f fe87 	uxth.w	lr, r7
 800a3d4:	b351      	cbz	r1, 800a42c <_ZN8touchgfx12DrawableList9setOffsetEl+0x180>
 800a3d6:	18e9      	adds	r1, r5, r3
 800a3d8:	fb1c 110e 	smlabb	r1, ip, lr, r1
 800a3dc:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800a3de:	b209      	sxth	r1, r1
 800a3e0:	2200      	movs	r2, #0
 800a3e2:	4798      	blx	r3
 800a3e4:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 800a3e8:	f894 202d 	ldrb.w	r2, [r4, #45]	; 0x2d
 800a3ec:	443b      	add	r3, r7
 800a3ee:	b322      	cbz	r2, 800a43a <_ZN8touchgfx12DrawableList9setOffsetEl+0x18e>
 800a3f0:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800a3f4:	fb93 f1f2 	sdiv	r1, r3, r2
 800a3f8:	fb02 3311 	mls	r3, r2, r1, r3
 800a3fc:	2b00      	cmp	r3, #0
 800a3fe:	da22      	bge.n	800a446 <_ZN8touchgfx12DrawableList9setOffsetEl+0x19a>
 800a400:	f889 a025 	strb.w	sl, [r9, #37]	; 0x25
 800a404:	3701      	adds	r7, #1
 800a406:	e7c7      	b.n	800a398 <_ZN8touchgfx12DrawableList9setOffsetEl+0xec>
 800a408:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800a40c:	18c6      	adds	r6, r0, r3
 800a40e:	4296      	cmp	r6, r2
 800a410:	dd98      	ble.n	800a344 <_ZN8touchgfx12DrawableList9setOffsetEl+0x98>
 800a412:	1b92      	subs	r2, r2, r6
 800a414:	fb01 5502 	mla	r5, r1, r2, r5
 800a418:	4413      	add	r3, r2
 800a41a:	e78c      	b.n	800a336 <_ZN8touchgfx12DrawableList9setOffsetEl+0x8a>
 800a41c:	4596      	cmp	lr, r2
 800a41e:	d0ac      	beq.n	800a37a <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 800a420:	3601      	adds	r6, #1
 800a422:	e797      	b.n	800a354 <_ZN8touchgfx12DrawableList9setOffsetEl+0xa8>
 800a424:	2600      	movs	r6, #0
 800a426:	e7a8      	b.n	800a37a <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 800a428:	4606      	mov	r6, r0
 800a42a:	e7a6      	b.n	800a37a <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 800a42c:	442b      	add	r3, r5
 800a42e:	fb1c 3c0e 	smlabb	ip, ip, lr, r3
 800a432:	6d93      	ldr	r3, [r2, #88]	; 0x58
 800a434:	fa0f f28c 	sxth.w	r2, ip
 800a438:	e7d3      	b.n	800a3e2 <_ZN8touchgfx12DrawableList9setOffsetEl+0x136>
 800a43a:	2b00      	cmp	r3, #0
 800a43c:	dbe0      	blt.n	800a400 <_ZN8touchgfx12DrawableList9setOffsetEl+0x154>
 800a43e:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800a442:	4293      	cmp	r3, r2
 800a444:	dadc      	bge.n	800a400 <_ZN8touchgfx12DrawableList9setOffsetEl+0x154>
 800a446:	f889 b025 	strb.w	fp, [r9, #37]	; 0x25
 800a44a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800a44e:	b132      	cbz	r2, 800a45e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1b2>
 800a450:	42be      	cmp	r6, r7
 800a452:	dc04      	bgt.n	800a45e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1b2>
 800a454:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800a458:	4432      	add	r2, r6
 800a45a:	4297      	cmp	r7, r2
 800a45c:	dbd2      	blt.n	800a404 <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 800a45e:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800a460:	9301      	str	r3, [sp, #4]
 800a462:	6802      	ldr	r2, [r0, #0]
 800a464:	68d2      	ldr	r2, [r2, #12]
 800a466:	4790      	blx	r2
 800a468:	2800      	cmp	r0, #0
 800a46a:	d0cb      	beq.n	800a404 <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 800a46c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800a46e:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 800a472:	6801      	ldr	r1, [r0, #0]
 800a474:	9b01      	ldr	r3, [sp, #4]
 800a476:	4442      	add	r2, r8
 800a478:	b21b      	sxth	r3, r3
 800a47a:	f8d1 8008 	ldr.w	r8, [r1, #8]
 800a47e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800a480:	b212      	sxth	r2, r2
 800a482:	47c0      	blx	r8
 800a484:	f8d9 3000 	ldr.w	r3, [r9]
 800a488:	4648      	mov	r0, r9
 800a48a:	695b      	ldr	r3, [r3, #20]
 800a48c:	4798      	blx	r3
 800a48e:	e7b9      	b.n	800a404 <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 800a490:	2301      	movs	r3, #1
 800a492:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800a496:	b003      	add	sp, #12
 800a498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a49c <_ZNK8touchgfx12DrawableList9getOffsetEv>:
 800a49c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a49e:	4770      	bx	lr

0800a4a0 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>:
 800a4a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a4a2:	1c54      	adds	r4, r2, #1
 800a4a4:	db2f      	blt.n	800a506 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800a4a6:	f9b0 403a 	ldrsh.w	r4, [r0, #58]	; 0x3a
 800a4aa:	4294      	cmp	r4, r2
 800a4ac:	dd2b      	ble.n	800a506 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800a4ae:	b354      	cbz	r4, 800a506 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800a4b0:	f9b0 6038 	ldrsh.w	r6, [r0, #56]	; 0x38
 800a4b4:	b33e      	cbz	r6, 800a506 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800a4b6:	1c53      	adds	r3, r2, #1
 800a4b8:	d008      	beq.n	800a4cc <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2c>
 800a4ba:	f9b0 303e 	ldrsh.w	r3, [r0, #62]	; 0x3e
 800a4be:	1ad2      	subs	r2, r2, r3
 800a4c0:	4422      	add	r2, r4
 800a4c2:	fb92 f3f4 	sdiv	r3, r2, r4
 800a4c6:	fb04 2213 	mls	r2, r4, r3, r2
 800a4ca:	b212      	sxth	r2, r2
 800a4cc:	3201      	adds	r2, #1
 800a4ce:	b212      	sxth	r2, r2
 800a4d0:	4294      	cmp	r4, r2
 800a4d2:	dd18      	ble.n	800a506 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800a4d4:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800a4d6:	f890 702d 	ldrb.w	r7, [r0, #45]	; 0x2d
 800a4da:	b295      	uxth	r5, r2
 800a4dc:	442b      	add	r3, r5
 800a4de:	b21b      	sxth	r3, r3
 800a4e0:	b127      	cbz	r7, 800a4ec <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x4c>
 800a4e2:	fb93 f7f6 	sdiv	r7, r3, r6
 800a4e6:	fb06 3317 	mls	r3, r6, r7, r3
 800a4ea:	b21b      	sxth	r3, r3
 800a4ec:	428b      	cmp	r3, r1
 800a4ee:	d108      	bne.n	800a502 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x62>
 800a4f0:	f9b0 003e 	ldrsh.w	r0, [r0, #62]	; 0x3e
 800a4f4:	4402      	add	r2, r0
 800a4f6:	fb92 f0f4 	sdiv	r0, r2, r4
 800a4fa:	fb04 2010 	mls	r0, r4, r0, r2
 800a4fe:	b200      	sxth	r0, r0
 800a500:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a502:	1c6a      	adds	r2, r5, #1
 800a504:	e7e3      	b.n	800a4ce <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2e>
 800a506:	f04f 30ff 	mov.w	r0, #4294967295
 800a50a:	e7f9      	b.n	800a500 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x60>

0800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>:
 800a50c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a50e:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800a510:	2500      	movs	r5, #0
 800a512:	4604      	mov	r4, r0
 800a514:	8745      	strh	r5, [r0, #58]	; 0x3a
 800a516:	2b00      	cmp	r3, #0
 800a518:	d042      	beq.n	800a5a0 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x94>
 800a51a:	f7ff fe9b 	bl	800a254 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>
 800a51e:	8760      	strh	r0, [r4, #58]	; 0x3a
 800a520:	4620      	mov	r0, r4
 800a522:	f000 fcc4 	bl	800aeae <_ZN8touchgfx9Container9removeAllEv>
 800a526:	f9b4 303a 	ldrsh.w	r3, [r4, #58]	; 0x3a
 800a52a:	42ab      	cmp	r3, r5
 800a52c:	dd2d      	ble.n	800a58a <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x7e>
 800a52e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a530:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 800a534:	6803      	ldr	r3, [r0, #0]
 800a536:	4429      	add	r1, r5
 800a538:	b209      	sxth	r1, r1
 800a53a:	689b      	ldr	r3, [r3, #8]
 800a53c:	4798      	blx	r3
 800a53e:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800a542:	f8b4 c036 	ldrh.w	ip, [r4, #54]	; 0x36
 800a546:	8ea1      	ldrh	r1, [r4, #52]	; 0x34
 800a548:	6807      	ldr	r7, [r0, #0]
 800a54a:	4606      	mov	r6, r0
 800a54c:	b1aa      	cbz	r2, 800a57a <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x6e>
 800a54e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800a552:	9300      	str	r3, [sp, #0]
 800a554:	eba1 014c 	sub.w	r1, r1, ip, lsl #1
 800a558:	6abf      	ldr	r7, [r7, #40]	; 0x28
 800a55a:	b20b      	sxth	r3, r1
 800a55c:	2200      	movs	r2, #0
 800a55e:	4611      	mov	r1, r2
 800a560:	47b8      	blx	r7
 800a562:	6970      	ldr	r0, [r6, #20]
 800a564:	b118      	cbz	r0, 800a56e <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x62>
 800a566:	6803      	ldr	r3, [r0, #0]
 800a568:	4631      	mov	r1, r6
 800a56a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a56c:	4798      	blx	r3
 800a56e:	4631      	mov	r1, r6
 800a570:	4620      	mov	r0, r4
 800a572:	f000 fd31 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a576:	3501      	adds	r5, #1
 800a578:	e7d5      	b.n	800a526 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x1a>
 800a57a:	eba1 014c 	sub.w	r1, r1, ip, lsl #1
 800a57e:	b209      	sxth	r1, r1
 800a580:	9100      	str	r1, [sp, #0]
 800a582:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800a586:	6abf      	ldr	r7, [r7, #40]	; 0x28
 800a588:	e7e9      	b.n	800a55e <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x52>
 800a58a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a58c:	2300      	movs	r3, #0
 800a58e:	4620      	mov	r0, r4
 800a590:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800a594:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a596:	b003      	add	sp, #12
 800a598:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a59c:	f7ff be86 	b.w	800a2ac <_ZN8touchgfx12DrawableList9setOffsetEl>
 800a5a0:	b003      	add	sp, #12
 800a5a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a5a4 <_ZN8touchgfx12DrawableList8setWidthEs>:
 800a5a4:	8101      	strh	r1, [r0, #8]
 800a5a6:	f7ff bfb1 	b.w	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800a5aa <_ZN8touchgfx12DrawableList9setHeightEs>:
 800a5aa:	8141      	strh	r1, [r0, #10]
 800a5ac:	f7ff bfae 	b.w	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800a5b0 <_ZN8touchgfx12DrawableList13setHorizontalEb>:
 800a5b0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a5b4:	b121      	cbz	r1, 800a5c0 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x10>
 800a5b6:	b92b      	cbnz	r3, 800a5c4 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x14>
 800a5b8:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800a5bc:	f7ff bfa6 	b.w	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 800a5c0:	2b00      	cmp	r3, #0
 800a5c2:	d1f9      	bne.n	800a5b8 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x8>
 800a5c4:	4770      	bx	lr

0800a5c6 <_ZN8touchgfx12DrawableList11setCircularEb>:
 800a5c6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800a5ca:	b121      	cbz	r1, 800a5d6 <_ZN8touchgfx12DrawableList11setCircularEb+0x10>
 800a5cc:	b92b      	cbnz	r3, 800a5da <_ZN8touchgfx12DrawableList11setCircularEb+0x14>
 800a5ce:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
 800a5d2:	f7ff bf9b 	b.w	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 800a5d6:	2b00      	cmp	r3, #0
 800a5d8:	d1f9      	bne.n	800a5ce <_ZN8touchgfx12DrawableList11setCircularEb+0x8>
 800a5da:	4770      	bx	lr

0800a5dc <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>:
 800a5dc:	b410      	push	{r4}
 800a5de:	6441      	str	r1, [r0, #68]	; 0x44
 800a5e0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800a5e4:	6483      	str	r3, [r0, #72]	; 0x48
 800a5e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a5ea:	f7ff bf8f 	b.w	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800a5ee <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>:
 800a5ee:	8701      	strh	r1, [r0, #56]	; 0x38
 800a5f0:	f7ff bf8c 	b.w	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800a5f4 <_ZN8touchgfx12DrawableList11itemChangedEs>:
 800a5f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a5f6:	4604      	mov	r4, r0
 800a5f8:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800a5fa:	460e      	mov	r6, r1
 800a5fc:	b1c0      	cbz	r0, 800a630 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800a5fe:	6803      	ldr	r3, [r0, #0]
 800a600:	68db      	ldr	r3, [r3, #12]
 800a602:	4798      	blx	r3
 800a604:	b1a0      	cbz	r0, 800a630 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800a606:	f04f 35ff 	mov.w	r5, #4294967295
 800a60a:	462a      	mov	r2, r5
 800a60c:	4631      	mov	r1, r6
 800a60e:	4620      	mov	r0, r4
 800a610:	f7ff ff46 	bl	800a4a0 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>
 800a614:	1c43      	adds	r3, r0, #1
 800a616:	4605      	mov	r5, r0
 800a618:	d00a      	beq.n	800a630 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800a61a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800a61c:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 800a620:	6803      	ldr	r3, [r0, #0]
 800a622:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800a624:	689f      	ldr	r7, [r3, #8]
 800a626:	442a      	add	r2, r5
 800a628:	4633      	mov	r3, r6
 800a62a:	b212      	sxth	r2, r2
 800a62c:	47b8      	blx	r7
 800a62e:	e7ec      	b.n	800a60a <_ZN8touchgfx12DrawableList11itemChangedEs+0x16>
 800a630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a632 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE>:
 800a632:	b570      	push	{r4, r5, r6, lr}
 800a634:	790b      	ldrb	r3, [r1, #4]
 800a636:	4604      	mov	r4, r0
 800a638:	2b00      	cmp	r3, #0
 800a63a:	d158      	bne.n	800a6ee <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xbc>
 800a63c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800a640:	f8a0 30b0 	strh.w	r3, [r0, #176]	; 0xb0
 800a644:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 800a648:	f8a0 30b2 	strh.w	r3, [r0, #178]	; 0xb2
 800a64c:	6803      	ldr	r3, [r0, #0]
 800a64e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a652:	4798      	blx	r3
 800a654:	6823      	ldr	r3, [r4, #0]
 800a656:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 800a65a:	4601      	mov	r1, r0
 800a65c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800a660:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800a664:	4620      	mov	r0, r4
 800a666:	4798      	blx	r3
 800a668:	4601      	mov	r1, r0
 800a66a:	4620      	mov	r0, r4
 800a66c:	47a8      	blx	r5
 800a66e:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 800a672:	2800      	cmp	r0, #0
 800a674:	f000 809f 	beq.w	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a678:	6803      	ldr	r3, [r0, #0]
 800a67a:	68db      	ldr	r3, [r3, #12]
 800a67c:	4798      	blx	r3
 800a67e:	2800      	cmp	r0, #0
 800a680:	f000 8099 	beq.w	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a684:	6823      	ldr	r3, [r4, #0]
 800a686:	4620      	mov	r0, r4
 800a688:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a68c:	4798      	blx	r3
 800a68e:	b358      	cbz	r0, 800a6e8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xb6>
 800a690:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 800a694:	6823      	ldr	r3, [r4, #0]
 800a696:	4620      	mov	r0, r4
 800a698:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a69c:	4798      	blx	r3
 800a69e:	6823      	ldr	r3, [r4, #0]
 800a6a0:	1a2d      	subs	r5, r5, r0
 800a6a2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800a6a6:	4620      	mov	r0, r4
 800a6a8:	4798      	blx	r3
 800a6aa:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 800a6ae:	6823      	ldr	r3, [r4, #0]
 800a6b0:	fb16 f600 	smulbb	r6, r6, r0
 800a6b4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a6b8:	4620      	mov	r0, r4
 800a6ba:	4798      	blx	r3
 800a6bc:	b120      	cbz	r0, 800a6c8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x96>
 800a6be:	4435      	add	r5, r6
 800a6c0:	fb95 f1f6 	sdiv	r1, r5, r6
 800a6c4:	fb06 5511 	mls	r5, r6, r1, r5
 800a6c8:	2d00      	cmp	r5, #0
 800a6ca:	db74      	blt.n	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a6cc:	42b5      	cmp	r5, r6
 800a6ce:	da72      	bge.n	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a6d0:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 800a6d4:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 800a6d8:	fb95 f1f1 	sdiv	r1, r5, r1
 800a6dc:	6803      	ldr	r3, [r0, #0]
 800a6de:	b209      	sxth	r1, r1
 800a6e0:	689b      	ldr	r3, [r3, #8]
 800a6e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6e6:	4718      	bx	r3
 800a6e8:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 800a6ec:	e7d2      	b.n	800a694 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x62>
 800a6ee:	2b01      	cmp	r3, #1
 800a6f0:	d161      	bne.n	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a6f2:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 800a6f6:	2b00      	cmp	r3, #0
 800a6f8:	d14a      	bne.n	800a790 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x15e>
 800a6fa:	6803      	ldr	r3, [r0, #0]
 800a6fc:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800a700:	f8d3 60c0 	ldr.w	r6, [r3, #192]	; 0xc0
 800a704:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a708:	4798      	blx	r3
 800a70a:	4601      	mov	r1, r0
 800a70c:	4620      	mov	r0, r4
 800a70e:	47b0      	blx	r6
 800a710:	4601      	mov	r1, r0
 800a712:	4620      	mov	r0, r4
 800a714:	47a8      	blx	r5
 800a716:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 800a71a:	2800      	cmp	r0, #0
 800a71c:	d04b      	beq.n	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a71e:	6803      	ldr	r3, [r0, #0]
 800a720:	68db      	ldr	r3, [r3, #12]
 800a722:	4798      	blx	r3
 800a724:	2800      	cmp	r0, #0
 800a726:	d046      	beq.n	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a728:	6823      	ldr	r3, [r4, #0]
 800a72a:	4620      	mov	r0, r4
 800a72c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a730:	4798      	blx	r3
 800a732:	b330      	cbz	r0, 800a782 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x150>
 800a734:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 800a738:	6823      	ldr	r3, [r4, #0]
 800a73a:	4620      	mov	r0, r4
 800a73c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a740:	4798      	blx	r3
 800a742:	6823      	ldr	r3, [r4, #0]
 800a744:	1a2d      	subs	r5, r5, r0
 800a746:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800a74a:	4620      	mov	r0, r4
 800a74c:	4798      	blx	r3
 800a74e:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 800a752:	6823      	ldr	r3, [r4, #0]
 800a754:	fb16 f600 	smulbb	r6, r6, r0
 800a758:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a75c:	4620      	mov	r0, r4
 800a75e:	4798      	blx	r3
 800a760:	b190      	cbz	r0, 800a788 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x156>
 800a762:	19a9      	adds	r1, r5, r6
 800a764:	fb91 f3f6 	sdiv	r3, r1, r6
 800a768:	fb06 1113 	mls	r1, r6, r3, r1
 800a76c:	2900      	cmp	r1, #0
 800a76e:	db22      	blt.n	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a770:	42b1      	cmp	r1, r6
 800a772:	da20      	bge.n	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a774:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 800a778:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 800a77c:	fb91 f1f3 	sdiv	r1, r1, r3
 800a780:	e7ac      	b.n	800a6dc <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xaa>
 800a782:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 800a786:	e7d7      	b.n	800a738 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x106>
 800a788:	f9b4 107a 	ldrsh.w	r1, [r4, #122]	; 0x7a
 800a78c:	1a69      	subs	r1, r5, r1
 800a78e:	e7ed      	b.n	800a76c <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x13a>
 800a790:	2b02      	cmp	r3, #2
 800a792:	d110      	bne.n	800a7b6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800a794:	6803      	ldr	r3, [r0, #0]
 800a796:	e9d3 6530 	ldrd	r6, r5, [r3, #192]	; 0xc0
 800a79a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a79e:	4798      	blx	r3
 800a7a0:	4601      	mov	r1, r0
 800a7a2:	4620      	mov	r0, r4
 800a7a4:	47b0      	blx	r6
 800a7a6:	462b      	mov	r3, r5
 800a7a8:	4601      	mov	r1, r0
 800a7aa:	f04f 32ff 	mov.w	r2, #4294967295
 800a7ae:	4620      	mov	r0, r4
 800a7b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7b4:	4718      	bx	r3
 800a7b6:	bd70      	pop	{r4, r5, r6, pc}

0800a7b8 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls>:
 800a7b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7bc:	6803      	ldr	r3, [r0, #0]
 800a7be:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a7c2:	4605      	mov	r5, r0
 800a7c4:	460e      	mov	r6, r1
 800a7c6:	4617      	mov	r7, r2
 800a7c8:	4798      	blx	r3
 800a7ca:	4604      	mov	r4, r0
 800a7cc:	b9d8      	cbnz	r0, 800a806 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x4e>
 800a7ce:	682b      	ldr	r3, [r5, #0]
 800a7d0:	f8d5 80c0 	ldr.w	r8, [r5, #192]	; 0xc0
 800a7d4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800a7d8:	42be      	cmp	r6, r7
 800a7da:	4628      	mov	r0, r5
 800a7dc:	bfa8      	it	ge
 800a7de:	463e      	movge	r6, r7
 800a7e0:	4798      	blx	r3
 800a7e2:	4580      	cmp	r8, r0
 800a7e4:	da07      	bge.n	800a7f6 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x3e>
 800a7e6:	682b      	ldr	r3, [r5, #0]
 800a7e8:	4628      	mov	r0, r5
 800a7ea:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800a7ee:	4798      	blx	r3
 800a7f0:	f8d5 40c0 	ldr.w	r4, [r5, #192]	; 0xc0
 800a7f4:	1b04      	subs	r4, r0, r4
 800a7f6:	f9b5 107c 	ldrsh.w	r1, [r5, #124]	; 0x7c
 800a7fa:	434c      	muls	r4, r1
 800a7fc:	4264      	negs	r4, r4
 800a7fe:	1be1      	subs	r1, r4, r7
 800a800:	428e      	cmp	r6, r1
 800a802:	bfb8      	it	lt
 800a804:	460e      	movlt	r6, r1
 800a806:	4630      	mov	r0, r6
 800a808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a80c <_ZN8touchgfx10ScrollListD1Ev>:
 800a80c:	4770      	bx	lr

0800a80e <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>:
 800a80e:	b570      	push	{r4, r5, r6, lr}
 800a810:	460d      	mov	r5, r1
 800a812:	4604      	mov	r4, r0
 800a814:	4616      	mov	r6, r2
 800a816:	f000 fa1d 	bl	800ac54 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 800a81a:	682b      	ldr	r3, [r5, #0]
 800a81c:	4628      	mov	r0, r5
 800a81e:	68db      	ldr	r3, [r3, #12]
 800a820:	4798      	blx	r3
 800a822:	4633      	mov	r3, r6
 800a824:	f8a4 0078 	strh.w	r0, [r4, #120]	; 0x78
 800a828:	4629      	mov	r1, r5
 800a82a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800a82e:	2200      	movs	r2, #0
 800a830:	f7ff fed4 	bl	800a5dc <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>
 800a834:	6823      	ldr	r3, [r4, #0]
 800a836:	4620      	mov	r0, r4
 800a838:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a83c:	2100      	movs	r1, #0
 800a83e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a842:	4718      	bx	r3

0800a844 <_ZN8touchgfx10ScrollList18getPositionForItemEs>:
 800a844:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a848:	6803      	ldr	r3, [r0, #0]
 800a84a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a84e:	460f      	mov	r7, r1
 800a850:	4604      	mov	r4, r0
 800a852:	4798      	blx	r3
 800a854:	4601      	mov	r1, r0
 800a856:	4620      	mov	r0, r4
 800a858:	f000 fa49 	bl	800acee <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 800a85c:	2f00      	cmp	r7, #0
 800a85e:	4606      	mov	r6, r0
 800a860:	db6b      	blt.n	800a93a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800a862:	f104 092c 	add.w	r9, r4, #44	; 0x2c
 800a866:	4648      	mov	r0, r9
 800a868:	f7ff fcf1 	bl	800a24e <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 800a86c:	42b8      	cmp	r0, r7
 800a86e:	dd64      	ble.n	800a93a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800a870:	f9b4 507c 	ldrsh.w	r5, [r4, #124]	; 0x7c
 800a874:	2d00      	cmp	r5, #0
 800a876:	d060      	beq.n	800a93a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800a878:	6823      	ldr	r3, [r4, #0]
 800a87a:	4278      	negs	r0, r7
 800a87c:	4345      	muls	r5, r0
 800a87e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a882:	4620      	mov	r0, r4
 800a884:	4798      	blx	r3
 800a886:	2800      	cmp	r0, #0
 800a888:	d05a      	beq.n	800a940 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 800a88a:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800a88e:	f8b4 107a 	ldrh.w	r1, [r4, #122]	; 0x7a
 800a892:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 800a896:	4419      	add	r1, r3
 800a898:	eba8 0801 	sub.w	r8, r8, r1
 800a89c:	4648      	mov	r0, r9
 800a89e:	fa0f f888 	sxth.w	r8, r8
 800a8a2:	f7ff fc92 	bl	800a1ca <_ZNK8touchgfx12DrawableList11getCircularEv>
 800a8a6:	2800      	cmp	r0, #0
 800a8a8:	d051      	beq.n	800a94e <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x10a>
 800a8aa:	46b2      	mov	sl, r6
 800a8ac:	4651      	mov	r1, sl
 800a8ae:	4620      	mov	r0, r4
 800a8b0:	f000 fa1d 	bl	800acee <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 800a8b4:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 800a8b8:	4240      	negs	r0, r0
 800a8ba:	fb90 f0f3 	sdiv	r0, r0, r3
 800a8be:	b200      	sxth	r0, r0
 800a8c0:	4287      	cmp	r7, r0
 800a8c2:	d03a      	beq.n	800a93a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800a8c4:	ebaa 0a03 	sub.w	sl, sl, r3
 800a8c8:	eba8 0303 	sub.w	r3, r8, r3
 800a8cc:	1af3      	subs	r3, r6, r3
 800a8ce:	4553      	cmp	r3, sl
 800a8d0:	ddec      	ble.n	800a8ac <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x68>
 800a8d2:	4648      	mov	r0, r9
 800a8d4:	f7ff fcbb 	bl	800a24e <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 800a8d8:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 800a8dc:	fb00 f701 	mul.w	r7, r0, r1
 800a8e0:	eba8 0101 	sub.w	r1, r8, r1
 800a8e4:	1a71      	subs	r1, r6, r1
 800a8e6:	4620      	mov	r0, r4
 800a8e8:	f000 fa01 	bl	800acee <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 800a8ec:	eb05 0a07 	add.w	sl, r5, r7
 800a8f0:	eba5 0906 	sub.w	r9, r5, r6
 800a8f4:	ebaa 0a06 	sub.w	sl, sl, r6
 800a8f8:	1beb      	subs	r3, r5, r7
 800a8fa:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
 800a8fe:	ea8a 71ea 	eor.w	r1, sl, sl, asr #31
 800a902:	1ac3      	subs	r3, r0, r3
 800a904:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
 800a908:	eba1 71ea 	sub.w	r1, r1, sl, asr #31
 800a90c:	4291      	cmp	r1, r2
 800a90e:	bfb8      	it	lt
 800a910:	46d1      	movlt	r9, sl
 800a912:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 800a916:	1b45      	subs	r5, r0, r5
 800a918:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 800a91c:	d52f      	bpl.n	800a97e <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x13a>
 800a91e:	4269      	negs	r1, r5
 800a920:	4291      	cmp	r1, r2
 800a922:	dd10      	ble.n	800a946 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x102>
 800a924:	2b00      	cmp	r3, #0
 800a926:	da10      	bge.n	800a94a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x106>
 800a928:	425d      	negs	r5, r3
 800a92a:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
 800a92e:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
 800a932:	4295      	cmp	r5, r2
 800a934:	bfb4      	ite	lt
 800a936:	1af6      	sublt	r6, r6, r3
 800a938:	444e      	addge	r6, r9
 800a93a:	4630      	mov	r0, r6
 800a93c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a940:	f9b4 800a 	ldrsh.w	r8, [r4, #10]
 800a944:	e7a3      	b.n	800a88e <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x4a>
 800a946:	462b      	mov	r3, r5
 800a948:	e7ee      	b.n	800a928 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe4>
 800a94a:	461d      	mov	r5, r3
 800a94c:	e7ed      	b.n	800a92a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe6>
 800a94e:	42ae      	cmp	r6, r5
 800a950:	db13      	blt.n	800a97a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x136>
 800a952:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 800a956:	fb98 f3f2 	sdiv	r3, r8, r2
 800a95a:	b21b      	sxth	r3, r3
 800a95c:	2b00      	cmp	r3, #0
 800a95e:	dd05      	ble.n	800a96c <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x128>
 800a960:	f894 10bc 	ldrb.w	r1, [r4, #188]	; 0xbc
 800a964:	b131      	cbz	r1, 800a974 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x130>
 800a966:	3b01      	subs	r3, #1
 800a968:	fb02 5503 	mla	r5, r2, r3, r5
 800a96c:	42ae      	cmp	r6, r5
 800a96e:	bfa8      	it	ge
 800a970:	462e      	movge	r6, r5
 800a972:	e7e2      	b.n	800a93a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800a974:	4445      	add	r5, r8
 800a976:	1aad      	subs	r5, r5, r2
 800a978:	e7f8      	b.n	800a96c <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x128>
 800a97a:	462e      	mov	r6, r5
 800a97c:	e7dd      	b.n	800a93a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800a97e:	4295      	cmp	r5, r2
 800a980:	dcd0      	bgt.n	800a924 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe0>
 800a982:	462b      	mov	r3, r5
 800a984:	e7d1      	b.n	800a92a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe6>

0800a986 <_ZN8touchgfx10ScrollListD0Ev>:
 800a986:	b510      	push	{r4, lr}
 800a988:	21c4      	movs	r1, #196	; 0xc4
 800a98a:	4604      	mov	r4, r0
 800a98c:	f011 fcb2 	bl	801c2f4 <_ZdlPvj>
 800a990:	4620      	mov	r0, r4
 800a992:	bd10      	pop	{r4, pc}

0800a994 <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl>:
 800a994:	f890 20bc 	ldrb.w	r2, [r0, #188]	; 0xbc
 800a998:	b10a      	cbz	r2, 800a99e <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl+0xa>
 800a99a:	f000 b8a3 	b.w	800aae4 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>
 800a99e:	6803      	ldr	r3, [r0, #0]
 800a9a0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800a9a4:	4718      	bx	r3
	...

0800a9a8 <_ZN8touchgfx10ScrollListC1Ev>:
 800a9a8:	b510      	push	{r4, lr}
 800a9aa:	4604      	mov	r4, r0
 800a9ac:	f000 fa0e 	bl	800adcc <_ZN8touchgfx10ScrollBaseC1Ev>
 800a9b0:	4b05      	ldr	r3, [pc, #20]	; (800a9c8 <_ZN8touchgfx10ScrollListC1Ev+0x20>)
 800a9b2:	6023      	str	r3, [r4, #0]
 800a9b4:	2300      	movs	r3, #0
 800a9b6:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 800a9ba:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 800a9be:	2301      	movs	r3, #1
 800a9c0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800a9c4:	4620      	mov	r0, r4
 800a9c6:	bd10      	pop	{r4, pc}
 800a9c8:	0801edd8 	.word	0x0801edd8

0800a9cc <_ZN8touchgfx10ScrollList10setPaddingEss>:
 800a9cc:	b570      	push	{r4, r5, r6, lr}
 800a9ce:	6803      	ldr	r3, [r0, #0]
 800a9d0:	4604      	mov	r4, r0
 800a9d2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a9d6:	460e      	mov	r6, r1
 800a9d8:	4615      	mov	r5, r2
 800a9da:	4798      	blx	r3
 800a9dc:	6823      	ldr	r3, [r4, #0]
 800a9de:	f8a4 607a 	strh.w	r6, [r4, #122]	; 0x7a
 800a9e2:	f8a4 50ba 	strh.w	r5, [r4, #186]	; 0xba
 800a9e6:	4601      	mov	r1, r0
 800a9e8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a9ec:	4620      	mov	r0, r4
 800a9ee:	4798      	blx	r3
 800a9f0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800a9f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a9f8:	f7ff bd88 	b.w	800a50c <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800a9fc <_ZN8touchgfx10ScrollList11setSnappingEb>:
 800a9fc:	b570      	push	{r4, r5, r6, lr}
 800a9fe:	4604      	mov	r4, r0
 800aa00:	f880 10bc 	strb.w	r1, [r0, #188]	; 0xbc
 800aa04:	b181      	cbz	r1, 800aa28 <_ZN8touchgfx10ScrollList11setSnappingEb+0x2c>
 800aa06:	6803      	ldr	r3, [r0, #0]
 800aa08:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800aa0c:	f8d3 60c0 	ldr.w	r6, [r3, #192]	; 0xc0
 800aa10:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800aa14:	4798      	blx	r3
 800aa16:	4601      	mov	r1, r0
 800aa18:	4620      	mov	r0, r4
 800aa1a:	47b0      	blx	r6
 800aa1c:	462b      	mov	r3, r5
 800aa1e:	4601      	mov	r1, r0
 800aa20:	4620      	mov	r0, r4
 800aa22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa26:	4718      	bx	r3
 800aa28:	bd70      	pop	{r4, r5, r6, pc}

0800aa2a <_ZN8touchgfx10ScrollBase13animateToItemEss>:
 800aa2a:	b570      	push	{r4, r5, r6, lr}
 800aa2c:	6803      	ldr	r3, [r0, #0]
 800aa2e:	4604      	mov	r4, r0
 800aa30:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800aa34:	4615      	mov	r5, r2
 800aa36:	4798      	blx	r3
 800aa38:	6823      	ldr	r3, [r4, #0]
 800aa3a:	462a      	mov	r2, r5
 800aa3c:	4601      	mov	r1, r0
 800aa3e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800aa42:	4620      	mov	r0, r4
 800aa44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa48:	4718      	bx	r3

0800aa4a <_ZNK8touchgfx10ScrollBase16getNumberOfItemsEv>:
 800aa4a:	302c      	adds	r0, #44	; 0x2c
 800aa4c:	f7ff bbff 	b.w	800a24e <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>

0800aa50 <_ZN8touchgfx10ScrollBase11itemChangedEi>:
 800aa50:	b209      	sxth	r1, r1
 800aa52:	302c      	adds	r0, #44	; 0x2c
 800aa54:	f7ff bdce 	b.w	800a5f4 <_ZN8touchgfx12DrawableList11itemChangedEs>

0800aa58 <_ZN8touchgfx10ScrollBase9setOffsetEl>:
 800aa58:	f9b0 307a 	ldrsh.w	r3, [r0, #122]	; 0x7a
 800aa5c:	302c      	adds	r0, #44	; 0x2c
 800aa5e:	4419      	add	r1, r3
 800aa60:	f7ff bc24 	b.w	800a2ac <_ZN8touchgfx12DrawableList9setOffsetEl>

0800aa64 <_ZNK8touchgfx10ScrollBase9getOffsetEv>:
 800aa64:	b510      	push	{r4, lr}
 800aa66:	4604      	mov	r4, r0
 800aa68:	302c      	adds	r0, #44	; 0x2c
 800aa6a:	f7ff fd17 	bl	800a49c <_ZNK8touchgfx12DrawableList9getOffsetEv>
 800aa6e:	f9b4 307a 	ldrsh.w	r3, [r4, #122]	; 0x7a
 800aa72:	1ac0      	subs	r0, r0, r3
 800aa74:	bd10      	pop	{r4, pc}

0800aa76 <_ZN8touchgfx10ScrollBase17animateToPositionEls>:
 800aa76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aa78:	6803      	ldr	r3, [r0, #0]
 800aa7a:	4604      	mov	r4, r0
 800aa7c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800aa80:	4615      	mov	r5, r2
 800aa82:	460f      	mov	r7, r1
 800aa84:	4798      	blx	r3
 800aa86:	6823      	ldr	r3, [r4, #0]
 800aa88:	4606      	mov	r6, r0
 800aa8a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800aa8e:	4639      	mov	r1, r7
 800aa90:	4620      	mov	r0, r4
 800aa92:	4798      	blx	r3
 800aa94:	2d00      	cmp	r5, #0
 800aa96:	eba0 0306 	sub.w	r3, r0, r6
 800aa9a:	bfb8      	it	lt
 800aa9c:	f9b4 5088 	ldrshlt.w	r5, [r4, #136]	; 0x88
 800aaa0:	2b00      	cmp	r3, #0
 800aaa2:	bfb8      	it	lt
 800aaa4:	425b      	neglt	r3, r3
 800aaa6:	429d      	cmp	r5, r3
 800aaa8:	bfa8      	it	ge
 800aaaa:	b21d      	sxthge	r5, r3
 800aaac:	2d00      	cmp	r5, #0
 800aaae:	4601      	mov	r1, r0
 800aab0:	dc08      	bgt.n	800aac4 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4e>
 800aab2:	6823      	ldr	r3, [r4, #0]
 800aab4:	4620      	mov	r0, r4
 800aab6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800aaba:	4798      	blx	r3
 800aabc:	2300      	movs	r3, #0
 800aabe:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 800aac2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800aac4:	2300      	movs	r3, #0
 800aac6:	e9c4 3528 	strd	r3, r5, [r4, #160]	; 0xa0
 800aaca:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 800aace:	2b01      	cmp	r3, #1
 800aad0:	e9c4 602a 	strd	r6, r0, [r4, #168]	; 0xa8
 800aad4:	d0f5      	beq.n	800aac2 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4c>
 800aad6:	f003 fb4f 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800aada:	4621      	mov	r1, r4
 800aadc:	f003 fb52 	bl	800e184 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800aae0:	2301      	movs	r3, #1
 800aae2:	e7ec      	b.n	800aabe <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x48>

0800aae4 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>:
 800aae4:	b538      	push	{r3, r4, r5, lr}
 800aae6:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 800aaea:	4605      	mov	r5, r0
 800aaec:	460c      	mov	r4, r1
 800aaee:	b193      	cbz	r3, 800ab16 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>
 800aaf0:	6803      	ldr	r3, [r0, #0]
 800aaf2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800aaf6:	4798      	blx	r3
 800aaf8:	4602      	mov	r2, r0
 800aafa:	b170      	cbz	r0, 800ab1a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x36>
 800aafc:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 800ab00:	2c00      	cmp	r4, #0
 800ab02:	f04f 0102 	mov.w	r1, #2
 800ab06:	fb93 f1f1 	sdiv	r1, r3, r1
 800ab0a:	bfb4      	ite	lt
 800ab0c:	1a64      	sublt	r4, r4, r1
 800ab0e:	1864      	addge	r4, r4, r1
 800ab10:	fb94 f4f3 	sdiv	r4, r4, r3
 800ab14:	435c      	muls	r4, r3
 800ab16:	4620      	mov	r0, r4
 800ab18:	bd38      	pop	{r3, r4, r5, pc}
 800ab1a:	682b      	ldr	r3, [r5, #0]
 800ab1c:	4621      	mov	r1, r4
 800ab1e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ab22:	4628      	mov	r0, r5
 800ab24:	4798      	blx	r3
 800ab26:	f9b5 407c 	ldrsh.w	r4, [r5, #124]	; 0x7c
 800ab2a:	2302      	movs	r3, #2
 800ab2c:	fb94 f3f3 	sdiv	r3, r4, r3
 800ab30:	1ac0      	subs	r0, r0, r3
 800ab32:	fb90 f0f4 	sdiv	r0, r0, r4
 800ab36:	4344      	muls	r4, r0
 800ab38:	e7ed      	b.n	800ab16 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>

0800ab3a <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>:
 800ab3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab3e:	6803      	ldr	r3, [r0, #0]
 800ab40:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800ab44:	460d      	mov	r5, r1
 800ab46:	4604      	mov	r4, r0
 800ab48:	4798      	blx	r3
 800ab4a:	42a8      	cmp	r0, r5
 800ab4c:	d020      	beq.n	800ab90 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 800ab4e:	4629      	mov	r1, r5
 800ab50:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800ab54:	f7ff fd4b 	bl	800a5ee <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>
 800ab58:	6823      	ldr	r3, [r4, #0]
 800ab5a:	4620      	mov	r0, r4
 800ab5c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800ab60:	4798      	blx	r3
 800ab62:	4605      	mov	r5, r0
 800ab64:	b9a0      	cbnz	r0, 800ab90 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 800ab66:	6823      	ldr	r3, [r4, #0]
 800ab68:	4620      	mov	r0, r4
 800ab6a:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 800ab6e:	f8d3 70bc 	ldr.w	r7, [r3, #188]	; 0xbc
 800ab72:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ab76:	4798      	blx	r3
 800ab78:	462a      	mov	r2, r5
 800ab7a:	4601      	mov	r1, r0
 800ab7c:	4620      	mov	r0, r4
 800ab7e:	47b8      	blx	r7
 800ab80:	4633      	mov	r3, r6
 800ab82:	4601      	mov	r1, r0
 800ab84:	f04f 32ff 	mov.w	r2, #4294967295
 800ab88:	4620      	mov	r0, r4
 800ab8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ab8e:	4718      	bx	r3
 800ab90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab94 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE>:
 800ab94:	b570      	push	{r4, r5, r6, lr}
 800ab96:	6803      	ldr	r3, [r0, #0]
 800ab98:	790e      	ldrb	r6, [r1, #4]
 800ab9a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800ab9e:	4605      	mov	r5, r0
 800aba0:	460c      	mov	r4, r1
 800aba2:	4798      	blx	r3
 800aba4:	f080 0001 	eor.w	r0, r0, #1
 800aba8:	b2c0      	uxtb	r0, r0
 800abaa:	42b0      	cmp	r0, r6
 800abac:	d141      	bne.n	800ac32 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x9e>
 800abae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800abb2:	2b00      	cmp	r3, #0
 800abb4:	bfbd      	ittte	lt
 800abb6:	425b      	neglt	r3, r3
 800abb8:	b21b      	sxthlt	r3, r3
 800abba:	f04f 36ff 	movlt.w	r6, #4294967295
 800abbe:	2601      	movge	r6, #1
 800abc0:	2b04      	cmp	r3, #4
 800abc2:	bfc2      	ittt	gt
 800abc4:	3b04      	subgt	r3, #4
 800abc6:	ebc3 03c3 	rsbgt	r3, r3, r3, lsl #3
 800abca:	b21c      	sxthgt	r4, r3
 800abcc:	682b      	ldr	r3, [r5, #0]
 800abce:	4628      	mov	r0, r5
 800abd0:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800abd4:	bfd8      	it	le
 800abd6:	2407      	movle	r4, #7
 800abd8:	4798      	blx	r3
 800abda:	f8b5 107e 	ldrh.w	r1, [r5, #126]	; 0x7e
 800abde:	4366      	muls	r6, r4
 800abe0:	230a      	movs	r3, #10
 800abe2:	4371      	muls	r1, r6
 800abe4:	fb91 f1f3 	sdiv	r1, r1, r3
 800abe8:	f8b5 3082 	ldrh.w	r3, [r5, #130]	; 0x82
 800abec:	4401      	add	r1, r0
 800abee:	b163      	cbz	r3, 800ac0a <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x76>
 800abf0:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 800abf4:	f8d5 20b4 	ldr.w	r2, [r5, #180]	; 0xb4
 800abf8:	4343      	muls	r3, r0
 800abfa:	1898      	adds	r0, r3, r2
 800abfc:	4281      	cmp	r1, r0
 800abfe:	bfa8      	it	ge
 800ac00:	4601      	movge	r1, r0
 800ac02:	1ad0      	subs	r0, r2, r3
 800ac04:	4281      	cmp	r1, r0
 800ac06:	bfb8      	it	lt
 800ac08:	4601      	movlt	r1, r0
 800ac0a:	682b      	ldr	r3, [r5, #0]
 800ac0c:	2200      	movs	r2, #0
 800ac0e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ac12:	4628      	mov	r0, r5
 800ac14:	4798      	blx	r3
 800ac16:	f8b5 2088 	ldrh.w	r2, [r5, #136]	; 0x88
 800ac1a:	682b      	ldr	r3, [r5, #0]
 800ac1c:	42a2      	cmp	r2, r4
 800ac1e:	bfa8      	it	ge
 800ac20:	4622      	movge	r2, r4
 800ac22:	4601      	mov	r1, r0
 800ac24:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ac28:	4628      	mov	r0, r5
 800ac2a:	b212      	sxth	r2, r2
 800ac2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ac30:	4718      	bx	r3
 800ac32:	bd70      	pop	{r4, r5, r6, pc}

0800ac34 <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>:
 800ac34:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800ac38:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 800ac3c:	302c      	adds	r0, #44	; 0x2c
 800ac3e:	f7ff bb01 	b.w	800a244 <_ZN8touchgfx12DrawableList15setDrawableSizeEss>

0800ac42 <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>:
 800ac42:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
 800ac46:	4770      	bx	lr

0800ac48 <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>:
 800ac48:	f8a0 107e 	strh.w	r1, [r0, #126]	; 0x7e
 800ac4c:	4770      	bx	lr

0800ac4e <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>:
 800ac4e:	f8a0 1080 	strh.w	r1, [r0, #128]	; 0x80
 800ac52:	4770      	bx	lr

0800ac54 <_ZN8touchgfx10ScrollBase13stopAnimationEv>:
 800ac54:	b510      	push	{r4, lr}
 800ac56:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 800ac5a:	2b01      	cmp	r3, #1
 800ac5c:	4604      	mov	r4, r0
 800ac5e:	d10b      	bne.n	800ac78 <_ZN8touchgfx10ScrollBase13stopAnimationEv+0x24>
 800ac60:	f003 fa8a 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800ac64:	4621      	mov	r1, r4
 800ac66:	f003 fabf 	bl	800e1e8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800ac6a:	6823      	ldr	r3, [r4, #0]
 800ac6c:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 800ac70:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ac74:	4620      	mov	r0, r4
 800ac76:	4798      	blx	r3
 800ac78:	2300      	movs	r3, #0
 800ac7a:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 800ac7e:	bd10      	pop	{r4, pc}

0800ac80 <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE>:
 800ac80:	b570      	push	{r4, r5, r6, lr}
 800ac82:	4604      	mov	r4, r0
 800ac84:	460e      	mov	r6, r1
 800ac86:	f7ff ffe5 	bl	800ac54 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 800ac8a:	2302      	movs	r3, #2
 800ac8c:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 800ac90:	6823      	ldr	r3, [r4, #0]
 800ac92:	4620      	mov	r0, r4
 800ac94:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ac98:	4798      	blx	r3
 800ac9a:	6823      	ldr	r3, [r4, #0]
 800ac9c:	4605      	mov	r5, r0
 800ac9e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800aca2:	4620      	mov	r0, r4
 800aca4:	4798      	blx	r3
 800aca6:	b1f8      	cbz	r0, 800ace8 <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x68>
 800aca8:	8973      	ldrh	r3, [r6, #10]
 800acaa:	88f1      	ldrh	r1, [r6, #6]
 800acac:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 800acb0:	1a5b      	subs	r3, r3, r1
 800acb2:	f8b4 1080 	ldrh.w	r1, [r4, #128]	; 0x80
 800acb6:	b21b      	sxth	r3, r3
 800acb8:	434b      	muls	r3, r1
 800acba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800acbe:	210a      	movs	r1, #10
 800acc0:	fb93 f3f1 	sdiv	r3, r3, r1
 800acc4:	2104      	movs	r1, #4
 800acc6:	fb92 f2f1 	sdiv	r2, r2, r1
 800acca:	6821      	ldr	r1, [r4, #0]
 800accc:	4620      	mov	r0, r4
 800acce:	f8d1 60bc 	ldr.w	r6, [r1, #188]	; 0xbc
 800acd2:	b212      	sxth	r2, r2
 800acd4:	1959      	adds	r1, r3, r5
 800acd6:	47b0      	blx	r6
 800acd8:	6823      	ldr	r3, [r4, #0]
 800acda:	4601      	mov	r1, r0
 800acdc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ace0:	4620      	mov	r0, r4
 800ace2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ace6:	4718      	bx	r3
 800ace8:	89b3      	ldrh	r3, [r6, #12]
 800acea:	8931      	ldrh	r1, [r6, #8]
 800acec:	e7de      	b.n	800acac <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x2c>

0800acee <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>:
 800acee:	b538      	push	{r3, r4, r5, lr}
 800acf0:	6803      	ldr	r3, [r0, #0]
 800acf2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800acf6:	4605      	mov	r5, r0
 800acf8:	460c      	mov	r4, r1
 800acfa:	4798      	blx	r3
 800acfc:	b150      	cbz	r0, 800ad14 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 800acfe:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 800ad02:	b13b      	cbz	r3, 800ad14 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 800ad04:	4358      	muls	r0, r3
 800ad06:	fb94 f3f0 	sdiv	r3, r4, r0
 800ad0a:	fb00 4413 	mls	r4, r0, r3, r4
 800ad0e:	2c00      	cmp	r4, #0
 800ad10:	bfc8      	it	gt
 800ad12:	1a24      	subgt	r4, r4, r0
 800ad14:	4620      	mov	r0, r4
 800ad16:	bd38      	pop	{r3, r4, r5, pc}

0800ad18 <_ZN8touchgfx10ScrollBase15handleTickEventEv>:
 800ad18:	b570      	push	{r4, r5, r6, lr}
 800ad1a:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 800ad1e:	2b01      	cmp	r3, #1
 800ad20:	4604      	mov	r4, r0
 800ad22:	d149      	bne.n	800adb8 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 800ad24:	e9d4 622a 	ldrd	r6, r2, [r4, #168]	; 0xa8
 800ad28:	f8d0 00a0 	ldr.w	r0, [r0, #160]	; 0xa0
 800ad2c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800ad30:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 800ad34:	3001      	adds	r0, #1
 800ad36:	1b92      	subs	r2, r2, r6
 800ad38:	b212      	sxth	r2, r2
 800ad3a:	f8c4 00a0 	str.w	r0, [r4, #160]	; 0xa0
 800ad3e:	2100      	movs	r1, #0
 800ad40:	b280      	uxth	r0, r0
 800ad42:	47a8      	blx	r5
 800ad44:	6823      	ldr	r3, [r4, #0]
 800ad46:	1981      	adds	r1, r0, r6
 800ad48:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ad4c:	4620      	mov	r0, r4
 800ad4e:	4798      	blx	r3
 800ad50:	e9d4 2328 	ldrd	r2, r3, [r4, #160]	; 0xa0
 800ad54:	429a      	cmp	r2, r3
 800ad56:	dd2f      	ble.n	800adb8 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 800ad58:	2300      	movs	r3, #0
 800ad5a:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 800ad5e:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800ad62:	f003 fa09 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800ad66:	4621      	mov	r1, r4
 800ad68:	f003 fa3e 	bl	800e1e8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800ad6c:	6823      	ldr	r3, [r4, #0]
 800ad6e:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 800ad72:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800ad76:	4620      	mov	r0, r4
 800ad78:	f7ff ffb9 	bl	800acee <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 800ad7c:	4601      	mov	r1, r0
 800ad7e:	4620      	mov	r0, r4
 800ad80:	47a8      	blx	r5
 800ad82:	6823      	ldr	r3, [r4, #0]
 800ad84:	4620      	mov	r0, r4
 800ad86:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ad8a:	4798      	blx	r3
 800ad8c:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800ad90:	1ac0      	subs	r0, r0, r3
 800ad92:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 800ad96:	4403      	add	r3, r0
 800ad98:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 800ad9c:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 800ada0:	b150      	cbz	r0, 800adb8 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 800ada2:	6803      	ldr	r3, [r0, #0]
 800ada4:	68db      	ldr	r3, [r3, #12]
 800ada6:	4798      	blx	r3
 800ada8:	b130      	cbz	r0, 800adb8 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 800adaa:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 800adae:	6803      	ldr	r3, [r0, #0]
 800adb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800adb4:	689b      	ldr	r3, [r3, #8]
 800adb6:	4718      	bx	r3
 800adb8:	bd70      	pop	{r4, r5, r6, pc}

0800adba <_ZN8touchgfx10ScrollBase13setHorizontalEb>:
 800adba:	f081 0301 	eor.w	r3, r1, #1
 800adbe:	f880 10b9 	strb.w	r1, [r0, #185]	; 0xb9
 800adc2:	f880 30b8 	strb.w	r3, [r0, #184]	; 0xb8
 800adc6:	302c      	adds	r0, #44	; 0x2c
 800adc8:	f7ff bbf2 	b.w	800a5b0 <_ZN8touchgfx12DrawableList13setHorizontalEb>

0800adcc <_ZN8touchgfx10ScrollBaseC1Ev>:
 800adcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800adce:	4606      	mov	r6, r0
 800add0:	2500      	movs	r5, #0
 800add2:	2701      	movs	r7, #1
 800add4:	4b23      	ldr	r3, [pc, #140]	; (800ae64 <_ZN8touchgfx10ScrollBaseC1Ev+0x98>)
 800add6:	8085      	strh	r5, [r0, #4]
 800add8:	80c5      	strh	r5, [r0, #6]
 800adda:	8105      	strh	r5, [r0, #8]
 800addc:	8145      	strh	r5, [r0, #10]
 800adde:	8185      	strh	r5, [r0, #12]
 800ade0:	81c5      	strh	r5, [r0, #14]
 800ade2:	8205      	strh	r5, [r0, #16]
 800ade4:	8245      	strh	r5, [r0, #18]
 800ade6:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800adea:	61c5      	str	r5, [r0, #28]
 800adec:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 800adf0:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 800adf4:	6285      	str	r5, [r0, #40]	; 0x28
 800adf6:	f846 3b2c 	str.w	r3, [r6], #44
 800adfa:	4604      	mov	r4, r0
 800adfc:	4630      	mov	r0, r6
 800adfe:	f7ff f9fb 	bl	800a1f8 <_ZN8touchgfx12DrawableListC1Ev>
 800ae02:	f44f 2220 	mov.w	r2, #655360	; 0xa0000
 800ae06:	230a      	movs	r3, #10
 800ae08:	e9c4 231f 	strd	r2, r3, [r4, #124]	; 0x7c
 800ae0c:	4b16      	ldr	r3, [pc, #88]	; (800ae68 <_ZN8touchgfx10ScrollBaseC1Ev+0x9c>)
 800ae0e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800ae12:	231e      	movs	r3, #30
 800ae14:	f8a4 3088 	strh.w	r3, [r4, #136]	; 0x88
 800ae18:	4631      	mov	r1, r6
 800ae1a:	4620      	mov	r0, r4
 800ae1c:	67a5      	str	r5, [r4, #120]	; 0x78
 800ae1e:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 800ae22:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 800ae26:	f884 509c 	strb.w	r5, [r4, #156]	; 0x9c
 800ae2a:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 800ae2e:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 800ae32:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 800ae36:	f884 50b8 	strb.w	r5, [r4, #184]	; 0xb8
 800ae3a:	f884 50b9 	strb.w	r5, [r4, #185]	; 0xb9
 800ae3e:	f000 f8cb 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ae42:	462a      	mov	r2, r5
 800ae44:	4629      	mov	r1, r5
 800ae46:	4630      	mov	r0, r6
 800ae48:	f7f8 fd6e 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800ae4c:	4629      	mov	r1, r5
 800ae4e:	4630      	mov	r0, r6
 800ae50:	f7ff fbae 	bl	800a5b0 <_ZN8touchgfx12DrawableList13setHorizontalEb>
 800ae54:	4630      	mov	r0, r6
 800ae56:	4629      	mov	r1, r5
 800ae58:	f7ff fbb5 	bl	800a5c6 <_ZN8touchgfx12DrawableList11setCircularEb>
 800ae5c:	f884 7024 	strb.w	r7, [r4, #36]	; 0x24
 800ae60:	4620      	mov	r0, r4
 800ae62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ae64:	0801eeac 	.word	0x0801eeac
 800ae68:	0800f52d 	.word	0x0800f52d

0800ae6c <_ZN8touchgfx10ScrollBase11setCircularEb>:
 800ae6c:	302c      	adds	r0, #44	; 0x2c
 800ae6e:	f7ff bbaa 	b.w	800a5c6 <_ZN8touchgfx12DrawableList11setCircularEb>

0800ae72 <_ZN8touchgfx10ScrollBase8setWidthEs>:
 800ae72:	8101      	strh	r1, [r0, #8]
 800ae74:	302c      	adds	r0, #44	; 0x2c
 800ae76:	f7ff bb95 	b.w	800a5a4 <_ZN8touchgfx12DrawableList8setWidthEs>

0800ae7a <_ZN8touchgfx10ScrollBase9setHeightEs>:
 800ae7a:	8141      	strh	r1, [r0, #10]
 800ae7c:	302c      	adds	r0, #44	; 0x2c
 800ae7e:	f7ff bb94 	b.w	800a5aa <_ZN8touchgfx12DrawableList9setHeightEs>

0800ae82 <_ZNK8touchgfx10ScrollBase13getHorizontalEv>:
 800ae82:	302c      	adds	r0, #44	; 0x2c
 800ae84:	f7ff b99e 	b.w	800a1c4 <_ZNK8touchgfx12DrawableList13getHorizontalEv>

0800ae88 <_ZNK8touchgfx10ScrollBase11getCircularEv>:
 800ae88:	302c      	adds	r0, #44	; 0x2c
 800ae8a:	f7ff b99e 	b.w	800a1ca <_ZNK8touchgfx12DrawableList11getCircularEv>

0800ae8e <_ZNK8touchgfx10ScrollBase15getDrawableSizeEv>:
 800ae8e:	302c      	adds	r0, #44	; 0x2c
 800ae90:	f7ff b9a1 	b.w	800a1d6 <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>

0800ae94 <_ZNK8touchgfx10ScrollBase17getDrawableMarginEv>:
 800ae94:	302c      	adds	r0, #44	; 0x2c
 800ae96:	f7ff b9a4 	b.w	800a1e2 <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>

0800ae9a <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ae9a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ae9c:	2000      	movs	r0, #0
 800ae9e:	b12b      	cbz	r3, 800aeac <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aea0:	b920      	cbnz	r0, 800aeac <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aea2:	1a5a      	subs	r2, r3, r1
 800aea4:	4250      	negs	r0, r2
 800aea6:	4150      	adcs	r0, r2
 800aea8:	699b      	ldr	r3, [r3, #24]
 800aeaa:	e7f8      	b.n	800ae9e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aeac:	4770      	bx	lr

0800aeae <_ZN8touchgfx9Container9removeAllEv>:
 800aeae:	2200      	movs	r2, #0
 800aeb0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aeb2:	b123      	cbz	r3, 800aebe <_ZN8touchgfx9Container9removeAllEv+0x10>
 800aeb4:	6999      	ldr	r1, [r3, #24]
 800aeb6:	6281      	str	r1, [r0, #40]	; 0x28
 800aeb8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800aebc:	e7f8      	b.n	800aeb0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800aebe:	4770      	bx	lr

0800aec0 <_ZN8touchgfx9Container6unlinkEv>:
 800aec0:	2300      	movs	r3, #0
 800aec2:	6283      	str	r3, [r0, #40]	; 0x28
 800aec4:	4770      	bx	lr

0800aec6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800aec6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aeca:	461f      	mov	r7, r3
 800aecc:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800aed0:	460d      	mov	r5, r1
 800aed2:	4616      	mov	r6, r2
 800aed4:	b103      	cbz	r3, 800aed8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800aed6:	6038      	str	r0, [r7, #0]
 800aed8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aeda:	b314      	cbz	r4, 800af22 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800aedc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800aee0:	b1eb      	cbz	r3, 800af1e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aee2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800aee6:	428d      	cmp	r5, r1
 800aee8:	db19      	blt.n	800af1e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aeea:	8923      	ldrh	r3, [r4, #8]
 800aeec:	b289      	uxth	r1, r1
 800aeee:	440b      	add	r3, r1
 800aef0:	b21b      	sxth	r3, r3
 800aef2:	429d      	cmp	r5, r3
 800aef4:	da13      	bge.n	800af1e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aef6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800aefa:	4296      	cmp	r6, r2
 800aefc:	db0f      	blt.n	800af1e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aefe:	8963      	ldrh	r3, [r4, #10]
 800af00:	b292      	uxth	r2, r2
 800af02:	4413      	add	r3, r2
 800af04:	b21b      	sxth	r3, r3
 800af06:	429e      	cmp	r6, r3
 800af08:	da09      	bge.n	800af1e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800af0a:	6823      	ldr	r3, [r4, #0]
 800af0c:	1ab2      	subs	r2, r6, r2
 800af0e:	1a69      	subs	r1, r5, r1
 800af10:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800af14:	b212      	sxth	r2, r2
 800af16:	463b      	mov	r3, r7
 800af18:	b209      	sxth	r1, r1
 800af1a:	4620      	mov	r0, r4
 800af1c:	47c0      	blx	r8
 800af1e:	69a4      	ldr	r4, [r4, #24]
 800af20:	e7db      	b.n	800aeda <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800af22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800af26 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800af26:	2200      	movs	r2, #0
 800af28:	8002      	strh	r2, [r0, #0]
 800af2a:	8042      	strh	r2, [r0, #2]
 800af2c:	8082      	strh	r2, [r0, #4]
 800af2e:	80c2      	strh	r2, [r0, #6]
 800af30:	4770      	bx	lr

0800af32 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800af32:	b570      	push	{r4, r5, r6, lr}
 800af34:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af36:	460d      	mov	r5, r1
 800af38:	4616      	mov	r6, r2
 800af3a:	b13c      	cbz	r4, 800af4c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800af3c:	6823      	ldr	r3, [r4, #0]
 800af3e:	4620      	mov	r0, r4
 800af40:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800af42:	4632      	mov	r2, r6
 800af44:	4629      	mov	r1, r5
 800af46:	4798      	blx	r3
 800af48:	69a4      	ldr	r4, [r4, #24]
 800af4a:	e7f6      	b.n	800af3a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800af4c:	bd70      	pop	{r4, r5, r6, pc}

0800af4e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800af4e:	b538      	push	{r3, r4, r5, lr}
 800af50:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af52:	460d      	mov	r5, r1
 800af54:	b134      	cbz	r4, 800af64 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800af56:	682b      	ldr	r3, [r5, #0]
 800af58:	4621      	mov	r1, r4
 800af5a:	689b      	ldr	r3, [r3, #8]
 800af5c:	4628      	mov	r0, r5
 800af5e:	4798      	blx	r3
 800af60:	69a4      	ldr	r4, [r4, #24]
 800af62:	e7f7      	b.n	800af54 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800af64:	bd38      	pop	{r3, r4, r5, pc}

0800af66 <_ZN8touchgfx9ContainerD1Ev>:
 800af66:	4770      	bx	lr

0800af68 <_ZN8touchgfx9ContainerD0Ev>:
 800af68:	b510      	push	{r4, lr}
 800af6a:	212c      	movs	r1, #44	; 0x2c
 800af6c:	4604      	mov	r4, r0
 800af6e:	f011 f9c1 	bl	801c2f4 <_ZdlPvj>
 800af72:	4620      	mov	r0, r4
 800af74:	bd10      	pop	{r4, pc}

0800af76 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800af76:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af78:	b19b      	cbz	r3, 800afa2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800af7a:	428b      	cmp	r3, r1
 800af7c:	d109      	bne.n	800af92 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800af7e:	699a      	ldr	r2, [r3, #24]
 800af80:	2100      	movs	r1, #0
 800af82:	6159      	str	r1, [r3, #20]
 800af84:	6282      	str	r2, [r0, #40]	; 0x28
 800af86:	b902      	cbnz	r2, 800af8a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800af88:	4770      	bx	lr
 800af8a:	6199      	str	r1, [r3, #24]
 800af8c:	4770      	bx	lr
 800af8e:	4613      	mov	r3, r2
 800af90:	b13a      	cbz	r2, 800afa2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800af92:	699a      	ldr	r2, [r3, #24]
 800af94:	428a      	cmp	r2, r1
 800af96:	d1fa      	bne.n	800af8e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800af98:	698a      	ldr	r2, [r1, #24]
 800af9a:	619a      	str	r2, [r3, #24]
 800af9c:	2300      	movs	r3, #0
 800af9e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800afa2:	4770      	bx	lr

0800afa4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800afa4:	b410      	push	{r4}
 800afa6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800afa8:	4604      	mov	r4, r0
 800afaa:	b92b      	cbnz	r3, 800afb8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800afac:	6803      	ldr	r3, [r0, #0]
 800afae:	f85d 4b04 	ldr.w	r4, [sp], #4
 800afb2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800afb4:	4611      	mov	r1, r2
 800afb6:	4718      	bx	r3
 800afb8:	b941      	cbnz	r1, 800afcc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800afba:	6193      	str	r3, [r2, #24]
 800afbc:	6282      	str	r2, [r0, #40]	; 0x28
 800afbe:	6154      	str	r4, [r2, #20]
 800afc0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800afc4:	4770      	bx	lr
 800afc6:	4603      	mov	r3, r0
 800afc8:	2800      	cmp	r0, #0
 800afca:	d0f9      	beq.n	800afc0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800afcc:	4299      	cmp	r1, r3
 800afce:	6998      	ldr	r0, [r3, #24]
 800afd0:	d1f9      	bne.n	800afc6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800afd2:	6190      	str	r0, [r2, #24]
 800afd4:	618a      	str	r2, [r1, #24]
 800afd6:	e7f2      	b.n	800afbe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800afd8:	4288      	cmp	r0, r1
 800afda:	b508      	push	{r3, lr}
 800afdc:	d105      	bne.n	800afea <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800afde:	4b11      	ldr	r3, [pc, #68]	; (800b024 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800afe0:	4a11      	ldr	r2, [pc, #68]	; (800b028 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800afe2:	2123      	movs	r1, #35	; 0x23
 800afe4:	4811      	ldr	r0, [pc, #68]	; (800b02c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800afe6:	f011 f9c9 	bl	801c37c <__assert_func>
 800afea:	694b      	ldr	r3, [r1, #20]
 800afec:	b11b      	cbz	r3, 800aff6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800afee:	4b10      	ldr	r3, [pc, #64]	; (800b030 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800aff0:	4a0d      	ldr	r2, [pc, #52]	; (800b028 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800aff2:	2124      	movs	r1, #36	; 0x24
 800aff4:	e7f6      	b.n	800afe4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800aff6:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800affa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800affc:	b913      	cbnz	r3, 800b004 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800affe:	6281      	str	r1, [r0, #40]	; 0x28
 800b000:	bd08      	pop	{r3, pc}
 800b002:	4613      	mov	r3, r2
 800b004:	699a      	ldr	r2, [r3, #24]
 800b006:	b12a      	cbz	r2, 800b014 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800b008:	428b      	cmp	r3, r1
 800b00a:	d1fa      	bne.n	800b002 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800b00c:	4b09      	ldr	r3, [pc, #36]	; (800b034 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800b00e:	4a06      	ldr	r2, [pc, #24]	; (800b028 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b010:	2135      	movs	r1, #53	; 0x35
 800b012:	e7e7      	b.n	800afe4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b014:	428b      	cmp	r3, r1
 800b016:	d103      	bne.n	800b020 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800b018:	4b06      	ldr	r3, [pc, #24]	; (800b034 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800b01a:	4a03      	ldr	r2, [pc, #12]	; (800b028 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b01c:	2138      	movs	r1, #56	; 0x38
 800b01e:	e7e1      	b.n	800afe4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b020:	6199      	str	r1, [r3, #24]
 800b022:	e7ed      	b.n	800b000 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800b024:	0801ef74 	.word	0x0801ef74
 800b028:	0801f0c8 	.word	0x0801f0c8
 800b02c:	0801efa0 	.word	0x0801efa0
 800b030:	0801efd3 	.word	0x0801efd3
 800b034:	0801f009 	.word	0x0801f009

0800b038 <_ZN8touchgfx4RectaNERKS0_>:
 800b038:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b03c:	f9b1 7000 	ldrsh.w	r7, [r1]
 800b040:	888c      	ldrh	r4, [r1, #4]
 800b042:	f9b0 9000 	ldrsh.w	r9, [r0]
 800b046:	443c      	add	r4, r7
 800b048:	b2a4      	uxth	r4, r4
 800b04a:	fa0f f884 	sxth.w	r8, r4
 800b04e:	45c1      	cmp	r9, r8
 800b050:	da2f      	bge.n	800b0b2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b052:	8882      	ldrh	r2, [r0, #4]
 800b054:	444a      	add	r2, r9
 800b056:	b292      	uxth	r2, r2
 800b058:	fa0f fe82 	sxth.w	lr, r2
 800b05c:	4577      	cmp	r7, lr
 800b05e:	da28      	bge.n	800b0b2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b060:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b064:	88cb      	ldrh	r3, [r1, #6]
 800b066:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800b06a:	442b      	add	r3, r5
 800b06c:	b21b      	sxth	r3, r3
 800b06e:	429e      	cmp	r6, r3
 800b070:	da1f      	bge.n	800b0b2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b072:	88c3      	ldrh	r3, [r0, #6]
 800b074:	4433      	add	r3, r6
 800b076:	b29b      	uxth	r3, r3
 800b078:	fa0f fc83 	sxth.w	ip, r3
 800b07c:	4565      	cmp	r5, ip
 800b07e:	da18      	bge.n	800b0b2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b080:	454f      	cmp	r7, r9
 800b082:	bfb8      	it	lt
 800b084:	464f      	movlt	r7, r9
 800b086:	42b5      	cmp	r5, r6
 800b088:	bfb8      	it	lt
 800b08a:	4635      	movlt	r5, r6
 800b08c:	45f0      	cmp	r8, lr
 800b08e:	bfd8      	it	le
 800b090:	4622      	movle	r2, r4
 800b092:	1bd2      	subs	r2, r2, r7
 800b094:	8082      	strh	r2, [r0, #4]
 800b096:	884a      	ldrh	r2, [r1, #2]
 800b098:	88c9      	ldrh	r1, [r1, #6]
 800b09a:	8007      	strh	r7, [r0, #0]
 800b09c:	440a      	add	r2, r1
 800b09e:	b292      	uxth	r2, r2
 800b0a0:	b211      	sxth	r1, r2
 800b0a2:	458c      	cmp	ip, r1
 800b0a4:	bfa8      	it	ge
 800b0a6:	4613      	movge	r3, r2
 800b0a8:	1b5b      	subs	r3, r3, r5
 800b0aa:	80c3      	strh	r3, [r0, #6]
 800b0ac:	8045      	strh	r5, [r0, #2]
 800b0ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b0b2:	2300      	movs	r3, #0
 800b0b4:	8003      	strh	r3, [r0, #0]
 800b0b6:	8043      	strh	r3, [r0, #2]
 800b0b8:	8083      	strh	r3, [r0, #4]
 800b0ba:	80c3      	strh	r3, [r0, #6]
 800b0bc:	e7f7      	b.n	800b0ae <_ZN8touchgfx4RectaNERKS0_+0x76>

0800b0be <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b0be:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b0c2:	2b00      	cmp	r3, #0
 800b0c4:	dd06      	ble.n	800b0d4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800b0c6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b0ca:	2800      	cmp	r0, #0
 800b0cc:	bfcc      	ite	gt
 800b0ce:	2000      	movgt	r0, #0
 800b0d0:	2001      	movle	r0, #1
 800b0d2:	4770      	bx	lr
 800b0d4:	2001      	movs	r0, #1
 800b0d6:	4770      	bx	lr

0800b0d8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b0d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b0dc:	2300      	movs	r3, #0
 800b0de:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800b0e0:	8003      	strh	r3, [r0, #0]
 800b0e2:	4604      	mov	r4, r0
 800b0e4:	8043      	strh	r3, [r0, #2]
 800b0e6:	8083      	strh	r3, [r0, #4]
 800b0e8:	80c3      	strh	r3, [r0, #6]
 800b0ea:	2d00      	cmp	r5, #0
 800b0ec:	d040      	beq.n	800b170 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b0ee:	1d28      	adds	r0, r5, #4
 800b0f0:	f7ff ffe5 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800b0f4:	b988      	cbnz	r0, 800b11a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b0f6:	4620      	mov	r0, r4
 800b0f8:	f7ff ffe1 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800b0fc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b100:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b104:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b108:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b10c:	b138      	cbz	r0, 800b11e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b10e:	8022      	strh	r2, [r4, #0]
 800b110:	8063      	strh	r3, [r4, #2]
 800b112:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b116:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b11a:	69ad      	ldr	r5, [r5, #24]
 800b11c:	e7e5      	b.n	800b0ea <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b11e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b122:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b126:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b12a:	4290      	cmp	r0, r2
 800b12c:	4607      	mov	r7, r0
 800b12e:	bfa8      	it	ge
 800b130:	4617      	movge	r7, r2
 800b132:	4472      	add	r2, lr
 800b134:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b138:	8027      	strh	r7, [r4, #0]
 800b13a:	4299      	cmp	r1, r3
 800b13c:	460e      	mov	r6, r1
 800b13e:	4440      	add	r0, r8
 800b140:	bfa8      	it	ge
 800b142:	461e      	movge	r6, r3
 800b144:	4471      	add	r1, lr
 800b146:	4463      	add	r3, ip
 800b148:	b200      	sxth	r0, r0
 800b14a:	b212      	sxth	r2, r2
 800b14c:	b209      	sxth	r1, r1
 800b14e:	b21b      	sxth	r3, r3
 800b150:	4290      	cmp	r0, r2
 800b152:	bfac      	ite	ge
 800b154:	ebc7 0200 	rsbge	r2, r7, r0
 800b158:	ebc7 0202 	rsblt	r2, r7, r2
 800b15c:	4299      	cmp	r1, r3
 800b15e:	bfac      	ite	ge
 800b160:	ebc6 0301 	rsbge	r3, r6, r1
 800b164:	ebc6 0303 	rsblt	r3, r6, r3
 800b168:	8066      	strh	r6, [r4, #2]
 800b16a:	80a2      	strh	r2, [r4, #4]
 800b16c:	80e3      	strh	r3, [r4, #6]
 800b16e:	e7d4      	b.n	800b11a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b170:	4620      	mov	r0, r4
 800b172:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b176 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b176:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b17a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b17e:	b383      	cbz	r3, 800b1e2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b180:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b182:	b374      	cbz	r4, 800b1e2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b184:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b188:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b18c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b190:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b194:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b198:	b303      	cbz	r3, 800b1dc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b19a:	4668      	mov	r0, sp
 800b19c:	1d21      	adds	r1, r4, #4
 800b19e:	f8ad 5000 	strh.w	r5, [sp]
 800b1a2:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b1a6:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b1aa:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b1ae:	f7ff ff43 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800b1b2:	4668      	mov	r0, sp
 800b1b4:	f7ff ff83 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800b1b8:	b980      	cbnz	r0, 800b1dc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b1ba:	f8bd 3000 	ldrh.w	r3, [sp]
 800b1be:	88a2      	ldrh	r2, [r4, #4]
 800b1c0:	1a9b      	subs	r3, r3, r2
 800b1c2:	f8ad 3000 	strh.w	r3, [sp]
 800b1c6:	88e2      	ldrh	r2, [r4, #6]
 800b1c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b1cc:	1a9b      	subs	r3, r3, r2
 800b1ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b1d2:	6823      	ldr	r3, [r4, #0]
 800b1d4:	4669      	mov	r1, sp
 800b1d6:	689b      	ldr	r3, [r3, #8]
 800b1d8:	4620      	mov	r0, r4
 800b1da:	4798      	blx	r3
 800b1dc:	69a4      	ldr	r4, [r4, #24]
 800b1de:	2c00      	cmp	r4, #0
 800b1e0:	d1d8      	bne.n	800b194 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b1e2:	b002      	add	sp, #8
 800b1e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b1e8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b1e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b1ea:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b1ee:	460d      	mov	r5, r1
 800b1f0:	4616      	mov	r6, r2
 800b1f2:	b323      	cbz	r3, 800b23e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b1f4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b1f6:	b314      	cbz	r4, 800b23e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b1f8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b1fc:	b1eb      	cbz	r3, 800b23a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b1fe:	6828      	ldr	r0, [r5, #0]
 800b200:	6869      	ldr	r1, [r5, #4]
 800b202:	466b      	mov	r3, sp
 800b204:	c303      	stmia	r3!, {r0, r1}
 800b206:	4668      	mov	r0, sp
 800b208:	1d21      	adds	r1, r4, #4
 800b20a:	f7ff ff15 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800b20e:	4668      	mov	r0, sp
 800b210:	f7ff ff55 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800b214:	b988      	cbnz	r0, 800b23a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b216:	f8bd 3000 	ldrh.w	r3, [sp]
 800b21a:	88a2      	ldrh	r2, [r4, #4]
 800b21c:	1a9b      	subs	r3, r3, r2
 800b21e:	f8ad 3000 	strh.w	r3, [sp]
 800b222:	88e2      	ldrh	r2, [r4, #6]
 800b224:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b228:	1a9b      	subs	r3, r3, r2
 800b22a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b22e:	6823      	ldr	r3, [r4, #0]
 800b230:	4632      	mov	r2, r6
 800b232:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b234:	4669      	mov	r1, sp
 800b236:	4620      	mov	r0, r4
 800b238:	4798      	blx	r3
 800b23a:	69a4      	ldr	r4, [r4, #24]
 800b23c:	e7db      	b.n	800b1f6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b23e:	b002      	add	sp, #8
 800b240:	bd70      	pop	{r4, r5, r6, pc}

0800b242 <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 800b242:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 800b246:	4770      	bx	lr

0800b248 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 800b248:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 800b24c:	4770      	bx	lr

0800b24e <_ZNK8touchgfx6Slider11getMinValueEv>:
 800b24e:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800b250:	4770      	bx	lr

0800b252 <_ZNK8touchgfx6Slider11getMaxValueEv>:
 800b252:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 800b254:	4770      	bx	lr

0800b256 <_ZN8touchgfx6Slider8setValueEi>:
 800b256:	b570      	push	{r4, r5, r6, lr}
 800b258:	6803      	ldr	r3, [r0, #0]
 800b25a:	e9d3 532a 	ldrd	r5, r3, [r3, #168]	; 0xa8
 800b25e:	4604      	mov	r4, r0
 800b260:	4798      	blx	r3
 800b262:	462b      	mov	r3, r5
 800b264:	4601      	mov	r1, r0
 800b266:	4620      	mov	r0, r4
 800b268:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b26c:	4718      	bx	r3

0800b26e <_ZNK8touchgfx6Slider15valueToPositionEi>:
 800b26e:	b538      	push	{r3, r4, r5, lr}
 800b270:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 800b274:	428c      	cmp	r4, r1
 800b276:	bfa8      	it	ge
 800b278:	460c      	movge	r4, r1
 800b27a:	429c      	cmp	r4, r3
 800b27c:	bfac      	ite	ge
 800b27e:	ebc3 0404 	rsbge	r4, r3, r4
 800b282:	ebc3 0403 	rsblt	r4, r3, r3
 800b286:	6803      	ldr	r3, [r0, #0]
 800b288:	4605      	mov	r5, r0
 800b28a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800b28e:	4798      	blx	r3
 800b290:	682b      	ldr	r3, [r5, #0]
 800b292:	fb00 4404 	mla	r4, r0, r4, r4
 800b296:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b29a:	4628      	mov	r0, r5
 800b29c:	4798      	blx	r3
 800b29e:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800b2a2:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 800b2a6:	fb94 f0f0 	sdiv	r0, r4, r0
 800b2aa:	2a01      	cmp	r2, #1
 800b2ac:	bf08      	it	eq
 800b2ae:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 800b2b2:	4418      	add	r0, r3
 800b2b4:	bf04      	itt	eq
 800b2b6:	1a10      	subeq	r0, r2, r0
 800b2b8:	18c0      	addeq	r0, r0, r3
 800b2ba:	b200      	sxth	r0, r0
 800b2bc:	bd38      	pop	{r3, r4, r5, pc}

0800b2be <_ZNK8touchgfx6Slider15positionToValueEs>:
 800b2be:	b570      	push	{r4, r5, r6, lr}
 800b2c0:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 800b2c4:	428b      	cmp	r3, r1
 800b2c6:	4605      	mov	r5, r0
 800b2c8:	460c      	mov	r4, r1
 800b2ca:	d109      	bne.n	800b2e0 <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 800b2cc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b2ce:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800b2d2:	2b01      	cmp	r3, #1
 800b2d4:	bf01      	itttt	eq
 800b2d6:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 800b2d8:	1a18      	subeq	r0, r3, r0
 800b2da:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 800b2dc:	18c0      	addeq	r0, r0, r3
 800b2de:	bd70      	pop	{r4, r5, r6, pc}
 800b2e0:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 800b2e4:	428b      	cmp	r3, r1
 800b2e6:	d101      	bne.n	800b2ec <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 800b2e8:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800b2ea:	e7f0      	b.n	800b2ce <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 800b2ec:	6803      	ldr	r3, [r0, #0]
 800b2ee:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800b2f2:	4798      	blx	r3
 800b2f4:	682b      	ldr	r3, [r5, #0]
 800b2f6:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 800b2fa:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b2fe:	4606      	mov	r6, r0
 800b300:	4628      	mov	r0, r5
 800b302:	1a64      	subs	r4, r4, r1
 800b304:	4798      	blx	r3
 800b306:	682b      	ldr	r3, [r5, #0]
 800b308:	2102      	movs	r1, #2
 800b30a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800b30e:	fb96 f6f1 	sdiv	r6, r6, r1
 800b312:	fb00 6404 	mla	r4, r0, r4, r6
 800b316:	4628      	mov	r0, r5
 800b318:	4798      	blx	r3
 800b31a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800b31c:	fb94 f0f0 	sdiv	r0, r4, r0
 800b320:	4418      	add	r0, r3
 800b322:	e7d4      	b.n	800b2ce <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

0800b324 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 800b324:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 800b328:	2302      	movs	r3, #2
 800b32a:	b92a      	cbnz	r2, 800b338 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 800b32c:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 800b330:	fb90 f0f3 	sdiv	r0, r0, r3
 800b334:	b280      	uxth	r0, r0
 800b336:	4770      	bx	lr
 800b338:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 800b33c:	e7f8      	b.n	800b330 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

0800b33e <_ZN8touchgfx6Slider13setValueRangeEii>:
 800b33e:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800b340:	428b      	cmp	r3, r1
 800b342:	b410      	push	{r4}
 800b344:	db09      	blt.n	800b35a <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 800b346:	4293      	cmp	r3, r2
 800b348:	bfa8      	it	ge
 800b34a:	4613      	movge	r3, r2
 800b34c:	6804      	ldr	r4, [r0, #0]
 800b34e:	f8d4 4094 	ldr.w	r4, [r4, #148]	; 0x94
 800b352:	46a4      	mov	ip, r4
 800b354:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b358:	4760      	bx	ip
 800b35a:	460b      	mov	r3, r1
 800b35c:	e7f6      	b.n	800b34c <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

0800b35e <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 800b35e:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 800b362:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 800b366:	1a10      	subs	r0, r2, r0
 800b368:	4770      	bx	lr

0800b36a <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 800b36a:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 800b36e:	1a10      	subs	r0, r2, r0
 800b370:	4770      	bx	lr

0800b372 <_ZN8touchgfx6SliderD1Ev>:
 800b372:	4770      	bx	lr

0800b374 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 800b374:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b378:	f9b0 60ec 	ldrsh.w	r6, [r0, #236]	; 0xec
 800b37c:	428e      	cmp	r6, r1
 800b37e:	4604      	mov	r4, r0
 800b380:	bfb8      	it	lt
 800b382:	460e      	movlt	r6, r1
 800b384:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 800b388:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b38c:	428e      	cmp	r6, r1
 800b38e:	bfa8      	it	ge
 800b390:	460e      	movge	r6, r1
 800b392:	3094      	adds	r0, #148	; 0x94
 800b394:	f104 07c0 	add.w	r7, r4, #192	; 0xc0
 800b398:	fa1f f886 	uxth.w	r8, r6
 800b39c:	2b00      	cmp	r3, #0
 800b39e:	d132      	bne.n	800b406 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x92>
 800b3a0:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800b3a4:	4631      	mov	r1, r6
 800b3a6:	f7f8 fad5 	bl	8003954 <_ZN8touchgfx8Drawable6moveToEss>
 800b3aa:	4638      	mov	r0, r7
 800b3ac:	f003 fbfb 	bl	800eba6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b3b0:	6823      	ldr	r3, [r4, #0]
 800b3b2:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 800b3b6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b3ba:	4620      	mov	r0, r4
 800b3bc:	eba8 0802 	sub.w	r8, r8, r2
 800b3c0:	4798      	blx	r3
 800b3c2:	fa1f f888 	uxth.w	r8, r8
 800b3c6:	4480      	add	r8, r0
 800b3c8:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 800b3cc:	4638      	mov	r0, r7
 800b3ce:	f003 fbea 	bl	800eba6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b3d2:	6823      	ldr	r3, [r4, #0]
 800b3d4:	4631      	mov	r1, r6
 800b3d6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b3da:	4620      	mov	r0, r4
 800b3dc:	4798      	blx	r3
 800b3de:	6320      	str	r0, [r4, #48]	; 0x30
 800b3e0:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 800b3e4:	2800      	cmp	r0, #0
 800b3e6:	d03c      	beq.n	800b462 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 800b3e8:	6803      	ldr	r3, [r0, #0]
 800b3ea:	68db      	ldr	r3, [r3, #12]
 800b3ec:	4798      	blx	r3
 800b3ee:	2800      	cmp	r0, #0
 800b3f0:	d037      	beq.n	800b462 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 800b3f2:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 800b3f6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b3f8:	6803      	ldr	r3, [r0, #0]
 800b3fa:	689b      	ldr	r3, [r3, #8]
 800b3fc:	4621      	mov	r1, r4
 800b3fe:	b003      	add	sp, #12
 800b400:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b404:	4718      	bx	r3
 800b406:	4632      	mov	r2, r6
 800b408:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 800b40c:	f7f8 faa2 	bl	8003954 <_ZN8touchgfx8Drawable6moveToEss>
 800b410:	4638      	mov	r0, r7
 800b412:	f003 fbc8 	bl	800eba6 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b416:	f8b4 0042 	ldrh.w	r0, [r4, #66]	; 0x42
 800b41a:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 800b41e:	6823      	ldr	r3, [r4, #0]
 800b420:	4405      	add	r5, r0
 800b422:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b426:	4620      	mov	r0, r4
 800b428:	4798      	blx	r3
 800b42a:	b2ad      	uxth	r5, r5
 800b42c:	6823      	ldr	r3, [r4, #0]
 800b42e:	f9b4 90c4 	ldrsh.w	r9, [r4, #196]	; 0xc4
 800b432:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b436:	eba5 0508 	sub.w	r5, r5, r8
 800b43a:	1a2d      	subs	r5, r5, r0
 800b43c:	4620      	mov	r0, r4
 800b43e:	4798      	blx	r3
 800b440:	b2ad      	uxth	r5, r5
 800b442:	b22a      	sxth	r2, r5
 800b444:	4440      	add	r0, r8
 800b446:	9200      	str	r2, [sp, #0]
 800b448:	f9b4 30c8 	ldrsh.w	r3, [r4, #200]	; 0xc8
 800b44c:	b202      	sxth	r2, r0
 800b44e:	4649      	mov	r1, r9
 800b450:	4638      	mov	r0, r7
 800b452:	f7f8 fa51 	bl	80038f8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800b456:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 800b45a:	1a2d      	subs	r5, r5, r0
 800b45c:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 800b460:	e7b4      	b.n	800b3cc <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x58>
 800b462:	b003      	add	sp, #12
 800b464:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b468 <_ZN8touchgfx6SliderD0Ev>:
 800b468:	b510      	push	{r4, lr}
 800b46a:	21fc      	movs	r1, #252	; 0xfc
 800b46c:	4604      	mov	r4, r0
 800b46e:	f010 ff41 	bl	801c2f4 <_ZdlPvj>
 800b472:	4620      	mov	r0, r4
 800b474:	bd10      	pop	{r4, pc}
	...

0800b478 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 800b478:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b47c:	f8bd 8030 	ldrh.w	r8, [sp, #48]	; 0x30
 800b480:	f8bd 7034 	ldrh.w	r7, [sp, #52]	; 0x34
 800b484:	45b8      	cmp	r8, r7
 800b486:	4604      	mov	r4, r0
 800b488:	4689      	mov	r9, r1
 800b48a:	4616      	mov	r6, r2
 800b48c:	461d      	mov	r5, r3
 800b48e:	d305      	bcc.n	800b49c <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0x24>
 800b490:	4b28      	ldr	r3, [pc, #160]	; (800b534 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xbc>)
 800b492:	4a29      	ldr	r2, [pc, #164]	; (800b538 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc0>)
 800b494:	4829      	ldr	r0, [pc, #164]	; (800b53c <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc4>)
 800b496:	2143      	movs	r1, #67	; 0x43
 800b498:	f010 ff70 	bl	801c37c <__assert_func>
 800b49c:	f04f 0a00 	mov.w	sl, #0
 800b4a0:	b213      	sxth	r3, r2
 800b4a2:	fa0f fb81 	sxth.w	fp, r1
 800b4a6:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 800b4aa:	461a      	mov	r2, r3
 800b4ac:	4659      	mov	r1, fp
 800b4ae:	303c      	adds	r0, #60	; 0x3c
 800b4b0:	9301      	str	r3, [sp, #4]
 800b4b2:	f7f8 fa39 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800b4b6:	9b01      	ldr	r3, [sp, #4]
 800b4b8:	4659      	mov	r1, fp
 800b4ba:	461a      	mov	r2, r3
 800b4bc:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800b4c0:	f7f8 fa32 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800b4c4:	4652      	mov	r2, sl
 800b4c6:	4651      	mov	r1, sl
 800b4c8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800b4cc:	f7f8 fa2c 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800b4d0:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 800b4d4:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 800b4d8:	4449      	add	r1, r9
 800b4da:	b28b      	uxth	r3, r1
 800b4dc:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800b4e0:	f8a4 80ec 	strh.w	r8, [r4, #236]	; 0xec
 800b4e4:	4439      	add	r1, r7
 800b4e6:	b289      	uxth	r1, r1
 800b4e8:	428b      	cmp	r3, r1
 800b4ea:	bf88      	it	hi
 800b4ec:	b219      	sxthhi	r1, r3
 800b4ee:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 800b4f2:	f8a4 70ee 	strh.w	r7, [r4, #238]	; 0xee
 800b4f6:	441e      	add	r6, r3
 800b4f8:	f8b4 309e 	ldrh.w	r3, [r4, #158]	; 0x9e
 800b4fc:	441d      	add	r5, r3
 800b4fe:	6823      	ldr	r3, [r4, #0]
 800b500:	b2ad      	uxth	r5, r5
 800b502:	b2b6      	uxth	r6, r6
 800b504:	bf98      	it	ls
 800b506:	b209      	sxthls	r1, r1
 800b508:	4620      	mov	r0, r4
 800b50a:	42ae      	cmp	r6, r5
 800b50c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b50e:	bf8c      	ite	hi
 800b510:	b235      	sxthhi	r5, r6
 800b512:	b22d      	sxthls	r5, r5
 800b514:	4798      	blx	r3
 800b516:	6823      	ldr	r3, [r4, #0]
 800b518:	4629      	mov	r1, r5
 800b51a:	4620      	mov	r0, r4
 800b51c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b51e:	4798      	blx	r3
 800b520:	6823      	ldr	r3, [r4, #0]
 800b522:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b524:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b528:	4620      	mov	r0, r4
 800b52a:	b003      	add	sp, #12
 800b52c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b530:	4718      	bx	r3
 800b532:	bf00      	nop
 800b534:	0801f2ac 	.word	0x0801f2ac
 800b538:	0801f526 	.word	0x0801f526
 800b53c:	0801f320 	.word	0x0801f320

0800b540 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 800b540:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b544:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 800b548:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 800b54c:	42b7      	cmp	r7, r6
 800b54e:	4604      	mov	r4, r0
 800b550:	4689      	mov	r9, r1
 800b552:	4690      	mov	r8, r2
 800b554:	461d      	mov	r5, r3
 800b556:	d305      	bcc.n	800b564 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0x24>
 800b558:	4b25      	ldr	r3, [pc, #148]	; (800b5f0 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb0>)
 800b55a:	4a26      	ldr	r2, [pc, #152]	; (800b5f4 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb4>)
 800b55c:	4826      	ldr	r0, [pc, #152]	; (800b5f8 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb8>)
 800b55e:	215f      	movs	r1, #95	; 0x5f
 800b560:	f010 ff0c 	bl	801c37c <__assert_func>
 800b564:	2301      	movs	r3, #1
 800b566:	fa0f fa81 	sxth.w	sl, r1
 800b56a:	fa0f fb82 	sxth.w	fp, r2
 800b56e:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800b572:	465a      	mov	r2, fp
 800b574:	4651      	mov	r1, sl
 800b576:	303c      	adds	r0, #60	; 0x3c
 800b578:	f7f8 f9d6 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800b57c:	465a      	mov	r2, fp
 800b57e:	4651      	mov	r1, sl
 800b580:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800b584:	f7f8 f9d0 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800b588:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 800b58c:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 800b590:	4489      	add	r9, r1
 800b592:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800b596:	6823      	ldr	r3, [r4, #0]
 800b598:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 800b59c:	4429      	add	r1, r5
 800b59e:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 800b5a2:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 800b5a6:	44a8      	add	r8, r5
 800b5a8:	f8b4 509e 	ldrh.w	r5, [r4, #158]	; 0x9e
 800b5ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b5ae:	b289      	uxth	r1, r1
 800b5b0:	fa1f f989 	uxth.w	r9, r9
 800b5b4:	4435      	add	r5, r6
 800b5b6:	4589      	cmp	r9, r1
 800b5b8:	b2ad      	uxth	r5, r5
 800b5ba:	fa1f f888 	uxth.w	r8, r8
 800b5be:	bf8c      	ite	hi
 800b5c0:	fa0f f189 	sxthhi.w	r1, r9
 800b5c4:	b209      	sxthls	r1, r1
 800b5c6:	4620      	mov	r0, r4
 800b5c8:	45a8      	cmp	r8, r5
 800b5ca:	bf8c      	ite	hi
 800b5cc:	fa0f f588 	sxthhi.w	r5, r8
 800b5d0:	b22d      	sxthls	r5, r5
 800b5d2:	4798      	blx	r3
 800b5d4:	6823      	ldr	r3, [r4, #0]
 800b5d6:	4629      	mov	r1, r5
 800b5d8:	4620      	mov	r0, r4
 800b5da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b5dc:	4798      	blx	r3
 800b5de:	6823      	ldr	r3, [r4, #0]
 800b5e0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b5e2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b5e6:	4620      	mov	r0, r4
 800b5e8:	b001      	add	sp, #4
 800b5ea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5ee:	4718      	bx	r3
 800b5f0:	0801f23a 	.word	0x0801f23a
 800b5f4:	0801f4c1 	.word	0x0801f4c1
 800b5f8:	0801f320 	.word	0x0801f320

0800b5fc <_ZN8touchgfx6Slider13setValueRangeEiii>:
 800b5fc:	4291      	cmp	r1, r2
 800b5fe:	b510      	push	{r4, lr}
 800b600:	db06      	blt.n	800b610 <_ZN8touchgfx6Slider13setValueRangeEiii+0x14>
 800b602:	4b08      	ldr	r3, [pc, #32]	; (800b624 <_ZN8touchgfx6Slider13setValueRangeEiii+0x28>)
 800b604:	4a08      	ldr	r2, [pc, #32]	; (800b628 <_ZN8touchgfx6Slider13setValueRangeEiii+0x2c>)
 800b606:	4809      	ldr	r0, [pc, #36]	; (800b62c <_ZN8touchgfx6Slider13setValueRangeEiii+0x30>)
 800b608:	f240 1107 	movw	r1, #263	; 0x107
 800b60c:	f010 feb6 	bl	801c37c <__assert_func>
 800b610:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 800b614:	6802      	ldr	r2, [r0, #0]
 800b616:	4619      	mov	r1, r3
 800b618:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 800b61c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b620:	4710      	bx	r2
 800b622:	bf00      	nop
 800b624:	0801f1e2 	.word	0x0801f1e2
 800b628:	0801f485 	.word	0x0801f485
 800b62c:	0801f320 	.word	0x0801f320

0800b630 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 800b630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b634:	790b      	ldrb	r3, [r1, #4]
 800b636:	4604      	mov	r4, r0
 800b638:	460d      	mov	r5, r1
 800b63a:	b323      	cbz	r3, 800b686 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 800b63c:	2b01      	cmp	r3, #1
 800b63e:	d135      	bne.n	800b6ac <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800b640:	6823      	ldr	r3, [r4, #0]
 800b642:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b646:	f8d3 70a8 	ldr.w	r7, [r3, #168]	; 0xa8
 800b64a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b64e:	2a00      	cmp	r2, #0
 800b650:	d12a      	bne.n	800b6a8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 800b652:	88ee      	ldrh	r6, [r5, #6]
 800b654:	4620      	mov	r0, r4
 800b656:	4798      	blx	r3
 800b658:	1a31      	subs	r1, r6, r0
 800b65a:	b209      	sxth	r1, r1
 800b65c:	4620      	mov	r0, r4
 800b65e:	47b8      	blx	r7
 800b660:	792b      	ldrb	r3, [r5, #4]
 800b662:	2b01      	cmp	r3, #1
 800b664:	d122      	bne.n	800b6ac <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800b666:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 800b66a:	b1f8      	cbz	r0, 800b6ac <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800b66c:	6803      	ldr	r3, [r0, #0]
 800b66e:	68db      	ldr	r3, [r3, #12]
 800b670:	4798      	blx	r3
 800b672:	b1d8      	cbz	r0, 800b6ac <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800b674:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 800b678:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b67a:	6803      	ldr	r3, [r0, #0]
 800b67c:	4621      	mov	r1, r4
 800b67e:	689b      	ldr	r3, [r3, #8]
 800b680:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b684:	4718      	bx	r3
 800b686:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 800b68a:	2800      	cmp	r0, #0
 800b68c:	d0d8      	beq.n	800b640 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800b68e:	6803      	ldr	r3, [r0, #0]
 800b690:	68db      	ldr	r3, [r3, #12]
 800b692:	4798      	blx	r3
 800b694:	2800      	cmp	r0, #0
 800b696:	d0d3      	beq.n	800b640 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800b698:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 800b69c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b69e:	6803      	ldr	r3, [r0, #0]
 800b6a0:	4621      	mov	r1, r4
 800b6a2:	689b      	ldr	r3, [r3, #8]
 800b6a4:	4798      	blx	r3
 800b6a6:	e7cb      	b.n	800b640 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800b6a8:	892e      	ldrh	r6, [r5, #8]
 800b6aa:	e7d3      	b.n	800b654 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 800b6ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b6b0 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 800b6b0:	b570      	push	{r4, r5, r6, lr}
 800b6b2:	6803      	ldr	r3, [r0, #0]
 800b6b4:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 800b6b8:	f8d3 60a8 	ldr.w	r6, [r3, #168]	; 0xa8
 800b6bc:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b6c0:	4604      	mov	r4, r0
 800b6c2:	b942      	cbnz	r2, 800b6d6 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 800b6c4:	894d      	ldrh	r5, [r1, #10]
 800b6c6:	4798      	blx	r3
 800b6c8:	1a29      	subs	r1, r5, r0
 800b6ca:	4633      	mov	r3, r6
 800b6cc:	4620      	mov	r0, r4
 800b6ce:	b209      	sxth	r1, r1
 800b6d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b6d4:	4718      	bx	r3
 800b6d6:	898d      	ldrh	r5, [r1, #12]
 800b6d8:	e7f5      	b.n	800b6c6 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>
	...

0800b6dc <_ZN8touchgfx9ContainerC1Ev>:
 800b6dc:	2101      	movs	r1, #1
 800b6de:	2200      	movs	r2, #0
 800b6e0:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b6e4:	4908      	ldr	r1, [pc, #32]	; (800b708 <_ZN8touchgfx9ContainerC1Ev+0x2c>)
 800b6e6:	8082      	strh	r2, [r0, #4]
 800b6e8:	80c2      	strh	r2, [r0, #6]
 800b6ea:	8102      	strh	r2, [r0, #8]
 800b6ec:	8142      	strh	r2, [r0, #10]
 800b6ee:	8182      	strh	r2, [r0, #12]
 800b6f0:	81c2      	strh	r2, [r0, #14]
 800b6f2:	8202      	strh	r2, [r0, #16]
 800b6f4:	8242      	strh	r2, [r0, #18]
 800b6f6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b6fa:	61c2      	str	r2, [r0, #28]
 800b6fc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b700:	6001      	str	r1, [r0, #0]
 800b702:	6282      	str	r2, [r0, #40]	; 0x28
 800b704:	4770      	bx	lr
 800b706:	bf00      	nop
 800b708:	0801f044 	.word	0x0801f044

0800b70c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 800b70c:	b510      	push	{r4, lr}
 800b70e:	2300      	movs	r3, #0
 800b710:	8083      	strh	r3, [r0, #4]
 800b712:	80c3      	strh	r3, [r0, #6]
 800b714:	8103      	strh	r3, [r0, #8]
 800b716:	8143      	strh	r3, [r0, #10]
 800b718:	8183      	strh	r3, [r0, #12]
 800b71a:	81c3      	strh	r3, [r0, #14]
 800b71c:	8203      	strh	r3, [r0, #16]
 800b71e:	8243      	strh	r3, [r0, #18]
 800b720:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800b724:	61c3      	str	r3, [r0, #28]
 800b726:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800b72a:	2301      	movs	r3, #1
 800b72c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 800b730:	4b05      	ldr	r3, [pc, #20]	; (800b748 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x3c>)
 800b732:	6003      	str	r3, [r0, #0]
 800b734:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b738:	4604      	mov	r4, r0
 800b73a:	84c3      	strh	r3, [r0, #38]	; 0x26
 800b73c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800b740:	f001 fcc1 	bl	800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b744:	4620      	mov	r0, r4
 800b746:	bd10      	pop	{r4, pc}
 800b748:	0801ffb8 	.word	0x0801ffb8

0800b74c <_ZN8touchgfx6SliderC1Ev>:
 800b74c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b750:	ae02      	add	r6, sp, #8
 800b752:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800b756:	4604      	mov	r4, r0
 800b758:	f7ff ffc0 	bl	800b6dc <_ZN8touchgfx9ContainerC1Ev>
 800b75c:	f826 7d04 	strh.w	r7, [r6, #-4]!
 800b760:	4b23      	ldr	r3, [pc, #140]	; (800b7f0 <_ZN8touchgfx6SliderC1Ev+0xa4>)
 800b762:	6023      	str	r3, [r4, #0]
 800b764:	2500      	movs	r5, #0
 800b766:	f04f 0b01 	mov.w	fp, #1
 800b76a:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 800b76e:	4631      	mov	r1, r6
 800b770:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 800b774:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 800b778:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 800b77c:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 800b780:	4648      	mov	r0, r9
 800b782:	f7ff ffc3 	bl	800b70c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800b786:	f104 0894 	add.w	r8, r4, #148	; 0x94
 800b78a:	4631      	mov	r1, r6
 800b78c:	4650      	mov	r0, sl
 800b78e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b792:	f7ff ffbb 	bl	800b70c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800b796:	4631      	mov	r1, r6
 800b798:	4640      	mov	r0, r8
 800b79a:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 800b79e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b7a2:	f7ff ffb3 	bl	800b70c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800b7a6:	4630      	mov	r0, r6
 800b7a8:	f7ff ff98 	bl	800b6dc <_ZN8touchgfx9ContainerC1Ev>
 800b7ac:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800b7b0:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 800b7b4:	4651      	mov	r1, sl
 800b7b6:	4630      	mov	r0, r6
 800b7b8:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 800b7bc:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 800b7c0:	f7ff fc0a 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b7c4:	4649      	mov	r1, r9
 800b7c6:	4620      	mov	r0, r4
 800b7c8:	f7ff fc06 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b7cc:	4631      	mov	r1, r6
 800b7ce:	4620      	mov	r0, r4
 800b7d0:	f7ff fc02 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b7d4:	4641      	mov	r1, r8
 800b7d6:	4620      	mov	r0, r4
 800b7d8:	f7ff fbfe 	bl	800afd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b7dc:	4620      	mov	r0, r4
 800b7de:	2264      	movs	r2, #100	; 0x64
 800b7e0:	4629      	mov	r1, r5
 800b7e2:	f7ff fdac 	bl	800b33e <_ZN8touchgfx6Slider13setValueRangeEii>
 800b7e6:	4620      	mov	r0, r4
 800b7e8:	b003      	add	sp, #12
 800b7ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7ee:	bf00      	nop
 800b7f0:	0801f358 	.word	0x0801f358

0800b7f4 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 800b7f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7f8:	4604      	mov	r4, r0
 800b7fa:	4608      	mov	r0, r1
 800b7fc:	4615      	mov	r5, r2
 800b7fe:	460e      	mov	r6, r1
 800b800:	461f      	mov	r7, r3
 800b802:	f005 f8d5 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b806:	4680      	mov	r8, r0
 800b808:	4628      	mov	r0, r5
 800b80a:	f005 f8d1 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b80e:	4580      	cmp	r8, r0
 800b810:	d005      	beq.n	800b81e <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x2a>
 800b812:	4b14      	ldr	r3, [pc, #80]	; (800b864 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x70>)
 800b814:	4a14      	ldr	r2, [pc, #80]	; (800b868 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x74>)
 800b816:	4815      	ldr	r0, [pc, #84]	; (800b86c <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x78>)
 800b818:	2133      	movs	r1, #51	; 0x33
 800b81a:	f010 fdaf 	bl	801c37c <__assert_func>
 800b81e:	4630      	mov	r0, r6
 800b820:	f005 f900 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b824:	4680      	mov	r8, r0
 800b826:	4628      	mov	r0, r5
 800b828:	f005 f8fc 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b82c:	4580      	cmp	r8, r0
 800b82e:	d1f0      	bne.n	800b812 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x1e>
 800b830:	4631      	mov	r1, r6
 800b832:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 800b836:	f001 fc46 	bl	800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b83a:	4629      	mov	r1, r5
 800b83c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800b840:	f001 fc41 	bl	800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b844:	4639      	mov	r1, r7
 800b846:	f104 0094 	add.w	r0, r4, #148	; 0x94
 800b84a:	f001 fc3c 	bl	800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b84e:	f8b4 3070 	ldrh.w	r3, [r4, #112]	; 0x70
 800b852:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800b856:	f8b4 3072 	ldrh.w	r3, [r4, #114]	; 0x72
 800b85a:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800b85e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b862:	bf00      	nop
 800b864:	0801f103 	.word	0x0801f103
 800b868:	0801f418 	.word	0x0801f418
 800b86c:	0801f320 	.word	0x0801f320

0800b870 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b870:	b513      	push	{r0, r1, r4, lr}
 800b872:	6803      	ldr	r3, [r0, #0]
 800b874:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 800b878:	2300      	movs	r3, #0
 800b87a:	e9cd 3300 	strd	r3, r3, [sp]
 800b87e:	466b      	mov	r3, sp
 800b880:	47a0      	blx	r4
 800b882:	b002      	add	sp, #8
 800b884:	bd10      	pop	{r4, pc}

0800b886 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b886:	2301      	movs	r3, #1
 800b888:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b88c:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b890:	4770      	bx	lr

0800b892 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b892:	2301      	movs	r3, #1
 800b894:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b898:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b89c:	4770      	bx	lr

0800b89e <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b89e:	6843      	ldr	r3, [r0, #4]
 800b8a0:	2201      	movs	r2, #1
 800b8a2:	725a      	strb	r2, [r3, #9]
 800b8a4:	6840      	ldr	r0, [r0, #4]
 800b8a6:	6803      	ldr	r3, [r0, #0]
 800b8a8:	691b      	ldr	r3, [r3, #16]
 800b8aa:	4718      	bx	r3

0800b8ac <_ZN8touchgfx3HAL8flushDMAEv>:
 800b8ac:	6840      	ldr	r0, [r0, #4]
 800b8ae:	6803      	ldr	r3, [r0, #0]
 800b8b0:	689b      	ldr	r3, [r3, #8]
 800b8b2:	4718      	bx	r3

0800b8b4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b8b4:	4b04      	ldr	r3, [pc, #16]	; (800b8c8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b8b6:	781b      	ldrb	r3, [r3, #0]
 800b8b8:	b123      	cbz	r3, 800b8c4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b8ba:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b8be:	f080 0001 	eor.w	r0, r0, #1
 800b8c2:	4770      	bx	lr
 800b8c4:	2001      	movs	r0, #1
 800b8c6:	4770      	bx	lr
 800b8c8:	200124b6 	.word	0x200124b6

0800b8cc <_ZN8touchgfx3HAL8endFrameEv>:
 800b8cc:	b510      	push	{r4, lr}
 800b8ce:	4604      	mov	r4, r0
 800b8d0:	6840      	ldr	r0, [r0, #4]
 800b8d2:	6803      	ldr	r3, [r0, #0]
 800b8d4:	689b      	ldr	r3, [r3, #8]
 800b8d6:	4798      	blx	r3
 800b8d8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b8dc:	b113      	cbz	r3, 800b8e4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b8de:	2301      	movs	r3, #1
 800b8e0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b8e4:	bd10      	pop	{r4, pc}
	...

0800b8e8 <_ZN8touchgfx3HAL4tickEv>:
 800b8e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b8ea:	6803      	ldr	r3, [r0, #0]
 800b8ec:	4d5c      	ldr	r5, [pc, #368]	; (800ba60 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b8ee:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800b8f2:	4604      	mov	r4, r0
 800b8f4:	4798      	blx	r3
 800b8f6:	2800      	cmp	r0, #0
 800b8f8:	f000 8097 	beq.w	800ba2a <_ZN8touchgfx3HAL4tickEv+0x142>
 800b8fc:	2001      	movs	r0, #1
 800b8fe:	f7f5 fb11 	bl	8000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b902:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b906:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b90a:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b90e:	2600      	movs	r6, #0
 800b910:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b914:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b918:	b133      	cbz	r3, 800b928 <_ZN8touchgfx3HAL4tickEv+0x40>
 800b91a:	6823      	ldr	r3, [r4, #0]
 800b91c:	4620      	mov	r0, r4
 800b91e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b922:	4798      	blx	r3
 800b924:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b928:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b92c:	6862      	ldr	r2, [r4, #4]
 800b92e:	f083 0301 	eor.w	r3, r3, #1
 800b932:	7253      	strb	r3, [r2, #9]
 800b934:	2601      	movs	r6, #1
 800b936:	702e      	strb	r6, [r5, #0]
 800b938:	f002 fc1e 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800b93c:	6803      	ldr	r3, [r0, #0]
 800b93e:	4631      	mov	r1, r6
 800b940:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b942:	4798      	blx	r3
 800b944:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b948:	b90b      	cbnz	r3, 800b94e <_ZN8touchgfx3HAL4tickEv+0x66>
 800b94a:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b94e:	f002 fc13 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800b952:	6803      	ldr	r3, [r0, #0]
 800b954:	695b      	ldr	r3, [r3, #20]
 800b956:	4798      	blx	r3
 800b958:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b95a:	6803      	ldr	r3, [r0, #0]
 800b95c:	691b      	ldr	r3, [r3, #16]
 800b95e:	4798      	blx	r3
 800b960:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b964:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b968:	3b01      	subs	r3, #1
 800b96a:	b2db      	uxtb	r3, r3
 800b96c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b970:	b10a      	cbz	r2, 800b976 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800b972:	2b00      	cmp	r3, #0
 800b974:	d1eb      	bne.n	800b94e <_ZN8touchgfx3HAL4tickEv+0x66>
 800b976:	4a3b      	ldr	r2, [pc, #236]	; (800ba64 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b978:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b97c:	7813      	ldrb	r3, [r2, #0]
 800b97e:	3301      	adds	r3, #1
 800b980:	b25b      	sxtb	r3, r3
 800b982:	4299      	cmp	r1, r3
 800b984:	7013      	strb	r3, [r2, #0]
 800b986:	dc10      	bgt.n	800b9aa <_ZN8touchgfx3HAL4tickEv+0xc2>
 800b988:	68e0      	ldr	r0, [r4, #12]
 800b98a:	2300      	movs	r3, #0
 800b98c:	7013      	strb	r3, [r2, #0]
 800b98e:	6803      	ldr	r3, [r0, #0]
 800b990:	aa03      	add	r2, sp, #12
 800b992:	68db      	ldr	r3, [r3, #12]
 800b994:	a902      	add	r1, sp, #8
 800b996:	4798      	blx	r3
 800b998:	6823      	ldr	r3, [r4, #0]
 800b99a:	2800      	cmp	r0, #0
 800b99c:	d051      	beq.n	800ba42 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800b99e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b9a2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b9a6:	4620      	mov	r0, r4
 800b9a8:	4798      	blx	r3
 800b9aa:	6960      	ldr	r0, [r4, #20]
 800b9ac:	2300      	movs	r3, #0
 800b9ae:	f88d 3007 	strb.w	r3, [sp, #7]
 800b9b2:	b158      	cbz	r0, 800b9cc <_ZN8touchgfx3HAL4tickEv+0xe4>
 800b9b4:	6803      	ldr	r3, [r0, #0]
 800b9b6:	f10d 0107 	add.w	r1, sp, #7
 800b9ba:	68db      	ldr	r3, [r3, #12]
 800b9bc:	4798      	blx	r3
 800b9be:	b128      	cbz	r0, 800b9cc <_ZN8touchgfx3HAL4tickEv+0xe4>
 800b9c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b9c2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b9c6:	6803      	ldr	r3, [r0, #0]
 800b9c8:	68db      	ldr	r3, [r3, #12]
 800b9ca:	4798      	blx	r3
 800b9cc:	f104 001c 	add.w	r0, r4, #28
 800b9d0:	f010 fbae 	bl	801c130 <_ZN8touchgfx8Gestures4tickEv>
 800b9d4:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b9d8:	b30b      	cbz	r3, 800ba1e <_ZN8touchgfx3HAL4tickEv+0x136>
 800b9da:	6920      	ldr	r0, [r4, #16]
 800b9dc:	6803      	ldr	r3, [r0, #0]
 800b9de:	691b      	ldr	r3, [r3, #16]
 800b9e0:	4798      	blx	r3
 800b9e2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b9e4:	4606      	mov	r6, r0
 800b9e6:	b903      	cbnz	r3, 800b9ea <_ZN8touchgfx3HAL4tickEv+0x102>
 800b9e8:	6720      	str	r0, [r4, #112]	; 0x70
 800b9ea:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b9ec:	4a1e      	ldr	r2, [pc, #120]	; (800ba68 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800b9ee:	1af3      	subs	r3, r6, r3
 800b9f0:	4293      	cmp	r3, r2
 800b9f2:	d914      	bls.n	800ba1e <_ZN8touchgfx3HAL4tickEv+0x136>
 800b9f4:	6920      	ldr	r0, [r4, #16]
 800b9f6:	6803      	ldr	r3, [r0, #0]
 800b9f8:	699b      	ldr	r3, [r3, #24]
 800b9fa:	4798      	blx	r3
 800b9fc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b9fe:	2264      	movs	r2, #100	; 0x64
 800ba00:	1af3      	subs	r3, r6, r3
 800ba02:	fbb3 f3f2 	udiv	r3, r3, r2
 800ba06:	fbb0 f0f3 	udiv	r0, r0, r3
 800ba0a:	2800      	cmp	r0, #0
 800ba0c:	dc1e      	bgt.n	800ba4c <_ZN8touchgfx3HAL4tickEv+0x164>
 800ba0e:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800ba12:	6920      	ldr	r0, [r4, #16]
 800ba14:	6803      	ldr	r3, [r0, #0]
 800ba16:	2100      	movs	r1, #0
 800ba18:	69db      	ldr	r3, [r3, #28]
 800ba1a:	4798      	blx	r3
 800ba1c:	6726      	str	r6, [r4, #112]	; 0x70
 800ba1e:	f002 fbab 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800ba22:	6803      	ldr	r3, [r0, #0]
 800ba24:	2100      	movs	r1, #0
 800ba26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ba28:	4798      	blx	r3
 800ba2a:	6823      	ldr	r3, [r4, #0]
 800ba2c:	4620      	mov	r0, r4
 800ba2e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800ba32:	4798      	blx	r3
 800ba34:	2001      	movs	r0, #1
 800ba36:	f7f5 fa76 	bl	8000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ba3a:	2300      	movs	r3, #0
 800ba3c:	702b      	strb	r3, [r5, #0]
 800ba3e:	b004      	add	sp, #16
 800ba40:	bd70      	pop	{r4, r5, r6, pc}
 800ba42:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800ba46:	4620      	mov	r0, r4
 800ba48:	4798      	blx	r3
 800ba4a:	e7ae      	b.n	800b9aa <_ZN8touchgfx3HAL4tickEv+0xc2>
 800ba4c:	2863      	cmp	r0, #99	; 0x63
 800ba4e:	bfcb      	itete	gt
 800ba50:	2300      	movgt	r3, #0
 800ba52:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800ba56:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800ba5a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800ba5e:	e7d8      	b.n	800ba12 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800ba60:	200124bc 	.word	0x200124bc
 800ba64:	200124bd 	.word	0x200124bd
 800ba68:	05f5e100 	.word	0x05f5e100

0800ba6c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ba6c:	f7f5 bb84 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ba70 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ba70:	6581      	str	r1, [r0, #88]	; 0x58
 800ba72:	301c      	adds	r0, #28
 800ba74:	f010 bb5a 	b.w	801c12c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ba78 <_ZN8touchgfx3HAL5touchEll>:
 800ba78:	b530      	push	{r4, r5, lr}
 800ba7a:	b087      	sub	sp, #28
 800ba7c:	4604      	mov	r4, r0
 800ba7e:	a804      	add	r0, sp, #16
 800ba80:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ba84:	f002 f928 	bl	800dcd8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ba88:	9b04      	ldr	r3, [sp, #16]
 800ba8a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ba8e:	a906      	add	r1, sp, #24
 800ba90:	9b05      	ldr	r3, [sp, #20]
 800ba92:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ba96:	a803      	add	r0, sp, #12
 800ba98:	f002 f96c 	bl	800dd74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ba9c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800baa0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800baa4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800baa8:	f104 001c 	add.w	r0, r4, #28
 800baac:	b189      	cbz	r1, 800bad2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800baae:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800bab2:	9300      	str	r3, [sp, #0]
 800bab4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800bab8:	4613      	mov	r3, r2
 800baba:	462a      	mov	r2, r5
 800babc:	f010 fb46 	bl	801c14c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800bac0:	b128      	cbz	r0, 800bace <_ZN8touchgfx3HAL5touchEll+0x56>
 800bac2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800bac6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800bac8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800bacc:	6623      	str	r3, [r4, #96]	; 0x60
 800bace:	b007      	add	sp, #28
 800bad0:	bd30      	pop	{r4, r5, pc}
 800bad2:	f010 fb7f 	bl	801c1d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800bad6:	2301      	movs	r3, #1
 800bad8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800badc:	e7f1      	b.n	800bac2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800bade <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800bade:	b570      	push	{r4, r5, r6, lr}
 800bae0:	2b00      	cmp	r3, #0
 800bae2:	d050      	beq.n	800bb86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800bae4:	ea81 0002 	eor.w	r0, r1, r2
 800bae8:	07c6      	lsls	r6, r0, #31
 800baea:	d508      	bpl.n	800bafe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800baec:	3a01      	subs	r2, #1
 800baee:	18cc      	adds	r4, r1, r3
 800baf0:	42a1      	cmp	r1, r4
 800baf2:	d048      	beq.n	800bb86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800baf4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800baf8:	f801 0b01 	strb.w	r0, [r1], #1
 800bafc:	e7f8      	b.n	800baf0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800bafe:	07d5      	lsls	r5, r2, #31
 800bb00:	bf42      	ittt	mi
 800bb02:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800bb06:	f801 0b01 	strbmi.w	r0, [r1], #1
 800bb0a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800bb0e:	2b01      	cmp	r3, #1
 800bb10:	d915      	bls.n	800bb3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800bb12:	ea82 0001 	eor.w	r0, r2, r1
 800bb16:	0784      	lsls	r4, r0, #30
 800bb18:	d02d      	beq.n	800bb76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800bb1a:	1e94      	subs	r4, r2, #2
 800bb1c:	4608      	mov	r0, r1
 800bb1e:	18ce      	adds	r6, r1, r3
 800bb20:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800bb24:	f820 5b02 	strh.w	r5, [r0], #2
 800bb28:	1a35      	subs	r5, r6, r0
 800bb2a:	2d01      	cmp	r5, #1
 800bb2c:	d8f8      	bhi.n	800bb20 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800bb2e:	1e98      	subs	r0, r3, #2
 800bb30:	f020 0001 	bic.w	r0, r0, #1
 800bb34:	3002      	adds	r0, #2
 800bb36:	4401      	add	r1, r0
 800bb38:	4402      	add	r2, r0
 800bb3a:	f003 0301 	and.w	r3, r3, #1
 800bb3e:	1f14      	subs	r4, r2, #4
 800bb40:	4608      	mov	r0, r1
 800bb42:	18ce      	adds	r6, r1, r3
 800bb44:	1a35      	subs	r5, r6, r0
 800bb46:	2d03      	cmp	r5, #3
 800bb48:	d810      	bhi.n	800bb6c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800bb4a:	089c      	lsrs	r4, r3, #2
 800bb4c:	00a0      	lsls	r0, r4, #2
 800bb4e:	4401      	add	r1, r0
 800bb50:	3801      	subs	r0, #1
 800bb52:	4402      	add	r2, r0
 800bb54:	f06f 0003 	mvn.w	r0, #3
 800bb58:	fb00 3404 	mla	r4, r0, r4, r3
 800bb5c:	440c      	add	r4, r1
 800bb5e:	42a1      	cmp	r1, r4
 800bb60:	d011      	beq.n	800bb86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800bb62:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800bb66:	f801 3b01 	strb.w	r3, [r1], #1
 800bb6a:	e7f8      	b.n	800bb5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800bb6c:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800bb70:	f840 5b04 	str.w	r5, [r0], #4
 800bb74:	e7e6      	b.n	800bb44 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800bb76:	0790      	lsls	r0, r2, #30
 800bb78:	d0e1      	beq.n	800bb3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800bb7a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800bb7e:	f821 0b02 	strh.w	r0, [r1], #2
 800bb82:	3b02      	subs	r3, #2
 800bb84:	e7db      	b.n	800bb3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800bb86:	2001      	movs	r0, #1
 800bb88:	bd70      	pop	{r4, r5, r6, pc}

0800bb8a <_ZN8touchgfx3HAL7noTouchEv>:
 800bb8a:	b510      	push	{r4, lr}
 800bb8c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800bb90:	4604      	mov	r4, r0
 800bb92:	b153      	cbz	r3, 800bbaa <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800bb94:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800bb98:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800bb9c:	2101      	movs	r1, #1
 800bb9e:	301c      	adds	r0, #28
 800bba0:	f010 fb18 	bl	801c1d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800bba4:	2300      	movs	r3, #0
 800bba6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800bbaa:	bd10      	pop	{r4, pc}

0800bbac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800bbac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bbb0:	4605      	mov	r5, r0
 800bbb2:	6980      	ldr	r0, [r0, #24]
 800bbb4:	b085      	sub	sp, #20
 800bbb6:	460f      	mov	r7, r1
 800bbb8:	4690      	mov	r8, r2
 800bbba:	4699      	mov	r9, r3
 800bbbc:	b930      	cbnz	r0, 800bbcc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800bbbe:	4b1f      	ldr	r3, [pc, #124]	; (800bc3c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800bbc0:	4a1f      	ldr	r2, [pc, #124]	; (800bc40 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800bbc2:	f240 112f 	movw	r1, #303	; 0x12f
 800bbc6:	481f      	ldr	r0, [pc, #124]	; (800bc44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800bbc8:	f010 fbd8 	bl	801c37c <__assert_func>
 800bbcc:	ac04      	add	r4, sp, #16
 800bbce:	2600      	movs	r6, #0
 800bbd0:	f844 6d04 	str.w	r6, [r4, #-4]!
 800bbd4:	6806      	ldr	r6, [r0, #0]
 800bbd6:	9401      	str	r4, [sp, #4]
 800bbd8:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800bbdc:	9400      	str	r4, [sp, #0]
 800bbde:	6834      	ldr	r4, [r6, #0]
 800bbe0:	47a0      	blx	r4
 800bbe2:	4c19      	ldr	r4, [pc, #100]	; (800bc48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800bbe4:	4606      	mov	r6, r0
 800bbe6:	f8a4 9000 	strh.w	r9, [r4]
 800bbea:	f7f5 fb8b 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800bbee:	6803      	ldr	r3, [r0, #0]
 800bbf0:	6a1b      	ldr	r3, [r3, #32]
 800bbf2:	4798      	blx	r3
 800bbf4:	280c      	cmp	r0, #12
 800bbf6:	d80f      	bhi.n	800bc18 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800bbf8:	e8df f000 	tbb	[pc, r0]
 800bbfc:	1b1b1207 	.word	0x1b1b1207
 800bc00:	1b1b1b1b 	.word	0x1b1b1b1b
 800bc04:	1b1b1b1b 	.word	0x1b1b1b1b
 800bc08:	1b          	.byte	0x1b
 800bc09:	00          	.byte	0x00
 800bc0a:	8823      	ldrh	r3, [r4, #0]
 800bc0c:	fb08 7203 	mla	r2, r8, r3, r7
 800bc10:	9b03      	ldr	r3, [sp, #12]
 800bc12:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800bc16:	63eb      	str	r3, [r5, #60]	; 0x3c
 800bc18:	4630      	mov	r0, r6
 800bc1a:	b005      	add	sp, #20
 800bc1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc20:	8822      	ldrh	r2, [r4, #0]
 800bc22:	9b03      	ldr	r3, [sp, #12]
 800bc24:	fb08 7202 	mla	r2, r8, r2, r7
 800bc28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800bc2c:	1a9a      	subs	r2, r3, r2
 800bc2e:	63ea      	str	r2, [r5, #60]	; 0x3c
 800bc30:	e7f2      	b.n	800bc18 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800bc32:	4b06      	ldr	r3, [pc, #24]	; (800bc4c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800bc34:	4a02      	ldr	r2, [pc, #8]	; (800bc40 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800bc36:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 800bc3a:	e7c4      	b.n	800bbc6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800bc3c:	0801f5fb 	.word	0x0801f5fb
 800bc40:	0801f855 	.word	0x0801f855
 800bc44:	0801f640 	.word	0x0801f640
 800bc48:	200124b2 	.word	0x200124b2
 800bc4c:	0801f666 	.word	0x0801f666

0800bc50 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800bc50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc54:	4698      	mov	r8, r3
 800bc56:	6803      	ldr	r3, [r0, #0]
 800bc58:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800bc5a:	4b0f      	ldr	r3, [pc, #60]	; (800bc98 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800bc5c:	b087      	sub	sp, #28
 800bc5e:	f8b3 9000 	ldrh.w	r9, [r3]
 800bc62:	460e      	mov	r6, r1
 800bc64:	4617      	mov	r7, r2
 800bc66:	4604      	mov	r4, r0
 800bc68:	f7f5 fb4c 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800bc6c:	6803      	ldr	r3, [r0, #0]
 800bc6e:	6a1b      	ldr	r3, [r3, #32]
 800bc70:	4798      	blx	r3
 800bc72:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800bc76:	9302      	str	r3, [sp, #8]
 800bc78:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800bc7c:	9301      	str	r3, [sp, #4]
 800bc7e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800bc82:	9300      	str	r3, [sp, #0]
 800bc84:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800bc88:	4643      	mov	r3, r8
 800bc8a:	463a      	mov	r2, r7
 800bc8c:	4631      	mov	r1, r6
 800bc8e:	4620      	mov	r0, r4
 800bc90:	47a8      	blx	r5
 800bc92:	b007      	add	sp, #28
 800bc94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc98:	200124b2 	.word	0x200124b2

0800bc9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800bc9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bca0:	4606      	mov	r6, r0
 800bca2:	b089      	sub	sp, #36	; 0x24
 800bca4:	4610      	mov	r0, r2
 800bca6:	460c      	mov	r4, r1
 800bca8:	4691      	mov	r9, r2
 800bcaa:	4698      	mov	r8, r3
 800bcac:	f004 fdbc 	bl	8010828 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800bcb0:	2800      	cmp	r0, #0
 800bcb2:	f000 8093 	beq.w	800bddc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x140>
 800bcb6:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800bdf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800bcba:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800bdf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800bcbe:	f8da 0000 	ldr.w	r0, [sl]
 800bcc2:	4f4b      	ldr	r7, [pc, #300]	; (800bdf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800bcc4:	6802      	ldr	r2, [r0, #0]
 800bcc6:	6a12      	ldr	r2, [r2, #32]
 800bcc8:	4790      	blx	r2
 800bcca:	f8da 0000 	ldr.w	r0, [sl]
 800bcce:	6802      	ldr	r2, [r0, #0]
 800bcd0:	ad08      	add	r5, sp, #32
 800bcd2:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800bcd4:	4790      	blx	r2
 800bcd6:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800bcda:	f8bb 3000 	ldrh.w	r3, [fp]
 800bcde:	9300      	str	r3, [sp, #0]
 800bce0:	4628      	mov	r0, r5
 800bce2:	883b      	ldrh	r3, [r7, #0]
 800bce4:	9301      	str	r3, [sp, #4]
 800bce6:	f004 fe63 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bcea:	f8ab 0000 	strh.w	r0, [fp]
 800bcee:	4628      	mov	r0, r5
 800bcf0:	f004 fe98 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bcf4:	f8da b000 	ldr.w	fp, [sl]
 800bcf8:	8038      	strh	r0, [r7, #0]
 800bcfa:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800bcfe:	9302      	str	r3, [sp, #8]
 800bd00:	4648      	mov	r0, r9
 800bd02:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800bd06:	f004 fd8f 	bl	8010828 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800bd0a:	f8da 2000 	ldr.w	r2, [sl]
 800bd0e:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800bd12:	63d0      	str	r0, [r2, #60]	; 0x3c
 800bd14:	6822      	ldr	r2, [r4, #0]
 800bd16:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800bd1a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800bd1c:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800bd20:	2200      	movs	r2, #0
 800bd22:	4611      	mov	r1, r2
 800bd24:	4620      	mov	r0, r4
 800bd26:	4798      	blx	r3
 800bd28:	2201      	movs	r2, #1
 800bd2a:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800bd2e:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800bd32:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800bd36:	2a00      	cmp	r2, #0
 800bd38:	f104 0204 	add.w	r2, r4, #4
 800bd3c:	dd51      	ble.n	800bde2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 800bd3e:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800bd42:	2900      	cmp	r1, #0
 800bd44:	dd4d      	ble.n	800bde2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 800bd46:	6810      	ldr	r0, [r2, #0]
 800bd48:	6851      	ldr	r1, [r2, #4]
 800bd4a:	f10d 0c18 	add.w	ip, sp, #24
 800bd4e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800bd52:	4641      	mov	r1, r8
 800bd54:	a806      	add	r0, sp, #24
 800bd56:	f7ff f96f 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800bd5a:	4628      	mov	r0, r5
 800bd5c:	f004 ffb4 	bl	8010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bd60:	4680      	mov	r8, r0
 800bd62:	f7f5 facf 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800bd66:	6802      	ldr	r2, [r0, #0]
 800bd68:	6a12      	ldr	r2, [r2, #32]
 800bd6a:	4790      	blx	r2
 800bd6c:	4580      	cmp	r8, r0
 800bd6e:	d03d      	beq.n	800bdec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x150>
 800bd70:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800bd72:	b150      	cbz	r0, 800bd8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 800bd74:	4628      	mov	r0, r5
 800bd76:	f004 ffa7 	bl	8010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bd7a:	4605      	mov	r5, r0
 800bd7c:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800bd7e:	6803      	ldr	r3, [r0, #0]
 800bd80:	6a1b      	ldr	r3, [r3, #32]
 800bd82:	4798      	blx	r3
 800bd84:	1a2b      	subs	r3, r5, r0
 800bd86:	4258      	negs	r0, r3
 800bd88:	4158      	adcs	r0, r3
 800bd8a:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800bd8e:	6822      	ldr	r2, [r4, #0]
 800bd90:	6963      	ldr	r3, [r4, #20]
 800bd92:	9303      	str	r3, [sp, #12]
 800bd94:	2500      	movs	r5, #0
 800bd96:	6165      	str	r5, [r4, #20]
 800bd98:	4620      	mov	r0, r4
 800bd9a:	6892      	ldr	r2, [r2, #8]
 800bd9c:	a906      	add	r1, sp, #24
 800bd9e:	4790      	blx	r2
 800bda0:	9b03      	ldr	r3, [sp, #12]
 800bda2:	6163      	str	r3, [r4, #20]
 800bda4:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800bda8:	6823      	ldr	r3, [r4, #0]
 800bdaa:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800bdae:	4620      	mov	r0, r4
 800bdb0:	4c10      	ldr	r4, [pc, #64]	; (800bdf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800bdb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bdb4:	4652      	mov	r2, sl
 800bdb6:	4649      	mov	r1, r9
 800bdb8:	4798      	blx	r3
 800bdba:	6820      	ldr	r0, [r4, #0]
 800bdbc:	9b02      	ldr	r3, [sp, #8]
 800bdbe:	9a00      	ldr	r2, [sp, #0]
 800bdc0:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800bdc4:	4b0c      	ldr	r3, [pc, #48]	; (800bdf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800bdc6:	801a      	strh	r2, [r3, #0]
 800bdc8:	4b09      	ldr	r3, [pc, #36]	; (800bdf0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800bdca:	9a01      	ldr	r2, [sp, #4]
 800bdcc:	801a      	strh	r2, [r3, #0]
 800bdce:	6803      	ldr	r3, [r0, #0]
 800bdd0:	6a1b      	ldr	r3, [r3, #32]
 800bdd2:	4798      	blx	r3
 800bdd4:	6820      	ldr	r0, [r4, #0]
 800bdd6:	6803      	ldr	r3, [r0, #0]
 800bdd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdda:	4798      	blx	r3
 800bddc:	b009      	add	sp, #36	; 0x24
 800bdde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bde2:	6810      	ldr	r0, [r2, #0]
 800bde4:	6851      	ldr	r1, [r2, #4]
 800bde6:	ab06      	add	r3, sp, #24
 800bde8:	c303      	stmia	r3!, {r0, r1}
 800bdea:	e7b6      	b.n	800bd5a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbe>
 800bdec:	2000      	movs	r0, #0
 800bdee:	e7cc      	b.n	800bd8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 800bdf0:	200124b4 	.word	0x200124b4
 800bdf4:	200124b8 	.word	0x200124b8
 800bdf8:	200124b2 	.word	0x200124b2

0800bdfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800bdfc:	b510      	push	{r4, lr}
 800bdfe:	4b07      	ldr	r3, [pc, #28]	; (800be1c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800be00:	781b      	ldrb	r3, [r3, #0]
 800be02:	4604      	mov	r4, r0
 800be04:	b13b      	cbz	r3, 800be16 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800be06:	6803      	ldr	r3, [r0, #0]
 800be08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800be0a:	4798      	blx	r3
 800be0c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800be0e:	4283      	cmp	r3, r0
 800be10:	d101      	bne.n	800be16 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800be12:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800be14:	bd10      	pop	{r4, pc}
 800be16:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800be18:	e7fc      	b.n	800be14 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800be1a:	bf00      	nop
 800be1c:	200124b6 	.word	0x200124b6

0800be20 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800be20:	b510      	push	{r4, lr}
 800be22:	4b0b      	ldr	r3, [pc, #44]	; (800be50 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800be24:	781b      	ldrb	r3, [r3, #0]
 800be26:	4604      	mov	r4, r0
 800be28:	b95b      	cbnz	r3, 800be42 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800be2a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800be2e:	2b02      	cmp	r3, #2
 800be30:	d007      	beq.n	800be42 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800be32:	6840      	ldr	r0, [r0, #4]
 800be34:	f000 fbce 	bl	800c5d4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800be38:	b118      	cbz	r0, 800be42 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800be3a:	6862      	ldr	r2, [r4, #4]
 800be3c:	7a53      	ldrb	r3, [r2, #9]
 800be3e:	2b00      	cmp	r3, #0
 800be40:	d0fc      	beq.n	800be3c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800be42:	f7f5 f981 	bl	8001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800be46:	4620      	mov	r0, r4
 800be48:	f7ff ffd8 	bl	800bdfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800be4c:	bd10      	pop	{r4, pc}
 800be4e:	bf00      	nop
 800be50:	200124b6 	.word	0x200124b6

0800be54 <_ZN8touchgfx3HAL10initializeEv>:
 800be54:	b510      	push	{r4, lr}
 800be56:	4604      	mov	r4, r0
 800be58:	f7f5 f95e 	bl	8001118 <_ZN8touchgfx10OSWrappers10initializeEv>
 800be5c:	6860      	ldr	r0, [r4, #4]
 800be5e:	6803      	ldr	r3, [r0, #0]
 800be60:	68db      	ldr	r3, [r3, #12]
 800be62:	4798      	blx	r3
 800be64:	68e0      	ldr	r0, [r4, #12]
 800be66:	6803      	ldr	r3, [r0, #0]
 800be68:	689b      	ldr	r3, [r3, #8]
 800be6a:	4798      	blx	r3
 800be6c:	6823      	ldr	r3, [r4, #0]
 800be6e:	4620      	mov	r0, r4
 800be70:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800be72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be76:	4718      	bx	r3

0800be78 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800be78:	b508      	push	{r3, lr}
 800be7a:	290c      	cmp	r1, #12
 800be7c:	d817      	bhi.n	800beae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800be7e:	e8df f001 	tbb	[pc, r1]
 800be82:	090b      	.short	0x090b
 800be84:	0d0d0d07 	.word	0x0d0d0d07
 800be88:	1414140d 	.word	0x1414140d
 800be8c:	1414      	.short	0x1414
 800be8e:	0d          	.byte	0x0d
 800be8f:	00          	.byte	0x00
 800be90:	2020      	movs	r0, #32
 800be92:	bd08      	pop	{r3, pc}
 800be94:	2018      	movs	r0, #24
 800be96:	e7fc      	b.n	800be92 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800be98:	2010      	movs	r0, #16
 800be9a:	e7fa      	b.n	800be92 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800be9c:	4b05      	ldr	r3, [pc, #20]	; (800beb4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800be9e:	4a06      	ldr	r2, [pc, #24]	; (800beb8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800bea0:	4806      	ldr	r0, [pc, #24]	; (800bebc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800bea2:	f240 212f 	movw	r1, #559	; 0x22f
 800bea6:	f010 fa69 	bl	801c37c <__assert_func>
 800beaa:	2008      	movs	r0, #8
 800beac:	e7f1      	b.n	800be92 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800beae:	2000      	movs	r0, #0
 800beb0:	e7ef      	b.n	800be92 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800beb2:	bf00      	nop
 800beb4:	0801f739 	.word	0x0801f739
 800beb8:	0801fa17 	.word	0x0801fa17
 800bebc:	0801f640 	.word	0x0801f640

0800bec0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800bec0:	b570      	push	{r4, r5, r6, lr}
 800bec2:	460d      	mov	r5, r1
 800bec4:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800bec8:	4616      	mov	r6, r2
 800beca:	461c      	mov	r4, r3
 800becc:	f7ff ffd4 	bl	800be78 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800bed0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800bed4:	10c0      	asrs	r0, r0, #3
 800bed6:	fb06 5101 	mla	r1, r6, r1, r5
 800beda:	fb00 4001 	mla	r0, r0, r1, r4
 800bede:	bd70      	pop	{r4, r5, r6, pc}

0800bee0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800bee0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bee4:	b08a      	sub	sp, #40	; 0x28
 800bee6:	f04f 0c00 	mov.w	ip, #0
 800beea:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800beee:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800bef2:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800bef6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800befa:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800befe:	f8cd c020 	str.w	ip, [sp, #32]
 800bf02:	f1b8 0f02 	cmp.w	r8, #2
 800bf06:	4604      	mov	r4, r0
 800bf08:	469a      	mov	sl, r3
 800bf0a:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800bf0e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800bf12:	d030      	beq.n	800bf76 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800bf14:	2bff      	cmp	r3, #255	; 0xff
 800bf16:	d12c      	bne.n	800bf72 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800bf18:	4560      	cmp	r0, ip
 800bf1a:	bf14      	ite	ne
 800bf1c:	2004      	movne	r0, #4
 800bf1e:	2001      	moveq	r0, #1
 800bf20:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bf24:	9204      	str	r2, [sp, #16]
 800bf26:	4620      	mov	r0, r4
 800bf28:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800bf2c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800bf30:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bf34:	f8ad 6018 	strh.w	r6, [sp, #24]
 800bf38:	f8ad 501a 	strh.w	r5, [sp, #26]
 800bf3c:	f7ff ff5e 	bl	800bdfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bf40:	e9cd 9700 	strd	r9, r7, [sp]
 800bf44:	4603      	mov	r3, r0
 800bf46:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800bf4a:	4651      	mov	r1, sl
 800bf4c:	4620      	mov	r0, r4
 800bf4e:	f7ff ffb7 	bl	800bec0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800bf52:	f8ad 901e 	strh.w	r9, [sp, #30]
 800bf56:	9005      	str	r0, [sp, #20]
 800bf58:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800bf5c:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800bf60:	b106      	cbz	r6, 800bf64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800bf62:	b98d      	cbnz	r5, 800bf88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800bf64:	4b12      	ldr	r3, [pc, #72]	; (800bfb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800bf66:	4a13      	ldr	r2, [pc, #76]	; (800bfb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800bf68:	f240 11af 	movw	r1, #431	; 0x1af
 800bf6c:	4812      	ldr	r0, [pc, #72]	; (800bfb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800bf6e:	f010 fa05 	bl	801c37c <__assert_func>
 800bf72:	2004      	movs	r0, #4
 800bf74:	e7d4      	b.n	800bf20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800bf76:	2bff      	cmp	r3, #255	; 0xff
 800bf78:	d104      	bne.n	800bf84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800bf7a:	2800      	cmp	r0, #0
 800bf7c:	bf14      	ite	ne
 800bf7e:	2040      	movne	r0, #64	; 0x40
 800bf80:	2020      	moveq	r0, #32
 800bf82:	e7cd      	b.n	800bf20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800bf84:	2040      	movs	r0, #64	; 0x40
 800bf86:	e7cb      	b.n	800bf20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800bf88:	6823      	ldr	r3, [r4, #0]
 800bf8a:	9d02      	ldr	r5, [sp, #8]
 800bf8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bf8e:	4620      	mov	r0, r4
 800bf90:	4798      	blx	r3
 800bf92:	4228      	tst	r0, r5
 800bf94:	d104      	bne.n	800bfa0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800bf96:	4b09      	ldr	r3, [pc, #36]	; (800bfbc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800bf98:	4a06      	ldr	r2, [pc, #24]	; (800bfb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800bf9a:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800bf9e:	e7e5      	b.n	800bf6c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800bfa0:	6860      	ldr	r0, [r4, #4]
 800bfa2:	6803      	ldr	r3, [r0, #0]
 800bfa4:	a902      	add	r1, sp, #8
 800bfa6:	685b      	ldr	r3, [r3, #4]
 800bfa8:	4798      	blx	r3
 800bfaa:	b00a      	add	sp, #40	; 0x28
 800bfac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bfb0:	0801f6bc 	.word	0x0801f6bc
 800bfb4:	0801f8b9 	.word	0x0801f8b9
 800bfb8:	0801f640 	.word	0x0801f640
 800bfbc:	0801f6f4 	.word	0x0801f6f4

0800bfc0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800bfc0:	b510      	push	{r4, lr}
 800bfc2:	b08a      	sub	sp, #40	; 0x28
 800bfc4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800bfc8:	9408      	str	r4, [sp, #32]
 800bfca:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800bfce:	9407      	str	r4, [sp, #28]
 800bfd0:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800bfd4:	9406      	str	r4, [sp, #24]
 800bfd6:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800bfda:	9405      	str	r4, [sp, #20]
 800bfdc:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800bfe0:	9404      	str	r4, [sp, #16]
 800bfe2:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800bfe6:	9403      	str	r4, [sp, #12]
 800bfe8:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800bfec:	9402      	str	r4, [sp, #8]
 800bfee:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800bff2:	e9cd 3400 	strd	r3, r4, [sp]
 800bff6:	4613      	mov	r3, r2
 800bff8:	2200      	movs	r2, #0
 800bffa:	f7ff ff71 	bl	800bee0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800bffe:	b00a      	add	sp, #40	; 0x28
 800c000:	bd10      	pop	{r4, pc}
	...

0800c004 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800c004:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c006:	b08b      	sub	sp, #44	; 0x2c
 800c008:	4616      	mov	r6, r2
 800c00a:	460d      	mov	r5, r1
 800c00c:	461f      	mov	r7, r3
 800c00e:	4604      	mov	r4, r0
 800c010:	f7f5 f978 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800c014:	6803      	ldr	r3, [r0, #0]
 800c016:	6a1b      	ldr	r3, [r3, #32]
 800c018:	4798      	blx	r3
 800c01a:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800c01e:	4b0d      	ldr	r3, [pc, #52]	; (800c054 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800c020:	881b      	ldrh	r3, [r3, #0]
 800c022:	9306      	str	r3, [sp, #24]
 800c024:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c028:	9305      	str	r3, [sp, #20]
 800c02a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c02e:	9304      	str	r3, [sp, #16]
 800c030:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c034:	9303      	str	r3, [sp, #12]
 800c036:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c03a:	9302      	str	r3, [sp, #8]
 800c03c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c040:	2200      	movs	r2, #0
 800c042:	e9cd 7300 	strd	r7, r3, [sp]
 800c046:	4629      	mov	r1, r5
 800c048:	4633      	mov	r3, r6
 800c04a:	4620      	mov	r0, r4
 800c04c:	f7ff ff48 	bl	800bee0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c050:	b00b      	add	sp, #44	; 0x2c
 800c052:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c054:	200124b2 	.word	0x200124b2

0800c058 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800c058:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c05c:	461f      	mov	r7, r3
 800c05e:	4b14      	ldr	r3, [pc, #80]	; (800c0b0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800c060:	b08a      	sub	sp, #40	; 0x28
 800c062:	4616      	mov	r6, r2
 800c064:	f8b3 8000 	ldrh.w	r8, [r3]
 800c068:	460d      	mov	r5, r1
 800c06a:	4604      	mov	r4, r0
 800c06c:	f7f5 f94a 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800c070:	6803      	ldr	r3, [r0, #0]
 800c072:	6a1b      	ldr	r3, [r3, #32]
 800c074:	4798      	blx	r3
 800c076:	2302      	movs	r3, #2
 800c078:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800c07c:	2301      	movs	r3, #1
 800c07e:	9305      	str	r3, [sp, #20]
 800c080:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c084:	9304      	str	r3, [sp, #16]
 800c086:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c08a:	9303      	str	r3, [sp, #12]
 800c08c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c090:	9302      	str	r3, [sp, #8]
 800c092:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c096:	9008      	str	r0, [sp, #32]
 800c098:	e9cd 7300 	strd	r7, r3, [sp]
 800c09c:	2200      	movs	r2, #0
 800c09e:	4633      	mov	r3, r6
 800c0a0:	4629      	mov	r1, r5
 800c0a2:	4620      	mov	r0, r4
 800c0a4:	f7ff ff1c 	bl	800bee0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c0a8:	b00a      	add	sp, #40	; 0x28
 800c0aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c0ae:	bf00      	nop
 800c0b0:	200124b2 	.word	0x200124b2

0800c0b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800c0b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0b8:	b08b      	sub	sp, #44	; 0x2c
 800c0ba:	469b      	mov	fp, r3
 800c0bc:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800c0c0:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800c0c4:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800c0c8:	2fff      	cmp	r7, #255	; 0xff
 800c0ca:	bf14      	ite	ne
 800c0cc:	2308      	movne	r3, #8
 800c0ce:	2302      	moveq	r3, #2
 800c0d0:	2600      	movs	r6, #0
 800c0d2:	4604      	mov	r4, r0
 800c0d4:	4689      	mov	r9, r1
 800c0d6:	4692      	mov	sl, r2
 800c0d8:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800c0dc:	9608      	str	r6, [sp, #32]
 800c0de:	f7ff fe8d 	bl	800bdfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c0e2:	e9cd 8500 	strd	r8, r5, [sp]
 800c0e6:	4603      	mov	r3, r0
 800c0e8:	465a      	mov	r2, fp
 800c0ea:	4651      	mov	r1, sl
 800c0ec:	4620      	mov	r0, r4
 800c0ee:	f7ff fee7 	bl	800bec0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c0f2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c0f6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c0fa:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800c0fe:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c102:	6823      	ldr	r3, [r4, #0]
 800c104:	9005      	str	r0, [sp, #20]
 800c106:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800c10a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800c10e:	f8ad 601c 	strh.w	r6, [sp, #28]
 800c112:	f8ad 801e 	strh.w	r8, [sp, #30]
 800c116:	f8cd 9020 	str.w	r9, [sp, #32]
 800c11a:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800c11e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c120:	9d02      	ldr	r5, [sp, #8]
 800c122:	4620      	mov	r0, r4
 800c124:	4798      	blx	r3
 800c126:	4228      	tst	r0, r5
 800c128:	d106      	bne.n	800c138 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800c12a:	4b07      	ldr	r3, [pc, #28]	; (800c148 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800c12c:	4a07      	ldr	r2, [pc, #28]	; (800c14c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800c12e:	4808      	ldr	r0, [pc, #32]	; (800c150 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800c130:	f240 11e7 	movw	r1, #487	; 0x1e7
 800c134:	f010 f922 	bl	801c37c <__assert_func>
 800c138:	6860      	ldr	r0, [r4, #4]
 800c13a:	6803      	ldr	r3, [r0, #0]
 800c13c:	a902      	add	r1, sp, #8
 800c13e:	685b      	ldr	r3, [r3, #4]
 800c140:	4798      	blx	r3
 800c142:	b00b      	add	sp, #44	; 0x2c
 800c144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c148:	0801f6f4 	.word	0x0801f6f4
 800c14c:	0801f982 	.word	0x0801f982
 800c150:	0801f640 	.word	0x0801f640

0800c154 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800c154:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c158:	461f      	mov	r7, r3
 800c15a:	4b0b      	ldr	r3, [pc, #44]	; (800c188 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800c15c:	460d      	mov	r5, r1
 800c15e:	f8b3 8000 	ldrh.w	r8, [r3]
 800c162:	4616      	mov	r6, r2
 800c164:	4604      	mov	r4, r0
 800c166:	f7f5 f8cd 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800c16a:	6803      	ldr	r3, [r0, #0]
 800c16c:	6a1b      	ldr	r3, [r3, #32]
 800c16e:	4798      	blx	r3
 800c170:	463b      	mov	r3, r7
 800c172:	e9cd 8000 	strd	r8, r0, [sp]
 800c176:	4632      	mov	r2, r6
 800c178:	4629      	mov	r1, r5
 800c17a:	4620      	mov	r0, r4
 800c17c:	f7ff fea0 	bl	800bec0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c180:	b002      	add	sp, #8
 800c182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c186:	bf00      	nop
 800c188:	200124b2 	.word	0x200124b2

0800c18c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800c18c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c190:	b088      	sub	sp, #32
 800c192:	4698      	mov	r8, r3
 800c194:	2300      	movs	r3, #0
 800c196:	9306      	str	r3, [sp, #24]
 800c198:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c19c:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800c1a0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c1a4:	f8ad 6010 	strh.w	r6, [sp, #16]
 800c1a8:	e9cd 3100 	strd	r3, r1, [sp]
 800c1ac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c1b0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c1b4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800c1b8:	f88d 301c 	strb.w	r3, [sp, #28]
 800c1bc:	4617      	mov	r7, r2
 800c1be:	4604      	mov	r4, r0
 800c1c0:	f8ad 5012 	strh.w	r5, [sp, #18]
 800c1c4:	f7ff fe1a 	bl	800bdfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c1c8:	4642      	mov	r2, r8
 800c1ca:	4603      	mov	r3, r0
 800c1cc:	4639      	mov	r1, r7
 800c1ce:	4620      	mov	r0, r4
 800c1d0:	f7ff ffc0 	bl	800c154 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c1d4:	4b16      	ldr	r3, [pc, #88]	; (800c230 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800c1d6:	9003      	str	r0, [sp, #12]
 800c1d8:	881b      	ldrh	r3, [r3, #0]
 800c1da:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c1de:	f7f5 f891 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800c1e2:	6803      	ldr	r3, [r0, #0]
 800c1e4:	6a1b      	ldr	r3, [r3, #32]
 800c1e6:	4798      	blx	r3
 800c1e8:	f88d 001e 	strb.w	r0, [sp, #30]
 800c1ec:	f88d 001d 	strb.w	r0, [sp, #29]
 800c1f0:	b106      	cbz	r6, 800c1f4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800c1f2:	b935      	cbnz	r5, 800c202 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800c1f4:	4b0f      	ldr	r3, [pc, #60]	; (800c234 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800c1f6:	4a10      	ldr	r2, [pc, #64]	; (800c238 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800c1f8:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 800c1fc:	480f      	ldr	r0, [pc, #60]	; (800c23c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800c1fe:	f010 f8bd 	bl	801c37c <__assert_func>
 800c202:	6823      	ldr	r3, [r4, #0]
 800c204:	9d00      	ldr	r5, [sp, #0]
 800c206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c208:	4620      	mov	r0, r4
 800c20a:	4798      	blx	r3
 800c20c:	4228      	tst	r0, r5
 800c20e:	d104      	bne.n	800c21a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800c210:	4b0b      	ldr	r3, [pc, #44]	; (800c240 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800c212:	4a09      	ldr	r2, [pc, #36]	; (800c238 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800c214:	f240 11cd 	movw	r1, #461	; 0x1cd
 800c218:	e7f0      	b.n	800c1fc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800c21a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c21c:	6860      	ldr	r0, [r4, #4]
 800c21e:	9306      	str	r3, [sp, #24]
 800c220:	6803      	ldr	r3, [r0, #0]
 800c222:	4669      	mov	r1, sp
 800c224:	685b      	ldr	r3, [r3, #4]
 800c226:	4798      	blx	r3
 800c228:	b008      	add	sp, #32
 800c22a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c22e:	bf00      	nop
 800c230:	200124b2 	.word	0x200124b2
 800c234:	0801f6bc 	.word	0x0801f6bc
 800c238:	0801f76b 	.word	0x0801f76b
 800c23c:	0801f640 	.word	0x0801f640
 800c240:	0801f6f4 	.word	0x0801f6f4

0800c244 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800c244:	b570      	push	{r4, r5, r6, lr}
 800c246:	b08a      	sub	sp, #40	; 0x28
 800c248:	466b      	mov	r3, sp
 800c24a:	e883 0006 	stmia.w	r3, {r1, r2}
 800c24e:	4b20      	ldr	r3, [pc, #128]	; (800c2d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800c250:	781b      	ldrb	r3, [r3, #0]
 800c252:	4604      	mov	r4, r0
 800c254:	b933      	cbnz	r3, 800c264 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800c256:	4b1f      	ldr	r3, [pc, #124]	; (800c2d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800c258:	4a1f      	ldr	r2, [pc, #124]	; (800c2d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800c25a:	4820      	ldr	r0, [pc, #128]	; (800c2dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800c25c:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 800c260:	f010 f88c 	bl	801c37c <__assert_func>
 800c264:	2300      	movs	r3, #0
 800c266:	9308      	str	r3, [sp, #32]
 800c268:	2301      	movs	r3, #1
 800c26a:	9302      	str	r3, [sp, #8]
 800c26c:	6803      	ldr	r3, [r0, #0]
 800c26e:	f8bd 5000 	ldrh.w	r5, [sp]
 800c272:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c274:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800c278:	4798      	blx	r3
 800c27a:	4632      	mov	r2, r6
 800c27c:	4629      	mov	r1, r5
 800c27e:	4603      	mov	r3, r0
 800c280:	4620      	mov	r0, r4
 800c282:	f7ff ff67 	bl	800c154 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c286:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c288:	9305      	str	r3, [sp, #20]
 800c28a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c28e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c292:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c296:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c29a:	4b11      	ldr	r3, [pc, #68]	; (800c2e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800c29c:	9003      	str	r0, [sp, #12]
 800c29e:	881b      	ldrh	r3, [r3, #0]
 800c2a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c2a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c2a8:	f7f5 f82c 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800c2ac:	6803      	ldr	r3, [r0, #0]
 800c2ae:	6a1b      	ldr	r3, [r3, #32]
 800c2b0:	4798      	blx	r3
 800c2b2:	23ff      	movs	r3, #255	; 0xff
 800c2b4:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c2b8:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800c2bc:	6860      	ldr	r0, [r4, #4]
 800c2be:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c2c2:	6803      	ldr	r3, [r0, #0]
 800c2c4:	a902      	add	r1, sp, #8
 800c2c6:	685b      	ldr	r3, [r3, #4]
 800c2c8:	4798      	blx	r3
 800c2ca:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800c2cc:	b00a      	add	sp, #40	; 0x28
 800c2ce:	bd70      	pop	{r4, r5, r6, pc}
 800c2d0:	200124b7 	.word	0x200124b7
 800c2d4:	0801f58d 	.word	0x0801f58d
 800c2d8:	0801f80f 	.word	0x0801f80f
 800c2dc:	0801f640 	.word	0x0801f640
 800c2e0:	200124b2 	.word	0x200124b2

0800c2e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800c2e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c2e6:	b08b      	sub	sp, #44	; 0x2c
 800c2e8:	466d      	mov	r5, sp
 800c2ea:	e885 0006 	stmia.w	r5, {r1, r2}
 800c2ee:	461d      	mov	r5, r3
 800c2f0:	2300      	movs	r3, #0
 800c2f2:	9308      	str	r3, [sp, #32]
 800c2f4:	2301      	movs	r3, #1
 800c2f6:	9302      	str	r3, [sp, #8]
 800c2f8:	6803      	ldr	r3, [r0, #0]
 800c2fa:	f8bd 6000 	ldrh.w	r6, [sp]
 800c2fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c300:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800c304:	4604      	mov	r4, r0
 800c306:	4798      	blx	r3
 800c308:	463a      	mov	r2, r7
 800c30a:	4631      	mov	r1, r6
 800c30c:	4603      	mov	r3, r0
 800c30e:	4620      	mov	r0, r4
 800c310:	f7ff ff20 	bl	800c154 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c314:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c318:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c31c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c320:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c324:	4b0e      	ldr	r3, [pc, #56]	; (800c360 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800c326:	9003      	str	r0, [sp, #12]
 800c328:	881b      	ldrh	r3, [r3, #0]
 800c32a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c32e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c330:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c334:	9505      	str	r5, [sp, #20]
 800c336:	f7f4 ffe5 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800c33a:	6803      	ldr	r3, [r0, #0]
 800c33c:	6a1b      	ldr	r3, [r3, #32]
 800c33e:	4798      	blx	r3
 800c340:	23ff      	movs	r3, #255	; 0xff
 800c342:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c346:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800c34a:	6860      	ldr	r0, [r4, #4]
 800c34c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c350:	6803      	ldr	r3, [r0, #0]
 800c352:	a902      	add	r1, sp, #8
 800c354:	685b      	ldr	r3, [r3, #4]
 800c356:	4798      	blx	r3
 800c358:	4628      	mov	r0, r5
 800c35a:	b00b      	add	sp, #44	; 0x2c
 800c35c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c35e:	bf00      	nop
 800c360:	200124b2 	.word	0x200124b2

0800c364 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800c364:	b570      	push	{r4, r5, r6, lr}
 800c366:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800c36a:	4604      	mov	r4, r0
 800c36c:	b19b      	cbz	r3, 800c396 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800c36e:	2002      	movs	r0, #2
 800c370:	f7f4 fdda 	bl	8000f28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800c374:	2300      	movs	r3, #0
 800c376:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c37a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800c37e:	6823      	ldr	r3, [r4, #0]
 800c380:	4620      	mov	r0, r4
 800c382:	f8d3 50a0 	ldr.w	r5, [r3, #160]	; 0xa0
 800c386:	f7ff fd39 	bl	800bdfc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c38a:	462b      	mov	r3, r5
 800c38c:	4601      	mov	r1, r0
 800c38e:	4620      	mov	r0, r4
 800c390:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c394:	4718      	bx	r3
 800c396:	bd70      	pop	{r4, r5, r6, pc}

0800c398 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800c398:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800c39c:	1a13      	subs	r3, r2, r0
 800c39e:	4258      	negs	r0, r3
 800c3a0:	4158      	adcs	r0, r3
 800c3a2:	4770      	bx	lr

0800c3a4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800c3a4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800c3a8:	1a9b      	subs	r3, r3, r2
 800c3aa:	2b00      	cmp	r3, #0
 800c3ac:	bfdc      	itt	le
 800c3ae:	6882      	ldrle	r2, [r0, #8]
 800c3b0:	189b      	addle	r3, r3, r2
 800c3b2:	2b01      	cmp	r3, #1
 800c3b4:	bfcc      	ite	gt
 800c3b6:	2000      	movgt	r0, #0
 800c3b8:	2001      	movle	r0, #1
 800c3ba:	4770      	bx	lr

0800c3bc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800c3bc:	6902      	ldr	r2, [r0, #16]
 800c3be:	6840      	ldr	r0, [r0, #4]
 800c3c0:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800c3c4:	4770      	bx	lr

0800c3c6 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800c3c6:	6803      	ldr	r3, [r0, #0]
 800c3c8:	691b      	ldr	r3, [r3, #16]
 800c3ca:	4718      	bx	r3

0800c3cc <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800c3cc:	4770      	bx	lr

0800c3ce <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800c3ce:	4770      	bx	lr

0800c3d0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800c3d0:	4770      	bx	lr
	...

0800c3d4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800c3d4:	b570      	push	{r4, r5, r6, lr}
 800c3d6:	2301      	movs	r3, #1
 800c3d8:	7203      	strb	r3, [r0, #8]
 800c3da:	4604      	mov	r4, r0
 800c3dc:	6840      	ldr	r0, [r0, #4]
 800c3de:	6803      	ldr	r3, [r0, #0]
 800c3e0:	699b      	ldr	r3, [r3, #24]
 800c3e2:	4798      	blx	r3
 800c3e4:	6803      	ldr	r3, [r0, #0]
 800c3e6:	2b08      	cmp	r3, #8
 800c3e8:	4605      	mov	r5, r0
 800c3ea:	d01e      	beq.n	800c42a <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800c3ec:	d80b      	bhi.n	800c406 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c3ee:	2b02      	cmp	r3, #2
 800c3f0:	d027      	beq.n	800c442 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800c3f2:	2b04      	cmp	r3, #4
 800c3f4:	d011      	beq.n	800c41a <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800c3f6:	2b01      	cmp	r3, #1
 800c3f8:	d028      	beq.n	800c44c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c3fa:	4b17      	ldr	r3, [pc, #92]	; (800c458 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800c3fc:	4a17      	ldr	r2, [pc, #92]	; (800c45c <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800c3fe:	4818      	ldr	r0, [pc, #96]	; (800c460 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800c400:	218b      	movs	r1, #139	; 0x8b
 800c402:	f00f ffbb 	bl	801c37c <__assert_func>
 800c406:	2b40      	cmp	r3, #64	; 0x40
 800c408:	d020      	beq.n	800c44c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c40a:	d801      	bhi.n	800c410 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800c40c:	2b20      	cmp	r3, #32
 800c40e:	e7f3      	b.n	800c3f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800c410:	2b80      	cmp	r3, #128	; 0x80
 800c412:	d01b      	beq.n	800c44c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c414:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c418:	e7ee      	b.n	800c3f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800c41a:	6823      	ldr	r3, [r4, #0]
 800c41c:	7f01      	ldrb	r1, [r0, #28]
 800c41e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c420:	4620      	mov	r0, r4
 800c422:	4798      	blx	r3
 800c424:	6823      	ldr	r3, [r4, #0]
 800c426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c428:	e006      	b.n	800c438 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800c42a:	6823      	ldr	r3, [r4, #0]
 800c42c:	7f01      	ldrb	r1, [r0, #28]
 800c42e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c430:	4620      	mov	r0, r4
 800c432:	4798      	blx	r3
 800c434:	6823      	ldr	r3, [r4, #0]
 800c436:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c438:	4629      	mov	r1, r5
 800c43a:	4620      	mov	r0, r4
 800c43c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c440:	4718      	bx	r3
 800c442:	6823      	ldr	r3, [r4, #0]
 800c444:	4620      	mov	r0, r4
 800c446:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c448:	4798      	blx	r3
 800c44a:	e7f3      	b.n	800c434 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800c44c:	6823      	ldr	r3, [r4, #0]
 800c44e:	4620      	mov	r0, r4
 800c450:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c452:	4798      	blx	r3
 800c454:	e7e6      	b.n	800c424 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800c456:	bf00      	nop
 800c458:	0801fa60 	.word	0x0801fa60
 800c45c:	0801fb20 	.word	0x0801fb20
 800c460:	0801fa85 	.word	0x0801fa85

0800c464 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800c464:	b570      	push	{r4, r5, r6, lr}
 800c466:	4604      	mov	r4, r0
 800c468:	460e      	mov	r6, r1
 800c46a:	6860      	ldr	r0, [r4, #4]
 800c46c:	6803      	ldr	r3, [r0, #0]
 800c46e:	685b      	ldr	r3, [r3, #4]
 800c470:	4798      	blx	r3
 800c472:	2800      	cmp	r0, #0
 800c474:	d1f9      	bne.n	800c46a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800c476:	4d0b      	ldr	r5, [pc, #44]	; (800c4a4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800c478:	6828      	ldr	r0, [r5, #0]
 800c47a:	6803      	ldr	r3, [r0, #0]
 800c47c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c47e:	4798      	blx	r3
 800c480:	f7f4 fe90 	bl	80011a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800c484:	6860      	ldr	r0, [r4, #4]
 800c486:	6803      	ldr	r3, [r0, #0]
 800c488:	4631      	mov	r1, r6
 800c48a:	689b      	ldr	r3, [r3, #8]
 800c48c:	4798      	blx	r3
 800c48e:	6823      	ldr	r3, [r4, #0]
 800c490:	4620      	mov	r0, r4
 800c492:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c494:	4798      	blx	r3
 800c496:	6828      	ldr	r0, [r5, #0]
 800c498:	6803      	ldr	r3, [r0, #0]
 800c49a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c49e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c4a0:	4718      	bx	r3
 800c4a2:	bf00      	nop
 800c4a4:	200124b8 	.word	0x200124b8

0800c4a8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800c4a8:	b508      	push	{r3, lr}
 800c4aa:	f7f4 fe4d 	bl	8001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c4ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c4b2:	f7f4 be61 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c4b6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800c4b6:	b510      	push	{r4, lr}
 800c4b8:	2114      	movs	r1, #20
 800c4ba:	4604      	mov	r4, r0
 800c4bc:	f00f ff1a 	bl	801c2f4 <_ZdlPvj>
 800c4c0:	4620      	mov	r0, r4
 800c4c2:	bd10      	pop	{r4, pc}

0800c4c4 <_ZN8touchgfx13DMA_Interface5startEv>:
 800c4c4:	b510      	push	{r4, lr}
 800c4c6:	4604      	mov	r4, r0
 800c4c8:	6840      	ldr	r0, [r0, #4]
 800c4ca:	6803      	ldr	r3, [r0, #0]
 800c4cc:	681b      	ldr	r3, [r3, #0]
 800c4ce:	4798      	blx	r3
 800c4d0:	b948      	cbnz	r0, 800c4e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c4d2:	7a63      	ldrb	r3, [r4, #9]
 800c4d4:	b13b      	cbz	r3, 800c4e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c4d6:	7a23      	ldrb	r3, [r4, #8]
 800c4d8:	b92b      	cbnz	r3, 800c4e6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c4da:	6823      	ldr	r3, [r4, #0]
 800c4dc:	4620      	mov	r0, r4
 800c4de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c4e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4e4:	4718      	bx	r3
 800c4e6:	bd10      	pop	{r4, pc}

0800c4e8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800c4e8:	b510      	push	{r4, lr}
 800c4ea:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800c4ee:	1b12      	subs	r2, r2, r4
 800c4f0:	2a00      	cmp	r2, #0
 800c4f2:	bfdc      	itt	le
 800c4f4:	6883      	ldrle	r3, [r0, #8]
 800c4f6:	18d2      	addle	r2, r2, r3
 800c4f8:	2a01      	cmp	r2, #1
 800c4fa:	dd18      	ble.n	800c52e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800c4fc:	6843      	ldr	r3, [r0, #4]
 800c4fe:	f101 021c 	add.w	r2, r1, #28
 800c502:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800c506:	f851 4b04 	ldr.w	r4, [r1], #4
 800c50a:	f843 4b04 	str.w	r4, [r3], #4
 800c50e:	4291      	cmp	r1, r2
 800c510:	d1f9      	bne.n	800c506 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800c512:	880a      	ldrh	r2, [r1, #0]
 800c514:	801a      	strh	r2, [r3, #0]
 800c516:	788a      	ldrb	r2, [r1, #2]
 800c518:	709a      	strb	r2, [r3, #2]
 800c51a:	68c3      	ldr	r3, [r0, #12]
 800c51c:	6882      	ldr	r2, [r0, #8]
 800c51e:	f3bf 8f5b 	dmb	ish
 800c522:	3301      	adds	r3, #1
 800c524:	429a      	cmp	r2, r3
 800c526:	bfd8      	it	le
 800c528:	1a9b      	suble	r3, r3, r2
 800c52a:	60c3      	str	r3, [r0, #12]
 800c52c:	bd10      	pop	{r4, pc}
 800c52e:	4b03      	ldr	r3, [pc, #12]	; (800c53c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800c530:	4a03      	ldr	r2, [pc, #12]	; (800c540 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800c532:	4804      	ldr	r0, [pc, #16]	; (800c544 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800c534:	2139      	movs	r1, #57	; 0x39
 800c536:	f00f ff21 	bl	801c37c <__assert_func>
 800c53a:	bf00      	nop
 800c53c:	0801faab 	.word	0x0801faab
 800c540:	0801fb50 	.word	0x0801fb50
 800c544:	0801fa85 	.word	0x0801fa85

0800c548 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800c548:	b510      	push	{r4, lr}
 800c54a:	6803      	ldr	r3, [r0, #0]
 800c54c:	681b      	ldr	r3, [r3, #0]
 800c54e:	4604      	mov	r4, r0
 800c550:	4798      	blx	r3
 800c552:	b128      	cbz	r0, 800c560 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800c554:	4b07      	ldr	r3, [pc, #28]	; (800c574 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800c556:	4a08      	ldr	r2, [pc, #32]	; (800c578 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800c558:	4808      	ldr	r0, [pc, #32]	; (800c57c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800c55a:	213f      	movs	r1, #63	; 0x3f
 800c55c:	f00f ff0e 	bl	801c37c <__assert_func>
 800c560:	6923      	ldr	r3, [r4, #16]
 800c562:	68a2      	ldr	r2, [r4, #8]
 800c564:	f3bf 8f5b 	dmb	ish
 800c568:	3301      	adds	r3, #1
 800c56a:	429a      	cmp	r2, r3
 800c56c:	bfd8      	it	le
 800c56e:	1a9b      	suble	r3, r3, r2
 800c570:	6123      	str	r3, [r4, #16]
 800c572:	bd10      	pop	{r4, pc}
 800c574:	0801face 	.word	0x0801face
 800c578:	0801fb9e 	.word	0x0801fb9e
 800c57c:	0801fa85 	.word	0x0801fa85

0800c580 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c580:	b570      	push	{r4, r5, r6, lr}
 800c582:	4604      	mov	r4, r0
 800c584:	6840      	ldr	r0, [r0, #4]
 800c586:	6803      	ldr	r3, [r0, #0]
 800c588:	681b      	ldr	r3, [r3, #0]
 800c58a:	4798      	blx	r3
 800c58c:	4605      	mov	r5, r0
 800c58e:	b930      	cbnz	r0, 800c59e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c590:	7a23      	ldrb	r3, [r4, #8]
 800c592:	b123      	cbz	r3, 800c59e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c594:	6860      	ldr	r0, [r4, #4]
 800c596:	6803      	ldr	r3, [r0, #0]
 800c598:	695b      	ldr	r3, [r3, #20]
 800c59a:	4798      	blx	r3
 800c59c:	7225      	strb	r5, [r4, #8]
 800c59e:	6860      	ldr	r0, [r4, #4]
 800c5a0:	6803      	ldr	r3, [r0, #0]
 800c5a2:	681b      	ldr	r3, [r3, #0]
 800c5a4:	4798      	blx	r3
 800c5a6:	b928      	cbnz	r0, 800c5b4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c5a8:	6823      	ldr	r3, [r4, #0]
 800c5aa:	4620      	mov	r0, r4
 800c5ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c5ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5b2:	4718      	bx	r3
 800c5b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5b8:	f7f4 be0c 	b.w	80011d4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c5bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c5bc:	b510      	push	{r4, lr}
 800c5be:	4c04      	ldr	r4, [pc, #16]	; (800c5d0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c5c0:	6082      	str	r2, [r0, #8]
 800c5c2:	2200      	movs	r2, #0
 800c5c4:	e9c0 4100 	strd	r4, r1, [r0]
 800c5c8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c5cc:	bd10      	pop	{r4, pc}
 800c5ce:	bf00      	nop
 800c5d0:	0801fb04 	.word	0x0801fb04

0800c5d4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c5d4:	6840      	ldr	r0, [r0, #4]
 800c5d6:	6803      	ldr	r3, [r0, #0]
 800c5d8:	681b      	ldr	r3, [r3, #0]
 800c5da:	4718      	bx	r3

0800c5dc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800c5dc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c5e0:	4770      	bx	lr

0800c5e2 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800c5e2:	4770      	bx	lr

0800c5e4 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800c5e4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c5e8:	b133      	cbz	r3, 800c5f8 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800c5ea:	790b      	ldrb	r3, [r1, #4]
 800c5ec:	2b01      	cmp	r3, #1
 800c5ee:	bf01      	itttt	eq
 800c5f0:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800c5f2:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800c5f4:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800c5f6:	8603      	strheq	r3, [r0, #48]	; 0x30
 800c5f8:	f00f be4e 	b.w	801c298 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800c5fc <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800c5fc:	8813      	ldrh	r3, [r2, #0]
 800c5fe:	8683      	strh	r3, [r0, #52]	; 0x34
 800c600:	f000 bada 	b.w	800cbb8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800c604 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800c604:	b510      	push	{r4, lr}
 800c606:	2138      	movs	r1, #56	; 0x38
 800c608:	4604      	mov	r4, r0
 800c60a:	f00f fe73 	bl	801c2f4 <_ZdlPvj>
 800c60e:	4620      	mov	r0, r4
 800c610:	bd10      	pop	{r4, pc}

0800c612 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800c612:	6803      	ldr	r3, [r0, #0]
 800c614:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800c618:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c61a:	4718      	bx	r3

0800c61c <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800c61c:	4770      	bx	lr

0800c61e <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800c61e:	b510      	push	{r4, lr}
 800c620:	212c      	movs	r1, #44	; 0x2c
 800c622:	4604      	mov	r4, r0
 800c624:	f00f fe66 	bl	801c2f4 <_ZdlPvj>
 800c628:	4620      	mov	r0, r4
 800c62a:	bd10      	pop	{r4, pc}

0800c62c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800c62c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c630:	2bff      	cmp	r3, #255	; 0xff
 800c632:	b510      	push	{r4, lr}
 800c634:	d104      	bne.n	800c640 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800c636:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800c638:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c63c:	429a      	cmp	r2, r3
 800c63e:	d105      	bne.n	800c64c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800c640:	2300      	movs	r3, #0
 800c642:	8003      	strh	r3, [r0, #0]
 800c644:	8043      	strh	r3, [r0, #2]
 800c646:	8083      	strh	r3, [r0, #4]
 800c648:	80c3      	strh	r3, [r0, #6]
 800c64a:	bd10      	pop	{r4, pc}
 800c64c:	2300      	movs	r3, #0
 800c64e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800c652:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800c656:	8003      	strh	r3, [r0, #0]
 800c658:	8043      	strh	r3, [r0, #2]
 800c65a:	8084      	strh	r4, [r0, #4]
 800c65c:	80c2      	strh	r2, [r0, #6]
 800c65e:	e7f4      	b.n	800c64a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800c660 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800c660:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c664:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800c668:	b087      	sub	sp, #28
 800c66a:	4604      	mov	r4, r0
 800c66c:	4689      	mov	r9, r1
 800c66e:	b363      	cbz	r3, 800c6ca <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800c670:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c672:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c676:	429a      	cmp	r2, r3
 800c678:	d027      	beq.n	800c6ca <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800c67a:	ad06      	add	r5, sp, #24
 800c67c:	2700      	movs	r7, #0
 800c67e:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800c682:	4628      	mov	r0, r5
 800c684:	f004 f994 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c688:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c68c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c690:	6823      	ldr	r3, [r4, #0]
 800c692:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c696:	a904      	add	r1, sp, #16
 800c698:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c69a:	9704      	str	r7, [sp, #16]
 800c69c:	4620      	mov	r0, r4
 800c69e:	4798      	blx	r3
 800c6a0:	f7f4 fe30 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800c6a4:	6803      	ldr	r3, [r0, #0]
 800c6a6:	4606      	mov	r6, r0
 800c6a8:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800c6ac:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800c6ae:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c6b2:	4628      	mov	r0, r5
 800c6b4:	f004 fa84 	bl	8010bc0 <_ZNK8touchgfx6Bitmap7getDataEv>
 800c6b8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c6bc:	9300      	str	r3, [sp, #0]
 800c6be:	4601      	mov	r1, r0
 800c6c0:	9701      	str	r7, [sp, #4]
 800c6c2:	464b      	mov	r3, r9
 800c6c4:	aa04      	add	r2, sp, #16
 800c6c6:	4630      	mov	r0, r6
 800c6c8:	47c0      	blx	r8
 800c6ca:	b007      	add	sp, #28
 800c6cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c6d0 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800c6d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c6d2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c6d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c6da:	6803      	ldr	r3, [r0, #0]
 800c6dc:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800c6e0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c6e4:	460d      	mov	r5, r1
 800c6e6:	2100      	movs	r1, #0
 800c6e8:	4604      	mov	r4, r0
 800c6ea:	6a1b      	ldr	r3, [r3, #32]
 800c6ec:	9100      	str	r1, [sp, #0]
 800c6ee:	4669      	mov	r1, sp
 800c6f0:	4798      	blx	r3
 800c6f2:	4621      	mov	r1, r4
 800c6f4:	a802      	add	r0, sp, #8
 800c6f6:	f002 faff 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c6fa:	f7f4 fe03 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800c6fe:	6803      	ldr	r3, [r0, #0]
 800c700:	aa02      	add	r2, sp, #8
 800c702:	695e      	ldr	r6, [r3, #20]
 800c704:	4669      	mov	r1, sp
 800c706:	462b      	mov	r3, r5
 800c708:	47b0      	blx	r6
 800c70a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c70e:	2800      	cmp	r0, #0
 800c710:	bf08      	it	eq
 800c712:	461d      	moveq	r5, r3
 800c714:	84e5      	strh	r5, [r4, #38]	; 0x26
 800c716:	b004      	add	sp, #16
 800c718:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c71c <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800c71c:	2200      	movs	r2, #0
 800c71e:	8082      	strh	r2, [r0, #4]
 800c720:	80c2      	strh	r2, [r0, #6]
 800c722:	8102      	strh	r2, [r0, #8]
 800c724:	8142      	strh	r2, [r0, #10]
 800c726:	8182      	strh	r2, [r0, #12]
 800c728:	81c2      	strh	r2, [r0, #14]
 800c72a:	8202      	strh	r2, [r0, #16]
 800c72c:	8242      	strh	r2, [r0, #18]
 800c72e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c732:	61c2      	str	r2, [r0, #28]
 800c734:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c738:	2201      	movs	r2, #1
 800c73a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800c73e:	4a04      	ldr	r2, [pc, #16]	; (800c750 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x34>)
 800c740:	6002      	str	r2, [r0, #0]
 800c742:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c746:	84c2      	strh	r2, [r0, #38]	; 0x26
 800c748:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800c74c:	4770      	bx	lr
 800c74e:	bf00      	nop
 800c750:	0801fc48 	.word	0x0801fc48

0800c754 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800c754:	2200      	movs	r2, #0
 800c756:	8002      	strh	r2, [r0, #0]
 800c758:	8042      	strh	r2, [r0, #2]
 800c75a:	8082      	strh	r2, [r0, #4]
 800c75c:	80c2      	strh	r2, [r0, #6]
 800c75e:	4770      	bx	lr

0800c760 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800c760:	b570      	push	{r4, r5, r6, lr}
 800c762:	6803      	ldr	r3, [r0, #0]
 800c764:	4604      	mov	r4, r0
 800c766:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c768:	4615      	mov	r5, r2
 800c76a:	4798      	blx	r3
 800c76c:	6823      	ldr	r3, [r4, #0]
 800c76e:	4629      	mov	r1, r5
 800c770:	4620      	mov	r0, r4
 800c772:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c778:	4718      	bx	r3

0800c77a <_ZN8touchgfx8TextAreaD1Ev>:
 800c77a:	4770      	bx	lr

0800c77c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800c77c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c77e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c780:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c784:	4299      	cmp	r1, r3
 800c786:	d029      	beq.n	800c7dc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800c788:	4b15      	ldr	r3, [pc, #84]	; (800c7e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800c78a:	681b      	ldr	r3, [r3, #0]
 800c78c:	b92b      	cbnz	r3, 800c79a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800c78e:	4b15      	ldr	r3, [pc, #84]	; (800c7e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800c790:	4a15      	ldr	r2, [pc, #84]	; (800c7e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800c792:	21b1      	movs	r1, #177	; 0xb1
 800c794:	4815      	ldr	r0, [pc, #84]	; (800c7ec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800c796:	f00f fdf1 	bl	801c37c <__assert_func>
 800c79a:	4a15      	ldr	r2, [pc, #84]	; (800c7f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800c79c:	8812      	ldrh	r2, [r2, #0]
 800c79e:	428a      	cmp	r2, r1
 800c7a0:	d803      	bhi.n	800c7aa <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800c7a2:	4b14      	ldr	r3, [pc, #80]	; (800c7f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800c7a4:	4a10      	ldr	r2, [pc, #64]	; (800c7e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800c7a6:	21b2      	movs	r1, #178	; 0xb2
 800c7a8:	e7f4      	b.n	800c794 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800c7aa:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800c7ae:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800c7b2:	4b11      	ldr	r3, [pc, #68]	; (800c7f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800c7b4:	7854      	ldrb	r4, [r2, #1]
 800c7b6:	681b      	ldr	r3, [r3, #0]
 800c7b8:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800c7bc:	682b      	ldr	r3, [r5, #0]
 800c7be:	69de      	ldr	r6, [r3, #28]
 800c7c0:	4b0e      	ldr	r3, [pc, #56]	; (800c7fc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800c7c2:	6818      	ldr	r0, [r3, #0]
 800c7c4:	f7f7 f876 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800c7c8:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800c7cc:	2300      	movs	r3, #0
 800c7ce:	4602      	mov	r2, r0
 800c7d0:	9300      	str	r3, [sp, #0]
 800c7d2:	4621      	mov	r1, r4
 800c7d4:	4628      	mov	r0, r5
 800c7d6:	47b0      	blx	r6
 800c7d8:	b002      	add	sp, #8
 800c7da:	bd70      	pop	{r4, r5, r6, pc}
 800c7dc:	2000      	movs	r0, #0
 800c7de:	e7fb      	b.n	800c7d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800c7e0:	20012528 	.word	0x20012528
 800c7e4:	0801e46c 	.word	0x0801e46c
 800c7e8:	0801fd2c 	.word	0x0801fd2c
 800c7ec:	0801e4cc 	.word	0x0801e4cc
 800c7f0:	2001252c 	.word	0x2001252c
 800c7f4:	0801e4f5 	.word	0x0801e4f5
 800c7f8:	20012530 	.word	0x20012530
 800c7fc:	20012534 	.word	0x20012534

0800c800 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800c800:	b570      	push	{r4, r5, r6, lr}
 800c802:	6803      	ldr	r3, [r0, #0]
 800c804:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c806:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800c808:	4b11      	ldr	r3, [pc, #68]	; (800c850 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800c80a:	681b      	ldr	r3, [r3, #0]
 800c80c:	4604      	mov	r4, r0
 800c80e:	b28d      	uxth	r5, r1
 800c810:	b92b      	cbnz	r3, 800c81e <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800c812:	4b10      	ldr	r3, [pc, #64]	; (800c854 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800c814:	4a10      	ldr	r2, [pc, #64]	; (800c858 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800c816:	21b1      	movs	r1, #177	; 0xb1
 800c818:	4810      	ldr	r0, [pc, #64]	; (800c85c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800c81a:	f00f fdaf 	bl	801c37c <__assert_func>
 800c81e:	4910      	ldr	r1, [pc, #64]	; (800c860 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800c820:	8809      	ldrh	r1, [r1, #0]
 800c822:	4291      	cmp	r1, r2
 800c824:	d803      	bhi.n	800c82e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800c826:	4b0f      	ldr	r3, [pc, #60]	; (800c864 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800c828:	4a0b      	ldr	r2, [pc, #44]	; (800c858 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800c82a:	21b2      	movs	r1, #178	; 0xb2
 800c82c:	e7f4      	b.n	800c818 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800c82e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800c832:	4b0d      	ldr	r3, [pc, #52]	; (800c868 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800c834:	681b      	ldr	r3, [r3, #0]
 800c836:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c83a:	6803      	ldr	r3, [r0, #0]
 800c83c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c83e:	4798      	blx	r3
 800c840:	1a29      	subs	r1, r5, r0
 800c842:	4633      	mov	r3, r6
 800c844:	4620      	mov	r0, r4
 800c846:	b209      	sxth	r1, r1
 800c848:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c84c:	4718      	bx	r3
 800c84e:	bf00      	nop
 800c850:	20012528 	.word	0x20012528
 800c854:	0801e46c 	.word	0x0801e46c
 800c858:	0801fd2c 	.word	0x0801fd2c
 800c85c:	0801e4cc 	.word	0x0801e4cc
 800c860:	2001252c 	.word	0x2001252c
 800c864:	0801e4f5 	.word	0x0801e4f5
 800c868:	20012530 	.word	0x20012530

0800c86c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800c86c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c870:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800c872:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c876:	4293      	cmp	r3, r2
 800c878:	b08c      	sub	sp, #48	; 0x30
 800c87a:	4604      	mov	r4, r0
 800c87c:	4688      	mov	r8, r1
 800c87e:	d05f      	beq.n	800c940 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800c880:	4e31      	ldr	r6, [pc, #196]	; (800c948 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800c882:	6832      	ldr	r2, [r6, #0]
 800c884:	b92a      	cbnz	r2, 800c892 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800c886:	4b31      	ldr	r3, [pc, #196]	; (800c94c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800c888:	4a31      	ldr	r2, [pc, #196]	; (800c950 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800c88a:	21b1      	movs	r1, #177	; 0xb1
 800c88c:	4831      	ldr	r0, [pc, #196]	; (800c954 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800c88e:	f00f fd75 	bl	801c37c <__assert_func>
 800c892:	4d31      	ldr	r5, [pc, #196]	; (800c958 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800c894:	8829      	ldrh	r1, [r5, #0]
 800c896:	4299      	cmp	r1, r3
 800c898:	d803      	bhi.n	800c8a2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800c89a:	4b30      	ldr	r3, [pc, #192]	; (800c95c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800c89c:	4a2c      	ldr	r2, [pc, #176]	; (800c950 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800c89e:	21b2      	movs	r1, #178	; 0xb2
 800c8a0:	e7f4      	b.n	800c88c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800c8a2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800c8a6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c8aa:	4b2d      	ldr	r3, [pc, #180]	; (800c960 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800c8ac:	681b      	ldr	r3, [r3, #0]
 800c8ae:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800c8b2:	2a00      	cmp	r2, #0
 800c8b4:	d044      	beq.n	800c940 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800c8b6:	784b      	ldrb	r3, [r1, #1]
 800c8b8:	9207      	str	r2, [sp, #28]
 800c8ba:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800c8be:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c8c2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800c8c6:	4b27      	ldr	r3, [pc, #156]	; (800c964 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800c8c8:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800c8cc:	681b      	ldr	r3, [r3, #0]
 800c8ce:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800c8d2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c8d6:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800c8da:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800c8de:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800c8e2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800c8e4:	9009      	str	r0, [sp, #36]	; 0x24
 800c8e6:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800c8ea:	f88d 9020 	strb.w	r9, [sp, #32]
 800c8ee:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800c8f2:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800c8f6:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800c8fa:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800c8fe:	b10a      	cbz	r2, 800c904 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800c900:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800c902:	b907      	cbnz	r7, 800c906 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800c904:	689f      	ldr	r7, [r3, #8]
 800c906:	f10d 0914 	add.w	r9, sp, #20
 800c90a:	4621      	mov	r1, r4
 800c90c:	4648      	mov	r0, r9
 800c90e:	f002 f9f3 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c912:	6833      	ldr	r3, [r6, #0]
 800c914:	2b00      	cmp	r3, #0
 800c916:	d0b6      	beq.n	800c886 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800c918:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c91a:	882b      	ldrh	r3, [r5, #0]
 800c91c:	428b      	cmp	r3, r1
 800c91e:	d9bc      	bls.n	800c89a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800c920:	4b11      	ldr	r3, [pc, #68]	; (800c968 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800c922:	6818      	ldr	r0, [r3, #0]
 800c924:	f7f6 ffc6 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800c928:	2300      	movs	r3, #0
 800c92a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c92e:	ab07      	add	r3, sp, #28
 800c930:	9001      	str	r0, [sp, #4]
 800c932:	9300      	str	r3, [sp, #0]
 800c934:	e899 0006 	ldmia.w	r9, {r1, r2}
 800c938:	4643      	mov	r3, r8
 800c93a:	4638      	mov	r0, r7
 800c93c:	f7f6 ff6e 	bl	800381c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c940:	b00c      	add	sp, #48	; 0x30
 800c942:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c946:	bf00      	nop
 800c948:	20012528 	.word	0x20012528
 800c94c:	0801e46c 	.word	0x0801e46c
 800c950:	0801fd2c 	.word	0x0801fd2c
 800c954:	0801e4cc 	.word	0x0801e4cc
 800c958:	2001252c 	.word	0x2001252c
 800c95c:	0801e4f5 	.word	0x0801e4f5
 800c960:	20012530 	.word	0x20012530
 800c964:	200124b8 	.word	0x200124b8
 800c968:	20012534 	.word	0x20012534

0800c96c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800c96c:	b40e      	push	{r1, r2, r3}
 800c96e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c972:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800c974:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c978:	4293      	cmp	r3, r2
 800c97a:	b09b      	sub	sp, #108	; 0x6c
 800c97c:	4604      	mov	r4, r0
 800c97e:	d061      	beq.n	800ca44 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800c980:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800ca58 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800c984:	aa24      	add	r2, sp, #144	; 0x90
 800c986:	9203      	str	r2, [sp, #12]
 800c988:	f8da 2000 	ldr.w	r2, [sl]
 800c98c:	b92a      	cbnz	r2, 800c99a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800c98e:	4b2e      	ldr	r3, [pc, #184]	; (800ca48 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800c990:	4a2e      	ldr	r2, [pc, #184]	; (800ca4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800c992:	21b1      	movs	r1, #177	; 0xb1
 800c994:	482e      	ldr	r0, [pc, #184]	; (800ca50 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800c996:	f00f fcf1 	bl	801c37c <__assert_func>
 800c99a:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800ca5c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800c99e:	f8b8 1000 	ldrh.w	r1, [r8]
 800c9a2:	4299      	cmp	r1, r3
 800c9a4:	d803      	bhi.n	800c9ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800c9a6:	4b2b      	ldr	r3, [pc, #172]	; (800ca54 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800c9a8:	4a28      	ldr	r2, [pc, #160]	; (800ca4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800c9aa:	21b2      	movs	r1, #178	; 0xb2
 800c9ac:	e7f2      	b.n	800c994 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800c9ae:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800ca60 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800c9b2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c9b6:	f8d9 3000 	ldr.w	r3, [r9]
 800c9ba:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800c9be:	683b      	ldr	r3, [r7, #0]
 800c9c0:	4638      	mov	r0, r7
 800c9c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c9c4:	4798      	blx	r3
 800c9c6:	4606      	mov	r6, r0
 800c9c8:	b205      	sxth	r5, r0
 800c9ca:	a804      	add	r0, sp, #16
 800c9cc:	f002 fe23 	bl	800f616 <_ZN8touchgfx12TextProviderC1Ev>
 800c9d0:	683b      	ldr	r3, [r7, #0]
 800c9d2:	4638      	mov	r0, r7
 800c9d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c9d6:	4798      	blx	r3
 800c9d8:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800c9da:	9a03      	ldr	r2, [sp, #12]
 800c9dc:	4603      	mov	r3, r0
 800c9de:	a804      	add	r0, sp, #16
 800c9e0:	f002 fe5e 	bl	800f6a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c9e4:	f8da 3000 	ldr.w	r3, [sl]
 800c9e8:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800c9ec:	2b00      	cmp	r3, #0
 800c9ee:	d0ce      	beq.n	800c98e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800c9f0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800c9f2:	f8b8 0000 	ldrh.w	r0, [r8]
 800c9f6:	4290      	cmp	r0, r2
 800c9f8:	d9d5      	bls.n	800c9a6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800c9fa:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800c9fe:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ca02:	787a      	ldrb	r2, [r7, #1]
 800ca04:	f8d9 3000 	ldr.w	r3, [r9]
 800ca08:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800ca0c:	9700      	str	r7, [sp, #0]
 800ca0e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ca12:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ca16:	a804      	add	r0, sp, #16
 800ca18:	f000 ff98 	bl	800d94c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ca1c:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ca20:	18a9      	adds	r1, r5, r2
 800ca22:	2900      	cmp	r1, #0
 800ca24:	b203      	sxth	r3, r0
 800ca26:	dd0b      	ble.n	800ca40 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800ca28:	3b01      	subs	r3, #1
 800ca2a:	fb13 f302 	smulbb	r3, r3, r2
 800ca2e:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ca32:	b21d      	sxth	r5, r3
 800ca34:	4628      	mov	r0, r5
 800ca36:	b01b      	add	sp, #108	; 0x6c
 800ca38:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca3c:	b003      	add	sp, #12
 800ca3e:	4770      	bx	lr
 800ca40:	2b00      	cmp	r3, #0
 800ca42:	dcf7      	bgt.n	800ca34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ca44:	2500      	movs	r5, #0
 800ca46:	e7f5      	b.n	800ca34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ca48:	0801e46c 	.word	0x0801e46c
 800ca4c:	0801fd2c 	.word	0x0801fd2c
 800ca50:	0801e4cc 	.word	0x0801e4cc
 800ca54:	0801e4f5 	.word	0x0801e4f5
 800ca58:	20012528 	.word	0x20012528
 800ca5c:	2001252c 	.word	0x2001252c
 800ca60:	20012530 	.word	0x20012530

0800ca64 <_ZN8touchgfx8TextAreaD0Ev>:
 800ca64:	b510      	push	{r4, lr}
 800ca66:	213c      	movs	r1, #60	; 0x3c
 800ca68:	4604      	mov	r4, r0
 800ca6a:	f00f fc43 	bl	801c2f4 <_ZdlPvj>
 800ca6e:	4620      	mov	r0, r4
 800ca70:	bd10      	pop	{r4, pc}
	...

0800ca74 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800ca74:	b570      	push	{r4, r5, r6, lr}
 800ca76:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ca78:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ca7c:	4299      	cmp	r1, r3
 800ca7e:	4604      	mov	r4, r0
 800ca80:	d01e      	beq.n	800cac0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800ca82:	6803      	ldr	r3, [r0, #0]
 800ca84:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800ca86:	4b0f      	ldr	r3, [pc, #60]	; (800cac4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800ca88:	681b      	ldr	r3, [r3, #0]
 800ca8a:	b92b      	cbnz	r3, 800ca98 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800ca8c:	4b0e      	ldr	r3, [pc, #56]	; (800cac8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800ca8e:	4a0f      	ldr	r2, [pc, #60]	; (800cacc <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800ca90:	21b1      	movs	r1, #177	; 0xb1
 800ca92:	480f      	ldr	r0, [pc, #60]	; (800cad0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800ca94:	f00f fc72 	bl	801c37c <__assert_func>
 800ca98:	4b0e      	ldr	r3, [pc, #56]	; (800cad4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800ca9a:	881b      	ldrh	r3, [r3, #0]
 800ca9c:	428b      	cmp	r3, r1
 800ca9e:	d803      	bhi.n	800caa8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800caa0:	4b0d      	ldr	r3, [pc, #52]	; (800cad8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800caa2:	4a0a      	ldr	r2, [pc, #40]	; (800cacc <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800caa4:	21b2      	movs	r1, #178	; 0xb2
 800caa6:	e7f4      	b.n	800ca92 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800caa8:	4b0c      	ldr	r3, [pc, #48]	; (800cadc <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800caaa:	6818      	ldr	r0, [r3, #0]
 800caac:	f7f6 ff02 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800cab0:	2300      	movs	r3, #0
 800cab2:	4601      	mov	r1, r0
 800cab4:	46ac      	mov	ip, r5
 800cab6:	4620      	mov	r0, r4
 800cab8:	461a      	mov	r2, r3
 800caba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cabe:	4760      	bx	ip
 800cac0:	2000      	movs	r0, #0
 800cac2:	bd70      	pop	{r4, r5, r6, pc}
 800cac4:	20012528 	.word	0x20012528
 800cac8:	0801e46c 	.word	0x0801e46c
 800cacc:	0801fd2c 	.word	0x0801fd2c
 800cad0:	0801e4cc 	.word	0x0801e4cc
 800cad4:	2001252c 	.word	0x2001252c
 800cad8:	0801e4f5 	.word	0x0801e4f5
 800cadc:	20012534 	.word	0x20012534

0800cae0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800cae0:	b570      	push	{r4, r5, r6, lr}
 800cae2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800cae4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cae8:	429a      	cmp	r2, r3
 800caea:	4604      	mov	r4, r0
 800caec:	d021      	beq.n	800cb32 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800caee:	6803      	ldr	r3, [r0, #0]
 800caf0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800caf2:	4798      	blx	r3
 800caf4:	6823      	ldr	r3, [r4, #0]
 800caf6:	4605      	mov	r5, r0
 800caf8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800cafa:	4620      	mov	r0, r4
 800cafc:	4798      	blx	r3
 800cafe:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cb02:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cb06:	6823      	ldr	r3, [r4, #0]
 800cb08:	4606      	mov	r6, r0
 800cb0a:	b22d      	sxth	r5, r5
 800cb0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cb0e:	d109      	bne.n	800cb24 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800cb10:	4629      	mov	r1, r5
 800cb12:	4620      	mov	r0, r4
 800cb14:	4798      	blx	r3
 800cb16:	6823      	ldr	r3, [r4, #0]
 800cb18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb1a:	4631      	mov	r1, r6
 800cb1c:	4620      	mov	r0, r4
 800cb1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb22:	4718      	bx	r3
 800cb24:	4601      	mov	r1, r0
 800cb26:	4620      	mov	r0, r4
 800cb28:	4798      	blx	r3
 800cb2a:	6823      	ldr	r3, [r4, #0]
 800cb2c:	4629      	mov	r1, r5
 800cb2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb30:	e7f4      	b.n	800cb1c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800cb32:	bd70      	pop	{r4, r5, r6, pc}

0800cb34 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800cb34:	888a      	ldrh	r2, [r1, #4]
 800cb36:	8582      	strh	r2, [r0, #44]	; 0x2c
 800cb38:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800cb3c:	b922      	cbnz	r2, 800cb48 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800cb3e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800cb42:	b90b      	cbnz	r3, 800cb48 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800cb44:	f7ff bfcc 	b.w	800cae0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800cb48:	4770      	bx	lr

0800cb4a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800cb4a:	2300      	movs	r3, #0
 800cb4c:	8003      	strh	r3, [r0, #0]
 800cb4e:	8043      	strh	r3, [r0, #2]
 800cb50:	8083      	strh	r3, [r0, #4]
 800cb52:	80c3      	strh	r3, [r0, #6]
 800cb54:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800cb58:	b91b      	cbnz	r3, 800cb62 <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800cb5a:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800cb5e:	2bff      	cmp	r3, #255	; 0xff
 800cb60:	d103      	bne.n	800cb6a <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800cb62:	890b      	ldrh	r3, [r1, #8]
 800cb64:	8083      	strh	r3, [r0, #4]
 800cb66:	894b      	ldrh	r3, [r1, #10]
 800cb68:	80c3      	strh	r3, [r0, #6]
 800cb6a:	4770      	bx	lr

0800cb6c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800cb6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cb6e:	4604      	mov	r4, r0
 800cb70:	6808      	ldr	r0, [r1, #0]
 800cb72:	6849      	ldr	r1, [r1, #4]
 800cb74:	466b      	mov	r3, sp
 800cb76:	c303      	stmia	r3!, {r0, r1}
 800cb78:	6823      	ldr	r3, [r4, #0]
 800cb7a:	4669      	mov	r1, sp
 800cb7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb7e:	4620      	mov	r0, r4
 800cb80:	4798      	blx	r3
 800cb82:	4b08      	ldr	r3, [pc, #32]	; (800cba4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800cb84:	681b      	ldr	r3, [r3, #0]
 800cb86:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800cb8a:	b10a      	cbz	r2, 800cb90 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800cb8c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800cb8e:	b900      	cbnz	r0, 800cb92 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800cb90:	6898      	ldr	r0, [r3, #8]
 800cb92:	6803      	ldr	r3, [r0, #0]
 800cb94:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800cb96:	699d      	ldr	r5, [r3, #24]
 800cb98:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800cb9c:	4669      	mov	r1, sp
 800cb9e:	47a8      	blx	r5
 800cba0:	b003      	add	sp, #12
 800cba2:	bd30      	pop	{r4, r5, pc}
 800cba4:	200124b8 	.word	0x200124b8

0800cba8 <_ZN8touchgfx3BoxD1Ev>:
 800cba8:	4770      	bx	lr

0800cbaa <_ZN8touchgfx3BoxD0Ev>:
 800cbaa:	b510      	push	{r4, lr}
 800cbac:	2130      	movs	r1, #48	; 0x30
 800cbae:	4604      	mov	r4, r0
 800cbb0:	f00f fba0 	bl	801c2f4 <_ZdlPvj>
 800cbb4:	4620      	mov	r0, r4
 800cbb6:	bd10      	pop	{r4, pc}

0800cbb8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800cbb8:	b538      	push	{r3, r4, r5, lr}
 800cbba:	880b      	ldrh	r3, [r1, #0]
 800cbbc:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800cbbe:	4605      	mov	r5, r0
 800cbc0:	8813      	ldrh	r3, [r2, #0]
 800cbc2:	f825 3f30 	strh.w	r3, [r5, #48]!
 800cbc6:	4604      	mov	r4, r0
 800cbc8:	4628      	mov	r0, r5
 800cbca:	f003 fef1 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cbce:	8120      	strh	r0, [r4, #8]
 800cbd0:	4628      	mov	r0, r5
 800cbd2:	f003 ff27 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cbd6:	8160      	strh	r0, [r4, #10]
 800cbd8:	bd38      	pop	{r3, r4, r5, pc}

0800cbda <_ZNK8touchgfx6Button12getSolidRectEv>:
 800cbda:	b510      	push	{r4, lr}
 800cbdc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800cbe0:	2bff      	cmp	r3, #255	; 0xff
 800cbe2:	4604      	mov	r4, r0
 800cbe4:	d006      	beq.n	800cbf4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800cbe6:	2300      	movs	r3, #0
 800cbe8:	8003      	strh	r3, [r0, #0]
 800cbea:	8043      	strh	r3, [r0, #2]
 800cbec:	8083      	strh	r3, [r0, #4]
 800cbee:	80c3      	strh	r3, [r0, #6]
 800cbf0:	4620      	mov	r0, r4
 800cbf2:	bd10      	pop	{r4, pc}
 800cbf4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800cbf8:	b11b      	cbz	r3, 800cc02 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800cbfa:	3130      	adds	r1, #48	; 0x30
 800cbfc:	f003 ff4c 	bl	8010a98 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800cc00:	e7f6      	b.n	800cbf0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800cc02:	312e      	adds	r1, #46	; 0x2e
 800cc04:	e7fa      	b.n	800cbfc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800cc08 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800cc08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc0c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cc10:	b08a      	sub	sp, #40	; 0x28
 800cc12:	4604      	mov	r4, r0
 800cc14:	4688      	mov	r8, r1
 800cc16:	2b00      	cmp	r3, #0
 800cc18:	d044      	beq.n	800cca4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800cc1a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800cc1c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800cc20:	a805      	add	r0, sp, #20
 800cc22:	f003 fec5 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cc26:	4605      	mov	r5, r0
 800cc28:	b206      	sxth	r6, r0
 800cc2a:	a805      	add	r0, sp, #20
 800cc2c:	f003 fefa 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cc30:	f9b8 2000 	ldrsh.w	r2, [r8]
 800cc34:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800cc38:	4417      	add	r7, r2
 800cc3a:	b2bf      	uxth	r7, r7
 800cc3c:	2300      	movs	r3, #0
 800cc3e:	fa0f fe87 	sxth.w	lr, r7
 800cc42:	459e      	cmp	lr, r3
 800cc44:	fa0f fc80 	sxth.w	ip, r0
 800cc48:	9306      	str	r3, [sp, #24]
 800cc4a:	dd2d      	ble.n	800cca8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800cc4c:	4296      	cmp	r6, r2
 800cc4e:	dd2b      	ble.n	800cca8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800cc50:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800cc54:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800cc58:	4419      	add	r1, r3
 800cc5a:	b289      	uxth	r1, r1
 800cc5c:	fa0f f881 	sxth.w	r8, r1
 800cc60:	f1b8 0f00 	cmp.w	r8, #0
 800cc64:	dd20      	ble.n	800cca8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800cc66:	459c      	cmp	ip, r3
 800cc68:	dd1e      	ble.n	800cca8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800cc6a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800cc6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800cc72:	4576      	cmp	r6, lr
 800cc74:	bfa8      	it	ge
 800cc76:	463d      	movge	r5, r7
 800cc78:	45c4      	cmp	ip, r8
 800cc7a:	bfa8      	it	ge
 800cc7c:	4608      	movge	r0, r1
 800cc7e:	1aad      	subs	r5, r5, r2
 800cc80:	1ac0      	subs	r0, r0, r3
 800cc82:	f8ad 501c 	strh.w	r5, [sp, #28]
 800cc86:	f8ad 001e 	strh.w	r0, [sp, #30]
 800cc8a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800cc8e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cc92:	4b1f      	ldr	r3, [pc, #124]	; (800cd10 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800cc94:	681b      	ldr	r3, [r3, #0]
 800cc96:	b953      	cbnz	r3, 800ccae <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800cc98:	4b1e      	ldr	r3, [pc, #120]	; (800cd14 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800cc9a:	4a1f      	ldr	r2, [pc, #124]	; (800cd18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800cc9c:	481f      	ldr	r0, [pc, #124]	; (800cd1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800cc9e:	2189      	movs	r1, #137	; 0x89
 800cca0:	f00f fb6c 	bl	801c37c <__assert_func>
 800cca4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800cca6:	e7b9      	b.n	800cc1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800cca8:	2300      	movs	r3, #0
 800ccaa:	9307      	str	r3, [sp, #28]
 800ccac:	e7f1      	b.n	800cc92 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800ccae:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ccb2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ccb6:	429a      	cmp	r2, r3
 800ccb8:	d026      	beq.n	800cd08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ccba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ccbe:	2b00      	cmp	r3, #0
 800ccc0:	dd22      	ble.n	800cd08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ccc2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ccc6:	2b00      	cmp	r3, #0
 800ccc8:	dd1e      	ble.n	800cd08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ccca:	2300      	movs	r3, #0
 800cccc:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ccd0:	6823      	ldr	r3, [r4, #0]
 800ccd2:	a908      	add	r1, sp, #32
 800ccd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ccd6:	4620      	mov	r0, r4
 800ccd8:	4798      	blx	r3
 800ccda:	4b11      	ldr	r3, [pc, #68]	; (800cd20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800ccdc:	681b      	ldr	r3, [r3, #0]
 800ccde:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800cce2:	b10a      	cbz	r2, 800cce8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800cce4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800cce6:	b900      	cbnz	r0, 800ccea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800cce8:	6898      	ldr	r0, [r3, #8]
 800ccea:	6801      	ldr	r1, [r0, #0]
 800ccec:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800ccf0:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800ccf4:	2501      	movs	r5, #1
 800ccf6:	9502      	str	r5, [sp, #8]
 800ccf8:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800ccfc:	9401      	str	r4, [sp, #4]
 800ccfe:	ac06      	add	r4, sp, #24
 800cd00:	9400      	str	r4, [sp, #0]
 800cd02:	688c      	ldr	r4, [r1, #8]
 800cd04:	a905      	add	r1, sp, #20
 800cd06:	47a0      	blx	r4
 800cd08:	b00a      	add	sp, #40	; 0x28
 800cd0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd0e:	bf00      	nop
 800cd10:	20012560 	.word	0x20012560
 800cd14:	0801fdc4 	.word	0x0801fdc4
 800cd18:	0801fe26 	.word	0x0801fe26
 800cd1c:	0801fe00 	.word	0x0801fe00
 800cd20:	200124b8 	.word	0x200124b8

0800cd24 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800cd24:	4770      	bx	lr
	...

0800cd28 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800cd28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cd2a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800cd2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cd30:	4299      	cmp	r1, r3
 800cd32:	4606      	mov	r6, r0
 800cd34:	d02a      	beq.n	800cd8c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800cd36:	4b16      	ldr	r3, [pc, #88]	; (800cd90 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800cd38:	681b      	ldr	r3, [r3, #0]
 800cd3a:	b92b      	cbnz	r3, 800cd48 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800cd3c:	4b15      	ldr	r3, [pc, #84]	; (800cd94 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800cd3e:	4a16      	ldr	r2, [pc, #88]	; (800cd98 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800cd40:	21b1      	movs	r1, #177	; 0xb1
 800cd42:	4816      	ldr	r0, [pc, #88]	; (800cd9c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800cd44:	f00f fb1a 	bl	801c37c <__assert_func>
 800cd48:	4a15      	ldr	r2, [pc, #84]	; (800cda0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800cd4a:	8812      	ldrh	r2, [r2, #0]
 800cd4c:	428a      	cmp	r2, r1
 800cd4e:	d803      	bhi.n	800cd58 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800cd50:	4b14      	ldr	r3, [pc, #80]	; (800cda4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800cd52:	4a11      	ldr	r2, [pc, #68]	; (800cd98 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800cd54:	21b2      	movs	r1, #178	; 0xb2
 800cd56:	e7f4      	b.n	800cd42 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800cd58:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800cd5c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800cd60:	4b11      	ldr	r3, [pc, #68]	; (800cda8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800cd62:	7854      	ldrb	r4, [r2, #1]
 800cd64:	681b      	ldr	r3, [r3, #0]
 800cd66:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800cd6a:	682b      	ldr	r3, [r5, #0]
 800cd6c:	69df      	ldr	r7, [r3, #28]
 800cd6e:	4b0f      	ldr	r3, [pc, #60]	; (800cdac <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800cd70:	6818      	ldr	r0, [r3, #0]
 800cd72:	f7f6 fd9f 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800cd76:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800cd7a:	2300      	movs	r3, #0
 800cd7c:	9300      	str	r3, [sp, #0]
 800cd7e:	4602      	mov	r2, r0
 800cd80:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800cd82:	4621      	mov	r1, r4
 800cd84:	4628      	mov	r0, r5
 800cd86:	47b8      	blx	r7
 800cd88:	b003      	add	sp, #12
 800cd8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd8c:	2000      	movs	r0, #0
 800cd8e:	e7fb      	b.n	800cd88 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800cd90:	20012528 	.word	0x20012528
 800cd94:	0801e46c 	.word	0x0801e46c
 800cd98:	0801fed8 	.word	0x0801fed8
 800cd9c:	0801e4cc 	.word	0x0801e4cc
 800cda0:	2001252c 	.word	0x2001252c
 800cda4:	0801e4f5 	.word	0x0801e4f5
 800cda8:	20012530 	.word	0x20012530
 800cdac:	20012534 	.word	0x20012534

0800cdb0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800cdb0:	b570      	push	{r4, r5, r6, lr}
 800cdb2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800cdb4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cdb8:	4299      	cmp	r1, r3
 800cdba:	4604      	mov	r4, r0
 800cdbc:	d01e      	beq.n	800cdfc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800cdbe:	6803      	ldr	r3, [r0, #0]
 800cdc0:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800cdc2:	4b0f      	ldr	r3, [pc, #60]	; (800ce00 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800cdc4:	681b      	ldr	r3, [r3, #0]
 800cdc6:	b92b      	cbnz	r3, 800cdd4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800cdc8:	4b0e      	ldr	r3, [pc, #56]	; (800ce04 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800cdca:	4a0f      	ldr	r2, [pc, #60]	; (800ce08 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800cdcc:	21b1      	movs	r1, #177	; 0xb1
 800cdce:	480f      	ldr	r0, [pc, #60]	; (800ce0c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800cdd0:	f00f fad4 	bl	801c37c <__assert_func>
 800cdd4:	4b0e      	ldr	r3, [pc, #56]	; (800ce10 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800cdd6:	881b      	ldrh	r3, [r3, #0]
 800cdd8:	428b      	cmp	r3, r1
 800cdda:	d803      	bhi.n	800cde4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800cddc:	4b0d      	ldr	r3, [pc, #52]	; (800ce14 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800cdde:	4a0a      	ldr	r2, [pc, #40]	; (800ce08 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800cde0:	21b2      	movs	r1, #178	; 0xb2
 800cde2:	e7f4      	b.n	800cdce <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800cde4:	4b0c      	ldr	r3, [pc, #48]	; (800ce18 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800cde6:	6818      	ldr	r0, [r3, #0]
 800cde8:	f7f6 fd64 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800cdec:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800cdee:	4601      	mov	r1, r0
 800cdf0:	46ac      	mov	ip, r5
 800cdf2:	4620      	mov	r0, r4
 800cdf4:	2300      	movs	r3, #0
 800cdf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdfa:	4760      	bx	ip
 800cdfc:	2000      	movs	r0, #0
 800cdfe:	bd70      	pop	{r4, r5, r6, pc}
 800ce00:	20012528 	.word	0x20012528
 800ce04:	0801e46c 	.word	0x0801e46c
 800ce08:	0801fed8 	.word	0x0801fed8
 800ce0c:	0801e4cc 	.word	0x0801e4cc
 800ce10:	2001252c 	.word	0x2001252c
 800ce14:	0801e4f5 	.word	0x0801e4f5
 800ce18:	20012534 	.word	0x20012534

0800ce1c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800ce1c:	b510      	push	{r4, lr}
 800ce1e:	2140      	movs	r1, #64	; 0x40
 800ce20:	4604      	mov	r4, r0
 800ce22:	f00f fa67 	bl	801c2f4 <_ZdlPvj>
 800ce26:	4620      	mov	r0, r4
 800ce28:	bd10      	pop	{r4, pc}
	...

0800ce2c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800ce2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ce30:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ce32:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ce36:	4293      	cmp	r3, r2
 800ce38:	b08c      	sub	sp, #48	; 0x30
 800ce3a:	4604      	mov	r4, r0
 800ce3c:	460e      	mov	r6, r1
 800ce3e:	d05d      	beq.n	800cefc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800ce40:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800cf20 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800ce44:	f8d8 2000 	ldr.w	r2, [r8]
 800ce48:	b92a      	cbnz	r2, 800ce56 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800ce4a:	4b2e      	ldr	r3, [pc, #184]	; (800cf04 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800ce4c:	4a2e      	ldr	r2, [pc, #184]	; (800cf08 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ce4e:	21b1      	movs	r1, #177	; 0xb1
 800ce50:	482e      	ldr	r0, [pc, #184]	; (800cf0c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800ce52:	f00f fa93 	bl	801c37c <__assert_func>
 800ce56:	4f2e      	ldr	r7, [pc, #184]	; (800cf10 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800ce58:	8839      	ldrh	r1, [r7, #0]
 800ce5a:	4299      	cmp	r1, r3
 800ce5c:	d803      	bhi.n	800ce66 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800ce5e:	4b2d      	ldr	r3, [pc, #180]	; (800cf14 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800ce60:	4a29      	ldr	r2, [pc, #164]	; (800cf08 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ce62:	21b2      	movs	r1, #178	; 0xb2
 800ce64:	e7f4      	b.n	800ce50 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800ce66:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ce6a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ce6e:	4b2a      	ldr	r3, [pc, #168]	; (800cf18 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800ce70:	681b      	ldr	r3, [r3, #0]
 800ce72:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800ce76:	2a00      	cmp	r2, #0
 800ce78:	d040      	beq.n	800cefc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800ce7a:	784b      	ldrb	r3, [r1, #1]
 800ce7c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800ce80:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800ce84:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800ce88:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800ce8c:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800ce90:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ce92:	9207      	str	r2, [sp, #28]
 800ce94:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800ce98:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ce9c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800cea0:	f88d 9020 	strb.w	r9, [sp, #32]
 800cea4:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800cea8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800ceac:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ceb0:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800ceb4:	9009      	str	r0, [sp, #36]	; 0x24
 800ceb6:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800ceba:	f7f4 fa23 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800cebe:	ad05      	add	r5, sp, #20
 800cec0:	4681      	mov	r9, r0
 800cec2:	4621      	mov	r1, r4
 800cec4:	4628      	mov	r0, r5
 800cec6:	f001 ff17 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ceca:	f8d8 3000 	ldr.w	r3, [r8]
 800cece:	2b00      	cmp	r3, #0
 800ced0:	d0bb      	beq.n	800ce4a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800ced2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ced4:	883b      	ldrh	r3, [r7, #0]
 800ced6:	428b      	cmp	r3, r1
 800ced8:	d9c1      	bls.n	800ce5e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800ceda:	4b10      	ldr	r3, [pc, #64]	; (800cf1c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800cedc:	6818      	ldr	r0, [r3, #0]
 800cede:	f7f6 fce9 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800cee2:	2300      	movs	r3, #0
 800cee4:	9303      	str	r3, [sp, #12]
 800cee6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800cee8:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800ceec:	ab07      	add	r3, sp, #28
 800ceee:	9300      	str	r3, [sp, #0]
 800cef0:	e895 0006 	ldmia.w	r5, {r1, r2}
 800cef4:	4633      	mov	r3, r6
 800cef6:	4648      	mov	r0, r9
 800cef8:	f7f6 fc90 	bl	800381c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800cefc:	b00c      	add	sp, #48	; 0x30
 800cefe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cf02:	bf00      	nop
 800cf04:	0801e46c 	.word	0x0801e46c
 800cf08:	0801fed8 	.word	0x0801fed8
 800cf0c:	0801e4cc 	.word	0x0801e4cc
 800cf10:	2001252c 	.word	0x2001252c
 800cf14:	0801e4f5 	.word	0x0801e4f5
 800cf18:	20012530 	.word	0x20012530
 800cf1c:	20012534 	.word	0x20012534
 800cf20:	20012528 	.word	0x20012528

0800cf24 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800cf24:	4770      	bx	lr

0800cf26 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800cf26:	b510      	push	{r4, lr}
 800cf28:	213c      	movs	r1, #60	; 0x3c
 800cf2a:	4604      	mov	r4, r0
 800cf2c:	f00f f9e2 	bl	801c2f4 <_ZdlPvj>
 800cf30:	4620      	mov	r0, r4
 800cf32:	bd10      	pop	{r4, pc}

0800cf34 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800cf34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf38:	461c      	mov	r4, r3
 800cf3a:	4606      	mov	r6, r0
 800cf3c:	9f06      	ldr	r7, [sp, #24]
 800cf3e:	f7ff fe3b 	bl	800cbb8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800cf42:	8823      	ldrh	r3, [r4, #0]
 800cf44:	86b3      	strh	r3, [r6, #52]	; 0x34
 800cf46:	883b      	ldrh	r3, [r7, #0]
 800cf48:	86f3      	strh	r3, [r6, #54]	; 0x36
 800cf4a:	4638      	mov	r0, r7
 800cf4c:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800cf50:	f003 fd2e 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cf54:	f04f 0802 	mov.w	r8, #2
 800cf58:	fb95 f5f8 	sdiv	r5, r5, r8
 800cf5c:	b2ad      	uxth	r5, r5
 800cf5e:	eba5 0050 	sub.w	r0, r5, r0, lsr #1
 800cf62:	8730      	strh	r0, [r6, #56]	; 0x38
 800cf64:	4638      	mov	r0, r7
 800cf66:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800cf6a:	fb94 f4f8 	sdiv	r4, r4, r8
 800cf6e:	f003 fd59 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cf72:	b2a4      	uxth	r4, r4
 800cf74:	eba4 0050 	sub.w	r0, r4, r0, lsr #1
 800cf78:	8770      	strh	r0, [r6, #58]	; 0x3a
 800cf7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800cf80 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800cf80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf84:	4604      	mov	r4, r0
 800cf86:	b08c      	sub	sp, #48	; 0x30
 800cf88:	460d      	mov	r5, r1
 800cf8a:	f7ff fe3d 	bl	800cc08 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800cf8e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800cf92:	b33b      	cbz	r3, 800cfe4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x64>
 800cf94:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf96:	f8ad 3014 	strh.w	r3, [sp, #20]
 800cf9a:	a805      	add	r0, sp, #20
 800cf9c:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 800cfa0:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 800cfa4:	f003 fd04 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cfa8:	4606      	mov	r6, r0
 800cfaa:	a805      	add	r0, sp, #20
 800cfac:	f003 fd3a 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cfb0:	6869      	ldr	r1, [r5, #4]
 800cfb2:	f8ad 001e 	strh.w	r0, [sp, #30]
 800cfb6:	6828      	ldr	r0, [r5, #0]
 800cfb8:	f8ad 8018 	strh.w	r8, [sp, #24]
 800cfbc:	ab08      	add	r3, sp, #32
 800cfbe:	ad08      	add	r5, sp, #32
 800cfc0:	c303      	stmia	r3!, {r0, r1}
 800cfc2:	a906      	add	r1, sp, #24
 800cfc4:	4628      	mov	r0, r5
 800cfc6:	f8ad 701a 	strh.w	r7, [sp, #26]
 800cfca:	f8ad 601c 	strh.w	r6, [sp, #28]
 800cfce:	f7fe f833 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800cfd2:	4b25      	ldr	r3, [pc, #148]	; (800d068 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe8>)
 800cfd4:	681b      	ldr	r3, [r3, #0]
 800cfd6:	b93b      	cbnz	r3, 800cfe8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x68>
 800cfd8:	4b24      	ldr	r3, [pc, #144]	; (800d06c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xec>)
 800cfda:	4a25      	ldr	r2, [pc, #148]	; (800d070 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf0>)
 800cfdc:	4825      	ldr	r0, [pc, #148]	; (800d074 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf4>)
 800cfde:	2189      	movs	r1, #137	; 0x89
 800cfe0:	f00f f9cc 	bl	801c37c <__assert_func>
 800cfe4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800cfe6:	e7d6      	b.n	800cf96 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x16>
 800cfe8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800cfec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cff0:	429a      	cmp	r2, r3
 800cff2:	d035      	beq.n	800d060 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800cff4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800cff8:	2b00      	cmp	r3, #0
 800cffa:	dd31      	ble.n	800d060 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800cffc:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800d000:	2b00      	cmp	r3, #0
 800d002:	dd2d      	ble.n	800d060 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800d004:	2300      	movs	r3, #0
 800d006:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800d00a:	6823      	ldr	r3, [r4, #0]
 800d00c:	a90a      	add	r1, sp, #40	; 0x28
 800d00e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d010:	4620      	mov	r0, r4
 800d012:	4798      	blx	r3
 800d014:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d018:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800d01a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d01e:	1a9b      	subs	r3, r3, r2
 800d020:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d024:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 800d026:	1ac9      	subs	r1, r1, r3
 800d028:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800d02c:	4912      	ldr	r1, [pc, #72]	; (800d078 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf8>)
 800d02e:	6809      	ldr	r1, [r1, #0]
 800d030:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 800d034:	b108      	cbz	r0, 800d03a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xba>
 800d036:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800d038:	b900      	cbnz	r0, 800d03c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xbc>
 800d03a:	6888      	ldr	r0, [r1, #8]
 800d03c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 800d040:	440b      	add	r3, r1
 800d042:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800d046:	2601      	movs	r6, #1
 800d048:	440a      	add	r2, r1
 800d04a:	6801      	ldr	r1, [r0, #0]
 800d04c:	9602      	str	r6, [sp, #8]
 800d04e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d052:	e9cd 5400 	strd	r5, r4, [sp]
 800d056:	b21b      	sxth	r3, r3
 800d058:	688c      	ldr	r4, [r1, #8]
 800d05a:	b212      	sxth	r2, r2
 800d05c:	a905      	add	r1, sp, #20
 800d05e:	47a0      	blx	r4
 800d060:	b00c      	add	sp, #48	; 0x30
 800d062:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d066:	bf00      	nop
 800d068:	20012560 	.word	0x20012560
 800d06c:	0801fdc4 	.word	0x0801fdc4
 800d070:	0801ff7c 	.word	0x0801ff7c
 800d074:	0801fe00 	.word	0x0801fe00
 800d078:	200124b8 	.word	0x200124b8

0800d07c <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800d07c:	b510      	push	{r4, lr}
 800d07e:	2101      	movs	r1, #1
 800d080:	2200      	movs	r2, #0
 800d082:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d086:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800d08a:	4c0d      	ldr	r4, [pc, #52]	; (800d0c0 <_ZN8touchgfx14ButtonWithIconC1Ev+0x44>)
 800d08c:	8082      	strh	r2, [r0, #4]
 800d08e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d092:	80c2      	strh	r2, [r0, #6]
 800d094:	8102      	strh	r2, [r0, #8]
 800d096:	8142      	strh	r2, [r0, #10]
 800d098:	8182      	strh	r2, [r0, #12]
 800d09a:	81c2      	strh	r2, [r0, #14]
 800d09c:	8202      	strh	r2, [r0, #16]
 800d09e:	8242      	strh	r2, [r0, #18]
 800d0a0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d0a4:	61c2      	str	r2, [r0, #28]
 800d0a6:	6282      	str	r2, [r0, #40]	; 0x28
 800d0a8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800d0ac:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d0ae:	8601      	strh	r1, [r0, #48]	; 0x30
 800d0b0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800d0b4:	6004      	str	r4, [r0, #0]
 800d0b6:	8681      	strh	r1, [r0, #52]	; 0x34
 800d0b8:	86c1      	strh	r1, [r0, #54]	; 0x36
 800d0ba:	8702      	strh	r2, [r0, #56]	; 0x38
 800d0bc:	8742      	strh	r2, [r0, #58]	; 0x3a
 800d0be:	bd10      	pop	{r4, pc}
 800d0c0:	0801ff10 	.word	0x0801ff10

0800d0c4 <_ZN8touchgfx5ImageD1Ev>:
 800d0c4:	4770      	bx	lr

0800d0c6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800d0c6:	b570      	push	{r4, r5, r6, lr}
 800d0c8:	4605      	mov	r5, r0
 800d0ca:	880b      	ldrh	r3, [r1, #0]
 800d0cc:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d0ce:	f855 3b26 	ldr.w	r3, [r5], #38
 800d0d2:	4604      	mov	r4, r0
 800d0d4:	4628      	mov	r0, r5
 800d0d6:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800d0d8:	f003 fc6a 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d0dc:	b201      	sxth	r1, r0
 800d0de:	4620      	mov	r0, r4
 800d0e0:	47b0      	blx	r6
 800d0e2:	6823      	ldr	r3, [r4, #0]
 800d0e4:	4628      	mov	r0, r5
 800d0e6:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800d0e8:	f003 fc9c 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d0ec:	4633      	mov	r3, r6
 800d0ee:	b201      	sxth	r1, r0
 800d0f0:	4620      	mov	r0, r4
 800d0f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0f6:	4718      	bx	r3

0800d0f8 <_ZN8touchgfx5ImageD0Ev>:
 800d0f8:	b510      	push	{r4, lr}
 800d0fa:	212c      	movs	r1, #44	; 0x2c
 800d0fc:	4604      	mov	r4, r0
 800d0fe:	f00f f8f9 	bl	801c2f4 <_ZdlPvj>
 800d102:	4620      	mov	r0, r4
 800d104:	bd10      	pop	{r4, pc}

0800d106 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800d106:	b510      	push	{r4, lr}
 800d108:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800d10c:	2bff      	cmp	r3, #255	; 0xff
 800d10e:	4604      	mov	r4, r0
 800d110:	d006      	beq.n	800d120 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800d112:	2300      	movs	r3, #0
 800d114:	8003      	strh	r3, [r0, #0]
 800d116:	8043      	strh	r3, [r0, #2]
 800d118:	8083      	strh	r3, [r0, #4]
 800d11a:	80c3      	strh	r3, [r0, #6]
 800d11c:	4620      	mov	r0, r4
 800d11e:	bd10      	pop	{r4, pc}
 800d120:	3126      	adds	r1, #38	; 0x26
 800d122:	f003 fcb9 	bl	8010a98 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d126:	e7f9      	b.n	800d11c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800d128 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800d128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d12c:	4604      	mov	r4, r0
 800d12e:	b088      	sub	sp, #32
 800d130:	f854 3b26 	ldr.w	r3, [r4], #38
 800d134:	2500      	movs	r5, #0
 800d136:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d138:	460f      	mov	r7, r1
 800d13a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800d13e:	a904      	add	r1, sp, #16
 800d140:	4606      	mov	r6, r0
 800d142:	4798      	blx	r3
 800d144:	4620      	mov	r0, r4
 800d146:	f003 fc33 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d14a:	4680      	mov	r8, r0
 800d14c:	4620      	mov	r0, r4
 800d14e:	f003 fc69 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d152:	9506      	str	r5, [sp, #24]
 800d154:	ad06      	add	r5, sp, #24
 800d156:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d15a:	4639      	mov	r1, r7
 800d15c:	4628      	mov	r0, r5
 800d15e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800d162:	f7fd ff69 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800d166:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d16a:	2b00      	cmp	r3, #0
 800d16c:	dd19      	ble.n	800d1a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d16e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d172:	2b00      	cmp	r3, #0
 800d174:	dd15      	ble.n	800d1a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d176:	4b0c      	ldr	r3, [pc, #48]	; (800d1a8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800d178:	681b      	ldr	r3, [r3, #0]
 800d17a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d17e:	b10a      	cbz	r2, 800d184 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800d180:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d182:	b900      	cbnz	r0, 800d186 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800d184:	6898      	ldr	r0, [r3, #8]
 800d186:	6801      	ldr	r1, [r0, #0]
 800d188:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800d18c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800d190:	2701      	movs	r7, #1
 800d192:	9702      	str	r7, [sp, #8]
 800d194:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800d198:	e9cd 5600 	strd	r5, r6, [sp]
 800d19c:	688d      	ldr	r5, [r1, #8]
 800d19e:	4621      	mov	r1, r4
 800d1a0:	47a8      	blx	r5
 800d1a2:	b008      	add	sp, #32
 800d1a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1a8:	200124b8 	.word	0x200124b8

0800d1ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d1ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1b0:	b091      	sub	sp, #68	; 0x44
 800d1b2:	4699      	mov	r9, r3
 800d1b4:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800d1b8:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800d1ba:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800d1be:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d1c2:	4680      	mov	r8, r0
 800d1c4:	4617      	mov	r7, r2
 800d1c6:	a80e      	add	r0, sp, #56	; 0x38
 800d1c8:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800d1cc:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800d1d0:	2500      	movs	r5, #0
 800d1d2:	910d      	str	r1, [sp, #52]	; 0x34
 800d1d4:	950e      	str	r5, [sp, #56]	; 0x38
 800d1d6:	f000 fe3b 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d1da:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d1dc:	f8d9 6000 	ldr.w	r6, [r9]
 800d1e0:	6818      	ldr	r0, [r3, #0]
 800d1e2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d1e4:	f9b4 b000 	ldrsh.w	fp, [r4]
 800d1e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d1ec:	eb02 0c06 	add.w	ip, r2, r6
 800d1f0:	1b80      	subs	r0, r0, r6
 800d1f2:	ebab 0e0c 	sub.w	lr, fp, ip
 800d1f6:	4570      	cmp	r0, lr
 800d1f8:	f340 80bd 	ble.w	800d376 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d1fc:	88a1      	ldrh	r1, [r4, #4]
 800d1fe:	4459      	add	r1, fp
 800d200:	b209      	sxth	r1, r1
 800d202:	458c      	cmp	ip, r1
 800d204:	f300 80b7 	bgt.w	800d376 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d208:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800d20c:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800d210:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800d214:	edd9 6a07 	vldr	s13, [r9, #28]
 800d218:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800d21c:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800d220:	4283      	cmp	r3, r0
 800d222:	bfa8      	it	ge
 800d224:	4603      	movge	r3, r0
 800d226:	ee07 3a90 	vmov	s15, r3
 800d22a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d22e:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800d232:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d236:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d23a:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d23e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800d242:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d246:	45e3      	cmp	fp, ip
 800d248:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d24c:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d250:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d254:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d258:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d25c:	f340 808e 	ble.w	800d37c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800d260:	fb9e f5f3 	sdiv	r5, lr, r3
 800d264:	ee07 5a10 	vmov	s14, r5
 800d268:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d26c:	2d00      	cmp	r5, #0
 800d26e:	fb03 e415 	mls	r4, r3, r5, lr
 800d272:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d276:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d27a:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d27e:	dd13      	ble.n	800d2a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800d280:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d284:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d288:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d28c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d290:	bf18      	it	ne
 800d292:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d296:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d29a:	bf08      	it	eq
 800d29c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d2a0:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d2a4:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d2a8:	fb05 f703 	mul.w	r7, r5, r3
 800d2ac:	1bc0      	subs	r0, r0, r7
 800d2ae:	443e      	add	r6, r7
 800d2b0:	1997      	adds	r7, r2, r6
 800d2b2:	4407      	add	r7, r0
 800d2b4:	42b9      	cmp	r1, r7
 800d2b6:	bfbc      	itt	lt
 800d2b8:	1a88      	sublt	r0, r1, r2
 800d2ba:	1b80      	sublt	r0, r0, r6
 800d2bc:	2800      	cmp	r0, #0
 800d2be:	dd5a      	ble.n	800d376 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d2c0:	fb90 f1f3 	sdiv	r1, r0, r3
 800d2c4:	fb03 0211 	mls	r2, r3, r1, r0
 800d2c8:	b90a      	cbnz	r2, 800d2ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800d2ca:	3901      	subs	r1, #1
 800d2cc:	461a      	mov	r2, r3
 800d2ce:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d2d2:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800d2d6:	44a4      	add	ip, r4
 800d2d8:	fb03 c505 	mla	r5, r3, r5, ip
 800d2dc:	2900      	cmp	r1, #0
 800d2de:	bfcc      	ite	gt
 800d2e0:	469e      	movgt	lr, r3
 800d2e2:	4696      	movle	lr, r2
 800d2e4:	eef0 6a42 	vmov.f32	s13, s4
 800d2e8:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800d2ec:	ee21 3a23 	vmul.f32	s6, s2, s7
 800d2f0:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800d2f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d2f8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d2fc:	eeb0 7a61 	vmov.f32	s14, s3
 800d300:	ee17 0a90 	vmov	r0, s15
 800d304:	ee73 7a42 	vsub.f32	s15, s6, s4
 800d308:	fb90 f6f3 	sdiv	r6, r0, r3
 800d30c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d310:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800d314:	ee17 0a90 	vmov	r0, s15
 800d318:	fb90 f7f3 	sdiv	r7, r0, r3
 800d31c:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d320:	900c      	str	r0, [sp, #48]	; 0x30
 800d322:	f8d0 8000 	ldr.w	r8, [r0]
 800d326:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d328:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800d32c:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800d330:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800d334:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800d338:	f8cd a020 	str.w	sl, [sp, #32]
 800d33c:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800d340:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d342:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800d346:	9603      	str	r6, [sp, #12]
 800d348:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800d34c:	ee16 0a90 	vmov	r0, s13
 800d350:	fb07 0704 	mla	r7, r7, r4, r0
 800d354:	ee17 0a10 	vmov	r0, s14
 800d358:	fb06 0604 	mla	r6, r6, r4, r0
 800d35c:	e9cd 3600 	strd	r3, r6, [sp]
 800d360:	44ca      	add	sl, r9
 800d362:	f8cd a01c 	str.w	sl, [sp, #28]
 800d366:	9506      	str	r5, [sp, #24]
 800d368:	9702      	str	r7, [sp, #8]
 800d36a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800d36e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d370:	ebae 0304 	sub.w	r3, lr, r4
 800d374:	47a8      	blx	r5
 800d376:	b011      	add	sp, #68	; 0x44
 800d378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d37c:	462c      	mov	r4, r5
 800d37e:	e797      	b.n	800d2b0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800d380 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800d380:	b570      	push	{r4, r5, r6, lr}
 800d382:	4604      	mov	r4, r0
 800d384:	2500      	movs	r5, #0
 800d386:	7223      	strb	r3, [r4, #8]
 800d388:	9804      	ldr	r0, [sp, #16]
 800d38a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d38e:	8025      	strh	r5, [r4, #0]
 800d390:	6061      	str	r1, [r4, #4]
 800d392:	7263      	strb	r3, [r4, #9]
 800d394:	60e0      	str	r0, [r4, #12]
 800d396:	8222      	strh	r2, [r4, #16]
 800d398:	8265      	strh	r5, [r4, #18]
 800d39a:	82a5      	strh	r5, [r4, #20]
 800d39c:	82e5      	strh	r5, [r4, #22]
 800d39e:	8325      	strh	r5, [r4, #24]
 800d3a0:	8365      	strh	r5, [r4, #26]
 800d3a2:	83a5      	strh	r5, [r4, #28]
 800d3a4:	77a5      	strb	r5, [r4, #30]
 800d3a6:	6803      	ldr	r3, [r0, #0]
 800d3a8:	695b      	ldr	r3, [r3, #20]
 800d3aa:	4798      	blx	r3
 800d3ac:	4606      	mov	r6, r0
 800d3ae:	b1f8      	cbz	r0, 800d3f0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d3b0:	68e0      	ldr	r0, [r4, #12]
 800d3b2:	6803      	ldr	r3, [r0, #0]
 800d3b4:	4631      	mov	r1, r6
 800d3b6:	68db      	ldr	r3, [r3, #12]
 800d3b8:	4798      	blx	r3
 800d3ba:	7b43      	ldrb	r3, [r0, #13]
 800d3bc:	7a82      	ldrb	r2, [r0, #10]
 800d3be:	005b      	lsls	r3, r3, #1
 800d3c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d3c4:	4313      	orrs	r3, r2
 800d3c6:	83a3      	strh	r3, [r4, #28]
 800d3c8:	7a63      	ldrb	r3, [r4, #9]
 800d3ca:	2b04      	cmp	r3, #4
 800d3cc:	4605      	mov	r5, r0
 800d3ce:	d10f      	bne.n	800d3f0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d3d0:	68e0      	ldr	r0, [r4, #12]
 800d3d2:	6803      	ldr	r3, [r0, #0]
 800d3d4:	462a      	mov	r2, r5
 800d3d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3d8:	4631      	mov	r1, r6
 800d3da:	4798      	blx	r3
 800d3dc:	7b6b      	ldrb	r3, [r5, #13]
 800d3de:	005b      	lsls	r3, r3, #1
 800d3e0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d3e4:	7aab      	ldrb	r3, [r5, #10]
 800d3e6:	4313      	orrs	r3, r2
 800d3e8:	4418      	add	r0, r3
 800d3ea:	8ba3      	ldrh	r3, [r4, #28]
 800d3ec:	4418      	add	r0, r3
 800d3ee:	83a0      	strh	r0, [r4, #28]
 800d3f0:	4620      	mov	r0, r4
 800d3f2:	bd70      	pop	{r4, r5, r6, pc}

0800d3f4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d3f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3f8:	2400      	movs	r4, #0
 800d3fa:	b085      	sub	sp, #20
 800d3fc:	4681      	mov	r9, r0
 800d3fe:	4688      	mov	r8, r1
 800d400:	4692      	mov	sl, r2
 800d402:	469b      	mov	fp, r3
 800d404:	4627      	mov	r7, r4
 800d406:	4625      	mov	r5, r4
 800d408:	4626      	mov	r6, r4
 800d40a:	4554      	cmp	r4, sl
 800d40c:	da2a      	bge.n	800d464 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d40e:	2300      	movs	r3, #0
 800d410:	9303      	str	r3, [sp, #12]
 800d412:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d416:	429d      	cmp	r5, r3
 800d418:	d004      	beq.n	800d424 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800d41a:	f242 030b 	movw	r3, #8203	; 0x200b
 800d41e:	429d      	cmp	r5, r3
 800d420:	bf18      	it	ne
 800d422:	462f      	movne	r7, r5
 800d424:	ab03      	add	r3, sp, #12
 800d426:	4642      	mov	r2, r8
 800d428:	4659      	mov	r1, fp
 800d42a:	4648      	mov	r0, r9
 800d42c:	f002 fc32 	bl	800fc94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d430:	4605      	mov	r5, r0
 800d432:	b1b8      	cbz	r0, 800d464 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d434:	280a      	cmp	r0, #10
 800d436:	d015      	beq.n	800d464 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d438:	9a03      	ldr	r2, [sp, #12]
 800d43a:	b18a      	cbz	r2, 800d460 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800d43c:	7b50      	ldrb	r0, [r2, #13]
 800d43e:	7a93      	ldrb	r3, [r2, #10]
 800d440:	8895      	ldrh	r5, [r2, #4]
 800d442:	0040      	lsls	r0, r0, #1
 800d444:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d448:	4303      	orrs	r3, r0
 800d44a:	9301      	str	r3, [sp, #4]
 800d44c:	f8d8 3000 	ldr.w	r3, [r8]
 800d450:	4639      	mov	r1, r7
 800d452:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d454:	4640      	mov	r0, r8
 800d456:	4798      	blx	r3
 800d458:	9b01      	ldr	r3, [sp, #4]
 800d45a:	4418      	add	r0, r3
 800d45c:	4406      	add	r6, r0
 800d45e:	b2b6      	uxth	r6, r6
 800d460:	3401      	adds	r4, #1
 800d462:	e7d2      	b.n	800d40a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800d464:	4630      	mov	r0, r6
 800d466:	b005      	add	sp, #20
 800d468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d46c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d46c:	2a02      	cmp	r2, #2
 800d46e:	b530      	push	{r4, r5, lr}
 800d470:	d011      	beq.n	800d496 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d472:	2a03      	cmp	r2, #3
 800d474:	d01c      	beq.n	800d4b0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d476:	2a01      	cmp	r2, #1
 800d478:	d10c      	bne.n	800d494 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d47a:	888b      	ldrh	r3, [r1, #4]
 800d47c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d480:	8801      	ldrh	r1, [r0, #0]
 800d482:	8844      	ldrh	r4, [r0, #2]
 800d484:	8004      	strh	r4, [r0, #0]
 800d486:	1a9b      	subs	r3, r3, r2
 800d488:	1a5b      	subs	r3, r3, r1
 800d48a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d48e:	8043      	strh	r3, [r0, #2]
 800d490:	8081      	strh	r1, [r0, #4]
 800d492:	80c2      	strh	r2, [r0, #6]
 800d494:	bd30      	pop	{r4, r5, pc}
 800d496:	88cb      	ldrh	r3, [r1, #6]
 800d498:	88c2      	ldrh	r2, [r0, #6]
 800d49a:	1a9b      	subs	r3, r3, r2
 800d49c:	8842      	ldrh	r2, [r0, #2]
 800d49e:	1a9b      	subs	r3, r3, r2
 800d4a0:	888a      	ldrh	r2, [r1, #4]
 800d4a2:	8881      	ldrh	r1, [r0, #4]
 800d4a4:	8043      	strh	r3, [r0, #2]
 800d4a6:	1a52      	subs	r2, r2, r1
 800d4a8:	8801      	ldrh	r1, [r0, #0]
 800d4aa:	1a52      	subs	r2, r2, r1
 800d4ac:	8002      	strh	r2, [r0, #0]
 800d4ae:	e7f1      	b.n	800d494 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d4b0:	88cb      	ldrh	r3, [r1, #6]
 800d4b2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d4b6:	8841      	ldrh	r1, [r0, #2]
 800d4b8:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d4bc:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d4c0:	8045      	strh	r5, [r0, #2]
 800d4c2:	1a9b      	subs	r3, r3, r2
 800d4c4:	1a5b      	subs	r3, r3, r1
 800d4c6:	8003      	strh	r3, [r0, #0]
 800d4c8:	8082      	strh	r2, [r0, #4]
 800d4ca:	80c4      	strh	r4, [r0, #6]
 800d4cc:	e7e2      	b.n	800d494 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d4ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d4ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4d2:	b09f      	sub	sp, #124	; 0x7c
 800d4d4:	9116      	str	r1, [sp, #88]	; 0x58
 800d4d6:	9317      	str	r3, [sp, #92]	; 0x5c
 800d4d8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d4da:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d4dc:	8809      	ldrh	r1, [r1, #0]
 800d4de:	889b      	ldrh	r3, [r3, #4]
 800d4e0:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800d4e4:	9212      	str	r2, [sp, #72]	; 0x48
 800d4e6:	440b      	add	r3, r1
 800d4e8:	b21b      	sxth	r3, r3
 800d4ea:	9310      	str	r3, [sp, #64]	; 0x40
 800d4ec:	f8d8 3000 	ldr.w	r3, [r8]
 800d4f0:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800d4f4:	7a59      	ldrb	r1, [r3, #9]
 800d4f6:	7a1b      	ldrb	r3, [r3, #8]
 800d4f8:	9315      	str	r3, [sp, #84]	; 0x54
 800d4fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800d4fc:	9011      	str	r0, [sp, #68]	; 0x44
 800d4fe:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800d502:	9114      	str	r1, [sp, #80]	; 0x50
 800d504:	f9b3 5000 	ldrsh.w	r5, [r3]
 800d508:	2a00      	cmp	r2, #0
 800d50a:	d067      	beq.n	800d5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800d50c:	f898 3010 	ldrb.w	r3, [r8, #16]
 800d510:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800d512:	2b04      	cmp	r3, #4
 800d514:	bf14      	ite	ne
 800d516:	2301      	movne	r3, #1
 800d518:	2302      	moveq	r3, #2
 800d51a:	4413      	add	r3, r2
 800d51c:	f04f 0900 	mov.w	r9, #0
 800d520:	930f      	str	r3, [sp, #60]	; 0x3c
 800d522:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800d526:	464c      	mov	r4, r9
 800d528:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800d52c:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800d530:	4293      	cmp	r3, r2
 800d532:	f280 808c 	bge.w	800d64e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d536:	2300      	movs	r3, #0
 800d538:	931c      	str	r3, [sp, #112]	; 0x70
 800d53a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d53e:	429c      	cmp	r4, r3
 800d540:	d006      	beq.n	800d550 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800d542:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d544:	f242 020b 	movw	r2, #8203	; 0x200b
 800d548:	4294      	cmp	r4, r2
 800d54a:	bf18      	it	ne
 800d54c:	4623      	movne	r3, r4
 800d54e:	930d      	str	r3, [sp, #52]	; 0x34
 800d550:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d552:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800d554:	f8d8 2000 	ldr.w	r2, [r8]
 800d558:	428b      	cmp	r3, r1
 800d55a:	db41      	blt.n	800d5e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800d55c:	6813      	ldr	r3, [r2, #0]
 800d55e:	4610      	mov	r0, r2
 800d560:	695b      	ldr	r3, [r3, #20]
 800d562:	4798      	blx	r3
 800d564:	4604      	mov	r4, r0
 800d566:	f8d8 0000 	ldr.w	r0, [r8]
 800d56a:	6803      	ldr	r3, [r0, #0]
 800d56c:	aa1d      	add	r2, sp, #116	; 0x74
 800d56e:	689e      	ldr	r6, [r3, #8]
 800d570:	4621      	mov	r1, r4
 800d572:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d576:	47b0      	blx	r6
 800d578:	901c      	str	r0, [sp, #112]	; 0x70
 800d57a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d57e:	429c      	cmp	r4, r3
 800d580:	f000 80e9 	beq.w	800d756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d584:	f242 030b 	movw	r3, #8203	; 0x200b
 800d588:	429c      	cmp	r4, r3
 800d58a:	f000 80e4 	beq.w	800d756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d58e:	2c00      	cmp	r4, #0
 800d590:	f000 80f6 	beq.w	800d780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d594:	2c0a      	cmp	r4, #10
 800d596:	d060      	beq.n	800d65a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d598:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d59a:	b36a      	cbz	r2, 800d5f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800d59c:	8894      	ldrh	r4, [r2, #4]
 800d59e:	f1bb 0f00 	cmp.w	fp, #0
 800d5a2:	d03b      	beq.n	800d61c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800d5a4:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d5a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d5ac:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800d5b0:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d5b4:	f1bb 0f01 	cmp.w	fp, #1
 800d5b8:	ea49 0903 	orr.w	r9, r9, r3
 800d5bc:	d134      	bne.n	800d628 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800d5be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d5c0:	eba5 0509 	sub.w	r5, r5, r9
 800d5c4:	2b00      	cmp	r3, #0
 800d5c6:	d14f      	bne.n	800d668 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d5c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d5ca:	eb09 0305 	add.w	r3, r9, r5
 800d5ce:	4413      	add	r3, r2
 800d5d0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800d5d2:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d5d6:	4293      	cmp	r3, r2
 800d5d8:	da51      	bge.n	800d67e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800d5da:	e038      	b.n	800d64e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d5dc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d5de:	e79d      	b.n	800d51c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800d5e0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d5e4:	9301      	str	r3, [sp, #4]
 800d5e6:	ab1d      	add	r3, sp, #116	; 0x74
 800d5e8:	9300      	str	r3, [sp, #0]
 800d5ea:	4659      	mov	r1, fp
 800d5ec:	ab1c      	add	r3, sp, #112	; 0x70
 800d5ee:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d5f0:	f002 fba8 	bl	800fd44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d5f4:	4604      	mov	r4, r0
 800d5f6:	e7c0      	b.n	800d57a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800d5f8:	f8d8 0000 	ldr.w	r0, [r8]
 800d5fc:	6803      	ldr	r3, [r0, #0]
 800d5fe:	691b      	ldr	r3, [r3, #16]
 800d600:	4798      	blx	r3
 800d602:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d606:	4298      	cmp	r0, r3
 800d608:	f000 80a5 	beq.w	800d756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d60c:	f242 030b 	movw	r3, #8203	; 0x200b
 800d610:	4298      	cmp	r0, r3
 800d612:	f000 80a0 	beq.w	800d756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d616:	f1bb 0f00 	cmp.w	fp, #0
 800d61a:	d100      	bne.n	800d61e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800d61c:	444d      	add	r5, r9
 800d61e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d620:	2a00      	cmp	r2, #0
 800d622:	d1bf      	bne.n	800d5a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800d624:	4691      	mov	r9, r2
 800d626:	e096      	b.n	800d756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d628:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d62a:	2b00      	cmp	r3, #0
 800d62c:	f000 80aa 	beq.w	800d784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800d630:	f1bb 0f00 	cmp.w	fp, #0
 800d634:	d118      	bne.n	800d668 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d636:	f8d8 0000 	ldr.w	r0, [r8]
 800d63a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d63c:	6803      	ldr	r3, [r0, #0]
 800d63e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d640:	4798      	blx	r3
 800d642:	4405      	add	r5, r0
 800d644:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d646:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d648:	1aeb      	subs	r3, r5, r3
 800d64a:	4293      	cmp	r3, r2
 800d64c:	dd17      	ble.n	800d67e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800d64e:	2c00      	cmp	r4, #0
 800d650:	f000 8096 	beq.w	800d780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d654:	2c0a      	cmp	r4, #10
 800d656:	f040 8084 	bne.w	800d762 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800d65a:	240a      	movs	r4, #10
 800d65c:	fab4 f084 	clz	r0, r4
 800d660:	0940      	lsrs	r0, r0, #5
 800d662:	b01f      	add	sp, #124	; 0x7c
 800d664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d668:	f8d8 0000 	ldr.w	r0, [r8]
 800d66c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d66e:	6803      	ldr	r3, [r0, #0]
 800d670:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d672:	4798      	blx	r3
 800d674:	f1bb 0f01 	cmp.w	fp, #1
 800d678:	eba5 0500 	sub.w	r5, r5, r0
 800d67c:	d0a4      	beq.n	800d5c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800d67e:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d680:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d682:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d686:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d68a:	7b43      	ldrb	r3, [r0, #13]
 800d68c:	015b      	lsls	r3, r3, #5
 800d68e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d692:	7983      	ldrb	r3, [r0, #6]
 800d694:	4429      	add	r1, r5
 800d696:	4313      	orrs	r3, r2
 800d698:	440b      	add	r3, r1
 800d69a:	42b3      	cmp	r3, r6
 800d69c:	db5b      	blt.n	800d756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d69e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d6a0:	4299      	cmp	r1, r3
 800d6a2:	da58      	bge.n	800d756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d6a4:	f8d8 0000 	ldr.w	r0, [r8]
 800d6a8:	6803      	ldr	r3, [r0, #0]
 800d6aa:	42ae      	cmp	r6, r5
 800d6ac:	bfc8      	it	gt
 800d6ae:	1b76      	subgt	r6, r6, r5
 800d6b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d6b2:	bfcc      	ite	gt
 800d6b4:	b2b6      	uxthgt	r6, r6
 800d6b6:	2600      	movle	r6, #0
 800d6b8:	4798      	blx	r3
 800d6ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d6bc:	7b5a      	ldrb	r2, [r3, #13]
 800d6be:	00d1      	lsls	r1, r2, #3
 800d6c0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800d6c4:	7a19      	ldrb	r1, [r3, #8]
 800d6c6:	4339      	orrs	r1, r7
 800d6c8:	0657      	lsls	r7, r2, #25
 800d6ca:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800d6cc:	bf44      	itt	mi
 800d6ce:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800d6d2:	b209      	sxthmi	r1, r1
 800d6d4:	19c7      	adds	r7, r0, r7
 800d6d6:	1a7f      	subs	r7, r7, r1
 800d6d8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d6da:	b2bf      	uxth	r7, r7
 800d6dc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d6e0:	fa0f fa87 	sxth.w	sl, r7
 800d6e4:	4551      	cmp	r1, sl
 800d6e6:	dd3a      	ble.n	800d75e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d6e8:	0112      	lsls	r2, r2, #4
 800d6ea:	79d8      	ldrb	r0, [r3, #7]
 800d6ec:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d6f0:	4302      	orrs	r2, r0
 800d6f2:	4492      	add	sl, r2
 800d6f4:	4551      	cmp	r1, sl
 800d6f6:	dc2e      	bgt.n	800d756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d6f8:	1bcf      	subs	r7, r1, r7
 800d6fa:	b2bf      	uxth	r7, r7
 800d6fc:	468a      	mov	sl, r1
 800d6fe:	9319      	str	r3, [sp, #100]	; 0x64
 800d700:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d702:	f8d8 0000 	ldr.w	r0, [r8]
 800d706:	681a      	ldr	r2, [r3, #0]
 800d708:	6801      	ldr	r1, [r0, #0]
 800d70a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800d70c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800d70e:	9313      	str	r3, [sp, #76]	; 0x4c
 800d710:	9218      	str	r2, [sp, #96]	; 0x60
 800d712:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800d714:	4788      	blx	r1
 800d716:	f898 1006 	ldrb.w	r1, [r8, #6]
 800d71a:	910b      	str	r1, [sp, #44]	; 0x2c
 800d71c:	f898 100e 	ldrb.w	r1, [r8, #14]
 800d720:	910a      	str	r1, [sp, #40]	; 0x28
 800d722:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800d726:	9109      	str	r1, [sp, #36]	; 0x24
 800d728:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d72a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800d72e:	9305      	str	r3, [sp, #20]
 800d730:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d732:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800d734:	9206      	str	r2, [sp, #24]
 800d736:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d73a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800d73e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d742:	442e      	add	r6, r5
 800d744:	b236      	sxth	r6, r6
 800d746:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d748:	9600      	str	r6, [sp, #0]
 800d74a:	681a      	ldr	r2, [r3, #0]
 800d74c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d74e:	685b      	ldr	r3, [r3, #4]
 800d750:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d752:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800d754:	47b0      	blx	r6
 800d756:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d758:	3301      	adds	r3, #1
 800d75a:	930e      	str	r3, [sp, #56]	; 0x38
 800d75c:	e6e6      	b.n	800d52c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800d75e:	2700      	movs	r7, #0
 800d760:	e7cd      	b.n	800d6fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800d762:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800d764:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d766:	3501      	adds	r5, #1
 800d768:	429d      	cmp	r5, r3
 800d76a:	f6bf af77 	bge.w	800d65c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d76e:	4659      	mov	r1, fp
 800d770:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d772:	f7f6 f80f 	bl	8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d776:	4604      	mov	r4, r0
 800d778:	b110      	cbz	r0, 800d780 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d77a:	280a      	cmp	r0, #10
 800d77c:	d1f2      	bne.n	800d764 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800d77e:	e76c      	b.n	800d65a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d780:	2400      	movs	r4, #0
 800d782:	e76b      	b.n	800d65c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d784:	f1bb 0f00 	cmp.w	fp, #0
 800d788:	f43f af5c 	beq.w	800d644 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d78c:	e777      	b.n	800d67e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800d78e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d78e:	b530      	push	{r4, r5, lr}
 800d790:	8a44      	ldrh	r4, [r0, #18]
 800d792:	8ac5      	ldrh	r5, [r0, #22]
 800d794:	82c3      	strh	r3, [r0, #22]
 800d796:	442c      	add	r4, r5
 800d798:	1ae4      	subs	r4, r4, r3
 800d79a:	8244      	strh	r4, [r0, #18]
 800d79c:	8b03      	ldrh	r3, [r0, #24]
 800d79e:	8a84      	ldrh	r4, [r0, #20]
 800d7a0:	4422      	add	r2, r4
 800d7a2:	440c      	add	r4, r1
 800d7a4:	1a59      	subs	r1, r3, r1
 800d7a6:	8342      	strh	r2, [r0, #26]
 800d7a8:	8284      	strh	r4, [r0, #20]
 800d7aa:	8301      	strh	r1, [r0, #24]
 800d7ac:	bd30      	pop	{r4, r5, pc}

0800d7ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800d7ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7b2:	7a43      	ldrb	r3, [r0, #9]
 800d7b4:	1eda      	subs	r2, r3, #3
 800d7b6:	b087      	sub	sp, #28
 800d7b8:	4604      	mov	r4, r0
 800d7ba:	b2d2      	uxtb	r2, r2
 800d7bc:	460f      	mov	r7, r1
 800d7be:	2900      	cmp	r1, #0
 800d7c0:	d036      	beq.n	800d830 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800d7c2:	2a01      	cmp	r2, #1
 800d7c4:	d932      	bls.n	800d82c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800d7c6:	1e58      	subs	r0, r3, #1
 800d7c8:	f1d0 0b00 	rsbs	fp, r0, #0
 800d7cc:	eb4b 0b00 	adc.w	fp, fp, r0
 800d7d0:	1e99      	subs	r1, r3, #2
 800d7d2:	424b      	negs	r3, r1
 800d7d4:	414b      	adcs	r3, r1
 800d7d6:	9303      	str	r3, [sp, #12]
 800d7d8:	2300      	movs	r3, #0
 800d7da:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800d7de:	2500      	movs	r5, #0
 800d7e0:	8265      	strh	r5, [r4, #18]
 800d7e2:	82a5      	strh	r5, [r4, #20]
 800d7e4:	46a9      	mov	r9, r5
 800d7e6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800d7ea:	2300      	movs	r3, #0
 800d7ec:	9305      	str	r3, [sp, #20]
 800d7ee:	8823      	ldrh	r3, [r4, #0]
 800d7f0:	2b20      	cmp	r3, #32
 800d7f2:	d02b      	beq.n	800d84c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800d7f4:	eba3 020a 	sub.w	r2, r3, sl
 800d7f8:	4256      	negs	r6, r2
 800d7fa:	4156      	adcs	r6, r2
 800d7fc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d800:	4293      	cmp	r3, r2
 800d802:	d004      	beq.n	800d80e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d804:	4553      	cmp	r3, sl
 800d806:	bf16      	itet	ne
 800d808:	4699      	movne	r9, r3
 800d80a:	2601      	moveq	r6, #1
 800d80c:	2600      	movne	r6, #0
 800d80e:	ab05      	add	r3, sp, #20
 800d810:	68e2      	ldr	r2, [r4, #12]
 800d812:	7a21      	ldrb	r1, [r4, #8]
 800d814:	6860      	ldr	r0, [r4, #4]
 800d816:	f002 fa3d 	bl	800fc94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d81a:	8020      	strh	r0, [r4, #0]
 800d81c:	b9c8      	cbnz	r0, 800d852 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800d81e:	8b22      	ldrh	r2, [r4, #24]
 800d820:	2300      	movs	r3, #0
 800d822:	4611      	mov	r1, r2
 800d824:	4620      	mov	r0, r4
 800d826:	f7ff ffb2 	bl	800d78e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d82a:	e066      	b.n	800d8fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d82c:	468b      	mov	fp, r1
 800d82e:	e7cf      	b.n	800d7d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800d830:	3b01      	subs	r3, #1
 800d832:	2a01      	cmp	r2, #1
 800d834:	bf8c      	ite	hi
 800d836:	2200      	movhi	r2, #0
 800d838:	2201      	movls	r2, #1
 800d83a:	2b01      	cmp	r3, #1
 800d83c:	bf8c      	ite	hi
 800d83e:	2300      	movhi	r3, #0
 800d840:	2301      	movls	r3, #1
 800d842:	9202      	str	r2, [sp, #8]
 800d844:	9301      	str	r3, [sp, #4]
 800d846:	9103      	str	r1, [sp, #12]
 800d848:	468b      	mov	fp, r1
 800d84a:	e7c8      	b.n	800d7de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800d84c:	4699      	mov	r9, r3
 800d84e:	2601      	movs	r6, #1
 800d850:	e7dd      	b.n	800d80e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d852:	8ae3      	ldrh	r3, [r4, #22]
 800d854:	280a      	cmp	r0, #10
 800d856:	f103 0301 	add.w	r3, r3, #1
 800d85a:	82e3      	strh	r3, [r4, #22]
 800d85c:	d0df      	beq.n	800d81e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800d85e:	9a05      	ldr	r2, [sp, #20]
 800d860:	bb42      	cbnz	r2, 800d8b4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800d862:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d866:	4298      	cmp	r0, r3
 800d868:	d001      	beq.n	800d86e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d86a:	4550      	cmp	r0, sl
 800d86c:	d1bd      	bne.n	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d86e:	8823      	ldrh	r3, [r4, #0]
 800d870:	8b21      	ldrh	r1, [r4, #24]
 800d872:	2b20      	cmp	r3, #32
 800d874:	d001      	beq.n	800d87a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800d876:	4553      	cmp	r3, sl
 800d878:	d131      	bne.n	800d8de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800d87a:	2e00      	cmp	r6, #0
 800d87c:	bf0a      	itet	eq
 800d87e:	460d      	moveq	r5, r1
 800d880:	4630      	movne	r0, r6
 800d882:	2001      	moveq	r0, #1
 800d884:	440a      	add	r2, r1
 800d886:	8aa3      	ldrh	r3, [r4, #20]
 800d888:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d88c:	b292      	uxth	r2, r2
 800d88e:	8322      	strh	r2, [r4, #24]
 800d890:	4413      	add	r3, r2
 800d892:	2f00      	cmp	r7, #0
 800d894:	d03a      	beq.n	800d90c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800d896:	f1bb 0f00 	cmp.w	fp, #0
 800d89a:	d102      	bne.n	800d8a2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800d89c:	9903      	ldr	r1, [sp, #12]
 800d89e:	b301      	cbz	r1, 800d8e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d8a0:	b1f8      	cbz	r0, 800d8e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d8a2:	8ba1      	ldrh	r1, [r4, #28]
 800d8a4:	4419      	add	r1, r3
 800d8a6:	458c      	cmp	ip, r1
 800d8a8:	da2a      	bge.n	800d900 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d8aa:	8a61      	ldrh	r1, [r4, #18]
 800d8ac:	b341      	cbz	r1, 800d900 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d8ae:	4563      	cmp	r3, ip
 800d8b0:	dd9b      	ble.n	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d8b2:	e01c      	b.n	800d8ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800d8b4:	8893      	ldrh	r3, [r2, #4]
 800d8b6:	8023      	strh	r3, [r4, #0]
 800d8b8:	f892 800d 	ldrb.w	r8, [r2, #13]
 800d8bc:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800d8c0:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800d8c4:	f892 800a 	ldrb.w	r8, [r2, #10]
 800d8c8:	ea48 0800 	orr.w	r8, r8, r0
 800d8cc:	68e0      	ldr	r0, [r4, #12]
 800d8ce:	6803      	ldr	r3, [r0, #0]
 800d8d0:	4649      	mov	r1, r9
 800d8d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d8d4:	4798      	blx	r3
 800d8d6:	eb08 0200 	add.w	r2, r8, r0
 800d8da:	b292      	uxth	r2, r2
 800d8dc:	e7c7      	b.n	800d86e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d8de:	2000      	movs	r0, #0
 800d8e0:	e7d0      	b.n	800d884 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800d8e2:	4563      	cmp	r3, ip
 800d8e4:	dd81      	ble.n	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d8e6:	8a63      	ldrh	r3, [r4, #18]
 800d8e8:	2b00      	cmp	r3, #0
 800d8ea:	f43f af7e 	beq.w	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d8ee:	2301      	movs	r3, #1
 800d8f0:	77a3      	strb	r3, [r4, #30]
 800d8f2:	8ba2      	ldrh	r2, [r4, #28]
 800d8f4:	8b63      	ldrh	r3, [r4, #26]
 800d8f6:	4413      	add	r3, r2
 800d8f8:	8363      	strh	r3, [r4, #26]
 800d8fa:	b007      	add	sp, #28
 800d8fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d900:	2300      	movs	r3, #0
 800d902:	4611      	mov	r1, r2
 800d904:	4620      	mov	r0, r4
 800d906:	f7ff ff42 	bl	800d78e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d90a:	e76e      	b.n	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d90c:	4563      	cmp	r3, ip
 800d90e:	dd14      	ble.n	800d93a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800d910:	9b02      	ldr	r3, [sp, #8]
 800d912:	b113      	cbz	r3, 800d91a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800d914:	2301      	movs	r3, #1
 800d916:	460a      	mov	r2, r1
 800d918:	e783      	b.n	800d822 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800d91a:	9b01      	ldr	r3, [sp, #4]
 800d91c:	2b00      	cmp	r3, #0
 800d91e:	f43f af64 	beq.w	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d922:	2800      	cmp	r0, #0
 800d924:	f47f af61 	bne.w	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d928:	b116      	cbz	r6, 800d930 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800d92a:	2301      	movs	r3, #1
 800d92c:	462a      	mov	r2, r5
 800d92e:	e779      	b.n	800d824 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800d930:	8a63      	ldrh	r3, [r4, #18]
 800d932:	2b00      	cmp	r3, #0
 800d934:	f43f af59 	beq.w	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d938:	e7df      	b.n	800d8fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d93a:	2800      	cmp	r0, #0
 800d93c:	f47f af55 	bne.w	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d940:	2e00      	cmp	r6, #0
 800d942:	f43f af52 	beq.w	800d7ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d946:	2301      	movs	r3, #1
 800d948:	462a      	mov	r2, r5
 800d94a:	e7db      	b.n	800d904 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800d94c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d94c:	b530      	push	{r4, r5, lr}
 800d94e:	4605      	mov	r5, r0
 800d950:	b08b      	sub	sp, #44	; 0x2c
 800d952:	b191      	cbz	r1, 800d97a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800d954:	e9cd 3100 	strd	r3, r1, [sp]
 800d958:	4613      	mov	r3, r2
 800d95a:	4601      	mov	r1, r0
 800d95c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800d960:	a802      	add	r0, sp, #8
 800d962:	f7ff fd0d 	bl	800d380 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d966:	2401      	movs	r4, #1
 800d968:	2100      	movs	r1, #0
 800d96a:	a802      	add	r0, sp, #8
 800d96c:	f7ff ff1f 	bl	800d7ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d970:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d974:	b163      	cbz	r3, 800d990 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d976:	3401      	adds	r4, #1
 800d978:	e7f6      	b.n	800d968 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800d97a:	f002 fa83 	bl	800fe84 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d97e:	2401      	movs	r4, #1
 800d980:	280a      	cmp	r0, #10
 800d982:	4628      	mov	r0, r5
 800d984:	bf08      	it	eq
 800d986:	3401      	addeq	r4, #1
 800d988:	f002 fa7c 	bl	800fe84 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d98c:	2800      	cmp	r0, #0
 800d98e:	d1f7      	bne.n	800d980 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d990:	b2a0      	uxth	r0, r4
 800d992:	b00b      	add	sp, #44	; 0x2c
 800d994:	bd30      	pop	{r4, r5, pc}

0800d996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d996:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d99a:	b0db      	sub	sp, #364	; 0x16c
 800d99c:	4689      	mov	r9, r1
 800d99e:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800d9a2:	900a      	str	r0, [sp, #40]	; 0x28
 800d9a4:	461c      	mov	r4, r3
 800d9a6:	f1ba 0f00 	cmp.w	sl, #0
 800d9aa:	f000 80a5 	beq.w	800daf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d9ae:	681b      	ldr	r3, [r3, #0]
 800d9b0:	2b00      	cmp	r3, #0
 800d9b2:	f000 80a1 	beq.w	800daf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d9b6:	7ba3      	ldrb	r3, [r4, #14]
 800d9b8:	2b00      	cmp	r3, #0
 800d9ba:	f000 809d 	beq.w	800daf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d9be:	6810      	ldr	r0, [r2, #0]
 800d9c0:	6851      	ldr	r1, [r2, #4]
 800d9c2:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800d9c6:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800d9ca:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800d9ce:	4643      	mov	r3, r8
 800d9d0:	c303      	stmia	r3!, {r0, r1}
 800d9d2:	2500      	movs	r5, #0
 800d9d4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800d9d8:	79a2      	ldrb	r2, [r4, #6]
 800d9da:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d9de:	a90e      	add	r1, sp, #56	; 0x38
 800d9e0:	4640      	mov	r0, r8
 800d9e2:	950e      	str	r5, [sp, #56]	; 0x38
 800d9e4:	f7ff fd42 	bl	800d46c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d9e8:	a90e      	add	r1, sp, #56	; 0x38
 800d9ea:	4608      	mov	r0, r1
 800d9ec:	79a2      	ldrb	r2, [r4, #6]
 800d9ee:	af18      	add	r7, sp, #96	; 0x60
 800d9f0:	f7ff fd3c 	bl	800d46c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d9f4:	4638      	mov	r0, r7
 800d9f6:	f001 fe0e 	bl	800f616 <_ZN8touchgfx12TextProviderC1Ev>
 800d9fa:	6820      	ldr	r0, [r4, #0]
 800d9fc:	6803      	ldr	r3, [r0, #0]
 800d9fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800da00:	4798      	blx	r3
 800da02:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800da04:	4603      	mov	r3, r0
 800da06:	4651      	mov	r1, sl
 800da08:	4638      	mov	r0, r7
 800da0a:	f001 fe49 	bl	800f6a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800da0e:	6820      	ldr	r0, [r4, #0]
 800da10:	7923      	ldrb	r3, [r4, #4]
 800da12:	9308      	str	r3, [sp, #32]
 800da14:	6803      	ldr	r3, [r0, #0]
 800da16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800da18:	4798      	blx	r3
 800da1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800da1e:	181e      	adds	r6, r3, r0
 800da20:	42ae      	cmp	r6, r5
 800da22:	dd06      	ble.n	800da32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800da24:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800da28:	4282      	cmp	r2, r0
 800da2a:	bfa4      	itt	ge
 800da2c:	189d      	addge	r5, r3, r2
 800da2e:	fb95 f5f6 	sdivge	r5, r5, r6
 800da32:	a82e      	add	r0, sp, #184	; 0xb8
 800da34:	f001 fdef 	bl	800f616 <_ZN8touchgfx12TextProviderC1Ev>
 800da38:	7c23      	ldrb	r3, [r4, #16]
 800da3a:	b14b      	cbz	r3, 800da50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800da3c:	6820      	ldr	r0, [r4, #0]
 800da3e:	6803      	ldr	r3, [r0, #0]
 800da40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800da42:	4798      	blx	r3
 800da44:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800da46:	4603      	mov	r3, r0
 800da48:	4651      	mov	r1, sl
 800da4a:	a82e      	add	r0, sp, #184	; 0xb8
 800da4c:	f001 fe28 	bl	800f6a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800da50:	7c21      	ldrb	r1, [r4, #16]
 800da52:	9101      	str	r1, [sp, #4]
 800da54:	6821      	ldr	r1, [r4, #0]
 800da56:	7963      	ldrb	r3, [r4, #5]
 800da58:	9100      	str	r1, [sp, #0]
 800da5a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800da5e:	a92e      	add	r1, sp, #184	; 0xb8
 800da60:	a810      	add	r0, sp, #64	; 0x40
 800da62:	f7ff fc8d 	bl	800d380 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800da66:	7c23      	ldrb	r3, [r4, #16]
 800da68:	b9bb      	cbnz	r3, 800da9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800da6a:	fa1f fa86 	uxth.w	sl, r6
 800da6e:	2d00      	cmp	r5, #0
 800da70:	dd45      	ble.n	800dafe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800da72:	4638      	mov	r0, r7
 800da74:	f002 fa06 	bl	800fe84 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800da78:	2800      	cmp	r0, #0
 800da7a:	d03d      	beq.n	800daf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800da7c:	280a      	cmp	r0, #10
 800da7e:	d1f6      	bne.n	800da6e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800da80:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800da84:	4453      	add	r3, sl
 800da86:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800da8a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800da8e:	eba3 030a 	sub.w	r3, r3, sl
 800da92:	3d01      	subs	r5, #1
 800da94:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800da98:	e7e9      	b.n	800da6e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800da9a:	0073      	lsls	r3, r6, #1
 800da9c:	9309      	str	r3, [sp, #36]	; 0x24
 800da9e:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800daa2:	fa1f fa86 	uxth.w	sl, r6
 800daa6:	2d00      	cmp	r5, #0
 800daa8:	dd29      	ble.n	800dafe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800daaa:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800daae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dab0:	428b      	cmp	r3, r1
 800dab2:	bfd4      	ite	le
 800dab4:	2100      	movle	r1, #0
 800dab6:	2101      	movgt	r1, #1
 800dab8:	a810      	add	r0, sp, #64	; 0x40
 800daba:	f7ff fe78 	bl	800d7ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800dabe:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800dac2:	3b01      	subs	r3, #1
 800dac4:	b29b      	uxth	r3, r3
 800dac6:	455b      	cmp	r3, fp
 800dac8:	930b      	str	r3, [sp, #44]	; 0x2c
 800daca:	d005      	beq.n	800dad8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800dacc:	7961      	ldrb	r1, [r4, #5]
 800dace:	4638      	mov	r0, r7
 800dad0:	f7f5 fe60 	bl	8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dad4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dad6:	e7f4      	b.n	800dac2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800dad8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800dadc:	4453      	add	r3, sl
 800dade:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800dae2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800dae6:	eba3 030a 	sub.w	r3, r3, sl
 800daea:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800daee:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800daf2:	3d01      	subs	r5, #1
 800daf4:	2b00      	cmp	r3, #0
 800daf6:	d1d6      	bne.n	800daa6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800daf8:	b05b      	add	sp, #364	; 0x16c
 800dafa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dafe:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800db02:	ad44      	add	r5, sp, #272	; 0x110
 800db04:	f04f 0b00 	mov.w	fp, #0
 800db08:	7c23      	ldrb	r3, [r4, #16]
 800db0a:	2b00      	cmp	r3, #0
 800db0c:	d067      	beq.n	800dbde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800db0e:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800db12:	458a      	cmp	sl, r1
 800db14:	bfd4      	ite	le
 800db16:	2100      	movle	r1, #0
 800db18:	2101      	movgt	r1, #1
 800db1a:	a810      	add	r0, sp, #64	; 0x40
 800db1c:	f7ff fe47 	bl	800d7ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800db20:	9b08      	ldr	r3, [sp, #32]
 800db22:	2b00      	cmp	r3, #0
 800db24:	d056      	beq.n	800dbd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800db26:	7c23      	ldrb	r3, [r4, #16]
 800db28:	9309      	str	r3, [sp, #36]	; 0x24
 800db2a:	2258      	movs	r2, #88	; 0x58
 800db2c:	4639      	mov	r1, r7
 800db2e:	4628      	mov	r0, r5
 800db30:	f00e fca2 	bl	801c478 <memcpy>
 800db34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800db36:	2b00      	cmp	r3, #0
 800db38:	d059      	beq.n	800dbee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800db3a:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800db3e:	7922      	ldrb	r2, [r4, #4]
 800db40:	2a01      	cmp	r2, #1
 800db42:	d13d      	bne.n	800dbc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800db44:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800db48:	1ac0      	subs	r0, r0, r3
 800db4a:	2302      	movs	r3, #2
 800db4c:	fb90 f0f3 	sdiv	r0, r0, r3
 800db50:	b200      	sxth	r0, r0
 800db52:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800db56:	4418      	add	r0, r3
 800db58:	7c23      	ldrb	r3, [r4, #16]
 800db5a:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800db5e:	2b00      	cmp	r3, #0
 800db60:	d03a      	beq.n	800dbd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800db62:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800db66:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800db6a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800db6e:	9500      	str	r5, [sp, #0]
 800db70:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800db74:	e9cd b703 	strd	fp, r7, [sp, #12]
 800db78:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800db7c:	464a      	mov	r2, r9
 800db7e:	2100      	movs	r1, #0
 800db80:	980a      	ldr	r0, [sp, #40]	; 0x28
 800db82:	f7ff fca4 	bl	800d4ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800db86:	2800      	cmp	r0, #0
 800db88:	d1b6      	bne.n	800daf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800db8a:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800db8e:	b2b2      	uxth	r2, r6
 800db90:	4611      	mov	r1, r2
 800db92:	4413      	add	r3, r2
 800db94:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800db98:	1a52      	subs	r2, r2, r1
 800db9a:	7c21      	ldrb	r1, [r4, #16]
 800db9c:	b21b      	sxth	r3, r3
 800db9e:	b212      	sxth	r2, r2
 800dba0:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800dba4:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800dba8:	b109      	cbz	r1, 800dbae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800dbaa:	42b2      	cmp	r2, r6
 800dbac:	dba4      	blt.n	800daf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800dbae:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800dbb2:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800dbb6:	440a      	add	r2, r1
 800dbb8:	b212      	sxth	r2, r2
 800dbba:	4293      	cmp	r3, r2
 800dbbc:	dda4      	ble.n	800db08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800dbbe:	e79b      	b.n	800daf8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800dbc0:	2a02      	cmp	r2, #2
 800dbc2:	d105      	bne.n	800dbd0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800dbc4:	7be2      	ldrb	r2, [r4, #15]
 800dbc6:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800dbca:	1a80      	subs	r0, r0, r2
 800dbcc:	1ac0      	subs	r0, r0, r3
 800dbce:	e7bf      	b.n	800db50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800dbd0:	2000      	movs	r0, #0
 800dbd2:	e7be      	b.n	800db52 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800dbd4:	7be0      	ldrb	r0, [r4, #15]
 800dbd6:	e7bc      	b.n	800db52 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800dbd8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800dbdc:	e7c3      	b.n	800db66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800dbde:	9b08      	ldr	r3, [sp, #32]
 800dbe0:	2b00      	cmp	r3, #0
 800dbe2:	d0f7      	beq.n	800dbd4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800dbe4:	2258      	movs	r2, #88	; 0x58
 800dbe6:	4639      	mov	r1, r7
 800dbe8:	4628      	mov	r0, r5
 800dbea:	f00e fc45 	bl	801c478 <memcpy>
 800dbee:	2300      	movs	r3, #0
 800dbf0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800dbf4:	6821      	ldr	r1, [r4, #0]
 800dbf6:	4628      	mov	r0, r5
 800dbf8:	f7ff fbfc 	bl	800d3f4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800dbfc:	b203      	sxth	r3, r0
 800dbfe:	e79e      	b.n	800db3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800dc00 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800dc00:	b510      	push	{r4, lr}
 800dc02:	2b02      	cmp	r3, #2
 800dc04:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dc08:	d00b      	beq.n	800dc22 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800dc0a:	2b03      	cmp	r3, #3
 800dc0c:	d00e      	beq.n	800dc2c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800dc0e:	2b01      	cmp	r3, #1
 800dc10:	d001      	beq.n	800dc16 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800dc12:	1860      	adds	r0, r4, r1
 800dc14:	bd10      	pop	{r4, pc}
 800dc16:	8880      	ldrh	r0, [r0, #4]
 800dc18:	4420      	add	r0, r4
 800dc1a:	b200      	sxth	r0, r0
 800dc1c:	1a80      	subs	r0, r0, r2
 800dc1e:	3801      	subs	r0, #1
 800dc20:	e7f8      	b.n	800dc14 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800dc22:	8880      	ldrh	r0, [r0, #4]
 800dc24:	4420      	add	r0, r4
 800dc26:	b200      	sxth	r0, r0
 800dc28:	1a40      	subs	r0, r0, r1
 800dc2a:	e7f8      	b.n	800dc1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800dc2c:	18a0      	adds	r0, r4, r2
 800dc2e:	e7f1      	b.n	800dc14 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800dc30 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800dc30:	b510      	push	{r4, lr}
 800dc32:	2b02      	cmp	r3, #2
 800dc34:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800dc38:	d006      	beq.n	800dc48 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800dc3a:	2b03      	cmp	r3, #3
 800dc3c:	d00a      	beq.n	800dc54 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800dc3e:	2b01      	cmp	r3, #1
 800dc40:	bf14      	ite	ne
 800dc42:	18a0      	addne	r0, r4, r2
 800dc44:	1860      	addeq	r0, r4, r1
 800dc46:	bd10      	pop	{r4, pc}
 800dc48:	88c0      	ldrh	r0, [r0, #6]
 800dc4a:	4420      	add	r0, r4
 800dc4c:	b200      	sxth	r0, r0
 800dc4e:	1a80      	subs	r0, r0, r2
 800dc50:	3801      	subs	r0, #1
 800dc52:	e7f8      	b.n	800dc46 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800dc54:	88c0      	ldrh	r0, [r0, #6]
 800dc56:	4420      	add	r0, r4
 800dc58:	b200      	sxth	r0, r0
 800dc5a:	1a40      	subs	r0, r0, r1
 800dc5c:	e7f8      	b.n	800dc50 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800dc60 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800dc60:	4b01      	ldr	r3, [pc, #4]	; (800dc68 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800dc62:	2200      	movs	r2, #0
 800dc64:	601a      	str	r2, [r3, #0]
 800dc66:	4770      	bx	lr
 800dc68:	200124c0 	.word	0x200124c0

0800dc6c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800dc6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc6e:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800dc72:	1e05      	subs	r5, r0, #0
 800dc74:	bfba      	itte	lt
 800dc76:	f04f 37ff 	movlt.w	r7, #4294967295
 800dc7a:	426d      	neglt	r5, r5
 800dc7c:	2701      	movge	r7, #1
 800dc7e:	f1be 0f00 	cmp.w	lr, #0
 800dc82:	bfb8      	it	lt
 800dc84:	f1ce 0e00 	rsblt	lr, lr, #0
 800dc88:	f04f 0601 	mov.w	r6, #1
 800dc8c:	fa4e f001 	asr.w	r0, lr, r1
 800dc90:	fa06 f101 	lsl.w	r1, r6, r1
 800dc94:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800dc98:	f101 31ff 	add.w	r1, r1, #4294967295
 800dc9c:	ea01 010e 	and.w	r1, r1, lr
 800dca0:	bfb8      	it	lt
 800dca2:	427f      	neglt	r7, r7
 800dca4:	434d      	muls	r5, r1
 800dca6:	2c00      	cmp	r4, #0
 800dca8:	f8dc 1000 	ldr.w	r1, [ip]
 800dcac:	bfb8      	it	lt
 800dcae:	4264      	neglt	r4, r4
 800dcb0:	fb03 1300 	mla	r3, r3, r0, r1
 800dcb4:	fb95 f1f4 	sdiv	r1, r5, r4
 800dcb8:	fb04 5511 	mls	r5, r4, r1, r5
 800dcbc:	441d      	add	r5, r3
 800dcbe:	fb95 f3f4 	sdiv	r3, r5, r4
 800dcc2:	fb04 5413 	mls	r4, r4, r3, r5
 800dcc6:	4419      	add	r1, r3
 800dcc8:	bfb8      	it	lt
 800dcca:	427f      	neglt	r7, r7
 800dccc:	fb02 1000 	mla	r0, r2, r0, r1
 800dcd0:	f8cc 4000 	str.w	r4, [ip]
 800dcd4:	4378      	muls	r0, r7
 800dcd6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dcd8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800dcd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcdc:	4c24      	ldr	r4, [pc, #144]	; (800dd70 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800dcde:	6807      	ldr	r7, [r0, #0]
 800dce0:	69a3      	ldr	r3, [r4, #24]
 800dce2:	b086      	sub	sp, #24
 800dce4:	4605      	mov	r5, r0
 800dce6:	b92b      	cbnz	r3, 800dcf4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800dce8:	6840      	ldr	r0, [r0, #4]
 800dcea:	e9c5 7000 	strd	r7, r0, [r5]
 800dcee:	b006      	add	sp, #24
 800dcf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dcf4:	68a2      	ldr	r2, [r4, #8]
 800dcf6:	6820      	ldr	r0, [r4, #0]
 800dcf8:	ae06      	add	r6, sp, #24
 800dcfa:	f04f 0802 	mov.w	r8, #2
 800dcfe:	fb93 f1f8 	sdiv	r1, r3, r8
 800dd02:	440a      	add	r2, r1
 800dd04:	f846 2d04 	str.w	r2, [r6, #-4]!
 800dd08:	69e1      	ldr	r1, [r4, #28]
 800dd0a:	9700      	str	r7, [sp, #0]
 800dd0c:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800dd10:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dd12:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd14:	f7ff ffaa 	bl	800dc6c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800dd18:	69a3      	ldr	r3, [r4, #24]
 800dd1a:	9301      	str	r3, [sp, #4]
 800dd1c:	686b      	ldr	r3, [r5, #4]
 800dd1e:	9300      	str	r3, [sp, #0]
 800dd20:	4607      	mov	r7, r0
 800dd22:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800dd24:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800dd26:	6a21      	ldr	r1, [r4, #32]
 800dd28:	9602      	str	r6, [sp, #8]
 800dd2a:	6860      	ldr	r0, [r4, #4]
 800dd2c:	f7ff ff9e 	bl	800dc6c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800dd30:	6963      	ldr	r3, [r4, #20]
 800dd32:	69a2      	ldr	r2, [r4, #24]
 800dd34:	fb92 f8f8 	sdiv	r8, r2, r8
 800dd38:	4443      	add	r3, r8
 800dd3a:	9305      	str	r3, [sp, #20]
 800dd3c:	682b      	ldr	r3, [r5, #0]
 800dd3e:	9300      	str	r3, [sp, #0]
 800dd40:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800dd44:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800dd46:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800dd48:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dd4a:	4407      	add	r7, r0
 800dd4c:	68e0      	ldr	r0, [r4, #12]
 800dd4e:	f7ff ff8d 	bl	800dc6c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800dd52:	69a3      	ldr	r3, [r4, #24]
 800dd54:	9301      	str	r3, [sp, #4]
 800dd56:	686b      	ldr	r3, [r5, #4]
 800dd58:	9300      	str	r3, [sp, #0]
 800dd5a:	4680      	mov	r8, r0
 800dd5c:	9602      	str	r6, [sp, #8]
 800dd5e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800dd60:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dd62:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800dd64:	6920      	ldr	r0, [r4, #16]
 800dd66:	f7ff ff81 	bl	800dc6c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800dd6a:	4440      	add	r0, r8
 800dd6c:	e7bd      	b.n	800dcea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800dd6e:	bf00      	nop
 800dd70:	200124c4 	.word	0x200124c4

0800dd74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800dd74:	b510      	push	{r4, lr}
 800dd76:	4b07      	ldr	r3, [pc, #28]	; (800dd94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800dd78:	781b      	ldrb	r3, [r3, #0]
 800dd7a:	2b01      	cmp	r3, #1
 800dd7c:	d108      	bne.n	800dd90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800dd7e:	4b06      	ldr	r3, [pc, #24]	; (800dd98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800dd80:	880c      	ldrh	r4, [r1, #0]
 800dd82:	881b      	ldrh	r3, [r3, #0]
 800dd84:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dd88:	3b01      	subs	r3, #1
 800dd8a:	1b1b      	subs	r3, r3, r4
 800dd8c:	8003      	strh	r3, [r0, #0]
 800dd8e:	800a      	strh	r2, [r1, #0]
 800dd90:	bd10      	pop	{r4, pc}
 800dd92:	bf00      	nop
 800dd94:	200124b0 	.word	0x200124b0
 800dd98:	200124b4 	.word	0x200124b4

0800dd9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800dd9c:	b510      	push	{r4, lr}
 800dd9e:	4b0a      	ldr	r3, [pc, #40]	; (800ddc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800dda0:	781b      	ldrb	r3, [r3, #0]
 800dda2:	2b01      	cmp	r3, #1
 800dda4:	d10e      	bne.n	800ddc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800dda6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ddaa:	8843      	ldrh	r3, [r0, #2]
 800ddac:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ddb0:	8044      	strh	r4, [r0, #2]
 800ddb2:	18ca      	adds	r2, r1, r3
 800ddb4:	4b05      	ldr	r3, [pc, #20]	; (800ddcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ddb6:	881b      	ldrh	r3, [r3, #0]
 800ddb8:	1a9b      	subs	r3, r3, r2
 800ddba:	8003      	strh	r3, [r0, #0]
 800ddbc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ddc0:	80c3      	strh	r3, [r0, #6]
 800ddc2:	8081      	strh	r1, [r0, #4]
 800ddc4:	bd10      	pop	{r4, pc}
 800ddc6:	bf00      	nop
 800ddc8:	200124b0 	.word	0x200124b0
 800ddcc:	200124ac 	.word	0x200124ac

0800ddd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ddd0:	b510      	push	{r4, lr}
 800ddd2:	4b07      	ldr	r3, [pc, #28]	; (800ddf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800ddd4:	781b      	ldrb	r3, [r3, #0]
 800ddd6:	2b01      	cmp	r3, #1
 800ddd8:	d108      	bne.n	800ddec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800ddda:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ddde:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dde2:	8003      	strh	r3, [r0, #0]
 800dde4:	8893      	ldrh	r3, [r2, #4]
 800dde6:	3b01      	subs	r3, #1
 800dde8:	1b1b      	subs	r3, r3, r4
 800ddea:	800b      	strh	r3, [r1, #0]
 800ddec:	bd10      	pop	{r4, pc}
 800ddee:	bf00      	nop
 800ddf0:	200124b0 	.word	0x200124b0

0800ddf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ddf4:	b513      	push	{r0, r1, r4, lr}
 800ddf6:	4b08      	ldr	r3, [pc, #32]	; (800de18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ddf8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ddfc:	4b07      	ldr	r3, [pc, #28]	; (800de1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800ddfe:	f8ad 2004 	strh.w	r2, [sp, #4]
 800de02:	f9b3 3000 	ldrsh.w	r3, [r3]
 800de06:	f8ad 3006 	strh.w	r3, [sp, #6]
 800de0a:	2400      	movs	r4, #0
 800de0c:	466a      	mov	r2, sp
 800de0e:	9400      	str	r4, [sp, #0]
 800de10:	f7ff ffde 	bl	800ddd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800de14:	b002      	add	sp, #8
 800de16:	bd10      	pop	{r4, pc}
 800de18:	200124ac 	.word	0x200124ac
 800de1c:	200124ae 	.word	0x200124ae

0800de20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800de20:	b510      	push	{r4, lr}
 800de22:	4b0a      	ldr	r3, [pc, #40]	; (800de4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800de24:	781b      	ldrb	r3, [r3, #0]
 800de26:	2b01      	cmp	r3, #1
 800de28:	460a      	mov	r2, r1
 800de2a:	d10d      	bne.n	800de48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800de2c:	8881      	ldrh	r1, [r0, #4]
 800de2e:	8803      	ldrh	r3, [r0, #0]
 800de30:	440b      	add	r3, r1
 800de32:	4601      	mov	r1, r0
 800de34:	3b01      	subs	r3, #1
 800de36:	f821 3b02 	strh.w	r3, [r1], #2
 800de3a:	f7ff ffc9 	bl	800ddd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800de3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800de42:	88c2      	ldrh	r2, [r0, #6]
 800de44:	8082      	strh	r2, [r0, #4]
 800de46:	80c3      	strh	r3, [r0, #6]
 800de48:	bd10      	pop	{r4, pc}
 800de4a:	bf00      	nop
 800de4c:	200124b0 	.word	0x200124b0

0800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800de50:	b507      	push	{r0, r1, r2, lr}
 800de52:	4b09      	ldr	r3, [pc, #36]	; (800de78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800de54:	f9b3 2000 	ldrsh.w	r2, [r3]
 800de58:	4b08      	ldr	r3, [pc, #32]	; (800de7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800de5a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800de5e:	2100      	movs	r1, #0
 800de60:	f9b3 3000 	ldrsh.w	r3, [r3]
 800de64:	9100      	str	r1, [sp, #0]
 800de66:	4669      	mov	r1, sp
 800de68:	f8ad 3006 	strh.w	r3, [sp, #6]
 800de6c:	f7ff ffd8 	bl	800de20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800de70:	b003      	add	sp, #12
 800de72:	f85d fb04 	ldr.w	pc, [sp], #4
 800de76:	bf00      	nop
 800de78:	200124ac 	.word	0x200124ac
 800de7c:	200124ae 	.word	0x200124ae

0800de80 <_ZN8touchgfx11Application13requestRedrawEv>:
 800de80:	4b06      	ldr	r3, [pc, #24]	; (800de9c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800de82:	f9b3 2000 	ldrsh.w	r2, [r3]
 800de86:	4b06      	ldr	r3, [pc, #24]	; (800dea0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800de88:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800de8c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800de90:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800de94:	2100      	movs	r1, #0
 800de96:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800de9a:	4770      	bx	lr
 800de9c:	200124ac 	.word	0x200124ac
 800dea0:	200124ae 	.word	0x200124ae

0800dea4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800dea4:	4b03      	ldr	r3, [pc, #12]	; (800deb4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800dea6:	6818      	ldr	r0, [r3, #0]
 800dea8:	b110      	cbz	r0, 800deb0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800deaa:	6803      	ldr	r3, [r0, #0]
 800deac:	699b      	ldr	r3, [r3, #24]
 800deae:	4718      	bx	r3
 800deb0:	4770      	bx	lr
 800deb2:	bf00      	nop
 800deb4:	20012514 	.word	0x20012514

0800deb8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800deb8:	4770      	bx	lr
	...

0800debc <_ZN8touchgfx11Application4drawEv>:
 800debc:	b507      	push	{r0, r1, r2, lr}
 800debe:	4b09      	ldr	r3, [pc, #36]	; (800dee4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800dec0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dec4:	4b08      	ldr	r3, [pc, #32]	; (800dee8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800dec6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800deca:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dece:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ded2:	6803      	ldr	r3, [r0, #0]
 800ded4:	2100      	movs	r1, #0
 800ded6:	9100      	str	r1, [sp, #0]
 800ded8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800deda:	4669      	mov	r1, sp
 800dedc:	4798      	blx	r3
 800dede:	b003      	add	sp, #12
 800dee0:	f85d fb04 	ldr.w	pc, [sp], #4
 800dee4:	200124ac 	.word	0x200124ac
 800dee8:	200124ae 	.word	0x200124ae

0800deec <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800deec:	4b03      	ldr	r3, [pc, #12]	; (800defc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800deee:	6818      	ldr	r0, [r3, #0]
 800def0:	b110      	cbz	r0, 800def8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800def2:	6803      	ldr	r3, [r0, #0]
 800def4:	69db      	ldr	r3, [r3, #28]
 800def6:	4718      	bx	r3
 800def8:	4770      	bx	lr
 800defa:	bf00      	nop
 800defc:	20012514 	.word	0x20012514

0800df00 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800df00:	4b03      	ldr	r3, [pc, #12]	; (800df10 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800df02:	6818      	ldr	r0, [r3, #0]
 800df04:	b110      	cbz	r0, 800df0c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800df06:	6803      	ldr	r3, [r0, #0]
 800df08:	6a1b      	ldr	r3, [r3, #32]
 800df0a:	4718      	bx	r3
 800df0c:	4770      	bx	lr
 800df0e:	bf00      	nop
 800df10:	20012514 	.word	0x20012514

0800df14 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800df14:	4b03      	ldr	r3, [pc, #12]	; (800df24 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800df16:	6818      	ldr	r0, [r3, #0]
 800df18:	b110      	cbz	r0, 800df20 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800df1a:	6803      	ldr	r3, [r0, #0]
 800df1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800df1e:	4718      	bx	r3
 800df20:	4770      	bx	lr
 800df22:	bf00      	nop
 800df24:	20012514 	.word	0x20012514

0800df28 <_ZN8touchgfx11Application15handleTickEventEv>:
 800df28:	b570      	push	{r4, r5, r6, lr}
 800df2a:	4d34      	ldr	r5, [pc, #208]	; (800dffc <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800df2c:	4604      	mov	r4, r0
 800df2e:	6828      	ldr	r0, [r5, #0]
 800df30:	b140      	cbz	r0, 800df44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800df32:	7a03      	ldrb	r3, [r0, #8]
 800df34:	b933      	cbnz	r3, 800df44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800df36:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800df3a:	6803      	ldr	r3, [r0, #0]
 800df3c:	689b      	ldr	r3, [r3, #8]
 800df3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df42:	4718      	bx	r3
 800df44:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800df48:	b97b      	cbnz	r3, 800df6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800df4a:	b170      	cbz	r0, 800df6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800df4c:	7a03      	ldrb	r3, [r0, #8]
 800df4e:	b163      	cbz	r3, 800df6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800df50:	4b2b      	ldr	r3, [pc, #172]	; (800e000 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800df52:	6818      	ldr	r0, [r3, #0]
 800df54:	b110      	cbz	r0, 800df5c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800df56:	6803      	ldr	r3, [r0, #0]
 800df58:	691b      	ldr	r3, [r3, #16]
 800df5a:	4798      	blx	r3
 800df5c:	6828      	ldr	r0, [r5, #0]
 800df5e:	6803      	ldr	r3, [r0, #0]
 800df60:	68db      	ldr	r3, [r3, #12]
 800df62:	4798      	blx	r3
 800df64:	2301      	movs	r3, #1
 800df66:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800df6a:	2500      	movs	r5, #0
 800df6c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800df70:	42a8      	cmp	r0, r5
 800df72:	dd0c      	ble.n	800df8e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800df74:	1963      	adds	r3, r4, r5
 800df76:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800df7a:	b132      	cbz	r2, 800df8a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800df7c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800df80:	4413      	add	r3, r2
 800df82:	6858      	ldr	r0, [r3, #4]
 800df84:	6803      	ldr	r3, [r0, #0]
 800df86:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800df88:	4798      	blx	r3
 800df8a:	3501      	adds	r5, #1
 800df8c:	e7ee      	b.n	800df6c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800df8e:	2300      	movs	r3, #0
 800df90:	461a      	mov	r2, r3
 800df92:	4298      	cmp	r0, r3
 800df94:	d114      	bne.n	800dfc0 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800df96:	1d25      	adds	r5, r4, #4
 800df98:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800df9c:	1e48      	subs	r0, r1, #1
 800df9e:	b280      	uxth	r0, r0
 800dfa0:	4291      	cmp	r1, r2
 800dfa2:	dd24      	ble.n	800dfee <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800dfa4:	4288      	cmp	r0, r1
 800dfa6:	d2fb      	bcs.n	800dfa0 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800dfa8:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800dfac:	3304      	adds	r3, #4
 800dfae:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800dfb2:	428b      	cmp	r3, r1
 800dfb4:	d018      	beq.n	800dfe8 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800dfb6:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800dfba:	f843 6c04 	str.w	r6, [r3, #-4]
 800dfbe:	e7f8      	b.n	800dfb2 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800dfc0:	18e1      	adds	r1, r4, r3
 800dfc2:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800dfc6:	b16d      	cbz	r5, 800dfe4 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800dfc8:	429a      	cmp	r2, r3
 800dfca:	d00a      	beq.n	800dfe2 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800dfcc:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800dfd0:	4431      	add	r1, r6
 800dfd2:	684e      	ldr	r6, [r1, #4]
 800dfd4:	b291      	uxth	r1, r2
 800dfd6:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800dfda:	604e      	str	r6, [r1, #4]
 800dfdc:	18a1      	adds	r1, r4, r2
 800dfde:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800dfe2:	3201      	adds	r2, #1
 800dfe4:	3301      	adds	r3, #1
 800dfe6:	e7d4      	b.n	800df92 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800dfe8:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800dfec:	e7d4      	b.n	800df98 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800dfee:	4b04      	ldr	r3, [pc, #16]	; (800e000 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800dff0:	6818      	ldr	r0, [r3, #0]
 800dff2:	b110      	cbz	r0, 800dffa <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800dff4:	6803      	ldr	r3, [r0, #0]
 800dff6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dff8:	e7a1      	b.n	800df3e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800dffa:	bd70      	pop	{r4, r5, r6, pc}
 800dffc:	20012518 	.word	0x20012518
 800e000:	20012514 	.word	0x20012514

0800e004 <_ZN8touchgfx11ApplicationD1Ev>:
 800e004:	4770      	bx	lr

0800e006 <_ZN8touchgfx11ApplicationD0Ev>:
 800e006:	b510      	push	{r4, lr}
 800e008:	f44f 719c 	mov.w	r1, #312	; 0x138
 800e00c:	4604      	mov	r4, r0
 800e00e:	f00e f971 	bl	801c2f4 <_ZdlPvj>
 800e012:	4620      	mov	r0, r4
 800e014:	bd10      	pop	{r4, pc}
	...

0800e018 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800e018:	b570      	push	{r4, r5, r6, lr}
 800e01a:	4606      	mov	r6, r0
 800e01c:	460c      	mov	r4, r1
 800e01e:	b929      	cbnz	r1, 800e02c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800e020:	4b0c      	ldr	r3, [pc, #48]	; (800e054 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800e022:	4a0d      	ldr	r2, [pc, #52]	; (800e058 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800e024:	480d      	ldr	r0, [pc, #52]	; (800e05c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800e026:	2166      	movs	r1, #102	; 0x66
 800e028:	f00e f9a8 	bl	801c37c <__assert_func>
 800e02c:	4d0c      	ldr	r5, [pc, #48]	; (800e060 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800e02e:	2300      	movs	r3, #0
 800e030:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800e034:	6828      	ldr	r0, [r5, #0]
 800e036:	b110      	cbz	r0, 800e03e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800e038:	6803      	ldr	r3, [r0, #0]
 800e03a:	695b      	ldr	r3, [r3, #20]
 800e03c:	4798      	blx	r3
 800e03e:	602c      	str	r4, [r5, #0]
 800e040:	6823      	ldr	r3, [r4, #0]
 800e042:	4620      	mov	r0, r4
 800e044:	68db      	ldr	r3, [r3, #12]
 800e046:	4798      	blx	r3
 800e048:	6833      	ldr	r3, [r6, #0]
 800e04a:	4630      	mov	r0, r6
 800e04c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e04e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e052:	4718      	bx	r3
 800e054:	0802001c 	.word	0x0802001c
 800e058:	08020114 	.word	0x08020114
 800e05c:	08020026 	.word	0x08020026
 800e060:	20012514 	.word	0x20012514

0800e064 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800e064:	b510      	push	{r4, lr}
 800e066:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e06a:	888a      	ldrh	r2, [r1, #4]
 800e06c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e070:	4422      	add	r2, r4
 800e072:	b212      	sxth	r2, r2
 800e074:	4293      	cmp	r3, r2
 800e076:	da15      	bge.n	800e0a4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e078:	8882      	ldrh	r2, [r0, #4]
 800e07a:	4413      	add	r3, r2
 800e07c:	b21b      	sxth	r3, r3
 800e07e:	429c      	cmp	r4, r3
 800e080:	da10      	bge.n	800e0a4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e082:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e086:	88c9      	ldrh	r1, [r1, #6]
 800e088:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800e08c:	4419      	add	r1, r3
 800e08e:	b209      	sxth	r1, r1
 800e090:	428a      	cmp	r2, r1
 800e092:	da07      	bge.n	800e0a4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e094:	88c0      	ldrh	r0, [r0, #6]
 800e096:	4410      	add	r0, r2
 800e098:	b200      	sxth	r0, r0
 800e09a:	4283      	cmp	r3, r0
 800e09c:	bfac      	ite	ge
 800e09e:	2000      	movge	r0, #0
 800e0a0:	2001      	movlt	r0, #1
 800e0a2:	bd10      	pop	{r4, pc}
 800e0a4:	2000      	movs	r0, #0
 800e0a6:	e7fc      	b.n	800e0a2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800e0a8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800e0a8:	b570      	push	{r4, r5, r6, lr}
 800e0aa:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e0ae:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e0b2:	42ac      	cmp	r4, r5
 800e0b4:	db18      	blt.n	800e0e8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e0b6:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800e0ba:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e0be:	429a      	cmp	r2, r3
 800e0c0:	db12      	blt.n	800e0e8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e0c2:	8886      	ldrh	r6, [r0, #4]
 800e0c4:	4435      	add	r5, r6
 800e0c6:	888e      	ldrh	r6, [r1, #4]
 800e0c8:	4434      	add	r4, r6
 800e0ca:	b22d      	sxth	r5, r5
 800e0cc:	b224      	sxth	r4, r4
 800e0ce:	42a5      	cmp	r5, r4
 800e0d0:	db0a      	blt.n	800e0e8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e0d2:	88c0      	ldrh	r0, [r0, #6]
 800e0d4:	4418      	add	r0, r3
 800e0d6:	88cb      	ldrh	r3, [r1, #6]
 800e0d8:	441a      	add	r2, r3
 800e0da:	b200      	sxth	r0, r0
 800e0dc:	b212      	sxth	r2, r2
 800e0de:	4290      	cmp	r0, r2
 800e0e0:	bfb4      	ite	lt
 800e0e2:	2000      	movlt	r0, #0
 800e0e4:	2001      	movge	r0, #1
 800e0e6:	bd70      	pop	{r4, r5, r6, pc}
 800e0e8:	2000      	movs	r0, #0
 800e0ea:	e7fc      	b.n	800e0e6 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800e0ec <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800e0ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e0ee:	4604      	mov	r4, r0
 800e0f0:	4608      	mov	r0, r1
 800e0f2:	460d      	mov	r5, r1
 800e0f4:	f7fc ffe3 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e0f8:	b978      	cbnz	r0, 800e11a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800e0fa:	4620      	mov	r0, r4
 800e0fc:	f7fc ffdf 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e100:	f9b5 6000 	ldrsh.w	r6, [r5]
 800e104:	b150      	cbz	r0, 800e11c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800e106:	8026      	strh	r6, [r4, #0]
 800e108:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e10c:	8063      	strh	r3, [r4, #2]
 800e10e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800e112:	80a3      	strh	r3, [r4, #4]
 800e114:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e118:	80e3      	strh	r3, [r4, #6]
 800e11a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e11c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e120:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e124:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800e128:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800e12c:	88ed      	ldrh	r5, [r5, #6]
 800e12e:	42b1      	cmp	r1, r6
 800e130:	460f      	mov	r7, r1
 800e132:	bfa8      	it	ge
 800e134:	4637      	movge	r7, r6
 800e136:	4293      	cmp	r3, r2
 800e138:	4618      	mov	r0, r3
 800e13a:	4466      	add	r6, ip
 800e13c:	bfa8      	it	ge
 800e13e:	4610      	movge	r0, r2
 800e140:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e144:	8027      	strh	r7, [r4, #0]
 800e146:	442a      	add	r2, r5
 800e148:	88e5      	ldrh	r5, [r4, #6]
 800e14a:	8060      	strh	r0, [r4, #2]
 800e14c:	4461      	add	r1, ip
 800e14e:	442b      	add	r3, r5
 800e150:	b236      	sxth	r6, r6
 800e152:	b209      	sxth	r1, r1
 800e154:	b212      	sxth	r2, r2
 800e156:	b21b      	sxth	r3, r3
 800e158:	428e      	cmp	r6, r1
 800e15a:	bfac      	ite	ge
 800e15c:	ebc7 0106 	rsbge	r1, r7, r6
 800e160:	ebc7 0101 	rsblt	r1, r7, r1
 800e164:	429a      	cmp	r2, r3
 800e166:	bfac      	ite	ge
 800e168:	ebc0 0202 	rsbge	r2, r0, r2
 800e16c:	ebc0 0203 	rsblt	r2, r0, r3
 800e170:	80a1      	strh	r1, [r4, #4]
 800e172:	80e2      	strh	r2, [r4, #6]
 800e174:	e7d1      	b.n	800e11a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800e178 <_ZN8touchgfx11Application11getInstanceEv>:
 800e178:	4b01      	ldr	r3, [pc, #4]	; (800e180 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e17a:	6818      	ldr	r0, [r3, #0]
 800e17c:	4770      	bx	lr
 800e17e:	bf00      	nop
 800e180:	20012524 	.word	0x20012524

0800e184 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 800e184:	b570      	push	{r4, r5, r6, lr}
 800e186:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 800e18a:	1d04      	adds	r4, r0, #4
 800e18c:	2200      	movs	r2, #0
 800e18e:	b295      	uxth	r5, r2
 800e190:	42ab      	cmp	r3, r5
 800e192:	d90f      	bls.n	800e1b4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 800e194:	f854 6b04 	ldr.w	r6, [r4], #4
 800e198:	428e      	cmp	r6, r1
 800e19a:	4615      	mov	r5, r2
 800e19c:	f102 0201 	add.w	r2, r2, #1
 800e1a0:	d1f5      	bne.n	800e18e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 800e1a2:	4428      	add	r0, r5
 800e1a4:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 800e1a8:	2bff      	cmp	r3, #255	; 0xff
 800e1aa:	d002      	beq.n	800e1b2 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800e1ac:	3301      	adds	r3, #1
 800e1ae:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 800e1b2:	bd70      	pop	{r4, r5, r6, pc}
 800e1b4:	2b20      	cmp	r3, #32
 800e1b6:	d106      	bne.n	800e1c6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 800e1b8:	4b08      	ldr	r3, [pc, #32]	; (800e1dc <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 800e1ba:	4a09      	ldr	r2, [pc, #36]	; (800e1e0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 800e1bc:	4809      	ldr	r0, [pc, #36]	; (800e1e4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 800e1be:	f240 1137 	movw	r1, #311	; 0x137
 800e1c2:	f00e f8db 	bl	801c37c <__assert_func>
 800e1c6:	18c2      	adds	r2, r0, r3
 800e1c8:	2401      	movs	r4, #1
 800e1ca:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 800e1ce:	191a      	adds	r2, r3, r4
 800e1d0:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 800e1d4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800e1d8:	6041      	str	r1, [r0, #4]
 800e1da:	e7ea      	b.n	800e1b2 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800e1dc:	08020050 	.word	0x08020050
 800e1e0:	08020158 	.word	0x08020158
 800e1e4:	08020026 	.word	0x08020026

0800e1e8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 800e1e8:	b570      	push	{r4, r5, r6, lr}
 800e1ea:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 800e1ee:	1d04      	adds	r4, r0, #4
 800e1f0:	2300      	movs	r3, #0
 800e1f2:	b29a      	uxth	r2, r3
 800e1f4:	4296      	cmp	r6, r2
 800e1f6:	d90a      	bls.n	800e20e <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 800e1f8:	f854 2b04 	ldr.w	r2, [r4], #4
 800e1fc:	428a      	cmp	r2, r1
 800e1fe:	d107      	bne.n	800e210 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800e200:	18c5      	adds	r5, r0, r3
 800e202:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 800e206:	b11a      	cbz	r2, 800e210 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800e208:	3a01      	subs	r2, #1
 800e20a:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 800e20e:	bd70      	pop	{r4, r5, r6, pc}
 800e210:	3301      	adds	r3, #1
 800e212:	e7ee      	b.n	800e1f2 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

0800e214 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800e214:	2300      	movs	r3, #0
 800e216:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800e21a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800e21e:	30a8      	adds	r0, #168	; 0xa8
 800e220:	f802 3b01 	strb.w	r3, [r2], #1
 800e224:	4282      	cmp	r2, r0
 800e226:	d1fb      	bne.n	800e220 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800e228:	4770      	bx	lr

0800e22a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e22a:	4603      	mov	r3, r0
 800e22c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800e230:	2200      	movs	r2, #0
 800e232:	801a      	strh	r2, [r3, #0]
 800e234:	805a      	strh	r2, [r3, #2]
 800e236:	809a      	strh	r2, [r3, #4]
 800e238:	80da      	strh	r2, [r3, #6]
 800e23a:	3308      	adds	r3, #8
 800e23c:	428b      	cmp	r3, r1
 800e23e:	d1f8      	bne.n	800e232 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e240:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e244:	4770      	bx	lr
	...

0800e248 <_ZN8touchgfx11ApplicationC1Ev>:
 800e248:	b570      	push	{r4, r5, r6, lr}
 800e24a:	4b1a      	ldr	r3, [pc, #104]	; (800e2b4 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800e24c:	6003      	str	r3, [r0, #0]
 800e24e:	2500      	movs	r5, #0
 800e250:	4604      	mov	r4, r0
 800e252:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800e256:	30a8      	adds	r0, #168	; 0xa8
 800e258:	f7ff ffe7 	bl	800e22a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e25c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800e260:	f7ff ffe3 	bl	800e22a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e264:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800e268:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800e26c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800e270:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800e274:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800e278:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800e27c:	490e      	ldr	r1, [pc, #56]	; (800e2b8 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800e27e:	480f      	ldr	r0, [pc, #60]	; (800e2bc <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800e280:	4e0f      	ldr	r6, [pc, #60]	; (800e2c0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800e282:	f00d ff07 	bl	801c094 <CRC_Lock>
 800e286:	4b0f      	ldr	r3, [pc, #60]	; (800e2c4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800e288:	b158      	cbz	r0, 800e2a2 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800e28a:	801d      	strh	r5, [r3, #0]
 800e28c:	4a0e      	ldr	r2, [pc, #56]	; (800e2c8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800e28e:	2300      	movs	r3, #0
 800e290:	6013      	str	r3, [r2, #0]
 800e292:	4a0e      	ldr	r2, [pc, #56]	; (800e2cc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800e294:	6033      	str	r3, [r6, #0]
 800e296:	4620      	mov	r0, r4
 800e298:	6013      	str	r3, [r2, #0]
 800e29a:	f7ff ffbb 	bl	800e214 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800e29e:	4620      	mov	r0, r4
 800e2a0:	bd70      	pop	{r4, r5, r6, pc}
 800e2a2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e2a6:	2002      	movs	r0, #2
 800e2a8:	801a      	strh	r2, [r3, #0]
 800e2aa:	6030      	str	r0, [r6, #0]
 800e2ac:	f000 fff6 	bl	800f29c <_ZN8touchgfx6Screen4drawEv>
 800e2b0:	e7ec      	b.n	800e28c <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800e2b2:	bf00      	nop
 800e2b4:	080200d8 	.word	0x080200d8
 800e2b8:	b5e8b5cd 	.word	0xb5e8b5cd
 800e2bc:	f407a5c2 	.word	0xf407a5c2
 800e2c0:	20012514 	.word	0x20012514
 800e2c4:	20000094 	.word	0x20000094
 800e2c8:	20012524 	.word	0x20012524
 800e2cc:	20012518 	.word	0x20012518

0800e2d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e2d0:	2300      	movs	r3, #0
 800e2d2:	8003      	strh	r3, [r0, #0]
 800e2d4:	8043      	strh	r3, [r0, #2]
 800e2d6:	8083      	strh	r3, [r0, #4]
 800e2d8:	80c3      	strh	r3, [r0, #6]
 800e2da:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800e2de:	4293      	cmp	r3, r2
 800e2e0:	b530      	push	{r4, r5, lr}
 800e2e2:	d912      	bls.n	800e30a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800e2e4:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800e2e8:	3b01      	subs	r3, #1
 800e2ea:	6825      	ldr	r5, [r4, #0]
 800e2ec:	6005      	str	r5, [r0, #0]
 800e2ee:	b29b      	uxth	r3, r3
 800e2f0:	6865      	ldr	r5, [r4, #4]
 800e2f2:	6045      	str	r5, [r0, #4]
 800e2f4:	4293      	cmp	r3, r2
 800e2f6:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800e2fa:	d906      	bls.n	800e30a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800e2fc:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800e300:	681d      	ldr	r5, [r3, #0]
 800e302:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800e306:	685d      	ldr	r5, [r3, #4]
 800e308:	6065      	str	r5, [r4, #4]
 800e30a:	bd30      	pop	{r4, r5, pc}

0800e30c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800e30c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e30e:	466b      	mov	r3, sp
 800e310:	e883 0006 	stmia.w	r3, {r1, r2}
 800e314:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800e318:	2a07      	cmp	r2, #7
 800e31a:	4604      	mov	r4, r0
 800e31c:	d906      	bls.n	800e32c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800e31e:	4b09      	ldr	r3, [pc, #36]	; (800e344 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800e320:	4a09      	ldr	r2, [pc, #36]	; (800e348 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800e322:	480a      	ldr	r0, [pc, #40]	; (800e34c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800e324:	f240 118f 	movw	r1, #399	; 0x18f
 800e328:	f00e f828 	bl	801c37c <__assert_func>
 800e32c:	1c51      	adds	r1, r2, #1
 800e32e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e332:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800e336:	cb03      	ldmia	r3!, {r0, r1}
 800e338:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800e33c:	6069      	str	r1, [r5, #4]
 800e33e:	b003      	add	sp, #12
 800e340:	bd30      	pop	{r4, r5, pc}
 800e342:	bf00      	nop
 800e344:	08020078 	.word	0x08020078
 800e348:	0802019d 	.word	0x0802019d
 800e34c:	080200a7 	.word	0x080200a7

0800e350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e350:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e354:	b089      	sub	sp, #36	; 0x24
 800e356:	466c      	mov	r4, sp
 800e358:	4606      	mov	r6, r0
 800e35a:	4620      	mov	r0, r4
 800e35c:	e884 0006 	stmia.w	r4, {r1, r2}
 800e360:	f7fc fead 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e364:	bbb0      	cbnz	r0, 800e3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800e366:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800e36a:	b1fd      	cbz	r5, 800e3ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800e36c:	3d01      	subs	r5, #1
 800e36e:	af04      	add	r7, sp, #16
 800e370:	f04f 090a 	mov.w	r9, #10
 800e374:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800e378:	ab02      	add	r3, sp, #8
 800e37a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e37e:	6851      	ldr	r1, [r2, #4]
 800e380:	c303      	stmia	r3!, {r0, r1}
 800e382:	4621      	mov	r1, r4
 800e384:	a802      	add	r0, sp, #8
 800e386:	fa1f f885 	uxth.w	r8, r5
 800e38a:	f7ff fe8d 	bl	800e0a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e38e:	bb08      	cbnz	r0, 800e3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800e390:	a902      	add	r1, sp, #8
 800e392:	4620      	mov	r0, r4
 800e394:	f7ff fe88 	bl	800e0a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e398:	b1f8      	cbz	r0, 800e3da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800e39a:	4642      	mov	r2, r8
 800e39c:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e3a0:	a806      	add	r0, sp, #24
 800e3a2:	f7ff ff95 	bl	800e2d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e3a6:	f115 35ff 	adds.w	r5, r5, #4294967295
 800e3aa:	d2e3      	bcs.n	800e374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800e3ac:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800e3b0:	2b08      	cmp	r3, #8
 800e3b2:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800e3b6:	d108      	bne.n	800e3ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800e3b8:	4629      	mov	r1, r5
 800e3ba:	a806      	add	r0, sp, #24
 800e3bc:	2207      	movs	r2, #7
 800e3be:	f7ff ff87 	bl	800e2d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e3c2:	a906      	add	r1, sp, #24
 800e3c4:	4620      	mov	r0, r4
 800e3c6:	f7ff fe91 	bl	800e0ec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e3ca:	e894 0006 	ldmia.w	r4, {r1, r2}
 800e3ce:	4628      	mov	r0, r5
 800e3d0:	f7ff ff9c 	bl	800e30c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e3d4:	b009      	add	sp, #36	; 0x24
 800e3d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e3da:	4621      	mov	r1, r4
 800e3dc:	a802      	add	r0, sp, #8
 800e3de:	f7ff fe41 	bl	800e064 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e3e2:	b150      	cbz	r0, 800e3fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800e3e4:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e3e8:	a806      	add	r0, sp, #24
 800e3ea:	4642      	mov	r2, r8
 800e3ec:	f7ff ff70 	bl	800e2d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e3f0:	a902      	add	r1, sp, #8
 800e3f2:	4620      	mov	r0, r4
 800e3f4:	f7ff fe7a 	bl	800e0ec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e3f8:	e7d5      	b.n	800e3a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e3fa:	e894 0003 	ldmia.w	r4, {r0, r1}
 800e3fe:	e887 0003 	stmia.w	r7, {r0, r1}
 800e402:	a902      	add	r1, sp, #8
 800e404:	4638      	mov	r0, r7
 800e406:	f7ff fe71 	bl	800e0ec <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e40a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e40e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e412:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800e416:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e41a:	fb13 f302 	smulbb	r3, r3, r2
 800e41e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e422:	fb11 f102 	smulbb	r1, r1, r2
 800e426:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800e42a:	fb12 1100 	smlabb	r1, r2, r0, r1
 800e42e:	220b      	movs	r2, #11
 800e430:	fb09 f303 	mul.w	r3, r9, r3
 800e434:	434a      	muls	r2, r1
 800e436:	4293      	cmp	r3, r2
 800e438:	dab5      	bge.n	800e3a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e43a:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e43e:	a806      	add	r0, sp, #24
 800e440:	4642      	mov	r2, r8
 800e442:	f7ff ff45 	bl	800e2d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e446:	e897 0003 	ldmia.w	r7, {r0, r1}
 800e44a:	e884 0003 	stmia.w	r4, {r0, r1}
 800e44e:	e7aa      	b.n	800e3a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800e450 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800e450:	b530      	push	{r4, r5, lr}
 800e452:	4b1d      	ldr	r3, [pc, #116]	; (800e4c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800e454:	b085      	sub	sp, #20
 800e456:	460c      	mov	r4, r1
 800e458:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e45c:	4b1b      	ldr	r3, [pc, #108]	; (800e4cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800e45e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e462:	2100      	movs	r1, #0
 800e464:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e468:	9100      	str	r1, [sp, #0]
 800e46a:	4605      	mov	r5, r0
 800e46c:	6861      	ldr	r1, [r4, #4]
 800e46e:	6820      	ldr	r0, [r4, #0]
 800e470:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e474:	ab02      	add	r3, sp, #8
 800e476:	c303      	stmia	r3!, {r0, r1}
 800e478:	4669      	mov	r1, sp
 800e47a:	a802      	add	r0, sp, #8
 800e47c:	f7fc fddc 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800e480:	ab02      	add	r3, sp, #8
 800e482:	cb03      	ldmia	r3!, {r0, r1}
 800e484:	4b12      	ldr	r3, [pc, #72]	; (800e4d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800e486:	6020      	str	r0, [r4, #0]
 800e488:	6818      	ldr	r0, [r3, #0]
 800e48a:	6061      	str	r1, [r4, #4]
 800e48c:	b138      	cbz	r0, 800e49e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e48e:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800e492:	b133      	cbz	r3, 800e4a2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800e494:	6821      	ldr	r1, [r4, #0]
 800e496:	6862      	ldr	r2, [r4, #4]
 800e498:	4628      	mov	r0, r5
 800e49a:	f7ff ff59 	bl	800e350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e49e:	b005      	add	sp, #20
 800e4a0:	bd30      	pop	{r4, r5, pc}
 800e4a2:	6803      	ldr	r3, [r0, #0]
 800e4a4:	4621      	mov	r1, r4
 800e4a6:	689b      	ldr	r3, [r3, #8]
 800e4a8:	4798      	blx	r3
 800e4aa:	4b0a      	ldr	r3, [pc, #40]	; (800e4d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800e4ac:	6818      	ldr	r0, [r3, #0]
 800e4ae:	b118      	cbz	r0, 800e4b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800e4b0:	6803      	ldr	r3, [r0, #0]
 800e4b2:	4621      	mov	r1, r4
 800e4b4:	689b      	ldr	r3, [r3, #8]
 800e4b6:	4798      	blx	r3
 800e4b8:	4b07      	ldr	r3, [pc, #28]	; (800e4d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800e4ba:	6818      	ldr	r0, [r3, #0]
 800e4bc:	6803      	ldr	r3, [r0, #0]
 800e4be:	4621      	mov	r1, r4
 800e4c0:	695b      	ldr	r3, [r3, #20]
 800e4c2:	4798      	blx	r3
 800e4c4:	e7eb      	b.n	800e49e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e4c6:	bf00      	nop
 800e4c8:	200124ac 	.word	0x200124ac
 800e4cc:	200124ae 	.word	0x200124ae
 800e4d0:	20012514 	.word	0x20012514
 800e4d4:	20012510 	.word	0x20012510
 800e4d8:	200124b8 	.word	0x200124b8

0800e4dc <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800e4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4e0:	4604      	mov	r4, r0
 800e4e2:	b09b      	sub	sp, #108	; 0x6c
 800e4e4:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800e4e8:	b129      	cbz	r1, 800e4f6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800e4ea:	2300      	movs	r3, #0
 800e4ec:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800e4f0:	b01b      	add	sp, #108	; 0x6c
 800e4f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4f6:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800e4fa:	4630      	mov	r0, r6
 800e4fc:	f7fc fddf 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e500:	4605      	mov	r5, r0
 800e502:	b940      	cbnz	r0, 800e516 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800e504:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e508:	4620      	mov	r0, r4
 800e50a:	f7ff ff21 	bl	800e350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e50e:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800e512:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800e516:	4b92      	ldr	r3, [pc, #584]	; (800e760 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x284>)
 800e518:	681b      	ldr	r3, [r3, #0]
 800e51a:	b33b      	cbz	r3, 800e56c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800e51c:	4d91      	ldr	r5, [pc, #580]	; (800e764 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x288>)
 800e51e:	4628      	mov	r0, r5
 800e520:	f7fc fdcd 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e524:	4606      	mov	r6, r0
 800e526:	bb08      	cbnz	r0, 800e56c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800e528:	4628      	mov	r0, r5
 800e52a:	f7ff fc37 	bl	800dd9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e52e:	6829      	ldr	r1, [r5, #0]
 800e530:	686a      	ldr	r2, [r5, #4]
 800e532:	4620      	mov	r0, r4
 800e534:	f7ff ff0c 	bl	800e350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e538:	802e      	strh	r6, [r5, #0]
 800e53a:	806e      	strh	r6, [r5, #2]
 800e53c:	80ae      	strh	r6, [r5, #4]
 800e53e:	80ee      	strh	r6, [r5, #6]
 800e540:	4f89      	ldr	r7, [pc, #548]	; (800e768 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x28c>)
 800e542:	a809      	add	r0, sp, #36	; 0x24
 800e544:	f7ff fe71 	bl	800e22a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e548:	883d      	ldrh	r5, [r7, #0]
 800e54a:	462e      	mov	r6, r5
 800e54c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e550:	42b3      	cmp	r3, r6
 800e552:	d910      	bls.n	800e576 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800e554:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e558:	a809      	add	r0, sp, #36	; 0x24
 800e55a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800e55e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800e562:	3601      	adds	r6, #1
 800e564:	f7ff fed2 	bl	800e30c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e568:	b2b6      	uxth	r6, r6
 800e56a:	e7ef      	b.n	800e54c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e56c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e570:	2b00      	cmp	r3, #0
 800e572:	d1e5      	bne.n	800e540 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800e574:	e7bc      	b.n	800e4f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e576:	462e      	mov	r6, r5
 800e578:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e57c:	42b3      	cmp	r3, r6
 800e57e:	d90b      	bls.n	800e598 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800e580:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e584:	4620      	mov	r0, r4
 800e586:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e58a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e58e:	3601      	adds	r6, #1
 800e590:	f7ff fede 	bl	800e350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e594:	b2b6      	uxth	r6, r6
 800e596:	e7ef      	b.n	800e578 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800e598:	4a74      	ldr	r2, [pc, #464]	; (800e76c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x290>)
 800e59a:	6813      	ldr	r3, [r2, #0]
 800e59c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e5a0:	2b01      	cmp	r3, #1
 800e5a2:	4690      	mov	r8, r2
 800e5a4:	f040 8094 	bne.w	800e6d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800e5a8:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800e5ac:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800e5b0:	33aa      	adds	r3, #170	; 0xaa
 800e5b2:	f04f 0900 	mov.w	r9, #0
 800e5b6:	42a8      	cmp	r0, r5
 800e5b8:	f103 0308 	add.w	r3, r3, #8
 800e5bc:	dd0a      	ble.n	800e5d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800e5be:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e5c2:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800e5c6:	440a      	add	r2, r1
 800e5c8:	b212      	sxth	r2, r2
 800e5ca:	4591      	cmp	r9, r2
 800e5cc:	bfb8      	it	lt
 800e5ce:	4691      	movlt	r9, r2
 800e5d0:	3501      	adds	r5, #1
 800e5d2:	e7f0      	b.n	800e5b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800e5d4:	4b66      	ldr	r3, [pc, #408]	; (800e770 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x294>)
 800e5d6:	4e67      	ldr	r6, [pc, #412]	; (800e774 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x298>)
 800e5d8:	881d      	ldrh	r5, [r3, #0]
 800e5da:	2300      	movs	r3, #0
 800e5dc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e5e0:	2d0f      	cmp	r5, #15
 800e5e2:	bf8c      	ite	hi
 800e5e4:	08ed      	lsrhi	r5, r5, #3
 800e5e6:	2501      	movls	r5, #1
 800e5e8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e5ec:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800e5f0:	f8d8 0000 	ldr.w	r0, [r8]
 800e5f4:	440b      	add	r3, r1
 800e5f6:	b21b      	sxth	r3, r3
 800e5f8:	4599      	cmp	r9, r3
 800e5fa:	6802      	ldr	r2, [r0, #0]
 800e5fc:	dd4b      	ble.n	800e696 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800e5fe:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800e602:	4798      	blx	r3
 800e604:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e608:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e60c:	4413      	add	r3, r2
 800e60e:	b21b      	sxth	r3, r3
 800e610:	195a      	adds	r2, r3, r5
 800e612:	4290      	cmp	r0, r2
 800e614:	da07      	bge.n	800e626 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800e616:	4581      	cmp	r9, r0
 800e618:	dd05      	ble.n	800e626 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800e61a:	4298      	cmp	r0, r3
 800e61c:	da33      	bge.n	800e686 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800e61e:	2b00      	cmp	r3, #0
 800e620:	dd31      	ble.n	800e686 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800e622:	4648      	mov	r0, r9
 800e624:	e004      	b.n	800e630 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800e626:	4298      	cmp	r0, r3
 800e628:	dbfb      	blt.n	800e622 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800e62a:	4548      	cmp	r0, r9
 800e62c:	bfa8      	it	ge
 800e62e:	4648      	movge	r0, r9
 800e630:	f9b6 2000 	ldrsh.w	r2, [r6]
 800e634:	f8b7 a000 	ldrh.w	sl, [r7]
 800e638:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e63c:	2100      	movs	r1, #0
 800e63e:	1ac0      	subs	r0, r0, r3
 800e640:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e644:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e648:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e64c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e650:	4553      	cmp	r3, sl
 800e652:	d9c9      	bls.n	800e5e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800e654:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800e658:	ab07      	add	r3, sp, #28
 800e65a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e65e:	6851      	ldr	r1, [r2, #4]
 800e660:	c303      	stmia	r3!, {r0, r1}
 800e662:	a807      	add	r0, sp, #28
 800e664:	a905      	add	r1, sp, #20
 800e666:	f7fc fce7 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800e66a:	a807      	add	r0, sp, #28
 800e66c:	f7fc fd27 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e670:	b920      	cbnz	r0, 800e67c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800e672:	6823      	ldr	r3, [r4, #0]
 800e674:	a907      	add	r1, sp, #28
 800e676:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e678:	4620      	mov	r0, r4
 800e67a:	4798      	blx	r3
 800e67c:	f10a 0a01 	add.w	sl, sl, #1
 800e680:	fa1f fa8a 	uxth.w	sl, sl
 800e684:	e7e2      	b.n	800e64c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800e686:	f8d8 0000 	ldr.w	r0, [r8]
 800e68a:	6803      	ldr	r3, [r0, #0]
 800e68c:	2101      	movs	r1, #1
 800e68e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e692:	4798      	blx	r3
 800e694:	e7a8      	b.n	800e5e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800e696:	69d3      	ldr	r3, [r2, #28]
 800e698:	4798      	blx	r3
 800e69a:	4b37      	ldr	r3, [pc, #220]	; (800e778 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29c>)
 800e69c:	781b      	ldrb	r3, [r3, #0]
 800e69e:	2b00      	cmp	r3, #0
 800e6a0:	f43f af26 	beq.w	800e4f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e6a4:	2300      	movs	r3, #0
 800e6a6:	883d      	ldrh	r5, [r7, #0]
 800e6a8:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800e6ac:	34ea      	adds	r4, #234	; 0xea
 800e6ae:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800e6b2:	42ab      	cmp	r3, r5
 800e6b4:	f67f af1c 	bls.w	800e4f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e6b8:	ab1a      	add	r3, sp, #104	; 0x68
 800e6ba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e6be:	3b44      	subs	r3, #68	; 0x44
 800e6c0:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e6c4:	4620      	mov	r0, r4
 800e6c6:	3501      	adds	r5, #1
 800e6c8:	f7ff fe20 	bl	800e30c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e6cc:	b2ad      	uxth	r5, r5
 800e6ce:	e7ee      	b.n	800e6ae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800e6d0:	2b02      	cmp	r3, #2
 800e6d2:	f040 813d 	bne.w	800e950 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>
 800e6d6:	4b29      	ldr	r3, [pc, #164]	; (800e77c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>)
 800e6d8:	781b      	ldrb	r3, [r3, #0]
 800e6da:	2b01      	cmp	r3, #1
 800e6dc:	f000 809d 	beq.w	800e81a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800e6e0:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800e6e4:	883a      	ldrh	r2, [r7, #0]
 800e6e6:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800e6ea:	3201      	adds	r2, #1
 800e6ec:	b292      	uxth	r2, r2
 800e6ee:	2900      	cmp	r1, #0
 800e6f0:	d0d3      	beq.n	800e69a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800e6f2:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800e6f6:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800e6fa:	441d      	add	r5, r3
 800e6fc:	b22d      	sxth	r5, r5
 800e6fe:	4610      	mov	r0, r2
 800e700:	f04f 0a00 	mov.w	sl, #0
 800e704:	b283      	uxth	r3, r0
 800e706:	4299      	cmp	r1, r3
 800e708:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800e70c:	f240 80c3 	bls.w	800e896 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ba>
 800e710:	4426      	add	r6, r4
 800e712:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800e716:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800e71a:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800e71e:	4573      	cmp	r3, lr
 800e720:	4684      	mov	ip, r0
 800e722:	f340 80a5 	ble.w	800e870 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x394>
 800e726:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800e72a:	4475      	add	r5, lr
 800e72c:	b22d      	sxth	r5, r5
 800e72e:	429d      	cmp	r5, r3
 800e730:	bfa8      	it	ge
 800e732:	461d      	movge	r5, r3
 800e734:	3001      	adds	r0, #1
 800e736:	46e2      	mov	sl, ip
 800e738:	e7e4      	b.n	800e704 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800e73a:	d10b      	bne.n	800e754 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x278>
 800e73c:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800e740:	f9b9 10ae 	ldrsh.w	r1, [r9, #174]	; 0xae
 800e744:	458c      	cmp	ip, r1
 800e746:	bfb4      	ite	lt
 800e748:	469c      	movlt	ip, r3
 800e74a:	46b4      	movge	ip, r6
 800e74c:	4572      	cmp	r2, lr
 800e74e:	bfb8      	it	lt
 800e750:	4672      	movlt	r2, lr
 800e752:	e08a      	b.n	800e86a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800e754:	428a      	cmp	r2, r1
 800e756:	bfb8      	it	lt
 800e758:	460a      	movlt	r2, r1
 800e75a:	46b4      	mov	ip, r6
 800e75c:	e085      	b.n	800e86a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800e75e:	bf00      	nop
 800e760:	20012510 	.word	0x20012510
 800e764:	2001251c 	.word	0x2001251c
 800e768:	20000094 	.word	0x20000094
 800e76c:	200124b8 	.word	0x200124b8
 800e770:	200124ae 	.word	0x200124ae
 800e774:	200124ac 	.word	0x200124ac
 800e778:	200124b6 	.word	0x200124b6
 800e77c:	200124b0 	.word	0x200124b0
 800e780:	1961      	adds	r1, r4, r5
 800e782:	ab05      	add	r3, sp, #20
 800e784:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800e788:	6849      	ldr	r1, [r1, #4]
 800e78a:	c303      	stmia	r3!, {r0, r1}
 800e78c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e790:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800e794:	2b13      	cmp	r3, #19
 800e796:	bfd8      	it	le
 800e798:	f9bd 2014 	ldrshle.w	r2, [sp, #20]
 800e79c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e7a0:	440b      	add	r3, r1
 800e7a2:	1a9b      	subs	r3, r3, r2
 800e7a4:	a805      	add	r0, sp, #20
 800e7a6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e7aa:	f7ff fb51 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800e7ae:	a805      	add	r0, sp, #20
 800e7b0:	f7fc fc85 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e7b4:	bb88      	cbnz	r0, 800e81a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800e7b6:	f9bd c01a 	ldrsh.w	ip, [sp, #26]
 800e7ba:	f8d8 0000 	ldr.w	r0, [r8]
 800e7be:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e7c2:	f8d0 e000 	ldr.w	lr, [r0]
 800e7c6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e7ca:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800e7ce:	f1bc 0f14 	cmp.w	ip, #20
 800e7d2:	bfa8      	it	ge
 800e7d4:	f04f 0c14 	movge.w	ip, #20
 800e7d8:	fa1f fc8c 	uxth.w	ip, ip
 800e7dc:	f8cd c000 	str.w	ip, [sp]
 800e7e0:	f8de 9078 	ldr.w	r9, [lr, #120]	; 0x78
 800e7e4:	47c8      	blx	r9
 800e7e6:	4681      	mov	r9, r0
 800e7e8:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e7ec:	a805      	add	r0, sp, #20
 800e7ee:	f7ff fad5 	bl	800dd9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e7f2:	6823      	ldr	r3, [r4, #0]
 800e7f4:	4425      	add	r5, r4
 800e7f6:	4620      	mov	r0, r4
 800e7f8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e7fa:	a905      	add	r1, sp, #20
 800e7fc:	4798      	blx	r3
 800e7fe:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800e802:	eba0 0009 	sub.w	r0, r0, r9
 800e806:	b200      	sxth	r0, r0
 800e808:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800e80c:	b928      	cbnz	r0, 800e81a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800e80e:	b2b2      	uxth	r2, r6
 800e810:	f104 01a8 	add.w	r1, r4, #168	; 0xa8
 800e814:	a807      	add	r0, sp, #28
 800e816:	f7ff fd5b 	bl	800e2d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e81a:	f8b4 a0e8 	ldrh.w	sl, [r4, #232]	; 0xe8
 800e81e:	f1ba 0f00 	cmp.w	sl, #0
 800e822:	f43f af3a 	beq.w	800e69a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800e826:	883b      	ldrh	r3, [r7, #0]
 800e828:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800e82c:	3301      	adds	r3, #1
 800e82e:	b29b      	uxth	r3, r3
 800e830:	2600      	movs	r6, #0
 800e832:	b299      	uxth	r1, r3
 800e834:	458a      	cmp	sl, r1
 800e836:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800e83a:	d9a1      	bls.n	800e780 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a4>
 800e83c:	4425      	add	r5, r4
 800e83e:	eb04 09c3 	add.w	r9, r4, r3, lsl #3
 800e842:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800e846:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800e84a:	f9b9 e0a8 	ldrsh.w	lr, [r9, #168]	; 0xa8
 800e84e:	4408      	add	r0, r1
 800e850:	f8b9 10ac 	ldrh.w	r1, [r9, #172]	; 0xac
 800e854:	4471      	add	r1, lr
 800e856:	b200      	sxth	r0, r0
 800e858:	b209      	sxth	r1, r1
 800e85a:	4288      	cmp	r0, r1
 800e85c:	469c      	mov	ip, r3
 800e85e:	f6bf af6c 	bge.w	800e73a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800e862:	4586      	cmp	lr, r0
 800e864:	4672      	mov	r2, lr
 800e866:	bfb8      	it	lt
 800e868:	4602      	movlt	r2, r0
 800e86a:	3301      	adds	r3, #1
 800e86c:	4666      	mov	r6, ip
 800e86e:	e7e0      	b.n	800e832 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x356>
 800e870:	d10c      	bne.n	800e88c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b0>
 800e872:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800e876:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800e87a:	45b4      	cmp	ip, r6
 800e87c:	bfb4      	ite	lt
 800e87e:	4684      	movlt	ip, r0
 800e880:	46d4      	movge	ip, sl
 800e882:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800e886:	4433      	add	r3, r6
 800e888:	b21b      	sxth	r3, r3
 800e88a:	e750      	b.n	800e72e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x252>
 800e88c:	4575      	cmp	r5, lr
 800e88e:	bfa8      	it	ge
 800e890:	4675      	movge	r5, lr
 800e892:	46d4      	mov	ip, sl
 800e894:	e74e      	b.n	800e734 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x258>
 800e896:	eb0b 0006 	add.w	r0, fp, r6
 800e89a:	4426      	add	r6, r4
 800e89c:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800e8a0:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800e8a4:	f1b9 0f13 	cmp.w	r9, #19
 800e8a8:	bfde      	ittt	le
 800e8aa:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800e8ae:	444d      	addle	r5, r9
 800e8b0:	b22d      	sxthle	r5, r5
 800e8b2:	f7fc fc04 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e8b6:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800e8ba:	2800      	cmp	r0, #0
 800e8bc:	f47f af17 	bne.w	800e6ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x212>
 800e8c0:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800e8c4:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e8c8:	eba5 050c 	sub.w	r5, r5, ip
 800e8cc:	fa1f f28c 	uxth.w	r2, ip
 800e8d0:	fa1f f989 	uxth.w	r9, r9
 800e8d4:	eb02 0009 	add.w	r0, r2, r9
 800e8d8:	2d14      	cmp	r5, #20
 800e8da:	bfa8      	it	ge
 800e8dc:	2514      	movge	r5, #20
 800e8de:	b200      	sxth	r0, r0
 800e8e0:	fa1f fe85 	uxth.w	lr, r5
 800e8e4:	eba0 000c 	sub.w	r0, r0, ip
 800e8e8:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800e8ec:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800e8f0:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e8f4:	4586      	cmp	lr, r0
 800e8f6:	f8d8 0000 	ldr.w	r0, [r8]
 800e8fa:	f8ad c016 	strh.w	ip, [sp, #22]
 800e8fe:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e902:	bfb8      	it	lt
 800e904:	46f1      	movlt	r9, lr
 800e906:	6805      	ldr	r5, [r0, #0]
 800e908:	f8cd 9000 	str.w	r9, [sp]
 800e90c:	b29b      	uxth	r3, r3
 800e90e:	b289      	uxth	r1, r1
 800e910:	6fad      	ldr	r5, [r5, #120]	; 0x78
 800e912:	47a8      	blx	r5
 800e914:	6823      	ldr	r3, [r4, #0]
 800e916:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e91a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e91c:	a905      	add	r1, sp, #20
 800e91e:	4620      	mov	r0, r4
 800e920:	4798      	blx	r3
 800e922:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800e926:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800e92a:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800e92e:	1a5b      	subs	r3, r3, r1
 800e930:	440a      	add	r2, r1
 800e932:	b21b      	sxth	r3, r3
 800e934:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800e938:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800e93c:	2b00      	cmp	r3, #0
 800e93e:	f47f aed1 	bne.w	800e6e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800e942:	fa1f f28a 	uxth.w	r2, sl
 800e946:	4659      	mov	r1, fp
 800e948:	a807      	add	r0, sp, #28
 800e94a:	f7ff fcc1 	bl	800e2d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e94e:	e6c9      	b.n	800e6e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800e950:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e954:	42ab      	cmp	r3, r5
 800e956:	f67f aea0 	bls.w	800e69a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800e95a:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800e95e:	ab07      	add	r3, sp, #28
 800e960:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e964:	6851      	ldr	r1, [r2, #4]
 800e966:	c303      	stmia	r3!, {r0, r1}
 800e968:	a807      	add	r0, sp, #28
 800e96a:	f7fc fba8 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 800e96e:	b920      	cbnz	r0, 800e97a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49e>
 800e970:	6823      	ldr	r3, [r4, #0]
 800e972:	a907      	add	r1, sp, #28
 800e974:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e976:	4620      	mov	r0, r4
 800e978:	4798      	blx	r3
 800e97a:	3501      	adds	r5, #1
 800e97c:	b2ad      	uxth	r5, r5
 800e97e:	e7e7      	b.n	800e950 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>

0800e980 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800e980:	4b03      	ldr	r3, [pc, #12]	; (800e990 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800e982:	2200      	movs	r2, #0
 800e984:	801a      	strh	r2, [r3, #0]
 800e986:	805a      	strh	r2, [r3, #2]
 800e988:	809a      	strh	r2, [r3, #4]
 800e98a:	80da      	strh	r2, [r3, #6]
 800e98c:	4770      	bx	lr
 800e98e:	bf00      	nop
 800e990:	2001251c 	.word	0x2001251c

0800e994 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800e994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e998:	4607      	mov	r7, r0
 800e99a:	b099      	sub	sp, #100	; 0x64
 800e99c:	a802      	add	r0, sp, #8
 800e99e:	4614      	mov	r4, r2
 800e9a0:	461d      	mov	r5, r3
 800e9a2:	468a      	mov	sl, r1
 800e9a4:	f000 fe37 	bl	800f616 <_ZN8touchgfx12TextProviderC1Ev>
 800e9a8:	683b      	ldr	r3, [r7, #0]
 800e9aa:	4638      	mov	r0, r7
 800e9ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e9ae:	4798      	blx	r3
 800e9b0:	462a      	mov	r2, r5
 800e9b2:	4603      	mov	r3, r0
 800e9b4:	4621      	mov	r1, r4
 800e9b6:	a802      	add	r0, sp, #8
 800e9b8:	f000 fe72 	bl	800f6a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800e9bc:	2500      	movs	r5, #0
 800e9be:	462c      	mov	r4, r5
 800e9c0:	46a9      	mov	r9, r5
 800e9c2:	46a8      	mov	r8, r5
 800e9c4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800e9c8:	2300      	movs	r3, #0
 800e9ca:	9301      	str	r3, [sp, #4]
 800e9cc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e9d0:	429c      	cmp	r4, r3
 800e9d2:	d002      	beq.n	800e9da <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800e9d4:	455c      	cmp	r4, fp
 800e9d6:	bf18      	it	ne
 800e9d8:	4625      	movne	r5, r4
 800e9da:	ab01      	add	r3, sp, #4
 800e9dc:	463a      	mov	r2, r7
 800e9de:	4651      	mov	r1, sl
 800e9e0:	a802      	add	r0, sp, #8
 800e9e2:	f001 f957 	bl	800fc94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e9e6:	4604      	mov	r4, r0
 800e9e8:	b108      	cbz	r0, 800e9ee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800e9ea:	280a      	cmp	r0, #10
 800e9ec:	d10a      	bne.n	800ea04 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800e9ee:	45c1      	cmp	r9, r8
 800e9f0:	bf38      	it	cc
 800e9f2:	46c1      	movcc	r9, r8
 800e9f4:	f04f 0800 	mov.w	r8, #0
 800e9f8:	2c00      	cmp	r4, #0
 800e9fa:	d1e5      	bne.n	800e9c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800e9fc:	4648      	mov	r0, r9
 800e9fe:	b019      	add	sp, #100	; 0x64
 800ea00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea04:	9a01      	ldr	r2, [sp, #4]
 800ea06:	2a00      	cmp	r2, #0
 800ea08:	d0de      	beq.n	800e9c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800ea0a:	7b56      	ldrb	r6, [r2, #13]
 800ea0c:	683b      	ldr	r3, [r7, #0]
 800ea0e:	8894      	ldrh	r4, [r2, #4]
 800ea10:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ea12:	0076      	lsls	r6, r6, #1
 800ea14:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800ea18:	7a96      	ldrb	r6, [r2, #10]
 800ea1a:	4629      	mov	r1, r5
 800ea1c:	4306      	orrs	r6, r0
 800ea1e:	4638      	mov	r0, r7
 800ea20:	4798      	blx	r3
 800ea22:	4430      	add	r0, r6
 800ea24:	4480      	add	r8, r0
 800ea26:	fa1f f888 	uxth.w	r8, r8
 800ea2a:	e7e5      	b.n	800e9f8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800ea2c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ea2c:	b508      	push	{r3, lr}
 800ea2e:	6803      	ldr	r3, [r0, #0]
 800ea30:	68db      	ldr	r3, [r3, #12]
 800ea32:	4798      	blx	r3
 800ea34:	b128      	cbz	r0, 800ea42 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ea36:	7b43      	ldrb	r3, [r0, #13]
 800ea38:	7a80      	ldrb	r0, [r0, #10]
 800ea3a:	005b      	lsls	r3, r3, #1
 800ea3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ea40:	4318      	orrs	r0, r3
 800ea42:	bd08      	pop	{r3, pc}

0800ea44 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ea44:	b40e      	push	{r1, r2, r3}
 800ea46:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea48:	b098      	sub	sp, #96	; 0x60
 800ea4a:	ab1d      	add	r3, sp, #116	; 0x74
 800ea4c:	4605      	mov	r5, r0
 800ea4e:	f853 4b04 	ldr.w	r4, [r3], #4
 800ea52:	9300      	str	r3, [sp, #0]
 800ea54:	a802      	add	r0, sp, #8
 800ea56:	f000 fdde 	bl	800f616 <_ZN8touchgfx12TextProviderC1Ev>
 800ea5a:	682b      	ldr	r3, [r5, #0]
 800ea5c:	4628      	mov	r0, r5
 800ea5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ea60:	4798      	blx	r3
 800ea62:	ae18      	add	r6, sp, #96	; 0x60
 800ea64:	4603      	mov	r3, r0
 800ea66:	4621      	mov	r1, r4
 800ea68:	9a00      	ldr	r2, [sp, #0]
 800ea6a:	2400      	movs	r4, #0
 800ea6c:	a802      	add	r0, sp, #8
 800ea6e:	f000 fe17 	bl	800f6a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ea72:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800ea76:	462a      	mov	r2, r5
 800ea78:	4633      	mov	r3, r6
 800ea7a:	4621      	mov	r1, r4
 800ea7c:	a802      	add	r0, sp, #8
 800ea7e:	f001 f909 	bl	800fc94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ea82:	b1f0      	cbz	r0, 800eac2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800ea84:	280a      	cmp	r0, #10
 800ea86:	d018      	beq.n	800eaba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800ea88:	9f01      	ldr	r7, [sp, #4]
 800ea8a:	b1b7      	cbz	r7, 800eaba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800ea8c:	7b78      	ldrb	r0, [r7, #13]
 800ea8e:	7a3b      	ldrb	r3, [r7, #8]
 800ea90:	88aa      	ldrh	r2, [r5, #4]
 800ea92:	00c1      	lsls	r1, r0, #3
 800ea94:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ea98:	4319      	orrs	r1, r3
 800ea9a:	0643      	lsls	r3, r0, #25
 800ea9c:	bf44      	itt	mi
 800ea9e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800eaa2:	b219      	sxthmi	r1, r3
 800eaa4:	0100      	lsls	r0, r0, #4
 800eaa6:	79fb      	ldrb	r3, [r7, #7]
 800eaa8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800eaac:	4303      	orrs	r3, r0
 800eaae:	4413      	add	r3, r2
 800eab0:	1a5b      	subs	r3, r3, r1
 800eab2:	b29b      	uxth	r3, r3
 800eab4:	42a3      	cmp	r3, r4
 800eab6:	bfc8      	it	gt
 800eab8:	b21c      	sxthgt	r4, r3
 800eaba:	4633      	mov	r3, r6
 800eabc:	462a      	mov	r2, r5
 800eabe:	2100      	movs	r1, #0
 800eac0:	e7dc      	b.n	800ea7c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800eac2:	b2a0      	uxth	r0, r4
 800eac4:	b018      	add	sp, #96	; 0x60
 800eac6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800eaca:	b003      	add	sp, #12
 800eacc:	4770      	bx	lr

0800eace <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800eace:	b40e      	push	{r1, r2, r3}
 800ead0:	b530      	push	{r4, r5, lr}
 800ead2:	b098      	sub	sp, #96	; 0x60
 800ead4:	ab1b      	add	r3, sp, #108	; 0x6c
 800ead6:	4604      	mov	r4, r0
 800ead8:	f853 5b04 	ldr.w	r5, [r3], #4
 800eadc:	9301      	str	r3, [sp, #4]
 800eade:	a802      	add	r0, sp, #8
 800eae0:	f000 fd99 	bl	800f616 <_ZN8touchgfx12TextProviderC1Ev>
 800eae4:	6823      	ldr	r3, [r4, #0]
 800eae6:	4620      	mov	r0, r4
 800eae8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eaea:	4798      	blx	r3
 800eaec:	9a01      	ldr	r2, [sp, #4]
 800eaee:	4603      	mov	r3, r0
 800eaf0:	4629      	mov	r1, r5
 800eaf2:	a802      	add	r0, sp, #8
 800eaf4:	f000 fdd4 	bl	800f6a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800eaf8:	a802      	add	r0, sp, #8
 800eafa:	f001 f9c3 	bl	800fe84 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eafe:	2401      	movs	r4, #1
 800eb00:	b2a3      	uxth	r3, r4
 800eb02:	b140      	cbz	r0, 800eb16 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800eb04:	280a      	cmp	r0, #10
 800eb06:	bf08      	it	eq
 800eb08:	3301      	addeq	r3, #1
 800eb0a:	a802      	add	r0, sp, #8
 800eb0c:	bf08      	it	eq
 800eb0e:	b21c      	sxtheq	r4, r3
 800eb10:	f001 f9b8 	bl	800fe84 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eb14:	e7f4      	b.n	800eb00 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800eb16:	4618      	mov	r0, r3
 800eb18:	b018      	add	sp, #96	; 0x60
 800eb1a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800eb1e:	b003      	add	sp, #12
 800eb20:	4770      	bx	lr

0800eb22 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800eb22:	b40e      	push	{r1, r2, r3}
 800eb24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb26:	b098      	sub	sp, #96	; 0x60
 800eb28:	ab1d      	add	r3, sp, #116	; 0x74
 800eb2a:	4604      	mov	r4, r0
 800eb2c:	f853 5b04 	ldr.w	r5, [r3], #4
 800eb30:	9300      	str	r3, [sp, #0]
 800eb32:	a802      	add	r0, sp, #8
 800eb34:	f000 fd6f 	bl	800f616 <_ZN8touchgfx12TextProviderC1Ev>
 800eb38:	6823      	ldr	r3, [r4, #0]
 800eb3a:	4620      	mov	r0, r4
 800eb3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb3e:	4798      	blx	r3
 800eb40:	4629      	mov	r1, r5
 800eb42:	4603      	mov	r3, r0
 800eb44:	9a00      	ldr	r2, [sp, #0]
 800eb46:	a802      	add	r0, sp, #8
 800eb48:	ad18      	add	r5, sp, #96	; 0x60
 800eb4a:	f000 fda9 	bl	800f6a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800eb4e:	2100      	movs	r1, #0
 800eb50:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800eb54:	4622      	mov	r2, r4
 800eb56:	462b      	mov	r3, r5
 800eb58:	a802      	add	r0, sp, #8
 800eb5a:	f001 f89b 	bl	800fc94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eb5e:	26ff      	movs	r6, #255	; 0xff
 800eb60:	b1d8      	cbz	r0, 800eb9a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800eb62:	280a      	cmp	r0, #10
 800eb64:	d012      	beq.n	800eb8c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800eb66:	9801      	ldr	r0, [sp, #4]
 800eb68:	b180      	cbz	r0, 800eb8c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800eb6a:	7b47      	ldrb	r7, [r0, #13]
 800eb6c:	7922      	ldrb	r2, [r4, #4]
 800eb6e:	00fb      	lsls	r3, r7, #3
 800eb70:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800eb74:	7a03      	ldrb	r3, [r0, #8]
 800eb76:	430b      	orrs	r3, r1
 800eb78:	0679      	lsls	r1, r7, #25
 800eb7a:	bf44      	itt	mi
 800eb7c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eb80:	b21b      	sxthmi	r3, r3
 800eb82:	1ad3      	subs	r3, r2, r3
 800eb84:	b2db      	uxtb	r3, r3
 800eb86:	429e      	cmp	r6, r3
 800eb88:	bf28      	it	cs
 800eb8a:	461e      	movcs	r6, r3
 800eb8c:	462b      	mov	r3, r5
 800eb8e:	4622      	mov	r2, r4
 800eb90:	2100      	movs	r1, #0
 800eb92:	a802      	add	r0, sp, #8
 800eb94:	f001 f87e 	bl	800fc94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eb98:	e7e2      	b.n	800eb60 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800eb9a:	4630      	mov	r0, r6
 800eb9c:	b018      	add	sp, #96	; 0x60
 800eb9e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800eba2:	b003      	add	sp, #12
 800eba4:	4770      	bx	lr

0800eba6 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800eba6:	b513      	push	{r0, r1, r4, lr}
 800eba8:	1d01      	adds	r1, r0, #4
 800ebaa:	4603      	mov	r3, r0
 800ebac:	c903      	ldmia	r1, {r0, r1}
 800ebae:	466a      	mov	r2, sp
 800ebb0:	e882 0003 	stmia.w	r2, {r0, r1}
 800ebb4:	2100      	movs	r1, #0
 800ebb6:	9100      	str	r1, [sp, #0]
 800ebb8:	6819      	ldr	r1, [r3, #0]
 800ebba:	4618      	mov	r0, r3
 800ebbc:	690c      	ldr	r4, [r1, #16]
 800ebbe:	4611      	mov	r1, r2
 800ebc0:	47a0      	blx	r4
 800ebc2:	b002      	add	sp, #8
 800ebc4:	bd10      	pop	{r4, pc}

0800ebc6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800ebc6:	b538      	push	{r3, r4, r5, lr}
 800ebc8:	680b      	ldr	r3, [r1, #0]
 800ebca:	460c      	mov	r4, r1
 800ebcc:	68db      	ldr	r3, [r3, #12]
 800ebce:	4605      	mov	r5, r0
 800ebd0:	4798      	blx	r3
 800ebd2:	6823      	ldr	r3, [r4, #0]
 800ebd4:	4620      	mov	r0, r4
 800ebd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ebd8:	4629      	mov	r1, r5
 800ebda:	4798      	blx	r3
 800ebdc:	4628      	mov	r0, r5
 800ebde:	bd38      	pop	{r3, r4, r5, pc}

0800ebe0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800ebe0:	b410      	push	{r4}
 800ebe2:	880a      	ldrh	r2, [r1, #0]
 800ebe4:	8884      	ldrh	r4, [r0, #4]
 800ebe6:	4422      	add	r2, r4
 800ebe8:	800a      	strh	r2, [r1, #0]
 800ebea:	88c4      	ldrh	r4, [r0, #6]
 800ebec:	884a      	ldrh	r2, [r1, #2]
 800ebee:	4422      	add	r2, r4
 800ebf0:	804a      	strh	r2, [r1, #2]
 800ebf2:	6940      	ldr	r0, [r0, #20]
 800ebf4:	b120      	cbz	r0, 800ec00 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800ebf6:	6803      	ldr	r3, [r0, #0]
 800ebf8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ebfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ebfe:	4718      	bx	r3
 800ec00:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ec04:	4770      	bx	lr

0800ec06 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ec06:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec08:	460b      	mov	r3, r1
 800ec0a:	b085      	sub	sp, #20
 800ec0c:	4604      	mov	r4, r0
 800ec0e:	b901      	cbnz	r1, 800ec12 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ec10:	b1fa      	cbz	r2, 800ec52 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800ec12:	1d27      	adds	r7, r4, #4
 800ec14:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ec18:	466e      	mov	r6, sp
 800ec1a:	e886 0003 	stmia.w	r6, {r0, r1}
 800ec1e:	88e1      	ldrh	r1, [r4, #6]
 800ec20:	440a      	add	r2, r1
 800ec22:	88a1      	ldrh	r1, [r4, #4]
 800ec24:	4419      	add	r1, r3
 800ec26:	6823      	ldr	r3, [r4, #0]
 800ec28:	b209      	sxth	r1, r1
 800ec2a:	4620      	mov	r0, r4
 800ec2c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ec2e:	b212      	sxth	r2, r2
 800ec30:	4798      	blx	r3
 800ec32:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ec36:	ad02      	add	r5, sp, #8
 800ec38:	e885 0003 	stmia.w	r5, {r0, r1}
 800ec3c:	6960      	ldr	r0, [r4, #20]
 800ec3e:	b150      	cbz	r0, 800ec56 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800ec40:	6803      	ldr	r3, [r0, #0]
 800ec42:	4631      	mov	r1, r6
 800ec44:	691b      	ldr	r3, [r3, #16]
 800ec46:	4798      	blx	r3
 800ec48:	6960      	ldr	r0, [r4, #20]
 800ec4a:	6803      	ldr	r3, [r0, #0]
 800ec4c:	691b      	ldr	r3, [r3, #16]
 800ec4e:	4629      	mov	r1, r5
 800ec50:	4798      	blx	r3
 800ec52:	b005      	add	sp, #20
 800ec54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec56:	f7ff fa8f 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800ec5a:	6803      	ldr	r3, [r0, #0]
 800ec5c:	4631      	mov	r1, r6
 800ec5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ec60:	4798      	blx	r3
 800ec62:	f7ff fa89 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800ec66:	6803      	ldr	r3, [r0, #0]
 800ec68:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ec6a:	e7f0      	b.n	800ec4e <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800ec6c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800ec6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec6e:	8882      	ldrh	r2, [r0, #4]
 800ec70:	880b      	ldrh	r3, [r1, #0]
 800ec72:	4413      	add	r3, r2
 800ec74:	800b      	strh	r3, [r1, #0]
 800ec76:	88c2      	ldrh	r2, [r0, #6]
 800ec78:	884b      	ldrh	r3, [r1, #2]
 800ec7a:	4413      	add	r3, r2
 800ec7c:	4602      	mov	r2, r0
 800ec7e:	804b      	strh	r3, [r1, #2]
 800ec80:	4605      	mov	r5, r0
 800ec82:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ec86:	460c      	mov	r4, r1
 800ec88:	6851      	ldr	r1, [r2, #4]
 800ec8a:	466b      	mov	r3, sp
 800ec8c:	c303      	stmia	r3!, {r0, r1}
 800ec8e:	4621      	mov	r1, r4
 800ec90:	4668      	mov	r0, sp
 800ec92:	f7fc f9d1 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800ec96:	466b      	mov	r3, sp
 800ec98:	cb03      	ldmia	r3!, {r0, r1}
 800ec9a:	6020      	str	r0, [r4, #0]
 800ec9c:	6061      	str	r1, [r4, #4]
 800ec9e:	6968      	ldr	r0, [r5, #20]
 800eca0:	b128      	cbz	r0, 800ecae <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800eca2:	6803      	ldr	r3, [r0, #0]
 800eca4:	691b      	ldr	r3, [r3, #16]
 800eca6:	4621      	mov	r1, r4
 800eca8:	4798      	blx	r3
 800ecaa:	b003      	add	sp, #12
 800ecac:	bd30      	pop	{r4, r5, pc}
 800ecae:	f7ff fa63 	bl	800e178 <_ZN8touchgfx11Application11getInstanceEv>
 800ecb2:	6803      	ldr	r3, [r0, #0]
 800ecb4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ecb6:	e7f6      	b.n	800eca6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800ecb8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800ecb8:	b570      	push	{r4, r5, r6, lr}
 800ecba:	8882      	ldrh	r2, [r0, #4]
 800ecbc:	880b      	ldrh	r3, [r1, #0]
 800ecbe:	4413      	add	r3, r2
 800ecc0:	800b      	strh	r3, [r1, #0]
 800ecc2:	88c2      	ldrh	r2, [r0, #6]
 800ecc4:	884b      	ldrh	r3, [r1, #2]
 800ecc6:	460c      	mov	r4, r1
 800ecc8:	4413      	add	r3, r2
 800ecca:	804b      	strh	r3, [r1, #2]
 800eccc:	4605      	mov	r5, r0
 800ecce:	1d01      	adds	r1, r0, #4
 800ecd0:	4620      	mov	r0, r4
 800ecd2:	f7fc f9b1 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800ecd6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800ecda:	2b00      	cmp	r3, #0
 800ecdc:	dd0b      	ble.n	800ecf6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ecde:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ece2:	2b00      	cmp	r3, #0
 800ece4:	dd07      	ble.n	800ecf6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ece6:	6968      	ldr	r0, [r5, #20]
 800ece8:	b128      	cbz	r0, 800ecf6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ecea:	6803      	ldr	r3, [r0, #0]
 800ecec:	4621      	mov	r1, r4
 800ecee:	6a1b      	ldr	r3, [r3, #32]
 800ecf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ecf4:	4718      	bx	r3
 800ecf6:	bd70      	pop	{r4, r5, r6, pc}

0800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ecf8:	b510      	push	{r4, lr}
 800ecfa:	4604      	mov	r4, r0
 800ecfc:	4608      	mov	r0, r1
 800ecfe:	2300      	movs	r3, #0
 800ed00:	8023      	strh	r3, [r4, #0]
 800ed02:	8063      	strh	r3, [r4, #2]
 800ed04:	6803      	ldr	r3, [r0, #0]
 800ed06:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ed0a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ed0e:	80a1      	strh	r1, [r4, #4]
 800ed10:	80e2      	strh	r2, [r4, #6]
 800ed12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ed14:	4621      	mov	r1, r4
 800ed16:	4798      	blx	r3
 800ed18:	4620      	mov	r0, r4
 800ed1a:	bd10      	pop	{r4, pc}

0800ed1c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800ed1c:	b530      	push	{r4, r5, lr}
 800ed1e:	8083      	strh	r3, [r0, #4]
 800ed20:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ed24:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ed28:	7183      	strb	r3, [r0, #6]
 800ed2a:	79c3      	ldrb	r3, [r0, #7]
 800ed2c:	6101      	str	r1, [r0, #16]
 800ed2e:	f365 0306 	bfi	r3, r5, #0, #7
 800ed32:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800ed36:	8282      	strh	r2, [r0, #20]
 800ed38:	f365 13c7 	bfi	r3, r5, #7, #1
 800ed3c:	71c3      	strb	r3, [r0, #7]
 800ed3e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ed42:	7203      	strb	r3, [r0, #8]
 800ed44:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ed48:	7243      	strb	r3, [r0, #9]
 800ed4a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ed4e:	8143      	strh	r3, [r0, #10]
 800ed50:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800ed54:	8183      	strh	r3, [r0, #12]
 800ed56:	4b01      	ldr	r3, [pc, #4]	; (800ed5c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800ed58:	6003      	str	r3, [r0, #0]
 800ed5a:	bd30      	pop	{r4, r5, pc}
 800ed5c:	08020274 	.word	0x08020274

0800ed60 <_ZNK8touchgfx9ConstFont4findEt>:
 800ed60:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed62:	6904      	ldr	r4, [r0, #16]
 800ed64:	8a82      	ldrh	r2, [r0, #20]
 800ed66:	88a3      	ldrh	r3, [r4, #4]
 800ed68:	1acb      	subs	r3, r1, r3
 800ed6a:	f102 32ff 	add.w	r2, r2, #4294967295
 800ed6e:	d431      	bmi.n	800edd4 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ed70:	4293      	cmp	r3, r2
 800ed72:	dd0c      	ble.n	800ed8e <_ZNK8touchgfx9ConstFont4findEt+0x2e>
 800ed74:	230e      	movs	r3, #14
 800ed76:	fb03 4302 	mla	r3, r3, r2, r4
 800ed7a:	889b      	ldrh	r3, [r3, #4]
 800ed7c:	1a5b      	subs	r3, r3, r1
 800ed7e:	1ad3      	subs	r3, r2, r3
 800ed80:	429a      	cmp	r2, r3
 800ed82:	db27      	blt.n	800edd4 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ed84:	2b00      	cmp	r3, #0
 800ed86:	bfbc      	itt	lt
 800ed88:	2302      	movlt	r3, #2
 800ed8a:	fb92 f3f3 	sdivlt	r3, r2, r3
 800ed8e:	2500      	movs	r5, #0
 800ed90:	260e      	movs	r6, #14
 800ed92:	4295      	cmp	r5, r2
 800ed94:	dc1e      	bgt.n	800edd4 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ed96:	fb06 4003 	mla	r0, r6, r3, r4
 800ed9a:	8887      	ldrh	r7, [r0, #4]
 800ed9c:	42b9      	cmp	r1, r7
 800ed9e:	d01a      	beq.n	800edd6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800eda0:	d20d      	bcs.n	800edbe <_ZNK8touchgfx9ConstFont4findEt+0x5e>
 800eda2:	1e5a      	subs	r2, r3, #1
 800eda4:	4295      	cmp	r5, r2
 800eda6:	dc15      	bgt.n	800edd4 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800eda8:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800edac:	1a5b      	subs	r3, r3, r1
 800edae:	1ad3      	subs	r3, r2, r3
 800edb0:	429a      	cmp	r2, r3
 800edb2:	db0f      	blt.n	800edd4 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800edb4:	429d      	cmp	r5, r3
 800edb6:	ddec      	ble.n	800ed92 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800edb8:	1953      	adds	r3, r2, r5
 800edba:	105b      	asrs	r3, r3, #1
 800edbc:	e7e9      	b.n	800ed92 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800edbe:	1c5d      	adds	r5, r3, #1
 800edc0:	42aa      	cmp	r2, r5
 800edc2:	db07      	blt.n	800edd4 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800edc4:	8a43      	ldrh	r3, [r0, #18]
 800edc6:	1acb      	subs	r3, r1, r3
 800edc8:	442b      	add	r3, r5
 800edca:	429d      	cmp	r5, r3
 800edcc:	dc02      	bgt.n	800edd4 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800edce:	429a      	cmp	r2, r3
 800edd0:	dadf      	bge.n	800ed92 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800edd2:	e7f1      	b.n	800edb8 <_ZNK8touchgfx9ConstFont4findEt+0x58>
 800edd4:	2000      	movs	r0, #0
 800edd6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800edd8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800edd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800edda:	4604      	mov	r4, r0
 800eddc:	4617      	mov	r7, r2
 800edde:	461e      	mov	r6, r3
 800ede0:	b911      	cbnz	r1, 800ede8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800ede2:	2500      	movs	r5, #0
 800ede4:	4628      	mov	r0, r5
 800ede6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ede8:	290a      	cmp	r1, #10
 800edea:	d0fa      	beq.n	800ede2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800edec:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800edf0:	4291      	cmp	r1, r2
 800edf2:	d0f6      	beq.n	800ede2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800edf4:	f242 020b 	movw	r2, #8203	; 0x200b
 800edf8:	4291      	cmp	r1, r2
 800edfa:	d0f2      	beq.n	800ede2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800edfc:	f7ff ffb0 	bl	800ed60 <_ZNK8touchgfx9ConstFont4findEt>
 800ee00:	4605      	mov	r5, r0
 800ee02:	b950      	cbnz	r0, 800ee1a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800ee04:	6823      	ldr	r3, [r4, #0]
 800ee06:	4620      	mov	r0, r4
 800ee08:	691b      	ldr	r3, [r3, #16]
 800ee0a:	4798      	blx	r3
 800ee0c:	4601      	mov	r1, r0
 800ee0e:	4620      	mov	r0, r4
 800ee10:	f7ff ffa6 	bl	800ed60 <_ZNK8touchgfx9ConstFont4findEt>
 800ee14:	4605      	mov	r5, r0
 800ee16:	2800      	cmp	r0, #0
 800ee18:	d0e3      	beq.n	800ede2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ee1a:	6823      	ldr	r3, [r4, #0]
 800ee1c:	4629      	mov	r1, r5
 800ee1e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ee20:	4620      	mov	r0, r4
 800ee22:	4798      	blx	r3
 800ee24:	6038      	str	r0, [r7, #0]
 800ee26:	6823      	ldr	r3, [r4, #0]
 800ee28:	4620      	mov	r0, r4
 800ee2a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ee2c:	4798      	blx	r3
 800ee2e:	7030      	strb	r0, [r6, #0]
 800ee30:	e7d8      	b.n	800ede4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800ee32 <_ZN8touchgfx6memsetEPvhm>:
 800ee32:	4402      	add	r2, r0
 800ee34:	4290      	cmp	r0, r2
 800ee36:	d002      	beq.n	800ee3e <_ZN8touchgfx6memsetEPvhm+0xc>
 800ee38:	f800 1b01 	strb.w	r1, [r0], #1
 800ee3c:	e7fa      	b.n	800ee34 <_ZN8touchgfx6memsetEPvhm+0x2>
 800ee3e:	4770      	bx	lr

0800ee40 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800ee40:	2000      	movs	r0, #0
 800ee42:	4770      	bx	lr

0800ee44 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800ee44:	2001      	movs	r0, #1
 800ee46:	4770      	bx	lr

0800ee48 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800ee48:	2002      	movs	r0, #2
 800ee4a:	4770      	bx	lr

0800ee4c <_ZN8touchgfx6ScreenD1Ev>:
 800ee4c:	4770      	bx	lr

0800ee4e <_ZN8touchgfx12GestureEventD1Ev>:
 800ee4e:	4770      	bx	lr

0800ee50 <_ZN8touchgfx9DragEventD1Ev>:
 800ee50:	4770      	bx	lr

0800ee52 <_ZN8touchgfx10ClickEventD1Ev>:
 800ee52:	4770      	bx	lr

0800ee54 <_ZN8touchgfx10ClickEventD0Ev>:
 800ee54:	b510      	push	{r4, lr}
 800ee56:	210c      	movs	r1, #12
 800ee58:	4604      	mov	r4, r0
 800ee5a:	f00d fa4b 	bl	801c2f4 <_ZdlPvj>
 800ee5e:	4620      	mov	r0, r4
 800ee60:	bd10      	pop	{r4, pc}

0800ee62 <_ZN8touchgfx9DragEventD0Ev>:
 800ee62:	b510      	push	{r4, lr}
 800ee64:	2110      	movs	r1, #16
 800ee66:	4604      	mov	r4, r0
 800ee68:	f00d fa44 	bl	801c2f4 <_ZdlPvj>
 800ee6c:	4620      	mov	r0, r4
 800ee6e:	bd10      	pop	{r4, pc}

0800ee70 <_ZN8touchgfx12GestureEventD0Ev>:
 800ee70:	b510      	push	{r4, lr}
 800ee72:	210c      	movs	r1, #12
 800ee74:	4604      	mov	r4, r0
 800ee76:	f00d fa3d 	bl	801c2f4 <_ZdlPvj>
 800ee7a:	4620      	mov	r0, r4
 800ee7c:	bd10      	pop	{r4, pc}

0800ee7e <_ZN8touchgfx6ScreenD0Ev>:
 800ee7e:	b510      	push	{r4, lr}
 800ee80:	213c      	movs	r1, #60	; 0x3c
 800ee82:	4604      	mov	r4, r0
 800ee84:	f00d fa36 	bl	801c2f4 <_ZdlPvj>
 800ee88:	4620      	mov	r0, r4
 800ee8a:	bd10      	pop	{r4, pc}

0800ee8c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ee8c:	b530      	push	{r4, r5, lr}
 800ee8e:	460d      	mov	r5, r1
 800ee90:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800ee92:	b087      	sub	sp, #28
 800ee94:	4604      	mov	r4, r0
 800ee96:	b301      	cbz	r1, 800eeda <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ee98:	a801      	add	r0, sp, #4
 800ee9a:	f7ff ff2d 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ee9e:	892a      	ldrh	r2, [r5, #8]
 800eea0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800eea4:	7928      	ldrb	r0, [r5, #4]
 800eea6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800eeaa:	f88d 0010 	strb.w	r0, [sp, #16]
 800eeae:	1ad2      	subs	r2, r2, r3
 800eeb0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800eeb2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800eeb4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800eeb8:	441a      	add	r2, r3
 800eeba:	896b      	ldrh	r3, [r5, #10]
 800eebc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800eec0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800eec4:	1b5b      	subs	r3, r3, r5
 800eec6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800eec8:	442b      	add	r3, r5
 800eeca:	4d05      	ldr	r5, [pc, #20]	; (800eee0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800eecc:	9503      	str	r5, [sp, #12]
 800eece:	f8ad 3016 	strh.w	r3, [sp, #22]
 800eed2:	6803      	ldr	r3, [r0, #0]
 800eed4:	a903      	add	r1, sp, #12
 800eed6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eed8:	4798      	blx	r3
 800eeda:	b007      	add	sp, #28
 800eedc:	bd30      	pop	{r4, r5, pc}
 800eede:	bf00      	nop
 800eee0:	080202f0 	.word	0x080202f0

0800eee4 <_ZNK8touchgfx4Rect9intersectEss>:
 800eee4:	b510      	push	{r4, lr}
 800eee6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800eeea:	428b      	cmp	r3, r1
 800eeec:	dc10      	bgt.n	800ef10 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800eeee:	8884      	ldrh	r4, [r0, #4]
 800eef0:	4423      	add	r3, r4
 800eef2:	b21b      	sxth	r3, r3
 800eef4:	4299      	cmp	r1, r3
 800eef6:	da0b      	bge.n	800ef10 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800eef8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800eefc:	4293      	cmp	r3, r2
 800eefe:	dc07      	bgt.n	800ef10 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800ef00:	88c0      	ldrh	r0, [r0, #6]
 800ef02:	4418      	add	r0, r3
 800ef04:	b200      	sxth	r0, r0
 800ef06:	4282      	cmp	r2, r0
 800ef08:	bfac      	ite	ge
 800ef0a:	2000      	movge	r0, #0
 800ef0c:	2001      	movlt	r0, #1
 800ef0e:	bd10      	pop	{r4, pc}
 800ef10:	2000      	movs	r0, #0
 800ef12:	e7fc      	b.n	800ef0e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800ef14 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800ef14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef16:	460c      	mov	r4, r1
 800ef18:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800ef1a:	b089      	sub	sp, #36	; 0x24
 800ef1c:	4605      	mov	r5, r0
 800ef1e:	2900      	cmp	r1, #0
 800ef20:	d054      	beq.n	800efcc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800ef22:	4668      	mov	r0, sp
 800ef24:	f7ff fee8 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef28:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800ef2a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800ef2c:	8922      	ldrh	r2, [r4, #8]
 800ef2e:	88e1      	ldrh	r1, [r4, #6]
 800ef30:	443a      	add	r2, r7
 800ef32:	4431      	add	r1, r6
 800ef34:	b212      	sxth	r2, r2
 800ef36:	b209      	sxth	r1, r1
 800ef38:	4668      	mov	r0, sp
 800ef3a:	f7ff ffd3 	bl	800eee4 <_ZNK8touchgfx4Rect9intersectEss>
 800ef3e:	b1d0      	cbz	r0, 800ef76 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800ef40:	89a2      	ldrh	r2, [r4, #12]
 800ef42:	8961      	ldrh	r1, [r4, #10]
 800ef44:	443a      	add	r2, r7
 800ef46:	4431      	add	r1, r6
 800ef48:	b212      	sxth	r2, r2
 800ef4a:	b209      	sxth	r1, r1
 800ef4c:	4668      	mov	r0, sp
 800ef4e:	f7ff ffc9 	bl	800eee4 <_ZNK8touchgfx4Rect9intersectEss>
 800ef52:	4603      	mov	r3, r0
 800ef54:	b978      	cbnz	r0, 800ef76 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800ef56:	4a1e      	ldr	r2, [pc, #120]	; (800efd0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800ef58:	9204      	str	r2, [sp, #16]
 800ef5a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800ef5c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ef60:	2202      	movs	r2, #2
 800ef62:	f88d 2014 	strb.w	r2, [sp, #20]
 800ef66:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ef6a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ef6e:	6803      	ldr	r3, [r0, #0]
 800ef70:	a904      	add	r1, sp, #16
 800ef72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ef74:	4798      	blx	r3
 800ef76:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800ef78:	a802      	add	r0, sp, #8
 800ef7a:	f7ff febd 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef7e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800ef82:	88e0      	ldrh	r0, [r4, #6]
 800ef84:	8961      	ldrh	r1, [r4, #10]
 800ef86:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800ef8a:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800ef8e:	8923      	ldrh	r3, [r4, #8]
 800ef90:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800ef92:	7927      	ldrb	r7, [r4, #4]
 800ef94:	f88d 7014 	strb.w	r7, [sp, #20]
 800ef98:	1a80      	subs	r0, r0, r2
 800ef9a:	1a89      	subs	r1, r1, r2
 800ef9c:	89a2      	ldrh	r2, [r4, #12]
 800ef9e:	4c0d      	ldr	r4, [pc, #52]	; (800efd4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800efa0:	9404      	str	r4, [sp, #16]
 800efa2:	4460      	add	r0, ip
 800efa4:	eba3 030e 	sub.w	r3, r3, lr
 800efa8:	eba2 020e 	sub.w	r2, r2, lr
 800efac:	f8ad 0016 	strh.w	r0, [sp, #22]
 800efb0:	4433      	add	r3, r6
 800efb2:	4461      	add	r1, ip
 800efb4:	4432      	add	r2, r6
 800efb6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800efb8:	f8ad 101a 	strh.w	r1, [sp, #26]
 800efbc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800efc0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800efc4:	6803      	ldr	r3, [r0, #0]
 800efc6:	a904      	add	r1, sp, #16
 800efc8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800efca:	4798      	blx	r3
 800efcc:	b009      	add	sp, #36	; 0x24
 800efce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efd0:	080202c8 	.word	0x080202c8
 800efd4:	080202dc 	.word	0x080202dc

0800efd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800efd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efdc:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800efe0:	790b      	ldrb	r3, [r1, #4]
 800efe2:	b0a1      	sub	sp, #132	; 0x84
 800efe4:	4604      	mov	r4, r0
 800efe6:	460d      	mov	r5, r1
 800efe8:	f1b9 0f00 	cmp.w	r9, #0
 800efec:	d00f      	beq.n	800f00e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800efee:	2b00      	cmp	r3, #0
 800eff0:	f040 80a0 	bne.w	800f134 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800eff4:	b021      	add	sp, #132	; 0x84
 800eff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800effa:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800effe:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f002:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f006:	1d20      	adds	r0, r4, #4
 800f008:	f7fb ff5d 	bl	800aec6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f00c:	e092      	b.n	800f134 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f00e:	2b00      	cmp	r3, #0
 800f010:	d1f0      	bne.n	800eff4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f012:	4b5e      	ldr	r3, [pc, #376]	; (800f18c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800f014:	681b      	ldr	r3, [r3, #0]
 800f016:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800f01a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800f01e:	f1ba 0f03 	cmp.w	sl, #3
 800f022:	ddea      	ble.n	800effa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800f024:	f1ba 0f0c 	cmp.w	sl, #12
 800f028:	f04f 0303 	mov.w	r3, #3
 800f02c:	bfdc      	itt	le
 800f02e:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800f032:	fb92 f3f3 	sdivle	r3, r2, r3
 800f036:	9301      	str	r3, [sp, #4]
 800f038:	4b55      	ldr	r3, [pc, #340]	; (800f190 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800f03a:	4956      	ldr	r1, [pc, #344]	; (800f194 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800f03c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f040:	4b55      	ldr	r3, [pc, #340]	; (800f198 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800f042:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800f046:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f04a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f04e:	ab0e      	add	r3, sp, #56	; 0x38
 800f050:	2248      	movs	r2, #72	; 0x48
 800f052:	2600      	movs	r6, #0
 800f054:	4618      	mov	r0, r3
 800f056:	960a      	str	r6, [sp, #40]	; 0x28
 800f058:	f00d fa0e 	bl	801c478 <memcpy>
 800f05c:	f04f 32ff 	mov.w	r2, #4294967295
 800f060:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800f064:	f8cd a008 	str.w	sl, [sp, #8]
 800f068:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f06c:	fb93 f3f2 	sdiv	r3, r3, r2
 800f070:	b29b      	uxth	r3, r3
 800f072:	46b3      	mov	fp, r6
 800f074:	9303      	str	r3, [sp, #12]
 800f076:	2300      	movs	r3, #0
 800f078:	9309      	str	r3, [sp, #36]	; 0x24
 800f07a:	9b07      	ldr	r3, [sp, #28]
 800f07c:	9a03      	ldr	r2, [sp, #12]
 800f07e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800f082:	88ef      	ldrh	r7, [r5, #6]
 800f084:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800f088:	fb13 f302 	smulbb	r3, r3, r2
 800f08c:	b29b      	uxth	r3, r3
 800f08e:	9304      	str	r3, [sp, #16]
 800f090:	9b07      	ldr	r3, [sp, #28]
 800f092:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800f096:	a80a      	add	r0, sp, #40	; 0x28
 800f098:	685b      	ldr	r3, [r3, #4]
 800f09a:	fb13 f302 	smulbb	r3, r3, r2
 800f09e:	b29b      	uxth	r3, r3
 800f0a0:	9305      	str	r3, [sp, #20]
 800f0a2:	9b04      	ldr	r3, [sp, #16]
 800f0a4:	441f      	add	r7, r3
 800f0a6:	9b05      	ldr	r3, [sp, #20]
 800f0a8:	4498      	add	r8, r3
 800f0aa:	b23f      	sxth	r7, r7
 800f0ac:	fa0f f888 	sxth.w	r8, r8
 800f0b0:	4642      	mov	r2, r8
 800f0b2:	4639      	mov	r1, r7
 800f0b4:	f7ff ff16 	bl	800eee4 <_ZNK8touchgfx4Rect9intersectEss>
 800f0b8:	b380      	cbz	r0, 800f11c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f0ba:	4639      	mov	r1, r7
 800f0bc:	ab09      	add	r3, sp, #36	; 0x24
 800f0be:	4642      	mov	r2, r8
 800f0c0:	1d20      	adds	r0, r4, #4
 800f0c2:	f7fb ff00 	bl	800aec6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f0c6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f0c8:	b341      	cbz	r1, 800f11c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f0ca:	4549      	cmp	r1, r9
 800f0cc:	d026      	beq.n	800f11c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f0ce:	a80c      	add	r0, sp, #48	; 0x30
 800f0d0:	f7ff fe12 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f0d4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800f0d8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f0dc:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800f0e0:	2002      	movs	r0, #2
 800f0e2:	fb92 f2f0 	sdiv	r2, r2, r0
 800f0e6:	440a      	add	r2, r1
 800f0e8:	1a99      	subs	r1, r3, r2
 800f0ea:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800f0ee:	fb93 f3f0 	sdiv	r3, r3, r0
 800f0f2:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800f0f6:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f0fa:	4403      	add	r3, r0
 800f0fc:	1ad3      	subs	r3, r2, r3
 800f0fe:	435b      	muls	r3, r3
 800f100:	9a06      	ldr	r2, [sp, #24]
 800f102:	fb01 3301 	mla	r3, r1, r1, r3
 800f106:	4293      	cmp	r3, r2
 800f108:	d208      	bcs.n	800f11c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f10a:	9a04      	ldr	r2, [sp, #16]
 800f10c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800f110:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f112:	9a05      	ldr	r2, [sp, #20]
 800f114:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800f118:	86e2      	strh	r2, [r4, #54]	; 0x36
 800f11a:	9306      	str	r3, [sp, #24]
 800f11c:	f10b 0b02 	add.w	fp, fp, #2
 800f120:	f1bb 0f08 	cmp.w	fp, #8
 800f124:	dda7      	ble.n	800f076 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f126:	9b02      	ldr	r3, [sp, #8]
 800f128:	4453      	add	r3, sl
 800f12a:	9302      	str	r3, [sp, #8]
 800f12c:	9b01      	ldr	r3, [sp, #4]
 800f12e:	3601      	adds	r6, #1
 800f130:	42b3      	cmp	r3, r6
 800f132:	d199      	bne.n	800f068 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800f134:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f136:	2900      	cmp	r1, #0
 800f138:	f43f af5c 	beq.w	800eff4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f13c:	a80c      	add	r0, sp, #48	; 0x30
 800f13e:	f7ff fddb 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f142:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800f146:	88ea      	ldrh	r2, [r5, #6]
 800f148:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800f14c:	7929      	ldrb	r1, [r5, #4]
 800f14e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800f152:	1ad2      	subs	r2, r2, r3
 800f154:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f156:	441a      	add	r2, r3
 800f158:	892b      	ldrh	r3, [r5, #8]
 800f15a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800f15e:	1a1b      	subs	r3, r3, r0
 800f160:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800f162:	4403      	add	r3, r0
 800f164:	480d      	ldr	r0, [pc, #52]	; (800f19c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800f166:	900e      	str	r0, [sp, #56]	; 0x38
 800f168:	2600      	movs	r6, #0
 800f16a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f16c:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800f170:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800f174:	6803      	ldr	r3, [r0, #0]
 800f176:	a90e      	add	r1, sp, #56	; 0x38
 800f178:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f17a:	4798      	blx	r3
 800f17c:	792b      	ldrb	r3, [r5, #4]
 800f17e:	2b00      	cmp	r3, #0
 800f180:	f43f af38 	beq.w	800eff4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f184:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f188:	e734      	b.n	800eff4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f18a:	bf00      	nop
 800f18c:	200124b8 	.word	0x200124b8
 800f190:	200124ac 	.word	0x200124ac
 800f194:	0801d3a0 	.word	0x0801d3a0
 800f198:	200124ae 	.word	0x200124ae
 800f19c:	080202c8 	.word	0x080202c8

0800f1a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f1a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f1a2:	4604      	mov	r4, r0
 800f1a4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f1a8:	3201      	adds	r2, #1
 800f1aa:	d112      	bne.n	800f1d2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f1ac:	6803      	ldr	r3, [r0, #0]
 800f1ae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f1b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f1b6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f1ba:	2500      	movs	r5, #0
 800f1bc:	9500      	str	r5, [sp, #0]
 800f1be:	466d      	mov	r5, sp
 800f1c0:	4629      	mov	r1, r5
 800f1c2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f1c6:	6a1b      	ldr	r3, [r3, #32]
 800f1c8:	4798      	blx	r3
 800f1ca:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f1ce:	e884 0003 	stmia.w	r4, {r0, r1}
 800f1d2:	4620      	mov	r0, r4
 800f1d4:	b003      	add	sp, #12
 800f1d6:	bd30      	pop	{r4, r5, pc}

0800f1d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f1d8:	b513      	push	{r0, r1, r4, lr}
 800f1da:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f1de:	3301      	adds	r3, #1
 800f1e0:	4604      	mov	r4, r0
 800f1e2:	d109      	bne.n	800f1f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f1e4:	4601      	mov	r1, r0
 800f1e6:	4668      	mov	r0, sp
 800f1e8:	f7ff fd86 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f1ec:	f8bd 3000 	ldrh.w	r3, [sp]
 800f1f0:	8423      	strh	r3, [r4, #32]
 800f1f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f1f6:	8463      	strh	r3, [r4, #34]	; 0x22
 800f1f8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f1fc:	b002      	add	sp, #8
 800f1fe:	bd10      	pop	{r4, pc}

0800f200 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f200:	b513      	push	{r0, r1, r4, lr}
 800f202:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f206:	3301      	adds	r3, #1
 800f208:	4604      	mov	r4, r0
 800f20a:	d109      	bne.n	800f220 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f20c:	4601      	mov	r1, r0
 800f20e:	4668      	mov	r0, sp
 800f210:	f7ff fd72 	bl	800ecf8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f214:	f8bd 3000 	ldrh.w	r3, [sp]
 800f218:	8423      	strh	r3, [r4, #32]
 800f21a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f21e:	8463      	strh	r3, [r4, #34]	; 0x22
 800f220:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f224:	b002      	add	sp, #8
 800f226:	bd10      	pop	{r4, pc}

0800f228 <_ZN8touchgfx6ScreenC1Ev>:
 800f228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f22a:	4605      	mov	r5, r0
 800f22c:	4b17      	ldr	r3, [pc, #92]	; (800f28c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f22e:	f845 3b04 	str.w	r3, [r5], #4
 800f232:	2301      	movs	r3, #1
 800f234:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800f238:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800f23c:	4b14      	ldr	r3, [pc, #80]	; (800f290 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f23e:	4915      	ldr	r1, [pc, #84]	; (800f294 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f240:	f9b3 7000 	ldrsh.w	r7, [r3]
 800f244:	4b14      	ldr	r3, [pc, #80]	; (800f298 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800f246:	6041      	str	r1, [r0, #4]
 800f248:	2200      	movs	r2, #0
 800f24a:	8102      	strh	r2, [r0, #8]
 800f24c:	8142      	strh	r2, [r0, #10]
 800f24e:	8182      	strh	r2, [r0, #12]
 800f250:	81c2      	strh	r2, [r0, #14]
 800f252:	8202      	strh	r2, [r0, #16]
 800f254:	8242      	strh	r2, [r0, #18]
 800f256:	8282      	strh	r2, [r0, #20]
 800f258:	82c2      	strh	r2, [r0, #22]
 800f25a:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800f25e:	6202      	str	r2, [r0, #32]
 800f260:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800f264:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800f268:	6342      	str	r2, [r0, #52]	; 0x34
 800f26a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f26e:	4611      	mov	r1, r2
 800f270:	4604      	mov	r4, r0
 800f272:	4628      	mov	r0, r5
 800f274:	f7f4 fb58 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800f278:	4639      	mov	r1, r7
 800f27a:	4628      	mov	r0, r5
 800f27c:	f7f4 fb61 	bl	8003942 <_ZN8touchgfx8Drawable8setWidthEs>
 800f280:	4628      	mov	r0, r5
 800f282:	4631      	mov	r1, r6
 800f284:	f7f4 fb5f 	bl	8003946 <_ZN8touchgfx8Drawable9setHeightEs>
 800f288:	4620      	mov	r0, r4
 800f28a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f28c:	08020304 	.word	0x08020304
 800f290:	200124ac 	.word	0x200124ac
 800f294:	0801f044 	.word	0x0801f044
 800f298:	200124ae 	.word	0x200124ae

0800f29c <_ZN8touchgfx6Screen4drawEv>:
 800f29c:	b507      	push	{r0, r1, r2, lr}
 800f29e:	4b09      	ldr	r3, [pc, #36]	; (800f2c4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f2a0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2a4:	4b08      	ldr	r3, [pc, #32]	; (800f2c8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f2a6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f2aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f2ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f2b2:	6803      	ldr	r3, [r0, #0]
 800f2b4:	2100      	movs	r1, #0
 800f2b6:	9100      	str	r1, [sp, #0]
 800f2b8:	689b      	ldr	r3, [r3, #8]
 800f2ba:	4669      	mov	r1, sp
 800f2bc:	4798      	blx	r3
 800f2be:	b003      	add	sp, #12
 800f2c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800f2c4:	200124ac 	.word	0x200124ac
 800f2c8:	200124ae 	.word	0x200124ae

0800f2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2d0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f2d4:	2b00      	cmp	r3, #0
 800f2d6:	b089      	sub	sp, #36	; 0x24
 800f2d8:	4680      	mov	r8, r0
 800f2da:	460c      	mov	r4, r1
 800f2dc:	4615      	mov	r5, r2
 800f2de:	dd0e      	ble.n	800f2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f2e0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f2e4:	2b00      	cmp	r3, #0
 800f2e6:	dd0a      	ble.n	800f2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f2e8:	4628      	mov	r0, r5
 800f2ea:	f7ff ff59 	bl	800f1a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f2ee:	4621      	mov	r1, r4
 800f2f0:	f7fe feb8 	bl	800e064 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f2f4:	69eb      	ldr	r3, [r5, #28]
 800f2f6:	b928      	cbnz	r0, 800f304 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f2f8:	461d      	mov	r5, r3
 800f2fa:	2b00      	cmp	r3, #0
 800f2fc:	d1f4      	bne.n	800f2e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f2fe:	b009      	add	sp, #36	; 0x24
 800f300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f304:	ae04      	add	r6, sp, #16
 800f306:	2b00      	cmp	r3, #0
 800f308:	d051      	beq.n	800f3ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800f30a:	682b      	ldr	r3, [r5, #0]
 800f30c:	4629      	mov	r1, r5
 800f30e:	68db      	ldr	r3, [r3, #12]
 800f310:	a802      	add	r0, sp, #8
 800f312:	4798      	blx	r3
 800f314:	4628      	mov	r0, r5
 800f316:	f7ff ff5f 	bl	800f1d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f31a:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f31e:	4407      	add	r7, r0
 800f320:	4628      	mov	r0, r5
 800f322:	f7ff ff6d 	bl	800f200 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f326:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f32a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f32e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f332:	4418      	add	r0, r3
 800f334:	4621      	mov	r1, r4
 800f336:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f33a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f33e:	b23f      	sxth	r7, r7
 800f340:	4630      	mov	r0, r6
 800f342:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f346:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f34a:	f7fb fe75 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800f34e:	4628      	mov	r0, r5
 800f350:	f7ff ff26 	bl	800f1a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f354:	4602      	mov	r2, r0
 800f356:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f35a:	ab06      	add	r3, sp, #24
 800f35c:	e883 0003 	stmia.w	r3, {r0, r1}
 800f360:	4611      	mov	r1, r2
 800f362:	4618      	mov	r0, r3
 800f364:	f7fb fe68 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800f368:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f36c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f370:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f374:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f378:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f37c:	4299      	cmp	r1, r3
 800f37e:	d10b      	bne.n	800f398 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800f380:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f384:	4552      	cmp	r2, sl
 800f386:	d107      	bne.n	800f398 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800f388:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f38c:	455a      	cmp	r2, fp
 800f38e:	d103      	bne.n	800f398 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800f390:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f394:	454a      	cmp	r2, r9
 800f396:	d00a      	beq.n	800f3ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800f398:	f1bb 0f00 	cmp.w	fp, #0
 800f39c:	d002      	beq.n	800f3a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>
 800f39e:	f1b9 0f00 	cmp.w	r9, #0
 800f3a2:	d12e      	bne.n	800f402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x136>
 800f3a4:	69ea      	ldr	r2, [r5, #28]
 800f3a6:	4621      	mov	r1, r4
 800f3a8:	4640      	mov	r0, r8
 800f3aa:	f7ff ff8f 	bl	800f2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f3ae:	4628      	mov	r0, r5
 800f3b0:	f7ff fef6 	bl	800f1a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f3b4:	6861      	ldr	r1, [r4, #4]
 800f3b6:	4602      	mov	r2, r0
 800f3b8:	6820      	ldr	r0, [r4, #0]
 800f3ba:	4633      	mov	r3, r6
 800f3bc:	c303      	stmia	r3!, {r0, r1}
 800f3be:	4611      	mov	r1, r2
 800f3c0:	4630      	mov	r0, r6
 800f3c2:	f7fb fe39 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800f3c6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f3ca:	2b00      	cmp	r3, #0
 800f3cc:	dd97      	ble.n	800f2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f3ce:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f3d2:	2b00      	cmp	r3, #0
 800f3d4:	dd93      	ble.n	800f2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f3d6:	4628      	mov	r0, r5
 800f3d8:	f7ff fefe 	bl	800f1d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f3dc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f3e0:	1a18      	subs	r0, r3, r0
 800f3e2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f3e6:	4628      	mov	r0, r5
 800f3e8:	f7ff ff0a 	bl	800f200 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f3ec:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f3f0:	1a18      	subs	r0, r3, r0
 800f3f2:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f3f6:	682b      	ldr	r3, [r5, #0]
 800f3f8:	4631      	mov	r1, r6
 800f3fa:	689b      	ldr	r3, [r3, #8]
 800f3fc:	4628      	mov	r0, r5
 800f3fe:	4798      	blx	r3
 800f400:	e77d      	b.n	800f2fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f402:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f406:	fa1f f08a 	uxth.w	r0, sl
 800f40a:	4552      	cmp	r2, sl
 800f40c:	9000      	str	r0, [sp, #0]
 800f40e:	da12      	bge.n	800f436 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x16a>
 800f410:	9301      	str	r3, [sp, #4]
 800f412:	9b00      	ldr	r3, [sp, #0]
 800f414:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f418:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f41c:	1a9a      	subs	r2, r3, r2
 800f41e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f422:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f426:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f42a:	69ea      	ldr	r2, [r5, #28]
 800f42c:	4631      	mov	r1, r6
 800f42e:	4640      	mov	r0, r8
 800f430:	f7ff ff4c 	bl	800f2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f434:	9b01      	ldr	r3, [sp, #4]
 800f436:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f43a:	429a      	cmp	r2, r3
 800f43c:	b29f      	uxth	r7, r3
 800f43e:	da0d      	bge.n	800f45c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800f440:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f444:	1aba      	subs	r2, r7, r2
 800f446:	f8ad a012 	strh.w	sl, [sp, #18]
 800f44a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f44e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f452:	69ea      	ldr	r2, [r5, #28]
 800f454:	4631      	mov	r1, r6
 800f456:	4640      	mov	r0, r8
 800f458:	f7ff ff38 	bl	800f2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f45c:	8822      	ldrh	r2, [r4, #0]
 800f45e:	88a3      	ldrh	r3, [r4, #4]
 800f460:	445f      	add	r7, fp
 800f462:	4413      	add	r3, r2
 800f464:	b29b      	uxth	r3, r3
 800f466:	b2bf      	uxth	r7, r7
 800f468:	b23a      	sxth	r2, r7
 800f46a:	b219      	sxth	r1, r3
 800f46c:	4291      	cmp	r1, r2
 800f46e:	dd0d      	ble.n	800f48c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800f470:	1bdb      	subs	r3, r3, r7
 800f472:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f476:	f8ad a012 	strh.w	sl, [sp, #18]
 800f47a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f47e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f482:	69ea      	ldr	r2, [r5, #28]
 800f484:	4631      	mov	r1, r6
 800f486:	4640      	mov	r0, r8
 800f488:	f7ff ff20 	bl	800f2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f48c:	88e2      	ldrh	r2, [r4, #6]
 800f48e:	8863      	ldrh	r3, [r4, #2]
 800f490:	4413      	add	r3, r2
 800f492:	9a00      	ldr	r2, [sp, #0]
 800f494:	444a      	add	r2, r9
 800f496:	b29b      	uxth	r3, r3
 800f498:	fa1f f982 	uxth.w	r9, r2
 800f49c:	fa0f f289 	sxth.w	r2, r9
 800f4a0:	b219      	sxth	r1, r3
 800f4a2:	428a      	cmp	r2, r1
 800f4a4:	da83      	bge.n	800f3ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800f4a6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f4aa:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f4ae:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f4b2:	eba3 0309 	sub.w	r3, r3, r9
 800f4b6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f4ba:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f4be:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f4c2:	69ea      	ldr	r2, [r5, #28]
 800f4c4:	4631      	mov	r1, r6
 800f4c6:	e76f      	b.n	800f3a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xdc>

0800f4c8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f4c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f4ca:	aa02      	add	r2, sp, #8
 800f4cc:	2300      	movs	r3, #0
 800f4ce:	f842 3d04 	str.w	r3, [r2, #-4]!
 800f4d2:	4604      	mov	r4, r0
 800f4d4:	3004      	adds	r0, #4
 800f4d6:	460d      	mov	r5, r1
 800f4d8:	f7fb fe86 	bl	800b1e8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f4dc:	9a01      	ldr	r2, [sp, #4]
 800f4de:	b11a      	cbz	r2, 800f4e8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800f4e0:	4629      	mov	r1, r5
 800f4e2:	4620      	mov	r0, r4
 800f4e4:	f7ff fef2 	bl	800f2cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f4e8:	b003      	add	sp, #12
 800f4ea:	bd30      	pop	{r4, r5, pc}

0800f4ec <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f4ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f4ee:	4602      	mov	r2, r0
 800f4f0:	4604      	mov	r4, r0
 800f4f2:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f4f6:	460d      	mov	r5, r1
 800f4f8:	6851      	ldr	r1, [r2, #4]
 800f4fa:	466b      	mov	r3, sp
 800f4fc:	c303      	stmia	r3!, {r0, r1}
 800f4fe:	4629      	mov	r1, r5
 800f500:	4668      	mov	r0, sp
 800f502:	f7fb fd99 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 800f506:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f50a:	4669      	mov	r1, sp
 800f50c:	b123      	cbz	r3, 800f518 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800f50e:	4620      	mov	r0, r4
 800f510:	f7ff ffda 	bl	800f4c8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f514:	b003      	add	sp, #12
 800f516:	bd30      	pop	{r4, r5, pc}
 800f518:	1d20      	adds	r0, r4, #4
 800f51a:	f7fb fe2c 	bl	800b176 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f51e:	e7f9      	b.n	800f514 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800f520 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f520:	680a      	ldr	r2, [r1, #0]
 800f522:	460b      	mov	r3, r1
 800f524:	6992      	ldr	r2, [r2, #24]
 800f526:	1d01      	adds	r1, r0, #4
 800f528:	4618      	mov	r0, r3
 800f52a:	4710      	bx	r2

0800f52c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 800f52c:	b510      	push	{r4, lr}
 800f52e:	4298      	cmp	r0, r3
 800f530:	eb01 0402 	add.w	r4, r1, r2
 800f534:	b224      	sxth	r4, r4
 800f536:	d232      	bcs.n	800f59e <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x72>
 800f538:	b38b      	cbz	r3, 800f59e <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x72>
 800f53a:	ee07 0a90 	vmov	s15, r0
 800f53e:	eeb8 6a67 	vcvt.f32.u32	s12, s15
 800f542:	ee07 3a90 	vmov	s15, r3
 800f546:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800f54a:	eddf 4a16 	vldr	s9, [pc, #88]	; 800f5a4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 800f54e:	eddf 5a16 	vldr	s11, [pc, #88]	; 800f5a8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x7c>
 800f552:	ee86 7a26 	vdiv.f32	s14, s12, s13
 800f556:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f55a:	ee37 7a66 	vsub.f32	s14, s14, s13
 800f55e:	ee07 2a90 	vmov	s15, r2
 800f562:	eee7 5a24 	vfma.f32	s11, s14, s9
 800f566:	ee27 5a07 	vmul.f32	s10, s14, s14
 800f56a:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800f56e:	eee5 6a25 	vfma.f32	s13, s10, s11
 800f572:	ee07 1a90 	vmov	s15, r1
 800f576:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f57a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800f57e:	eee6 7a26 	vfma.f32	s15, s12, s13
 800f582:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f586:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f58a:	bfcc      	ite	gt
 800f58c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800f590:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800f594:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f598:	ee17 3a90 	vmov	r3, s15
 800f59c:	b21c      	sxth	r4, r3
 800f59e:	4620      	mov	r0, r4
 800f5a0:	bd10      	pop	{r4, pc}
 800f5a2:	bf00      	nop
 800f5a4:	402ce6b0 	.word	0x402ce6b0
 800f5a8:	3fd9cd60 	.word	0x3fd9cd60

0800f5ac <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800f5ac:	b510      	push	{r4, lr}
 800f5ae:	4298      	cmp	r0, r3
 800f5b0:	eb01 0402 	add.w	r4, r1, r2
 800f5b4:	b224      	sxth	r4, r4
 800f5b6:	d22c      	bcs.n	800f612 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 800f5b8:	b35b      	cbz	r3, 800f612 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 800f5ba:	ee07 0a90 	vmov	s15, r0
 800f5be:	eeb8 6a67 	vcvt.f32.u32	s12, s15
 800f5c2:	ee07 3a90 	vmov	s15, r3
 800f5c6:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800f5ca:	ee07 2a90 	vmov	s15, r2
 800f5ce:	ee86 7a26 	vdiv.f32	s14, s12, s13
 800f5d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f5d6:	ee37 7a66 	vsub.f32	s14, s14, s13
 800f5da:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800f5de:	ee67 5a07 	vmul.f32	s11, s14, s14
 800f5e2:	ee07 1a90 	vmov	s15, r1
 800f5e6:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f5ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f5ee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800f5f2:	eee6 7a26 	vfma.f32	s15, s12, s13
 800f5f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f5fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f5fe:	bfcc      	ite	gt
 800f600:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800f604:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800f608:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f60c:	ee17 3a90 	vmov	r3, s15
 800f610:	b21c      	sxth	r4, r3
 800f612:	4620      	mov	r0, r4
 800f614:	bd10      	pop	{r4, pc}

0800f616 <_ZN8touchgfx12TextProviderC1Ev>:
 800f616:	b510      	push	{r4, lr}
 800f618:	2300      	movs	r3, #0
 800f61a:	2201      	movs	r2, #1
 800f61c:	4604      	mov	r4, r0
 800f61e:	e9c0 3300 	strd	r3, r3, [r0]
 800f622:	60c3      	str	r3, [r0, #12]
 800f624:	7403      	strb	r3, [r0, #16]
 800f626:	82c3      	strh	r3, [r0, #22]
 800f628:	8303      	strh	r3, [r0, #24]
 800f62a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800f62c:	8603      	strh	r3, [r0, #48]	; 0x30
 800f62e:	86c3      	strh	r3, [r0, #54]	; 0x36
 800f630:	8703      	strh	r3, [r0, #56]	; 0x38
 800f632:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f634:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800f638:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800f63c:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800f640:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800f644:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800f648:	f7f4 f8e6 	bl	8003818 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f64c:	4620      	mov	r0, r4
 800f64e:	bd10      	pop	{r4, pc}

0800f650 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f650:	b530      	push	{r4, r5, lr}
 800f652:	2500      	movs	r5, #0
 800f654:	2401      	movs	r4, #1
 800f656:	6843      	ldr	r3, [r0, #4]
 800f658:	b913      	cbnz	r3, 800f660 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f65a:	6803      	ldr	r3, [r0, #0]
 800f65c:	b1f3      	cbz	r3, 800f69c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800f65e:	6043      	str	r3, [r0, #4]
 800f660:	7c03      	ldrb	r3, [r0, #16]
 800f662:	b143      	cbz	r3, 800f676 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f664:	68c3      	ldr	r3, [r0, #12]
 800f666:	b12b      	cbz	r3, 800f674 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f668:	881a      	ldrh	r2, [r3, #0]
 800f66a:	b11a      	cbz	r2, 800f674 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f66c:	1c9a      	adds	r2, r3, #2
 800f66e:	60c2      	str	r2, [r0, #12]
 800f670:	8818      	ldrh	r0, [r3, #0]
 800f672:	bd30      	pop	{r4, r5, pc}
 800f674:	7405      	strb	r5, [r0, #16]
 800f676:	6843      	ldr	r3, [r0, #4]
 800f678:	8819      	ldrh	r1, [r3, #0]
 800f67a:	b179      	cbz	r1, 800f69c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800f67c:	1c9a      	adds	r2, r3, #2
 800f67e:	2902      	cmp	r1, #2
 800f680:	6042      	str	r2, [r0, #4]
 800f682:	d1f5      	bne.n	800f670 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f684:	6883      	ldr	r3, [r0, #8]
 800f686:	1d1a      	adds	r2, r3, #4
 800f688:	6082      	str	r2, [r0, #8]
 800f68a:	681b      	ldr	r3, [r3, #0]
 800f68c:	60c3      	str	r3, [r0, #12]
 800f68e:	2b00      	cmp	r3, #0
 800f690:	d0e1      	beq.n	800f656 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f692:	881b      	ldrh	r3, [r3, #0]
 800f694:	2b00      	cmp	r3, #0
 800f696:	d0de      	beq.n	800f656 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f698:	7404      	strb	r4, [r0, #16]
 800f69a:	e7dc      	b.n	800f656 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f69c:	2000      	movs	r0, #0
 800f69e:	e7e8      	b.n	800f672 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f6a0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800f6a0:	b410      	push	{r4}
 800f6a2:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f6a4:	2300      	movs	r3, #0
 800f6a6:	6082      	str	r2, [r0, #8]
 800f6a8:	6001      	str	r1, [r0, #0]
 800f6aa:	6043      	str	r3, [r0, #4]
 800f6ac:	60c3      	str	r3, [r0, #12]
 800f6ae:	7403      	strb	r3, [r0, #16]
 800f6b0:	8603      	strh	r3, [r0, #48]	; 0x30
 800f6b2:	8303      	strh	r3, [r0, #24]
 800f6b4:	8703      	strh	r3, [r0, #56]	; 0x38
 800f6b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f6ba:	f7f4 b8ad 	b.w	8003818 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f6be <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f6be:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6c0:	4605      	mov	r5, r0
 800f6c2:	4608      	mov	r0, r1
 800f6c4:	b1e9      	cbz	r1, 800f702 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f6c6:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800f6ca:	460b      	mov	r3, r1
 800f6cc:	f101 0708 	add.w	r7, r1, #8
 800f6d0:	4622      	mov	r2, r4
 800f6d2:	6818      	ldr	r0, [r3, #0]
 800f6d4:	6859      	ldr	r1, [r3, #4]
 800f6d6:	4626      	mov	r6, r4
 800f6d8:	c603      	stmia	r6!, {r0, r1}
 800f6da:	3308      	adds	r3, #8
 800f6dc:	42bb      	cmp	r3, r7
 800f6de:	4634      	mov	r4, r6
 800f6e0:	d1f7      	bne.n	800f6d2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f6e2:	6818      	ldr	r0, [r3, #0]
 800f6e4:	6030      	str	r0, [r6, #0]
 800f6e6:	889b      	ldrh	r3, [r3, #4]
 800f6e8:	80b3      	strh	r3, [r6, #4]
 800f6ea:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800f6ee:	015b      	lsls	r3, r3, #5
 800f6f0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f6f4:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800f6f8:	430b      	orrs	r3, r1
 800f6fa:	425b      	negs	r3, r3
 800f6fc:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800f700:	4610      	mov	r0, r2
 800f702:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f704 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f704:	b538      	push	{r3, r4, r5, lr}
 800f706:	460c      	mov	r4, r1
 800f708:	6811      	ldr	r1, [r2, #0]
 800f70a:	4610      	mov	r0, r2
 800f70c:	68cd      	ldr	r5, [r1, #12]
 800f70e:	4619      	mov	r1, r3
 800f710:	47a8      	blx	r5
 800f712:	2800      	cmp	r0, #0
 800f714:	bf08      	it	eq
 800f716:	4620      	moveq	r0, r4
 800f718:	bd38      	pop	{r3, r4, r5, pc}
	...

0800f71c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f71c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f71e:	4604      	mov	r4, r0
 800f720:	4615      	mov	r5, r2
 800f722:	4608      	mov	r0, r1
 800f724:	b93a      	cbnz	r2, 800f736 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f726:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800f72a:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800f72e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800f732:	4628      	mov	r0, r5
 800f734:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f736:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f73a:	8893      	ldrh	r3, [r2, #4]
 800f73c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f740:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800f744:	79ee      	ldrb	r6, [r5, #7]
 800f746:	4316      	orrs	r6, r2
 800f748:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800f74c:	189a      	adds	r2, r3, r2
 800f74e:	b291      	uxth	r1, r2
 800f750:	291d      	cmp	r1, #29
 800f752:	b2b7      	uxth	r7, r6
 800f754:	f200 8083 	bhi.w	800f85e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f758:	2201      	movs	r2, #1
 800f75a:	408a      	lsls	r2, r1
 800f75c:	4978      	ldr	r1, [pc, #480]	; (800f940 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800f75e:	420a      	tst	r2, r1
 800f760:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800f764:	d12d      	bne.n	800f7c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800f766:	f412 7f60 	tst.w	r2, #896	; 0x380
 800f76a:	d078      	beq.n	800f85e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f76c:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800f770:	462b      	mov	r3, r5
 800f772:	f105 0e08 	add.w	lr, r5, #8
 800f776:	4615      	mov	r5, r2
 800f778:	6818      	ldr	r0, [r3, #0]
 800f77a:	6859      	ldr	r1, [r3, #4]
 800f77c:	4694      	mov	ip, r2
 800f77e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f782:	3308      	adds	r3, #8
 800f784:	4573      	cmp	r3, lr
 800f786:	4662      	mov	r2, ip
 800f788:	d1f6      	bne.n	800f778 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800f78a:	6818      	ldr	r0, [r3, #0]
 800f78c:	f8cc 0000 	str.w	r0, [ip]
 800f790:	889b      	ldrh	r3, [r3, #4]
 800f792:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f796:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800f79a:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800f79e:	b2b3      	uxth	r3, r6
 800f7a0:	1aca      	subs	r2, r1, r3
 800f7a2:	b292      	uxth	r2, r2
 800f7a4:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800f7a8:	10d2      	asrs	r2, r2, #3
 800f7aa:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800f7ae:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800f7b2:	4302      	orrs	r2, r0
 800f7b4:	1bcf      	subs	r7, r1, r7
 800f7b6:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800f7ba:	1afb      	subs	r3, r7, r3
 800f7bc:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800f7c0:	e7b7      	b.n	800f732 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f7c2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f7c4:	b92b      	cbnz	r3, 800f7d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800f7c6:	4b5f      	ldr	r3, [pc, #380]	; (800f944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800f7c8:	4a5f      	ldr	r2, [pc, #380]	; (800f948 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800f7ca:	4860      	ldr	r0, [pc, #384]	; (800f94c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800f7cc:	21c0      	movs	r1, #192	; 0xc0
 800f7ce:	f00c fdd5 	bl	801c37c <__assert_func>
 800f7d2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800f7d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f7d8:	8b59      	ldrh	r1, [r3, #26]
 800f7da:	f640 6333 	movw	r3, #3635	; 0xe33
 800f7de:	4299      	cmp	r1, r3
 800f7e0:	d110      	bne.n	800f804 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800f7e2:	6803      	ldr	r3, [r0, #0]
 800f7e4:	68db      	ldr	r3, [r3, #12]
 800f7e6:	4798      	blx	r3
 800f7e8:	7b41      	ldrb	r1, [r0, #13]
 800f7ea:	00cb      	lsls	r3, r1, #3
 800f7ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f7f0:	7a03      	ldrb	r3, [r0, #8]
 800f7f2:	0648      	lsls	r0, r1, #25
 800f7f4:	ea43 0302 	orr.w	r3, r3, r2
 800f7f8:	bf44      	itt	mi
 800f7fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800f7fe:	b21b      	sxthmi	r3, r3
 800f800:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800f804:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800f808:	443b      	add	r3, r7
 800f80a:	4433      	add	r3, r6
 800f80c:	b29b      	uxth	r3, r3
 800f80e:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800f812:	462a      	mov	r2, r5
 800f814:	f105 0c08 	add.w	ip, r5, #8
 800f818:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800f81c:	4635      	mov	r5, r6
 800f81e:	6810      	ldr	r0, [r2, #0]
 800f820:	6851      	ldr	r1, [r2, #4]
 800f822:	4637      	mov	r7, r6
 800f824:	c703      	stmia	r7!, {r0, r1}
 800f826:	3208      	adds	r2, #8
 800f828:	4562      	cmp	r2, ip
 800f82a:	463e      	mov	r6, r7
 800f82c:	d1f7      	bne.n	800f81e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800f82e:	6810      	ldr	r0, [r2, #0]
 800f830:	6038      	str	r0, [r7, #0]
 800f832:	8892      	ldrh	r2, [r2, #4]
 800f834:	80ba      	strh	r2, [r7, #4]
 800f836:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800f83a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800f83e:	10db      	asrs	r3, r3, #3
 800f840:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800f844:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800f848:	4313      	orrs	r3, r2
 800f84a:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800f84e:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800f852:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800f856:	1a9b      	subs	r3, r3, r2
 800f858:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800f85c:	e769      	b.n	800f732 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f85e:	f023 0204 	bic.w	r2, r3, #4
 800f862:	f640 611b 	movw	r1, #3611	; 0xe1b
 800f866:	428a      	cmp	r2, r1
 800f868:	d003      	beq.n	800f872 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800f86a:	f640 621d 	movw	r2, #3613	; 0xe1d
 800f86e:	4293      	cmp	r3, r2
 800f870:	d120      	bne.n	800f8b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800f872:	3b01      	subs	r3, #1
 800f874:	4602      	mov	r2, r0
 800f876:	b29b      	uxth	r3, r3
 800f878:	4629      	mov	r1, r5
 800f87a:	4620      	mov	r0, r4
 800f87c:	f7ff ff42 	bl	800f704 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f880:	7b41      	ldrb	r1, [r0, #13]
 800f882:	00cb      	lsls	r3, r1, #3
 800f884:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f888:	7a03      	ldrb	r3, [r0, #8]
 800f88a:	0649      	lsls	r1, r1, #25
 800f88c:	ea43 0302 	orr.w	r3, r3, r2
 800f890:	bf44      	itt	mi
 800f892:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800f896:	b21b      	sxthmi	r3, r3
 800f898:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800f89c:	7b6b      	ldrb	r3, [r5, #13]
 800f89e:	7aaa      	ldrb	r2, [r5, #10]
 800f8a0:	005b      	lsls	r3, r3, #1
 800f8a2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f8a6:	4313      	orrs	r3, r2
 800f8a8:	115a      	asrs	r2, r3, #5
 800f8aa:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f8ae:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f8b2:	e036      	b.n	800f922 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800f8b4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800f8b8:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800f8bc:	7a2a      	ldrb	r2, [r5, #8]
 800f8be:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800f8c2:	ea42 0201 	orr.w	r2, r2, r1
 800f8c6:	bf1c      	itt	ne
 800f8c8:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800f8cc:	b212      	sxthne	r2, r2
 800f8ce:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800f8d2:	f640 6109 	movw	r1, #3593	; 0xe09
 800f8d6:	f023 0210 	bic.w	r2, r3, #16
 800f8da:	428a      	cmp	r2, r1
 800f8dc:	d003      	beq.n	800f8e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800f8de:	f640 6213 	movw	r2, #3603	; 0xe13
 800f8e2:	4293      	cmp	r3, r2
 800f8e4:	d12a      	bne.n	800f93c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800f8e6:	7b6e      	ldrb	r6, [r5, #13]
 800f8e8:	0076      	lsls	r6, r6, #1
 800f8ea:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800f8ee:	7aae      	ldrb	r6, [r5, #10]
 800f8f0:	4316      	orrs	r6, r2
 800f8f2:	f640 6213 	movw	r2, #3603	; 0xe13
 800f8f6:	4293      	cmp	r3, r2
 800f8f8:	bf18      	it	ne
 800f8fa:	f103 33ff 	addne.w	r3, r3, #4294967295
 800f8fe:	4602      	mov	r2, r0
 800f900:	bf14      	ite	ne
 800f902:	b29b      	uxthne	r3, r3
 800f904:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800f908:	4629      	mov	r1, r5
 800f90a:	4620      	mov	r0, r4
 800f90c:	f7ff fefa 	bl	800f704 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f910:	7b43      	ldrb	r3, [r0, #13]
 800f912:	7a82      	ldrb	r2, [r0, #10]
 800f914:	005b      	lsls	r3, r3, #1
 800f916:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f91a:	4313      	orrs	r3, r2
 800f91c:	1af6      	subs	r6, r6, r3
 800f91e:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800f922:	7b69      	ldrb	r1, [r5, #13]
 800f924:	00cb      	lsls	r3, r1, #3
 800f926:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f92a:	7a2b      	ldrb	r3, [r5, #8]
 800f92c:	4313      	orrs	r3, r2
 800f92e:	064a      	lsls	r2, r1, #25
 800f930:	bf44      	itt	mi
 800f932:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800f936:	b21b      	sxthmi	r3, r3
 800f938:	1bdb      	subs	r3, r3, r7
 800f93a:	e73f      	b.n	800f7bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800f93c:	2300      	movs	r3, #0
 800f93e:	e7b6      	b.n	800f8ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800f940:	3fc00079 	.word	0x3fc00079
 800f944:	0801e134 	.word	0x0801e134
 800f948:	0802055f 	.word	0x0802055f
 800f94c:	0801e15b 	.word	0x0801e15b

0800f950 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800f950:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f954:	4604      	mov	r4, r0
 800f956:	b942      	cbnz	r2, 800f96a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800f958:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f95c:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800f960:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800f964:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f968:	e046      	b.n	800f9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800f96a:	7b51      	ldrb	r1, [r2, #13]
 800f96c:	8893      	ldrh	r3, [r2, #4]
 800f96e:	010f      	lsls	r7, r1, #4
 800f970:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800f974:	79d7      	ldrb	r7, [r2, #7]
 800f976:	4307      	orrs	r7, r0
 800f978:	2f04      	cmp	r7, #4
 800f97a:	b2bd      	uxth	r5, r7
 800f97c:	bfcc      	ite	gt
 800f97e:	08bf      	lsrgt	r7, r7, #2
 800f980:	2701      	movle	r7, #1
 800f982:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800f986:	f200 80ab 	bhi.w	800fae0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800f98a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800f98e:	4283      	cmp	r3, r0
 800f990:	d216      	bcs.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800f992:	f240 605b 	movw	r0, #1627	; 0x65b
 800f996:	4283      	cmp	r3, r0
 800f998:	d859      	bhi.n	800fa4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800f99a:	f240 6057 	movw	r0, #1623	; 0x657
 800f99e:	4283      	cmp	r3, r0
 800f9a0:	d20e      	bcs.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800f9a2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800f9a6:	d24a      	bcs.n	800fa3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800f9a8:	f240 604e 	movw	r0, #1614	; 0x64e
 800f9ac:	4283      	cmp	r3, r0
 800f9ae:	d207      	bcs.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800f9b0:	f240 601a 	movw	r0, #1562	; 0x61a
 800f9b4:	4283      	cmp	r3, r0
 800f9b6:	d02a      	beq.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800f9b8:	d821      	bhi.n	800f9fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800f9ba:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800f9be:	d35b      	bcc.n	800fa78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800f9c0:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800f9c4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800f9c8:	f040 80d0 	bne.w	800fb6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800f9cc:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800f9d0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800f9d4:	f040 80ca 	bne.w	800fb6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800f9d8:	00cb      	lsls	r3, r1, #3
 800f9da:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800f9de:	7a13      	ldrb	r3, [r2, #8]
 800f9e0:	0649      	lsls	r1, r1, #25
 800f9e2:	ea43 0300 	orr.w	r3, r3, r0
 800f9e6:	bf44      	itt	mi
 800f9e8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800f9ec:	b21b      	sxthmi	r3, r3
 800f9ee:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800f9f2:	1b5d      	subs	r5, r3, r5
 800f9f4:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800f9f8:	4610      	mov	r0, r2
 800f9fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9fe:	f240 604b 	movw	r0, #1611	; 0x64b
 800fa02:	4283      	cmp	r3, r0
 800fa04:	d338      	bcc.n	800fa78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fa06:	f240 604c 	movw	r0, #1612	; 0x64c
 800fa0a:	4283      	cmp	r3, r0
 800fa0c:	d9d8      	bls.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fa0e:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800fa12:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800fa16:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fa1a:	f040 80f1 	bne.w	800fc00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fa1e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fa22:	f040 80ed 	bne.w	800fc00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fa26:	00cb      	lsls	r3, r1, #3
 800fa28:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fa2c:	7a13      	ldrb	r3, [r2, #8]
 800fa2e:	064e      	lsls	r6, r1, #25
 800fa30:	ea43 0300 	orr.w	r3, r3, r0
 800fa34:	bf44      	itt	mi
 800fa36:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fa3a:	b21b      	sxthmi	r3, r3
 800fa3c:	e7d9      	b.n	800f9f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800fa3e:	f240 6054 	movw	r0, #1620	; 0x654
 800fa42:	4283      	cmp	r3, r0
 800fa44:	d8e3      	bhi.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fa46:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fa4a:	d9e0      	bls.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fa4c:	e7b8      	b.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fa4e:	f240 6074 	movw	r0, #1652	; 0x674
 800fa52:	4283      	cmp	r3, r0
 800fa54:	d0b4      	beq.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fa56:	d82d      	bhi.n	800fab4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800fa58:	f240 605e 	movw	r0, #1630	; 0x65e
 800fa5c:	4283      	cmp	r3, r0
 800fa5e:	d804      	bhi.n	800fa6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800fa60:	f240 605d 	movw	r0, #1629	; 0x65d
 800fa64:	4283      	cmp	r3, r0
 800fa66:	d3d2      	bcc.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fa68:	e7aa      	b.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fa6a:	f240 605f 	movw	r0, #1631	; 0x65f
 800fa6e:	4283      	cmp	r3, r0
 800fa70:	d0cd      	beq.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fa72:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800fa76:	d0a3      	beq.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fa78:	00cb      	lsls	r3, r1, #3
 800fa7a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fa7e:	7a13      	ldrb	r3, [r2, #8]
 800fa80:	0649      	lsls	r1, r1, #25
 800fa82:	ea43 0300 	orr.w	r3, r3, r0
 800fa86:	bf44      	itt	mi
 800fa88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fa8c:	b21b      	sxthmi	r3, r3
 800fa8e:	1b5d      	subs	r5, r3, r5
 800fa90:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800fa94:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800fa98:	7b53      	ldrb	r3, [r2, #13]
 800fa9a:	015b      	lsls	r3, r3, #5
 800fa9c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800faa0:	7993      	ldrb	r3, [r2, #6]
 800faa2:	430b      	orrs	r3, r1
 800faa4:	005b      	lsls	r3, r3, #1
 800faa6:	2105      	movs	r1, #5
 800faa8:	fb93 f3f1 	sdiv	r3, r3, r1
 800faac:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800fab0:	440b      	add	r3, r1
 800fab2:	e757      	b.n	800f964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800fab4:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800fab8:	4283      	cmp	r3, r0
 800faba:	d809      	bhi.n	800fad0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800fabc:	f240 60df 	movw	r0, #1759	; 0x6df
 800fac0:	4283      	cmp	r3, r0
 800fac2:	f4bf af7d 	bcs.w	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fac6:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800faca:	2b05      	cmp	r3, #5
 800facc:	d8d4      	bhi.n	800fa78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800face:	e777      	b.n	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fad0:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800fad4:	4283      	cmp	r3, r0
 800fad6:	d09a      	beq.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fad8:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800fadc:	4283      	cmp	r3, r0
 800fade:	e7ca      	b.n	800fa76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800fae0:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800fae4:	d22b      	bcs.n	800fb3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800fae6:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800faea:	4283      	cmp	r3, r0
 800faec:	d28f      	bcs.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800faee:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800faf2:	4283      	cmp	r3, r0
 800faf4:	d816      	bhi.n	800fb24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800faf6:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800fafa:	4283      	cmp	r3, r0
 800fafc:	f4bf af60 	bcs.w	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb00:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800fb04:	4283      	cmp	r3, r0
 800fb06:	d80a      	bhi.n	800fb1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800fb08:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800fb0c:	4283      	cmp	r3, r0
 800fb0e:	f4bf af57 	bcs.w	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb12:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800fb16:	4283      	cmp	r3, r0
 800fb18:	f43f af79 	beq.w	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb1c:	e7ac      	b.n	800fa78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fb1e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800fb22:	e7f8      	b.n	800fb16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800fb24:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800fb28:	4283      	cmp	r3, r0
 800fb2a:	d802      	bhi.n	800fb32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800fb2c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800fb30:	e798      	b.n	800fa64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800fb32:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800fb36:	4283      	cmp	r3, r0
 800fb38:	f47f af42 	bne.w	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb3c:	e767      	b.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb3e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800fb42:	4283      	cmp	r3, r0
 800fb44:	f43f af63 	beq.w	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb48:	d802      	bhi.n	800fb50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800fb4a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800fb4e:	e7f2      	b.n	800fb36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800fb50:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800fb54:	4283      	cmp	r3, r0
 800fb56:	d805      	bhi.n	800fb64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800fb58:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800fb5c:	4283      	cmp	r3, r0
 800fb5e:	f4ff af2f 	bcc.w	800f9c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb62:	e754      	b.n	800fa0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb64:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800fb68:	4283      	cmp	r3, r0
 800fb6a:	e7af      	b.n	800facc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800fb6c:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800fb70:	4617      	mov	r7, r2
 800fb72:	f102 0808 	add.w	r8, r2, #8
 800fb76:	4666      	mov	r6, ip
 800fb78:	6838      	ldr	r0, [r7, #0]
 800fb7a:	6879      	ldr	r1, [r7, #4]
 800fb7c:	46e6      	mov	lr, ip
 800fb7e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800fb82:	3708      	adds	r7, #8
 800fb84:	4547      	cmp	r7, r8
 800fb86:	46f4      	mov	ip, lr
 800fb88:	d1f6      	bne.n	800fb78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800fb8a:	6838      	ldr	r0, [r7, #0]
 800fb8c:	f8ce 0000 	str.w	r0, [lr]
 800fb90:	88b9      	ldrh	r1, [r7, #4]
 800fb92:	f8ae 1004 	strh.w	r1, [lr, #4]
 800fb96:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800fb9a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fb9e:	d009      	beq.n	800fbb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800fba0:	7b51      	ldrb	r1, [r2, #13]
 800fba2:	7992      	ldrb	r2, [r2, #6]
 800fba4:	0149      	lsls	r1, r1, #5
 800fba6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fbaa:	4311      	orrs	r1, r2
 800fbac:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fbb0:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800fbb4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fbb8:	d00d      	beq.n	800fbd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800fbba:	442b      	add	r3, r5
 800fbbc:	b29b      	uxth	r3, r3
 800fbbe:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800fbc2:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800fbc6:	10db      	asrs	r3, r3, #3
 800fbc8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fbcc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fbd0:	4313      	orrs	r3, r2
 800fbd2:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800fbd6:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800fbda:	00cb      	lsls	r3, r1, #3
 800fbdc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fbe0:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800fbe4:	064f      	lsls	r7, r1, #25
 800fbe6:	ea43 0302 	orr.w	r3, r3, r2
 800fbea:	bf44      	itt	mi
 800fbec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fbf0:	b21b      	sxthmi	r3, r3
 800fbf2:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800fbf6:	1b5d      	subs	r5, r3, r5
 800fbf8:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800fbfc:	4632      	mov	r2, r6
 800fbfe:	e6fb      	b.n	800f9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800fc00:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800fc04:	4694      	mov	ip, r2
 800fc06:	f102 0908 	add.w	r9, r2, #8
 800fc0a:	4676      	mov	r6, lr
 800fc0c:	f8dc 0000 	ldr.w	r0, [ip]
 800fc10:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fc14:	46f0      	mov	r8, lr
 800fc16:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800fc1a:	f10c 0c08 	add.w	ip, ip, #8
 800fc1e:	45cc      	cmp	ip, r9
 800fc20:	46c6      	mov	lr, r8
 800fc22:	d1f3      	bne.n	800fc0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800fc24:	f8dc 0000 	ldr.w	r0, [ip]
 800fc28:	f8c8 0000 	str.w	r0, [r8]
 800fc2c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800fc30:	f8a8 1004 	strh.w	r1, [r8, #4]
 800fc34:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800fc38:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fc3c:	d009      	beq.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800fc3e:	7b51      	ldrb	r1, [r2, #13]
 800fc40:	7992      	ldrb	r2, [r2, #6]
 800fc42:	0149      	lsls	r1, r1, #5
 800fc44:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fc48:	4311      	orrs	r1, r2
 800fc4a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fc4e:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800fc52:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fc56:	d00d      	beq.n	800fc74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800fc58:	1bdb      	subs	r3, r3, r7
 800fc5a:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800fc5e:	b29b      	uxth	r3, r3
 800fc60:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800fc64:	10db      	asrs	r3, r3, #3
 800fc66:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fc6a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fc6e:	4313      	orrs	r3, r2
 800fc70:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800fc74:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800fc78:	00cb      	lsls	r3, r1, #3
 800fc7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fc7e:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800fc82:	0648      	lsls	r0, r1, #25
 800fc84:	ea43 0302 	orr.w	r3, r3, r2
 800fc88:	bf44      	itt	mi
 800fc8a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fc8e:	b21b      	sxthmi	r3, r3
 800fc90:	e7b1      	b.n	800fbf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800fc94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800fc94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc98:	461e      	mov	r6, r3
 800fc9a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800fc9c:	4604      	mov	r4, r0
 800fc9e:	4617      	mov	r7, r2
 800fca0:	b92b      	cbnz	r3, 800fcae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800fca2:	4b25      	ldr	r3, [pc, #148]	; (800fd38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800fca4:	4a25      	ldr	r2, [pc, #148]	; (800fd3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800fca6:	4826      	ldr	r0, [pc, #152]	; (800fd40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800fca8:	21c0      	movs	r1, #192	; 0xc0
 800fcaa:	f00c fb67 	bl	801c37c <__assert_func>
 800fcae:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800fcb0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800fcb4:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800fcb8:	f7f3 fd6c 	bl	8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fcbc:	4605      	mov	r5, r0
 800fcbe:	b918      	cbnz	r0, 800fcc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800fcc0:	6030      	str	r0, [r6, #0]
 800fcc2:	4628      	mov	r0, r5
 800fcc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fcc8:	683b      	ldr	r3, [r7, #0]
 800fcca:	4601      	mov	r1, r0
 800fccc:	68db      	ldr	r3, [r3, #12]
 800fcce:	4638      	mov	r0, r7
 800fcd0:	4798      	blx	r3
 800fcd2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800fcd6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800fcda:	4602      	mov	r2, r0
 800fcdc:	6030      	str	r0, [r6, #0]
 800fcde:	d213      	bcs.n	800fd08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800fce0:	4643      	mov	r3, r8
 800fce2:	4639      	mov	r1, r7
 800fce4:	4620      	mov	r0, r4
 800fce6:	f7ff fe33 	bl	800f950 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800fcea:	6030      	str	r0, [r6, #0]
 800fcec:	6833      	ldr	r3, [r6, #0]
 800fcee:	b143      	cbz	r3, 800fd02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800fcf0:	7b5a      	ldrb	r2, [r3, #13]
 800fcf2:	7a9b      	ldrb	r3, [r3, #10]
 800fcf4:	0052      	lsls	r2, r2, #1
 800fcf6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fcfa:	4313      	orrs	r3, r2
 800fcfc:	bf0c      	ite	eq
 800fcfe:	2301      	moveq	r3, #1
 800fd00:	2300      	movne	r3, #0
 800fd02:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800fd06:	e7dc      	b.n	800fcc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800fd08:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800fd0c:	b29b      	uxth	r3, r3
 800fd0e:	2b7f      	cmp	r3, #127	; 0x7f
 800fd10:	d804      	bhi.n	800fd1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800fd12:	4639      	mov	r1, r7
 800fd14:	4620      	mov	r0, r4
 800fd16:	f7ff fd01 	bl	800f71c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fd1a:	e7e6      	b.n	800fcea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800fd1c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800fd20:	2b00      	cmp	r3, #0
 800fd22:	d0e3      	beq.n	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800fd24:	f640 1302 	movw	r3, #2306	; 0x902
 800fd28:	429d      	cmp	r5, r3
 800fd2a:	d1df      	bne.n	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800fd2c:	4601      	mov	r1, r0
 800fd2e:	4620      	mov	r0, r4
 800fd30:	f7ff fcc5 	bl	800f6be <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fd34:	e7d9      	b.n	800fcea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800fd36:	bf00      	nop
 800fd38:	0801e134 	.word	0x0801e134
 800fd3c:	0802055f 	.word	0x0802055f
 800fd40:	0801e15b 	.word	0x0801e15b

0800fd44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800fd44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fd48:	461e      	mov	r6, r3
 800fd4a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800fd4c:	4604      	mov	r4, r0
 800fd4e:	4617      	mov	r7, r2
 800fd50:	b92b      	cbnz	r3, 800fd5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800fd52:	4b26      	ldr	r3, [pc, #152]	; (800fdec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800fd54:	4a26      	ldr	r2, [pc, #152]	; (800fdf0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800fd56:	4827      	ldr	r0, [pc, #156]	; (800fdf4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800fd58:	21c0      	movs	r1, #192	; 0xc0
 800fd5a:	f00c fb0f 	bl	801c37c <__assert_func>
 800fd5e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800fd60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800fd64:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800fd68:	f7f3 fd14 	bl	8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fd6c:	4605      	mov	r5, r0
 800fd6e:	b918      	cbnz	r0, 800fd78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800fd70:	6030      	str	r0, [r6, #0]
 800fd72:	4628      	mov	r0, r5
 800fd74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fd78:	683b      	ldr	r3, [r7, #0]
 800fd7a:	4601      	mov	r1, r0
 800fd7c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800fd80:	4638      	mov	r0, r7
 800fd82:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800fd86:	47c8      	blx	r9
 800fd88:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800fd8c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800fd90:	4602      	mov	r2, r0
 800fd92:	6030      	str	r0, [r6, #0]
 800fd94:	d213      	bcs.n	800fdbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800fd96:	4643      	mov	r3, r8
 800fd98:	4639      	mov	r1, r7
 800fd9a:	4620      	mov	r0, r4
 800fd9c:	f7ff fdd8 	bl	800f950 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800fda0:	6030      	str	r0, [r6, #0]
 800fda2:	6833      	ldr	r3, [r6, #0]
 800fda4:	b143      	cbz	r3, 800fdb8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800fda6:	7b5a      	ldrb	r2, [r3, #13]
 800fda8:	7a9b      	ldrb	r3, [r3, #10]
 800fdaa:	0052      	lsls	r2, r2, #1
 800fdac:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fdb0:	4313      	orrs	r3, r2
 800fdb2:	bf0c      	ite	eq
 800fdb4:	2301      	moveq	r3, #1
 800fdb6:	2300      	movne	r3, #0
 800fdb8:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800fdbc:	e7d9      	b.n	800fd72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800fdbe:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800fdc2:	b29b      	uxth	r3, r3
 800fdc4:	2b7f      	cmp	r3, #127	; 0x7f
 800fdc6:	d804      	bhi.n	800fdd2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800fdc8:	4639      	mov	r1, r7
 800fdca:	4620      	mov	r0, r4
 800fdcc:	f7ff fca6 	bl	800f71c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fdd0:	e7e6      	b.n	800fda0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800fdd2:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800fdd6:	2b00      	cmp	r3, #0
 800fdd8:	d0e3      	beq.n	800fda2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800fdda:	f640 1302 	movw	r3, #2306	; 0x902
 800fdde:	429d      	cmp	r5, r3
 800fde0:	d1df      	bne.n	800fda2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800fde2:	4601      	mov	r1, r0
 800fde4:	4620      	mov	r0, r4
 800fde6:	f7ff fc6a 	bl	800f6be <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fdea:	e7d9      	b.n	800fda0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800fdec:	0801e134 	.word	0x0801e134
 800fdf0:	0802055f 	.word	0x0802055f
 800fdf4:	0801e15b 	.word	0x0801e15b

0800fdf8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800fdf8:	b510      	push	{r4, lr}
 800fdfa:	4604      	mov	r4, r0
 800fdfc:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800fdfe:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fe00:	b9d9      	cbnz	r1, 800fe3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800fe02:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fe04:	2b0a      	cmp	r3, #10
 800fe06:	d036      	beq.n	800fe76 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800fe08:	4620      	mov	r0, r4
 800fe0a:	f7ff fc21 	bl	800f650 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800fe0e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fe10:	2b09      	cmp	r3, #9
 800fe12:	d906      	bls.n	800fe22 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800fe14:	4b18      	ldr	r3, [pc, #96]	; (800fe78 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800fe16:	4a19      	ldr	r2, [pc, #100]	; (800fe7c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800fe18:	4819      	ldr	r0, [pc, #100]	; (800fe80 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800fe1a:	f44f 7182 	mov.w	r1, #260	; 0x104
 800fe1e:	f00c faad 	bl	801c37c <__assert_func>
 800fe22:	1c5a      	adds	r2, r3, #1
 800fe24:	8622      	strh	r2, [r4, #48]	; 0x30
 800fe26:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800fe28:	4413      	add	r3, r2
 800fe2a:	b29b      	uxth	r3, r3
 800fe2c:	2b09      	cmp	r3, #9
 800fe2e:	bf88      	it	hi
 800fe30:	3b0a      	subhi	r3, #10
 800fe32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fe36:	8358      	strh	r0, [r3, #26]
 800fe38:	e7e3      	b.n	800fe02 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800fe3a:	2b0a      	cmp	r3, #10
 800fe3c:	d01b      	beq.n	800fe76 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800fe3e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800fe40:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800fe44:	3901      	subs	r1, #1
 800fe46:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800fe48:	8721      	strh	r1, [r4, #56]	; 0x38
 800fe4a:	1c51      	adds	r1, r2, #1
 800fe4c:	b289      	uxth	r1, r1
 800fe4e:	2901      	cmp	r1, #1
 800fe50:	bf8a      	itet	hi
 800fe52:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800fe56:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800fe58:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800fe5a:	2b09      	cmp	r3, #9
 800fe5c:	d8da      	bhi.n	800fe14 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800fe5e:	1c5a      	adds	r2, r3, #1
 800fe60:	8622      	strh	r2, [r4, #48]	; 0x30
 800fe62:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800fe64:	4413      	add	r3, r2
 800fe66:	b29b      	uxth	r3, r3
 800fe68:	2b09      	cmp	r3, #9
 800fe6a:	bf88      	it	hi
 800fe6c:	3b0a      	subhi	r3, #10
 800fe6e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fe72:	8358      	strh	r0, [r3, #26]
 800fe74:	e7c2      	b.n	800fdfc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800fe76:	bd10      	pop	{r4, pc}
 800fe78:	08020330 	.word	0x08020330
 800fe7c:	080206b5 	.word	0x080206b5
 800fe80:	0801e15b 	.word	0x0801e15b

0800fe84 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800fe84:	b538      	push	{r3, r4, r5, lr}
 800fe86:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800fe88:	4604      	mov	r4, r0
 800fe8a:	b92a      	cbnz	r2, 800fe98 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800fe8c:	4b13      	ldr	r3, [pc, #76]	; (800fedc <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800fe8e:	4a14      	ldr	r2, [pc, #80]	; (800fee0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800fe90:	4814      	ldr	r0, [pc, #80]	; (800fee4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800fe92:	21d5      	movs	r1, #213	; 0xd5
 800fe94:	f00c fa72 	bl	801c37c <__assert_func>
 800fe98:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800fe9a:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800fe9e:	3a01      	subs	r2, #1
 800fea0:	8b4d      	ldrh	r5, [r1, #26]
 800fea2:	8602      	strh	r2, [r0, #48]	; 0x30
 800fea4:	1c5a      	adds	r2, r3, #1
 800fea6:	b292      	uxth	r2, r2
 800fea8:	2a09      	cmp	r2, #9
 800feaa:	bf86      	itte	hi
 800feac:	3b09      	subhi	r3, #9
 800feae:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800feb0:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800feb2:	f7ff ffa1 	bl	800fdf8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800feb6:	8b23      	ldrh	r3, [r4, #24]
 800feb8:	2b01      	cmp	r3, #1
 800feba:	bf9c      	itt	ls
 800febc:	3301      	addls	r3, #1
 800febe:	8323      	strhls	r3, [r4, #24]
 800fec0:	8ae3      	ldrh	r3, [r4, #22]
 800fec2:	b90b      	cbnz	r3, 800fec8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800fec4:	2302      	movs	r3, #2
 800fec6:	82e3      	strh	r3, [r4, #22]
 800fec8:	8ae3      	ldrh	r3, [r4, #22]
 800feca:	3b01      	subs	r3, #1
 800fecc:	b29b      	uxth	r3, r3
 800fece:	82e3      	strh	r3, [r4, #22]
 800fed0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fed4:	4628      	mov	r0, r5
 800fed6:	8265      	strh	r5, [r4, #18]
 800fed8:	bd38      	pop	{r3, r4, r5, pc}
 800feda:	bf00      	nop
 800fedc:	0801e134 	.word	0x0801e134
 800fee0:	0802060a 	.word	0x0802060a
 800fee4:	0801e15b 	.word	0x0801e15b

0800fee8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800fee8:	b538      	push	{r3, r4, r5, lr}
 800feea:	428a      	cmp	r2, r1
 800feec:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800feee:	d90c      	bls.n	800ff0a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800fef0:	b92c      	cbnz	r4, 800fefe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800fef2:	4b1c      	ldr	r3, [pc, #112]	; (800ff64 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800fef4:	4a1c      	ldr	r2, [pc, #112]	; (800ff68 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800fef6:	21e1      	movs	r1, #225	; 0xe1
 800fef8:	481c      	ldr	r0, [pc, #112]	; (800ff6c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800fefa:	f00c fa3f 	bl	801c37c <__assert_func>
 800fefe:	3c01      	subs	r4, #1
 800ff00:	8604      	strh	r4, [r0, #48]	; 0x30
 800ff02:	4b1b      	ldr	r3, [pc, #108]	; (800ff70 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800ff04:	4a1b      	ldr	r2, [pc, #108]	; (800ff74 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800ff06:	21c5      	movs	r1, #197	; 0xc5
 800ff08:	e7f6      	b.n	800fef8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800ff0a:	428c      	cmp	r4, r1
 800ff0c:	d203      	bcs.n	800ff16 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800ff0e:	4b1a      	ldr	r3, [pc, #104]	; (800ff78 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800ff10:	4a1a      	ldr	r2, [pc, #104]	; (800ff7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800ff12:	21cb      	movs	r1, #203	; 0xcb
 800ff14:	e7f0      	b.n	800fef8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800ff16:	1a64      	subs	r4, r4, r1
 800ff18:	8604      	strh	r4, [r0, #48]	; 0x30
 800ff1a:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800ff1c:	4421      	add	r1, r4
 800ff1e:	b289      	uxth	r1, r1
 800ff20:	2909      	cmp	r1, #9
 800ff22:	bf88      	it	hi
 800ff24:	390a      	subhi	r1, #10
 800ff26:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800ff28:	250a      	movs	r5, #10
 800ff2a:	b1ba      	cbz	r2, 800ff5c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800ff2c:	3a01      	subs	r2, #1
 800ff2e:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800ff30:	b292      	uxth	r2, r2
 800ff32:	2909      	cmp	r1, #9
 800ff34:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800ff38:	d903      	bls.n	800ff42 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800ff3a:	4b11      	ldr	r3, [pc, #68]	; (800ff80 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800ff3c:	4a11      	ldr	r2, [pc, #68]	; (800ff84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800ff3e:	21e6      	movs	r1, #230	; 0xe6
 800ff40:	e7da      	b.n	800fef8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800ff42:	3101      	adds	r1, #1
 800ff44:	8601      	strh	r1, [r0, #48]	; 0x30
 800ff46:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800ff48:	b901      	cbnz	r1, 800ff4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800ff4a:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800ff4c:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800ff4e:	3901      	subs	r1, #1
 800ff50:	b289      	uxth	r1, r1
 800ff52:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800ff54:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800ff58:	834c      	strh	r4, [r1, #26]
 800ff5a:	e7e6      	b.n	800ff2a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800ff5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ff60:	f7ff bf4a 	b.w	800fdf8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ff64:	0801e134 	.word	0x0801e134
 800ff68:	080203e3 	.word	0x080203e3
 800ff6c:	0801e15b 	.word	0x0801e15b
 800ff70:	0801e187 	.word	0x0801e187
 800ff74:	0802048d 	.word	0x0802048d
 800ff78:	0802033c 	.word	0x0802033c
 800ff7c:	08020764 	.word	0x08020764
 800ff80:	08020348 	.word	0x08020348
 800ff84:	0802035b 	.word	0x0802035b

0800ff88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800ff88:	3a01      	subs	r2, #1
 800ff8a:	b570      	push	{r4, r5, r6, lr}
 800ff8c:	b292      	uxth	r2, r2
 800ff8e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800ff92:	42b2      	cmp	r2, r6
 800ff94:	d019      	beq.n	800ffca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800ff96:	8b04      	ldrh	r4, [r0, #24]
 800ff98:	f831 5b02 	ldrh.w	r5, [r1], #2
 800ff9c:	4294      	cmp	r4, r2
 800ff9e:	d805      	bhi.n	800ffac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800ffa0:	4b19      	ldr	r3, [pc, #100]	; (8010008 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800ffa2:	4a1a      	ldr	r2, [pc, #104]	; (801000c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800ffa4:	481a      	ldr	r0, [pc, #104]	; (8010010 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800ffa6:	21c5      	movs	r1, #197	; 0xc5
 800ffa8:	f00c f9e8 	bl	801c37c <__assert_func>
 800ffac:	8ac4      	ldrh	r4, [r0, #22]
 800ffae:	4414      	add	r4, r2
 800ffb0:	b2a4      	uxth	r4, r4
 800ffb2:	2c01      	cmp	r4, #1
 800ffb4:	bf88      	it	hi
 800ffb6:	3c02      	subhi	r4, #2
 800ffb8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800ffbc:	3a01      	subs	r2, #1
 800ffbe:	8a64      	ldrh	r4, [r4, #18]
 800ffc0:	42ac      	cmp	r4, r5
 800ffc2:	b292      	uxth	r2, r2
 800ffc4:	d0e5      	beq.n	800ff92 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800ffc6:	2000      	movs	r0, #0
 800ffc8:	bd70      	pop	{r4, r5, r6, pc}
 800ffca:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800ffce:	2400      	movs	r4, #0
 800ffd0:	4413      	add	r3, r2
 800ffd2:	b2a2      	uxth	r2, r4
 800ffd4:	429a      	cmp	r2, r3
 800ffd6:	da14      	bge.n	8010002 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800ffd8:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800ffda:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800ffde:	4296      	cmp	r6, r2
 800ffe0:	d802      	bhi.n	800ffe8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800ffe2:	4b09      	ldr	r3, [pc, #36]	; (8010008 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800ffe4:	4a0b      	ldr	r2, [pc, #44]	; (8010014 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800ffe6:	e7dd      	b.n	800ffa4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800ffe8:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800ffea:	4432      	add	r2, r6
 800ffec:	b292      	uxth	r2, r2
 800ffee:	2a09      	cmp	r2, #9
 800fff0:	bf88      	it	hi
 800fff2:	3a0a      	subhi	r2, #10
 800fff4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800fff8:	3401      	adds	r4, #1
 800fffa:	8b52      	ldrh	r2, [r2, #26]
 800fffc:	42aa      	cmp	r2, r5
 800fffe:	d0e8      	beq.n	800ffd2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8010000:	e7e1      	b.n	800ffc6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8010002:	2001      	movs	r0, #1
 8010004:	e7e0      	b.n	800ffc8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8010006:	bf00      	nop
 8010008:	0801e187 	.word	0x0801e187
 801000c:	080207e8 	.word	0x080207e8
 8010010:	0801e15b 	.word	0x0801e15b
 8010014:	0802048d 	.word	0x0802048d

08010018 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8010018:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801001c:	4605      	mov	r5, r0
 801001e:	4616      	mov	r6, r2
 8010020:	1c8c      	adds	r4, r1, #2
 8010022:	8809      	ldrh	r1, [r1, #0]
 8010024:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8010028:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801002c:	42b3      	cmp	r3, r6
 801002e:	d124      	bne.n	801007a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8010030:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8010034:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8010038:	f001 070f 	and.w	r7, r1, #15
 801003c:	f8cd 8000 	str.w	r8, [sp]
 8010040:	464b      	mov	r3, r9
 8010042:	4652      	mov	r2, sl
 8010044:	4621      	mov	r1, r4
 8010046:	4628      	mov	r0, r5
 8010048:	f7ff ff9e 	bl	800ff88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801004c:	4683      	mov	fp, r0
 801004e:	b168      	cbz	r0, 801006c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8010050:	eb0a 0109 	add.w	r1, sl, r9
 8010054:	4441      	add	r1, r8
 8010056:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801005a:	463a      	mov	r2, r7
 801005c:	4649      	mov	r1, r9
 801005e:	4628      	mov	r0, r5
 8010060:	f7ff ff42 	bl	800fee8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8010064:	4658      	mov	r0, fp
 8010066:	b003      	add	sp, #12
 8010068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801006c:	eb07 010a 	add.w	r1, r7, sl
 8010070:	4449      	add	r1, r9
 8010072:	4441      	add	r1, r8
 8010074:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8010078:	e7d2      	b.n	8010020 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801007a:	f04f 0b00 	mov.w	fp, #0
 801007e:	e7f1      	b.n	8010064 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08010080 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8010080:	b570      	push	{r4, r5, r6, lr}
 8010082:	8810      	ldrh	r0, [r2, #0]
 8010084:	4298      	cmp	r0, r3
 8010086:	d817      	bhi.n	80100b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010088:	1e48      	subs	r0, r1, #1
 801008a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801008e:	4298      	cmp	r0, r3
 8010090:	d312      	bcc.n	80100b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010092:	2400      	movs	r4, #0
 8010094:	428c      	cmp	r4, r1
 8010096:	d20f      	bcs.n	80100b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010098:	1860      	adds	r0, r4, r1
 801009a:	1040      	asrs	r0, r0, #1
 801009c:	0085      	lsls	r5, r0, #2
 801009e:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80100a2:	42b3      	cmp	r3, r6
 80100a4:	d902      	bls.n	80100ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80100a6:	3001      	adds	r0, #1
 80100a8:	b284      	uxth	r4, r0
 80100aa:	e7f3      	b.n	8010094 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80100ac:	d201      	bcs.n	80100b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80100ae:	b281      	uxth	r1, r0
 80100b0:	e7f0      	b.n	8010094 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80100b2:	442a      	add	r2, r5
 80100b4:	8850      	ldrh	r0, [r2, #2]
 80100b6:	bd70      	pop	{r4, r5, r6, pc}
 80100b8:	2000      	movs	r0, #0
 80100ba:	e7fc      	b.n	80100b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080100bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80100bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80100c0:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 80100c2:	886f      	ldrh	r7, [r5, #2]
 80100c4:	4604      	mov	r4, r0
 80100c6:	087f      	lsrs	r7, r7, #1
 80100c8:	260b      	movs	r6, #11
 80100ca:	3e01      	subs	r6, #1
 80100cc:	d01b      	beq.n	8010106 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80100ce:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80100d0:	b92b      	cbnz	r3, 80100de <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 80100d2:	4b0e      	ldr	r3, [pc, #56]	; (801010c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 80100d4:	4a0e      	ldr	r2, [pc, #56]	; (8010110 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 80100d6:	480f      	ldr	r0, [pc, #60]	; (8010114 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 80100d8:	21c0      	movs	r1, #192	; 0xc0
 80100da:	f00c f94f 	bl	801c37c <__assert_func>
 80100de:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80100e0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80100e4:	462a      	mov	r2, r5
 80100e6:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 80100ea:	4639      	mov	r1, r7
 80100ec:	4643      	mov	r3, r8
 80100ee:	4620      	mov	r0, r4
 80100f0:	f7ff ffc6 	bl	8010080 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80100f4:	b138      	cbz	r0, 8010106 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80100f6:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80100fa:	4642      	mov	r2, r8
 80100fc:	4620      	mov	r0, r4
 80100fe:	f7ff ff8b 	bl	8010018 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8010102:	2800      	cmp	r0, #0
 8010104:	d1e1      	bne.n	80100ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8010106:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801010a:	bf00      	nop
 801010c:	0801e134 	.word	0x0801e134
 8010110:	0802055f 	.word	0x0802055f
 8010114:	0801e15b 	.word	0x0801e15b

08010118 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8010118:	4602      	mov	r2, r0
 801011a:	b148      	cbz	r0, 8010130 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801011c:	2300      	movs	r3, #0
 801011e:	b298      	uxth	r0, r3
 8010120:	3301      	adds	r3, #1
 8010122:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8010126:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801012a:	2900      	cmp	r1, #0
 801012c:	d1f7      	bne.n	801011e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801012e:	4770      	bx	lr
 8010130:	4770      	bx	lr

08010132 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8010132:	b530      	push	{r4, r5, lr}
 8010134:	4604      	mov	r4, r0
 8010136:	b159      	cbz	r1, 8010150 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8010138:	b148      	cbz	r0, 801014e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801013a:	2300      	movs	r3, #0
 801013c:	b298      	uxth	r0, r3
 801013e:	4282      	cmp	r2, r0
 8010140:	d905      	bls.n	801014e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8010142:	5ccd      	ldrb	r5, [r1, r3]
 8010144:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8010148:	3301      	adds	r3, #1
 801014a:	2d00      	cmp	r5, #0
 801014c:	d1f6      	bne.n	801013c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801014e:	bd30      	pop	{r4, r5, pc}
 8010150:	4608      	mov	r0, r1
 8010152:	e7fc      	b.n	801014e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08010154 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8010154:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010156:	b08b      	sub	sp, #44	; 0x2c
 8010158:	468c      	mov	ip, r1
 801015a:	2100      	movs	r1, #0
 801015c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8010160:	ae01      	add	r6, sp, #4
 8010162:	211f      	movs	r1, #31
 8010164:	fbb0 f7f3 	udiv	r7, r0, r3
 8010168:	fb03 0517 	mls	r5, r3, r7, r0
 801016c:	b2ec      	uxtb	r4, r5
 801016e:	2d09      	cmp	r5, #9
 8010170:	bfd4      	ite	le
 8010172:	3430      	addle	r4, #48	; 0x30
 8010174:	3457      	addgt	r4, #87	; 0x57
 8010176:	b2e4      	uxtb	r4, r4
 8010178:	558c      	strb	r4, [r1, r6]
 801017a:	4638      	mov	r0, r7
 801017c:	1e4c      	subs	r4, r1, #1
 801017e:	b92f      	cbnz	r7, 801018c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8010180:	4431      	add	r1, r6
 8010182:	4660      	mov	r0, ip
 8010184:	f7ff ffd5 	bl	8010132 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8010188:	b00b      	add	sp, #44	; 0x2c
 801018a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801018c:	4621      	mov	r1, r4
 801018e:	e7e9      	b.n	8010164 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08010190 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8010190:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010192:	4607      	mov	r7, r0
 8010194:	b08b      	sub	sp, #44	; 0x2c
 8010196:	4608      	mov	r0, r1
 8010198:	b341      	cbz	r1, 80101ec <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801019a:	1e99      	subs	r1, r3, #2
 801019c:	290e      	cmp	r1, #14
 801019e:	d825      	bhi.n	80101ec <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80101a0:	2100      	movs	r1, #0
 80101a2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80101a6:	463c      	mov	r4, r7
 80101a8:	261f      	movs	r6, #31
 80101aa:	f10d 0c04 	add.w	ip, sp, #4
 80101ae:	fb94 fef3 	sdiv	lr, r4, r3
 80101b2:	fb03 441e 	mls	r4, r3, lr, r4
 80101b6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80101ba:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80101be:	b2ec      	uxtb	r4, r5
 80101c0:	2d09      	cmp	r5, #9
 80101c2:	bfd4      	ite	le
 80101c4:	3430      	addle	r4, #48	; 0x30
 80101c6:	3457      	addgt	r4, #87	; 0x57
 80101c8:	b2e4      	uxtb	r4, r4
 80101ca:	f80c 4006 	strb.w	r4, [ip, r6]
 80101ce:	4674      	mov	r4, lr
 80101d0:	1e71      	subs	r1, r6, #1
 80101d2:	b96c      	cbnz	r4, 80101f0 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80101d4:	2f00      	cmp	r7, #0
 80101d6:	da05      	bge.n	80101e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80101d8:	ab0a      	add	r3, sp, #40	; 0x28
 80101da:	4419      	add	r1, r3
 80101dc:	232d      	movs	r3, #45	; 0x2d
 80101de:	f801 3c24 	strb.w	r3, [r1, #-36]
 80101e2:	1eb1      	subs	r1, r6, #2
 80101e4:	3101      	adds	r1, #1
 80101e6:	4461      	add	r1, ip
 80101e8:	f7ff ffa3 	bl	8010132 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80101ec:	b00b      	add	sp, #44	; 0x2c
 80101ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80101f0:	460e      	mov	r6, r1
 80101f2:	e7dc      	b.n	80101ae <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080101f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80101f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101f8:	4691      	mov	r9, r2
 80101fa:	b085      	sub	sp, #20
 80101fc:	6802      	ldr	r2, [r0, #0]
 80101fe:	9201      	str	r2, [sp, #4]
 8010200:	4688      	mov	r8, r1
 8010202:	4683      	mov	fp, r0
 8010204:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8010208:	9103      	str	r1, [sp, #12]
 801020a:	4610      	mov	r0, r2
 801020c:	461c      	mov	r4, r3
 801020e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8010212:	9302      	str	r3, [sp, #8]
 8010214:	f7ff ff80 	bl	8010118 <_ZN8touchgfx7Unicode6strlenEPKt>
 8010218:	f1b8 0f00 	cmp.w	r8, #0
 801021c:	bf0c      	ite	eq
 801021e:	4684      	moveq	ip, r0
 8010220:	f100 0c01 	addne.w	ip, r0, #1
 8010224:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8010228:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801022c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801022e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010230:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8010234:	9903      	ldr	r1, [sp, #12]
 8010236:	fa1f fc8c 	uxth.w	ip, ip
 801023a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801023e:	d041      	beq.n	80102c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8010240:	d834      	bhi.n	80102ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8010242:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8010246:	d059      	beq.n	80102fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8010248:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801024c:	d03a      	beq.n	80102c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801024e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8010252:	d034      	beq.n	80102be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8010254:	2400      	movs	r4, #0
 8010256:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801025a:	3a01      	subs	r2, #1
 801025c:	b169      	cbz	r1, 801027a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801025e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010260:	458c      	cmp	ip, r1
 8010262:	da09      	bge.n	8010278 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010264:	eba1 010c 	sub.w	r1, r1, ip
 8010268:	b289      	uxth	r1, r1
 801026a:	b933      	cbnz	r3, 801027a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801026c:	2e00      	cmp	r6, #0
 801026e:	d051      	beq.n	8010314 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8010270:	2800      	cmp	r0, #0
 8010272:	d04f      	beq.n	8010314 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8010274:	440c      	add	r4, r1
 8010276:	b2a4      	uxth	r4, r4
 8010278:	2100      	movs	r1, #0
 801027a:	682b      	ldr	r3, [r5, #0]
 801027c:	4293      	cmp	r3, r2
 801027e:	da07      	bge.n	8010290 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8010280:	f1b8 0f00 	cmp.w	r8, #0
 8010284:	d004      	beq.n	8010290 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8010286:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801028a:	682b      	ldr	r3, [r5, #0]
 801028c:	3301      	adds	r3, #1
 801028e:	602b      	str	r3, [r5, #0]
 8010290:	2730      	movs	r7, #48	; 0x30
 8010292:	2c00      	cmp	r4, #0
 8010294:	d04e      	beq.n	8010334 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8010296:	682e      	ldr	r6, [r5, #0]
 8010298:	3c01      	subs	r4, #1
 801029a:	42b2      	cmp	r2, r6
 801029c:	b2a4      	uxth	r4, r4
 801029e:	dd49      	ble.n	8010334 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80102a0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80102a4:	682b      	ldr	r3, [r5, #0]
 80102a6:	3301      	adds	r3, #1
 80102a8:	602b      	str	r3, [r5, #0]
 80102aa:	e7f2      	b.n	8010292 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80102ac:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80102b0:	d01d      	beq.n	80102ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80102b2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80102b6:	d002      	beq.n	80102be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80102b8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80102bc:	e7c9      	b.n	8010252 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80102be:	4684      	mov	ip, r0
 80102c0:	f04f 0800 	mov.w	r8, #0
 80102c4:	2c00      	cmp	r4, #0
 80102c6:	d0c6      	beq.n	8010256 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80102c8:	b947      	cbnz	r7, 80102dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80102ca:	2801      	cmp	r0, #1
 80102cc:	d106      	bne.n	80102dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80102ce:	8814      	ldrh	r4, [r2, #0]
 80102d0:	2c30      	cmp	r4, #48	; 0x30
 80102d2:	bf02      	ittt	eq
 80102d4:	3202      	addeq	r2, #2
 80102d6:	f8cb 2000 	streq.w	r2, [fp]
 80102da:	4638      	moveq	r0, r7
 80102dc:	45bc      	cmp	ip, r7
 80102de:	da14      	bge.n	801030a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80102e0:	b2bf      	uxth	r7, r7
 80102e2:	eba7 040c 	sub.w	r4, r7, ip
 80102e6:	b2a4      	uxth	r4, r4
 80102e8:	46bc      	mov	ip, r7
 80102ea:	2600      	movs	r6, #0
 80102ec:	e7b3      	b.n	8010256 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80102ee:	4684      	mov	ip, r0
 80102f0:	b16c      	cbz	r4, 801030e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80102f2:	42b8      	cmp	r0, r7
 80102f4:	dd00      	ble.n	80102f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80102f6:	b2b8      	uxth	r0, r7
 80102f8:	2400      	movs	r4, #0
 80102fa:	e003      	b.n	8010304 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80102fc:	f04f 0c01 	mov.w	ip, #1
 8010300:	2400      	movs	r4, #0
 8010302:	4660      	mov	r0, ip
 8010304:	4626      	mov	r6, r4
 8010306:	46a0      	mov	r8, r4
 8010308:	e7a5      	b.n	8010256 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801030a:	2400      	movs	r4, #0
 801030c:	e7ed      	b.n	80102ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801030e:	4626      	mov	r6, r4
 8010310:	46a0      	mov	r8, r4
 8010312:	e7a0      	b.n	8010256 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010314:	2900      	cmp	r1, #0
 8010316:	d0b0      	beq.n	801027a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010318:	2720      	movs	r7, #32
 801031a:	682e      	ldr	r6, [r5, #0]
 801031c:	2900      	cmp	r1, #0
 801031e:	d0ac      	beq.n	801027a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010320:	3901      	subs	r1, #1
 8010322:	4296      	cmp	r6, r2
 8010324:	b289      	uxth	r1, r1
 8010326:	daa7      	bge.n	8010278 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010328:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801032c:	682b      	ldr	r3, [r5, #0]
 801032e:	3301      	adds	r3, #1
 8010330:	602b      	str	r3, [r5, #0]
 8010332:	e7f2      	b.n	801031a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8010334:	b188      	cbz	r0, 801035a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010336:	682b      	ldr	r3, [r5, #0]
 8010338:	3801      	subs	r0, #1
 801033a:	429a      	cmp	r2, r3
 801033c:	b280      	uxth	r0, r0
 801033e:	dd0c      	ble.n	801035a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010340:	f8db 3000 	ldr.w	r3, [fp]
 8010344:	1c9c      	adds	r4, r3, #2
 8010346:	f8cb 4000 	str.w	r4, [fp]
 801034a:	881c      	ldrh	r4, [r3, #0]
 801034c:	682b      	ldr	r3, [r5, #0]
 801034e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8010352:	682b      	ldr	r3, [r5, #0]
 8010354:	3301      	adds	r3, #1
 8010356:	602b      	str	r3, [r5, #0]
 8010358:	e7ec      	b.n	8010334 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801035a:	2620      	movs	r6, #32
 801035c:	b151      	cbz	r1, 8010374 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801035e:	6828      	ldr	r0, [r5, #0]
 8010360:	3901      	subs	r1, #1
 8010362:	4282      	cmp	r2, r0
 8010364:	b289      	uxth	r1, r1
 8010366:	dd05      	ble.n	8010374 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8010368:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801036c:	682b      	ldr	r3, [r5, #0]
 801036e:	3301      	adds	r3, #1
 8010370:	602b      	str	r3, [r5, #0]
 8010372:	e7f3      	b.n	801035c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8010374:	b005      	add	sp, #20
 8010376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801037a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801037a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801037e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8010382:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8010386:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801038a:	2400      	movs	r4, #0
 801038c:	8014      	strh	r4, [r2, #0]
 801038e:	701c      	strb	r4, [r3, #0]
 8010390:	f888 4000 	strb.w	r4, [r8]
 8010394:	f88c 4000 	strb.w	r4, [ip]
 8010398:	f88e 4000 	strb.w	r4, [lr]
 801039c:	703c      	strb	r4, [r7, #0]
 801039e:	6804      	ldr	r4, [r0, #0]
 80103a0:	b1a4      	cbz	r4, 80103cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80103a2:	8824      	ldrh	r4, [r4, #0]
 80103a4:	f04f 0901 	mov.w	r9, #1
 80103a8:	b314      	cbz	r4, 80103f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80103aa:	2c2b      	cmp	r4, #43	; 0x2b
 80103ac:	d001      	beq.n	80103b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80103ae:	2c20      	cmp	r4, #32
 80103b0:	d110      	bne.n	80103d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80103b2:	8014      	strh	r4, [r2, #0]
 80103b4:	6804      	ldr	r4, [r0, #0]
 80103b6:	b10c      	cbz	r4, 80103bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80103b8:	3402      	adds	r4, #2
 80103ba:	6004      	str	r4, [r0, #0]
 80103bc:	680c      	ldr	r4, [r1, #0]
 80103be:	b10c      	cbz	r4, 80103c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80103c0:	3401      	adds	r4, #1
 80103c2:	600c      	str	r4, [r1, #0]
 80103c4:	6804      	ldr	r4, [r0, #0]
 80103c6:	b17c      	cbz	r4, 80103e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80103c8:	8824      	ldrh	r4, [r4, #0]
 80103ca:	e7ed      	b.n	80103a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80103cc:	680c      	ldr	r4, [r1, #0]
 80103ce:	b17c      	cbz	r4, 80103f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80103d0:	7824      	ldrb	r4, [r4, #0]
 80103d2:	e7e7      	b.n	80103a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80103d4:	2c2d      	cmp	r4, #45	; 0x2d
 80103d6:	d102      	bne.n	80103de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80103d8:	f883 9000 	strb.w	r9, [r3]
 80103dc:	e7ea      	b.n	80103b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80103de:	2c23      	cmp	r4, #35	; 0x23
 80103e0:	d107      	bne.n	80103f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80103e2:	f888 9000 	strb.w	r9, [r8]
 80103e6:	e7e5      	b.n	80103b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80103e8:	680c      	ldr	r4, [r1, #0]
 80103ea:	b10c      	cbz	r4, 80103f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80103ec:	7824      	ldrb	r4, [r4, #0]
 80103ee:	e7db      	b.n	80103a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80103f0:	2400      	movs	r4, #0
 80103f2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80103f6:	2b09      	cmp	r3, #9
 80103f8:	d901      	bls.n	80103fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80103fa:	2c2a      	cmp	r4, #42	; 0x2a
 80103fc:	d122      	bne.n	8010444 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80103fe:	2301      	movs	r3, #1
 8010400:	2c30      	cmp	r4, #48	; 0x30
 8010402:	f88e 3000 	strb.w	r3, [lr]
 8010406:	d10d      	bne.n	8010424 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010408:	f88c 3000 	strb.w	r3, [ip]
 801040c:	6803      	ldr	r3, [r0, #0]
 801040e:	b10b      	cbz	r3, 8010414 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8010410:	3302      	adds	r3, #2
 8010412:	6003      	str	r3, [r0, #0]
 8010414:	680b      	ldr	r3, [r1, #0]
 8010416:	b10b      	cbz	r3, 801041c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8010418:	3301      	adds	r3, #1
 801041a:	600b      	str	r3, [r1, #0]
 801041c:	6803      	ldr	r3, [r0, #0]
 801041e:	2b00      	cmp	r3, #0
 8010420:	d02f      	beq.n	8010482 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8010422:	881c      	ldrh	r4, [r3, #0]
 8010424:	2c2a      	cmp	r4, #42	; 0x2a
 8010426:	d135      	bne.n	8010494 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010428:	f04f 33ff 	mov.w	r3, #4294967295
 801042c:	6033      	str	r3, [r6, #0]
 801042e:	6803      	ldr	r3, [r0, #0]
 8010430:	b10b      	cbz	r3, 8010436 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8010432:	3302      	adds	r3, #2
 8010434:	6003      	str	r3, [r0, #0]
 8010436:	680b      	ldr	r3, [r1, #0]
 8010438:	b10b      	cbz	r3, 801043e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801043a:	3301      	adds	r3, #1
 801043c:	600b      	str	r3, [r1, #0]
 801043e:	6803      	ldr	r3, [r0, #0]
 8010440:	b31b      	cbz	r3, 801048a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8010442:	881c      	ldrh	r4, [r3, #0]
 8010444:	2c2e      	cmp	r4, #46	; 0x2e
 8010446:	d11a      	bne.n	801047e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010448:	2301      	movs	r3, #1
 801044a:	703b      	strb	r3, [r7, #0]
 801044c:	6803      	ldr	r3, [r0, #0]
 801044e:	b10b      	cbz	r3, 8010454 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8010450:	3302      	adds	r3, #2
 8010452:	6003      	str	r3, [r0, #0]
 8010454:	680b      	ldr	r3, [r1, #0]
 8010456:	b10b      	cbz	r3, 801045c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8010458:	3301      	adds	r3, #1
 801045a:	600b      	str	r3, [r1, #0]
 801045c:	6803      	ldr	r3, [r0, #0]
 801045e:	2b00      	cmp	r3, #0
 8010460:	d036      	beq.n	80104d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8010462:	881b      	ldrh	r3, [r3, #0]
 8010464:	2b2a      	cmp	r3, #42	; 0x2a
 8010466:	d137      	bne.n	80104d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010468:	f04f 33ff 	mov.w	r3, #4294967295
 801046c:	602b      	str	r3, [r5, #0]
 801046e:	6803      	ldr	r3, [r0, #0]
 8010470:	b10b      	cbz	r3, 8010476 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8010472:	3302      	adds	r3, #2
 8010474:	6003      	str	r3, [r0, #0]
 8010476:	680b      	ldr	r3, [r1, #0]
 8010478:	b10b      	cbz	r3, 801047e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801047a:	3301      	adds	r3, #1
 801047c:	600b      	str	r3, [r1, #0]
 801047e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010482:	680c      	ldr	r4, [r1, #0]
 8010484:	b134      	cbz	r4, 8010494 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010486:	7824      	ldrb	r4, [r4, #0]
 8010488:	e7cc      	b.n	8010424 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801048a:	680b      	ldr	r3, [r1, #0]
 801048c:	2b00      	cmp	r3, #0
 801048e:	d0f6      	beq.n	801047e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010490:	781c      	ldrb	r4, [r3, #0]
 8010492:	e7d7      	b.n	8010444 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010494:	2300      	movs	r3, #0
 8010496:	6033      	str	r3, [r6, #0]
 8010498:	220a      	movs	r2, #10
 801049a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801049e:	fa1f f38c 	uxth.w	r3, ip
 80104a2:	2b09      	cmp	r3, #9
 80104a4:	d8ce      	bhi.n	8010444 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80104a6:	6833      	ldr	r3, [r6, #0]
 80104a8:	fb02 c303 	mla	r3, r2, r3, ip
 80104ac:	6033      	str	r3, [r6, #0]
 80104ae:	6803      	ldr	r3, [r0, #0]
 80104b0:	b10b      	cbz	r3, 80104b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80104b2:	3302      	adds	r3, #2
 80104b4:	6003      	str	r3, [r0, #0]
 80104b6:	680b      	ldr	r3, [r1, #0]
 80104b8:	b10b      	cbz	r3, 80104be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80104ba:	3301      	adds	r3, #1
 80104bc:	600b      	str	r3, [r1, #0]
 80104be:	6803      	ldr	r3, [r0, #0]
 80104c0:	b10b      	cbz	r3, 80104c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80104c2:	881c      	ldrh	r4, [r3, #0]
 80104c4:	e7e9      	b.n	801049a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80104c6:	680c      	ldr	r4, [r1, #0]
 80104c8:	2c00      	cmp	r4, #0
 80104ca:	d0e6      	beq.n	801049a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80104cc:	7824      	ldrb	r4, [r4, #0]
 80104ce:	e7e4      	b.n	801049a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80104d0:	680b      	ldr	r3, [r1, #0]
 80104d2:	b10b      	cbz	r3, 80104d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80104d4:	781b      	ldrb	r3, [r3, #0]
 80104d6:	e7c5      	b.n	8010464 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80104d8:	2200      	movs	r2, #0
 80104da:	602a      	str	r2, [r5, #0]
 80104dc:	240a      	movs	r4, #10
 80104de:	3b30      	subs	r3, #48	; 0x30
 80104e0:	b29e      	uxth	r6, r3
 80104e2:	2e09      	cmp	r6, #9
 80104e4:	682a      	ldr	r2, [r5, #0]
 80104e6:	d813      	bhi.n	8010510 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80104e8:	fb04 3302 	mla	r3, r4, r2, r3
 80104ec:	602b      	str	r3, [r5, #0]
 80104ee:	6803      	ldr	r3, [r0, #0]
 80104f0:	b10b      	cbz	r3, 80104f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80104f2:	3302      	adds	r3, #2
 80104f4:	6003      	str	r3, [r0, #0]
 80104f6:	680b      	ldr	r3, [r1, #0]
 80104f8:	b10b      	cbz	r3, 80104fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80104fa:	3301      	adds	r3, #1
 80104fc:	600b      	str	r3, [r1, #0]
 80104fe:	6803      	ldr	r3, [r0, #0]
 8010500:	b10b      	cbz	r3, 8010506 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8010502:	881b      	ldrh	r3, [r3, #0]
 8010504:	e7eb      	b.n	80104de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010506:	680b      	ldr	r3, [r1, #0]
 8010508:	2b00      	cmp	r3, #0
 801050a:	d0e8      	beq.n	80104de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801050c:	781b      	ldrb	r3, [r3, #0]
 801050e:	e7e6      	b.n	80104de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010510:	2a06      	cmp	r2, #6
 8010512:	bfa8      	it	ge
 8010514:	2206      	movge	r2, #6
 8010516:	602a      	str	r2, [r5, #0]
 8010518:	e7b1      	b.n	801047e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801051a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801051a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801051e:	b0a3      	sub	sp, #140	; 0x8c
 8010520:	2600      	movs	r6, #0
 8010522:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8010526:	4607      	mov	r7, r0
 8010528:	4688      	mov	r8, r1
 801052a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801052e:	4631      	mov	r1, r6
 8010530:	2242      	movs	r2, #66	; 0x42
 8010532:	4648      	mov	r0, r9
 8010534:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8010536:	960d      	str	r6, [sp, #52]	; 0x34
 8010538:	f7fe fc7b 	bl	800ee32 <_ZN8touchgfx6memsetEPvhm>
 801053c:	b15f      	cbz	r7, 8010556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801053e:	f108 3aff 	add.w	sl, r8, #4294967295
 8010542:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010544:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010546:	b152      	cbz	r2, 801055e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8010548:	8812      	ldrh	r2, [r2, #0]
 801054a:	b10a      	cbz	r2, 8010550 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801054c:	459a      	cmp	sl, r3
 801054e:	dc2e      	bgt.n	80105ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8010550:	2200      	movs	r2, #0
 8010552:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010556:	4638      	mov	r0, r7
 8010558:	b023      	add	sp, #140	; 0x8c
 801055a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801055e:	9a08      	ldr	r2, [sp, #32]
 8010560:	2a00      	cmp	r2, #0
 8010562:	d0f5      	beq.n	8010550 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010564:	7812      	ldrb	r2, [r2, #0]
 8010566:	e7f0      	b.n	801054a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8010568:	2d00      	cmp	r5, #0
 801056a:	d0ea      	beq.n	8010542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801056c:	782a      	ldrb	r2, [r5, #0]
 801056e:	b142      	cbz	r2, 8010582 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8010570:	2a25      	cmp	r2, #37	; 0x25
 8010572:	d001      	beq.n	8010578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8010574:	459a      	cmp	sl, r3
 8010576:	dc08      	bgt.n	801058a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8010578:	f1bb 0f00 	cmp.w	fp, #0
 801057c:	d121      	bne.n	80105c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801057e:	2d00      	cmp	r5, #0
 8010580:	d0df      	beq.n	8010542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010582:	782a      	ldrb	r2, [r5, #0]
 8010584:	f04f 0b00 	mov.w	fp, #0
 8010588:	e01d      	b.n	80105c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801058a:	f1bb 0f00 	cmp.w	fp, #0
 801058e:	d078      	beq.n	8010682 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8010590:	f8bb 2000 	ldrh.w	r2, [fp]
 8010594:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010598:	f1bb 0f00 	cmp.w	fp, #0
 801059c:	d002      	beq.n	80105a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801059e:	f10b 0202 	add.w	r2, fp, #2
 80105a2:	9209      	str	r2, [sp, #36]	; 0x24
 80105a4:	b10d      	cbz	r5, 80105aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80105a6:	3501      	adds	r5, #1
 80105a8:	9508      	str	r5, [sp, #32]
 80105aa:	3301      	adds	r3, #1
 80105ac:	930d      	str	r3, [sp, #52]	; 0x34
 80105ae:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80105b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80105b4:	f1bb 0f00 	cmp.w	fp, #0
 80105b8:	d0d6      	beq.n	8010568 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80105ba:	f8bb 2000 	ldrh.w	r2, [fp]
 80105be:	2a00      	cmp	r2, #0
 80105c0:	d1d6      	bne.n	8010570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80105c2:	f8bb 2000 	ldrh.w	r2, [fp]
 80105c6:	2a00      	cmp	r2, #0
 80105c8:	d0bb      	beq.n	8010542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80105ca:	459a      	cmp	sl, r3
 80105cc:	ddb9      	ble.n	8010542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80105ce:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80105d2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80105d6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80105da:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80105de:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80105e2:	960e      	str	r6, [sp, #56]	; 0x38
 80105e4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80105e8:	960f      	str	r6, [sp, #60]	; 0x3c
 80105ea:	f1bb 0f00 	cmp.w	fp, #0
 80105ee:	d002      	beq.n	80105f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80105f0:	f10b 0302 	add.w	r3, fp, #2
 80105f4:	9309      	str	r3, [sp, #36]	; 0x24
 80105f6:	b10d      	cbz	r5, 80105fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80105f8:	1c6b      	adds	r3, r5, #1
 80105fa:	9308      	str	r3, [sp, #32]
 80105fc:	ab0f      	add	r3, sp, #60	; 0x3c
 80105fe:	9305      	str	r3, [sp, #20]
 8010600:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8010604:	9304      	str	r3, [sp, #16]
 8010606:	ab0e      	add	r3, sp, #56	; 0x38
 8010608:	9303      	str	r3, [sp, #12]
 801060a:	ab0c      	add	r3, sp, #48	; 0x30
 801060c:	9302      	str	r3, [sp, #8]
 801060e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8010612:	9301      	str	r3, [sp, #4]
 8010614:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8010618:	9300      	str	r3, [sp, #0]
 801061a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801061e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8010622:	a908      	add	r1, sp, #32
 8010624:	a809      	add	r0, sp, #36	; 0x24
 8010626:	f7ff fea8 	bl	801037a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801062a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801062c:	2b00      	cmp	r3, #0
 801062e:	bfbe      	ittt	lt
 8010630:	6823      	ldrlt	r3, [r4, #0]
 8010632:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010636:	930e      	strlt	r3, [sp, #56]	; 0x38
 8010638:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801063a:	bfb8      	it	lt
 801063c:	3404      	addlt	r4, #4
 801063e:	2b00      	cmp	r3, #0
 8010640:	bfb8      	it	lt
 8010642:	6823      	ldrlt	r3, [r4, #0]
 8010644:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8010648:	bfbe      	ittt	lt
 801064a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801064e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8010650:	3404      	addlt	r4, #4
 8010652:	b1d9      	cbz	r1, 801068c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8010654:	880b      	ldrh	r3, [r1, #0]
 8010656:	2b69      	cmp	r3, #105	; 0x69
 8010658:	d01f      	beq.n	801069a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801065a:	d82f      	bhi.n	80106bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801065c:	2b58      	cmp	r3, #88	; 0x58
 801065e:	d01c      	beq.n	801069a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8010660:	d818      	bhi.n	8010694 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8010662:	2b25      	cmp	r3, #37	; 0x25
 8010664:	d034      	beq.n	80106d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8010666:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801066a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801066c:	f1bb 0f00 	cmp.w	fp, #0
 8010670:	f000 80b8 	beq.w	80107e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8010674:	f8bb 5000 	ldrh.w	r5, [fp]
 8010678:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801067c:	3301      	adds	r3, #1
 801067e:	930d      	str	r3, [sp, #52]	; 0x34
 8010680:	e029      	b.n	80106d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8010682:	b10d      	cbz	r5, 8010688 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8010684:	782a      	ldrb	r2, [r5, #0]
 8010686:	e785      	b.n	8010594 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010688:	462a      	mov	r2, r5
 801068a:	e783      	b.n	8010594 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801068c:	2a00      	cmp	r2, #0
 801068e:	d0ea      	beq.n	8010666 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8010690:	7813      	ldrb	r3, [r2, #0]
 8010692:	e7e0      	b.n	8010656 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8010694:	3b63      	subs	r3, #99	; 0x63
 8010696:	2b01      	cmp	r3, #1
 8010698:	d8e5      	bhi.n	8010666 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801069a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801069e:	b329      	cbz	r1, 80106ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80106a0:	880b      	ldrh	r3, [r1, #0]
 80106a2:	2b69      	cmp	r3, #105	; 0x69
 80106a4:	d063      	beq.n	801076e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80106a6:	d825      	bhi.n	80106f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80106a8:	2b63      	cmp	r3, #99	; 0x63
 80106aa:	d038      	beq.n	801071e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80106ac:	2b64      	cmp	r3, #100	; 0x64
 80106ae:	d05e      	beq.n	801076e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80106b0:	2b58      	cmp	r3, #88	; 0x58
 80106b2:	d07b      	beq.n	80107ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80106b4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80106b8:	4625      	mov	r5, r4
 80106ba:	e036      	b.n	801072a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80106bc:	2b73      	cmp	r3, #115	; 0x73
 80106be:	d0ec      	beq.n	801069a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80106c0:	d802      	bhi.n	80106c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80106c2:	2b6f      	cmp	r3, #111	; 0x6f
 80106c4:	d1cf      	bne.n	8010666 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80106c6:	e7e8      	b.n	801069a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80106c8:	2b75      	cmp	r3, #117	; 0x75
 80106ca:	d0e6      	beq.n	801069a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80106cc:	2b78      	cmp	r3, #120	; 0x78
 80106ce:	e7f9      	b.n	80106c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80106d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80106d2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80106d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80106d8:	b10b      	cbz	r3, 80106de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80106da:	3302      	adds	r3, #2
 80106dc:	9309      	str	r3, [sp, #36]	; 0x24
 80106de:	9b08      	ldr	r3, [sp, #32]
 80106e0:	2b00      	cmp	r3, #0
 80106e2:	f43f af2e 	beq.w	8010542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80106e6:	3301      	adds	r3, #1
 80106e8:	9308      	str	r3, [sp, #32]
 80106ea:	e72a      	b.n	8010542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80106ec:	2a00      	cmp	r2, #0
 80106ee:	d0e1      	beq.n	80106b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80106f0:	7813      	ldrb	r3, [r2, #0]
 80106f2:	e7d6      	b.n	80106a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80106f4:	2b73      	cmp	r3, #115	; 0x73
 80106f6:	d036      	beq.n	8010766 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80106f8:	d807      	bhi.n	801070a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80106fa:	2b6f      	cmp	r3, #111	; 0x6f
 80106fc:	d1da      	bne.n	80106b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80106fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010700:	1d25      	adds	r5, r4, #4
 8010702:	eba8 0202 	sub.w	r2, r8, r2
 8010706:	2308      	movs	r3, #8
 8010708:	e04a      	b.n	80107a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801070a:	2b75      	cmp	r3, #117	; 0x75
 801070c:	d043      	beq.n	8010796 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801070e:	2b78      	cmp	r3, #120	; 0x78
 8010710:	d1d0      	bne.n	80106b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8010712:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010714:	1d25      	adds	r5, r4, #4
 8010716:	eba8 0202 	sub.w	r2, r8, r2
 801071a:	2310      	movs	r3, #16
 801071c:	e040      	b.n	80107a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801071e:	7823      	ldrb	r3, [r4, #0]
 8010720:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8010724:	1d25      	adds	r5, r4, #4
 8010726:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801072a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801072c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8010730:	2b00      	cmp	r3, #0
 8010732:	d052      	beq.n	80107da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8010734:	881a      	ldrh	r2, [r3, #0]
 8010736:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801073a:	a80d      	add	r0, sp, #52	; 0x34
 801073c:	9005      	str	r0, [sp, #20]
 801073e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8010742:	9004      	str	r0, [sp, #16]
 8010744:	980e      	ldr	r0, [sp, #56]	; 0x38
 8010746:	9003      	str	r0, [sp, #12]
 8010748:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801074c:	9002      	str	r0, [sp, #8]
 801074e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010750:	9001      	str	r0, [sp, #4]
 8010752:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8010756:	9000      	str	r0, [sp, #0]
 8010758:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801075c:	a810      	add	r0, sp, #64	; 0x40
 801075e:	f7ff fd49 	bl	80101f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8010762:	462c      	mov	r4, r5
 8010764:	e7b7      	b.n	80106d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8010766:	6823      	ldr	r3, [r4, #0]
 8010768:	1d25      	adds	r5, r4, #4
 801076a:	9310      	str	r3, [sp, #64]	; 0x40
 801076c:	e7dd      	b.n	801072a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801076e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010770:	6820      	ldr	r0, [r4, #0]
 8010772:	eba8 0202 	sub.w	r2, r8, r2
 8010776:	230a      	movs	r3, #10
 8010778:	b292      	uxth	r2, r2
 801077a:	4649      	mov	r1, r9
 801077c:	f7ff fd08 	bl	8010190 <_ZN8touchgfx7Unicode4itoaElPtti>
 8010780:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010784:	2b2d      	cmp	r3, #45	; 0x2d
 8010786:	f104 0504 	add.w	r5, r4, #4
 801078a:	d1ce      	bne.n	801072a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801078c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010790:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010792:	3302      	adds	r3, #2
 8010794:	e7e9      	b.n	801076a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8010796:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010798:	1d25      	adds	r5, r4, #4
 801079a:	eba8 0202 	sub.w	r2, r8, r2
 801079e:	230a      	movs	r3, #10
 80107a0:	b292      	uxth	r2, r2
 80107a2:	4649      	mov	r1, r9
 80107a4:	6820      	ldr	r0, [r4, #0]
 80107a6:	f7ff fcd5 	bl	8010154 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80107aa:	e7be      	b.n	801072a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80107ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80107ae:	6820      	ldr	r0, [r4, #0]
 80107b0:	eba8 0202 	sub.w	r2, r8, r2
 80107b4:	b292      	uxth	r2, r2
 80107b6:	2310      	movs	r3, #16
 80107b8:	4649      	mov	r1, r9
 80107ba:	f7ff fccb 	bl	8010154 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80107be:	1d25      	adds	r5, r4, #4
 80107c0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80107c4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80107c8:	2b00      	cmp	r3, #0
 80107ca:	d0ae      	beq.n	801072a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80107cc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80107d0:	2919      	cmp	r1, #25
 80107d2:	d8f7      	bhi.n	80107c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80107d4:	3b20      	subs	r3, #32
 80107d6:	8013      	strh	r3, [r2, #0]
 80107d8:	e7f4      	b.n	80107c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80107da:	9a08      	ldr	r2, [sp, #32]
 80107dc:	2a00      	cmp	r2, #0
 80107de:	d0aa      	beq.n	8010736 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80107e0:	7812      	ldrb	r2, [r2, #0]
 80107e2:	e7a8      	b.n	8010736 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80107e4:	2d00      	cmp	r5, #0
 80107e6:	f43f af47 	beq.w	8010678 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80107ea:	782d      	ldrb	r5, [r5, #0]
 80107ec:	e744      	b.n	8010678 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080107ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80107ee:	b507      	push	{r0, r1, r2, lr}
 80107f0:	9300      	str	r3, [sp, #0]
 80107f2:	4613      	mov	r3, r2
 80107f4:	2200      	movs	r2, #0
 80107f6:	f7ff fe90 	bl	801051a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80107fa:	b003      	add	sp, #12
 80107fc:	f85d fb04 	ldr.w	pc, [sp], #4

08010800 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8010800:	b40c      	push	{r2, r3}
 8010802:	b507      	push	{r0, r1, r2, lr}
 8010804:	ab04      	add	r3, sp, #16
 8010806:	f853 2b04 	ldr.w	r2, [r3], #4
 801080a:	9301      	str	r3, [sp, #4]
 801080c:	f7ff ffef 	bl	80107ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8010810:	b003      	add	sp, #12
 8010812:	f85d eb04 	ldr.w	lr, [sp], #4
 8010816:	b002      	add	sp, #8
 8010818:	4770      	bx	lr
	...

0801081c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801081c:	4b01      	ldr	r3, [pc, #4]	; (8010824 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801081e:	6018      	str	r0, [r3, #0]
 8010820:	4770      	bx	lr
 8010822:	bf00      	nop
 8010824:	20012538 	.word	0x20012538

08010828 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010828:	4b07      	ldr	r3, [pc, #28]	; (8010848 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 801082a:	881a      	ldrh	r2, [r3, #0]
 801082c:	4282      	cmp	r2, r0
 801082e:	d809      	bhi.n	8010844 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 8010830:	4b06      	ldr	r3, [pc, #24]	; (801084c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 8010832:	881b      	ldrh	r3, [r3, #0]
 8010834:	4413      	add	r3, r2
 8010836:	4298      	cmp	r0, r3
 8010838:	da04      	bge.n	8010844 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 801083a:	4b05      	ldr	r3, [pc, #20]	; (8010850 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 801083c:	681b      	ldr	r3, [r3, #0]
 801083e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8010842:	4770      	bx	lr
 8010844:	2000      	movs	r0, #0
 8010846:	4770      	bx	lr
 8010848:	20012558 	.word	0x20012558
 801084c:	2001255c 	.word	0x2001255c
 8010850:	2001253c 	.word	0x2001253c

08010854 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010858:	4d28      	ldr	r5, [pc, #160]	; (80108fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801085a:	682b      	ldr	r3, [r5, #0]
 801085c:	2b00      	cmp	r3, #0
 801085e:	d04a      	beq.n	80108f6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8010860:	4a27      	ldr	r2, [pc, #156]	; (8010900 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8010862:	4e28      	ldr	r6, [pc, #160]	; (8010904 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010864:	8810      	ldrh	r0, [r2, #0]
 8010866:	f8b6 8000 	ldrh.w	r8, [r6]
 801086a:	4c27      	ldr	r4, [pc, #156]	; (8010908 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801086c:	4f27      	ldr	r7, [pc, #156]	; (801090c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801086e:	4440      	add	r0, r8
 8010870:	1c41      	adds	r1, r0, #1
 8010872:	f021 0101 	bic.w	r1, r1, #1
 8010876:	0409      	lsls	r1, r1, #16
 8010878:	0c09      	lsrs	r1, r1, #16
 801087a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 801087e:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8010882:	eb03 020e 	add.w	r2, r3, lr
 8010886:	eb0e 010c 	add.w	r1, lr, ip
 801088a:	6022      	str	r2, [r4, #0]
 801088c:	185a      	adds	r2, r3, r1
 801088e:	603a      	str	r2, [r7, #0]
 8010890:	220e      	movs	r2, #14
 8010892:	fb02 f208 	mul.w	r2, r2, r8
 8010896:	3203      	adds	r2, #3
 8010898:	f022 0203 	bic.w	r2, r2, #3
 801089c:	4411      	add	r1, r2
 801089e:	440b      	add	r3, r1
 80108a0:	491b      	ldr	r1, [pc, #108]	; (8010910 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 80108a2:	600b      	str	r3, [r1, #0]
 80108a4:	491b      	ldr	r1, [pc, #108]	; (8010914 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 80108a6:	2300      	movs	r3, #0
 80108a8:	800b      	strh	r3, [r1, #0]
 80108aa:	491b      	ldr	r1, [pc, #108]	; (8010918 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 80108ac:	6809      	ldr	r1, [r1, #0]
 80108ae:	eba1 010e 	sub.w	r1, r1, lr
 80108b2:	eba1 010c 	sub.w	r1, r1, ip
 80108b6:	1a8a      	subs	r2, r1, r2
 80108b8:	4918      	ldr	r1, [pc, #96]	; (801091c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 80108ba:	600a      	str	r2, [r1, #0]
 80108bc:	4a18      	ldr	r2, [pc, #96]	; (8010920 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 80108be:	469c      	mov	ip, r3
 80108c0:	8013      	strh	r3, [r2, #0]
 80108c2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80108c6:	4283      	cmp	r3, r0
 80108c8:	d10d      	bne.n	80108e6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 80108ca:	8835      	ldrh	r5, [r6, #0]
 80108cc:	6838      	ldr	r0, [r7, #0]
 80108ce:	2300      	movs	r3, #0
 80108d0:	240e      	movs	r4, #14
 80108d2:	429d      	cmp	r5, r3
 80108d4:	d90f      	bls.n	80108f6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 80108d6:	fb04 0203 	mla	r2, r4, r3, r0
 80108da:	3301      	adds	r3, #1
 80108dc:	7b11      	ldrb	r1, [r2, #12]
 80108de:	f36f 1145 	bfc	r1, #5, #1
 80108e2:	7311      	strb	r1, [r2, #12]
 80108e4:	e7f5      	b.n	80108d2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 80108e6:	682a      	ldr	r2, [r5, #0]
 80108e8:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80108ec:	6822      	ldr	r2, [r4, #0]
 80108ee:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80108f2:	3301      	adds	r3, #1
 80108f4:	e7e7      	b.n	80108c6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 80108f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80108fa:	bf00      	nop
 80108fc:	2001253c 	.word	0x2001253c
 8010900:	20012558 	.word	0x20012558
 8010904:	2001255c 	.word	0x2001255c
 8010908:	20012550 	.word	0x20012550
 801090c:	20012540 	.word	0x20012540
 8010910:	20012548 	.word	0x20012548
 8010914:	2001255a 	.word	0x2001255a
 8010918:	20012544 	.word	0x20012544
 801091c:	20012554 	.word	0x20012554
 8010920:	2001254c 	.word	0x2001254c

08010924 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8010924:	b510      	push	{r4, lr}
 8010926:	4b10      	ldr	r3, [pc, #64]	; (8010968 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8010928:	681b      	ldr	r3, [r3, #0]
 801092a:	b9db      	cbnz	r3, 8010964 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801092c:	b1d1      	cbz	r1, 8010964 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801092e:	4b0f      	ldr	r3, [pc, #60]	; (801096c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8010930:	801a      	strh	r2, [r3, #0]
 8010932:	4b0f      	ldr	r3, [pc, #60]	; (8010970 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8010934:	881b      	ldrh	r3, [r3, #0]
 8010936:	b292      	uxth	r2, r2
 8010938:	240e      	movs	r4, #14
 801093a:	4413      	add	r3, r2
 801093c:	4362      	muls	r2, r4
 801093e:	2406      	movs	r4, #6
 8010940:	fb04 2203 	mla	r2, r4, r3, r2
 8010944:	428a      	cmp	r2, r1
 8010946:	d305      	bcc.n	8010954 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8010948:	4b0a      	ldr	r3, [pc, #40]	; (8010974 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 801094a:	4a0b      	ldr	r2, [pc, #44]	; (8010978 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 801094c:	480b      	ldr	r0, [pc, #44]	; (801097c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 801094e:	2137      	movs	r1, #55	; 0x37
 8010950:	f00b fd14 	bl	801c37c <__assert_func>
 8010954:	4b0a      	ldr	r3, [pc, #40]	; (8010980 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8010956:	6019      	str	r1, [r3, #0]
 8010958:	4b0a      	ldr	r3, [pc, #40]	; (8010984 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 801095a:	6018      	str	r0, [r3, #0]
 801095c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010960:	f7ff bf78 	b.w	8010854 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8010964:	bd10      	pop	{r4, pc}
 8010966:	bf00      	nop
 8010968:	20012548 	.word	0x20012548
 801096c:	2001255c 	.word	0x2001255c
 8010970:	20012558 	.word	0x20012558
 8010974:	08020916 	.word	0x08020916
 8010978:	0802096f 	.word	0x0802096f
 801097c:	080208f1 	.word	0x080208f1
 8010980:	20012544 	.word	0x20012544
 8010984:	2001253c 	.word	0x2001253c

08010988 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8010988:	b470      	push	{r4, r5, r6}
 801098a:	4c07      	ldr	r4, [pc, #28]	; (80109a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801098c:	6826      	ldr	r6, [r4, #0]
 801098e:	4605      	mov	r5, r0
 8010990:	4610      	mov	r0, r2
 8010992:	9a03      	ldr	r2, [sp, #12]
 8010994:	b936      	cbnz	r6, 80109a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8010996:	6025      	str	r5, [r4, #0]
 8010998:	4c04      	ldr	r4, [pc, #16]	; (80109ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801099a:	8021      	strh	r1, [r4, #0]
 801099c:	bc70      	pop	{r4, r5, r6}
 801099e:	4619      	mov	r1, r3
 80109a0:	f7ff bfc0 	b.w	8010924 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80109a4:	bc70      	pop	{r4, r5, r6}
 80109a6:	4770      	bx	lr
 80109a8:	20012560 	.word	0x20012560
 80109ac:	20012558 	.word	0x20012558

080109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80109b0:	b508      	push	{r3, lr}
 80109b2:	4b14      	ldr	r3, [pc, #80]	; (8010a04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80109b4:	6819      	ldr	r1, [r3, #0]
 80109b6:	b931      	cbnz	r1, 80109c6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 80109b8:	4b13      	ldr	r3, [pc, #76]	; (8010a08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80109ba:	4a14      	ldr	r2, [pc, #80]	; (8010a0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80109bc:	4814      	ldr	r0, [pc, #80]	; (8010a10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80109be:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 80109c2:	f00b fcdb 	bl	801c37c <__assert_func>
 80109c6:	4a13      	ldr	r2, [pc, #76]	; (8010a14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80109c8:	8803      	ldrh	r3, [r0, #0]
 80109ca:	8812      	ldrh	r2, [r2, #0]
 80109cc:	4293      	cmp	r3, r2
 80109ce:	d204      	bcs.n	80109da <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 80109d0:	2214      	movs	r2, #20
 80109d2:	fb02 1303 	mla	r3, r2, r3, r1
 80109d6:	8918      	ldrh	r0, [r3, #8]
 80109d8:	bd08      	pop	{r3, pc}
 80109da:	490f      	ldr	r1, [pc, #60]	; (8010a18 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 80109dc:	8809      	ldrh	r1, [r1, #0]
 80109de:	4411      	add	r1, r2
 80109e0:	428b      	cmp	r3, r1
 80109e2:	da06      	bge.n	80109f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 80109e4:	1a9b      	subs	r3, r3, r2
 80109e6:	4a0d      	ldr	r2, [pc, #52]	; (8010a1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 80109e8:	6812      	ldr	r2, [r2, #0]
 80109ea:	210e      	movs	r1, #14
 80109ec:	fb01 2303 	mla	r3, r1, r3, r2
 80109f0:	e7f1      	b.n	80109d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 80109f2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80109f6:	4293      	cmp	r3, r2
 80109f8:	bf0a      	itet	eq
 80109fa:	4b09      	ldreq	r3, [pc, #36]	; (8010a20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 80109fc:	2000      	movne	r0, #0
 80109fe:	8818      	ldrheq	r0, [r3, #0]
 8010a00:	e7ea      	b.n	80109d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8010a02:	bf00      	nop
 8010a04:	20012560 	.word	0x20012560
 8010a08:	0801fdc4 	.word	0x0801fdc4
 8010a0c:	08020a1c 	.word	0x08020a1c
 8010a10:	080208f1 	.word	0x080208f1
 8010a14:	20012558 	.word	0x20012558
 8010a18:	2001255c 	.word	0x2001255c
 8010a1c:	20012540 	.word	0x20012540
 8010a20:	200124ac 	.word	0x200124ac

08010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010a24:	b508      	push	{r3, lr}
 8010a26:	4b14      	ldr	r3, [pc, #80]	; (8010a78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8010a28:	6819      	ldr	r1, [r3, #0]
 8010a2a:	b931      	cbnz	r1, 8010a3a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8010a2c:	4b13      	ldr	r3, [pc, #76]	; (8010a7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010a2e:	4a14      	ldr	r2, [pc, #80]	; (8010a80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010a30:	4814      	ldr	r0, [pc, #80]	; (8010a84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8010a32:	f44f 7143 	mov.w	r1, #780	; 0x30c
 8010a36:	f00b fca1 	bl	801c37c <__assert_func>
 8010a3a:	4a13      	ldr	r2, [pc, #76]	; (8010a88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010a3c:	8803      	ldrh	r3, [r0, #0]
 8010a3e:	8812      	ldrh	r2, [r2, #0]
 8010a40:	4293      	cmp	r3, r2
 8010a42:	d204      	bcs.n	8010a4e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8010a44:	2214      	movs	r2, #20
 8010a46:	fb02 1303 	mla	r3, r2, r3, r1
 8010a4a:	8958      	ldrh	r0, [r3, #10]
 8010a4c:	bd08      	pop	{r3, pc}
 8010a4e:	490f      	ldr	r1, [pc, #60]	; (8010a8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8010a50:	8809      	ldrh	r1, [r1, #0]
 8010a52:	4411      	add	r1, r2
 8010a54:	428b      	cmp	r3, r1
 8010a56:	da06      	bge.n	8010a66 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8010a58:	1a9b      	subs	r3, r3, r2
 8010a5a:	4a0d      	ldr	r2, [pc, #52]	; (8010a90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8010a5c:	6812      	ldr	r2, [r2, #0]
 8010a5e:	210e      	movs	r1, #14
 8010a60:	fb01 2303 	mla	r3, r1, r3, r2
 8010a64:	e7f1      	b.n	8010a4a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8010a66:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010a6a:	4293      	cmp	r3, r2
 8010a6c:	bf0a      	itet	eq
 8010a6e:	4b09      	ldreq	r3, [pc, #36]	; (8010a94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8010a70:	2000      	movne	r0, #0
 8010a72:	8818      	ldrheq	r0, [r3, #0]
 8010a74:	e7ea      	b.n	8010a4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8010a76:	bf00      	nop
 8010a78:	20012560 	.word	0x20012560
 8010a7c:	0801fdc4 	.word	0x0801fdc4
 8010a80:	08020a48 	.word	0x08020a48
 8010a84:	080208f1 	.word	0x080208f1
 8010a88:	20012558 	.word	0x20012558
 8010a8c:	2001255c 	.word	0x2001255c
 8010a90:	20012540 	.word	0x20012540
 8010a94:	200124ae 	.word	0x200124ae

08010a98 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010a98:	b510      	push	{r4, lr}
 8010a9a:	4b23      	ldr	r3, [pc, #140]	; (8010b28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010a9c:	681c      	ldr	r4, [r3, #0]
 8010a9e:	b934      	cbnz	r4, 8010aae <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8010aa0:	4b22      	ldr	r3, [pc, #136]	; (8010b2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8010aa2:	4a23      	ldr	r2, [pc, #140]	; (8010b30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8010aa4:	4823      	ldr	r0, [pc, #140]	; (8010b34 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8010aa6:	f44f 7148 	mov.w	r1, #800	; 0x320
 8010aaa:	f00b fc67 	bl	801c37c <__assert_func>
 8010aae:	4a22      	ldr	r2, [pc, #136]	; (8010b38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8010ab0:	880b      	ldrh	r3, [r1, #0]
 8010ab2:	8812      	ldrh	r2, [r2, #0]
 8010ab4:	4293      	cmp	r3, r2
 8010ab6:	d211      	bcs.n	8010adc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8010ab8:	2214      	movs	r2, #20
 8010aba:	fb02 4303 	mla	r3, r2, r3, r4
 8010abe:	8a1a      	ldrh	r2, [r3, #16]
 8010ac0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010ac4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010ac8:	8a5b      	ldrh	r3, [r3, #18]
 8010aca:	8004      	strh	r4, [r0, #0]
 8010acc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010ad0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8010ad4:	8041      	strh	r1, [r0, #2]
 8010ad6:	8082      	strh	r2, [r0, #4]
 8010ad8:	80c3      	strh	r3, [r0, #6]
 8010ada:	e00e      	b.n	8010afa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010adc:	4917      	ldr	r1, [pc, #92]	; (8010b3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8010ade:	8809      	ldrh	r1, [r1, #0]
 8010ae0:	4411      	add	r1, r2
 8010ae2:	428b      	cmp	r3, r1
 8010ae4:	da0a      	bge.n	8010afc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8010ae6:	1a9b      	subs	r3, r3, r2
 8010ae8:	4a15      	ldr	r2, [pc, #84]	; (8010b40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 8010aea:	6812      	ldr	r2, [r2, #0]
 8010aec:	210e      	movs	r1, #14
 8010aee:	fb01 2303 	mla	r3, r1, r3, r2
 8010af2:	681a      	ldr	r2, [r3, #0]
 8010af4:	6002      	str	r2, [r0, #0]
 8010af6:	685a      	ldr	r2, [r3, #4]
 8010af8:	6042      	str	r2, [r0, #4]
 8010afa:	bd10      	pop	{r4, pc}
 8010afc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010b00:	4293      	cmp	r3, r2
 8010b02:	d10b      	bne.n	8010b1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8010b04:	4b0f      	ldr	r3, [pc, #60]	; (8010b44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8010b06:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010b0a:	4b0f      	ldr	r3, [pc, #60]	; (8010b48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8010b0c:	8081      	strh	r1, [r0, #4]
 8010b0e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010b12:	80c2      	strh	r2, [r0, #6]
 8010b14:	2300      	movs	r3, #0
 8010b16:	8003      	strh	r3, [r0, #0]
 8010b18:	8043      	strh	r3, [r0, #2]
 8010b1a:	e7ee      	b.n	8010afa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010b1c:	2300      	movs	r3, #0
 8010b1e:	8003      	strh	r3, [r0, #0]
 8010b20:	8043      	strh	r3, [r0, #2]
 8010b22:	8083      	strh	r3, [r0, #4]
 8010b24:	e7d8      	b.n	8010ad8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8010b26:	bf00      	nop
 8010b28:	20012560 	.word	0x20012560
 8010b2c:	0801fdc4 	.word	0x0801fdc4
 8010b30:	080209b5 	.word	0x080209b5
 8010b34:	080208f1 	.word	0x080208f1
 8010b38:	20012558 	.word	0x20012558
 8010b3c:	2001255c 	.word	0x2001255c
 8010b40:	20012540 	.word	0x20012540
 8010b44:	200124ac 	.word	0x200124ac
 8010b48:	200124ae 	.word	0x200124ae

08010b4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8010b4c:	4b18      	ldr	r3, [pc, #96]	; (8010bb0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8010b4e:	681b      	ldr	r3, [r3, #0]
 8010b50:	b34b      	cbz	r3, 8010ba6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8010b52:	4a18      	ldr	r2, [pc, #96]	; (8010bb4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8010b54:	8800      	ldrh	r0, [r0, #0]
 8010b56:	8812      	ldrh	r2, [r2, #0]
 8010b58:	4290      	cmp	r0, r2
 8010b5a:	d211      	bcs.n	8010b80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8010b5c:	2214      	movs	r2, #20
 8010b5e:	fb02 3300 	mla	r3, r2, r0, r3
 8010b62:	8a1a      	ldrh	r2, [r3, #16]
 8010b64:	8919      	ldrh	r1, [r3, #8]
 8010b66:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010b6a:	428a      	cmp	r2, r1
 8010b6c:	db1d      	blt.n	8010baa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8010b6e:	8a58      	ldrh	r0, [r3, #18]
 8010b70:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010b74:	895b      	ldrh	r3, [r3, #10]
 8010b76:	4298      	cmp	r0, r3
 8010b78:	bfac      	ite	ge
 8010b7a:	2000      	movge	r0, #0
 8010b7c:	2001      	movlt	r0, #1
 8010b7e:	4770      	bx	lr
 8010b80:	4b0d      	ldr	r3, [pc, #52]	; (8010bb8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8010b82:	881b      	ldrh	r3, [r3, #0]
 8010b84:	4413      	add	r3, r2
 8010b86:	4298      	cmp	r0, r3
 8010b88:	da0d      	bge.n	8010ba6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8010b8a:	4b0c      	ldr	r3, [pc, #48]	; (8010bbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8010b8c:	681b      	ldr	r3, [r3, #0]
 8010b8e:	1a80      	subs	r0, r0, r2
 8010b90:	220e      	movs	r2, #14
 8010b92:	fb02 3300 	mla	r3, r2, r0, r3
 8010b96:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8010b9a:	891a      	ldrh	r2, [r3, #8]
 8010b9c:	4291      	cmp	r1, r2
 8010b9e:	db04      	blt.n	8010baa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8010ba0:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8010ba4:	e7e6      	b.n	8010b74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8010ba6:	2000      	movs	r0, #0
 8010ba8:	4770      	bx	lr
 8010baa:	2001      	movs	r0, #1
 8010bac:	4770      	bx	lr
 8010bae:	bf00      	nop
 8010bb0:	20012560 	.word	0x20012560
 8010bb4:	20012558 	.word	0x20012558
 8010bb8:	2001255c 	.word	0x2001255c
 8010bbc:	20012540 	.word	0x20012540

08010bc0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8010bc0:	b508      	push	{r3, lr}
 8010bc2:	4b12      	ldr	r3, [pc, #72]	; (8010c0c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8010bc4:	6819      	ldr	r1, [r3, #0]
 8010bc6:	b931      	cbnz	r1, 8010bd6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010bc8:	4b11      	ldr	r3, [pc, #68]	; (8010c10 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010bca:	4a12      	ldr	r2, [pc, #72]	; (8010c14 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010bcc:	4812      	ldr	r0, [pc, #72]	; (8010c18 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8010bce:	f44f 7151 	mov.w	r1, #836	; 0x344
 8010bd2:	f00b fbd3 	bl	801c37c <__assert_func>
 8010bd6:	8803      	ldrh	r3, [r0, #0]
 8010bd8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010bdc:	4293      	cmp	r3, r2
 8010bde:	d012      	beq.n	8010c06 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8010be0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010be4:	4293      	cmp	r3, r2
 8010be6:	d103      	bne.n	8010bf0 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8010be8:	4b0c      	ldr	r3, [pc, #48]	; (8010c1c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8010bea:	681b      	ldr	r3, [r3, #0]
 8010bec:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8010bee:	bd08      	pop	{r3, pc}
 8010bf0:	4a0b      	ldr	r2, [pc, #44]	; (8010c20 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8010bf2:	6812      	ldr	r2, [r2, #0]
 8010bf4:	b11a      	cbz	r2, 8010bfe <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8010bf6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010bfa:	2800      	cmp	r0, #0
 8010bfc:	d1f7      	bne.n	8010bee <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010bfe:	2214      	movs	r2, #20
 8010c00:	4353      	muls	r3, r2
 8010c02:	58c8      	ldr	r0, [r1, r3]
 8010c04:	e7f3      	b.n	8010bee <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010c06:	2000      	movs	r0, #0
 8010c08:	e7f1      	b.n	8010bee <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010c0a:	bf00      	nop
 8010c0c:	20012560 	.word	0x20012560
 8010c10:	0801fdc4 	.word	0x0801fdc4
 8010c14:	080209eb 	.word	0x080209eb
 8010c18:	080208f1 	.word	0x080208f1
 8010c1c:	200124b8 	.word	0x200124b8
 8010c20:	2001253c 	.word	0x2001253c

08010c24 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010c24:	8802      	ldrh	r2, [r0, #0]
 8010c26:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8010c2a:	429a      	cmp	r2, r3
 8010c2c:	d840      	bhi.n	8010cb0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 8010c2e:	4b21      	ldr	r3, [pc, #132]	; (8010cb4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 8010c30:	881b      	ldrh	r3, [r3, #0]
 8010c32:	429a      	cmp	r2, r3
 8010c34:	d220      	bcs.n	8010c78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 8010c36:	4b20      	ldr	r3, [pc, #128]	; (8010cb8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8010c38:	6819      	ldr	r1, [r3, #0]
 8010c3a:	2314      	movs	r3, #20
 8010c3c:	fb03 1302 	mla	r3, r3, r2, r1
 8010c40:	6858      	ldr	r0, [r3, #4]
 8010c42:	2800      	cmp	r0, #0
 8010c44:	d035      	beq.n	8010cb2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010c46:	491d      	ldr	r1, [pc, #116]	; (8010cbc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8010c48:	6809      	ldr	r1, [r1, #0]
 8010c4a:	2900      	cmp	r1, #0
 8010c4c:	d031      	beq.n	8010cb2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010c4e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8010c52:	b371      	cbz	r1, 8010cb2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010c54:	895a      	ldrh	r2, [r3, #10]
 8010c56:	8918      	ldrh	r0, [r3, #8]
 8010c58:	4350      	muls	r0, r2
 8010c5a:	7c5a      	ldrb	r2, [r3, #17]
 8010c5c:	7cdb      	ldrb	r3, [r3, #19]
 8010c5e:	0952      	lsrs	r2, r2, #5
 8010c60:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8010c64:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8010c68:	2b0b      	cmp	r3, #11
 8010c6a:	bf18      	it	ne
 8010c6c:	0040      	lslne	r0, r0, #1
 8010c6e:	3003      	adds	r0, #3
 8010c70:	f020 0003 	bic.w	r0, r0, #3
 8010c74:	4408      	add	r0, r1
 8010c76:	4770      	bx	lr
 8010c78:	4911      	ldr	r1, [pc, #68]	; (8010cc0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010c7a:	8809      	ldrh	r1, [r1, #0]
 8010c7c:	4419      	add	r1, r3
 8010c7e:	428a      	cmp	r2, r1
 8010c80:	da16      	bge.n	8010cb0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 8010c82:	4910      	ldr	r1, [pc, #64]	; (8010cc4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010c84:	6809      	ldr	r1, [r1, #0]
 8010c86:	1ad3      	subs	r3, r2, r3
 8010c88:	200e      	movs	r0, #14
 8010c8a:	fb00 1303 	mla	r3, r0, r3, r1
 8010c8e:	7b19      	ldrb	r1, [r3, #12]
 8010c90:	f001 011f 	and.w	r1, r1, #31
 8010c94:	290b      	cmp	r1, #11
 8010c96:	d10b      	bne.n	8010cb0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 8010c98:	8919      	ldrh	r1, [r3, #8]
 8010c9a:	8958      	ldrh	r0, [r3, #10]
 8010c9c:	4b07      	ldr	r3, [pc, #28]	; (8010cbc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8010c9e:	4348      	muls	r0, r1
 8010ca0:	6819      	ldr	r1, [r3, #0]
 8010ca2:	3003      	adds	r0, #3
 8010ca4:	f020 0303 	bic.w	r3, r0, #3
 8010ca8:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8010cac:	4418      	add	r0, r3
 8010cae:	4770      	bx	lr
 8010cb0:	2000      	movs	r0, #0
 8010cb2:	4770      	bx	lr
 8010cb4:	20012558 	.word	0x20012558
 8010cb8:	20012560 	.word	0x20012560
 8010cbc:	2001253c 	.word	0x2001253c
 8010cc0:	2001255c 	.word	0x2001255c
 8010cc4:	20012540 	.word	0x20012540

08010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010cc8:	4b19      	ldr	r3, [pc, #100]	; (8010d30 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8010cca:	6819      	ldr	r1, [r3, #0]
 8010ccc:	8803      	ldrh	r3, [r0, #0]
 8010cce:	b1e9      	cbz	r1, 8010d0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010cd0:	4a18      	ldr	r2, [pc, #96]	; (8010d34 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010cd2:	8812      	ldrh	r2, [r2, #0]
 8010cd4:	429a      	cmp	r2, r3
 8010cd6:	d90a      	bls.n	8010cee <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010cd8:	2214      	movs	r2, #20
 8010cda:	fb02 1303 	mla	r3, r2, r3, r1
 8010cde:	7c58      	ldrb	r0, [r3, #17]
 8010ce0:	0942      	lsrs	r2, r0, #5
 8010ce2:	7cd8      	ldrb	r0, [r3, #19]
 8010ce4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010ce8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010cec:	4770      	bx	lr
 8010cee:	4912      	ldr	r1, [pc, #72]	; (8010d38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 8010cf0:	8809      	ldrh	r1, [r1, #0]
 8010cf2:	4411      	add	r1, r2
 8010cf4:	428b      	cmp	r3, r1
 8010cf6:	da09      	bge.n	8010d0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010cf8:	1a9b      	subs	r3, r3, r2
 8010cfa:	4a10      	ldr	r2, [pc, #64]	; (8010d3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 8010cfc:	6812      	ldr	r2, [r2, #0]
 8010cfe:	210e      	movs	r1, #14
 8010d00:	fb01 2303 	mla	r3, r1, r3, r2
 8010d04:	7b18      	ldrb	r0, [r3, #12]
 8010d06:	f000 001f 	and.w	r0, r0, #31
 8010d0a:	4770      	bx	lr
 8010d0c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010d10:	4293      	cmp	r3, r2
 8010d12:	d10a      	bne.n	8010d2a <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 8010d14:	4b0a      	ldr	r3, [pc, #40]	; (8010d40 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 8010d16:	681b      	ldr	r3, [r3, #0]
 8010d18:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8010d1c:	b10a      	cbz	r2, 8010d22 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8010d1e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010d20:	b900      	cbnz	r0, 8010d24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8010d22:	6898      	ldr	r0, [r3, #8]
 8010d24:	6803      	ldr	r3, [r0, #0]
 8010d26:	6a1b      	ldr	r3, [r3, #32]
 8010d28:	4718      	bx	r3
 8010d2a:	2000      	movs	r0, #0
 8010d2c:	4770      	bx	lr
 8010d2e:	bf00      	nop
 8010d30:	20012560 	.word	0x20012560
 8010d34:	20012558 	.word	0x20012558
 8010d38:	2001255c 	.word	0x2001255c
 8010d3c:	20012540 	.word	0x20012540
 8010d40:	200124b8 	.word	0x200124b8

08010d44 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8010d44:	2010      	movs	r0, #16
 8010d46:	4770      	bx	lr

08010d48 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8010d48:	2000      	movs	r0, #0
 8010d4a:	4770      	bx	lr

08010d4c <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 8010d4c:	00d2      	lsls	r2, r2, #3
 8010d4e:	0209      	lsls	r1, r1, #8
 8010d50:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010d54:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 8010d58:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8010d5c:	4310      	orrs	r0, r2
 8010d5e:	4770      	bx	lr

08010d60 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 8010d60:	0a09      	lsrs	r1, r1, #8
 8010d62:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 8010d66:	4770      	bx	lr

08010d68 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 8010d68:	08c9      	lsrs	r1, r1, #3
 8010d6a:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 8010d6e:	4770      	bx	lr

08010d70 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 8010d70:	00c9      	lsls	r1, r1, #3
 8010d72:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 8010d76:	4770      	bx	lr

08010d78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8010d78:	2bff      	cmp	r3, #255	; 0xff
 8010d7a:	d050      	beq.n	8010e1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8010d7c:	2a0b      	cmp	r2, #11
 8010d7e:	d04a      	beq.n	8010e16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010d80:	d80e      	bhi.n	8010da0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8010d82:	2a03      	cmp	r2, #3
 8010d84:	d03f      	beq.n	8010e06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8010d86:	d804      	bhi.n	8010d92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8010d88:	2a01      	cmp	r2, #1
 8010d8a:	d03e      	beq.n	8010e0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8010d8c:	d93f      	bls.n	8010e0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8010d8e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8010d90:	4770      	bx	lr
 8010d92:	2a09      	cmp	r2, #9
 8010d94:	d03f      	beq.n	8010e16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010d96:	d83c      	bhi.n	8010e12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010d98:	2a08      	cmp	r2, #8
 8010d9a:	d03a      	beq.n	8010e12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010d9c:	2000      	movs	r0, #0
 8010d9e:	4770      	bx	lr
 8010da0:	2a2f      	cmp	r2, #47	; 0x2f
 8010da2:	d024      	beq.n	8010dee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8010da4:	d80d      	bhi.n	8010dc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8010da6:	2a2d      	cmp	r2, #45	; 0x2d
 8010da8:	d014      	beq.n	8010dd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8010daa:	d826      	bhi.n	8010dfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8010dac:	2a2c      	cmp	r2, #44	; 0x2c
 8010dae:	d1f5      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010db0:	684b      	ldr	r3, [r1, #4]
 8010db2:	781b      	ldrb	r3, [r3, #0]
 8010db4:	2b01      	cmp	r3, #1
 8010db6:	d018      	beq.n	8010dea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8010db8:	d323      	bcc.n	8010e02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8010dba:	2b02      	cmp	r3, #2
 8010dbc:	d1ee      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010dbe:	6880      	ldr	r0, [r0, #8]
 8010dc0:	4770      	bx	lr
 8010dc2:	2a31      	cmp	r2, #49	; 0x31
 8010dc4:	d004      	beq.n	8010dd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8010dc6:	d328      	bcc.n	8010e1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010dc8:	2a32      	cmp	r2, #50	; 0x32
 8010dca:	d026      	beq.n	8010e1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010dcc:	2a33      	cmp	r2, #51	; 0x33
 8010dce:	d1e5      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010dd0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8010dd2:	4770      	bx	lr
 8010dd4:	684b      	ldr	r3, [r1, #4]
 8010dd6:	781b      	ldrb	r3, [r3, #0]
 8010dd8:	2b01      	cmp	r3, #1
 8010dda:	d004      	beq.n	8010de6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8010ddc:	d30b      	bcc.n	8010df6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8010dde:	2b02      	cmp	r3, #2
 8010de0:	d1dc      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010de2:	6900      	ldr	r0, [r0, #16]
 8010de4:	4770      	bx	lr
 8010de6:	6a00      	ldr	r0, [r0, #32]
 8010de8:	4770      	bx	lr
 8010dea:	6980      	ldr	r0, [r0, #24]
 8010dec:	4770      	bx	lr
 8010dee:	684b      	ldr	r3, [r1, #4]
 8010df0:	781b      	ldrb	r3, [r3, #0]
 8010df2:	2b00      	cmp	r3, #0
 8010df4:	d1d2      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010df6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010df8:	4770      	bx	lr
 8010dfa:	684b      	ldr	r3, [r1, #4]
 8010dfc:	781b      	ldrb	r3, [r3, #0]
 8010dfe:	2b00      	cmp	r3, #0
 8010e00:	d1cc      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e02:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010e04:	4770      	bx	lr
 8010e06:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010e08:	4770      	bx	lr
 8010e0a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8010e0c:	4770      	bx	lr
 8010e0e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8010e10:	4770      	bx	lr
 8010e12:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8010e14:	4770      	bx	lr
 8010e16:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010e18:	4770      	bx	lr
 8010e1a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8010e1c:	4770      	bx	lr
 8010e1e:	2a0b      	cmp	r2, #11
 8010e20:	d049      	beq.n	8010eb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010e22:	d80e      	bhi.n	8010e42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8010e24:	2a03      	cmp	r2, #3
 8010e26:	d040      	beq.n	8010eaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8010e28:	d804      	bhi.n	8010e34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8010e2a:	2a01      	cmp	r2, #1
 8010e2c:	d03f      	beq.n	8010eae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8010e2e:	d940      	bls.n	8010eb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8010e30:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8010e32:	4770      	bx	lr
 8010e34:	2a09      	cmp	r2, #9
 8010e36:	d03e      	beq.n	8010eb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010e38:	d801      	bhi.n	8010e3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8010e3a:	2a08      	cmp	r2, #8
 8010e3c:	d1ae      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e3e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8010e40:	4770      	bx	lr
 8010e42:	2a2f      	cmp	r2, #47	; 0x2f
 8010e44:	d024      	beq.n	8010e90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8010e46:	d80d      	bhi.n	8010e64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8010e48:	2a2d      	cmp	r2, #45	; 0x2d
 8010e4a:	d014      	beq.n	8010e76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8010e4c:	d826      	bhi.n	8010e9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8010e4e:	2a2c      	cmp	r2, #44	; 0x2c
 8010e50:	d1a4      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e52:	684b      	ldr	r3, [r1, #4]
 8010e54:	781b      	ldrb	r3, [r3, #0]
 8010e56:	2b01      	cmp	r3, #1
 8010e58:	d018      	beq.n	8010e8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8010e5a:	d324      	bcc.n	8010ea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8010e5c:	2b02      	cmp	r3, #2
 8010e5e:	d19d      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e60:	68c0      	ldr	r0, [r0, #12]
 8010e62:	4770      	bx	lr
 8010e64:	2a31      	cmp	r2, #49	; 0x31
 8010e66:	d004      	beq.n	8010e72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8010e68:	d327      	bcc.n	8010eba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010e6a:	2a32      	cmp	r2, #50	; 0x32
 8010e6c:	d025      	beq.n	8010eba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010e6e:	2a33      	cmp	r2, #51	; 0x33
 8010e70:	d194      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e72:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8010e74:	4770      	bx	lr
 8010e76:	684b      	ldr	r3, [r1, #4]
 8010e78:	781b      	ldrb	r3, [r3, #0]
 8010e7a:	2b01      	cmp	r3, #1
 8010e7c:	d004      	beq.n	8010e88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8010e7e:	d30b      	bcc.n	8010e98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8010e80:	2b02      	cmp	r3, #2
 8010e82:	d18b      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e84:	6940      	ldr	r0, [r0, #20]
 8010e86:	4770      	bx	lr
 8010e88:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8010e8a:	4770      	bx	lr
 8010e8c:	69c0      	ldr	r0, [r0, #28]
 8010e8e:	4770      	bx	lr
 8010e90:	684b      	ldr	r3, [r1, #4]
 8010e92:	781b      	ldrb	r3, [r3, #0]
 8010e94:	2b00      	cmp	r3, #0
 8010e96:	d181      	bne.n	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010e98:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8010e9a:	4770      	bx	lr
 8010e9c:	684b      	ldr	r3, [r1, #4]
 8010e9e:	781b      	ldrb	r3, [r3, #0]
 8010ea0:	2b00      	cmp	r3, #0
 8010ea2:	f47f af7b 	bne.w	8010d9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010ea6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8010ea8:	4770      	bx	lr
 8010eaa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010eac:	4770      	bx	lr
 8010eae:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8010eb0:	4770      	bx	lr
 8010eb2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8010eb4:	4770      	bx	lr
 8010eb6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010eb8:	4770      	bx	lr
 8010eba:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8010ebc:	4770      	bx	lr

08010ebe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010ebe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ec2:	b087      	sub	sp, #28
 8010ec4:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8010ec6:	9205      	str	r2, [sp, #20]
 8010ec8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010ecc:	9202      	str	r2, [sp, #8]
 8010ece:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8010ed2:	9101      	str	r1, [sp, #4]
 8010ed4:	6871      	ldr	r1, [r6, #4]
 8010ed6:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010ed8:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 8010edc:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010ee0:	fb01 2505 	mla	r5, r1, r5, r2
 8010ee4:	6832      	ldr	r2, [r6, #0]
 8010ee6:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8010eea:	6802      	ldr	r2, [r0, #0]
 8010eec:	9203      	str	r2, [sp, #12]
 8010eee:	6842      	ldr	r2, [r0, #4]
 8010ef0:	fa1f fe84 	uxth.w	lr, r4
 8010ef4:	3204      	adds	r2, #4
 8010ef6:	43e4      	mvns	r4, r4
 8010ef8:	9204      	str	r2, [sp, #16]
 8010efa:	b2e4      	uxtb	r4, r4
 8010efc:	9a01      	ldr	r2, [sp, #4]
 8010efe:	2a00      	cmp	r2, #0
 8010f00:	dc03      	bgt.n	8010f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8010f02:	9a05      	ldr	r2, [sp, #20]
 8010f04:	2a00      	cmp	r2, #0
 8010f06:	f340 8119 	ble.w	801113c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 8010f0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010f0c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010f10:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010f12:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010f16:	2b00      	cmp	r3, #0
 8010f18:	dd0f      	ble.n	8010f3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 8010f1a:	1408      	asrs	r0, r1, #16
 8010f1c:	d406      	bmi.n	8010f2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010f1e:	4540      	cmp	r0, r8
 8010f20:	da04      	bge.n	8010f2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010f22:	1410      	asrs	r0, r2, #16
 8010f24:	d402      	bmi.n	8010f2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010f26:	9e02      	ldr	r6, [sp, #8]
 8010f28:	42b0      	cmp	r0, r6
 8010f2a:	db07      	blt.n	8010f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010f2c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010f2e:	4401      	add	r1, r0
 8010f30:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010f32:	3b01      	subs	r3, #1
 8010f34:	4402      	add	r2, r0
 8010f36:	3502      	adds	r5, #2
 8010f38:	e7ed      	b.n	8010f16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 8010f3a:	d00f      	beq.n	8010f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010f3c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010f3e:	1e58      	subs	r0, r3, #1
 8010f40:	fb06 1600 	mla	r6, r6, r0, r1
 8010f44:	1436      	asrs	r6, r6, #16
 8010f46:	d547      	bpl.n	8010fd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 8010f48:	469b      	mov	fp, r3
 8010f4a:	46aa      	mov	sl, r5
 8010f4c:	f1bb 0f00 	cmp.w	fp, #0
 8010f50:	f300 809e 	bgt.w	8011090 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8010f54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010f58:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010f5c:	9b01      	ldr	r3, [sp, #4]
 8010f5e:	2b00      	cmp	r3, #0
 8010f60:	f340 80ec 	ble.w	801113c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 8010f64:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010f68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010f6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010f70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010f76:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010f7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010f7e:	eef0 6a62 	vmov.f32	s13, s5
 8010f82:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010f86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010f8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010f8e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010f92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010f96:	eef0 6a43 	vmov.f32	s13, s6
 8010f9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010f9e:	ee12 2a90 	vmov	r2, s5
 8010fa2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010fa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8010faa:	ee13 2a10 	vmov	r2, s6
 8010fae:	9313      	str	r3, [sp, #76]	; 0x4c
 8010fb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010fb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010fb6:	9314      	str	r3, [sp, #80]	; 0x50
 8010fb8:	9b01      	ldr	r3, [sp, #4]
 8010fba:	9a05      	ldr	r2, [sp, #20]
 8010fbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010fc0:	3b01      	subs	r3, #1
 8010fc2:	9301      	str	r3, [sp, #4]
 8010fc4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010fc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010fca:	eeb0 3a67 	vmov.f32	s6, s15
 8010fce:	bf08      	it	eq
 8010fd0:	4613      	moveq	r3, r2
 8010fd2:	eef0 2a47 	vmov.f32	s5, s14
 8010fd6:	e791      	b.n	8010efc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010fd8:	4546      	cmp	r6, r8
 8010fda:	dab5      	bge.n	8010f48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010fdc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010fde:	fb06 2000 	mla	r0, r6, r0, r2
 8010fe2:	1400      	asrs	r0, r0, #16
 8010fe4:	d4b0      	bmi.n	8010f48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010fe6:	9e02      	ldr	r6, [sp, #8]
 8010fe8:	42b0      	cmp	r0, r6
 8010fea:	daad      	bge.n	8010f48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010fec:	469a      	mov	sl, r3
 8010fee:	46ab      	mov	fp, r5
 8010ff0:	f1ba 0f00 	cmp.w	sl, #0
 8010ff4:	ddae      	ble.n	8010f54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010ff6:	9f03      	ldr	r7, [sp, #12]
 8010ff8:	1410      	asrs	r0, r2, #16
 8010ffa:	140e      	asrs	r6, r1, #16
 8010ffc:	fb08 7000 	mla	r0, r8, r0, r7
 8011000:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011004:	5d80      	ldrb	r0, [r0, r6]
 8011006:	9e04      	ldr	r6, [sp, #16]
 8011008:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 801100c:	f8bb 6000 	ldrh.w	r6, [fp]
 8011010:	1237      	asrs	r7, r6, #8
 8011012:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011016:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801101a:	fb17 f704 	smulbb	r7, r7, r4
 801101e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 8011022:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011026:	00f6      	lsls	r6, r6, #3
 8011028:	fb0c 7c0e 	mla	ip, ip, lr, r7
 801102c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011030:	10c7      	asrs	r7, r0, #3
 8011032:	b2f6      	uxtb	r6, r6
 8011034:	00c0      	lsls	r0, r0, #3
 8011036:	fb19 f904 	smulbb	r9, r9, r4
 801103a:	fb16 f604 	smulbb	r6, r6, r4
 801103e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011042:	b2c0      	uxtb	r0, r0
 8011044:	fa1f fc8c 	uxth.w	ip, ip
 8011048:	fb07 970e 	mla	r7, r7, lr, r9
 801104c:	fb00 600e 	mla	r0, r0, lr, r6
 8011050:	b280      	uxth	r0, r0
 8011052:	b2bf      	uxth	r7, r7
 8011054:	f10c 0601 	add.w	r6, ip, #1
 8011058:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801105c:	f107 0901 	add.w	r9, r7, #1
 8011060:	1c46      	adds	r6, r0, #1
 8011062:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8011066:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801106a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801106c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011070:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011074:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011078:	ea4c 0c06 	orr.w	ip, ip, r6
 801107c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011080:	4401      	add	r1, r0
 8011082:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011084:	ea4c 0c09 	orr.w	ip, ip, r9
 8011088:	f82b cb02 	strh.w	ip, [fp], #2
 801108c:	4402      	add	r2, r0
 801108e:	e7af      	b.n	8010ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 8011090:	140e      	asrs	r6, r1, #16
 8011092:	d44a      	bmi.n	801112a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 8011094:	4546      	cmp	r6, r8
 8011096:	da48      	bge.n	801112a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 8011098:	1410      	asrs	r0, r2, #16
 801109a:	d446      	bmi.n	801112a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 801109c:	9f02      	ldr	r7, [sp, #8]
 801109e:	42b8      	cmp	r0, r7
 80110a0:	da43      	bge.n	801112a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 80110a2:	9f03      	ldr	r7, [sp, #12]
 80110a4:	fb08 7000 	mla	r0, r8, r0, r7
 80110a8:	5d80      	ldrb	r0, [r0, r6]
 80110aa:	9e04      	ldr	r6, [sp, #16]
 80110ac:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80110b0:	f8ba 6000 	ldrh.w	r6, [sl]
 80110b4:	1237      	asrs	r7, r6, #8
 80110b6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80110ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80110be:	fb17 f704 	smulbb	r7, r7, r4
 80110c2:	ea4f 09e6 	mov.w	r9, r6, asr #3
 80110c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80110ca:	00f6      	lsls	r6, r6, #3
 80110cc:	fb0c 7c0e 	mla	ip, ip, lr, r7
 80110d0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80110d4:	10c7      	asrs	r7, r0, #3
 80110d6:	b2f6      	uxtb	r6, r6
 80110d8:	00c0      	lsls	r0, r0, #3
 80110da:	fb19 f904 	smulbb	r9, r9, r4
 80110de:	fb16 f604 	smulbb	r6, r6, r4
 80110e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80110e6:	b2c0      	uxtb	r0, r0
 80110e8:	fa1f fc8c 	uxth.w	ip, ip
 80110ec:	fb07 970e 	mla	r7, r7, lr, r9
 80110f0:	fb00 600e 	mla	r0, r0, lr, r6
 80110f4:	b2bf      	uxth	r7, r7
 80110f6:	b280      	uxth	r0, r0
 80110f8:	f10c 0601 	add.w	r6, ip, #1
 80110fc:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8011100:	f107 0901 	add.w	r9, r7, #1
 8011104:	1c46      	adds	r6, r0, #1
 8011106:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801110a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801110e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011112:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011116:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801111a:	ea4c 0c06 	orr.w	ip, ip, r6
 801111e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011122:	ea4c 0c09 	orr.w	ip, ip, r9
 8011126:	f8aa c000 	strh.w	ip, [sl]
 801112a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801112c:	4401      	add	r1, r0
 801112e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011130:	f10a 0a02 	add.w	sl, sl, #2
 8011134:	4402      	add	r2, r0
 8011136:	f10b 3bff 	add.w	fp, fp, #4294967295
 801113a:	e707      	b.n	8010f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 801113c:	b007      	add	sp, #28
 801113e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011142 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011142:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011146:	b085      	sub	sp, #20
 8011148:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 801114c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801114e:	9203      	str	r2, [sp, #12]
 8011150:	6842      	ldr	r2, [r0, #4]
 8011152:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8011154:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8011156:	6800      	ldr	r0, [r0, #0]
 8011158:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 801115c:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 8011160:	4696      	mov	lr, r2
 8011162:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011164:	fb0e 2505 	mla	r5, lr, r5, r2
 8011168:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801116c:	6860      	ldr	r0, [r4, #4]
 801116e:	6822      	ldr	r2, [r4, #0]
 8011170:	9201      	str	r2, [sp, #4]
 8011172:	1d02      	adds	r2, r0, #4
 8011174:	9202      	str	r2, [sp, #8]
 8011176:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801117a:	2900      	cmp	r1, #0
 801117c:	dc03      	bgt.n	8011186 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 801117e:	9a03      	ldr	r2, [sp, #12]
 8011180:	2a00      	cmp	r2, #0
 8011182:	f340 809b 	ble.w	80112bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 8011186:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011188:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801118c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801118e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011192:	2b00      	cmp	r3, #0
 8011194:	dd0e      	ble.n	80111b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8011196:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801119a:	d406      	bmi.n	80111aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801119c:	45e6      	cmp	lr, ip
 801119e:	da04      	bge.n	80111aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80111a0:	ea5f 4e20 	movs.w	lr, r0, asr #16
 80111a4:	d401      	bmi.n	80111aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80111a6:	45c6      	cmp	lr, r8
 80111a8:	db05      	blt.n	80111b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80111aa:	443c      	add	r4, r7
 80111ac:	4430      	add	r0, r6
 80111ae:	3b01      	subs	r3, #1
 80111b0:	3502      	adds	r5, #2
 80111b2:	e7ee      	b.n	8011192 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 80111b4:	d010      	beq.n	80111d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80111b6:	f103 3eff 	add.w	lr, r3, #4294967295
 80111ba:	fb07 490e 	mla	r9, r7, lr, r4
 80111be:	ea5f 4929 	movs.w	r9, r9, asr #16
 80111c2:	d53d      	bpl.n	8011240 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80111c4:	469e      	mov	lr, r3
 80111c6:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 80111ca:	f1be 0f00 	cmp.w	lr, #0
 80111ce:	dc58      	bgt.n	8011282 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 80111d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80111d4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80111d8:	2900      	cmp	r1, #0
 80111da:	dd6f      	ble.n	80112bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 80111dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80111e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80111e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80111e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80111ea:	3901      	subs	r1, #1
 80111ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80111f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80111f4:	eeb0 6a62 	vmov.f32	s12, s5
 80111f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80111fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011200:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011204:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011208:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801120c:	eeb0 6a43 	vmov.f32	s12, s6
 8011210:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011214:	ee12 2a90 	vmov	r2, s5
 8011218:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801121c:	fb92 f7f3 	sdiv	r7, r2, r3
 8011220:	ee13 2a10 	vmov	r2, s6
 8011224:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011228:	fb92 f6f3 	sdiv	r6, r2, r3
 801122c:	9a03      	ldr	r2, [sp, #12]
 801122e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011232:	bf08      	it	eq
 8011234:	4613      	moveq	r3, r2
 8011236:	eeb0 3a67 	vmov.f32	s6, s15
 801123a:	eef0 2a47 	vmov.f32	s5, s14
 801123e:	e79c      	b.n	801117a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8011240:	45e1      	cmp	r9, ip
 8011242:	dabf      	bge.n	80111c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 8011244:	fb06 0e0e 	mla	lr, r6, lr, r0
 8011248:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801124c:	d4ba      	bmi.n	80111c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 801124e:	45c6      	cmp	lr, r8
 8011250:	dab8      	bge.n	80111c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 8011252:	469e      	mov	lr, r3
 8011254:	46aa      	mov	sl, r5
 8011256:	f1be 0f00 	cmp.w	lr, #0
 801125a:	ddb9      	ble.n	80111d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 801125c:	9a01      	ldr	r2, [sp, #4]
 801125e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011262:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8011266:	fb0c 2909 	mla	r9, ip, r9, r2
 801126a:	9a02      	ldr	r2, [sp, #8]
 801126c:	f819 900b 	ldrb.w	r9, [r9, fp]
 8011270:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 8011274:	f82a 9b02 	strh.w	r9, [sl], #2
 8011278:	443c      	add	r4, r7
 801127a:	4430      	add	r0, r6
 801127c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011280:	e7e9      	b.n	8011256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 8011282:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8011286:	d414      	bmi.n	80112b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8011288:	45e2      	cmp	sl, ip
 801128a:	da12      	bge.n	80112b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 801128c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011290:	d40f      	bmi.n	80112b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8011292:	45c1      	cmp	r9, r8
 8011294:	da0d      	bge.n	80112b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8011296:	9a01      	ldr	r2, [sp, #4]
 8011298:	fb0c 2909 	mla	r9, ip, r9, r2
 801129c:	9a02      	ldr	r2, [sp, #8]
 801129e:	f819 900a 	ldrb.w	r9, [r9, sl]
 80112a2:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 80112a6:	f06f 0201 	mvn.w	r2, #1
 80112aa:	fb02 f90e 	mul.w	r9, r2, lr
 80112ae:	f82b a009 	strh.w	sl, [fp, r9]
 80112b2:	443c      	add	r4, r7
 80112b4:	4430      	add	r0, r6
 80112b6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80112ba:	e786      	b.n	80111ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 80112bc:	b005      	add	sp, #20
 80112be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080112c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80112c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112c6:	b087      	sub	sp, #28
 80112c8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80112ca:	9205      	str	r2, [sp, #20]
 80112cc:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80112d0:	9202      	str	r2, [sp, #8]
 80112d2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80112d6:	9101      	str	r1, [sp, #4]
 80112d8:	6871      	ldr	r1, [r6, #4]
 80112da:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80112dc:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 80112e0:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 80112e4:	fb01 2404 	mla	r4, r1, r4, r2
 80112e8:	6832      	ldr	r2, [r6, #0]
 80112ea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80112ee:	682a      	ldr	r2, [r5, #0]
 80112f0:	9203      	str	r2, [sp, #12]
 80112f2:	686a      	ldr	r2, [r5, #4]
 80112f4:	fa1f fc80 	uxth.w	ip, r0
 80112f8:	3204      	adds	r2, #4
 80112fa:	43c0      	mvns	r0, r0
 80112fc:	9200      	str	r2, [sp, #0]
 80112fe:	b2c0      	uxtb	r0, r0
 8011300:	9a01      	ldr	r2, [sp, #4]
 8011302:	2a00      	cmp	r2, #0
 8011304:	dc03      	bgt.n	801130e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8011306:	9a05      	ldr	r2, [sp, #20]
 8011308:	2a00      	cmp	r2, #0
 801130a:	f340 811b 	ble.w	8011544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 801130e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011310:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011314:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011316:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801131a:	2b00      	cmp	r3, #0
 801131c:	dd0f      	ble.n	801133e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 801131e:	140d      	asrs	r5, r1, #16
 8011320:	d406      	bmi.n	8011330 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8011322:	4575      	cmp	r5, lr
 8011324:	da04      	bge.n	8011330 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8011326:	1415      	asrs	r5, r2, #16
 8011328:	d402      	bmi.n	8011330 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801132a:	9e02      	ldr	r6, [sp, #8]
 801132c:	42b5      	cmp	r5, r6
 801132e:	db07      	blt.n	8011340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8011330:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011332:	4429      	add	r1, r5
 8011334:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011336:	3b01      	subs	r3, #1
 8011338:	442a      	add	r2, r5
 801133a:	3402      	adds	r4, #2
 801133c:	e7ed      	b.n	801131a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 801133e:	d00f      	beq.n	8011360 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8011340:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011342:	1e5d      	subs	r5, r3, #1
 8011344:	fb06 1605 	mla	r6, r6, r5, r1
 8011348:	1436      	asrs	r6, r6, #16
 801134a:	d547      	bpl.n	80113dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 801134c:	469a      	mov	sl, r3
 801134e:	46a1      	mov	r9, r4
 8011350:	f1ba 0f00 	cmp.w	sl, #0
 8011354:	f300 809f 	bgt.w	8011496 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 8011358:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801135c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011360:	9b01      	ldr	r3, [sp, #4]
 8011362:	2b00      	cmp	r3, #0
 8011364:	f340 80ee 	ble.w	8011544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 8011368:	ee30 0a04 	vadd.f32	s0, s0, s8
 801136c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011370:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011374:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011376:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801137a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801137e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011382:	eef0 6a62 	vmov.f32	s13, s5
 8011386:	ee61 7a27 	vmul.f32	s15, s2, s15
 801138a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801138e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011392:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8011396:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801139a:	eef0 6a43 	vmov.f32	s13, s6
 801139e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113a2:	ee12 2a90 	vmov	r2, s5
 80113a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80113aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80113ae:	ee13 2a10 	vmov	r2, s6
 80113b2:	9313      	str	r3, [sp, #76]	; 0x4c
 80113b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80113b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80113ba:	9314      	str	r3, [sp, #80]	; 0x50
 80113bc:	9b01      	ldr	r3, [sp, #4]
 80113be:	9a05      	ldr	r2, [sp, #20]
 80113c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80113c4:	3b01      	subs	r3, #1
 80113c6:	9301      	str	r3, [sp, #4]
 80113c8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80113cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80113ce:	eeb0 3a67 	vmov.f32	s6, s15
 80113d2:	bf08      	it	eq
 80113d4:	4613      	moveq	r3, r2
 80113d6:	eef0 2a47 	vmov.f32	s5, s14
 80113da:	e791      	b.n	8011300 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 80113dc:	4576      	cmp	r6, lr
 80113de:	dab5      	bge.n	801134c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 80113e0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80113e2:	fb06 2505 	mla	r5, r6, r5, r2
 80113e6:	142d      	asrs	r5, r5, #16
 80113e8:	d4b0      	bmi.n	801134c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 80113ea:	9e02      	ldr	r6, [sp, #8]
 80113ec:	42b5      	cmp	r5, r6
 80113ee:	daad      	bge.n	801134c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 80113f0:	4699      	mov	r9, r3
 80113f2:	46a2      	mov	sl, r4
 80113f4:	f1b9 0f00 	cmp.w	r9, #0
 80113f8:	ddae      	ble.n	8011358 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80113fa:	9f03      	ldr	r7, [sp, #12]
 80113fc:	1415      	asrs	r5, r2, #16
 80113fe:	140e      	asrs	r6, r1, #16
 8011400:	fb0e 7505 	mla	r5, lr, r5, r7
 8011404:	f109 39ff 	add.w	r9, r9, #4294967295
 8011408:	f815 8006 	ldrb.w	r8, [r5, r6]
 801140c:	9d00      	ldr	r5, [sp, #0]
 801140e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8011412:	eb05 0b08 	add.w	fp, r5, r8
 8011416:	f8ba 5000 	ldrh.w	r5, [sl]
 801141a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801141e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011422:	122f      	asrs	r7, r5, #8
 8011424:	fb16 f60c 	smulbb	r6, r6, ip
 8011428:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801142c:	fb07 6700 	mla	r7, r7, r0, r6
 8011430:	10ee      	asrs	r6, r5, #3
 8011432:	fb1b fb0c 	smulbb	fp, fp, ip
 8011436:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801143a:	fb06 b600 	mla	r6, r6, r0, fp
 801143e:	b2b6      	uxth	r6, r6
 8011440:	9604      	str	r6, [sp, #16]
 8011442:	9e00      	ldr	r6, [sp, #0]
 8011444:	00ed      	lsls	r5, r5, #3
 8011446:	f816 8008 	ldrb.w	r8, [r6, r8]
 801144a:	b2ed      	uxtb	r5, r5
 801144c:	fb15 f500 	smulbb	r5, r5, r0
 8011450:	b2bf      	uxth	r7, r7
 8011452:	fb08 580c 	mla	r8, r8, ip, r5
 8011456:	fa1f f888 	uxth.w	r8, r8
 801145a:	1c7d      	adds	r5, r7, #1
 801145c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011460:	f108 0501 	add.w	r5, r8, #1
 8011464:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8011468:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801146c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011470:	432f      	orrs	r7, r5
 8011472:	9d04      	ldr	r5, [sp, #16]
 8011474:	f105 0b01 	add.w	fp, r5, #1
 8011478:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 801147c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801147e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011482:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011486:	4429      	add	r1, r5
 8011488:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801148a:	ea47 070b 	orr.w	r7, r7, fp
 801148e:	f82a 7b02 	strh.w	r7, [sl], #2
 8011492:	442a      	add	r2, r5
 8011494:	e7ae      	b.n	80113f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 8011496:	140e      	asrs	r6, r1, #16
 8011498:	d44b      	bmi.n	8011532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801149a:	4576      	cmp	r6, lr
 801149c:	da49      	bge.n	8011532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801149e:	1415      	asrs	r5, r2, #16
 80114a0:	d447      	bmi.n	8011532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80114a2:	9f02      	ldr	r7, [sp, #8]
 80114a4:	42bd      	cmp	r5, r7
 80114a6:	da44      	bge.n	8011532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80114a8:	9f03      	ldr	r7, [sp, #12]
 80114aa:	fb0e 7505 	mla	r5, lr, r5, r7
 80114ae:	f815 8006 	ldrb.w	r8, [r5, r6]
 80114b2:	9d00      	ldr	r5, [sp, #0]
 80114b4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80114b8:	eb05 0b08 	add.w	fp, r5, r8
 80114bc:	f8b9 5000 	ldrh.w	r5, [r9]
 80114c0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80114c4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80114c8:	122f      	asrs	r7, r5, #8
 80114ca:	fb16 f60c 	smulbb	r6, r6, ip
 80114ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80114d2:	fb07 6700 	mla	r7, r7, r0, r6
 80114d6:	10ee      	asrs	r6, r5, #3
 80114d8:	fb1b fb0c 	smulbb	fp, fp, ip
 80114dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80114e0:	fb06 b600 	mla	r6, r6, r0, fp
 80114e4:	b2b6      	uxth	r6, r6
 80114e6:	9604      	str	r6, [sp, #16]
 80114e8:	9e00      	ldr	r6, [sp, #0]
 80114ea:	00ed      	lsls	r5, r5, #3
 80114ec:	f816 8008 	ldrb.w	r8, [r6, r8]
 80114f0:	b2ed      	uxtb	r5, r5
 80114f2:	fb15 f500 	smulbb	r5, r5, r0
 80114f6:	b2bf      	uxth	r7, r7
 80114f8:	fb08 580c 	mla	r8, r8, ip, r5
 80114fc:	fa1f f888 	uxth.w	r8, r8
 8011500:	1c7d      	adds	r5, r7, #1
 8011502:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011506:	f108 0501 	add.w	r5, r8, #1
 801150a:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 801150e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011512:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011516:	432f      	orrs	r7, r5
 8011518:	9d04      	ldr	r5, [sp, #16]
 801151a:	f105 0b01 	add.w	fp, r5, #1
 801151e:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8011522:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011526:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801152a:	ea47 070b 	orr.w	r7, r7, fp
 801152e:	f8a9 7000 	strh.w	r7, [r9]
 8011532:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011534:	4429      	add	r1, r5
 8011536:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011538:	f109 0902 	add.w	r9, r9, #2
 801153c:	442a      	add	r2, r5
 801153e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011542:	e705      	b.n	8011350 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8011544:	b007      	add	sp, #28
 8011546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801154c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801154c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011550:	b085      	sub	sp, #20
 8011552:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011556:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011558:	9203      	str	r2, [sp, #12]
 801155a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801155e:	6870      	ldr	r0, [r6, #4]
 8011560:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8011562:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 8011566:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 801156a:	9101      	str	r1, [sp, #4]
 801156c:	fb00 2404 	mla	r4, r0, r4, r2
 8011570:	6832      	ldr	r2, [r6, #0]
 8011572:	686e      	ldr	r6, [r5, #4]
 8011574:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011578:	682a      	ldr	r2, [r5, #0]
 801157a:	9202      	str	r2, [sp, #8]
 801157c:	3604      	adds	r6, #4
 801157e:	9a01      	ldr	r2, [sp, #4]
 8011580:	2a00      	cmp	r2, #0
 8011582:	dc03      	bgt.n	801158c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 8011584:	9a03      	ldr	r2, [sp, #12]
 8011586:	2a00      	cmp	r2, #0
 8011588:	f340 80c7 	ble.w	801171a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 801158c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801158e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011592:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011594:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011598:	2b00      	cmp	r3, #0
 801159a:	dd0e      	ble.n	80115ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801159c:	1405      	asrs	r5, r0, #16
 801159e:	d405      	bmi.n	80115ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80115a0:	42bd      	cmp	r5, r7
 80115a2:	da03      	bge.n	80115ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80115a4:	1415      	asrs	r5, r2, #16
 80115a6:	d401      	bmi.n	80115ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80115a8:	4545      	cmp	r5, r8
 80115aa:	db07      	blt.n	80115bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80115ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80115ae:	4428      	add	r0, r5
 80115b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80115b2:	3b01      	subs	r3, #1
 80115b4:	442a      	add	r2, r5
 80115b6:	3402      	adds	r4, #2
 80115b8:	e7ee      	b.n	8011598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 80115ba:	d010      	beq.n	80115de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80115bc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80115be:	1e5d      	subs	r5, r3, #1
 80115c0:	fb01 0c05 	mla	ip, r1, r5, r0
 80115c4:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 80115c8:	d545      	bpl.n	8011656 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 80115ca:	469e      	mov	lr, r3
 80115cc:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 80115d0:	f1be 0f00 	cmp.w	lr, #0
 80115d4:	dc72      	bgt.n	80116bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80115d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80115da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80115de:	9b01      	ldr	r3, [sp, #4]
 80115e0:	2b00      	cmp	r3, #0
 80115e2:	f340 809a 	ble.w	801171a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 80115e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80115ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80115ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80115f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80115f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80115f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80115fc:	eeb0 6a62 	vmov.f32	s12, s5
 8011600:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011604:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011608:	ee77 2a62 	vsub.f32	s5, s14, s5
 801160c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011610:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011614:	eeb0 6a43 	vmov.f32	s12, s6
 8011618:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801161c:	ee12 2a90 	vmov	r2, s5
 8011620:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011624:	fb92 f3f3 	sdiv	r3, r2, r3
 8011628:	ee13 2a10 	vmov	r2, s6
 801162c:	9311      	str	r3, [sp, #68]	; 0x44
 801162e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011630:	fb92 f3f3 	sdiv	r3, r2, r3
 8011634:	9312      	str	r3, [sp, #72]	; 0x48
 8011636:	9b01      	ldr	r3, [sp, #4]
 8011638:	9a03      	ldr	r2, [sp, #12]
 801163a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801163e:	3b01      	subs	r3, #1
 8011640:	9301      	str	r3, [sp, #4]
 8011642:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011646:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011648:	eeb0 3a67 	vmov.f32	s6, s15
 801164c:	bf08      	it	eq
 801164e:	4613      	moveq	r3, r2
 8011650:	eef0 2a47 	vmov.f32	s5, s14
 8011654:	e793      	b.n	801157e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 8011656:	45bc      	cmp	ip, r7
 8011658:	dab7      	bge.n	80115ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 801165a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801165c:	fb01 2505 	mla	r5, r1, r5, r2
 8011660:	142d      	asrs	r5, r5, #16
 8011662:	d4b2      	bmi.n	80115ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8011664:	4545      	cmp	r5, r8
 8011666:	dab0      	bge.n	80115ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8011668:	469e      	mov	lr, r3
 801166a:	46a2      	mov	sl, r4
 801166c:	f1be 0f00 	cmp.w	lr, #0
 8011670:	ddb1      	ble.n	80115d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8011672:	9902      	ldr	r1, [sp, #8]
 8011674:	1415      	asrs	r5, r2, #16
 8011676:	fb07 1505 	mla	r5, r7, r5, r1
 801167a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801167e:	4928      	ldr	r1, [pc, #160]	; (8011720 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 8011680:	f815 c00c 	ldrb.w	ip, [r5, ip]
 8011684:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8011688:	eb06 0b0c 	add.w	fp, r6, ip
 801168c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011690:	f89b 5001 	ldrb.w	r5, [fp, #1]
 8011694:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8011698:	00ed      	lsls	r5, r5, #3
 801169a:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801169e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80116a2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80116a4:	ea49 0505 	orr.w	r5, r9, r5
 80116a8:	f816 900c 	ldrb.w	r9, [r6, ip]
 80116ac:	4408      	add	r0, r1
 80116ae:	9912      	ldr	r1, [sp, #72]	; 0x48
 80116b0:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 80116b4:	f82a 5b02 	strh.w	r5, [sl], #2
 80116b8:	440a      	add	r2, r1
 80116ba:	e7d7      	b.n	801166c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 80116bc:	ea5f 4c20 	movs.w	ip, r0, asr #16
 80116c0:	d424      	bmi.n	801170c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80116c2:	45bc      	cmp	ip, r7
 80116c4:	da22      	bge.n	801170c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80116c6:	1415      	asrs	r5, r2, #16
 80116c8:	d420      	bmi.n	801170c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80116ca:	4545      	cmp	r5, r8
 80116cc:	da1e      	bge.n	801170c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80116ce:	9902      	ldr	r1, [sp, #8]
 80116d0:	fb07 1505 	mla	r5, r7, r5, r1
 80116d4:	f06f 0101 	mvn.w	r1, #1
 80116d8:	f815 c00c 	ldrb.w	ip, [r5, ip]
 80116dc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80116e0:	eb06 050c 	add.w	r5, r6, ip
 80116e4:	fb01 f90e 	mul.w	r9, r1, lr
 80116e8:	f895 a002 	ldrb.w	sl, [r5, #2]
 80116ec:	786d      	ldrb	r5, [r5, #1]
 80116ee:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80116f2:	00ed      	lsls	r5, r5, #3
 80116f4:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 80116f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80116fc:	ea4a 0505 	orr.w	r5, sl, r5
 8011700:	f816 a00c 	ldrb.w	sl, [r6, ip]
 8011704:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 8011708:	f82b 5009 	strh.w	r5, [fp, r9]
 801170c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801170e:	4408      	add	r0, r1
 8011710:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011712:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011716:	440a      	add	r2, r1
 8011718:	e75a      	b.n	80115d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 801171a:	b005      	add	sp, #20
 801171c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011720:	fffff800 	.word	0xfffff800

08011724 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011728:	b087      	sub	sp, #28
 801172a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801172e:	9204      	str	r2, [sp, #16]
 8011730:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011734:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8011736:	9201      	str	r2, [sp, #4]
 8011738:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 801173c:	9205      	str	r2, [sp, #20]
 801173e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011742:	9100      	str	r1, [sp, #0]
 8011744:	6869      	ldr	r1, [r5, #4]
 8011746:	981a      	ldr	r0, [sp, #104]	; 0x68
 8011748:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 801174c:	fb01 2404 	mla	r4, r1, r4, r2
 8011750:	682a      	ldr	r2, [r5, #0]
 8011752:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011756:	6802      	ldr	r2, [r0, #0]
 8011758:	9202      	str	r2, [sp, #8]
 801175a:	6842      	ldr	r2, [r0, #4]
 801175c:	3204      	adds	r2, #4
 801175e:	9203      	str	r2, [sp, #12]
 8011760:	9a00      	ldr	r2, [sp, #0]
 8011762:	2a00      	cmp	r2, #0
 8011764:	dc03      	bgt.n	801176e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8011766:	9a04      	ldr	r2, [sp, #16]
 8011768:	2a00      	cmp	r2, #0
 801176a:	f340 812c 	ble.w	80119c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 801176e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011770:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011774:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011776:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801177a:	2b00      	cmp	r3, #0
 801177c:	dd0f      	ble.n	801179e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 801177e:	1402      	asrs	r2, r0, #16
 8011780:	d406      	bmi.n	8011790 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8011782:	4572      	cmp	r2, lr
 8011784:	da04      	bge.n	8011790 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8011786:	140a      	asrs	r2, r1, #16
 8011788:	d402      	bmi.n	8011790 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801178a:	9d01      	ldr	r5, [sp, #4]
 801178c:	42aa      	cmp	r2, r5
 801178e:	db07      	blt.n	80117a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 8011790:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011792:	4410      	add	r0, r2
 8011794:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011796:	3b01      	subs	r3, #1
 8011798:	4411      	add	r1, r2
 801179a:	3402      	adds	r4, #2
 801179c:	e7ed      	b.n	801177a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 801179e:	d00f      	beq.n	80117c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80117a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80117a2:	1e5a      	subs	r2, r3, #1
 80117a4:	fb05 0502 	mla	r5, r5, r2, r0
 80117a8:	142d      	asrs	r5, r5, #16
 80117aa:	d545      	bpl.n	8011838 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 80117ac:	4699      	mov	r9, r3
 80117ae:	46a0      	mov	r8, r4
 80117b0:	f1b9 0f00 	cmp.w	r9, #0
 80117b4:	f300 80a7 	bgt.w	8011906 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 80117b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80117c0:	9b00      	ldr	r3, [sp, #0]
 80117c2:	2b00      	cmp	r3, #0
 80117c4:	f340 80ff 	ble.w	80119c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80117c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80117d0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80117d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80117da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80117de:	eeb0 6a62 	vmov.f32	s12, s5
 80117e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80117ee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80117f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80117f6:	eeb0 6a43 	vmov.f32	s12, s6
 80117fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80117fe:	ee12 2a90 	vmov	r2, s5
 8011802:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011806:	fb92 f3f3 	sdiv	r3, r2, r3
 801180a:	ee13 2a10 	vmov	r2, s6
 801180e:	9313      	str	r3, [sp, #76]	; 0x4c
 8011810:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011812:	fb92 f3f3 	sdiv	r3, r2, r3
 8011816:	9314      	str	r3, [sp, #80]	; 0x50
 8011818:	9b00      	ldr	r3, [sp, #0]
 801181a:	9a04      	ldr	r2, [sp, #16]
 801181c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011820:	3b01      	subs	r3, #1
 8011822:	9300      	str	r3, [sp, #0]
 8011824:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011828:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801182a:	eeb0 3a67 	vmov.f32	s6, s15
 801182e:	bf08      	it	eq
 8011830:	4613      	moveq	r3, r2
 8011832:	eef0 2a47 	vmov.f32	s5, s14
 8011836:	e793      	b.n	8011760 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 8011838:	4575      	cmp	r5, lr
 801183a:	dab7      	bge.n	80117ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 801183c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801183e:	fb05 1202 	mla	r2, r5, r2, r1
 8011842:	1412      	asrs	r2, r2, #16
 8011844:	d4b2      	bmi.n	80117ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8011846:	9d01      	ldr	r5, [sp, #4]
 8011848:	42aa      	cmp	r2, r5
 801184a:	daaf      	bge.n	80117ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 801184c:	f04f 0800 	mov.w	r8, #0
 8011850:	eba3 0208 	sub.w	r2, r3, r8
 8011854:	2a00      	cmp	r2, #0
 8011856:	ddaf      	ble.n	80117b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8011858:	9e02      	ldr	r6, [sp, #8]
 801185a:	140a      	asrs	r2, r1, #16
 801185c:	1405      	asrs	r5, r0, #16
 801185e:	fb0e 6202 	mla	r2, lr, r2, r6
 8011862:	5d52      	ldrb	r2, [r2, r5]
 8011864:	9d03      	ldr	r5, [sp, #12]
 8011866:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801186a:	0e2e      	lsrs	r6, r5, #24
 801186c:	d044      	beq.n	80118f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 801186e:	9a05      	ldr	r2, [sp, #20]
 8011870:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8011874:	4356      	muls	r6, r2
 8011876:	1c72      	adds	r2, r6, #1
 8011878:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801187c:	1212      	asrs	r2, r2, #8
 801187e:	fa1f f982 	uxth.w	r9, r2
 8011882:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011886:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801188a:	43d2      	mvns	r2, r2
 801188c:	b2d2      	uxtb	r2, r2
 801188e:	fb16 f609 	smulbb	r6, r6, r9
 8011892:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011896:	fb07 6702 	mla	r7, r7, r2, r6
 801189a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801189e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80118a2:	b2ed      	uxtb	r5, r5
 80118a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80118a8:	fa5f fc8c 	uxtb.w	ip, ip
 80118ac:	fb15 f509 	smulbb	r5, r5, r9
 80118b0:	fb0c 5502 	mla	r5, ip, r2, r5
 80118b4:	b2bf      	uxth	r7, r7
 80118b6:	fb1a fa09 	smulbb	sl, sl, r9
 80118ba:	b2ad      	uxth	r5, r5
 80118bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80118c0:	fb06 a602 	mla	r6, r6, r2, sl
 80118c4:	1c7a      	adds	r2, r7, #1
 80118c6:	f105 0a01 	add.w	sl, r5, #1
 80118ca:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80118ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80118d2:	b2b6      	uxth	r6, r6
 80118d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80118d8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80118dc:	ea47 070a 	orr.w	r7, r7, sl
 80118e0:	f106 0a01 	add.w	sl, r6, #1
 80118e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80118e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80118ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80118f0:	ea47 070a 	orr.w	r7, r7, sl
 80118f4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80118f8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80118fa:	4410      	add	r0, r2
 80118fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80118fe:	f108 0801 	add.w	r8, r8, #1
 8011902:	4411      	add	r1, r2
 8011904:	e7a4      	b.n	8011850 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 8011906:	1405      	asrs	r5, r0, #16
 8011908:	d454      	bmi.n	80119b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801190a:	4575      	cmp	r5, lr
 801190c:	da52      	bge.n	80119b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801190e:	140a      	asrs	r2, r1, #16
 8011910:	d450      	bmi.n	80119b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8011912:	9e01      	ldr	r6, [sp, #4]
 8011914:	42b2      	cmp	r2, r6
 8011916:	da4d      	bge.n	80119b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8011918:	9e02      	ldr	r6, [sp, #8]
 801191a:	fb0e 6202 	mla	r2, lr, r2, r6
 801191e:	5d52      	ldrb	r2, [r2, r5]
 8011920:	9d03      	ldr	r5, [sp, #12]
 8011922:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011926:	0e2e      	lsrs	r6, r5, #24
 8011928:	d044      	beq.n	80119b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801192a:	9a05      	ldr	r2, [sp, #20]
 801192c:	f8b8 c000 	ldrh.w	ip, [r8]
 8011930:	4356      	muls	r6, r2
 8011932:	1c72      	adds	r2, r6, #1
 8011934:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011938:	1212      	asrs	r2, r2, #8
 801193a:	fa1f fa82 	uxth.w	sl, r2
 801193e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011942:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011946:	43d2      	mvns	r2, r2
 8011948:	b2d2      	uxtb	r2, r2
 801194a:	fb16 f60a 	smulbb	r6, r6, sl
 801194e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011952:	fb07 6702 	mla	r7, r7, r2, r6
 8011956:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 801195a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801195e:	b2ed      	uxtb	r5, r5
 8011960:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011964:	fa5f fc8c 	uxtb.w	ip, ip
 8011968:	fb15 f50a 	smulbb	r5, r5, sl
 801196c:	fb0c 5502 	mla	r5, ip, r2, r5
 8011970:	b2bf      	uxth	r7, r7
 8011972:	fb1b fb0a 	smulbb	fp, fp, sl
 8011976:	b2ad      	uxth	r5, r5
 8011978:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801197c:	fb06 b602 	mla	r6, r6, r2, fp
 8011980:	1c7a      	adds	r2, r7, #1
 8011982:	f105 0b01 	add.w	fp, r5, #1
 8011986:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801198a:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 801198e:	b2b6      	uxth	r6, r6
 8011990:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8011994:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011998:	ea47 070b 	orr.w	r7, r7, fp
 801199c:	f106 0b01 	add.w	fp, r6, #1
 80119a0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80119a4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80119a8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80119ac:	ea47 070b 	orr.w	r7, r7, fp
 80119b0:	f8a8 7000 	strh.w	r7, [r8]
 80119b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80119b6:	4410      	add	r0, r2
 80119b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80119ba:	f108 0802 	add.w	r8, r8, #2
 80119be:	4411      	add	r1, r2
 80119c0:	f109 39ff 	add.w	r9, r9, #4294967295
 80119c4:	e6f4      	b.n	80117b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 80119c6:	b007      	add	sp, #28
 80119c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080119cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80119cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119d0:	b087      	sub	sp, #28
 80119d2:	468b      	mov	fp, r1
 80119d4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80119d6:	9205      	str	r2, [sp, #20]
 80119d8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80119dc:	9201      	str	r2, [sp, #4]
 80119de:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80119e2:	6869      	ldr	r1, [r5, #4]
 80119e4:	981a      	ldr	r0, [sp, #104]	; 0x68
 80119e6:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 80119ea:	fb01 2404 	mla	r4, r1, r4, r2
 80119ee:	682a      	ldr	r2, [r5, #0]
 80119f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80119f4:	6802      	ldr	r2, [r0, #0]
 80119f6:	9203      	str	r2, [sp, #12]
 80119f8:	6842      	ldr	r2, [r0, #4]
 80119fa:	3204      	adds	r2, #4
 80119fc:	9204      	str	r2, [sp, #16]
 80119fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011a02:	f1bb 0f00 	cmp.w	fp, #0
 8011a06:	dc03      	bgt.n	8011a10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8011a08:	9a05      	ldr	r2, [sp, #20]
 8011a0a:	2a00      	cmp	r2, #0
 8011a0c:	f340 814a 	ble.w	8011ca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8011a10:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011a12:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011a16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011a18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011a1c:	2b00      	cmp	r3, #0
 8011a1e:	dd0f      	ble.n	8011a40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011a20:	1408      	asrs	r0, r1, #16
 8011a22:	d406      	bmi.n	8011a32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011a24:	4540      	cmp	r0, r8
 8011a26:	da04      	bge.n	8011a32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011a28:	1410      	asrs	r0, r2, #16
 8011a2a:	d402      	bmi.n	8011a32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011a2c:	9d01      	ldr	r5, [sp, #4]
 8011a2e:	42a8      	cmp	r0, r5
 8011a30:	db07      	blt.n	8011a42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8011a32:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011a34:	4401      	add	r1, r0
 8011a36:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011a38:	3b01      	subs	r3, #1
 8011a3a:	4402      	add	r2, r0
 8011a3c:	3402      	adds	r4, #2
 8011a3e:	e7ed      	b.n	8011a1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8011a40:	d018      	beq.n	8011a74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 8011a42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011a44:	1e58      	subs	r0, r3, #1
 8011a46:	fb05 1500 	mla	r5, r5, r0, r1
 8011a4a:	142d      	asrs	r5, r5, #16
 8011a4c:	d40a      	bmi.n	8011a64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011a4e:	4545      	cmp	r5, r8
 8011a50:	da08      	bge.n	8011a64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011a52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011a54:	fb05 2000 	mla	r0, r5, r0, r2
 8011a58:	1400      	asrs	r0, r0, #16
 8011a5a:	d403      	bmi.n	8011a64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011a5c:	9d01      	ldr	r5, [sp, #4]
 8011a5e:	42a8      	cmp	r0, r5
 8011a60:	f2c0 80b7 	blt.w	8011bd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 8011a64:	2600      	movs	r6, #0
 8011a66:	1998      	adds	r0, r3, r6
 8011a68:	2800      	cmp	r0, #0
 8011a6a:	dc3e      	bgt.n	8011aea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 8011a6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011a70:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011a74:	f1bb 0f00 	cmp.w	fp, #0
 8011a78:	f340 8114 	ble.w	8011ca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8011a7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011a80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011a84:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011a88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a8a:	f1bb 0b01 	subs.w	fp, fp, #1
 8011a8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011a92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a96:	eeb0 6a62 	vmov.f32	s12, s5
 8011a9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011aa2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011aa6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011aaa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011aae:	eeb0 6a43 	vmov.f32	s12, s6
 8011ab2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011ab6:	ee12 2a90 	vmov	r2, s5
 8011aba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011abe:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ac2:	ee13 2a10 	vmov	r2, s6
 8011ac6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011aca:	9313      	str	r3, [sp, #76]	; 0x4c
 8011acc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011ace:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ad2:	9a05      	ldr	r2, [sp, #20]
 8011ad4:	9314      	str	r3, [sp, #80]	; 0x50
 8011ad6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011ada:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011adc:	eeb0 3a67 	vmov.f32	s6, s15
 8011ae0:	bf08      	it	eq
 8011ae2:	4613      	moveq	r3, r2
 8011ae4:	eef0 2a47 	vmov.f32	s5, s14
 8011ae8:	e78b      	b.n	8011a02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8011aea:	140d      	asrs	r5, r1, #16
 8011aec:	d459      	bmi.n	8011ba2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011aee:	4545      	cmp	r5, r8
 8011af0:	da57      	bge.n	8011ba2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011af2:	1410      	asrs	r0, r2, #16
 8011af4:	d455      	bmi.n	8011ba2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011af6:	9f01      	ldr	r7, [sp, #4]
 8011af8:	42b8      	cmp	r0, r7
 8011afa:	da52      	bge.n	8011ba2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011afc:	9f03      	ldr	r7, [sp, #12]
 8011afe:	fb08 7000 	mla	r0, r8, r0, r7
 8011b02:	5d40      	ldrb	r0, [r0, r5]
 8011b04:	9d04      	ldr	r5, [sp, #16]
 8011b06:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011b0a:	0e07      	lsrs	r7, r0, #24
 8011b0c:	2fff      	cmp	r7, #255	; 0xff
 8011b0e:	d04e      	beq.n	8011bae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8011b10:	b2fd      	uxtb	r5, r7
 8011b12:	2f00      	cmp	r7, #0
 8011b14:	d045      	beq.n	8011ba2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011b16:	f06f 0701 	mvn.w	r7, #1
 8011b1a:	4377      	muls	r7, r6
 8011b1c:	fa1f f985 	uxth.w	r9, r5
 8011b20:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011b24:	9702      	str	r7, [sp, #8]
 8011b26:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011b2a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011b2e:	43ed      	mvns	r5, r5
 8011b30:	b2ed      	uxtb	r5, r5
 8011b32:	fb17 f709 	smulbb	r7, r7, r9
 8011b36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011b3a:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011b3e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011b42:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011b46:	b2c0      	uxtb	r0, r0
 8011b48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011b4c:	fa5f fe8e 	uxtb.w	lr, lr
 8011b50:	fb10 f009 	smulbb	r0, r0, r9
 8011b54:	fb0e 0005 	mla	r0, lr, r5, r0
 8011b58:	b280      	uxth	r0, r0
 8011b5a:	fa1f fc8c 	uxth.w	ip, ip
 8011b5e:	fb1a fa09 	smulbb	sl, sl, r9
 8011b62:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011b66:	fb07 a705 	mla	r7, r7, r5, sl
 8011b6a:	f100 0a01 	add.w	sl, r0, #1
 8011b6e:	f10c 0501 	add.w	r5, ip, #1
 8011b72:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011b76:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011b7a:	b2bf      	uxth	r7, r7
 8011b7c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011b80:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011b84:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011b88:	f107 0a01 	add.w	sl, r7, #1
 8011b8c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011b90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011b94:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011b98:	9802      	ldr	r0, [sp, #8]
 8011b9a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011b9e:	f824 c000 	strh.w	ip, [r4, r0]
 8011ba2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011ba4:	4401      	add	r1, r0
 8011ba6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011ba8:	3e01      	subs	r6, #1
 8011baa:	4402      	add	r2, r0
 8011bac:	e75b      	b.n	8011a66 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8011bae:	f06f 0501 	mvn.w	r5, #1
 8011bb2:	fb05 f706 	mul.w	r7, r5, r6
 8011bb6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011bba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011bbe:	0945      	lsrs	r5, r0, #5
 8011bc0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011bc4:	ea4c 0505 	orr.w	r5, ip, r5
 8011bc8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011bcc:	4305      	orrs	r5, r0
 8011bce:	53e5      	strh	r5, [r4, r7]
 8011bd0:	e7e7      	b.n	8011ba2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011bd2:	f04f 0e00 	mov.w	lr, #0
 8011bd6:	eba3 000e 	sub.w	r0, r3, lr
 8011bda:	2800      	cmp	r0, #0
 8011bdc:	f77f af46 	ble.w	8011a6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8011be0:	9e03      	ldr	r6, [sp, #12]
 8011be2:	1410      	asrs	r0, r2, #16
 8011be4:	140d      	asrs	r5, r1, #16
 8011be6:	fb08 6000 	mla	r0, r8, r0, r6
 8011bea:	5d40      	ldrb	r0, [r0, r5]
 8011bec:	9d04      	ldr	r5, [sp, #16]
 8011bee:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011bf2:	0e06      	lsrs	r6, r0, #24
 8011bf4:	2eff      	cmp	r6, #255	; 0xff
 8011bf6:	d048      	beq.n	8011c8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8011bf8:	b2f5      	uxtb	r5, r6
 8011bfa:	2e00      	cmp	r6, #0
 8011bfc:	d03e      	beq.n	8011c7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011bfe:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011c02:	fa1f f985 	uxth.w	r9, r5
 8011c06:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011c0a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8011c0e:	43ed      	mvns	r5, r5
 8011c10:	b2ed      	uxtb	r5, r5
 8011c12:	fb16 f609 	smulbb	r6, r6, r9
 8011c16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011c1a:	fb07 6705 	mla	r7, r7, r5, r6
 8011c1e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011c22:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011c26:	b2c0      	uxtb	r0, r0
 8011c28:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011c2c:	fa5f fc8c 	uxtb.w	ip, ip
 8011c30:	fb10 f009 	smulbb	r0, r0, r9
 8011c34:	fb0c 0005 	mla	r0, ip, r5, r0
 8011c38:	b2bf      	uxth	r7, r7
 8011c3a:	fb1a fa09 	smulbb	sl, sl, r9
 8011c3e:	b280      	uxth	r0, r0
 8011c40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011c44:	fb06 a605 	mla	r6, r6, r5, sl
 8011c48:	1c7d      	adds	r5, r7, #1
 8011c4a:	f100 0a01 	add.w	sl, r0, #1
 8011c4e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011c52:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011c56:	b2b6      	uxth	r6, r6
 8011c58:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011c5c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011c60:	ea47 070a 	orr.w	r7, r7, sl
 8011c64:	f106 0a01 	add.w	sl, r6, #1
 8011c68:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011c6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011c70:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011c74:	ea47 070a 	orr.w	r7, r7, sl
 8011c78:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011c7c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011c7e:	4401      	add	r1, r0
 8011c80:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011c82:	f10e 0e01 	add.w	lr, lr, #1
 8011c86:	4402      	add	r2, r0
 8011c88:	e7a5      	b.n	8011bd6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 8011c8a:	4d08      	ldr	r5, [pc, #32]	; (8011cac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 8011c8c:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8011c90:	0945      	lsrs	r5, r0, #5
 8011c92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011c96:	4335      	orrs	r5, r6
 8011c98:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011c9c:	4305      	orrs	r5, r0
 8011c9e:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8011ca2:	e7eb      	b.n	8011c7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011ca4:	b007      	add	sp, #28
 8011ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011caa:	bf00      	nop
 8011cac:	fffff800 	.word	0xfffff800

08011cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cb4:	b087      	sub	sp, #28
 8011cb6:	468b      	mov	fp, r1
 8011cb8:	9204      	str	r2, [sp, #16]
 8011cba:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011cbe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8011cc0:	9201      	str	r2, [sp, #4]
 8011cc2:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8011cc6:	9205      	str	r2, [sp, #20]
 8011cc8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011ccc:	6869      	ldr	r1, [r5, #4]
 8011cce:	981a      	ldr	r0, [sp, #104]	; 0x68
 8011cd0:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8011cd4:	fb01 2404 	mla	r4, r1, r4, r2
 8011cd8:	682a      	ldr	r2, [r5, #0]
 8011cda:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011cde:	6802      	ldr	r2, [r0, #0]
 8011ce0:	9202      	str	r2, [sp, #8]
 8011ce2:	6842      	ldr	r2, [r0, #4]
 8011ce4:	9203      	str	r2, [sp, #12]
 8011ce6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011cea:	f1bb 0f00 	cmp.w	fp, #0
 8011cee:	dc03      	bgt.n	8011cf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8011cf0:	9a04      	ldr	r2, [sp, #16]
 8011cf2:	2a00      	cmp	r2, #0
 8011cf4:	f340 8136 	ble.w	8011f64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8011cf8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011cfa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011cfe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d00:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011d04:	2b00      	cmp	r3, #0
 8011d06:	dd0f      	ble.n	8011d28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011d08:	1408      	asrs	r0, r1, #16
 8011d0a:	d406      	bmi.n	8011d1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011d0c:	4540      	cmp	r0, r8
 8011d0e:	da04      	bge.n	8011d1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011d10:	1410      	asrs	r0, r2, #16
 8011d12:	d402      	bmi.n	8011d1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011d14:	9d01      	ldr	r5, [sp, #4]
 8011d16:	42a8      	cmp	r0, r5
 8011d18:	db07      	blt.n	8011d2a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8011d1a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011d1c:	4401      	add	r1, r0
 8011d1e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011d20:	3b01      	subs	r3, #1
 8011d22:	4402      	add	r2, r0
 8011d24:	3402      	adds	r4, #2
 8011d26:	e7ed      	b.n	8011d04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8011d28:	d00f      	beq.n	8011d4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8011d2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011d2c:	1e58      	subs	r0, r3, #1
 8011d2e:	fb05 1500 	mla	r5, r5, r0, r1
 8011d32:	142d      	asrs	r5, r5, #16
 8011d34:	d544      	bpl.n	8011dc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8011d36:	9300      	str	r3, [sp, #0]
 8011d38:	46a2      	mov	sl, r4
 8011d3a:	9800      	ldr	r0, [sp, #0]
 8011d3c:	2800      	cmp	r0, #0
 8011d3e:	f300 80ab 	bgt.w	8011e98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8011d42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011d4a:	f1bb 0f00 	cmp.w	fp, #0
 8011d4e:	f340 8109 	ble.w	8011f64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8011d52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011d56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d5a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011d5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d60:	f1bb 0b01 	subs.w	fp, fp, #1
 8011d64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d6c:	eeb0 6a62 	vmov.f32	s12, s5
 8011d70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d7c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011d80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d84:	eeb0 6a43 	vmov.f32	s12, s6
 8011d88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d8c:	ee12 2a90 	vmov	r2, s5
 8011d90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d94:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d98:	ee13 2a10 	vmov	r2, s6
 8011d9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011da0:	9313      	str	r3, [sp, #76]	; 0x4c
 8011da2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011da4:	fb92 f3f3 	sdiv	r3, r2, r3
 8011da8:	9a04      	ldr	r2, [sp, #16]
 8011daa:	9314      	str	r3, [sp, #80]	; 0x50
 8011dac:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011db0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011db2:	eeb0 3a67 	vmov.f32	s6, s15
 8011db6:	bf08      	it	eq
 8011db8:	4613      	moveq	r3, r2
 8011dba:	eef0 2a47 	vmov.f32	s5, s14
 8011dbe:	e794      	b.n	8011cea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011dc0:	4545      	cmp	r5, r8
 8011dc2:	dab8      	bge.n	8011d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8011dc4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011dc6:	fb05 2000 	mla	r0, r5, r0, r2
 8011dca:	1400      	asrs	r0, r0, #16
 8011dcc:	d4b3      	bmi.n	8011d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8011dce:	9d01      	ldr	r5, [sp, #4]
 8011dd0:	42a8      	cmp	r0, r5
 8011dd2:	dab0      	bge.n	8011d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8011dd4:	f04f 0900 	mov.w	r9, #0
 8011dd8:	eba3 0009 	sub.w	r0, r3, r9
 8011ddc:	2800      	cmp	r0, #0
 8011dde:	ddb0      	ble.n	8011d42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011de0:	140d      	asrs	r5, r1, #16
 8011de2:	1410      	asrs	r0, r2, #16
 8011de4:	fb08 5000 	mla	r0, r8, r0, r5
 8011de8:	9d03      	ldr	r5, [sp, #12]
 8011dea:	5c2e      	ldrb	r6, [r5, r0]
 8011dec:	2e00      	cmp	r6, #0
 8011dee:	d04c      	beq.n	8011e8a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 8011df0:	9d02      	ldr	r5, [sp, #8]
 8011df2:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8011df6:	9805      	ldr	r0, [sp, #20]
 8011df8:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 8011dfc:	4346      	muls	r6, r0
 8011dfe:	1c70      	adds	r0, r6, #1
 8011e00:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8011e04:	1200      	asrs	r0, r0, #8
 8011e06:	b287      	uxth	r7, r0
 8011e08:	122e      	asrs	r6, r5, #8
 8011e0a:	43c0      	mvns	r0, r0
 8011e0c:	b2c0      	uxtb	r0, r0
 8011e0e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011e12:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011e16:	fb16 f600 	smulbb	r6, r6, r0
 8011e1a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011e1e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011e22:	00ed      	lsls	r5, r5, #3
 8011e24:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011e28:	b2ed      	uxtb	r5, r5
 8011e2a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011e2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011e32:	fb15 f500 	smulbb	r5, r5, r0
 8011e36:	fa5f fe8e 	uxtb.w	lr, lr
 8011e3a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011e3e:	fb0e 5507 	mla	r5, lr, r7, r5
 8011e42:	fb1a fa00 	smulbb	sl, sl, r0
 8011e46:	fa1f fc8c 	uxth.w	ip, ip
 8011e4a:	b2ad      	uxth	r5, r5
 8011e4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011e50:	fb06 a607 	mla	r6, r6, r7, sl
 8011e54:	f10c 0001 	add.w	r0, ip, #1
 8011e58:	f105 0a01 	add.w	sl, r5, #1
 8011e5c:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8011e60:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011e64:	b2b6      	uxth	r6, r6
 8011e66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011e6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011e6e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011e72:	f106 0a01 	add.w	sl, r6, #1
 8011e76:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011e7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011e7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011e82:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011e86:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 8011e8a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011e8c:	4401      	add	r1, r0
 8011e8e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011e90:	f109 0901 	add.w	r9, r9, #1
 8011e94:	4402      	add	r2, r0
 8011e96:	e79f      	b.n	8011dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 8011e98:	1408      	asrs	r0, r1, #16
 8011e9a:	d459      	bmi.n	8011f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8011e9c:	4540      	cmp	r0, r8
 8011e9e:	da57      	bge.n	8011f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8011ea0:	1415      	asrs	r5, r2, #16
 8011ea2:	d455      	bmi.n	8011f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8011ea4:	9e01      	ldr	r6, [sp, #4]
 8011ea6:	42b5      	cmp	r5, r6
 8011ea8:	da52      	bge.n	8011f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8011eaa:	fb08 0005 	mla	r0, r8, r5, r0
 8011eae:	9d03      	ldr	r5, [sp, #12]
 8011eb0:	5c2e      	ldrb	r6, [r5, r0]
 8011eb2:	2e00      	cmp	r6, #0
 8011eb4:	d04c      	beq.n	8011f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8011eb6:	9d02      	ldr	r5, [sp, #8]
 8011eb8:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8011ebc:	9805      	ldr	r0, [sp, #20]
 8011ebe:	f8ba 5000 	ldrh.w	r5, [sl]
 8011ec2:	4346      	muls	r6, r0
 8011ec4:	1c70      	adds	r0, r6, #1
 8011ec6:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8011eca:	1200      	asrs	r0, r0, #8
 8011ecc:	b287      	uxth	r7, r0
 8011ece:	122e      	asrs	r6, r5, #8
 8011ed0:	43c0      	mvns	r0, r0
 8011ed2:	b2c0      	uxtb	r0, r0
 8011ed4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011ed8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011edc:	fb16 f600 	smulbb	r6, r6, r0
 8011ee0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011ee4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011ee8:	00ed      	lsls	r5, r5, #3
 8011eea:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011eee:	b2ed      	uxtb	r5, r5
 8011ef0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011ef4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011ef8:	fb15 f500 	smulbb	r5, r5, r0
 8011efc:	fa5f fe8e 	uxtb.w	lr, lr
 8011f00:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011f04:	fb0e 5507 	mla	r5, lr, r7, r5
 8011f08:	fb19 f900 	smulbb	r9, r9, r0
 8011f0c:	fa1f fc8c 	uxth.w	ip, ip
 8011f10:	b2ad      	uxth	r5, r5
 8011f12:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011f16:	fb06 9607 	mla	r6, r6, r7, r9
 8011f1a:	f10c 0001 	add.w	r0, ip, #1
 8011f1e:	f105 0901 	add.w	r9, r5, #1
 8011f22:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8011f26:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 8011f2a:	b2b6      	uxth	r6, r6
 8011f2c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8011f30:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011f34:	ea4c 0c09 	orr.w	ip, ip, r9
 8011f38:	f106 0901 	add.w	r9, r6, #1
 8011f3c:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8011f40:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011f44:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011f48:	ea4c 0c09 	orr.w	ip, ip, r9
 8011f4c:	f8aa c000 	strh.w	ip, [sl]
 8011f50:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011f52:	4401      	add	r1, r0
 8011f54:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011f56:	4402      	add	r2, r0
 8011f58:	9800      	ldr	r0, [sp, #0]
 8011f5a:	3801      	subs	r0, #1
 8011f5c:	f10a 0a02 	add.w	sl, sl, #2
 8011f60:	9000      	str	r0, [sp, #0]
 8011f62:	e6ea      	b.n	8011d3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8011f64:	b007      	add	sp, #28
 8011f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011f6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011f6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f6e:	b087      	sub	sp, #28
 8011f70:	468b      	mov	fp, r1
 8011f72:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8011f74:	9205      	str	r2, [sp, #20]
 8011f76:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011f7a:	9202      	str	r2, [sp, #8]
 8011f7c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011f80:	6869      	ldr	r1, [r5, #4]
 8011f82:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8011f84:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8011f88:	fb01 2000 	mla	r0, r1, r0, r2
 8011f8c:	682a      	ldr	r2, [r5, #0]
 8011f8e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011f92:	6822      	ldr	r2, [r4, #0]
 8011f94:	9201      	str	r2, [sp, #4]
 8011f96:	6862      	ldr	r2, [r4, #4]
 8011f98:	9204      	str	r2, [sp, #16]
 8011f9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f9e:	f1bb 0f00 	cmp.w	fp, #0
 8011fa2:	dc03      	bgt.n	8011fac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8011fa4:	9a05      	ldr	r2, [sp, #20]
 8011fa6:	2a00      	cmp	r2, #0
 8011fa8:	f340 813d 	ble.w	8012226 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8011fac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011fae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011fb2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011fb4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011fb8:	2b00      	cmp	r3, #0
 8011fba:	dd0f      	ble.n	8011fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8011fbc:	140c      	asrs	r4, r1, #16
 8011fbe:	d406      	bmi.n	8011fce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8011fc0:	454c      	cmp	r4, r9
 8011fc2:	da04      	bge.n	8011fce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8011fc4:	1414      	asrs	r4, r2, #16
 8011fc6:	d402      	bmi.n	8011fce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8011fc8:	9d02      	ldr	r5, [sp, #8]
 8011fca:	42ac      	cmp	r4, r5
 8011fcc:	db07      	blt.n	8011fde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011fce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011fd0:	4421      	add	r1, r4
 8011fd2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011fd4:	3b01      	subs	r3, #1
 8011fd6:	4422      	add	r2, r4
 8011fd8:	3002      	adds	r0, #2
 8011fda:	e7ed      	b.n	8011fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 8011fdc:	d018      	beq.n	8012010 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 8011fde:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011fe0:	1e5c      	subs	r4, r3, #1
 8011fe2:	fb05 1504 	mla	r5, r5, r4, r1
 8011fe6:	142d      	asrs	r5, r5, #16
 8011fe8:	d40a      	bmi.n	8012000 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8011fea:	454d      	cmp	r5, r9
 8011fec:	da08      	bge.n	8012000 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8011fee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011ff0:	fb05 2404 	mla	r4, r5, r4, r2
 8011ff4:	1424      	asrs	r4, r4, #16
 8011ff6:	d403      	bmi.n	8012000 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8011ff8:	9d02      	ldr	r5, [sp, #8]
 8011ffa:	42ac      	cmp	r4, r5
 8011ffc:	f2c0 80ae 	blt.w	801215c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 8012000:	2600      	movs	r6, #0
 8012002:	199c      	adds	r4, r3, r6
 8012004:	2c00      	cmp	r4, #0
 8012006:	dc3e      	bgt.n	8012086 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8012008:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801200c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012010:	f1bb 0f00 	cmp.w	fp, #0
 8012014:	f340 8107 	ble.w	8012226 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8012018:	ee30 0a04 	vadd.f32	s0, s0, s8
 801201c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012020:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012024:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012026:	f1bb 0b01 	subs.w	fp, fp, #1
 801202a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801202e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012032:	eeb0 6a62 	vmov.f32	s12, s5
 8012036:	ee61 7a27 	vmul.f32	s15, s2, s15
 801203a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801203e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012042:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012046:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801204a:	eeb0 6a43 	vmov.f32	s12, s6
 801204e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012052:	ee12 2a90 	vmov	r2, s5
 8012056:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801205a:	fb92 f3f3 	sdiv	r3, r2, r3
 801205e:	ee13 2a10 	vmov	r2, s6
 8012062:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012066:	9313      	str	r3, [sp, #76]	; 0x4c
 8012068:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801206a:	fb92 f3f3 	sdiv	r3, r2, r3
 801206e:	9a05      	ldr	r2, [sp, #20]
 8012070:	9314      	str	r3, [sp, #80]	; 0x50
 8012072:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012076:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012078:	eeb0 3a67 	vmov.f32	s6, s15
 801207c:	bf08      	it	eq
 801207e:	4613      	moveq	r3, r2
 8012080:	eef0 2a47 	vmov.f32	s5, s14
 8012084:	e78b      	b.n	8011f9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 8012086:	140c      	asrs	r4, r1, #16
 8012088:	d45a      	bmi.n	8012140 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801208a:	454c      	cmp	r4, r9
 801208c:	da58      	bge.n	8012140 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801208e:	1415      	asrs	r5, r2, #16
 8012090:	d456      	bmi.n	8012140 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012092:	9f02      	ldr	r7, [sp, #8]
 8012094:	42bd      	cmp	r5, r7
 8012096:	da53      	bge.n	8012140 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012098:	fb09 4505 	mla	r5, r9, r5, r4
 801209c:	9c04      	ldr	r4, [sp, #16]
 801209e:	5d64      	ldrb	r4, [r4, r5]
 80120a0:	2cff      	cmp	r4, #255	; 0xff
 80120a2:	d053      	beq.n	801214c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 80120a4:	2c00      	cmp	r4, #0
 80120a6:	d04b      	beq.n	8012140 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80120a8:	9f01      	ldr	r7, [sp, #4]
 80120aa:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 80120ae:	f06f 0501 	mvn.w	r5, #1
 80120b2:	4375      	muls	r5, r6
 80120b4:	9503      	str	r5, [sp, #12]
 80120b6:	5b45      	ldrh	r5, [r0, r5]
 80120b8:	fa1f fc84 	uxth.w	ip, r4
 80120bc:	122f      	asrs	r7, r5, #8
 80120be:	43e4      	mvns	r4, r4
 80120c0:	b2e4      	uxtb	r4, r4
 80120c2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80120c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80120ca:	fb17 f704 	smulbb	r7, r7, r4
 80120ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80120d2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80120d6:	00ed      	lsls	r5, r5, #3
 80120d8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80120dc:	b2ed      	uxtb	r5, r5
 80120de:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80120e2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80120e6:	fb15 f504 	smulbb	r5, r5, r4
 80120ea:	fa5f f888 	uxtb.w	r8, r8
 80120ee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80120f2:	fb08 550c 	mla	r5, r8, ip, r5
 80120f6:	fb1a fa04 	smulbb	sl, sl, r4
 80120fa:	fa1f fe8e 	uxth.w	lr, lr
 80120fe:	b2ad      	uxth	r5, r5
 8012100:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012104:	fb07 a70c 	mla	r7, r7, ip, sl
 8012108:	f10e 0401 	add.w	r4, lr, #1
 801210c:	f105 0a01 	add.w	sl, r5, #1
 8012110:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8012114:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012118:	b2bf      	uxth	r7, r7
 801211a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801211e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012122:	ea4e 0e0a 	orr.w	lr, lr, sl
 8012126:	f107 0a01 	add.w	sl, r7, #1
 801212a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801212e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012132:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012136:	9c03      	ldr	r4, [sp, #12]
 8012138:	ea4e 0e0a 	orr.w	lr, lr, sl
 801213c:	f820 e004 	strh.w	lr, [r0, r4]
 8012140:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012142:	4421      	add	r1, r4
 8012144:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012146:	3e01      	subs	r6, #1
 8012148:	4422      	add	r2, r4
 801214a:	e75a      	b.n	8012002 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801214c:	9c01      	ldr	r4, [sp, #4]
 801214e:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012152:	f06f 0401 	mvn.w	r4, #1
 8012156:	4374      	muls	r4, r6
 8012158:	5305      	strh	r5, [r0, r4]
 801215a:	e7f1      	b.n	8012140 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801215c:	f04f 0800 	mov.w	r8, #0
 8012160:	eba3 0408 	sub.w	r4, r3, r8
 8012164:	2c00      	cmp	r4, #0
 8012166:	f77f af4f 	ble.w	8012008 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801216a:	140c      	asrs	r4, r1, #16
 801216c:	1415      	asrs	r5, r2, #16
 801216e:	fb09 4505 	mla	r5, r9, r5, r4
 8012172:	9c04      	ldr	r4, [sp, #16]
 8012174:	5d64      	ldrb	r4, [r4, r5]
 8012176:	2cff      	cmp	r4, #255	; 0xff
 8012178:	d04f      	beq.n	801221a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801217a:	2c00      	cmp	r4, #0
 801217c:	d046      	beq.n	801220c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 801217e:	9e01      	ldr	r6, [sp, #4]
 8012180:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8012184:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 8012188:	b2a7      	uxth	r7, r4
 801218a:	122e      	asrs	r6, r5, #8
 801218c:	43e4      	mvns	r4, r4
 801218e:	b2e4      	uxtb	r4, r4
 8012190:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012194:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012198:	fb16 f604 	smulbb	r6, r6, r4
 801219c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80121a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80121a4:	00ed      	lsls	r5, r5, #3
 80121a6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80121aa:	b2ed      	uxtb	r5, r5
 80121ac:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80121b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80121b4:	fb15 f504 	smulbb	r5, r5, r4
 80121b8:	fa5f fe8e 	uxtb.w	lr, lr
 80121bc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80121c0:	fb0e 5507 	mla	r5, lr, r7, r5
 80121c4:	fb1a fa04 	smulbb	sl, sl, r4
 80121c8:	fa1f fc8c 	uxth.w	ip, ip
 80121cc:	b2ad      	uxth	r5, r5
 80121ce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80121d2:	fb06 a607 	mla	r6, r6, r7, sl
 80121d6:	f10c 0401 	add.w	r4, ip, #1
 80121da:	f105 0a01 	add.w	sl, r5, #1
 80121de:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80121e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80121e6:	b2b6      	uxth	r6, r6
 80121e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80121ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80121f0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80121f4:	f106 0a01 	add.w	sl, r6, #1
 80121f8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80121fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012200:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012204:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012208:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 801220c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801220e:	4421      	add	r1, r4
 8012210:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012212:	f108 0801 	add.w	r8, r8, #1
 8012216:	4422      	add	r2, r4
 8012218:	e7a2      	b.n	8012160 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801221a:	9c01      	ldr	r4, [sp, #4]
 801221c:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8012220:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 8012224:	e7f2      	b.n	801220c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8012226:	b007      	add	sp, #28
 8012228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801222c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801222c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012230:	b085      	sub	sp, #20
 8012232:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012234:	9203      	str	r2, [sp, #12]
 8012236:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801223a:	9201      	str	r2, [sp, #4]
 801223c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012240:	9100      	str	r1, [sp, #0]
 8012242:	6841      	ldr	r1, [r0, #4]
 8012244:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8012248:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 801224c:	fb01 2404 	mla	r4, r1, r4, r2
 8012250:	6802      	ldr	r2, [r0, #0]
 8012252:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012256:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8012258:	fa1f fe85 	uxth.w	lr, r5
 801225c:	6812      	ldr	r2, [r2, #0]
 801225e:	9202      	str	r2, [sp, #8]
 8012260:	43ed      	mvns	r5, r5
 8012262:	b2ed      	uxtb	r5, r5
 8012264:	9a00      	ldr	r2, [sp, #0]
 8012266:	2a00      	cmp	r2, #0
 8012268:	dc03      	bgt.n	8012272 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 801226a:	9a03      	ldr	r2, [sp, #12]
 801226c:	2a00      	cmp	r2, #0
 801226e:	f340 8117 	ble.w	80124a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8012272:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012274:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012278:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801227a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801227e:	2b00      	cmp	r3, #0
 8012280:	dd0f      	ble.n	80122a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8012282:	1408      	asrs	r0, r1, #16
 8012284:	d406      	bmi.n	8012294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8012286:	4540      	cmp	r0, r8
 8012288:	da04      	bge.n	8012294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801228a:	1410      	asrs	r0, r2, #16
 801228c:	d402      	bmi.n	8012294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801228e:	9e01      	ldr	r6, [sp, #4]
 8012290:	42b0      	cmp	r0, r6
 8012292:	db07      	blt.n	80122a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012294:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012296:	4401      	add	r1, r0
 8012298:	9812      	ldr	r0, [sp, #72]	; 0x48
 801229a:	3b01      	subs	r3, #1
 801229c:	4402      	add	r2, r0
 801229e:	3402      	adds	r4, #2
 80122a0:	e7ed      	b.n	801227e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 80122a2:	d069      	beq.n	8012378 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 80122a4:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80122a6:	1e58      	subs	r0, r3, #1
 80122a8:	fb06 1600 	mla	r6, r6, r0, r1
 80122ac:	1436      	asrs	r6, r6, #16
 80122ae:	d459      	bmi.n	8012364 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80122b0:	4546      	cmp	r6, r8
 80122b2:	da57      	bge.n	8012364 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80122b4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80122b6:	fb06 2000 	mla	r0, r6, r0, r2
 80122ba:	1400      	asrs	r0, r0, #16
 80122bc:	d452      	bmi.n	8012364 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80122be:	9e01      	ldr	r6, [sp, #4]
 80122c0:	42b0      	cmp	r0, r6
 80122c2:	da4f      	bge.n	8012364 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80122c4:	469a      	mov	sl, r3
 80122c6:	46a3      	mov	fp, r4
 80122c8:	f1ba 0f00 	cmp.w	sl, #0
 80122cc:	dd50      	ble.n	8012370 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 80122ce:	140e      	asrs	r6, r1, #16
 80122d0:	1410      	asrs	r0, r2, #16
 80122d2:	fb08 6000 	mla	r0, r8, r0, r6
 80122d6:	9e02      	ldr	r6, [sp, #8]
 80122d8:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80122dc:	f8bb 6000 	ldrh.w	r6, [fp]
 80122e0:	1237      	asrs	r7, r6, #8
 80122e2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80122e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80122ea:	fb17 f705 	smulbb	r7, r7, r5
 80122ee:	ea4f 09e6 	mov.w	r9, r6, asr #3
 80122f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80122f6:	00f6      	lsls	r6, r6, #3
 80122f8:	fb0c 7c0e 	mla	ip, ip, lr, r7
 80122fc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012300:	10c7      	asrs	r7, r0, #3
 8012302:	b2f6      	uxtb	r6, r6
 8012304:	00c0      	lsls	r0, r0, #3
 8012306:	fb19 f905 	smulbb	r9, r9, r5
 801230a:	fb16 f605 	smulbb	r6, r6, r5
 801230e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012312:	b2c0      	uxtb	r0, r0
 8012314:	fa1f fc8c 	uxth.w	ip, ip
 8012318:	fb07 970e 	mla	r7, r7, lr, r9
 801231c:	fb00 600e 	mla	r0, r0, lr, r6
 8012320:	b280      	uxth	r0, r0
 8012322:	b2bf      	uxth	r7, r7
 8012324:	f10c 0601 	add.w	r6, ip, #1
 8012328:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801232c:	f107 0901 	add.w	r9, r7, #1
 8012330:	1c46      	adds	r6, r0, #1
 8012332:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8012336:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801233a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801233c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012340:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012344:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012348:	ea4c 0c06 	orr.w	ip, ip, r6
 801234c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012350:	4401      	add	r1, r0
 8012352:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012354:	ea4c 0c09 	orr.w	ip, ip, r9
 8012358:	f82b cb02 	strh.w	ip, [fp], #2
 801235c:	4402      	add	r2, r0
 801235e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8012362:	e7b1      	b.n	80122c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012364:	f04f 0900 	mov.w	r9, #0
 8012368:	eb03 0009 	add.w	r0, r3, r9
 801236c:	2800      	cmp	r0, #0
 801236e:	dc41      	bgt.n	80123f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 8012370:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012374:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012378:	9b00      	ldr	r3, [sp, #0]
 801237a:	2b00      	cmp	r3, #0
 801237c:	f340 8090 	ble.w	80124a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8012380:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012384:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012388:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801238c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801238e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012392:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012396:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801239a:	eef0 6a62 	vmov.f32	s13, s5
 801239e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80123a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80123a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80123aa:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80123ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80123b2:	eef0 6a43 	vmov.f32	s13, s6
 80123b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80123ba:	ee12 2a90 	vmov	r2, s5
 80123be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80123c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80123c6:	ee13 2a10 	vmov	r2, s6
 80123ca:	9311      	str	r3, [sp, #68]	; 0x44
 80123cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80123ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80123d2:	9312      	str	r3, [sp, #72]	; 0x48
 80123d4:	9b00      	ldr	r3, [sp, #0]
 80123d6:	9a03      	ldr	r2, [sp, #12]
 80123d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80123dc:	3b01      	subs	r3, #1
 80123de:	9300      	str	r3, [sp, #0]
 80123e0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80123e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80123e6:	eeb0 3a67 	vmov.f32	s6, s15
 80123ea:	bf08      	it	eq
 80123ec:	4613      	moveq	r3, r2
 80123ee:	eef0 2a47 	vmov.f32	s5, s14
 80123f2:	e737      	b.n	8012264 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 80123f4:	140e      	asrs	r6, r1, #16
 80123f6:	d44c      	bmi.n	8012492 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80123f8:	4546      	cmp	r6, r8
 80123fa:	da4a      	bge.n	8012492 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80123fc:	1410      	asrs	r0, r2, #16
 80123fe:	d448      	bmi.n	8012492 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8012400:	9f01      	ldr	r7, [sp, #4]
 8012402:	42b8      	cmp	r0, r7
 8012404:	da45      	bge.n	8012492 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8012406:	fb08 6000 	mla	r0, r8, r0, r6
 801240a:	9e02      	ldr	r6, [sp, #8]
 801240c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8012410:	f06f 0601 	mvn.w	r6, #1
 8012414:	fb06 fb09 	mul.w	fp, r6, r9
 8012418:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801241c:	f834 600b 	ldrh.w	r6, [r4, fp]
 8012420:	1237      	asrs	r7, r6, #8
 8012422:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012426:	fb17 f705 	smulbb	r7, r7, r5
 801242a:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 801242e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012432:	00f6      	lsls	r6, r6, #3
 8012434:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8012438:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801243c:	10c7      	asrs	r7, r0, #3
 801243e:	b2f6      	uxtb	r6, r6
 8012440:	00c0      	lsls	r0, r0, #3
 8012442:	fb1a fa05 	smulbb	sl, sl, r5
 8012446:	fb16 f605 	smulbb	r6, r6, r5
 801244a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801244e:	b2c0      	uxtb	r0, r0
 8012450:	fa1f fc8c 	uxth.w	ip, ip
 8012454:	fb07 a70e 	mla	r7, r7, lr, sl
 8012458:	fb00 600e 	mla	r0, r0, lr, r6
 801245c:	b2bf      	uxth	r7, r7
 801245e:	b280      	uxth	r0, r0
 8012460:	f10c 0601 	add.w	r6, ip, #1
 8012464:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8012468:	f107 0a01 	add.w	sl, r7, #1
 801246c:	1c46      	adds	r6, r0, #1
 801246e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8012472:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012476:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801247a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801247e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012482:	ea4c 0c06 	orr.w	ip, ip, r6
 8012486:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801248a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801248e:	f824 c00b 	strh.w	ip, [r4, fp]
 8012492:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012494:	4401      	add	r1, r0
 8012496:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012498:	f109 39ff 	add.w	r9, r9, #4294967295
 801249c:	4402      	add	r2, r0
 801249e:	e763      	b.n	8012368 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 80124a0:	b005      	add	sp, #20
 80124a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080124a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80124a6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80124ac:	9201      	str	r2, [sp, #4]
 80124ae:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 80124b2:	6844      	ldr	r4, [r0, #4]
 80124b4:	6800      	ldr	r0, [r0, #0]
 80124b6:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 80124ba:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 80124be:	fb04 2505 	mla	r5, r4, r5, r2
 80124c2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80124c6:	9816      	ldr	r0, [sp, #88]	; 0x58
 80124c8:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 80124cc:	6802      	ldr	r2, [r0, #0]
 80124ce:	9200      	str	r2, [sp, #0]
 80124d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80124d4:	2900      	cmp	r1, #0
 80124d6:	dc03      	bgt.n	80124e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80124d8:	9a01      	ldr	r2, [sp, #4]
 80124da:	2a00      	cmp	r2, #0
 80124dc:	f340 8095 	ble.w	801260a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 80124e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80124e2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80124e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80124e8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80124ec:	2b00      	cmp	r3, #0
 80124ee:	dd0e      	ble.n	801250e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80124f0:	ea5f 4824 	movs.w	r8, r4, asr #16
 80124f4:	d406      	bmi.n	8012504 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 80124f6:	45e0      	cmp	r8, ip
 80124f8:	da04      	bge.n	8012504 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 80124fa:	ea5f 4820 	movs.w	r8, r0, asr #16
 80124fe:	d401      	bmi.n	8012504 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8012500:	45f0      	cmp	r8, lr
 8012502:	db05      	blt.n	8012510 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012504:	443c      	add	r4, r7
 8012506:	4430      	add	r0, r6
 8012508:	3b01      	subs	r3, #1
 801250a:	3502      	adds	r5, #2
 801250c:	e7ee      	b.n	80124ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 801250e:	d010      	beq.n	8012532 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8012510:	f103 38ff 	add.w	r8, r3, #4294967295
 8012514:	fb07 4908 	mla	r9, r7, r8, r4
 8012518:	ea5f 4929 	movs.w	r9, r9, asr #16
 801251c:	d53d      	bpl.n	801259a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801251e:	4698      	mov	r8, r3
 8012520:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 8012524:	f1b8 0f00 	cmp.w	r8, #0
 8012528:	dc55      	bgt.n	80125d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 801252a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801252e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012532:	2900      	cmp	r1, #0
 8012534:	dd69      	ble.n	801260a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8012536:	ee30 0a04 	vadd.f32	s0, s0, s8
 801253a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801253e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012542:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012544:	3901      	subs	r1, #1
 8012546:	ee31 1a05 	vadd.f32	s2, s2, s10
 801254a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801254e:	eeb0 6a62 	vmov.f32	s12, s5
 8012552:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012556:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801255a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801255e:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8012562:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012566:	eeb0 6a43 	vmov.f32	s12, s6
 801256a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801256e:	ee12 2a90 	vmov	r2, s5
 8012572:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012576:	fb92 f7f3 	sdiv	r7, r2, r3
 801257a:	ee13 2a10 	vmov	r2, s6
 801257e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012582:	fb92 f6f3 	sdiv	r6, r2, r3
 8012586:	9a01      	ldr	r2, [sp, #4]
 8012588:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 801258c:	bf08      	it	eq
 801258e:	4613      	moveq	r3, r2
 8012590:	eeb0 3a67 	vmov.f32	s6, s15
 8012594:	eef0 2a47 	vmov.f32	s5, s14
 8012598:	e79c      	b.n	80124d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 801259a:	45e1      	cmp	r9, ip
 801259c:	dabf      	bge.n	801251e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801259e:	fb06 0808 	mla	r8, r6, r8, r0
 80125a2:	ea5f 4828 	movs.w	r8, r8, asr #16
 80125a6:	d4ba      	bmi.n	801251e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80125a8:	45f0      	cmp	r8, lr
 80125aa:	dab8      	bge.n	801251e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80125ac:	4698      	mov	r8, r3
 80125ae:	46aa      	mov	sl, r5
 80125b0:	f1b8 0f00 	cmp.w	r8, #0
 80125b4:	ddb9      	ble.n	801252a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 80125b6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80125ba:	ea4f 4b24 	mov.w	fp, r4, asr #16
 80125be:	fb0c b909 	mla	r9, ip, r9, fp
 80125c2:	9a00      	ldr	r2, [sp, #0]
 80125c4:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 80125c8:	f82a 9b02 	strh.w	r9, [sl], #2
 80125cc:	443c      	add	r4, r7
 80125ce:	4430      	add	r0, r6
 80125d0:	f108 38ff 	add.w	r8, r8, #4294967295
 80125d4:	e7ec      	b.n	80125b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 80125d6:	ea5f 4a24 	movs.w	sl, r4, asr #16
 80125da:	d411      	bmi.n	8012600 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80125dc:	45e2      	cmp	sl, ip
 80125de:	da0f      	bge.n	8012600 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80125e0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80125e4:	d40c      	bmi.n	8012600 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80125e6:	45f1      	cmp	r9, lr
 80125e8:	da0a      	bge.n	8012600 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80125ea:	fb0c a909 	mla	r9, ip, r9, sl
 80125ee:	9a00      	ldr	r2, [sp, #0]
 80125f0:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 80125f4:	f06f 0201 	mvn.w	r2, #1
 80125f8:	fb02 f908 	mul.w	r9, r2, r8
 80125fc:	f82b a009 	strh.w	sl, [fp, r9]
 8012600:	443c      	add	r4, r7
 8012602:	4430      	add	r0, r6
 8012604:	f108 38ff 	add.w	r8, r8, #4294967295
 8012608:	e78c      	b.n	8012524 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 801260a:	b003      	add	sp, #12
 801260c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012610 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012614:	b087      	sub	sp, #28
 8012616:	468b      	mov	fp, r1
 8012618:	9204      	str	r2, [sp, #16]
 801261a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 801261e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012620:	9201      	str	r2, [sp, #4]
 8012622:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8012626:	9205      	str	r2, [sp, #20]
 8012628:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801262c:	6841      	ldr	r1, [r0, #4]
 801262e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8012632:	fb01 2404 	mla	r4, r1, r4, r2
 8012636:	6802      	ldr	r2, [r0, #0]
 8012638:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801263c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801263e:	6812      	ldr	r2, [r2, #0]
 8012640:	9203      	str	r2, [sp, #12]
 8012642:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012646:	f1bb 0f00 	cmp.w	fp, #0
 801264a:	dc03      	bgt.n	8012654 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 801264c:	9a04      	ldr	r2, [sp, #16]
 801264e:	2a00      	cmp	r2, #0
 8012650:	f340 812c 	ble.w	80128ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8012654:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012656:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801265a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801265c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012660:	2b00      	cmp	r3, #0
 8012662:	dd0f      	ble.n	8012684 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8012664:	1402      	asrs	r2, r0, #16
 8012666:	d406      	bmi.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8012668:	4542      	cmp	r2, r8
 801266a:	da04      	bge.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801266c:	140a      	asrs	r2, r1, #16
 801266e:	d402      	bmi.n	8012676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8012670:	9d01      	ldr	r5, [sp, #4]
 8012672:	42aa      	cmp	r2, r5
 8012674:	db07      	blt.n	8012686 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8012676:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012678:	4410      	add	r0, r2
 801267a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801267c:	3b01      	subs	r3, #1
 801267e:	4411      	add	r1, r2
 8012680:	3402      	adds	r4, #2
 8012682:	e7ed      	b.n	8012660 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8012684:	d01a      	beq.n	80126bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8012686:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012688:	1e5a      	subs	r2, r3, #1
 801268a:	fb05 0502 	mla	r5, r5, r2, r0
 801268e:	142d      	asrs	r5, r5, #16
 8012690:	d40a      	bmi.n	80126a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8012692:	4545      	cmp	r5, r8
 8012694:	da08      	bge.n	80126a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8012696:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012698:	fb05 1202 	mla	r2, r5, r2, r1
 801269c:	1412      	asrs	r2, r2, #16
 801269e:	d403      	bmi.n	80126a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80126a0:	9d01      	ldr	r5, [sp, #4]
 80126a2:	42aa      	cmp	r2, r5
 80126a4:	f2c0 80a6 	blt.w	80127f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 80126a8:	f04f 0c00 	mov.w	ip, #0
 80126ac:	eb03 020c 	add.w	r2, r3, ip
 80126b0:	2a00      	cmp	r2, #0
 80126b2:	dc3e      	bgt.n	8012732 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 80126b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80126b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80126bc:	f1bb 0f00 	cmp.w	fp, #0
 80126c0:	f340 80f4 	ble.w	80128ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 80126c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80126c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80126cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80126d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80126d2:	f1bb 0b01 	subs.w	fp, fp, #1
 80126d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80126da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80126de:	eeb0 6a62 	vmov.f32	s12, s5
 80126e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80126e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80126ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80126ee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80126f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80126f6:	eeb0 6a43 	vmov.f32	s12, s6
 80126fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80126fe:	ee12 2a90 	vmov	r2, s5
 8012702:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012706:	fb92 f3f3 	sdiv	r3, r2, r3
 801270a:	ee13 2a10 	vmov	r2, s6
 801270e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012712:	9313      	str	r3, [sp, #76]	; 0x4c
 8012714:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012716:	fb92 f3f3 	sdiv	r3, r2, r3
 801271a:	9a04      	ldr	r2, [sp, #16]
 801271c:	9314      	str	r3, [sp, #80]	; 0x50
 801271e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012722:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012724:	eeb0 3a67 	vmov.f32	s6, s15
 8012728:	bf08      	it	eq
 801272a:	4613      	moveq	r3, r2
 801272c:	eef0 2a47 	vmov.f32	s5, s14
 8012730:	e789      	b.n	8012646 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8012732:	1405      	asrs	r5, r0, #16
 8012734:	d457      	bmi.n	80127e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012736:	4545      	cmp	r5, r8
 8012738:	da55      	bge.n	80127e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801273a:	140a      	asrs	r2, r1, #16
 801273c:	d453      	bmi.n	80127e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801273e:	9e01      	ldr	r6, [sp, #4]
 8012740:	42b2      	cmp	r2, r6
 8012742:	da50      	bge.n	80127e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012744:	fb08 5202 	mla	r2, r8, r2, r5
 8012748:	9d03      	ldr	r5, [sp, #12]
 801274a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801274e:	0e2e      	lsrs	r6, r5, #24
 8012750:	d049      	beq.n	80127e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012752:	f06f 0201 	mvn.w	r2, #1
 8012756:	fb02 f20c 	mul.w	r2, r2, ip
 801275a:	9202      	str	r2, [sp, #8]
 801275c:	f834 e002 	ldrh.w	lr, [r4, r2]
 8012760:	9a05      	ldr	r2, [sp, #20]
 8012762:	4356      	muls	r6, r2
 8012764:	1c72      	adds	r2, r6, #1
 8012766:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801276a:	1212      	asrs	r2, r2, #8
 801276c:	fa1f f982 	uxth.w	r9, r2
 8012770:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012774:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012778:	43d2      	mvns	r2, r2
 801277a:	b2d2      	uxtb	r2, r2
 801277c:	fb16 f609 	smulbb	r6, r6, r9
 8012780:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012784:	fb07 6702 	mla	r7, r7, r2, r6
 8012788:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801278c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012790:	b2ed      	uxtb	r5, r5
 8012792:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012796:	fa5f fe8e 	uxtb.w	lr, lr
 801279a:	fb15 f509 	smulbb	r5, r5, r9
 801279e:	fb0e 5502 	mla	r5, lr, r2, r5
 80127a2:	b2bf      	uxth	r7, r7
 80127a4:	fb1a fa09 	smulbb	sl, sl, r9
 80127a8:	b2ad      	uxth	r5, r5
 80127aa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80127ae:	fb06 a602 	mla	r6, r6, r2, sl
 80127b2:	1c7a      	adds	r2, r7, #1
 80127b4:	f105 0a01 	add.w	sl, r5, #1
 80127b8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80127bc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80127c0:	b2b6      	uxth	r6, r6
 80127c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80127c6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80127ca:	ea47 070a 	orr.w	r7, r7, sl
 80127ce:	f106 0a01 	add.w	sl, r6, #1
 80127d2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80127d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80127da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80127de:	9a02      	ldr	r2, [sp, #8]
 80127e0:	ea47 070a 	orr.w	r7, r7, sl
 80127e4:	52a7      	strh	r7, [r4, r2]
 80127e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80127e8:	4410      	add	r0, r2
 80127ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80127ec:	f10c 3cff 	add.w	ip, ip, #4294967295
 80127f0:	4411      	add	r1, r2
 80127f2:	e75b      	b.n	80126ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80127f4:	f04f 0e00 	mov.w	lr, #0
 80127f8:	eba3 020e 	sub.w	r2, r3, lr
 80127fc:	2a00      	cmp	r2, #0
 80127fe:	f77f af59 	ble.w	80126b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8012802:	1405      	asrs	r5, r0, #16
 8012804:	140a      	asrs	r2, r1, #16
 8012806:	fb08 5202 	mla	r2, r8, r2, r5
 801280a:	9d03      	ldr	r5, [sp, #12]
 801280c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8012810:	0e2e      	lsrs	r6, r5, #24
 8012812:	d044      	beq.n	801289e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 8012814:	9a05      	ldr	r2, [sp, #20]
 8012816:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801281a:	4356      	muls	r6, r2
 801281c:	1c72      	adds	r2, r6, #1
 801281e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012822:	1212      	asrs	r2, r2, #8
 8012824:	fa1f f982 	uxth.w	r9, r2
 8012828:	ea4f 272c 	mov.w	r7, ip, asr #8
 801282c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012830:	43d2      	mvns	r2, r2
 8012832:	b2d2      	uxtb	r2, r2
 8012834:	fb16 f609 	smulbb	r6, r6, r9
 8012838:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801283c:	fb07 6702 	mla	r7, r7, r2, r6
 8012840:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012844:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012848:	b2ed      	uxtb	r5, r5
 801284a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801284e:	fa5f fc8c 	uxtb.w	ip, ip
 8012852:	fb15 f509 	smulbb	r5, r5, r9
 8012856:	fb0c 5502 	mla	r5, ip, r2, r5
 801285a:	b2bf      	uxth	r7, r7
 801285c:	fb1a fa09 	smulbb	sl, sl, r9
 8012860:	b2ad      	uxth	r5, r5
 8012862:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012866:	fb06 a602 	mla	r6, r6, r2, sl
 801286a:	1c7a      	adds	r2, r7, #1
 801286c:	f105 0a01 	add.w	sl, r5, #1
 8012870:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012874:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012878:	b2b6      	uxth	r6, r6
 801287a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801287e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012882:	ea47 070a 	orr.w	r7, r7, sl
 8012886:	f106 0a01 	add.w	sl, r6, #1
 801288a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801288e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012892:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012896:	ea47 070a 	orr.w	r7, r7, sl
 801289a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801289e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80128a0:	4410      	add	r0, r2
 80128a2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80128a4:	f10e 0e01 	add.w	lr, lr, #1
 80128a8:	4411      	add	r1, r2
 80128aa:	e7a5      	b.n	80127f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 80128ac:	b007      	add	sp, #28
 80128ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080128b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80128b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128b8:	b087      	sub	sp, #28
 80128ba:	468b      	mov	fp, r1
 80128bc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80128be:	9205      	str	r2, [sp, #20]
 80128c0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80128c4:	9201      	str	r2, [sp, #4]
 80128c6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80128ca:	6861      	ldr	r1, [r4, #4]
 80128cc:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 80128d0:	fb01 2000 	mla	r0, r1, r0, r2
 80128d4:	6822      	ldr	r2, [r4, #0]
 80128d6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80128da:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80128dc:	6812      	ldr	r2, [r2, #0]
 80128de:	9203      	str	r2, [sp, #12]
 80128e0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80128e4:	f1bb 0f00 	cmp.w	fp, #0
 80128e8:	dc03      	bgt.n	80128f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 80128ea:	9a05      	ldr	r2, [sp, #20]
 80128ec:	2a00      	cmp	r2, #0
 80128ee:	f340 814b 	ble.w	8012b88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 80128f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80128f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80128f8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80128fa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80128fe:	2b00      	cmp	r3, #0
 8012900:	dd0f      	ble.n	8012922 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8012902:	140c      	asrs	r4, r1, #16
 8012904:	d406      	bmi.n	8012914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8012906:	454c      	cmp	r4, r9
 8012908:	da04      	bge.n	8012914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801290a:	1414      	asrs	r4, r2, #16
 801290c:	d402      	bmi.n	8012914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801290e:	9d01      	ldr	r5, [sp, #4]
 8012910:	42ac      	cmp	r4, r5
 8012912:	db07      	blt.n	8012924 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8012914:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012916:	4421      	add	r1, r4
 8012918:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801291a:	3b01      	subs	r3, #1
 801291c:	4422      	add	r2, r4
 801291e:	3002      	adds	r0, #2
 8012920:	e7ed      	b.n	80128fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8012922:	d018      	beq.n	8012956 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 8012924:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012926:	1e5c      	subs	r4, r3, #1
 8012928:	fb05 1504 	mla	r5, r5, r4, r1
 801292c:	142d      	asrs	r5, r5, #16
 801292e:	d40a      	bmi.n	8012946 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8012930:	454d      	cmp	r5, r9
 8012932:	da08      	bge.n	8012946 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8012934:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012936:	fb05 2404 	mla	r4, r5, r4, r2
 801293a:	1424      	asrs	r4, r4, #16
 801293c:	d403      	bmi.n	8012946 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801293e:	9d01      	ldr	r5, [sp, #4]
 8012940:	42ac      	cmp	r4, r5
 8012942:	f2c0 80bb 	blt.w	8012abc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 8012946:	2700      	movs	r7, #0
 8012948:	19dc      	adds	r4, r3, r7
 801294a:	2c00      	cmp	r4, #0
 801294c:	dc3e      	bgt.n	80129cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 801294e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012952:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012956:	f1bb 0f00 	cmp.w	fp, #0
 801295a:	f340 8115 	ble.w	8012b88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 801295e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012962:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012966:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801296a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801296c:	f1bb 0b01 	subs.w	fp, fp, #1
 8012970:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012974:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012978:	eeb0 6a62 	vmov.f32	s12, s5
 801297c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012980:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012984:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012988:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801298c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012990:	eeb0 6a43 	vmov.f32	s12, s6
 8012994:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012998:	ee12 2a90 	vmov	r2, s5
 801299c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80129a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80129a4:	ee13 2a10 	vmov	r2, s6
 80129a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80129ac:	9313      	str	r3, [sp, #76]	; 0x4c
 80129ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80129b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80129b4:	9a05      	ldr	r2, [sp, #20]
 80129b6:	9314      	str	r3, [sp, #80]	; 0x50
 80129b8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80129bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80129be:	eeb0 3a67 	vmov.f32	s6, s15
 80129c2:	bf08      	it	eq
 80129c4:	4613      	moveq	r3, r2
 80129c6:	eef0 2a47 	vmov.f32	s5, s14
 80129ca:	e78b      	b.n	80128e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 80129cc:	140d      	asrs	r5, r1, #16
 80129ce:	d45c      	bmi.n	8012a8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80129d0:	454d      	cmp	r5, r9
 80129d2:	da5a      	bge.n	8012a8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80129d4:	1414      	asrs	r4, r2, #16
 80129d6:	d458      	bmi.n	8012a8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80129d8:	9e01      	ldr	r6, [sp, #4]
 80129da:	42b4      	cmp	r4, r6
 80129dc:	da55      	bge.n	8012a8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80129de:	fb09 5404 	mla	r4, r9, r4, r5
 80129e2:	9d03      	ldr	r5, [sp, #12]
 80129e4:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 80129e8:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 80129ec:	d04d      	beq.n	8012a8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80129ee:	0a26      	lsrs	r6, r4, #8
 80129f0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80129f4:	fa5f f58e 	uxtb.w	r5, lr
 80129f8:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 80129fc:	9604      	str	r6, [sp, #16]
 80129fe:	d04a      	beq.n	8012a96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8012a00:	f06f 0601 	mvn.w	r6, #1
 8012a04:	437e      	muls	r6, r7
 8012a06:	fa1f fa85 	uxth.w	sl, r5
 8012a0a:	f830 8006 	ldrh.w	r8, [r0, r6]
 8012a0e:	9602      	str	r6, [sp, #8]
 8012a10:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012a14:	43ed      	mvns	r5, r5
 8012a16:	fa5f fc8c 	uxtb.w	ip, ip
 8012a1a:	b2ed      	uxtb	r5, r5
 8012a1c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012a20:	fb1c fc0a 	smulbb	ip, ip, sl
 8012a24:	fb0e cc05 	mla	ip, lr, r5, ip
 8012a28:	b2e4      	uxtb	r4, r4
 8012a2a:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8012a2e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012a32:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8012a36:	fa5f f888 	uxtb.w	r8, r8
 8012a3a:	fb14 f40a 	smulbb	r4, r4, sl
 8012a3e:	fb08 4405 	mla	r4, r8, r5, r4
 8012a42:	b2a4      	uxth	r4, r4
 8012a44:	fa1f fc8c 	uxth.w	ip, ip
 8012a48:	fb16 f60a 	smulbb	r6, r6, sl
 8012a4c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012a50:	fb0e 6e05 	mla	lr, lr, r5, r6
 8012a54:	1c66      	adds	r6, r4, #1
 8012a56:	f10c 0501 	add.w	r5, ip, #1
 8012a5a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012a5e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012a62:	fa1f fe8e 	uxth.w	lr, lr
 8012a66:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012a6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012a6e:	ea4c 0c06 	orr.w	ip, ip, r6
 8012a72:	f10e 0601 	add.w	r6, lr, #1
 8012a76:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8012a7a:	0976      	lsrs	r6, r6, #5
 8012a7c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012a80:	9c02      	ldr	r4, [sp, #8]
 8012a82:	ea4c 0c06 	orr.w	ip, ip, r6
 8012a86:	f820 c004 	strh.w	ip, [r0, r4]
 8012a8a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012a8c:	4421      	add	r1, r4
 8012a8e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012a90:	3f01      	subs	r7, #1
 8012a92:	4422      	add	r2, r4
 8012a94:	e758      	b.n	8012948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8012a96:	4e3e      	ldr	r6, [pc, #248]	; (8012b90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8012a98:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012a9c:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8012aa0:	ea4c 0c04 	orr.w	ip, ip, r4
 8012aa4:	9c04      	ldr	r4, [sp, #16]
 8012aa6:	f06f 0501 	mvn.w	r5, #1
 8012aaa:	00e6      	lsls	r6, r4, #3
 8012aac:	437d      	muls	r5, r7
 8012aae:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8012ab2:	ea4c 0c04 	orr.w	ip, ip, r4
 8012ab6:	f820 c005 	strh.w	ip, [r0, r5]
 8012aba:	e7e6      	b.n	8012a8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012abc:	f04f 0800 	mov.w	r8, #0
 8012ac0:	eba3 0408 	sub.w	r4, r3, r8
 8012ac4:	2c00      	cmp	r4, #0
 8012ac6:	f77f af42 	ble.w	801294e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8012aca:	140d      	asrs	r5, r1, #16
 8012acc:	1414      	asrs	r4, r2, #16
 8012ace:	fb09 5404 	mla	r4, r9, r4, r5
 8012ad2:	9d03      	ldr	r5, [sp, #12]
 8012ad4:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8012ad8:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8012adc:	d042      	beq.n	8012b64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8012ade:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8012ae2:	fa5f f58c 	uxtb.w	r5, ip
 8012ae6:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8012aea:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8012aee:	d040      	beq.n	8012b72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8012af0:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8012af4:	fa1f fa85 	uxth.w	sl, r5
 8012af8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012afc:	43ed      	mvns	r5, r5
 8012afe:	b2ff      	uxtb	r7, r7
 8012b00:	b2ed      	uxtb	r5, r5
 8012b02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012b06:	fb17 f70a 	smulbb	r7, r7, sl
 8012b0a:	fb0c 7705 	mla	r7, ip, r5, r7
 8012b0e:	b2e4      	uxtb	r4, r4
 8012b10:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8012b14:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012b18:	fa5f fe8e 	uxtb.w	lr, lr
 8012b1c:	fb14 f40a 	smulbb	r4, r4, sl
 8012b20:	fb0e 4405 	mla	r4, lr, r5, r4
 8012b24:	b2f6      	uxtb	r6, r6
 8012b26:	b2bf      	uxth	r7, r7
 8012b28:	fb16 f60a 	smulbb	r6, r6, sl
 8012b2c:	b2a4      	uxth	r4, r4
 8012b2e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012b32:	fb0c 6c05 	mla	ip, ip, r5, r6
 8012b36:	1c7d      	adds	r5, r7, #1
 8012b38:	1c66      	adds	r6, r4, #1
 8012b3a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8012b3e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012b42:	fa1f fc8c 	uxth.w	ip, ip
 8012b46:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012b4a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012b4e:	4337      	orrs	r7, r6
 8012b50:	f10c 0601 	add.w	r6, ip, #1
 8012b54:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012b58:	0976      	lsrs	r6, r6, #5
 8012b5a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012b5e:	4337      	orrs	r7, r6
 8012b60:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8012b64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012b66:	4421      	add	r1, r4
 8012b68:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012b6a:	f108 0801 	add.w	r8, r8, #1
 8012b6e:	4422      	add	r2, r4
 8012b70:	e7a6      	b.n	8012ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 8012b72:	4d07      	ldr	r5, [pc, #28]	; (8012b90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8012b74:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012b78:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8012b7c:	00f6      	lsls	r6, r6, #3
 8012b7e:	4327      	orrs	r7, r4
 8012b80:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8012b84:	4327      	orrs	r7, r4
 8012b86:	e7eb      	b.n	8012b60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 8012b88:	b007      	add	sp, #28
 8012b8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b8e:	bf00      	nop
 8012b90:	fffff800 	.word	0xfffff800

08012b94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b98:	b087      	sub	sp, #28
 8012b9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012b9e:	9204      	str	r2, [sp, #16]
 8012ba0:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 8012ba4:	9200      	str	r2, [sp, #0]
 8012ba6:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8012baa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8012bac:	9201      	str	r2, [sp, #4]
 8012bae:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8012bb2:	9205      	str	r2, [sp, #20]
 8012bb4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8012bb8:	6860      	ldr	r0, [r4, #4]
 8012bba:	fb00 2505 	mla	r5, r0, r5, r2
 8012bbe:	6822      	ldr	r2, [r4, #0]
 8012bc0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012bc4:	9a00      	ldr	r2, [sp, #0]
 8012bc6:	3201      	adds	r2, #1
 8012bc8:	f022 0201 	bic.w	r2, r2, #1
 8012bcc:	9202      	str	r2, [sp, #8]
 8012bce:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012bd0:	6812      	ldr	r2, [r2, #0]
 8012bd2:	9203      	str	r2, [sp, #12]
 8012bd4:	2900      	cmp	r1, #0
 8012bd6:	dc03      	bgt.n	8012be0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8012bd8:	9a04      	ldr	r2, [sp, #16]
 8012bda:	2a00      	cmp	r2, #0
 8012bdc:	f340 814c 	ble.w	8012e78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8012be0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012be2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8012be6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012be8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012bec:	2b00      	cmp	r3, #0
 8012bee:	dd10      	ble.n	8012c12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8012bf0:	1422      	asrs	r2, r4, #16
 8012bf2:	d407      	bmi.n	8012c04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8012bf4:	9e00      	ldr	r6, [sp, #0]
 8012bf6:	4296      	cmp	r6, r2
 8012bf8:	dd04      	ble.n	8012c04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8012bfa:	1402      	asrs	r2, r0, #16
 8012bfc:	d402      	bmi.n	8012c04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8012bfe:	9e01      	ldr	r6, [sp, #4]
 8012c00:	42b2      	cmp	r2, r6
 8012c02:	db07      	blt.n	8012c14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x80>
 8012c04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012c06:	4414      	add	r4, r2
 8012c08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012c0a:	3b01      	subs	r3, #1
 8012c0c:	4410      	add	r0, r2
 8012c0e:	3502      	adds	r5, #2
 8012c10:	e7ec      	b.n	8012bec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 8012c12:	d00f      	beq.n	8012c34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8012c14:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012c16:	1e5a      	subs	r2, r3, #1
 8012c18:	fb06 4602 	mla	r6, r6, r2, r4
 8012c1c:	1436      	asrs	r6, r6, #16
 8012c1e:	d542      	bpl.n	8012ca6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x112>
 8012c20:	469a      	mov	sl, r3
 8012c22:	46a9      	mov	r9, r5
 8012c24:	f1ba 0f00 	cmp.w	sl, #0
 8012c28:	f300 80b5 	bgt.w	8012d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8012c2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012c30:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012c34:	2900      	cmp	r1, #0
 8012c36:	f340 811f 	ble.w	8012e78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8012c3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012c3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012c42:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012c46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012c48:	3901      	subs	r1, #1
 8012c4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012c4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012c52:	eeb0 6a62 	vmov.f32	s12, s5
 8012c56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012c5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012c62:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012c66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012c6a:	eeb0 6a43 	vmov.f32	s12, s6
 8012c6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012c72:	ee12 2a90 	vmov	r2, s5
 8012c76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012c7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c7e:	ee13 2a10 	vmov	r2, s6
 8012c82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c86:	9313      	str	r3, [sp, #76]	; 0x4c
 8012c88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012c8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c8e:	9a04      	ldr	r2, [sp, #16]
 8012c90:	9314      	str	r3, [sp, #80]	; 0x50
 8012c92:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012c96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012c98:	eeb0 3a67 	vmov.f32	s6, s15
 8012c9c:	bf08      	it	eq
 8012c9e:	4613      	moveq	r3, r2
 8012ca0:	eef0 2a47 	vmov.f32	s5, s14
 8012ca4:	e796      	b.n	8012bd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 8012ca6:	9f00      	ldr	r7, [sp, #0]
 8012ca8:	42b7      	cmp	r7, r6
 8012caa:	ddb9      	ble.n	8012c20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8012cac:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8012cae:	fb06 0202 	mla	r2, r6, r2, r0
 8012cb2:	1412      	asrs	r2, r2, #16
 8012cb4:	d4b4      	bmi.n	8012c20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8012cb6:	9e01      	ldr	r6, [sp, #4]
 8012cb8:	42b2      	cmp	r2, r6
 8012cba:	dab1      	bge.n	8012c20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8012cbc:	f04f 0800 	mov.w	r8, #0
 8012cc0:	eba3 0208 	sub.w	r2, r3, r8
 8012cc4:	2a00      	cmp	r2, #0
 8012cc6:	ddb1      	ble.n	8012c2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8012cc8:	9f02      	ldr	r7, [sp, #8]
 8012cca:	1422      	asrs	r2, r4, #16
 8012ccc:	1406      	asrs	r6, r0, #16
 8012cce:	fb07 2606 	mla	r6, r7, r6, r2
 8012cd2:	0872      	lsrs	r2, r6, #1
 8012cd4:	9f03      	ldr	r7, [sp, #12]
 8012cd6:	5cba      	ldrb	r2, [r7, r2]
 8012cd8:	07f6      	lsls	r6, r6, #31
 8012cda:	bf54      	ite	pl
 8012cdc:	f002 020f 	andpl.w	r2, r2, #15
 8012ce0:	1112      	asrmi	r2, r2, #4
 8012ce2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012ce6:	b2d2      	uxtb	r2, r2
 8012ce8:	2a00      	cmp	r2, #0
 8012cea:	d04d      	beq.n	8012d88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8012cec:	9f05      	ldr	r7, [sp, #20]
 8012cee:	4e64      	ldr	r6, [pc, #400]	; (8012e80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 8012cf0:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8012cf4:	6836      	ldr	r6, [r6, #0]
 8012cf6:	437a      	muls	r2, r7
 8012cf8:	1c57      	adds	r7, r2, #1
 8012cfa:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8012cfe:	1212      	asrs	r2, r2, #8
 8012d00:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8012d04:	fa1f fa82 	uxth.w	sl, r2
 8012d08:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012d0c:	43d2      	mvns	r2, r2
 8012d0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012d12:	b2d2      	uxtb	r2, r2
 8012d14:	fb1c fc0a 	smulbb	ip, ip, sl
 8012d18:	ea4f 09d6 	mov.w	r9, r6, lsr #3
 8012d1c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012d20:	fb07 c702 	mla	r7, r7, r2, ip
 8012d24:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012d28:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8012d2c:	fb19 f90a 	smulbb	r9, r9, sl
 8012d30:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012d34:	00f6      	lsls	r6, r6, #3
 8012d36:	fb0c 9c02 	mla	ip, ip, r2, r9
 8012d3a:	b2f6      	uxtb	r6, r6
 8012d3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012d40:	fa1f fc8c 	uxth.w	ip, ip
 8012d44:	fa5f fe8e 	uxtb.w	lr, lr
 8012d48:	fb16 f60a 	smulbb	r6, r6, sl
 8012d4c:	b2bf      	uxth	r7, r7
 8012d4e:	fb0e 6602 	mla	r6, lr, r2, r6
 8012d52:	f10c 0901 	add.w	r9, ip, #1
 8012d56:	b2b6      	uxth	r6, r6
 8012d58:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012d5c:	f107 0b01 	add.w	fp, r7, #1
 8012d60:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8012d64:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8012d68:	f106 0e01 	add.w	lr, r6, #1
 8012d6c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8012d70:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012d74:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8012d78:	ea4c 0c07 	orr.w	ip, ip, r7
 8012d7c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8012d80:	ea4c 0c0e 	orr.w	ip, ip, lr
 8012d84:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8012d88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012d8a:	4414      	add	r4, r2
 8012d8c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012d8e:	f108 0801 	add.w	r8, r8, #1
 8012d92:	4410      	add	r0, r2
 8012d94:	e794      	b.n	8012cc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 8012d96:	1422      	asrs	r2, r4, #16
 8012d98:	d465      	bmi.n	8012e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8012d9a:	9e00      	ldr	r6, [sp, #0]
 8012d9c:	4296      	cmp	r6, r2
 8012d9e:	dd62      	ble.n	8012e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8012da0:	1406      	asrs	r6, r0, #16
 8012da2:	d460      	bmi.n	8012e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8012da4:	9f01      	ldr	r7, [sp, #4]
 8012da6:	42be      	cmp	r6, r7
 8012da8:	da5d      	bge.n	8012e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8012daa:	9f02      	ldr	r7, [sp, #8]
 8012dac:	fb06 2607 	mla	r6, r6, r7, r2
 8012db0:	0872      	lsrs	r2, r6, #1
 8012db2:	9f03      	ldr	r7, [sp, #12]
 8012db4:	5cba      	ldrb	r2, [r7, r2]
 8012db6:	07f7      	lsls	r7, r6, #31
 8012db8:	bf54      	ite	pl
 8012dba:	f002 020f 	andpl.w	r2, r2, #15
 8012dbe:	1112      	asrmi	r2, r2, #4
 8012dc0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012dc4:	b2d2      	uxtb	r2, r2
 8012dc6:	2a00      	cmp	r2, #0
 8012dc8:	d04d      	beq.n	8012e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8012dca:	9f05      	ldr	r7, [sp, #20]
 8012dcc:	4e2c      	ldr	r6, [pc, #176]	; (8012e80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 8012dce:	f8b9 e000 	ldrh.w	lr, [r9]
 8012dd2:	6836      	ldr	r6, [r6, #0]
 8012dd4:	437a      	muls	r2, r7
 8012dd6:	1c57      	adds	r7, r2, #1
 8012dd8:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8012ddc:	1212      	asrs	r2, r2, #8
 8012dde:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8012de2:	fa1f fb82 	uxth.w	fp, r2
 8012de6:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012dea:	43d2      	mvns	r2, r2
 8012dec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012df0:	b2d2      	uxtb	r2, r2
 8012df2:	fb1c fc0b 	smulbb	ip, ip, fp
 8012df6:	ea4f 08d6 	mov.w	r8, r6, lsr #3
 8012dfa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012dfe:	fb07 c702 	mla	r7, r7, r2, ip
 8012e02:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012e06:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8012e0a:	fb18 f80b 	smulbb	r8, r8, fp
 8012e0e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012e12:	00f6      	lsls	r6, r6, #3
 8012e14:	fb0c 8c02 	mla	ip, ip, r2, r8
 8012e18:	b2f6      	uxtb	r6, r6
 8012e1a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012e1e:	fa1f fc8c 	uxth.w	ip, ip
 8012e22:	fa5f fe8e 	uxtb.w	lr, lr
 8012e26:	fb16 f60b 	smulbb	r6, r6, fp
 8012e2a:	b2bf      	uxth	r7, r7
 8012e2c:	fb0e 6602 	mla	r6, lr, r2, r6
 8012e30:	f10c 0801 	add.w	r8, ip, #1
 8012e34:	b2b6      	uxth	r6, r6
 8012e36:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8012e3a:	f107 0801 	add.w	r8, r7, #1
 8012e3e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8012e42:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8012e46:	f106 0e01 	add.w	lr, r6, #1
 8012e4a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8012e4e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012e52:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8012e56:	ea4c 0c07 	orr.w	ip, ip, r7
 8012e5a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8012e5e:	ea4c 0c0e 	orr.w	ip, ip, lr
 8012e62:	f8a9 c000 	strh.w	ip, [r9]
 8012e66:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012e68:	4414      	add	r4, r2
 8012e6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012e6c:	f109 0902 	add.w	r9, r9, #2
 8012e70:	4410      	add	r0, r2
 8012e72:	f10a 3aff 	add.w	sl, sl, #4294967295
 8012e76:	e6d5      	b.n	8012c24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8012e78:	b007      	add	sp, #28
 8012e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e7e:	bf00      	nop
 8012e80:	200124c0 	.word	0x200124c0

08012e84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e88:	b087      	sub	sp, #28
 8012e8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012e8e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8012e90:	9205      	str	r2, [sp, #20]
 8012e92:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8012e96:	9201      	str	r2, [sp, #4]
 8012e98:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8012e9c:	6860      	ldr	r0, [r4, #4]
 8012e9e:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 8012ea2:	9100      	str	r1, [sp, #0]
 8012ea4:	fb00 2505 	mla	r5, r0, r5, r2
 8012ea8:	6822      	ldr	r2, [r4, #0]
 8012eaa:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012eae:	f10b 0201 	add.w	r2, fp, #1
 8012eb2:	f022 0201 	bic.w	r2, r2, #1
 8012eb6:	9203      	str	r2, [sp, #12]
 8012eb8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012eba:	6812      	ldr	r2, [r2, #0]
 8012ebc:	9204      	str	r2, [sp, #16]
 8012ebe:	9a00      	ldr	r2, [sp, #0]
 8012ec0:	2a00      	cmp	r2, #0
 8012ec2:	dc03      	bgt.n	8012ecc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8012ec4:	9a05      	ldr	r2, [sp, #20]
 8012ec6:	2a00      	cmp	r2, #0
 8012ec8:	f340 8157 	ble.w	801317a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8012ecc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012ece:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8012ed2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012ed4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012ed8:	2b00      	cmp	r3, #0
 8012eda:	dd0f      	ble.n	8012efc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012edc:	1422      	asrs	r2, r4, #16
 8012ede:	d406      	bmi.n	8012eee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012ee0:	4593      	cmp	fp, r2
 8012ee2:	dd04      	ble.n	8012eee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012ee4:	1402      	asrs	r2, r0, #16
 8012ee6:	d402      	bmi.n	8012eee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012ee8:	9e01      	ldr	r6, [sp, #4]
 8012eea:	42b2      	cmp	r2, r6
 8012eec:	db07      	blt.n	8012efe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8012eee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012ef0:	4414      	add	r4, r2
 8012ef2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012ef4:	3b01      	subs	r3, #1
 8012ef6:	4410      	add	r0, r2
 8012ef8:	3502      	adds	r5, #2
 8012efa:	e7ed      	b.n	8012ed8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8012efc:	d018      	beq.n	8012f30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8012efe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012f00:	1e5a      	subs	r2, r3, #1
 8012f02:	fb06 4602 	mla	r6, r6, r2, r4
 8012f06:	1436      	asrs	r6, r6, #16
 8012f08:	d40a      	bmi.n	8012f20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012f0a:	45b3      	cmp	fp, r6
 8012f0c:	dd08      	ble.n	8012f20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012f0e:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8012f10:	fb06 0202 	mla	r2, r6, r2, r0
 8012f14:	1412      	asrs	r2, r2, #16
 8012f16:	d403      	bmi.n	8012f20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012f18:	9e01      	ldr	r6, [sp, #4]
 8012f1a:	42b2      	cmp	r2, r6
 8012f1c:	f2c0 80bf 	blt.w	801309e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 8012f20:	2700      	movs	r7, #0
 8012f22:	19da      	adds	r2, r3, r7
 8012f24:	2a00      	cmp	r2, #0
 8012f26:	dc3f      	bgt.n	8012fa8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 8012f28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012f2c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012f30:	9b00      	ldr	r3, [sp, #0]
 8012f32:	2b00      	cmp	r3, #0
 8012f34:	f340 8121 	ble.w	801317a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8012f38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012f3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012f40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012f44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012f4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012f4e:	eeb0 6a62 	vmov.f32	s12, s5
 8012f52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012f56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012f5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012f5e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012f62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012f66:	eeb0 6a43 	vmov.f32	s12, s6
 8012f6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012f6e:	ee12 2a90 	vmov	r2, s5
 8012f72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012f76:	fb92 f3f3 	sdiv	r3, r2, r3
 8012f7a:	ee13 2a10 	vmov	r2, s6
 8012f7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8012f80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f82:	fb92 f3f3 	sdiv	r3, r2, r3
 8012f86:	9314      	str	r3, [sp, #80]	; 0x50
 8012f88:	9b00      	ldr	r3, [sp, #0]
 8012f8a:	9a05      	ldr	r2, [sp, #20]
 8012f8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012f90:	3b01      	subs	r3, #1
 8012f92:	9300      	str	r3, [sp, #0]
 8012f94:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012f98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f9a:	eeb0 3a67 	vmov.f32	s6, s15
 8012f9e:	bf08      	it	eq
 8012fa0:	4613      	moveq	r3, r2
 8012fa2:	eef0 2a47 	vmov.f32	s5, s14
 8012fa6:	e78a      	b.n	8012ebe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8012fa8:	1422      	asrs	r2, r4, #16
 8012faa:	d466      	bmi.n	801307a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012fac:	4593      	cmp	fp, r2
 8012fae:	dd64      	ble.n	801307a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012fb0:	1406      	asrs	r6, r0, #16
 8012fb2:	d462      	bmi.n	801307a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012fb4:	9901      	ldr	r1, [sp, #4]
 8012fb6:	428e      	cmp	r6, r1
 8012fb8:	da5f      	bge.n	801307a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012fba:	9903      	ldr	r1, [sp, #12]
 8012fbc:	fb06 2601 	mla	r6, r6, r1, r2
 8012fc0:	0872      	lsrs	r2, r6, #1
 8012fc2:	9904      	ldr	r1, [sp, #16]
 8012fc4:	5c8a      	ldrb	r2, [r1, r2]
 8012fc6:	07f6      	lsls	r6, r6, #31
 8012fc8:	bf54      	ite	pl
 8012fca:	f002 020f 	andpl.w	r2, r2, #15
 8012fce:	1112      	asrmi	r2, r2, #4
 8012fd0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012fd4:	b2d2      	uxtb	r2, r2
 8012fd6:	2a00      	cmp	r2, #0
 8012fd8:	d04f      	beq.n	801307a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012fda:	4969      	ldr	r1, [pc, #420]	; (8013180 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8012fdc:	f8d1 c000 	ldr.w	ip, [r1]
 8012fe0:	2aff      	cmp	r2, #255	; 0xff
 8012fe2:	ea4f 291c 	mov.w	r9, ip, lsr #8
 8012fe6:	ea4f 06dc 	mov.w	r6, ip, lsr #3
 8012fea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012fee:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012ff2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012ff6:	fa5f fc8c 	uxtb.w	ip, ip
 8012ffa:	d044      	beq.n	8013086 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8012ffc:	f06f 0101 	mvn.w	r1, #1
 8013000:	4379      	muls	r1, r7
 8013002:	fa1f fa82 	uxth.w	sl, r2
 8013006:	f835 8001 	ldrh.w	r8, [r5, r1]
 801300a:	9102      	str	r1, [sp, #8]
 801300c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8013010:	43d2      	mvns	r2, r2
 8013012:	b2d2      	uxtb	r2, r2
 8013014:	fb19 f90a 	smulbb	r9, r9, sl
 8013018:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801301c:	fb0e 9e02 	mla	lr, lr, r2, r9
 8013020:	ea4f 09e8 	mov.w	r9, r8, asr #3
 8013024:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013028:	fb16 f60a 	smulbb	r6, r6, sl
 801302c:	fb09 6602 	mla	r6, r9, r2, r6
 8013030:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013034:	b2b6      	uxth	r6, r6
 8013036:	fa5f f888 	uxtb.w	r8, r8
 801303a:	fb1c fc0a 	smulbb	ip, ip, sl
 801303e:	fa1f fe8e 	uxth.w	lr, lr
 8013042:	fb08 cc02 	mla	ip, r8, r2, ip
 8013046:	f106 0901 	add.w	r9, r6, #1
 801304a:	fa1f fc8c 	uxth.w	ip, ip
 801304e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8013052:	f10e 0901 	add.w	r9, lr, #1
 8013056:	0976      	lsrs	r6, r6, #5
 8013058:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 801305c:	f10c 0201 	add.w	r2, ip, #1
 8013060:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013064:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8013068:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801306c:	ea46 060e 	orr.w	r6, r6, lr
 8013070:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013074:	ea46 060c 	orr.w	r6, r6, ip
 8013078:	526e      	strh	r6, [r5, r1]
 801307a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801307c:	4414      	add	r4, r2
 801307e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013080:	3f01      	subs	r7, #1
 8013082:	4410      	add	r0, r2
 8013084:	e74d      	b.n	8012f22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8013086:	f06f 0201 	mvn.w	r2, #1
 801308a:	00f6      	lsls	r6, r6, #3
 801308c:	fb02 f807 	mul.w	r8, r2, r7
 8013090:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8013094:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 8013098:	f825 6008 	strh.w	r6, [r5, r8]
 801309c:	e7ed      	b.n	801307a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801309e:	f04f 0800 	mov.w	r8, #0
 80130a2:	eba3 0208 	sub.w	r2, r3, r8
 80130a6:	2a00      	cmp	r2, #0
 80130a8:	f77f af3e 	ble.w	8012f28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 80130ac:	9903      	ldr	r1, [sp, #12]
 80130ae:	1422      	asrs	r2, r4, #16
 80130b0:	1406      	asrs	r6, r0, #16
 80130b2:	fb01 2606 	mla	r6, r1, r6, r2
 80130b6:	0872      	lsrs	r2, r6, #1
 80130b8:	9904      	ldr	r1, [sp, #16]
 80130ba:	5c8a      	ldrb	r2, [r1, r2]
 80130bc:	07f1      	lsls	r1, r6, #31
 80130be:	bf54      	ite	pl
 80130c0:	f002 020f 	andpl.w	r2, r2, #15
 80130c4:	1112      	asrmi	r2, r2, #4
 80130c6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80130ca:	b2d2      	uxtb	r2, r2
 80130cc:	2a00      	cmp	r2, #0
 80130ce:	d047      	beq.n	8013160 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>
 80130d0:	492b      	ldr	r1, [pc, #172]	; (8013180 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 80130d2:	680f      	ldr	r7, [r1, #0]
 80130d4:	2aff      	cmp	r2, #255	; 0xff
 80130d6:	ea4f 2917 	mov.w	r9, r7, lsr #8
 80130da:	ea4f 06d7 	mov.w	r6, r7, lsr #3
 80130de:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 80130e2:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80130e6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80130ea:	b2ff      	uxtb	r7, r7
 80130ec:	d03f      	beq.n	801316e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ea>
 80130ee:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80130f2:	fa1f fa82 	uxth.w	sl, r2
 80130f6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80130fa:	43d2      	mvns	r2, r2
 80130fc:	b2d2      	uxtb	r2, r2
 80130fe:	fb19 f90a 	smulbb	r9, r9, sl
 8013102:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013106:	fb0c 9c02 	mla	ip, ip, r2, r9
 801310a:	ea4f 09ee 	mov.w	r9, lr, asr #3
 801310e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013112:	fb16 f60a 	smulbb	r6, r6, sl
 8013116:	fb09 6602 	mla	r6, r9, r2, r6
 801311a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801311e:	b2b6      	uxth	r6, r6
 8013120:	fa5f fe8e 	uxtb.w	lr, lr
 8013124:	fb17 f70a 	smulbb	r7, r7, sl
 8013128:	fa1f fc8c 	uxth.w	ip, ip
 801312c:	fb0e 7702 	mla	r7, lr, r2, r7
 8013130:	f106 0901 	add.w	r9, r6, #1
 8013134:	b2bf      	uxth	r7, r7
 8013136:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801313a:	f10c 0901 	add.w	r9, ip, #1
 801313e:	0976      	lsrs	r6, r6, #5
 8013140:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013144:	1c7a      	adds	r2, r7, #1
 8013146:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801314a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801314e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013152:	ea46 060c 	orr.w	r6, r6, ip
 8013156:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801315a:	433e      	orrs	r6, r7
 801315c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8013160:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013162:	4414      	add	r4, r2
 8013164:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013166:	f108 0801 	add.w	r8, r8, #1
 801316a:	4410      	add	r0, r2
 801316c:	e799      	b.n	80130a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 801316e:	00f6      	lsls	r6, r6, #3
 8013170:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8013174:	ea46 06d7 	orr.w	r6, r6, r7, lsr #3
 8013178:	e7f0      	b.n	801315c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 801317a:	b007      	add	sp, #28
 801317c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013180:	200124c0 	.word	0x200124c0

08013184 <_ZN8touchgfx8LCD16bppD1Ev>:
 8013184:	4770      	bx	lr

08013186 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8013186:	4770      	bx	lr

08013188 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8013188:	4770      	bx	lr

0801318a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801318a:	4770      	bx	lr

0801318c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801318c:	4770      	bx	lr

0801318e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801318e:	4770      	bx	lr

08013190 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013190:	4770      	bx	lr

08013192 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013192:	4770      	bx	lr

08013194 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013194:	4770      	bx	lr

08013196 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013196:	4770      	bx	lr

08013198 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013198:	4770      	bx	lr

0801319a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801319a:	4770      	bx	lr

0801319c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801319c:	4770      	bx	lr

0801319e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801319e:	4770      	bx	lr

080131a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80131a0:	4770      	bx	lr

080131a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80131a2:	4770      	bx	lr

080131a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80131a4:	4770      	bx	lr

080131a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80131a6:	4770      	bx	lr

080131a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80131a8:	4770      	bx	lr

080131aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80131aa:	4770      	bx	lr

080131ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80131ac:	4770      	bx	lr

080131ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80131ae:	4770      	bx	lr

080131b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80131b0:	4770      	bx	lr

080131b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80131b2:	4770      	bx	lr

080131b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80131b4:	4770      	bx	lr

080131b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80131b6:	4770      	bx	lr

080131b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80131b8:	4770      	bx	lr

080131ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80131ba:	4770      	bx	lr

080131bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80131bc:	4770      	bx	lr
	...

080131c0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80131c0:	b508      	push	{r3, lr}
 80131c2:	4b06      	ldr	r3, [pc, #24]	; (80131dc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80131c4:	8818      	ldrh	r0, [r3, #0]
 80131c6:	b928      	cbnz	r0, 80131d4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80131c8:	4b05      	ldr	r3, [pc, #20]	; (80131e0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80131ca:	4a06      	ldr	r2, [pc, #24]	; (80131e4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80131cc:	4806      	ldr	r0, [pc, #24]	; (80131e8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80131ce:	2154      	movs	r1, #84	; 0x54
 80131d0:	f009 f8d4 	bl	801c37c <__assert_func>
 80131d4:	0040      	lsls	r0, r0, #1
 80131d6:	b280      	uxth	r0, r0
 80131d8:	bd08      	pop	{r3, pc}
 80131da:	bf00      	nop
 80131dc:	200124b2 	.word	0x200124b2
 80131e0:	08020e13 	.word	0x08020e13
 80131e4:	08021393 	.word	0x08021393
 80131e8:	08020e55 	.word	0x08020e55

080131ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80131ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131f0:	b08d      	sub	sp, #52	; 0x34
 80131f2:	460f      	mov	r7, r1
 80131f4:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80131f8:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80131fc:	4616      	mov	r6, r2
 80131fe:	f1b9 0f00 	cmp.w	r9, #0
 8013202:	d046      	beq.n	8013292 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8013204:	6810      	ldr	r0, [r2, #0]
 8013206:	6851      	ldr	r1, [r2, #4]
 8013208:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80133d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 801320c:	ad08      	add	r5, sp, #32
 801320e:	c503      	stmia	r5!, {r0, r1}
 8013210:	6818      	ldr	r0, [r3, #0]
 8013212:	6859      	ldr	r1, [r3, #4]
 8013214:	ad0a      	add	r5, sp, #40	; 0x28
 8013216:	c503      	stmia	r5!, {r0, r1}
 8013218:	a808      	add	r0, sp, #32
 801321a:	f7fa fe19 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801321e:	4631      	mov	r1, r6
 8013220:	a80a      	add	r0, sp, #40	; 0x28
 8013222:	f7fa fdfd 	bl	800de20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013226:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801322a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801322e:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8013232:	f8d8 0000 	ldr.w	r0, [r8]
 8013236:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 801323a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801323e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8013242:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8013246:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 801324a:	440a      	add	r2, r1
 801324c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013250:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8013254:	4413      	add	r3, r2
 8013256:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801325a:	6803      	ldr	r3, [r0, #0]
 801325c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801325e:	4798      	blx	r3
 8013260:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013264:	d018      	beq.n	8013298 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8013266:	f010 0f04 	tst.w	r0, #4
 801326a:	d019      	beq.n	80132a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801326c:	f8d8 0000 	ldr.w	r0, [r8]
 8013270:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8013274:	6801      	ldr	r1, [r0, #0]
 8013276:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801327a:	e9cd 9403 	strd	r9, r4, [sp, #12]
 801327e:	b2bf      	uxth	r7, r7
 8013280:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013284:	9402      	str	r4, [sp, #8]
 8013286:	b2ad      	uxth	r5, r5
 8013288:	9701      	str	r7, [sp, #4]
 801328a:	9500      	str	r5, [sp, #0]
 801328c:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 801328e:	4631      	mov	r1, r6
 8013290:	47a0      	blx	r4
 8013292:	b00d      	add	sp, #52	; 0x34
 8013294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013298:	b914      	cbnz	r4, 80132a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801329a:	f010 0f01 	tst.w	r0, #1
 801329e:	e7e4      	b.n	801326a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80132a0:	f8d8 0000 	ldr.w	r0, [r8]
 80132a4:	6803      	ldr	r3, [r0, #0]
 80132a6:	6a1b      	ldr	r3, [r3, #32]
 80132a8:	4798      	blx	r3
 80132aa:	4a48      	ldr	r2, [pc, #288]	; (80133cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 80132ac:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80132b0:	8814      	ldrh	r4, [r2, #0]
 80132b2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80132b6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80132ba:	fb01 3404 	mla	r4, r1, r4, r3
 80132be:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80132c2:	4692      	mov	sl, r2
 80132c4:	d118      	bne.n	80132f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 80132c6:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 80132ca:	f04f 0900 	mov.w	r9, #0
 80132ce:	f8d8 0000 	ldr.w	r0, [r8]
 80132d2:	45b9      	cmp	r9, r7
 80132d4:	6803      	ldr	r3, [r0, #0]
 80132d6:	da73      	bge.n	80133c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 80132d8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80132da:	4632      	mov	r2, r6
 80132dc:	465b      	mov	r3, fp
 80132de:	4621      	mov	r1, r4
 80132e0:	47a8      	blx	r5
 80132e2:	f8ba 3000 	ldrh.w	r3, [sl]
 80132e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80132ea:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80132ee:	f109 0901 	add.w	r9, r9, #1
 80132f2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80132f6:	e7ea      	b.n	80132ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 80132f8:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 80132fc:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8013300:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8013304:	f04f 0b00 	mov.w	fp, #0
 8013308:	fa1f f389 	uxth.w	r3, r9
 801330c:	fa1f f888 	uxth.w	r8, r8
 8013310:	9207      	str	r2, [sp, #28]
 8013312:	45bb      	cmp	fp, r7
 8013314:	da54      	bge.n	80133c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8013316:	f04f 0e00 	mov.w	lr, #0
 801331a:	45ae      	cmp	lr, r5
 801331c:	da41      	bge.n	80133a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 801331e:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 8013322:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 8013326:	1208      	asrs	r0, r1, #8
 8013328:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801332c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013330:	fb10 f008 	smulbb	r0, r0, r8
 8013334:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8013338:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801333c:	00c9      	lsls	r1, r1, #3
 801333e:	fb0c 0c03 	mla	ip, ip, r3, r0
 8013342:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013346:	10d0      	asrs	r0, r2, #3
 8013348:	b2c9      	uxtb	r1, r1
 801334a:	00d2      	lsls	r2, r2, #3
 801334c:	fa1f fc8c 	uxth.w	ip, ip
 8013350:	fb19 f908 	smulbb	r9, r9, r8
 8013354:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8013358:	b2d2      	uxtb	r2, r2
 801335a:	fb11 f108 	smulbb	r1, r1, r8
 801335e:	fb00 9003 	mla	r0, r0, r3, r9
 8013362:	fb02 1203 	mla	r2, r2, r3, r1
 8013366:	f10c 0901 	add.w	r9, ip, #1
 801336a:	b292      	uxth	r2, r2
 801336c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013370:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013374:	f102 0c01 	add.w	ip, r2, #1
 8013378:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801337c:	b280      	uxth	r0, r0
 801337e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013382:	ea49 0c02 	orr.w	ip, r9, r2
 8013386:	f100 0901 	add.w	r9, r0, #1
 801338a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 801338e:	0940      	lsrs	r0, r0, #5
 8013390:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8013394:	ea4c 0c00 	orr.w	ip, ip, r0
 8013398:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 801339c:	f10e 0e01 	add.w	lr, lr, #1
 80133a0:	e7bb      	b.n	801331a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 80133a2:	9a07      	ldr	r2, [sp, #28]
 80133a4:	8812      	ldrh	r2, [r2, #0]
 80133a6:	1b52      	subs	r2, r2, r5
 80133a8:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80133ac:	4414      	add	r4, r2
 80133ae:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 80133b2:	1b52      	subs	r2, r2, r5
 80133b4:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80133b8:	4416      	add	r6, r2
 80133ba:	f10b 0b01 	add.w	fp, fp, #1
 80133be:	e7a8      	b.n	8013312 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 80133c0:	4b03      	ldr	r3, [pc, #12]	; (80133d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 80133c2:	6818      	ldr	r0, [r3, #0]
 80133c4:	6803      	ldr	r3, [r0, #0]
 80133c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80133c8:	4798      	blx	r3
 80133ca:	e762      	b.n	8013292 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80133cc:	200124b2 	.word	0x200124b2
 80133d0:	200124b8 	.word	0x200124b8

080133d4 <_ZN8touchgfx8LCD16bppD0Ev>:
 80133d4:	b510      	push	{r4, lr}
 80133d6:	2178      	movs	r1, #120	; 0x78
 80133d8:	4604      	mov	r4, r0
 80133da:	f008 ff8b 	bl	801c2f4 <_ZdlPvj>
 80133de:	4620      	mov	r0, r4
 80133e0:	bd10      	pop	{r4, pc}

080133e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80133e2:	b510      	push	{r4, lr}
 80133e4:	2104      	movs	r1, #4
 80133e6:	4604      	mov	r4, r0
 80133e8:	f008 ff84 	bl	801c2f4 <_ZdlPvj>
 80133ec:	4620      	mov	r0, r4
 80133ee:	bd10      	pop	{r4, pc}

080133f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80133f0:	b510      	push	{r4, lr}
 80133f2:	2104      	movs	r1, #4
 80133f4:	4604      	mov	r4, r0
 80133f6:	f008 ff7d 	bl	801c2f4 <_ZdlPvj>
 80133fa:	4620      	mov	r0, r4
 80133fc:	bd10      	pop	{r4, pc}

080133fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80133fe:	b510      	push	{r4, lr}
 8013400:	2104      	movs	r1, #4
 8013402:	4604      	mov	r4, r0
 8013404:	f008 ff76 	bl	801c2f4 <_ZdlPvj>
 8013408:	4620      	mov	r0, r4
 801340a:	bd10      	pop	{r4, pc}

0801340c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801340c:	b510      	push	{r4, lr}
 801340e:	2104      	movs	r1, #4
 8013410:	4604      	mov	r4, r0
 8013412:	f008 ff6f 	bl	801c2f4 <_ZdlPvj>
 8013416:	4620      	mov	r0, r4
 8013418:	bd10      	pop	{r4, pc}

0801341a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801341a:	b510      	push	{r4, lr}
 801341c:	2104      	movs	r1, #4
 801341e:	4604      	mov	r4, r0
 8013420:	f008 ff68 	bl	801c2f4 <_ZdlPvj>
 8013424:	4620      	mov	r0, r4
 8013426:	bd10      	pop	{r4, pc}

08013428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013428:	b510      	push	{r4, lr}
 801342a:	2104      	movs	r1, #4
 801342c:	4604      	mov	r4, r0
 801342e:	f008 ff61 	bl	801c2f4 <_ZdlPvj>
 8013432:	4620      	mov	r0, r4
 8013434:	bd10      	pop	{r4, pc}

08013436 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013436:	b510      	push	{r4, lr}
 8013438:	2104      	movs	r1, #4
 801343a:	4604      	mov	r4, r0
 801343c:	f008 ff5a 	bl	801c2f4 <_ZdlPvj>
 8013440:	4620      	mov	r0, r4
 8013442:	bd10      	pop	{r4, pc}

08013444 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8013444:	b510      	push	{r4, lr}
 8013446:	2104      	movs	r1, #4
 8013448:	4604      	mov	r4, r0
 801344a:	f008 ff53 	bl	801c2f4 <_ZdlPvj>
 801344e:	4620      	mov	r0, r4
 8013450:	bd10      	pop	{r4, pc}

08013452 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013452:	b510      	push	{r4, lr}
 8013454:	2104      	movs	r1, #4
 8013456:	4604      	mov	r4, r0
 8013458:	f008 ff4c 	bl	801c2f4 <_ZdlPvj>
 801345c:	4620      	mov	r0, r4
 801345e:	bd10      	pop	{r4, pc}

08013460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013460:	b510      	push	{r4, lr}
 8013462:	2104      	movs	r1, #4
 8013464:	4604      	mov	r4, r0
 8013466:	f008 ff45 	bl	801c2f4 <_ZdlPvj>
 801346a:	4620      	mov	r0, r4
 801346c:	bd10      	pop	{r4, pc}

0801346e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801346e:	b510      	push	{r4, lr}
 8013470:	2104      	movs	r1, #4
 8013472:	4604      	mov	r4, r0
 8013474:	f008 ff3e 	bl	801c2f4 <_ZdlPvj>
 8013478:	4620      	mov	r0, r4
 801347a:	bd10      	pop	{r4, pc}

0801347c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801347c:	b510      	push	{r4, lr}
 801347e:	2104      	movs	r1, #4
 8013480:	4604      	mov	r4, r0
 8013482:	f008 ff37 	bl	801c2f4 <_ZdlPvj>
 8013486:	4620      	mov	r0, r4
 8013488:	bd10      	pop	{r4, pc}

0801348a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801348a:	b510      	push	{r4, lr}
 801348c:	2104      	movs	r1, #4
 801348e:	4604      	mov	r4, r0
 8013490:	f008 ff30 	bl	801c2f4 <_ZdlPvj>
 8013494:	4620      	mov	r0, r4
 8013496:	bd10      	pop	{r4, pc}

08013498 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013498:	b510      	push	{r4, lr}
 801349a:	2104      	movs	r1, #4
 801349c:	4604      	mov	r4, r0
 801349e:	f008 ff29 	bl	801c2f4 <_ZdlPvj>
 80134a2:	4620      	mov	r0, r4
 80134a4:	bd10      	pop	{r4, pc}

080134a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80134a6:	b510      	push	{r4, lr}
 80134a8:	2104      	movs	r1, #4
 80134aa:	4604      	mov	r4, r0
 80134ac:	f008 ff22 	bl	801c2f4 <_ZdlPvj>
 80134b0:	4620      	mov	r0, r4
 80134b2:	bd10      	pop	{r4, pc}

080134b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80134b4:	b510      	push	{r4, lr}
 80134b6:	2104      	movs	r1, #4
 80134b8:	4604      	mov	r4, r0
 80134ba:	f008 ff1b 	bl	801c2f4 <_ZdlPvj>
 80134be:	4620      	mov	r0, r4
 80134c0:	bd10      	pop	{r4, pc}

080134c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80134c2:	b510      	push	{r4, lr}
 80134c4:	2104      	movs	r1, #4
 80134c6:	4604      	mov	r4, r0
 80134c8:	f008 ff14 	bl	801c2f4 <_ZdlPvj>
 80134cc:	4620      	mov	r0, r4
 80134ce:	bd10      	pop	{r4, pc}

080134d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80134d0:	b510      	push	{r4, lr}
 80134d2:	2104      	movs	r1, #4
 80134d4:	4604      	mov	r4, r0
 80134d6:	f008 ff0d 	bl	801c2f4 <_ZdlPvj>
 80134da:	4620      	mov	r0, r4
 80134dc:	bd10      	pop	{r4, pc}

080134de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80134de:	b510      	push	{r4, lr}
 80134e0:	2104      	movs	r1, #4
 80134e2:	4604      	mov	r4, r0
 80134e4:	f008 ff06 	bl	801c2f4 <_ZdlPvj>
 80134e8:	4620      	mov	r0, r4
 80134ea:	bd10      	pop	{r4, pc}

080134ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80134ec:	b510      	push	{r4, lr}
 80134ee:	2104      	movs	r1, #4
 80134f0:	4604      	mov	r4, r0
 80134f2:	f008 feff 	bl	801c2f4 <_ZdlPvj>
 80134f6:	4620      	mov	r0, r4
 80134f8:	bd10      	pop	{r4, pc}

080134fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80134fa:	b510      	push	{r4, lr}
 80134fc:	2104      	movs	r1, #4
 80134fe:	4604      	mov	r4, r0
 8013500:	f008 fef8 	bl	801c2f4 <_ZdlPvj>
 8013504:	4620      	mov	r0, r4
 8013506:	bd10      	pop	{r4, pc}

08013508 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013508:	b510      	push	{r4, lr}
 801350a:	2104      	movs	r1, #4
 801350c:	4604      	mov	r4, r0
 801350e:	f008 fef1 	bl	801c2f4 <_ZdlPvj>
 8013512:	4620      	mov	r0, r4
 8013514:	bd10      	pop	{r4, pc}

08013516 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013516:	b510      	push	{r4, lr}
 8013518:	2104      	movs	r1, #4
 801351a:	4604      	mov	r4, r0
 801351c:	f008 feea 	bl	801c2f4 <_ZdlPvj>
 8013520:	4620      	mov	r0, r4
 8013522:	bd10      	pop	{r4, pc}

08013524 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013524:	b510      	push	{r4, lr}
 8013526:	2104      	movs	r1, #4
 8013528:	4604      	mov	r4, r0
 801352a:	f008 fee3 	bl	801c2f4 <_ZdlPvj>
 801352e:	4620      	mov	r0, r4
 8013530:	bd10      	pop	{r4, pc}

08013532 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8013532:	b510      	push	{r4, lr}
 8013534:	2104      	movs	r1, #4
 8013536:	4604      	mov	r4, r0
 8013538:	f008 fedc 	bl	801c2f4 <_ZdlPvj>
 801353c:	4620      	mov	r0, r4
 801353e:	bd10      	pop	{r4, pc}

08013540 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8013540:	b510      	push	{r4, lr}
 8013542:	2104      	movs	r1, #4
 8013544:	4604      	mov	r4, r0
 8013546:	f008 fed5 	bl	801c2f4 <_ZdlPvj>
 801354a:	4620      	mov	r0, r4
 801354c:	bd10      	pop	{r4, pc}

0801354e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801354e:	b510      	push	{r4, lr}
 8013550:	2104      	movs	r1, #4
 8013552:	4604      	mov	r4, r0
 8013554:	f008 fece 	bl	801c2f4 <_ZdlPvj>
 8013558:	4620      	mov	r0, r4
 801355a:	bd10      	pop	{r4, pc}

0801355c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801355c:	b510      	push	{r4, lr}
 801355e:	2104      	movs	r1, #4
 8013560:	4604      	mov	r4, r0
 8013562:	f008 fec7 	bl	801c2f4 <_ZdlPvj>
 8013566:	4620      	mov	r0, r4
 8013568:	bd10      	pop	{r4, pc}
	...

0801356c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801356c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013570:	460e      	mov	r6, r1
 8013572:	b08b      	sub	sp, #44	; 0x2c
 8013574:	4615      	mov	r5, r2
 8013576:	461c      	mov	r4, r3
 8013578:	b323      	cbz	r3, 80135c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 801357a:	4608      	mov	r0, r1
 801357c:	f7f7 fd9f 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 8013580:	bb00      	cbnz	r0, 80135c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8013582:	6830      	ldr	r0, [r6, #0]
 8013584:	6871      	ldr	r1, [r6, #4]
 8013586:	4e55      	ldr	r6, [pc, #340]	; (80136dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8013588:	ab08      	add	r3, sp, #32
 801358a:	c303      	stmia	r3!, {r0, r1}
 801358c:	a808      	add	r0, sp, #32
 801358e:	f7fa fc5f 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013592:	6830      	ldr	r0, [r6, #0]
 8013594:	6803      	ldr	r3, [r0, #0]
 8013596:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013598:	4798      	blx	r3
 801359a:	2cff      	cmp	r4, #255	; 0xff
 801359c:	d015      	beq.n	80135ca <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 801359e:	f010 0f08 	tst.w	r0, #8
 80135a2:	d015      	beq.n	80135d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 80135a4:	6830      	ldr	r0, [r6, #0]
 80135a6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80135aa:	6801      	ldr	r1, [r0, #0]
 80135ac:	9402      	str	r4, [sp, #8]
 80135ae:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 80135b2:	9401      	str	r4, [sp, #4]
 80135b4:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80135b8:	9400      	str	r4, [sp, #0]
 80135ba:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 80135bc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80135c0:	4629      	mov	r1, r5
 80135c2:	47a0      	blx	r4
 80135c4:	b00b      	add	sp, #44	; 0x2c
 80135c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135ca:	f010 0f02 	tst.w	r0, #2
 80135ce:	e7e8      	b.n	80135a2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80135d0:	6830      	ldr	r0, [r6, #0]
 80135d2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80135d6:	6803      	ldr	r3, [r0, #0]
 80135d8:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 80135dc:	6a1b      	ldr	r3, [r3, #32]
 80135de:	4798      	blx	r3
 80135e0:	4a3f      	ldr	r2, [pc, #252]	; (80136e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 80135e2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80135e6:	8816      	ldrh	r6, [r2, #0]
 80135e8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80135ec:	2cff      	cmp	r4, #255	; 0xff
 80135ee:	fb06 1303 	mla	r3, r6, r3, r1
 80135f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80135f6:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 80135fa:	4616      	mov	r6, r2
 80135fc:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8013600:	d10a      	bne.n	8013618 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8013602:	0049      	lsls	r1, r1, #1
 8013604:	2200      	movs	r2, #0
 8013606:	454a      	cmp	r2, r9
 8013608:	da61      	bge.n	80136ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 801360a:	2300      	movs	r3, #0
 801360c:	4543      	cmp	r3, r8
 801360e:	da57      	bge.n	80136c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x154>
 8013610:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8013614:	3301      	adds	r3, #1
 8013616:	e7f9      	b.n	801360c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8013618:	0a2b      	lsrs	r3, r5, #8
 801361a:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 801361e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8013622:	b2a4      	uxth	r4, r4
 8013624:	4363      	muls	r3, r4
 8013626:	9305      	str	r3, [sp, #20]
 8013628:	08ee      	lsrs	r6, r5, #3
 801362a:	00eb      	lsls	r3, r5, #3
 801362c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013630:	b2db      	uxtb	r3, r3
 8013632:	0049      	lsls	r1, r1, #1
 8013634:	4366      	muls	r6, r4
 8013636:	4363      	muls	r3, r4
 8013638:	9106      	str	r1, [sp, #24]
 801363a:	f04f 0c00 	mov.w	ip, #0
 801363e:	b2bf      	uxth	r7, r7
 8013640:	9207      	str	r2, [sp, #28]
 8013642:	45cc      	cmp	ip, r9
 8013644:	da43      	bge.n	80136ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 8013646:	4682      	mov	sl, r0
 8013648:	f04f 0e00 	mov.w	lr, #0
 801364c:	45c6      	cmp	lr, r8
 801364e:	da2d      	bge.n	80136ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8013650:	f8ba 2000 	ldrh.w	r2, [sl]
 8013654:	9905      	ldr	r1, [sp, #20]
 8013656:	1214      	asrs	r4, r2, #8
 8013658:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801365c:	fb14 f407 	smulbb	r4, r4, r7
 8013660:	440c      	add	r4, r1
 8013662:	10d1      	asrs	r1, r2, #3
 8013664:	00d2      	lsls	r2, r2, #3
 8013666:	b2d2      	uxtb	r2, r2
 8013668:	fb12 f207 	smulbb	r2, r2, r7
 801366c:	b2a4      	uxth	r4, r4
 801366e:	441a      	add	r2, r3
 8013670:	b292      	uxth	r2, r2
 8013672:	1c65      	adds	r5, r4, #1
 8013674:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013678:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 801367c:	fb11 f107 	smulbb	r1, r1, r7
 8013680:	1c55      	adds	r5, r2, #1
 8013682:	4431      	add	r1, r6
 8013684:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8013688:	b289      	uxth	r1, r1
 801368a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801368e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8013692:	4314      	orrs	r4, r2
 8013694:	1c4a      	adds	r2, r1, #1
 8013696:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801369a:	0949      	lsrs	r1, r1, #5
 801369c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80136a0:	430c      	orrs	r4, r1
 80136a2:	f82a 4b02 	strh.w	r4, [sl], #2
 80136a6:	f10e 0e01 	add.w	lr, lr, #1
 80136aa:	e7cf      	b.n	801364c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe0>
 80136ac:	9a07      	ldr	r2, [sp, #28]
 80136ae:	9906      	ldr	r1, [sp, #24]
 80136b0:	8812      	ldrh	r2, [r2, #0]
 80136b2:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 80136b6:	440a      	add	r2, r1
 80136b8:	4410      	add	r0, r2
 80136ba:	f10c 0c01 	add.w	ip, ip, #1
 80136be:	e7c0      	b.n	8013642 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd6>
 80136c0:	8833      	ldrh	r3, [r6, #0]
 80136c2:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 80136c6:	440b      	add	r3, r1
 80136c8:	4418      	add	r0, r3
 80136ca:	3201      	adds	r2, #1
 80136cc:	e79b      	b.n	8013606 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 80136ce:	4b03      	ldr	r3, [pc, #12]	; (80136dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 80136d0:	6818      	ldr	r0, [r3, #0]
 80136d2:	6803      	ldr	r3, [r0, #0]
 80136d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80136d6:	4798      	blx	r3
 80136d8:	e774      	b.n	80135c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 80136da:	bf00      	nop
 80136dc:	200124b8 	.word	0x200124b8
 80136e0:	200124b2 	.word	0x200124b2

080136e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80136e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136e8:	4d9b      	ldr	r5, [pc, #620]	; (8013958 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 80136ea:	4690      	mov	r8, r2
 80136ec:	682a      	ldr	r2, [r5, #0]
 80136ee:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80136f2:	2a02      	cmp	r2, #2
 80136f4:	b08f      	sub	sp, #60	; 0x3c
 80136f6:	4604      	mov	r4, r0
 80136f8:	4689      	mov	r9, r1
 80136fa:	d106      	bne.n	801370a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 80136fc:	4b97      	ldr	r3, [pc, #604]	; (801395c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 80136fe:	4a98      	ldr	r2, [pc, #608]	; (8013960 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8013700:	f240 21be 	movw	r1, #702	; 0x2be
 8013704:	4897      	ldr	r0, [pc, #604]	; (8013964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8013706:	f008 fe39 	bl	801c37c <__assert_func>
 801370a:	ae0e      	add	r6, sp, #56	; 0x38
 801370c:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8013710:	4630      	mov	r0, r6
 8013712:	f7fd fad9 	bl	8010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013716:	6823      	ldr	r3, [r4, #0]
 8013718:	4607      	mov	r7, r0
 801371a:	6a1b      	ldr	r3, [r3, #32]
 801371c:	4620      	mov	r0, r4
 801371e:	4798      	blx	r3
 8013720:	4287      	cmp	r7, r0
 8013722:	d004      	beq.n	801372e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8013724:	4b90      	ldr	r3, [pc, #576]	; (8013968 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8013726:	4a8e      	ldr	r2, [pc, #568]	; (8013960 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8013728:	f44f 7130 	mov.w	r1, #704	; 0x2c0
 801372c:	e7ea      	b.n	8013704 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801372e:	4630      	mov	r0, r6
 8013730:	f7fd fa46 	bl	8010bc0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013734:	4607      	mov	r7, r0
 8013736:	b920      	cbnz	r0, 8013742 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8013738:	4b8c      	ldr	r3, [pc, #560]	; (801396c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 801373a:	4a89      	ldr	r2, [pc, #548]	; (8013960 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801373c:	f240 21c2 	movw	r1, #706	; 0x2c2
 8013740:	e7e0      	b.n	8013704 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013742:	f8d8 0000 	ldr.w	r0, [r8]
 8013746:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801374a:	f9b8 a000 	ldrsh.w	sl, [r8]
 801374e:	ab06      	add	r3, sp, #24
 8013750:	c303      	stmia	r3!, {r0, r1}
 8013752:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8013756:	f8d9 0000 	ldr.w	r0, [r9]
 801375a:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 801375e:	ab08      	add	r3, sp, #32
 8013760:	c303      	stmia	r3!, {r0, r1}
 8013762:	4630      	mov	r0, r6
 8013764:	f7fd f924 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013768:	4680      	mov	r8, r0
 801376a:	4630      	mov	r0, r6
 801376c:	f7fd f95a 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013770:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8013774:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8013778:	f10d 0920 	add.w	r9, sp, #32
 801377c:	a806      	add	r0, sp, #24
 801377e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8013782:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8013786:	f7fa fb63 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801378a:	4648      	mov	r0, r9
 801378c:	f7fa fb60 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013790:	a80a      	add	r0, sp, #40	; 0x28
 8013792:	f7fa fb5d 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013796:	4e76      	ldr	r6, [pc, #472]	; (8013970 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8013798:	4b76      	ldr	r3, [pc, #472]	; (8013974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 801379a:	f9b6 2000 	ldrsh.w	r2, [r6]
 801379e:	f9b3 3000 	ldrsh.w	r3, [r3]
 80137a2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80137a6:	2100      	movs	r1, #0
 80137a8:	910c      	str	r1, [sp, #48]	; 0x30
 80137aa:	4648      	mov	r0, r9
 80137ac:	a90c      	add	r1, sp, #48	; 0x30
 80137ae:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80137b2:	f7f7 fc41 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 80137b6:	4648      	mov	r0, r9
 80137b8:	f7f7 fc81 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 80137bc:	2800      	cmp	r0, #0
 80137be:	f040 80bd 	bne.w	801393c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80137c2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80137c6:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80137ca:	4288      	cmp	r0, r1
 80137cc:	db37      	blt.n	801383e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 80137ce:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80137d2:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80137d6:	429a      	cmp	r2, r3
 80137d8:	db31      	blt.n	801383e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 80137da:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 80137de:	4460      	add	r0, ip
 80137e0:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 80137e4:	4461      	add	r1, ip
 80137e6:	b200      	sxth	r0, r0
 80137e8:	b209      	sxth	r1, r1
 80137ea:	4288      	cmp	r0, r1
 80137ec:	dc27      	bgt.n	801383e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 80137ee:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80137f2:	440a      	add	r2, r1
 80137f4:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80137f8:	440b      	add	r3, r1
 80137fa:	b212      	sxth	r2, r2
 80137fc:	b21b      	sxth	r3, r3
 80137fe:	429a      	cmp	r2, r3
 8013800:	dc1d      	bgt.n	801383e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8013802:	6823      	ldr	r3, [r4, #0]
 8013804:	4620      	mov	r0, r4
 8013806:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013808:	4798      	blx	r3
 801380a:	4682      	mov	sl, r0
 801380c:	6828      	ldr	r0, [r5, #0]
 801380e:	6803      	ldr	r3, [r0, #0]
 8013810:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013812:	4798      	blx	r3
 8013814:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8013818:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801381c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8013820:	1a9b      	subs	r3, r3, r2
 8013822:	b29b      	uxth	r3, r3
 8013824:	b21c      	sxth	r4, r3
 8013826:	2c00      	cmp	r4, #0
 8013828:	dc0e      	bgt.n	8013848 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 801382a:	bf1f      	itttt	ne
 801382c:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8013830:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8013834:	189b      	addne	r3, r3, r2
 8013836:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801383a:	463c      	mov	r4, r7
 801383c:	e00a      	b.n	8013854 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 801383e:	4b4e      	ldr	r3, [pc, #312]	; (8013978 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8013840:	4a47      	ldr	r2, [pc, #284]	; (8013960 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8013842:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 8013846:	e75d      	b.n	8013704 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013848:	ebab 0303 	sub.w	r3, fp, r3
 801384c:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8013850:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8013854:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8013858:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801385c:	1a5b      	subs	r3, r3, r1
 801385e:	b29b      	uxth	r3, r3
 8013860:	b21a      	sxth	r2, r3
 8013862:	2a00      	cmp	r2, #0
 8013864:	dd4a      	ble.n	80138fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8013866:	fb02 f20b 	mul.w	r2, r2, fp
 801386a:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 801386e:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8013872:	1ad3      	subs	r3, r2, r3
 8013874:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013878:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801387c:	2b00      	cmp	r3, #0
 801387e:	dd5d      	ble.n	801393c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8013880:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8013884:	f1bc 0f00 	cmp.w	ip, #0
 8013888:	dd58      	ble.n	801393c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 801388a:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 801388e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013892:	fb0a f801 	mul.w	r8, sl, r1
 8013896:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801389a:	4480      	add	r8, r0
 801389c:	8830      	ldrh	r0, [r6, #0]
 801389e:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 80138a2:	42b3      	cmp	r3, r6
 80138a4:	bfa8      	it	ge
 80138a6:	4633      	movge	r3, r6
 80138a8:	1a82      	subs	r2, r0, r2
 80138aa:	4293      	cmp	r3, r2
 80138ac:	bfa8      	it	ge
 80138ae:	4613      	movge	r3, r2
 80138b0:	4a30      	ldr	r2, [pc, #192]	; (8013974 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 80138b2:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 80138b6:	8812      	ldrh	r2, [r2, #0]
 80138b8:	4566      	cmp	r6, ip
 80138ba:	eba2 0101 	sub.w	r1, r2, r1
 80138be:	bfa8      	it	ge
 80138c0:	4666      	movge	r6, ip
 80138c2:	428e      	cmp	r6, r1
 80138c4:	4632      	mov	r2, r6
 80138c6:	bfa8      	it	ge
 80138c8:	460a      	movge	r2, r1
 80138ca:	4298      	cmp	r0, r3
 80138cc:	9202      	str	r2, [sp, #8]
 80138ce:	d01e      	beq.n	801390e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 80138d0:	005b      	lsls	r3, r3, #1
 80138d2:	9303      	str	r3, [sp, #12]
 80138d4:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80138d8:	f04f 0900 	mov.w	r9, #0
 80138dc:	9b02      	ldr	r3, [sp, #8]
 80138de:	454b      	cmp	r3, r9
 80138e0:	dd2c      	ble.n	801393c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80138e2:	6828      	ldr	r0, [r5, #0]
 80138e4:	6803      	ldr	r3, [r0, #0]
 80138e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138e8:	4642      	mov	r2, r8
 80138ea:	461e      	mov	r6, r3
 80138ec:	4621      	mov	r1, r4
 80138ee:	9b03      	ldr	r3, [sp, #12]
 80138f0:	47b0      	blx	r6
 80138f2:	44d0      	add	r8, sl
 80138f4:	445c      	add	r4, fp
 80138f6:	f109 0901 	add.w	r9, r9, #1
 80138fa:	e7ef      	b.n	80138dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 80138fc:	bf1f      	itttt	ne
 80138fe:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8013902:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 8013906:	189b      	addne	r3, r3, r2
 8013908:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801390c:	e7b4      	b.n	8013878 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 801390e:	4558      	cmp	r0, fp
 8013910:	d1de      	bne.n	80138d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8013912:	6828      	ldr	r0, [r5, #0]
 8013914:	6803      	ldr	r3, [r0, #0]
 8013916:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013918:	4798      	blx	r3
 801391a:	07c3      	lsls	r3, r0, #31
 801391c:	d512      	bpl.n	8013944 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 801391e:	6828      	ldr	r0, [r5, #0]
 8013920:	9b02      	ldr	r3, [sp, #8]
 8013922:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8013926:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801392a:	6803      	ldr	r3, [r0, #0]
 801392c:	f8cd b000 	str.w	fp, [sp]
 8013930:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8013932:	e899 0006 	ldmia.w	r9, {r1, r2}
 8013936:	4623      	mov	r3, r4
 8013938:	47a8      	blx	r5
 801393a:	4607      	mov	r7, r0
 801393c:	4638      	mov	r0, r7
 801393e:	b00f      	add	sp, #60	; 0x3c
 8013940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013944:	6828      	ldr	r0, [r5, #0]
 8013946:	6803      	ldr	r3, [r0, #0]
 8013948:	6add      	ldr	r5, [r3, #44]	; 0x2c
 801394a:	9b02      	ldr	r3, [sp, #8]
 801394c:	4642      	mov	r2, r8
 801394e:	fb03 f30a 	mul.w	r3, r3, sl
 8013952:	4621      	mov	r1, r4
 8013954:	47a8      	blx	r5
 8013956:	e7f1      	b.n	801393c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8013958:	200124b8 	.word	0x200124b8
 801395c:	08020c07 	.word	0x08020c07
 8013960:	08021443 	.word	0x08021443
 8013964:	08020cb9 	.word	0x08020cb9
 8013968:	08020ceb 	.word	0x08020ceb
 801396c:	08020d40 	.word	0x08020d40
 8013970:	200124b2 	.word	0x200124b2
 8013974:	200124b4 	.word	0x200124b4
 8013978:	08020d7e 	.word	0x08020d7e

0801397c <_ZN8touchgfx8LCD16bppC1Ev>:
 801397c:	2200      	movs	r2, #0
 801397e:	4910      	ldr	r1, [pc, #64]	; (80139c0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8013980:	6042      	str	r2, [r0, #4]
 8013982:	6001      	str	r1, [r0, #0]
 8013984:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8013988:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801398c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8013990:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8013994:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8013998:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801399c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80139a0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80139a4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80139a8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80139ac:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80139b0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80139b4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80139b8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80139bc:	4770      	bx	lr
 80139be:	bf00      	nop
 80139c0:	080210c0 	.word	0x080210c0

080139c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80139c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139c8:	460c      	mov	r4, r1
 80139ca:	b08d      	sub	sp, #52	; 0x34
 80139cc:	4682      	mov	sl, r0
 80139ce:	6808      	ldr	r0, [r1, #0]
 80139d0:	6849      	ldr	r1, [r1, #4]
 80139d2:	469b      	mov	fp, r3
 80139d4:	ab08      	add	r3, sp, #32
 80139d6:	c303      	stmia	r3!, {r0, r1}
 80139d8:	6810      	ldr	r0, [r2, #0]
 80139da:	6851      	ldr	r1, [r2, #4]
 80139dc:	ab0a      	add	r3, sp, #40	; 0x28
 80139de:	c303      	stmia	r3!, {r0, r1}
 80139e0:	a808      	add	r0, sp, #32
 80139e2:	f7fa fa35 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80139e6:	4621      	mov	r1, r4
 80139e8:	a80a      	add	r0, sp, #40	; 0x28
 80139ea:	f7fa fa19 	bl	800de20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80139ee:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80139f2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80139f6:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80139fa:	4c60      	ldr	r4, [pc, #384]	; (8013b7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 80139fc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8013a00:	6820      	ldr	r0, [r4, #0]
 8013a02:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 8013a06:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013a0a:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8013a0e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8013a12:	440a      	add	r2, r1
 8013a14:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013a18:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8013a1c:	4413      	add	r3, r2
 8013a1e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8013a22:	6803      	ldr	r3, [r0, #0]
 8013a24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013a26:	4798      	blx	r3
 8013a28:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013a2c:	d119      	bne.n	8013a62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8013a2e:	f010 0f20 	tst.w	r0, #32
 8013a32:	6820      	ldr	r0, [r4, #0]
 8013a34:	d018      	beq.n	8013a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8013a36:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013a3a:	6801      	ldr	r1, [r0, #0]
 8013a3c:	9402      	str	r4, [sp, #8]
 8013a3e:	fa1f f489 	uxth.w	r4, r9
 8013a42:	9401      	str	r4, [sp, #4]
 8013a44:	fa1f f488 	uxth.w	r4, r8
 8013a48:	f8cd b00c 	str.w	fp, [sp, #12]
 8013a4c:	9400      	str	r4, [sp, #0]
 8013a4e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8013a50:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8013a54:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8013a58:	4651      	mov	r1, sl
 8013a5a:	47a0      	blx	r4
 8013a5c:	b00d      	add	sp, #52	; 0x34
 8013a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a62:	f010 0f40 	tst.w	r0, #64	; 0x40
 8013a66:	e7e4      	b.n	8013a32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8013a68:	6803      	ldr	r3, [r0, #0]
 8013a6a:	6a1b      	ldr	r3, [r3, #32]
 8013a6c:	4798      	blx	r3
 8013a6e:	4a44      	ldr	r2, [pc, #272]	; (8013b80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8013a70:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8013a74:	8813      	ldrh	r3, [r2, #0]
 8013a76:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8013a7a:	9207      	str	r2, [sp, #28]
 8013a7c:	fb04 1303 	mla	r3, r4, r3, r1
 8013a80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013a84:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8013a88:	0099      	lsls	r1, r3, #2
 8013a8a:	005b      	lsls	r3, r3, #1
 8013a8c:	9106      	str	r1, [sp, #24]
 8013a8e:	9305      	str	r3, [sp, #20]
 8013a90:	f04f 0c00 	mov.w	ip, #0
 8013a94:	45cc      	cmp	ip, r9
 8013a96:	da6b      	bge.n	8013b70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8013a98:	2300      	movs	r3, #0
 8013a9a:	4543      	cmp	r3, r8
 8013a9c:	da55      	bge.n	8013b4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 8013a9e:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 8013aa2:	0e25      	lsrs	r5, r4, #24
 8013aa4:	d013      	beq.n	8013ace <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8013aa6:	2dff      	cmp	r5, #255	; 0xff
 8013aa8:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8013aac:	d111      	bne.n	8013ad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8013aae:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013ab2:	d10e      	bne.n	8013ad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8013ab4:	0962      	lsrs	r2, r4, #5
 8013ab6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8013aba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013abe:	f027 0707 	bic.w	r7, r7, #7
 8013ac2:	4317      	orrs	r7, r2
 8013ac4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013ac8:	433c      	orrs	r4, r7
 8013aca:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8013ace:	3301      	adds	r3, #1
 8013ad0:	e7e3      	b.n	8013a9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8013ad2:	fb0b f505 	mul.w	r5, fp, r5
 8013ad6:	1c6a      	adds	r2, r5, #1
 8013ad8:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8013adc:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8013ae0:	1212      	asrs	r2, r2, #8
 8013ae2:	fa1f fe82 	uxth.w	lr, r2
 8013ae6:	120e      	asrs	r6, r1, #8
 8013ae8:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8013aec:	43d2      	mvns	r2, r2
 8013aee:	b2d2      	uxtb	r2, r2
 8013af0:	fb15 f50e 	smulbb	r5, r5, lr
 8013af4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013af8:	fb06 5602 	mla	r6, r6, r2, r5
 8013afc:	b2e4      	uxtb	r4, r4
 8013afe:	10cd      	asrs	r5, r1, #3
 8013b00:	00c9      	lsls	r1, r1, #3
 8013b02:	b2c9      	uxtb	r1, r1
 8013b04:	fb14 f40e 	smulbb	r4, r4, lr
 8013b08:	fb01 4402 	mla	r4, r1, r2, r4
 8013b0c:	b2ff      	uxtb	r7, r7
 8013b0e:	b2b6      	uxth	r6, r6
 8013b10:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013b14:	b2a4      	uxth	r4, r4
 8013b16:	fb17 f70e 	smulbb	r7, r7, lr
 8013b1a:	fb05 7702 	mla	r7, r5, r2, r7
 8013b1e:	1c72      	adds	r2, r6, #1
 8013b20:	1c65      	adds	r5, r4, #1
 8013b22:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8013b26:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8013b2a:	b2bf      	uxth	r7, r7
 8013b2c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013b30:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013b34:	432e      	orrs	r6, r5
 8013b36:	1c7d      	adds	r5, r7, #1
 8013b38:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8013b3c:	097f      	lsrs	r7, r7, #5
 8013b3e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8013b42:	433e      	orrs	r6, r7
 8013b44:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8013b48:	e7c1      	b.n	8013ace <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8013b4a:	9b07      	ldr	r3, [sp, #28]
 8013b4c:	9a05      	ldr	r2, [sp, #20]
 8013b4e:	881b      	ldrh	r3, [r3, #0]
 8013b50:	eba3 0308 	sub.w	r3, r3, r8
 8013b54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013b58:	4418      	add	r0, r3
 8013b5a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013b5e:	9a06      	ldr	r2, [sp, #24]
 8013b60:	eba3 0308 	sub.w	r3, r3, r8
 8013b64:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013b68:	449a      	add	sl, r3
 8013b6a:	f10c 0c01 	add.w	ip, ip, #1
 8013b6e:	e791      	b.n	8013a94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8013b70:	4b02      	ldr	r3, [pc, #8]	; (8013b7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8013b72:	6818      	ldr	r0, [r3, #0]
 8013b74:	6803      	ldr	r3, [r0, #0]
 8013b76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013b78:	4798      	blx	r3
 8013b7a:	e76f      	b.n	8013a5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8013b7c:	200124b8 	.word	0x200124b8
 8013b80:	200124b2 	.word	0x200124b2

08013b84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8013b84:	b570      	push	{r4, r5, r6, lr}
 8013b86:	9d04      	ldr	r5, [sp, #16]
 8013b88:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8013b8c:	460c      	mov	r4, r1
 8013b8e:	4619      	mov	r1, r3
 8013b90:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013b94:	2a0c      	cmp	r2, #12
 8013b96:	d820      	bhi.n	8013bda <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8013b98:	e8df f002 	tbb	[pc, r2]
 8013b9c:	18121807 	.word	0x18121807
 8013ba0:	18181818 	.word	0x18181818
 8013ba4:	18181818 	.word	0x18181818
 8013ba8:	18          	.byte	0x18
 8013ba9:	00          	.byte	0x00
 8013baa:	6802      	ldr	r2, [r0, #0]
 8013bac:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8013bb0:	68d6      	ldr	r6, [r2, #12]
 8013bb2:	462b      	mov	r3, r5
 8013bb4:	460a      	mov	r2, r1
 8013bb6:	46b4      	mov	ip, r6
 8013bb8:	4621      	mov	r1, r4
 8013bba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013bbe:	4760      	bx	ip
 8013bc0:	462a      	mov	r2, r5
 8013bc2:	4620      	mov	r0, r4
 8013bc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013bc8:	f7ff befc 	b.w	80139c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013bcc:	4b03      	ldr	r3, [pc, #12]	; (8013bdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8013bce:	4a04      	ldr	r2, [pc, #16]	; (8013be0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8013bd0:	4804      	ldr	r0, [pc, #16]	; (8013be4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8013bd2:	f240 21b7 	movw	r1, #695	; 0x2b7
 8013bd6:	f008 fbd1 	bl	801c37c <__assert_func>
 8013bda:	bd70      	pop	{r4, r5, r6, pc}
 8013bdc:	08020dde 	.word	0x08020dde
 8013be0:	080214c9 	.word	0x080214c9
 8013be4:	08020cb9 	.word	0x08020cb9

08013be8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bec:	b093      	sub	sp, #76	; 0x4c
 8013bee:	880f      	ldrh	r7, [r1, #0]
 8013bf0:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8013bf4:	4681      	mov	r9, r0
 8013bf6:	4688      	mov	r8, r1
 8013bf8:	4615      	mov	r5, r2
 8013bfa:	b12f      	cbz	r7, 8013c08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8013bfc:	4b71      	ldr	r3, [pc, #452]	; (8013dc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8013bfe:	4a72      	ldr	r2, [pc, #456]	; (8013dc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8013c00:	4872      	ldr	r0, [pc, #456]	; (8013dcc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8013c02:	21e8      	movs	r1, #232	; 0xe8
 8013c04:	f008 fbba 	bl	801c37c <__assert_func>
 8013c08:	6810      	ldr	r0, [r2, #0]
 8013c0a:	6851      	ldr	r1, [r2, #4]
 8013c0c:	ac0e      	add	r4, sp, #56	; 0x38
 8013c0e:	c403      	stmia	r4!, {r0, r1}
 8013c10:	6818      	ldr	r0, [r3, #0]
 8013c12:	6859      	ldr	r1, [r3, #4]
 8013c14:	ac10      	add	r4, sp, #64	; 0x40
 8013c16:	c403      	stmia	r4!, {r0, r1}
 8013c18:	a80e      	add	r0, sp, #56	; 0x38
 8013c1a:	f7fa f919 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013c1e:	4629      	mov	r1, r5
 8013c20:	a810      	add	r0, sp, #64	; 0x40
 8013c22:	f7fa f8fd 	bl	800de20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013c26:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013c2a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8013c2e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8013c32:	4d67      	ldr	r5, [pc, #412]	; (8013dd0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8013c34:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8013c38:	6828      	ldr	r0, [r5, #0]
 8013c3a:	4c66      	ldr	r4, [pc, #408]	; (8013dd4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8013c3c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013c40:	4489      	add	r9, r1
 8013c42:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8013c46:	440a      	add	r2, r1
 8013c48:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013c4c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013c50:	4413      	add	r3, r2
 8013c52:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8013c56:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8013c5a:	930a      	str	r3, [sp, #40]	; 0x28
 8013c5c:	6803      	ldr	r3, [r0, #0]
 8013c5e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8013c62:	4798      	blx	r3
 8013c64:	2801      	cmp	r0, #1
 8013c66:	d11d      	bne.n	8013ca4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8013c68:	220b      	movs	r2, #11
 8013c6a:	9708      	str	r7, [sp, #32]
 8013c6c:	9207      	str	r2, [sp, #28]
 8013c6e:	8822      	ldrh	r2, [r4, #0]
 8013c70:	f8cd a010 	str.w	sl, [sp, #16]
 8013c74:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8013c78:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8013c7c:	9203      	str	r2, [sp, #12]
 8013c7e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8013c82:	9202      	str	r2, [sp, #8]
 8013c84:	fa1f f28b 	uxth.w	r2, fp
 8013c88:	9201      	str	r2, [sp, #4]
 8013c8a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013c8e:	9200      	str	r2, [sp, #0]
 8013c90:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013c94:	6828      	ldr	r0, [r5, #0]
 8013c96:	4642      	mov	r2, r8
 8013c98:	4649      	mov	r1, r9
 8013c9a:	f7f8 f921 	bl	800bee0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8013c9e:	b013      	add	sp, #76	; 0x4c
 8013ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ca4:	6828      	ldr	r0, [r5, #0]
 8013ca6:	6803      	ldr	r3, [r0, #0]
 8013ca8:	6a1b      	ldr	r3, [r3, #32]
 8013caa:	4798      	blx	r3
 8013cac:	8823      	ldrh	r3, [r4, #0]
 8013cae:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8013cb2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013cb6:	fb01 2303 	mla	r3, r1, r3, r2
 8013cba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013cbe:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8013cc2:	930b      	str	r3, [sp, #44]	; 0x2c
 8013cc4:	005b      	lsls	r3, r3, #1
 8013cc6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8013cca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013ccc:	429f      	cmp	r7, r3
 8013cce:	da72      	bge.n	8013db6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8013cd0:	2100      	movs	r1, #0
 8013cd2:	4559      	cmp	r1, fp
 8013cd4:	da5e      	bge.n	8013d94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8013cd6:	f819 3001 	ldrb.w	r3, [r9, r1]
 8013cda:	2204      	movs	r2, #4
 8013cdc:	fb12 2303 	smlabb	r3, r2, r3, r2
 8013ce0:	f858 2003 	ldr.w	r2, [r8, r3]
 8013ce4:	0e15      	lsrs	r5, r2, #24
 8013ce6:	d013      	beq.n	8013d10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8013ce8:	2dff      	cmp	r5, #255	; 0xff
 8013cea:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8013cee:	d111      	bne.n	8013d14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8013cf0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013cf4:	d10e      	bne.n	8013d14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8013cf6:	0953      	lsrs	r3, r2, #5
 8013cf8:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8013cfc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013d00:	f024 0407 	bic.w	r4, r4, #7
 8013d04:	431c      	orrs	r4, r3
 8013d06:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013d0a:	4314      	orrs	r4, r2
 8013d0c:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8013d10:	3101      	adds	r1, #1
 8013d12:	e7de      	b.n	8013cd2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8013d14:	fb0a f505 	mul.w	r5, sl, r5
 8013d18:	1c6b      	adds	r3, r5, #1
 8013d1a:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8013d1e:	eb03 2325 	add.w	r3, r3, r5, asr #8
 8013d22:	121b      	asrs	r3, r3, #8
 8013d24:	fa1f fe83 	uxth.w	lr, r3
 8013d28:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013d2c:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8013d30:	43db      	mvns	r3, r3
 8013d32:	b2db      	uxtb	r3, r3
 8013d34:	fb15 f50e 	smulbb	r5, r5, lr
 8013d38:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013d3c:	fb06 5603 	mla	r6, r6, r3, r5
 8013d40:	b2d2      	uxtb	r2, r2
 8013d42:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013d46:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013d4a:	fa5f fc8c 	uxtb.w	ip, ip
 8013d4e:	fb12 f20e 	smulbb	r2, r2, lr
 8013d52:	fb0c 2203 	mla	r2, ip, r3, r2
 8013d56:	b2e4      	uxtb	r4, r4
 8013d58:	b2b6      	uxth	r6, r6
 8013d5a:	fb14 f40e 	smulbb	r4, r4, lr
 8013d5e:	b292      	uxth	r2, r2
 8013d60:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013d64:	fb05 4503 	mla	r5, r5, r3, r4
 8013d68:	1c73      	adds	r3, r6, #1
 8013d6a:	1c54      	adds	r4, r2, #1
 8013d6c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8013d70:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8013d74:	b2ad      	uxth	r5, r5
 8013d76:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013d7a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013d7e:	4326      	orrs	r6, r4
 8013d80:	1c6c      	adds	r4, r5, #1
 8013d82:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8013d86:	0964      	lsrs	r4, r4, #5
 8013d88:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8013d8c:	4326      	orrs	r6, r4
 8013d8e:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 8013d92:	e7bd      	b.n	8013d10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8013d94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d96:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013d98:	881b      	ldrh	r3, [r3, #0]
 8013d9a:	eba3 030b 	sub.w	r3, r3, fp
 8013d9e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013da2:	4418      	add	r0, r3
 8013da4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8013da8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013daa:	eba3 030b 	sub.w	r3, r3, fp
 8013dae:	4413      	add	r3, r2
 8013db0:	4499      	add	r9, r3
 8013db2:	3701      	adds	r7, #1
 8013db4:	e789      	b.n	8013cca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8013db6:	4b06      	ldr	r3, [pc, #24]	; (8013dd0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8013db8:	6818      	ldr	r0, [r3, #0]
 8013dba:	6803      	ldr	r3, [r0, #0]
 8013dbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013dbe:	4798      	blx	r3
 8013dc0:	e76d      	b.n	8013c9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8013dc2:	bf00      	nop
 8013dc4:	08020bb7 	.word	0x08020bb7
 8013dc8:	0802129a 	.word	0x0802129a
 8013dcc:	08020cb9 	.word	0x08020cb9
 8013dd0:	200124b8 	.word	0x200124b8
 8013dd4:	200124b2 	.word	0x200124b2

08013dd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8013dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ddc:	4614      	mov	r4, r2
 8013dde:	880a      	ldrh	r2, [r1, #0]
 8013de0:	b093      	sub	sp, #76	; 0x4c
 8013de2:	2a02      	cmp	r2, #2
 8013de4:	4606      	mov	r6, r0
 8013de6:	4689      	mov	r9, r1
 8013de8:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8013dec:	d006      	beq.n	8013dfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8013dee:	4b7a      	ldr	r3, [pc, #488]	; (8013fd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8013df0:	4a7a      	ldr	r2, [pc, #488]	; (8013fdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8013df2:	487b      	ldr	r0, [pc, #492]	; (8013fe0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8013df4:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8013df8:	f008 fac0 	bl	801c37c <__assert_func>
 8013dfc:	2f00      	cmp	r7, #0
 8013dfe:	d04b      	beq.n	8013e98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8013e00:	6820      	ldr	r0, [r4, #0]
 8013e02:	6861      	ldr	r1, [r4, #4]
 8013e04:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8013fe8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8013e08:	ad0e      	add	r5, sp, #56	; 0x38
 8013e0a:	c503      	stmia	r5!, {r0, r1}
 8013e0c:	6818      	ldr	r0, [r3, #0]
 8013e0e:	6859      	ldr	r1, [r3, #4]
 8013e10:	ad10      	add	r5, sp, #64	; 0x40
 8013e12:	c503      	stmia	r5!, {r0, r1}
 8013e14:	a80e      	add	r0, sp, #56	; 0x38
 8013e16:	f7fa f81b 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e1a:	4621      	mov	r1, r4
 8013e1c:	a810      	add	r0, sp, #64	; 0x40
 8013e1e:	f7f9 ffff 	bl	800de20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013e22:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013e26:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8013e2a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8013e2e:	f8da 0000 	ldr.w	r0, [sl]
 8013e32:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 8013e36:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 8013e3a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013e3e:	1874      	adds	r4, r6, r1
 8013e40:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8013e44:	4e67      	ldr	r6, [pc, #412]	; (8013fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 8013e46:	440a      	add	r2, r1
 8013e48:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013e4c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013e50:	4413      	add	r3, r2
 8013e52:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8013e56:	6803      	ldr	r3, [r0, #0]
 8013e58:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8013e5c:	4798      	blx	r3
 8013e5e:	2801      	cmp	r0, #1
 8013e60:	d11d      	bne.n	8013e9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8013e62:	2200      	movs	r2, #0
 8013e64:	210b      	movs	r1, #11
 8013e66:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8013e6a:	8831      	ldrh	r1, [r6, #0]
 8013e6c:	9704      	str	r7, [sp, #16]
 8013e6e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013e72:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8013e76:	9203      	str	r2, [sp, #12]
 8013e78:	fa1f f288 	uxth.w	r2, r8
 8013e7c:	9202      	str	r2, [sp, #8]
 8013e7e:	b2ad      	uxth	r5, r5
 8013e80:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013e84:	9200      	str	r2, [sp, #0]
 8013e86:	9501      	str	r5, [sp, #4]
 8013e88:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013e8c:	f8da 0000 	ldr.w	r0, [sl]
 8013e90:	464a      	mov	r2, r9
 8013e92:	4621      	mov	r1, r4
 8013e94:	f7f8 f824 	bl	800bee0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8013e98:	b013      	add	sp, #76	; 0x4c
 8013e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e9e:	f8da 0000 	ldr.w	r0, [sl]
 8013ea2:	6803      	ldr	r3, [r0, #0]
 8013ea4:	6a1b      	ldr	r3, [r3, #32]
 8013ea6:	4798      	blx	r3
 8013ea8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013eac:	8833      	ldrh	r3, [r6, #0]
 8013eae:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8013eb2:	fb01 2303 	mla	r3, r1, r3, r2
 8013eb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013eba:	2fff      	cmp	r7, #255	; 0xff
 8013ebc:	f109 0304 	add.w	r3, r9, #4
 8013ec0:	930a      	str	r3, [sp, #40]	; 0x28
 8013ec2:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 8013ec6:	d111      	bne.n	8013eec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8013ec8:	b212      	sxth	r2, r2
 8013eca:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 8013ece:	2100      	movs	r1, #0
 8013ed0:	4541      	cmp	r1, r8
 8013ed2:	da7a      	bge.n	8013fca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8013ed4:	2300      	movs	r3, #0
 8013ed6:	42ab      	cmp	r3, r5
 8013ed8:	da6b      	bge.n	8013fb2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 8013eda:	f814 c003 	ldrb.w	ip, [r4, r3]
 8013ede:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013ee0:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8013ee4:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8013ee8:	3301      	adds	r3, #1
 8013eea:	e7f4      	b.n	8013ed6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8013eec:	b213      	sxth	r3, r2
 8013eee:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8013ef2:	930b      	str	r3, [sp, #44]	; 0x2c
 8013ef4:	005b      	lsls	r3, r3, #1
 8013ef6:	930c      	str	r3, [sp, #48]	; 0x30
 8013ef8:	f04f 0900 	mov.w	r9, #0
 8013efc:	b2ba      	uxth	r2, r7
 8013efe:	fa1f fc8c 	uxth.w	ip, ip
 8013f02:	960d      	str	r6, [sp, #52]	; 0x34
 8013f04:	45c1      	cmp	r9, r8
 8013f06:	da60      	bge.n	8013fca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8013f08:	46a3      	mov	fp, r4
 8013f0a:	4682      	mov	sl, r0
 8013f0c:	ebab 0304 	sub.w	r3, fp, r4
 8013f10:	429d      	cmp	r5, r3
 8013f12:	dd3e      	ble.n	8013f92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8013f14:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8013f18:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013f1a:	f8ba 1000 	ldrh.w	r1, [sl]
 8013f1e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013f22:	120e      	asrs	r6, r1, #8
 8013f24:	121f      	asrs	r7, r3, #8
 8013f26:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013f2a:	fb16 f60c 	smulbb	r6, r6, ip
 8013f2e:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 8013f32:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013f36:	00c9      	lsls	r1, r1, #3
 8013f38:	fb07 6702 	mla	r7, r7, r2, r6
 8013f3c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013f40:	10de      	asrs	r6, r3, #3
 8013f42:	b2c9      	uxtb	r1, r1
 8013f44:	00db      	lsls	r3, r3, #3
 8013f46:	fb1e fe0c 	smulbb	lr, lr, ip
 8013f4a:	fb11 f10c 	smulbb	r1, r1, ip
 8013f4e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013f52:	b2db      	uxtb	r3, r3
 8013f54:	b2bf      	uxth	r7, r7
 8013f56:	fb06 e602 	mla	r6, r6, r2, lr
 8013f5a:	fb03 1302 	mla	r3, r3, r2, r1
 8013f5e:	b2b6      	uxth	r6, r6
 8013f60:	b29b      	uxth	r3, r3
 8013f62:	1c79      	adds	r1, r7, #1
 8013f64:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8013f68:	f106 0e01 	add.w	lr, r6, #1
 8013f6c:	1c59      	adds	r1, r3, #1
 8013f6e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8013f72:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8013f76:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013f7a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8013f7e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8013f82:	430f      	orrs	r7, r1
 8013f84:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8013f88:	ea47 070e 	orr.w	r7, r7, lr
 8013f8c:	f82a 7b02 	strh.w	r7, [sl], #2
 8013f90:	e7bc      	b.n	8013f0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 8013f92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f94:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013f96:	881b      	ldrh	r3, [r3, #0]
 8013f98:	1b5b      	subs	r3, r3, r5
 8013f9a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013f9e:	4418      	add	r0, r3
 8013fa0:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8013fa4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8013fa6:	1b5b      	subs	r3, r3, r5
 8013fa8:	440b      	add	r3, r1
 8013faa:	441c      	add	r4, r3
 8013fac:	f109 0901 	add.w	r9, r9, #1
 8013fb0:	e7a8      	b.n	8013f04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 8013fb2:	8833      	ldrh	r3, [r6, #0]
 8013fb4:	1b5b      	subs	r3, r3, r5
 8013fb6:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8013fba:	4418      	add	r0, r3
 8013fbc:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8013fc0:	1b5b      	subs	r3, r3, r5
 8013fc2:	4413      	add	r3, r2
 8013fc4:	441c      	add	r4, r3
 8013fc6:	3101      	adds	r1, #1
 8013fc8:	e782      	b.n	8013ed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 8013fca:	4b07      	ldr	r3, [pc, #28]	; (8013fe8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 8013fcc:	6818      	ldr	r0, [r3, #0]
 8013fce:	6803      	ldr	r3, [r0, #0]
 8013fd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013fd2:	4798      	blx	r3
 8013fd4:	e760      	b.n	8013e98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8013fd6:	bf00      	nop
 8013fd8:	08020a75 	.word	0x08020a75
 8013fdc:	08021104 	.word	0x08021104
 8013fe0:	08020cb9 	.word	0x08020cb9
 8013fe4:	200124b2 	.word	0x200124b2
 8013fe8:	200124b8 	.word	0x200124b8

08013fec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8013fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ff0:	4616      	mov	r6, r2
 8013ff2:	880a      	ldrh	r2, [r1, #0]
 8013ff4:	b093      	sub	sp, #76	; 0x4c
 8013ff6:	2a01      	cmp	r2, #1
 8013ff8:	4681      	mov	r9, r0
 8013ffa:	4688      	mov	r8, r1
 8013ffc:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8014000:	d006      	beq.n	8014010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8014002:	4b6c      	ldr	r3, [pc, #432]	; (80141b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014004:	4a6c      	ldr	r2, [pc, #432]	; (80141b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 8014006:	486d      	ldr	r0, [pc, #436]	; (80141bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8014008:	f240 119d 	movw	r1, #413	; 0x19d
 801400c:	f008 f9b6 	bl	801c37c <__assert_func>
 8014010:	f1ba 0f00 	cmp.w	sl, #0
 8014014:	d04a      	beq.n	80140ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8014016:	6830      	ldr	r0, [r6, #0]
 8014018:	6871      	ldr	r1, [r6, #4]
 801401a:	4d69      	ldr	r5, [pc, #420]	; (80141c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801401c:	ac0e      	add	r4, sp, #56	; 0x38
 801401e:	c403      	stmia	r4!, {r0, r1}
 8014020:	6818      	ldr	r0, [r3, #0]
 8014022:	6859      	ldr	r1, [r3, #4]
 8014024:	ac10      	add	r4, sp, #64	; 0x40
 8014026:	c403      	stmia	r4!, {r0, r1}
 8014028:	a80e      	add	r0, sp, #56	; 0x38
 801402a:	f7f9 ff11 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801402e:	4631      	mov	r1, r6
 8014030:	a810      	add	r0, sp, #64	; 0x40
 8014032:	f7f9 fef5 	bl	800de20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014036:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801403a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801403e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8014042:	6828      	ldr	r0, [r5, #0]
 8014044:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8014048:	4c5e      	ldr	r4, [pc, #376]	; (80141c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801404a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801404e:	4489      	add	r9, r1
 8014050:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8014054:	440a      	add	r2, r1
 8014056:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801405a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801405e:	4413      	add	r3, r2
 8014060:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8014064:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8014068:	930a      	str	r3, [sp, #40]	; 0x28
 801406a:	6803      	ldr	r3, [r0, #0]
 801406c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8014070:	4798      	blx	r3
 8014072:	2801      	cmp	r0, #1
 8014074:	d11d      	bne.n	80140b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8014076:	220b      	movs	r2, #11
 8014078:	2100      	movs	r1, #0
 801407a:	e9cd 2107 	strd	r2, r1, [sp, #28]
 801407e:	8822      	ldrh	r2, [r4, #0]
 8014080:	f8cd a010 	str.w	sl, [sp, #16]
 8014084:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8014088:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801408c:	9203      	str	r2, [sp, #12]
 801408e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8014092:	9202      	str	r2, [sp, #8]
 8014094:	b2b6      	uxth	r6, r6
 8014096:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801409a:	9200      	str	r2, [sp, #0]
 801409c:	9601      	str	r6, [sp, #4]
 801409e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80140a2:	6828      	ldr	r0, [r5, #0]
 80140a4:	4642      	mov	r2, r8
 80140a6:	4649      	mov	r1, r9
 80140a8:	f7f7 ff1a 	bl	800bee0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80140ac:	b013      	add	sp, #76	; 0x4c
 80140ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140b2:	6828      	ldr	r0, [r5, #0]
 80140b4:	6803      	ldr	r3, [r0, #0]
 80140b6:	6a1b      	ldr	r3, [r3, #32]
 80140b8:	4798      	blx	r3
 80140ba:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80140be:	8823      	ldrh	r3, [r4, #0]
 80140c0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80140c4:	940d      	str	r4, [sp, #52]	; 0x34
 80140c6:	fb01 2303 	mla	r3, r1, r3, r2
 80140ca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80140ce:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 80140d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80140d4:	ea6f 010a 	mvn.w	r1, sl
 80140d8:	005b      	lsls	r3, r3, #1
 80140da:	930c      	str	r3, [sp, #48]	; 0x30
 80140dc:	f04f 0e00 	mov.w	lr, #0
 80140e0:	b2c9      	uxtb	r1, r1
 80140e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80140e4:	459e      	cmp	lr, r3
 80140e6:	da5f      	bge.n	80141a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80140e8:	2700      	movs	r7, #0
 80140ea:	fa1f fb8a 	uxth.w	fp, sl
 80140ee:	42b7      	cmp	r7, r6
 80140f0:	da4a      	bge.n	8014188 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 80140f2:	f819 3007 	ldrb.w	r3, [r9, r7]
 80140f6:	2203      	movs	r2, #3
 80140f8:	2404      	movs	r4, #4
 80140fa:	fb12 4303 	smlabb	r3, r2, r3, r4
 80140fe:	eb08 0403 	add.w	r4, r8, r3
 8014102:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014106:	78a2      	ldrb	r2, [r4, #2]
 8014108:	7865      	ldrb	r5, [r4, #1]
 801410a:	f818 c003 	ldrb.w	ip, [r8, r3]
 801410e:	d10c      	bne.n	801412a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8014110:	4b2d      	ldr	r3, [pc, #180]	; (80141c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8014112:	00ed      	lsls	r5, r5, #3
 8014114:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8014118:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801411c:	432a      	orrs	r2, r5
 801411e:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 8014122:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 8014126:	3701      	adds	r7, #1
 8014128:	e7e1      	b.n	80140ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 801412a:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 801412e:	121c      	asrs	r4, r3, #8
 8014130:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8014134:	fb12 f20b 	smulbb	r2, r2, fp
 8014138:	fb04 2201 	mla	r2, r4, r1, r2
 801413c:	10dc      	asrs	r4, r3, #3
 801413e:	00db      	lsls	r3, r3, #3
 8014140:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8014144:	b2db      	uxtb	r3, r3
 8014146:	fb15 f50b 	smulbb	r5, r5, fp
 801414a:	fb1c fc0b 	smulbb	ip, ip, fp
 801414e:	b292      	uxth	r2, r2
 8014150:	fb04 5501 	mla	r5, r4, r1, r5
 8014154:	fb03 cc01 	mla	ip, r3, r1, ip
 8014158:	b2ad      	uxth	r5, r5
 801415a:	fa1f fc8c 	uxth.w	ip, ip
 801415e:	1c53      	adds	r3, r2, #1
 8014160:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8014164:	1c6c      	adds	r4, r5, #1
 8014166:	f10c 0301 	add.w	r3, ip, #1
 801416a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801416e:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 8014172:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8014176:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801417a:	096d      	lsrs	r5, r5, #5
 801417c:	ea42 020c 	orr.w	r2, r2, ip
 8014180:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014184:	432a      	orrs	r2, r5
 8014186:	e7cc      	b.n	8014122 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 8014188:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801418a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801418c:	881b      	ldrh	r3, [r3, #0]
 801418e:	1b9b      	subs	r3, r3, r6
 8014190:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014194:	4418      	add	r0, r3
 8014196:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 801419a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801419c:	1b9b      	subs	r3, r3, r6
 801419e:	4413      	add	r3, r2
 80141a0:	4499      	add	r9, r3
 80141a2:	f10e 0e01 	add.w	lr, lr, #1
 80141a6:	e79c      	b.n	80140e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 80141a8:	4b05      	ldr	r3, [pc, #20]	; (80141c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80141aa:	6818      	ldr	r0, [r3, #0]
 80141ac:	6803      	ldr	r3, [r0, #0]
 80141ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80141b0:	4798      	blx	r3
 80141b2:	e77b      	b.n	80140ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80141b4:	08020ac3 	.word	0x08020ac3
 80141b8:	0802118d 	.word	0x0802118d
 80141bc:	08020cb9 	.word	0x08020cb9
 80141c0:	200124b8 	.word	0x200124b8
 80141c4:	200124b2 	.word	0x200124b2
 80141c8:	fffff800 	.word	0xfffff800

080141cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80141cc:	b430      	push	{r4, r5}
 80141ce:	780d      	ldrb	r5, [r1, #0]
 80141d0:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80141d4:	2d01      	cmp	r5, #1
 80141d6:	d00a      	beq.n	80141ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80141d8:	d305      	bcc.n	80141e6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80141da:	2d02      	cmp	r5, #2
 80141dc:	d10b      	bne.n	80141f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80141de:	9402      	str	r4, [sp, #8]
 80141e0:	bc30      	pop	{r4, r5}
 80141e2:	f7ff bdf9 	b.w	8013dd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80141e6:	9402      	str	r4, [sp, #8]
 80141e8:	bc30      	pop	{r4, r5}
 80141ea:	f7ff bcfd 	b.w	8013be8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80141ee:	9402      	str	r4, [sp, #8]
 80141f0:	bc30      	pop	{r4, r5}
 80141f2:	f7ff befb 	b.w	8013fec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80141f6:	bc30      	pop	{r4, r5}
 80141f8:	4770      	bx	lr
	...

080141fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80141fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014200:	4605      	mov	r5, r0
 8014202:	b089      	sub	sp, #36	; 0x24
 8014204:	6810      	ldr	r0, [r2, #0]
 8014206:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 801420a:	460c      	mov	r4, r1
 801420c:	6851      	ldr	r1, [r2, #4]
 801420e:	ae04      	add	r6, sp, #16
 8014210:	c603      	stmia	r6!, {r0, r1}
 8014212:	6818      	ldr	r0, [r3, #0]
 8014214:	6859      	ldr	r1, [r3, #4]
 8014216:	ae06      	add	r6, sp, #24
 8014218:	4617      	mov	r7, r2
 801421a:	c603      	stmia	r6!, {r0, r1}
 801421c:	a804      	add	r0, sp, #16
 801421e:	f7f9 fe17 	bl	800de50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014222:	4639      	mov	r1, r7
 8014224:	a806      	add	r0, sp, #24
 8014226:	f7f9 fdfb 	bl	800de20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801422a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 801422e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014232:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014236:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 801423a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801423e:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 8014242:	440c      	add	r4, r1
 8014244:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8014248:	440a      	add	r2, r1
 801424a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801424e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014252:	4413      	add	r3, r2
 8014254:	f8ad 301a 	strh.w	r3, [sp, #26]
 8014258:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801425c:	9300      	str	r3, [sp, #0]
 801425e:	4b80      	ldr	r3, [pc, #512]	; (8014460 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8014260:	6818      	ldr	r0, [r3, #0]
 8014262:	6803      	ldr	r3, [r0, #0]
 8014264:	6a1b      	ldr	r3, [r3, #32]
 8014266:	4798      	blx	r3
 8014268:	4b7e      	ldr	r3, [pc, #504]	; (8014464 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 801426a:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 801426e:	881a      	ldrh	r2, [r3, #0]
 8014270:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8014274:	fb06 1202 	mla	r2, r6, r2, r1
 8014278:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801427c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014280:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 8014284:	b212      	sxth	r2, r2
 8014286:	d117      	bne.n	80142b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8014288:	9201      	str	r2, [sp, #4]
 801428a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801428e:	f04f 0a00 	mov.w	sl, #0
 8014292:	9302      	str	r3, [sp, #8]
 8014294:	9b00      	ldr	r3, [sp, #0]
 8014296:	459a      	cmp	sl, r3
 8014298:	f280 80d9 	bge.w	801444e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 801429c:	2100      	movs	r1, #0
 801429e:	4541      	cmp	r1, r8
 80142a0:	f280 80c1 	bge.w	8014426 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 80142a4:	5c63      	ldrb	r3, [r4, r1]
 80142a6:	b12b      	cbz	r3, 80142b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80142a8:	2bff      	cmp	r3, #255	; 0xff
 80142aa:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 80142ae:	d176      	bne.n	801439e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 80142b0:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 80142b4:	3101      	adds	r1, #1
 80142b6:	e7f2      	b.n	801429e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 80142b8:	9202      	str	r2, [sp, #8]
 80142ba:	0052      	lsls	r2, r2, #1
 80142bc:	9201      	str	r2, [sp, #4]
 80142be:	f04f 0b00 	mov.w	fp, #0
 80142c2:	9303      	str	r3, [sp, #12]
 80142c4:	9b00      	ldr	r3, [sp, #0]
 80142c6:	459b      	cmp	fp, r3
 80142c8:	f280 80c1 	bge.w	801444e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80142cc:	f04f 0c00 	mov.w	ip, #0
 80142d0:	45c4      	cmp	ip, r8
 80142d2:	da4f      	bge.n	8014374 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 80142d4:	f814 300c 	ldrb.w	r3, [r4, ip]
 80142d8:	2b00      	cmp	r3, #0
 80142da:	d048      	beq.n	801436e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 80142dc:	fb09 f303 	mul.w	r3, r9, r3
 80142e0:	1c5a      	adds	r2, r3, #1
 80142e2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80142e6:	121b      	asrs	r3, r3, #8
 80142e8:	d041      	beq.n	801436e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 80142ea:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 80142ee:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 80142f2:	b29e      	uxth	r6, r3
 80142f4:	1211      	asrs	r1, r2, #8
 80142f6:	43db      	mvns	r3, r3
 80142f8:	b2db      	uxtb	r3, r3
 80142fa:	ea4f 272e 	mov.w	r7, lr, asr #8
 80142fe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014302:	fb11 f103 	smulbb	r1, r1, r3
 8014306:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801430a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801430e:	00d2      	lsls	r2, r2, #3
 8014310:	fb07 1706 	mla	r7, r7, r6, r1
 8014314:	b2d2      	uxtb	r2, r2
 8014316:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801431a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801431e:	fb12 f203 	smulbb	r2, r2, r3
 8014322:	fa5f fe8e 	uxtb.w	lr, lr
 8014326:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801432a:	fb0e 2206 	mla	r2, lr, r6, r2
 801432e:	fb1a fa03 	smulbb	sl, sl, r3
 8014332:	b2bf      	uxth	r7, r7
 8014334:	b292      	uxth	r2, r2
 8014336:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801433a:	fb01 a106 	mla	r1, r1, r6, sl
 801433e:	1c7b      	adds	r3, r7, #1
 8014340:	f102 0a01 	add.w	sl, r2, #1
 8014344:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8014348:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 801434c:	b289      	uxth	r1, r1
 801434e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014352:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014356:	ea47 070a 	orr.w	r7, r7, sl
 801435a:	f101 0a01 	add.w	sl, r1, #1
 801435e:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8014362:	0949      	lsrs	r1, r1, #5
 8014364:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014368:	430f      	orrs	r7, r1
 801436a:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 801436e:	f10c 0c01 	add.w	ip, ip, #1
 8014372:	e7ad      	b.n	80142d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 8014374:	9b03      	ldr	r3, [sp, #12]
 8014376:	9a01      	ldr	r2, [sp, #4]
 8014378:	881b      	ldrh	r3, [r3, #0]
 801437a:	eba3 0308 	sub.w	r3, r3, r8
 801437e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014382:	4418      	add	r0, r3
 8014384:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8014388:	eba3 0308 	sub.w	r3, r3, r8
 801438c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8014390:	4415      	add	r5, r2
 8014392:	9a02      	ldr	r2, [sp, #8]
 8014394:	4413      	add	r3, r2
 8014396:	441c      	add	r4, r3
 8014398:	f10b 0b01 	add.w	fp, fp, #1
 801439c:	e792      	b.n	80142c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 801439e:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 80143a2:	b29f      	uxth	r7, r3
 80143a4:	1216      	asrs	r6, r2, #8
 80143a6:	43db      	mvns	r3, r3
 80143a8:	b2db      	uxtb	r3, r3
 80143aa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80143ae:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80143b2:	fb16 f603 	smulbb	r6, r6, r3
 80143b6:	ea4f 09e2 	mov.w	r9, r2, asr #3
 80143ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80143be:	00d2      	lsls	r2, r2, #3
 80143c0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80143c4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80143c8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80143cc:	b2d2      	uxtb	r2, r2
 80143ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80143d2:	fa1f fc8c 	uxth.w	ip, ip
 80143d6:	fb19 f903 	smulbb	r9, r9, r3
 80143da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80143de:	fa5f fe8e 	uxtb.w	lr, lr
 80143e2:	fb12 f203 	smulbb	r2, r2, r3
 80143e6:	fb06 9607 	mla	r6, r6, r7, r9
 80143ea:	fb0e 2207 	mla	r2, lr, r7, r2
 80143ee:	f10c 0901 	add.w	r9, ip, #1
 80143f2:	b292      	uxth	r2, r2
 80143f4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80143f8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80143fc:	f102 0c01 	add.w	ip, r2, #1
 8014400:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8014404:	b2b6      	uxth	r6, r6
 8014406:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801440a:	ea49 0c02 	orr.w	ip, r9, r2
 801440e:	f106 0901 	add.w	r9, r6, #1
 8014412:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8014416:	0976      	lsrs	r6, r6, #5
 8014418:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801441c:	ea4c 0c06 	orr.w	ip, ip, r6
 8014420:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8014424:	e746      	b.n	80142b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8014426:	9b02      	ldr	r3, [sp, #8]
 8014428:	881b      	ldrh	r3, [r3, #0]
 801442a:	eba3 0308 	sub.w	r3, r3, r8
 801442e:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8014432:	4418      	add	r0, r3
 8014434:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8014438:	eba3 0308 	sub.w	r3, r3, r8
 801443c:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8014440:	4415      	add	r5, r2
 8014442:	9a01      	ldr	r2, [sp, #4]
 8014444:	4413      	add	r3, r2
 8014446:	441c      	add	r4, r3
 8014448:	f10a 0a01 	add.w	sl, sl, #1
 801444c:	e722      	b.n	8014294 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 801444e:	4b04      	ldr	r3, [pc, #16]	; (8014460 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8014450:	6818      	ldr	r0, [r3, #0]
 8014452:	6803      	ldr	r3, [r0, #0]
 8014454:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014456:	4798      	blx	r3
 8014458:	b009      	add	sp, #36	; 0x24
 801445a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801445e:	bf00      	nop
 8014460:	200124b8 	.word	0x200124b8
 8014464:	200124b2 	.word	0x200124b2

08014468 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8014468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801446c:	b089      	sub	sp, #36	; 0x24
 801446e:	4682      	mov	sl, r0
 8014470:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8014474:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014476:	460d      	mov	r5, r1
 8014478:	4691      	mov	r9, r2
 801447a:	4698      	mov	r8, r3
 801447c:	b3ae      	cbz	r6, 80144ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801447e:	4608      	mov	r0, r1
 8014480:	f7fc fa96 	bl	80109b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014484:	4607      	mov	r7, r0
 8014486:	4628      	mov	r0, r5
 8014488:	f7fc facc 	bl	8010a24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801448c:	f8ad 000e 	strh.w	r0, [sp, #14]
 8014490:	4628      	mov	r0, r5
 8014492:	f8ad 9008 	strh.w	r9, [sp, #8]
 8014496:	f8ad 800a 	strh.w	r8, [sp, #10]
 801449a:	f8ad 700c 	strh.w	r7, [sp, #12]
 801449e:	f7fc fc13 	bl	8010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80144a2:	b178      	cbz	r0, 80144c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80144a4:	4628      	mov	r0, r5
 80144a6:	f7fc fc0f 	bl	8010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80144aa:	2802      	cmp	r0, #2
 80144ac:	d00a      	beq.n	80144c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80144ae:	4628      	mov	r0, r5
 80144b0:	f7fc fc0a 	bl	8010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80144b4:	280b      	cmp	r0, #11
 80144b6:	d005      	beq.n	80144c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80144b8:	4b69      	ldr	r3, [pc, #420]	; (8014660 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80144ba:	4a6a      	ldr	r2, [pc, #424]	; (8014664 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 80144bc:	486a      	ldr	r0, [pc, #424]	; (8014668 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 80144be:	214b      	movs	r1, #75	; 0x4b
 80144c0:	f007 ff5c 	bl	801c37c <__assert_func>
 80144c4:	4628      	mov	r0, r5
 80144c6:	f7fc fb7b 	bl	8010bc0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80144ca:	4607      	mov	r7, r0
 80144cc:	4628      	mov	r0, r5
 80144ce:	f7fc fba9 	bl	8010c24 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80144d2:	4681      	mov	r9, r0
 80144d4:	4628      	mov	r0, r5
 80144d6:	f7fc fbf7 	bl	8010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80144da:	2802      	cmp	r0, #2
 80144dc:	d108      	bne.n	80144f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80144de:	4633      	mov	r3, r6
 80144e0:	4622      	mov	r2, r4
 80144e2:	a902      	add	r1, sp, #8
 80144e4:	4638      	mov	r0, r7
 80144e6:	f7ff fa6d 	bl	80139c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80144ea:	b009      	add	sp, #36	; 0x24
 80144ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144f0:	4628      	mov	r0, r5
 80144f2:	f7fc fbe9 	bl	8010cc8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80144f6:	280b      	cmp	r0, #11
 80144f8:	d107      	bne.n	801450a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 80144fa:	9600      	str	r6, [sp, #0]
 80144fc:	4623      	mov	r3, r4
 80144fe:	aa02      	add	r2, sp, #8
 8014500:	4649      	mov	r1, r9
 8014502:	4638      	mov	r0, r7
 8014504:	f7ff fe62 	bl	80141cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8014508:	e7ef      	b.n	80144ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801450a:	4628      	mov	r0, r5
 801450c:	f7fc fb1e 	bl	8010b4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014510:	b950      	cbnz	r0, 8014528 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8014512:	e9cd 6000 	strd	r6, r0, [sp]
 8014516:	f8da 3000 	ldr.w	r3, [sl]
 801451a:	aa02      	add	r2, sp, #8
 801451c:	68dd      	ldr	r5, [r3, #12]
 801451e:	4639      	mov	r1, r7
 8014520:	4623      	mov	r3, r4
 8014522:	4650      	mov	r0, sl
 8014524:	47a8      	blx	r5
 8014526:	e7e0      	b.n	80144ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8014528:	f10d 0818 	add.w	r8, sp, #24
 801452c:	4629      	mov	r1, r5
 801452e:	4640      	mov	r0, r8
 8014530:	f7fc fab2 	bl	8010a98 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014534:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014538:	ad04      	add	r5, sp, #16
 801453a:	e885 0003 	stmia.w	r5, {r0, r1}
 801453e:	4628      	mov	r0, r5
 8014540:	4621      	mov	r1, r4
 8014542:	f7f6 fd79 	bl	800b038 <_ZN8touchgfx4RectaNERKS0_>
 8014546:	4628      	mov	r0, r5
 8014548:	f7f6 fdb9 	bl	800b0be <_ZNK8touchgfx4Rect7isEmptyEv>
 801454c:	b138      	cbz	r0, 801455e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 801454e:	9600      	str	r6, [sp, #0]
 8014550:	4623      	mov	r3, r4
 8014552:	aa02      	add	r2, sp, #8
 8014554:	4649      	mov	r1, r9
 8014556:	4638      	mov	r0, r7
 8014558:	f7ff fe50 	bl	80141fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801455c:	e7c5      	b.n	80144ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801455e:	e9cd 6000 	strd	r6, r0, [sp]
 8014562:	f8da 3000 	ldr.w	r3, [sl]
 8014566:	aa02      	add	r2, sp, #8
 8014568:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801456c:	4639      	mov	r1, r7
 801456e:	462b      	mov	r3, r5
 8014570:	4650      	mov	r0, sl
 8014572:	47d8      	blx	fp
 8014574:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014578:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801457c:	4293      	cmp	r3, r2
 801457e:	dd13      	ble.n	80145a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8014580:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014584:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014588:	f8ad 0018 	strh.w	r0, [sp, #24]
 801458c:	1a9b      	subs	r3, r3, r2
 801458e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8014592:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014596:	f8ad 301e 	strh.w	r3, [sp, #30]
 801459a:	9600      	str	r6, [sp, #0]
 801459c:	4643      	mov	r3, r8
 801459e:	aa02      	add	r2, sp, #8
 80145a0:	4649      	mov	r1, r9
 80145a2:	4638      	mov	r0, r7
 80145a4:	f7ff fe2a 	bl	80141fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80145a8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80145ac:	f9b4 2000 	ldrsh.w	r2, [r4]
 80145b0:	4293      	cmp	r3, r2
 80145b2:	dd13      	ble.n	80145dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80145b4:	1a9b      	subs	r3, r3, r2
 80145b6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80145ba:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80145be:	f8ad 2018 	strh.w	r2, [sp, #24]
 80145c2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80145c6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80145ca:	f8ad 101e 	strh.w	r1, [sp, #30]
 80145ce:	9600      	str	r6, [sp, #0]
 80145d0:	4643      	mov	r3, r8
 80145d2:	aa02      	add	r2, sp, #8
 80145d4:	4649      	mov	r1, r9
 80145d6:	4638      	mov	r0, r7
 80145d8:	f7ff fe10 	bl	80141fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80145dc:	88a2      	ldrh	r2, [r4, #4]
 80145de:	8823      	ldrh	r3, [r4, #0]
 80145e0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80145e4:	4413      	add	r3, r2
 80145e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80145ea:	440a      	add	r2, r1
 80145ec:	b29b      	uxth	r3, r3
 80145ee:	b292      	uxth	r2, r2
 80145f0:	b211      	sxth	r1, r2
 80145f2:	b218      	sxth	r0, r3
 80145f4:	4288      	cmp	r0, r1
 80145f6:	dd13      	ble.n	8014620 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 80145f8:	1a9b      	subs	r3, r3, r2
 80145fa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80145fe:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8014602:	f8ad 1018 	strh.w	r1, [sp, #24]
 8014606:	f8ad 301c 	strh.w	r3, [sp, #28]
 801460a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801460e:	9600      	str	r6, [sp, #0]
 8014610:	4643      	mov	r3, r8
 8014612:	aa02      	add	r2, sp, #8
 8014614:	4649      	mov	r1, r9
 8014616:	4638      	mov	r0, r7
 8014618:	f8ad 501a 	strh.w	r5, [sp, #26]
 801461c:	f7ff fdee 	bl	80141fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014620:	88e2      	ldrh	r2, [r4, #6]
 8014622:	8863      	ldrh	r3, [r4, #2]
 8014624:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014628:	4413      	add	r3, r2
 801462a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801462e:	440a      	add	r2, r1
 8014630:	b29b      	uxth	r3, r3
 8014632:	b292      	uxth	r2, r2
 8014634:	b211      	sxth	r1, r2
 8014636:	b218      	sxth	r0, r3
 8014638:	4288      	cmp	r0, r1
 801463a:	f77f af56 	ble.w	80144ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801463e:	f9b4 5000 	ldrsh.w	r5, [r4]
 8014642:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014646:	f8ad 5018 	strh.w	r5, [sp, #24]
 801464a:	1a9b      	subs	r3, r3, r2
 801464c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014650:	f8ad 101a 	strh.w	r1, [sp, #26]
 8014654:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014658:	9600      	str	r6, [sp, #0]
 801465a:	4643      	mov	r3, r8
 801465c:	e779      	b.n	8014552 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 801465e:	bf00      	nop
 8014660:	08020b11 	.word	0x08020b11
 8014664:	08021216 	.word	0x08021216
 8014668:	08020cb9 	.word	0x08020cb9

0801466c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801466c:	b508      	push	{r3, lr}
 801466e:	b180      	cbz	r0, 8014692 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8014670:	2902      	cmp	r1, #2
 8014672:	d014      	beq.n	801469e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8014674:	2903      	cmp	r1, #3
 8014676:	d01d      	beq.n	80146b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014678:	2901      	cmp	r1, #1
 801467a:	d101      	bne.n	8014680 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801467c:	2001      	movs	r0, #1
 801467e:	bd08      	pop	{r3, pc}
 8014680:	4b0e      	ldr	r3, [pc, #56]	; (80146bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014682:	8818      	ldrh	r0, [r3, #0]
 8014684:	b990      	cbnz	r0, 80146ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8014686:	4b0e      	ldr	r3, [pc, #56]	; (80146c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8014688:	4a0e      	ldr	r2, [pc, #56]	; (80146c4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801468a:	480f      	ldr	r0, [pc, #60]	; (80146c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801468c:	2154      	movs	r1, #84	; 0x54
 801468e:	f007 fe75 	bl	801c37c <__assert_func>
 8014692:	2902      	cmp	r1, #2
 8014694:	d00e      	beq.n	80146b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014696:	2903      	cmp	r1, #3
 8014698:	d0f2      	beq.n	8014680 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801469a:	2901      	cmp	r1, #1
 801469c:	d1ee      	bne.n	801467c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801469e:	4b07      	ldr	r3, [pc, #28]	; (80146bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80146a0:	8818      	ldrh	r0, [r3, #0]
 80146a2:	2800      	cmp	r0, #0
 80146a4:	d0ef      	beq.n	8014686 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80146a6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80146aa:	e7e8      	b.n	801467e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80146ac:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80146b0:	4240      	negs	r0, r0
 80146b2:	e7e4      	b.n	801467e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80146b4:	f04f 30ff 	mov.w	r0, #4294967295
 80146b8:	e7e1      	b.n	801467e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80146ba:	bf00      	nop
 80146bc:	200124b2 	.word	0x200124b2
 80146c0:	08020e13 	.word	0x08020e13
 80146c4:	08021393 	.word	0x08021393
 80146c8:	08020e55 	.word	0x08020e55

080146cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80146cc:	b508      	push	{r3, lr}
 80146ce:	b180      	cbz	r0, 80146f2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80146d0:	2902      	cmp	r1, #2
 80146d2:	d014      	beq.n	80146fe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80146d4:	2903      	cmp	r1, #3
 80146d6:	d018      	beq.n	801470a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80146d8:	2901      	cmp	r1, #1
 80146da:	d001      	beq.n	80146e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80146dc:	2001      	movs	r0, #1
 80146de:	e013      	b.n	8014708 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80146e0:	4b0e      	ldr	r3, [pc, #56]	; (801471c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80146e2:	8818      	ldrh	r0, [r3, #0]
 80146e4:	b970      	cbnz	r0, 8014704 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80146e6:	4b0e      	ldr	r3, [pc, #56]	; (8014720 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80146e8:	4a0e      	ldr	r2, [pc, #56]	; (8014724 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80146ea:	480f      	ldr	r0, [pc, #60]	; (8014728 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80146ec:	2154      	movs	r1, #84	; 0x54
 80146ee:	f007 fe45 	bl	801c37c <__assert_func>
 80146f2:	2902      	cmp	r1, #2
 80146f4:	d009      	beq.n	801470a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80146f6:	2903      	cmp	r1, #3
 80146f8:	d0f0      	beq.n	80146dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 80146fa:	2901      	cmp	r1, #1
 80146fc:	d1f0      	bne.n	80146e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80146fe:	f04f 30ff 	mov.w	r0, #4294967295
 8014702:	e001      	b.n	8014708 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014704:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014708:	bd08      	pop	{r3, pc}
 801470a:	4b04      	ldr	r3, [pc, #16]	; (801471c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801470c:	8818      	ldrh	r0, [r3, #0]
 801470e:	2800      	cmp	r0, #0
 8014710:	d0e9      	beq.n	80146e6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8014712:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014716:	4240      	negs	r0, r0
 8014718:	e7f6      	b.n	8014708 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801471a:	bf00      	nop
 801471c:	200124b2 	.word	0x200124b2
 8014720:	08020e13 	.word	0x08020e13
 8014724:	08021393 	.word	0x08021393
 8014728:	08020e55 	.word	0x08020e55

0801472c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801472c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014730:	b097      	sub	sp, #92	; 0x5c
 8014732:	910a      	str	r1, [sp, #40]	; 0x28
 8014734:	a912      	add	r1, sp, #72	; 0x48
 8014736:	e881 000c 	stmia.w	r1, {r2, r3}
 801473a:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 801473e:	9307      	str	r3, [sp, #28]
 8014740:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8014744:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8014748:	930f      	str	r3, [sp, #60]	; 0x3c
 801474a:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 801474e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014750:	7b4b      	ldrb	r3, [r1, #13]
 8014752:	798d      	ldrb	r5, [r1, #6]
 8014754:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8014758:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 801475c:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8014760:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8014764:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8014768:	0158      	lsls	r0, r3, #5
 801476a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801476e:	4328      	orrs	r0, r5
 8014770:	9006      	str	r0, [sp, #24]
 8014772:	f000 8156 	beq.w	8014a22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8014776:	011b      	lsls	r3, r3, #4
 8014778:	79c8      	ldrb	r0, [r1, #7]
 801477a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801477e:	4303      	orrs	r3, r0
 8014780:	9308      	str	r3, [sp, #32]
 8014782:	f000 814e 	beq.w	8014a22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8014786:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801478a:	b29b      	uxth	r3, r3
 801478c:	2f00      	cmp	r7, #0
 801478e:	f000 80f2 	beq.w	8014976 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x24a>
 8014792:	1aff      	subs	r7, r7, r3
 8014794:	b2bf      	uxth	r7, r7
 8014796:	043b      	lsls	r3, r7, #16
 8014798:	d502      	bpl.n	80147a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801479a:	1bf6      	subs	r6, r6, r7
 801479c:	b236      	sxth	r6, r6
 801479e:	2700      	movs	r7, #0
 80147a0:	f9b2 1000 	ldrsh.w	r1, [r2]
 80147a4:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 80147a8:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80147ac:	428e      	cmp	r6, r1
 80147ae:	b28b      	uxth	r3, r1
 80147b0:	bfbf      	itttt	lt
 80147b2:	18ff      	addlt	r7, r7, r3
 80147b4:	1bbe      	sublt	r6, r7, r6
 80147b6:	b2b7      	uxthlt	r7, r6
 80147b8:	460e      	movlt	r6, r1
 80147ba:	8891      	ldrh	r1, [r2, #4]
 80147bc:	440b      	add	r3, r1
 80147be:	b21b      	sxth	r3, r3
 80147c0:	930e      	str	r3, [sp, #56]	; 0x38
 80147c2:	88d3      	ldrh	r3, [r2, #6]
 80147c4:	9a07      	ldr	r2, [sp, #28]
 80147c6:	449a      	add	sl, r3
 80147c8:	fa0f f38a 	sxth.w	r3, sl
 80147cc:	930d      	str	r3, [sp, #52]	; 0x34
 80147ce:	4bbc      	ldr	r3, [pc, #752]	; (8014ac0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 80147d0:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80147d4:	f893 b000 	ldrb.w	fp, [r3]
 80147d8:	f10b 3cff 	add.w	ip, fp, #4294967295
 80147dc:	f1dc 0300 	rsbs	r3, ip, #0
 80147e0:	eb43 030c 	adc.w	r3, r3, ip
 80147e4:	930c      	str	r3, [sp, #48]	; 0x30
 80147e6:	4631      	mov	r1, r6
 80147e8:	464b      	mov	r3, r9
 80147ea:	a812      	add	r0, sp, #72	; 0x48
 80147ec:	f7f9 fa08 	bl	800dc00 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80147f0:	4631      	mov	r1, r6
 80147f2:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 80147f6:	464b      	mov	r3, r9
 80147f8:	9a07      	ldr	r2, [sp, #28]
 80147fa:	a812      	add	r0, sp, #72	; 0x48
 80147fc:	f7f9 fa18 	bl	800dc30 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8014800:	a916      	add	r1, sp, #88	; 0x58
 8014802:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8014806:	a815      	add	r0, sp, #84	; 0x54
 8014808:	f7f9 faf4 	bl	800ddf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801480c:	f1b9 0f00 	cmp.w	r9, #0
 8014810:	f040 80b4 	bne.w	801497c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x250>
 8014814:	f1bb 0f01 	cmp.w	fp, #1
 8014818:	f040 80b8 	bne.w	801498c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 801481c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801481e:	2b00      	cmp	r3, #0
 8014820:	f040 8104 	bne.w	8014a2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 8014824:	4ba7      	ldr	r3, [pc, #668]	; (8014ac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8014826:	6818      	ldr	r0, [r3, #0]
 8014828:	6803      	ldr	r3, [r0, #0]
 801482a:	6a1b      	ldr	r3, [r3, #32]
 801482c:	4798      	blx	r3
 801482e:	4aa6      	ldr	r2, [pc, #664]	; (8014ac8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8014830:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014834:	8811      	ldrh	r1, [r2, #0]
 8014836:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 801483a:	fb01 2303 	mla	r3, r1, r3, r2
 801483e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014842:	9308      	str	r3, [sp, #32]
 8014844:	2301      	movs	r3, #1
 8014846:	fa03 f308 	lsl.w	r3, r3, r8
 801484a:	3b01      	subs	r3, #1
 801484c:	b2db      	uxtb	r3, r3
 801484e:	f1b8 0f01 	cmp.w	r8, #1
 8014852:	9310      	str	r3, [sp, #64]	; 0x40
 8014854:	f000 80ec 	beq.w	8014a30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8014858:	f1b8 0f02 	cmp.w	r8, #2
 801485c:	f000 80ea 	beq.w	8014a34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x308>
 8014860:	f1b8 0f04 	cmp.w	r8, #4
 8014864:	bf14      	ite	ne
 8014866:	2301      	movne	r3, #1
 8014868:	2311      	moveq	r3, #17
 801486a:	9309      	str	r3, [sp, #36]	; 0x24
 801486c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801486e:	b153      	cbz	r3, 8014886 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8014870:	9a06      	ldr	r2, [sp, #24]
 8014872:	2508      	movs	r5, #8
 8014874:	fb95 f3f8 	sdiv	r3, r5, r8
 8014878:	1e5d      	subs	r5, r3, #1
 801487a:	4415      	add	r5, r2
 801487c:	fb95 f5f3 	sdiv	r5, r5, r3
 8014880:	fb15 f503 	smulbb	r5, r5, r3
 8014884:	b2ad      	uxth	r5, r5
 8014886:	b907      	cbnz	r7, 801488a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8014888:	b16c      	cbz	r4, 80148a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 801488a:	fb04 7305 	mla	r3, r4, r5, r7
 801488e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8014890:	fb08 f303 	mul.w	r3, r8, r3
 8014894:	ebaa 0a04 	sub.w	sl, sl, r4
 8014898:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 801489c:	9226      	str	r2, [sp, #152]	; 0x98
 801489e:	fa1f fa8a 	uxth.w	sl, sl
 80148a2:	f003 0407 	and.w	r4, r3, #7
 80148a6:	4649      	mov	r1, r9
 80148a8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80148aa:	f7ff fedf 	bl	801466c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80148ae:	4649      	mov	r1, r9
 80148b0:	4683      	mov	fp, r0
 80148b2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80148b4:	f7ff ff0a 	bl	80146cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80148b8:	9a07      	ldr	r2, [sp, #28]
 80148ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80148bc:	1a9b      	subs	r3, r3, r2
 80148be:	459a      	cmp	sl, r3
 80148c0:	bfa8      	it	ge
 80148c2:	469a      	movge	sl, r3
 80148c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148c6:	1bf6      	subs	r6, r6, r7
 80148c8:	1b9e      	subs	r6, r3, r6
 80148ca:	9b06      	ldr	r3, [sp, #24]
 80148cc:	429e      	cmp	r6, r3
 80148ce:	bfd4      	ite	le
 80148d0:	ebc7 0706 	rsble	r7, r7, r6
 80148d4:	ebc7 0703 	rsbgt	r7, r7, r3
 80148d8:	1bed      	subs	r5, r5, r7
 80148da:	fb08 f305 	mul.w	r3, r8, r5
 80148de:	9307      	str	r3, [sp, #28]
 80148e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80148e2:	781a      	ldrb	r2, [r3, #0]
 80148e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80148e6:	0a1b      	lsrs	r3, r3, #8
 80148e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80148ec:	930d      	str	r3, [sp, #52]	; 0x34
 80148ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80148f0:	08db      	lsrs	r3, r3, #3
 80148f2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80148f6:	930e      	str	r3, [sp, #56]	; 0x38
 80148f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80148fa:	00db      	lsls	r3, r3, #3
 80148fc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8014900:	930f      	str	r3, [sp, #60]	; 0x3c
 8014902:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8014906:	fb0b 0b17 	mls	fp, fp, r7, r0
 801490a:	ea27 70e7 	bic.w	r0, r7, r7, asr #31
 801490e:	4358      	muls	r0, r3
 8014910:	9306      	str	r3, [sp, #24]
 8014912:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014914:	4122      	asrs	r2, r4
 8014916:	b29b      	uxth	r3, r3
 8014918:	b2d2      	uxtb	r2, r2
 801491a:	9311      	str	r3, [sp, #68]	; 0x44
 801491c:	eb00 0b4b 	add.w	fp, r0, fp, lsl #1
 8014920:	f1ba 0f00 	cmp.w	sl, #0
 8014924:	f340 80e5 	ble.w	8014af2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8014928:	f8dd c020 	ldr.w	ip, [sp, #32]
 801492c:	46be      	mov	lr, r7
 801492e:	f1be 0f00 	cmp.w	lr, #0
 8014932:	f340 80cb 	ble.w	8014acc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8014936:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014938:	4013      	ands	r3, r2
 801493a:	d00a      	beq.n	8014952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 801493c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801493e:	fb13 f301 	smulbb	r3, r3, r1
 8014942:	2bfe      	cmp	r3, #254	; 0xfe
 8014944:	dd78      	ble.n	8014a38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8014946:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014948:	29ff      	cmp	r1, #255	; 0xff
 801494a:	d175      	bne.n	8014a38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 801494c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801494e:	f8ac 0000 	strh.w	r0, [ip]
 8014952:	4444      	add	r4, r8
 8014954:	b2a4      	uxth	r4, r4
 8014956:	2c07      	cmp	r4, #7
 8014958:	bf81      	itttt	hi
 801495a:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 801495c:	785a      	ldrbhi	r2, [r3, #1]
 801495e:	3301      	addhi	r3, #1
 8014960:	9326      	strhi	r3, [sp, #152]	; 0x98
 8014962:	9b06      	ldr	r3, [sp, #24]
 8014964:	bf9a      	itte	ls
 8014966:	fa42 f208 	asrls.w	r2, r2, r8
 801496a:	b2d2      	uxtbls	r2, r2
 801496c:	2400      	movhi	r4, #0
 801496e:	449c      	add	ip, r3
 8014970:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014974:	e7db      	b.n	801492e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8014976:	441e      	add	r6, r3
 8014978:	b236      	sxth	r6, r6
 801497a:	e711      	b.n	80147a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801497c:	f1b9 0f01 	cmp.w	r9, #1
 8014980:	f47f af4c 	bne.w	801481c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014984:	f1bb 0f01 	cmp.w	fp, #1
 8014988:	f47f af48 	bne.w	801481c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801498c:	f8df b134 	ldr.w	fp, [pc, #308]	; 8014ac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>
 8014990:	f8db 0000 	ldr.w	r0, [fp]
 8014994:	6803      	ldr	r3, [r0, #0]
 8014996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014998:	4798      	blx	r3
 801499a:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 801499e:	465a      	mov	r2, fp
 80149a0:	d006      	beq.n	80149b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 80149a2:	f1b8 0f04 	cmp.w	r8, #4
 80149a6:	d13f      	bne.n	8014a28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fc>
 80149a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80149aa:	3300      	adds	r3, #0
 80149ac:	bf18      	it	ne
 80149ae:	2301      	movne	r3, #1
 80149b0:	05c0      	lsls	r0, r0, #23
 80149b2:	f140 80a7 	bpl.w	8014b04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 80149b6:	f1b8 0f08 	cmp.w	r8, #8
 80149ba:	f040 80a3 	bne.w	8014b04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 80149be:	2b00      	cmp	r3, #0
 80149c0:	bf0c      	ite	eq
 80149c2:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80149c6:	2180      	movne	r1, #128	; 0x80
 80149c8:	2f00      	cmp	r7, #0
 80149ca:	f47f af27 	bne.w	801481c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80149ce:	2c00      	cmp	r4, #0
 80149d0:	f47f af24 	bne.w	801481c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80149d4:	9b06      	ldr	r3, [sp, #24]
 80149d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80149d8:	18f3      	adds	r3, r6, r3
 80149da:	4283      	cmp	r3, r0
 80149dc:	f73f af1e 	bgt.w	801481c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80149e0:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 80149e4:	4403      	add	r3, r0
 80149e6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80149e8:	4283      	cmp	r3, r0
 80149ea:	f73f af17 	bgt.w	801481c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80149ee:	6810      	ldr	r0, [r2, #0]
 80149f0:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80149f4:	6804      	ldr	r4, [r0, #0]
 80149f6:	9105      	str	r1, [sp, #20]
 80149f8:	f1b8 0f08 	cmp.w	r8, #8
 80149fc:	bf18      	it	ne
 80149fe:	3501      	addne	r5, #1
 8014a00:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014a02:	9104      	str	r1, [sp, #16]
 8014a04:	bf18      	it	ne
 8014a06:	f025 0501 	bicne.w	r5, r5, #1
 8014a0a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8014a0c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8014a10:	bf18      	it	ne
 8014a12:	b2ad      	uxthne	r5, r5
 8014a14:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8014a18:	e9cd 5a00 	strd	r5, sl, [sp]
 8014a1c:	9926      	ldr	r1, [sp, #152]	; 0x98
 8014a1e:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8014a20:	47a0      	blx	r4
 8014a22:	b017      	add	sp, #92	; 0x5c
 8014a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a28:	2300      	movs	r3, #0
 8014a2a:	e7c1      	b.n	80149b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8014a2c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8014a2e:	e6fe      	b.n	801482e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8014a30:	23ff      	movs	r3, #255	; 0xff
 8014a32:	e71a      	b.n	801486a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8014a34:	2355      	movs	r3, #85	; 0x55
 8014a36:	e718      	b.n	801486a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8014a38:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014a3a:	f8bc 5000 	ldrh.w	r5, [ip]
 8014a3e:	fb11 f303 	smulbb	r3, r1, r3
 8014a42:	b29b      	uxth	r3, r3
 8014a44:	1c59      	adds	r1, r3, #1
 8014a46:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8014a4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014a4e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014a50:	b29e      	uxth	r6, r3
 8014a52:	1228      	asrs	r0, r5, #8
 8014a54:	43db      	mvns	r3, r3
 8014a56:	b2db      	uxtb	r3, r3
 8014a58:	fb11 f106 	smulbb	r1, r1, r6
 8014a5c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014a60:	fb00 1003 	mla	r0, r0, r3, r1
 8014a64:	b281      	uxth	r1, r0
 8014a66:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014a68:	910c      	str	r1, [sp, #48]	; 0x30
 8014a6a:	fb16 f900 	smulbb	r9, r6, r0
 8014a6e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014a70:	10e9      	asrs	r1, r5, #3
 8014a72:	00ed      	lsls	r5, r5, #3
 8014a74:	fb16 f600 	smulbb	r6, r6, r0
 8014a78:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014a7c:	b2ed      	uxtb	r5, r5
 8014a7e:	fb01 9103 	mla	r1, r1, r3, r9
 8014a82:	fb05 6603 	mla	r6, r5, r3, r6
 8014a86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a88:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014a8a:	b2b6      	uxth	r6, r6
 8014a8c:	3301      	adds	r3, #1
 8014a8e:	f106 0901 	add.w	r9, r6, #1
 8014a92:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8014a96:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8014a9a:	b289      	uxth	r1, r1
 8014a9c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8014aa0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014aa4:	ea40 0009 	orr.w	r0, r0, r9
 8014aa8:	f101 0901 	add.w	r9, r1, #1
 8014aac:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8014ab0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014ab4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014ab8:	ea40 0009 	orr.w	r0, r0, r9
 8014abc:	e747      	b.n	801494e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 8014abe:	bf00      	nop
 8014ac0:	200124b0 	.word	0x200124b0
 8014ac4:	200124b8 	.word	0x200124b8
 8014ac8:	200124b2 	.word	0x200124b2
 8014acc:	9b07      	ldr	r3, [sp, #28]
 8014ace:	b153      	cbz	r3, 8014ae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8014ad0:	441c      	add	r4, r3
 8014ad2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014ad4:	b2a4      	uxth	r4, r4
 8014ad6:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8014ada:	f004 0407 	and.w	r4, r4, #7
 8014ade:	781a      	ldrb	r2, [r3, #0]
 8014ae0:	9326      	str	r3, [sp, #152]	; 0x98
 8014ae2:	4122      	asrs	r2, r4
 8014ae4:	b2d2      	uxtb	r2, r2
 8014ae6:	9b08      	ldr	r3, [sp, #32]
 8014ae8:	445b      	add	r3, fp
 8014aea:	9308      	str	r3, [sp, #32]
 8014aec:	f10a 3aff 	add.w	sl, sl, #4294967295
 8014af0:	e716      	b.n	8014920 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8014af2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014af4:	2b00      	cmp	r3, #0
 8014af6:	d194      	bne.n	8014a22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8014af8:	4b05      	ldr	r3, [pc, #20]	; (8014b10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>)
 8014afa:	6818      	ldr	r0, [r3, #0]
 8014afc:	6803      	ldr	r3, [r0, #0]
 8014afe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014b00:	4798      	blx	r3
 8014b02:	e78e      	b.n	8014a22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8014b04:	2b00      	cmp	r3, #0
 8014b06:	f43f ae89 	beq.w	801481c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014b0a:	2180      	movs	r1, #128	; 0x80
 8014b0c:	e75c      	b.n	80149c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29c>
 8014b0e:	bf00      	nop
 8014b10:	200124b8 	.word	0x200124b8

08014b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014b14:	b538      	push	{r3, r4, r5, lr}
 8014b16:	4c15      	ldr	r4, [pc, #84]	; (8014b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8014b18:	7823      	ldrb	r3, [r4, #0]
 8014b1a:	f3bf 8f5b 	dmb	ish
 8014b1e:	07da      	lsls	r2, r3, #31
 8014b20:	4605      	mov	r5, r0
 8014b22:	d40b      	bmi.n	8014b3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014b24:	4620      	mov	r0, r4
 8014b26:	f007 fbf8 	bl	801c31a <__cxa_guard_acquire>
 8014b2a:	b138      	cbz	r0, 8014b3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014b2c:	4620      	mov	r0, r4
 8014b2e:	f007 fc00 	bl	801c332 <__cxa_guard_release>
 8014b32:	4a0f      	ldr	r2, [pc, #60]	; (8014b70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014b34:	490f      	ldr	r1, [pc, #60]	; (8014b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8014b36:	4810      	ldr	r0, [pc, #64]	; (8014b78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014b38:	f007 fbd4 	bl	801c2e4 <__aeabi_atexit>
 8014b3c:	4c0f      	ldr	r4, [pc, #60]	; (8014b7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8014b3e:	7823      	ldrb	r3, [r4, #0]
 8014b40:	f3bf 8f5b 	dmb	ish
 8014b44:	07db      	lsls	r3, r3, #31
 8014b46:	d40b      	bmi.n	8014b60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014b48:	4620      	mov	r0, r4
 8014b4a:	f007 fbe6 	bl	801c31a <__cxa_guard_acquire>
 8014b4e:	b138      	cbz	r0, 8014b60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014b50:	4620      	mov	r0, r4
 8014b52:	f007 fbee 	bl	801c332 <__cxa_guard_release>
 8014b56:	4a06      	ldr	r2, [pc, #24]	; (8014b70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014b58:	4909      	ldr	r1, [pc, #36]	; (8014b80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8014b5a:	480a      	ldr	r0, [pc, #40]	; (8014b84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014b5c:	f007 fbc2 	bl	801c2e4 <__aeabi_atexit>
 8014b60:	4b05      	ldr	r3, [pc, #20]	; (8014b78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014b62:	612b      	str	r3, [r5, #16]
 8014b64:	4b07      	ldr	r3, [pc, #28]	; (8014b84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014b66:	616b      	str	r3, [r5, #20]
 8014b68:	bd38      	pop	{r3, r4, r5, pc}
 8014b6a:	bf00      	nop
 8014b6c:	200125a4 	.word	0x200125a4
 8014b70:	20000000 	.word	0x20000000
 8014b74:	080131b9 	.word	0x080131b9
 8014b78:	200000d8 	.word	0x200000d8
 8014b7c:	200125a8 	.word	0x200125a8
 8014b80:	080131b7 	.word	0x080131b7
 8014b84:	200000dc 	.word	0x200000dc

08014b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8014b88:	b538      	push	{r3, r4, r5, lr}
 8014b8a:	4c15      	ldr	r4, [pc, #84]	; (8014be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8014b8c:	7823      	ldrb	r3, [r4, #0]
 8014b8e:	f3bf 8f5b 	dmb	ish
 8014b92:	07da      	lsls	r2, r3, #31
 8014b94:	4605      	mov	r5, r0
 8014b96:	d40b      	bmi.n	8014bb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014b98:	4620      	mov	r0, r4
 8014b9a:	f007 fbbe 	bl	801c31a <__cxa_guard_acquire>
 8014b9e:	b138      	cbz	r0, 8014bb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014ba0:	4620      	mov	r0, r4
 8014ba2:	f007 fbc6 	bl	801c332 <__cxa_guard_release>
 8014ba6:	4a0f      	ldr	r2, [pc, #60]	; (8014be4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014ba8:	490f      	ldr	r1, [pc, #60]	; (8014be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8014baa:	4810      	ldr	r0, [pc, #64]	; (8014bec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014bac:	f007 fb9a 	bl	801c2e4 <__aeabi_atexit>
 8014bb0:	4c0f      	ldr	r4, [pc, #60]	; (8014bf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8014bb2:	7823      	ldrb	r3, [r4, #0]
 8014bb4:	f3bf 8f5b 	dmb	ish
 8014bb8:	07db      	lsls	r3, r3, #31
 8014bba:	d40b      	bmi.n	8014bd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014bbc:	4620      	mov	r0, r4
 8014bbe:	f007 fbac 	bl	801c31a <__cxa_guard_acquire>
 8014bc2:	b138      	cbz	r0, 8014bd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014bc4:	4620      	mov	r0, r4
 8014bc6:	f007 fbb4 	bl	801c332 <__cxa_guard_release>
 8014bca:	4a06      	ldr	r2, [pc, #24]	; (8014be4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014bcc:	4909      	ldr	r1, [pc, #36]	; (8014bf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8014bce:	480a      	ldr	r0, [pc, #40]	; (8014bf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014bd0:	f007 fb88 	bl	801c2e4 <__aeabi_atexit>
 8014bd4:	4b05      	ldr	r3, [pc, #20]	; (8014bec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014bd6:	60ab      	str	r3, [r5, #8]
 8014bd8:	4b07      	ldr	r3, [pc, #28]	; (8014bf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014bda:	60eb      	str	r3, [r5, #12]
 8014bdc:	bd38      	pop	{r3, r4, r5, pc}
 8014bde:	bf00      	nop
 8014be0:	2001257c 	.word	0x2001257c
 8014be4:	20000000 	.word	0x20000000
 8014be8:	080131bd 	.word	0x080131bd
 8014bec:	200000b0 	.word	0x200000b0
 8014bf0:	20012580 	.word	0x20012580
 8014bf4:	080131bb 	.word	0x080131bb
 8014bf8:	200000b4 	.word	0x200000b4

08014bfc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8014bfc:	b510      	push	{r4, lr}
 8014bfe:	4604      	mov	r4, r0
 8014c00:	f7ff ff88 	bl	8014b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8014c04:	4620      	mov	r0, r4
 8014c06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014c0a:	f7ff bfbd 	b.w	8014b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08014c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8014c10:	b538      	push	{r3, r4, r5, lr}
 8014c12:	4c15      	ldr	r4, [pc, #84]	; (8014c68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014c14:	7823      	ldrb	r3, [r4, #0]
 8014c16:	f3bf 8f5b 	dmb	ish
 8014c1a:	07da      	lsls	r2, r3, #31
 8014c1c:	4605      	mov	r5, r0
 8014c1e:	d40b      	bmi.n	8014c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014c20:	4620      	mov	r0, r4
 8014c22:	f007 fb7a 	bl	801c31a <__cxa_guard_acquire>
 8014c26:	b138      	cbz	r0, 8014c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014c28:	4620      	mov	r0, r4
 8014c2a:	f007 fb82 	bl	801c332 <__cxa_guard_release>
 8014c2e:	4a0f      	ldr	r2, [pc, #60]	; (8014c6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014c30:	490f      	ldr	r1, [pc, #60]	; (8014c70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8014c32:	4810      	ldr	r0, [pc, #64]	; (8014c74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014c34:	f007 fb56 	bl	801c2e4 <__aeabi_atexit>
 8014c38:	4c0f      	ldr	r4, [pc, #60]	; (8014c78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8014c3a:	7823      	ldrb	r3, [r4, #0]
 8014c3c:	f3bf 8f5b 	dmb	ish
 8014c40:	07db      	lsls	r3, r3, #31
 8014c42:	d40b      	bmi.n	8014c5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014c44:	4620      	mov	r0, r4
 8014c46:	f007 fb68 	bl	801c31a <__cxa_guard_acquire>
 8014c4a:	b138      	cbz	r0, 8014c5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014c4c:	4620      	mov	r0, r4
 8014c4e:	f007 fb70 	bl	801c332 <__cxa_guard_release>
 8014c52:	4a06      	ldr	r2, [pc, #24]	; (8014c6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014c54:	4909      	ldr	r1, [pc, #36]	; (8014c7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8014c56:	480a      	ldr	r0, [pc, #40]	; (8014c80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014c58:	f007 fb44 	bl	801c2e4 <__aeabi_atexit>
 8014c5c:	4b05      	ldr	r3, [pc, #20]	; (8014c74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014c5e:	622b      	str	r3, [r5, #32]
 8014c60:	4b07      	ldr	r3, [pc, #28]	; (8014c80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014c62:	626b      	str	r3, [r5, #36]	; 0x24
 8014c64:	bd38      	pop	{r3, r4, r5, pc}
 8014c66:	bf00      	nop
 8014c68:	200125ac 	.word	0x200125ac
 8014c6c:	20000000 	.word	0x20000000
 8014c70:	080131b1 	.word	0x080131b1
 8014c74:	200000e0 	.word	0x200000e0
 8014c78:	200125b0 	.word	0x200125b0
 8014c7c:	080131af 	.word	0x080131af
 8014c80:	200000e4 	.word	0x200000e4

08014c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8014c84:	b538      	push	{r3, r4, r5, lr}
 8014c86:	4c15      	ldr	r4, [pc, #84]	; (8014cdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8014c88:	7823      	ldrb	r3, [r4, #0]
 8014c8a:	f3bf 8f5b 	dmb	ish
 8014c8e:	07da      	lsls	r2, r3, #31
 8014c90:	4605      	mov	r5, r0
 8014c92:	d40b      	bmi.n	8014cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014c94:	4620      	mov	r0, r4
 8014c96:	f007 fb40 	bl	801c31a <__cxa_guard_acquire>
 8014c9a:	b138      	cbz	r0, 8014cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014c9c:	4620      	mov	r0, r4
 8014c9e:	f007 fb48 	bl	801c332 <__cxa_guard_release>
 8014ca2:	4a0f      	ldr	r2, [pc, #60]	; (8014ce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014ca4:	490f      	ldr	r1, [pc, #60]	; (8014ce4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8014ca6:	4810      	ldr	r0, [pc, #64]	; (8014ce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014ca8:	f007 fb1c 	bl	801c2e4 <__aeabi_atexit>
 8014cac:	4c0f      	ldr	r4, [pc, #60]	; (8014cec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8014cae:	7823      	ldrb	r3, [r4, #0]
 8014cb0:	f3bf 8f5b 	dmb	ish
 8014cb4:	07db      	lsls	r3, r3, #31
 8014cb6:	d40b      	bmi.n	8014cd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014cb8:	4620      	mov	r0, r4
 8014cba:	f007 fb2e 	bl	801c31a <__cxa_guard_acquire>
 8014cbe:	b138      	cbz	r0, 8014cd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014cc0:	4620      	mov	r0, r4
 8014cc2:	f007 fb36 	bl	801c332 <__cxa_guard_release>
 8014cc6:	4a06      	ldr	r2, [pc, #24]	; (8014ce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014cc8:	4909      	ldr	r1, [pc, #36]	; (8014cf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8014cca:	480a      	ldr	r0, [pc, #40]	; (8014cf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014ccc:	f007 fb0a 	bl	801c2e4 <__aeabi_atexit>
 8014cd0:	4b05      	ldr	r3, [pc, #20]	; (8014ce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014cd2:	61ab      	str	r3, [r5, #24]
 8014cd4:	4b07      	ldr	r3, [pc, #28]	; (8014cf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014cd6:	61eb      	str	r3, [r5, #28]
 8014cd8:	bd38      	pop	{r3, r4, r5, pc}
 8014cda:	bf00      	nop
 8014cdc:	20012584 	.word	0x20012584
 8014ce0:	20000000 	.word	0x20000000
 8014ce4:	080131b5 	.word	0x080131b5
 8014ce8:	200000b8 	.word	0x200000b8
 8014cec:	20012588 	.word	0x20012588
 8014cf0:	080131b3 	.word	0x080131b3
 8014cf4:	200000bc 	.word	0x200000bc

08014cf8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8014cf8:	b510      	push	{r4, lr}
 8014cfa:	4604      	mov	r4, r0
 8014cfc:	f7ff ff88 	bl	8014c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8014d00:	4620      	mov	r0, r4
 8014d02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014d06:	f7ff bfbd 	b.w	8014c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08014d0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8014d0c:	b538      	push	{r3, r4, r5, lr}
 8014d0e:	4c15      	ldr	r4, [pc, #84]	; (8014d64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8014d10:	7823      	ldrb	r3, [r4, #0]
 8014d12:	f3bf 8f5b 	dmb	ish
 8014d16:	07da      	lsls	r2, r3, #31
 8014d18:	4605      	mov	r5, r0
 8014d1a:	d40b      	bmi.n	8014d34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014d1c:	4620      	mov	r0, r4
 8014d1e:	f007 fafc 	bl	801c31a <__cxa_guard_acquire>
 8014d22:	b138      	cbz	r0, 8014d34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014d24:	4620      	mov	r0, r4
 8014d26:	f007 fb04 	bl	801c332 <__cxa_guard_release>
 8014d2a:	4a0f      	ldr	r2, [pc, #60]	; (8014d68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014d2c:	490f      	ldr	r1, [pc, #60]	; (8014d6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8014d2e:	4810      	ldr	r0, [pc, #64]	; (8014d70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014d30:	f007 fad8 	bl	801c2e4 <__aeabi_atexit>
 8014d34:	4c0f      	ldr	r4, [pc, #60]	; (8014d74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8014d36:	7823      	ldrb	r3, [r4, #0]
 8014d38:	f3bf 8f5b 	dmb	ish
 8014d3c:	07db      	lsls	r3, r3, #31
 8014d3e:	d40b      	bmi.n	8014d58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014d40:	4620      	mov	r0, r4
 8014d42:	f007 faea 	bl	801c31a <__cxa_guard_acquire>
 8014d46:	b138      	cbz	r0, 8014d58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014d48:	4620      	mov	r0, r4
 8014d4a:	f007 faf2 	bl	801c332 <__cxa_guard_release>
 8014d4e:	4a06      	ldr	r2, [pc, #24]	; (8014d68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014d50:	4909      	ldr	r1, [pc, #36]	; (8014d78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8014d52:	480a      	ldr	r0, [pc, #40]	; (8014d7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014d54:	f007 fac6 	bl	801c2e4 <__aeabi_atexit>
 8014d58:	4b05      	ldr	r3, [pc, #20]	; (8014d70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014d5a:	632b      	str	r3, [r5, #48]	; 0x30
 8014d5c:	4b07      	ldr	r3, [pc, #28]	; (8014d7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014d5e:	636b      	str	r3, [r5, #52]	; 0x34
 8014d60:	bd38      	pop	{r3, r4, r5, pc}
 8014d62:	bf00      	nop
 8014d64:	200125bc 	.word	0x200125bc
 8014d68:	20000000 	.word	0x20000000
 8014d6c:	080131a9 	.word	0x080131a9
 8014d70:	200000f0 	.word	0x200000f0
 8014d74:	200125c0 	.word	0x200125c0
 8014d78:	080131a7 	.word	0x080131a7
 8014d7c:	200000f4 	.word	0x200000f4

08014d80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8014d80:	b538      	push	{r3, r4, r5, lr}
 8014d82:	4c15      	ldr	r4, [pc, #84]	; (8014dd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8014d84:	7823      	ldrb	r3, [r4, #0]
 8014d86:	f3bf 8f5b 	dmb	ish
 8014d8a:	07da      	lsls	r2, r3, #31
 8014d8c:	4605      	mov	r5, r0
 8014d8e:	d40b      	bmi.n	8014da8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014d90:	4620      	mov	r0, r4
 8014d92:	f007 fac2 	bl	801c31a <__cxa_guard_acquire>
 8014d96:	b138      	cbz	r0, 8014da8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014d98:	4620      	mov	r0, r4
 8014d9a:	f007 faca 	bl	801c332 <__cxa_guard_release>
 8014d9e:	4a0f      	ldr	r2, [pc, #60]	; (8014ddc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014da0:	490f      	ldr	r1, [pc, #60]	; (8014de0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8014da2:	4810      	ldr	r0, [pc, #64]	; (8014de4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014da4:	f007 fa9e 	bl	801c2e4 <__aeabi_atexit>
 8014da8:	4c0f      	ldr	r4, [pc, #60]	; (8014de8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8014daa:	7823      	ldrb	r3, [r4, #0]
 8014dac:	f3bf 8f5b 	dmb	ish
 8014db0:	07db      	lsls	r3, r3, #31
 8014db2:	d40b      	bmi.n	8014dcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014db4:	4620      	mov	r0, r4
 8014db6:	f007 fab0 	bl	801c31a <__cxa_guard_acquire>
 8014dba:	b138      	cbz	r0, 8014dcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014dbc:	4620      	mov	r0, r4
 8014dbe:	f007 fab8 	bl	801c332 <__cxa_guard_release>
 8014dc2:	4a06      	ldr	r2, [pc, #24]	; (8014ddc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014dc4:	4909      	ldr	r1, [pc, #36]	; (8014dec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8014dc6:	480a      	ldr	r0, [pc, #40]	; (8014df0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014dc8:	f007 fa8c 	bl	801c2e4 <__aeabi_atexit>
 8014dcc:	4b05      	ldr	r3, [pc, #20]	; (8014de4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014dce:	62ab      	str	r3, [r5, #40]	; 0x28
 8014dd0:	4b07      	ldr	r3, [pc, #28]	; (8014df0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014dd2:	62eb      	str	r3, [r5, #44]	; 0x2c
 8014dd4:	bd38      	pop	{r3, r4, r5, pc}
 8014dd6:	bf00      	nop
 8014dd8:	2001258c 	.word	0x2001258c
 8014ddc:	20000000 	.word	0x20000000
 8014de0:	080131ad 	.word	0x080131ad
 8014de4:	200000c0 	.word	0x200000c0
 8014de8:	20012590 	.word	0x20012590
 8014dec:	080131ab 	.word	0x080131ab
 8014df0:	200000c4 	.word	0x200000c4

08014df4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8014df4:	b510      	push	{r4, lr}
 8014df6:	4604      	mov	r4, r0
 8014df8:	f7ff ff88 	bl	8014d0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8014dfc:	4620      	mov	r0, r4
 8014dfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014e02:	f7ff bfbd 	b.w	8014d80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08014e08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8014e08:	b538      	push	{r3, r4, r5, lr}
 8014e0a:	4c15      	ldr	r4, [pc, #84]	; (8014e60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8014e0c:	7823      	ldrb	r3, [r4, #0]
 8014e0e:	f3bf 8f5b 	dmb	ish
 8014e12:	07da      	lsls	r2, r3, #31
 8014e14:	4605      	mov	r5, r0
 8014e16:	d40b      	bmi.n	8014e30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014e18:	4620      	mov	r0, r4
 8014e1a:	f007 fa7e 	bl	801c31a <__cxa_guard_acquire>
 8014e1e:	b138      	cbz	r0, 8014e30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014e20:	4620      	mov	r0, r4
 8014e22:	f007 fa86 	bl	801c332 <__cxa_guard_release>
 8014e26:	4a0f      	ldr	r2, [pc, #60]	; (8014e64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014e28:	490f      	ldr	r1, [pc, #60]	; (8014e68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8014e2a:	4810      	ldr	r0, [pc, #64]	; (8014e6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014e2c:	f007 fa5a 	bl	801c2e4 <__aeabi_atexit>
 8014e30:	4c0f      	ldr	r4, [pc, #60]	; (8014e70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8014e32:	7823      	ldrb	r3, [r4, #0]
 8014e34:	f3bf 8f5b 	dmb	ish
 8014e38:	07db      	lsls	r3, r3, #31
 8014e3a:	d40b      	bmi.n	8014e54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014e3c:	4620      	mov	r0, r4
 8014e3e:	f007 fa6c 	bl	801c31a <__cxa_guard_acquire>
 8014e42:	b138      	cbz	r0, 8014e54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014e44:	4620      	mov	r0, r4
 8014e46:	f007 fa74 	bl	801c332 <__cxa_guard_release>
 8014e4a:	4a06      	ldr	r2, [pc, #24]	; (8014e64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014e4c:	4909      	ldr	r1, [pc, #36]	; (8014e74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8014e4e:	480a      	ldr	r0, [pc, #40]	; (8014e78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8014e50:	f007 fa48 	bl	801c2e4 <__aeabi_atexit>
 8014e54:	4b05      	ldr	r3, [pc, #20]	; (8014e6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014e56:	652b      	str	r3, [r5, #80]	; 0x50
 8014e58:	4b07      	ldr	r3, [pc, #28]	; (8014e78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8014e5a:	656b      	str	r3, [r5, #84]	; 0x54
 8014e5c:	bd38      	pop	{r3, r4, r5, pc}
 8014e5e:	bf00      	nop
 8014e60:	200125c4 	.word	0x200125c4
 8014e64:	20000000 	.word	0x20000000
 8014e68:	08013199 	.word	0x08013199
 8014e6c:	200000f8 	.word	0x200000f8
 8014e70:	200125c8 	.word	0x200125c8
 8014e74:	08013197 	.word	0x08013197
 8014e78:	200000fc 	.word	0x200000fc

08014e7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8014e7c:	b538      	push	{r3, r4, r5, lr}
 8014e7e:	4c15      	ldr	r4, [pc, #84]	; (8014ed4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8014e80:	7823      	ldrb	r3, [r4, #0]
 8014e82:	f3bf 8f5b 	dmb	ish
 8014e86:	07da      	lsls	r2, r3, #31
 8014e88:	4605      	mov	r5, r0
 8014e8a:	d40b      	bmi.n	8014ea4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8014e8c:	4620      	mov	r0, r4
 8014e8e:	f007 fa44 	bl	801c31a <__cxa_guard_acquire>
 8014e92:	b138      	cbz	r0, 8014ea4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8014e94:	4620      	mov	r0, r4
 8014e96:	f007 fa4c 	bl	801c332 <__cxa_guard_release>
 8014e9a:	4a0f      	ldr	r2, [pc, #60]	; (8014ed8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014e9c:	490f      	ldr	r1, [pc, #60]	; (8014edc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8014e9e:	4810      	ldr	r0, [pc, #64]	; (8014ee0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8014ea0:	f007 fa20 	bl	801c2e4 <__aeabi_atexit>
 8014ea4:	4c0f      	ldr	r4, [pc, #60]	; (8014ee4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8014ea6:	7823      	ldrb	r3, [r4, #0]
 8014ea8:	f3bf 8f5b 	dmb	ish
 8014eac:	07db      	lsls	r3, r3, #31
 8014eae:	d40b      	bmi.n	8014ec8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8014eb0:	4620      	mov	r0, r4
 8014eb2:	f007 fa32 	bl	801c31a <__cxa_guard_acquire>
 8014eb6:	b138      	cbz	r0, 8014ec8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8014eb8:	4620      	mov	r0, r4
 8014eba:	f007 fa3a 	bl	801c332 <__cxa_guard_release>
 8014ebe:	4a06      	ldr	r2, [pc, #24]	; (8014ed8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014ec0:	4909      	ldr	r1, [pc, #36]	; (8014ee8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8014ec2:	480a      	ldr	r0, [pc, #40]	; (8014eec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014ec4:	f007 fa0e 	bl	801c2e4 <__aeabi_atexit>
 8014ec8:	4b05      	ldr	r3, [pc, #20]	; (8014ee0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8014eca:	64ab      	str	r3, [r5, #72]	; 0x48
 8014ecc:	4b07      	ldr	r3, [pc, #28]	; (8014eec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014ece:	64eb      	str	r3, [r5, #76]	; 0x4c
 8014ed0:	bd38      	pop	{r3, r4, r5, pc}
 8014ed2:	bf00      	nop
 8014ed4:	200125cc 	.word	0x200125cc
 8014ed8:	20000000 	.word	0x20000000
 8014edc:	0801319d 	.word	0x0801319d
 8014ee0:	20000100 	.word	0x20000100
 8014ee4:	200125d0 	.word	0x200125d0
 8014ee8:	0801319b 	.word	0x0801319b
 8014eec:	20000104 	.word	0x20000104

08014ef0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8014ef0:	b538      	push	{r3, r4, r5, lr}
 8014ef2:	4c15      	ldr	r4, [pc, #84]	; (8014f48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014ef4:	7823      	ldrb	r3, [r4, #0]
 8014ef6:	f3bf 8f5b 	dmb	ish
 8014efa:	07da      	lsls	r2, r3, #31
 8014efc:	4605      	mov	r5, r0
 8014efe:	d40b      	bmi.n	8014f18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014f00:	4620      	mov	r0, r4
 8014f02:	f007 fa0a 	bl	801c31a <__cxa_guard_acquire>
 8014f06:	b138      	cbz	r0, 8014f18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014f08:	4620      	mov	r0, r4
 8014f0a:	f007 fa12 	bl	801c332 <__cxa_guard_release>
 8014f0e:	4a0f      	ldr	r2, [pc, #60]	; (8014f4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014f10:	490f      	ldr	r1, [pc, #60]	; (8014f50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8014f12:	4810      	ldr	r0, [pc, #64]	; (8014f54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014f14:	f007 f9e6 	bl	801c2e4 <__aeabi_atexit>
 8014f18:	4c0f      	ldr	r4, [pc, #60]	; (8014f58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8014f1a:	7823      	ldrb	r3, [r4, #0]
 8014f1c:	f3bf 8f5b 	dmb	ish
 8014f20:	07db      	lsls	r3, r3, #31
 8014f22:	d40b      	bmi.n	8014f3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014f24:	4620      	mov	r0, r4
 8014f26:	f007 f9f8 	bl	801c31a <__cxa_guard_acquire>
 8014f2a:	b138      	cbz	r0, 8014f3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014f2c:	4620      	mov	r0, r4
 8014f2e:	f007 fa00 	bl	801c332 <__cxa_guard_release>
 8014f32:	4a06      	ldr	r2, [pc, #24]	; (8014f4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014f34:	4909      	ldr	r1, [pc, #36]	; (8014f5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8014f36:	480a      	ldr	r0, [pc, #40]	; (8014f60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014f38:	f007 f9d4 	bl	801c2e4 <__aeabi_atexit>
 8014f3c:	4b05      	ldr	r3, [pc, #20]	; (8014f54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014f3e:	642b      	str	r3, [r5, #64]	; 0x40
 8014f40:	4b07      	ldr	r3, [pc, #28]	; (8014f60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014f42:	646b      	str	r3, [r5, #68]	; 0x44
 8014f44:	bd38      	pop	{r3, r4, r5, pc}
 8014f46:	bf00      	nop
 8014f48:	20012594 	.word	0x20012594
 8014f4c:	20000000 	.word	0x20000000
 8014f50:	080131a1 	.word	0x080131a1
 8014f54:	200000c8 	.word	0x200000c8
 8014f58:	20012598 	.word	0x20012598
 8014f5c:	0801319f 	.word	0x0801319f
 8014f60:	200000cc 	.word	0x200000cc

08014f64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8014f64:	b538      	push	{r3, r4, r5, lr}
 8014f66:	4c15      	ldr	r4, [pc, #84]	; (8014fbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8014f68:	7823      	ldrb	r3, [r4, #0]
 8014f6a:	f3bf 8f5b 	dmb	ish
 8014f6e:	07da      	lsls	r2, r3, #31
 8014f70:	4605      	mov	r5, r0
 8014f72:	d40b      	bmi.n	8014f8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8014f74:	4620      	mov	r0, r4
 8014f76:	f007 f9d0 	bl	801c31a <__cxa_guard_acquire>
 8014f7a:	b138      	cbz	r0, 8014f8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8014f7c:	4620      	mov	r0, r4
 8014f7e:	f007 f9d8 	bl	801c332 <__cxa_guard_release>
 8014f82:	4a0f      	ldr	r2, [pc, #60]	; (8014fc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8014f84:	490f      	ldr	r1, [pc, #60]	; (8014fc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8014f86:	4810      	ldr	r0, [pc, #64]	; (8014fc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014f88:	f007 f9ac 	bl	801c2e4 <__aeabi_atexit>
 8014f8c:	4c0f      	ldr	r4, [pc, #60]	; (8014fcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8014f8e:	7823      	ldrb	r3, [r4, #0]
 8014f90:	f3bf 8f5b 	dmb	ish
 8014f94:	07db      	lsls	r3, r3, #31
 8014f96:	d40b      	bmi.n	8014fb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014f98:	4620      	mov	r0, r4
 8014f9a:	f007 f9be 	bl	801c31a <__cxa_guard_acquire>
 8014f9e:	b138      	cbz	r0, 8014fb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014fa0:	4620      	mov	r0, r4
 8014fa2:	f007 f9c6 	bl	801c332 <__cxa_guard_release>
 8014fa6:	4a06      	ldr	r2, [pc, #24]	; (8014fc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8014fa8:	4909      	ldr	r1, [pc, #36]	; (8014fd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8014faa:	480a      	ldr	r0, [pc, #40]	; (8014fd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014fac:	f007 f99a 	bl	801c2e4 <__aeabi_atexit>
 8014fb0:	4b05      	ldr	r3, [pc, #20]	; (8014fc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014fb2:	63ab      	str	r3, [r5, #56]	; 0x38
 8014fb4:	4b07      	ldr	r3, [pc, #28]	; (8014fd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014fb6:	63eb      	str	r3, [r5, #60]	; 0x3c
 8014fb8:	bd38      	pop	{r3, r4, r5, pc}
 8014fba:	bf00      	nop
 8014fbc:	200125b4 	.word	0x200125b4
 8014fc0:	20000000 	.word	0x20000000
 8014fc4:	080131a5 	.word	0x080131a5
 8014fc8:	200000e8 	.word	0x200000e8
 8014fcc:	200125b8 	.word	0x200125b8
 8014fd0:	080131a3 	.word	0x080131a3
 8014fd4:	200000ec 	.word	0x200000ec

08014fd8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8014fd8:	b510      	push	{r4, lr}
 8014fda:	4604      	mov	r4, r0
 8014fdc:	f7ff ff14 	bl	8014e08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8014fe0:	4620      	mov	r0, r4
 8014fe2:	f7ff ff85 	bl	8014ef0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8014fe6:	4620      	mov	r0, r4
 8014fe8:	f7ff ff48 	bl	8014e7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014fec:	4620      	mov	r0, r4
 8014fee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014ff2:	f7ff bfb7 	b.w	8014f64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08014ff8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8014ff8:	b538      	push	{r3, r4, r5, lr}
 8014ffa:	4c15      	ldr	r4, [pc, #84]	; (8015050 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014ffc:	7823      	ldrb	r3, [r4, #0]
 8014ffe:	f3bf 8f5b 	dmb	ish
 8015002:	07da      	lsls	r2, r3, #31
 8015004:	4605      	mov	r5, r0
 8015006:	d40b      	bmi.n	8015020 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015008:	4620      	mov	r0, r4
 801500a:	f007 f986 	bl	801c31a <__cxa_guard_acquire>
 801500e:	b138      	cbz	r0, 8015020 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015010:	4620      	mov	r0, r4
 8015012:	f007 f98e 	bl	801c332 <__cxa_guard_release>
 8015016:	4a0f      	ldr	r2, [pc, #60]	; (8015054 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015018:	490f      	ldr	r1, [pc, #60]	; (8015058 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801501a:	4810      	ldr	r0, [pc, #64]	; (801505c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801501c:	f007 f962 	bl	801c2e4 <__aeabi_atexit>
 8015020:	4c0f      	ldr	r4, [pc, #60]	; (8015060 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8015022:	7823      	ldrb	r3, [r4, #0]
 8015024:	f3bf 8f5b 	dmb	ish
 8015028:	07db      	lsls	r3, r3, #31
 801502a:	d40b      	bmi.n	8015044 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801502c:	4620      	mov	r0, r4
 801502e:	f007 f974 	bl	801c31a <__cxa_guard_acquire>
 8015032:	b138      	cbz	r0, 8015044 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015034:	4620      	mov	r0, r4
 8015036:	f007 f97c 	bl	801c332 <__cxa_guard_release>
 801503a:	4a06      	ldr	r2, [pc, #24]	; (8015054 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801503c:	4909      	ldr	r1, [pc, #36]	; (8015064 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801503e:	480a      	ldr	r0, [pc, #40]	; (8015068 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015040:	f007 f950 	bl	801c2e4 <__aeabi_atexit>
 8015044:	4b05      	ldr	r3, [pc, #20]	; (801505c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015046:	662b      	str	r3, [r5, #96]	; 0x60
 8015048:	4b07      	ldr	r3, [pc, #28]	; (8015068 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801504a:	666b      	str	r3, [r5, #100]	; 0x64
 801504c:	bd38      	pop	{r3, r4, r5, pc}
 801504e:	bf00      	nop
 8015050:	2001259c 	.word	0x2001259c
 8015054:	20000000 	.word	0x20000000
 8015058:	08013191 	.word	0x08013191
 801505c:	200000d0 	.word	0x200000d0
 8015060:	200125a0 	.word	0x200125a0
 8015064:	0801318f 	.word	0x0801318f
 8015068:	200000d4 	.word	0x200000d4

0801506c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801506c:	b538      	push	{r3, r4, r5, lr}
 801506e:	4c15      	ldr	r4, [pc, #84]	; (80150c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8015070:	7823      	ldrb	r3, [r4, #0]
 8015072:	f3bf 8f5b 	dmb	ish
 8015076:	07da      	lsls	r2, r3, #31
 8015078:	4605      	mov	r5, r0
 801507a:	d40b      	bmi.n	8015094 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801507c:	4620      	mov	r0, r4
 801507e:	f007 f94c 	bl	801c31a <__cxa_guard_acquire>
 8015082:	b138      	cbz	r0, 8015094 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015084:	4620      	mov	r0, r4
 8015086:	f007 f954 	bl	801c332 <__cxa_guard_release>
 801508a:	4a0f      	ldr	r2, [pc, #60]	; (80150c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801508c:	490f      	ldr	r1, [pc, #60]	; (80150cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801508e:	4810      	ldr	r0, [pc, #64]	; (80150d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015090:	f007 f928 	bl	801c2e4 <__aeabi_atexit>
 8015094:	4c0f      	ldr	r4, [pc, #60]	; (80150d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8015096:	7823      	ldrb	r3, [r4, #0]
 8015098:	f3bf 8f5b 	dmb	ish
 801509c:	07db      	lsls	r3, r3, #31
 801509e:	d40b      	bmi.n	80150b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80150a0:	4620      	mov	r0, r4
 80150a2:	f007 f93a 	bl	801c31a <__cxa_guard_acquire>
 80150a6:	b138      	cbz	r0, 80150b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80150a8:	4620      	mov	r0, r4
 80150aa:	f007 f942 	bl	801c332 <__cxa_guard_release>
 80150ae:	4a06      	ldr	r2, [pc, #24]	; (80150c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80150b0:	4909      	ldr	r1, [pc, #36]	; (80150d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80150b2:	480a      	ldr	r0, [pc, #40]	; (80150dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80150b4:	f007 f916 	bl	801c2e4 <__aeabi_atexit>
 80150b8:	4b05      	ldr	r3, [pc, #20]	; (80150d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80150ba:	65ab      	str	r3, [r5, #88]	; 0x58
 80150bc:	4b07      	ldr	r3, [pc, #28]	; (80150dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80150be:	65eb      	str	r3, [r5, #92]	; 0x5c
 80150c0:	bd38      	pop	{r3, r4, r5, pc}
 80150c2:	bf00      	nop
 80150c4:	20012574 	.word	0x20012574
 80150c8:	20000000 	.word	0x20000000
 80150cc:	08013195 	.word	0x08013195
 80150d0:	200000a8 	.word	0x200000a8
 80150d4:	20012578 	.word	0x20012578
 80150d8:	08013193 	.word	0x08013193
 80150dc:	200000ac 	.word	0x200000ac

080150e0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80150e0:	b510      	push	{r4, lr}
 80150e2:	4604      	mov	r4, r0
 80150e4:	f7ff ff88 	bl	8014ff8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80150e8:	4620      	mov	r0, r4
 80150ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80150ee:	f7ff bfbd 	b.w	801506c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080150f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80150f4:	b538      	push	{r3, r4, r5, lr}
 80150f6:	4c15      	ldr	r4, [pc, #84]	; (801514c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80150f8:	7823      	ldrb	r3, [r4, #0]
 80150fa:	f3bf 8f5b 	dmb	ish
 80150fe:	07da      	lsls	r2, r3, #31
 8015100:	4605      	mov	r5, r0
 8015102:	d40b      	bmi.n	801511c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015104:	4620      	mov	r0, r4
 8015106:	f007 f908 	bl	801c31a <__cxa_guard_acquire>
 801510a:	b138      	cbz	r0, 801511c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801510c:	4620      	mov	r0, r4
 801510e:	f007 f910 	bl	801c332 <__cxa_guard_release>
 8015112:	4a0f      	ldr	r2, [pc, #60]	; (8015150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015114:	490f      	ldr	r1, [pc, #60]	; (8015154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8015116:	4810      	ldr	r0, [pc, #64]	; (8015158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015118:	f007 f8e4 	bl	801c2e4 <__aeabi_atexit>
 801511c:	4c0f      	ldr	r4, [pc, #60]	; (801515c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801511e:	7823      	ldrb	r3, [r4, #0]
 8015120:	f3bf 8f5b 	dmb	ish
 8015124:	07db      	lsls	r3, r3, #31
 8015126:	d40b      	bmi.n	8015140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015128:	4620      	mov	r0, r4
 801512a:	f007 f8f6 	bl	801c31a <__cxa_guard_acquire>
 801512e:	b138      	cbz	r0, 8015140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015130:	4620      	mov	r0, r4
 8015132:	f007 f8fe 	bl	801c332 <__cxa_guard_release>
 8015136:	4a06      	ldr	r2, [pc, #24]	; (8015150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015138:	4909      	ldr	r1, [pc, #36]	; (8015160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801513a:	480a      	ldr	r0, [pc, #40]	; (8015164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801513c:	f007 f8d2 	bl	801c2e4 <__aeabi_atexit>
 8015140:	4b05      	ldr	r3, [pc, #20]	; (8015158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015142:	672b      	str	r3, [r5, #112]	; 0x70
 8015144:	4b07      	ldr	r3, [pc, #28]	; (8015164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015146:	676b      	str	r3, [r5, #116]	; 0x74
 8015148:	bd38      	pop	{r3, r4, r5, pc}
 801514a:	bf00      	nop
 801514c:	2001256c 	.word	0x2001256c
 8015150:	20000000 	.word	0x20000000
 8015154:	08013189 	.word	0x08013189
 8015158:	200000a0 	.word	0x200000a0
 801515c:	20012570 	.word	0x20012570
 8015160:	08013187 	.word	0x08013187
 8015164:	200000a4 	.word	0x200000a4

08015168 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8015168:	b538      	push	{r3, r4, r5, lr}
 801516a:	4c15      	ldr	r4, [pc, #84]	; (80151c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801516c:	7823      	ldrb	r3, [r4, #0]
 801516e:	f3bf 8f5b 	dmb	ish
 8015172:	07da      	lsls	r2, r3, #31
 8015174:	4605      	mov	r5, r0
 8015176:	d40b      	bmi.n	8015190 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015178:	4620      	mov	r0, r4
 801517a:	f007 f8ce 	bl	801c31a <__cxa_guard_acquire>
 801517e:	b138      	cbz	r0, 8015190 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015180:	4620      	mov	r0, r4
 8015182:	f007 f8d6 	bl	801c332 <__cxa_guard_release>
 8015186:	4a0f      	ldr	r2, [pc, #60]	; (80151c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015188:	490f      	ldr	r1, [pc, #60]	; (80151c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801518a:	4810      	ldr	r0, [pc, #64]	; (80151cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801518c:	f007 f8aa 	bl	801c2e4 <__aeabi_atexit>
 8015190:	4c0f      	ldr	r4, [pc, #60]	; (80151d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8015192:	7823      	ldrb	r3, [r4, #0]
 8015194:	f3bf 8f5b 	dmb	ish
 8015198:	07db      	lsls	r3, r3, #31
 801519a:	d40b      	bmi.n	80151b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801519c:	4620      	mov	r0, r4
 801519e:	f007 f8bc 	bl	801c31a <__cxa_guard_acquire>
 80151a2:	b138      	cbz	r0, 80151b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80151a4:	4620      	mov	r0, r4
 80151a6:	f007 f8c4 	bl	801c332 <__cxa_guard_release>
 80151aa:	4a06      	ldr	r2, [pc, #24]	; (80151c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80151ac:	4909      	ldr	r1, [pc, #36]	; (80151d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80151ae:	480a      	ldr	r0, [pc, #40]	; (80151d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80151b0:	f007 f898 	bl	801c2e4 <__aeabi_atexit>
 80151b4:	4b05      	ldr	r3, [pc, #20]	; (80151cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80151b6:	66ab      	str	r3, [r5, #104]	; 0x68
 80151b8:	4b07      	ldr	r3, [pc, #28]	; (80151d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80151ba:	66eb      	str	r3, [r5, #108]	; 0x6c
 80151bc:	bd38      	pop	{r3, r4, r5, pc}
 80151be:	bf00      	nop
 80151c0:	20012564 	.word	0x20012564
 80151c4:	20000000 	.word	0x20000000
 80151c8:	0801318d 	.word	0x0801318d
 80151cc:	20000098 	.word	0x20000098
 80151d0:	20012568 	.word	0x20012568
 80151d4:	0801318b 	.word	0x0801318b
 80151d8:	2000009c 	.word	0x2000009c

080151dc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80151dc:	b510      	push	{r4, lr}
 80151de:	4604      	mov	r4, r0
 80151e0:	f7ff ff88 	bl	80150f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80151e4:	4620      	mov	r0, r4
 80151e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80151ea:	f7ff bfbd 	b.w	8015168 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080151ee <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80151ee:	b510      	push	{r4, lr}
 80151f0:	4604      	mov	r4, r0
 80151f2:	f7ff fff3 	bl	80151dc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80151f6:	4620      	mov	r0, r4
 80151f8:	f7ff ff72 	bl	80150e0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80151fc:	4620      	mov	r0, r4
 80151fe:	f7ff fdf9 	bl	8014df4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8015202:	4620      	mov	r0, r4
 8015204:	f7ff fcfa 	bl	8014bfc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8015208:	4620      	mov	r0, r4
 801520a:	f7ff fd75 	bl	8014cf8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801520e:	4620      	mov	r0, r4
 8015210:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015214:	f7ff bee0 	b.w	8014fd8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08015218 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8015218:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801521c:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8015220:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8015224:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8015228:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801522c:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8015230:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8015234:	8808      	ldrh	r0, [r1, #0]
 8015236:	fb0e 4708 	mla	r7, lr, r8, r4
 801523a:	f1be 0f00 	cmp.w	lr, #0
 801523e:	eb02 0a07 	add.w	sl, r2, r7
 8015242:	db37      	blt.n	80152b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015244:	45f3      	cmp	fp, lr
 8015246:	dd35      	ble.n	80152b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015248:	2c00      	cmp	r4, #0
 801524a:	db31      	blt.n	80152b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801524c:	45a0      	cmp	r8, r4
 801524e:	dd2f      	ble.n	80152b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8015250:	5dd2      	ldrb	r2, [r2, r7]
 8015252:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8015256:	1c62      	adds	r2, r4, #1
 8015258:	d42f      	bmi.n	80152ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801525a:	4590      	cmp	r8, r2
 801525c:	dd2d      	ble.n	80152ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801525e:	b366      	cbz	r6, 80152ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015260:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015264:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015268:	f11e 0e01 	adds.w	lr, lr, #1
 801526c:	d429      	bmi.n	80152c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801526e:	45f3      	cmp	fp, lr
 8015270:	dd27      	ble.n	80152c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8015272:	f1bc 0f00 	cmp.w	ip, #0
 8015276:	f000 80a0 	beq.w	80153ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 801527a:	2c00      	cmp	r4, #0
 801527c:	db1f      	blt.n	80152be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801527e:	45a0      	cmp	r8, r4
 8015280:	dd1d      	ble.n	80152be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8015282:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8015286:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801528a:	3401      	adds	r4, #1
 801528c:	d41c      	bmi.n	80152c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801528e:	45a0      	cmp	r8, r4
 8015290:	dd1a      	ble.n	80152c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8015292:	b1de      	cbz	r6, 80152cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8015294:	44d0      	add	r8, sl
 8015296:	f898 2001 	ldrb.w	r2, [r8, #1]
 801529a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801529e:	2e0f      	cmp	r6, #15
 80152a0:	d915      	bls.n	80152ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80152a2:	4b49      	ldr	r3, [pc, #292]	; (80153c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80152a4:	4a49      	ldr	r2, [pc, #292]	; (80153cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80152a6:	484a      	ldr	r0, [pc, #296]	; (80153d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80152a8:	f240 11ef 	movw	r1, #495	; 0x1ef
 80152ac:	f007 f866 	bl	801c37c <__assert_func>
 80152b0:	4681      	mov	r9, r0
 80152b2:	e7d0      	b.n	8015256 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80152b4:	4607      	mov	r7, r0
 80152b6:	4681      	mov	r9, r0
 80152b8:	e7d6      	b.n	8015268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80152ba:	4607      	mov	r7, r0
 80152bc:	e7d4      	b.n	8015268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80152be:	4686      	mov	lr, r0
 80152c0:	e7e3      	b.n	801528a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80152c2:	4603      	mov	r3, r0
 80152c4:	4686      	mov	lr, r0
 80152c6:	e7ea      	b.n	801529e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80152c8:	4603      	mov	r3, r0
 80152ca:	e7e8      	b.n	801529e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80152cc:	4603      	mov	r3, r0
 80152ce:	f1bc 0f0f 	cmp.w	ip, #15
 80152d2:	d8e6      	bhi.n	80152a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80152d4:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80152d8:	fb16 f80c 	smulbb	r8, r6, ip
 80152dc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80152e0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80152e4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80152e8:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80152ec:	ea44 0909 	orr.w	r9, r4, r9
 80152f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80152f4:	f1cc 0410 	rsb	r4, ip, #16
 80152f8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80152fc:	1ba4      	subs	r4, r4, r6
 80152fe:	041a      	lsls	r2, r3, #16
 8015300:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8015304:	ea4a 0707 	orr.w	r7, sl, r7
 8015308:	4377      	muls	r7, r6
 801530a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801530e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8015312:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015316:	fb04 7409 	mla	r4, r4, r9, r7
 801531a:	4313      	orrs	r3, r2
 801531c:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8015320:	fb08 4303 	mla	r3, r8, r3, r4
 8015324:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015328:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801532c:	4322      	orrs	r2, r4
 801532e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8015332:	fb0c 3202 	mla	r2, ip, r2, r3
 8015336:	0d53      	lsrs	r3, r2, #21
 8015338:	0952      	lsrs	r2, r2, #5
 801533a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801533e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015342:	431a      	orrs	r2, r3
 8015344:	b293      	uxth	r3, r2
 8015346:	b2af      	uxth	r7, r5
 8015348:	1202      	asrs	r2, r0, #8
 801534a:	43ed      	mvns	r5, r5
 801534c:	b2ed      	uxtb	r5, r5
 801534e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015352:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015356:	fb12 f205 	smulbb	r2, r2, r5
 801535a:	10c6      	asrs	r6, r0, #3
 801535c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015360:	fb0c 2c07 	mla	ip, ip, r7, r2
 8015364:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015368:	10da      	asrs	r2, r3, #3
 801536a:	fb16 f605 	smulbb	r6, r6, r5
 801536e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015372:	fb02 6207 	mla	r2, r2, r7, r6
 8015376:	b296      	uxth	r6, r2
 8015378:	00c2      	lsls	r2, r0, #3
 801537a:	00dc      	lsls	r4, r3, #3
 801537c:	b2d2      	uxtb	r2, r2
 801537e:	b2e4      	uxtb	r4, r4
 8015380:	fb12 f205 	smulbb	r2, r2, r5
 8015384:	fb04 2207 	mla	r2, r4, r7, r2
 8015388:	fa1f fc8c 	uxth.w	ip, ip
 801538c:	b292      	uxth	r2, r2
 801538e:	f10c 0301 	add.w	r3, ip, #1
 8015392:	1c50      	adds	r0, r2, #1
 8015394:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8015398:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801539c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80153a0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80153a4:	4313      	orrs	r3, r2
 80153a6:	1c72      	adds	r2, r6, #1
 80153a8:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80153ac:	0952      	lsrs	r2, r2, #5
 80153ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80153b2:	4313      	orrs	r3, r2
 80153b4:	800b      	strh	r3, [r1, #0]
 80153b6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153ba:	2e0f      	cmp	r6, #15
 80153bc:	f63f af71 	bhi.w	80152a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80153c0:	4603      	mov	r3, r0
 80153c2:	4686      	mov	lr, r0
 80153c4:	e786      	b.n	80152d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80153c6:	bf00      	nop
 80153c8:	08020dcd 	.word	0x08020dcd
 80153cc:	080213ce 	.word	0x080213ce
 80153d0:	08020e55 	.word	0x08020e55

080153d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80153d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153d8:	ed2d 8b08 	vpush	{d8-d11}
 80153dc:	b09b      	sub	sp, #108	; 0x6c
 80153de:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 80153e2:	9309      	str	r3, [sp, #36]	; 0x24
 80153e4:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 80153e8:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 80153ea:	930a      	str	r3, [sp, #40]	; 0x28
 80153ec:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80153f0:	930e      	str	r3, [sp, #56]	; 0x38
 80153f2:	910d      	str	r1, [sp, #52]	; 0x34
 80153f4:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80153f8:	9018      	str	r0, [sp, #96]	; 0x60
 80153fa:	6870      	ldr	r0, [r6, #4]
 80153fc:	9217      	str	r2, [sp, #92]	; 0x5c
 80153fe:	fb00 1303 	mla	r3, r0, r3, r1
 8015402:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8015404:	6831      	ldr	r1, [r6, #0]
 8015406:	6856      	ldr	r6, [r2, #4]
 8015408:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 801540c:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8015410:	6813      	ldr	r3, [r2, #0]
 8015412:	930c      	str	r3, [sp, #48]	; 0x30
 8015414:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015416:	43db      	mvns	r3, r3
 8015418:	b2db      	uxtb	r3, r3
 801541a:	eeb0 aa40 	vmov.f32	s20, s0
 801541e:	eef0 9a60 	vmov.f32	s19, s1
 8015422:	eeb0 9a41 	vmov.f32	s18, s2
 8015426:	eeb0 8a62 	vmov.f32	s16, s5
 801542a:	eef0 8a43 	vmov.f32	s17, s6
 801542e:	eef0 ba44 	vmov.f32	s23, s8
 8015432:	eeb0 ba64 	vmov.f32	s22, s9
 8015436:	eef0 aa45 	vmov.f32	s21, s10
 801543a:	3604      	adds	r6, #4
 801543c:	930b      	str	r3, [sp, #44]	; 0x2c
 801543e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015440:	2b00      	cmp	r3, #0
 8015442:	dc03      	bgt.n	801544c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015444:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8015446:	2b00      	cmp	r3, #0
 8015448:	f340 8215 	ble.w	8015876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 801544c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801544e:	2b00      	cmp	r3, #0
 8015450:	f340 8102 	ble.w	8015658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8015454:	ea5f 4229 	movs.w	r2, r9, asr #16
 8015458:	ea4f 4328 	mov.w	r3, r8, asr #16
 801545c:	d42c      	bmi.n	80154b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801545e:	1c51      	adds	r1, r2, #1
 8015460:	428c      	cmp	r4, r1
 8015462:	dd2c      	ble.n	80154be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015464:	2b00      	cmp	r3, #0
 8015466:	db2a      	blt.n	80154be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015468:	980a      	ldr	r0, [sp, #40]	; 0x28
 801546a:	1c59      	adds	r1, r3, #1
 801546c:	4288      	cmp	r0, r1
 801546e:	dd26      	ble.n	80154be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015470:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015472:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015474:	3b01      	subs	r3, #1
 8015476:	fb02 9203 	mla	r2, r2, r3, r9
 801547a:	1412      	asrs	r2, r2, #16
 801547c:	d429      	bmi.n	80154d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801547e:	3201      	adds	r2, #1
 8015480:	4294      	cmp	r4, r2
 8015482:	dd26      	ble.n	80154d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015484:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015486:	fb02 8303 	mla	r3, r2, r3, r8
 801548a:	141b      	asrs	r3, r3, #16
 801548c:	d421      	bmi.n	80154d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801548e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015490:	3301      	adds	r3, #1
 8015492:	429a      	cmp	r2, r3
 8015494:	dd1d      	ble.n	80154d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015496:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801549a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801549e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 80154a2:	9312      	str	r3, [sp, #72]	; 0x48
 80154a4:	f1be 0f00 	cmp.w	lr, #0
 80154a8:	f300 8138 	bgt.w	801571c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 80154ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154ae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80154b2:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80154b6:	e0d1      	b.n	801565c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 80154b8:	1c51      	adds	r1, r2, #1
 80154ba:	f040 80c3 	bne.w	8015644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80154be:	42a2      	cmp	r2, r4
 80154c0:	f280 80c0 	bge.w	8015644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80154c4:	1c5f      	adds	r7, r3, #1
 80154c6:	f2c0 80bd 	blt.w	8015644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80154ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80154cc:	4293      	cmp	r3, r2
 80154ce:	f280 80b9 	bge.w	8015644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80154d2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80154d6:	4657      	mov	r7, sl
 80154d8:	f1bb 0f00 	cmp.w	fp, #0
 80154dc:	dde6      	ble.n	80154ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80154de:	ea5f 4229 	movs.w	r2, r9, asr #16
 80154e2:	ea4f 4328 	mov.w	r3, r8, asr #16
 80154e6:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80154ea:	f3c8 3103 	ubfx	r1, r8, #12, #4
 80154ee:	f100 80fc 	bmi.w	80156ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 80154f2:	f102 0c01 	add.w	ip, r2, #1
 80154f6:	4564      	cmp	r4, ip
 80154f8:	f340 80f9 	ble.w	80156ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 80154fc:	2b00      	cmp	r3, #0
 80154fe:	f2c0 80f6 	blt.w	80156ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8015502:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8015504:	f103 0c01 	add.w	ip, r3, #1
 8015508:	4565      	cmp	r5, ip
 801550a:	f340 80f0 	ble.w	80156ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801550e:	fb03 2304 	mla	r3, r3, r4, r2
 8015512:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015514:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015516:	441a      	add	r2, r3
 8015518:	5ceb      	ldrb	r3, [r5, r3]
 801551a:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 801551e:	2800      	cmp	r0, #0
 8015520:	f000 80db 	beq.w	80156da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8015524:	7853      	ldrb	r3, [r2, #1]
 8015526:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801552a:	9313      	str	r3, [sp, #76]	; 0x4c
 801552c:	b141      	cbz	r1, 8015540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801552e:	1913      	adds	r3, r2, r4
 8015530:	5d12      	ldrb	r2, [r2, r4]
 8015532:	785b      	ldrb	r3, [r3, #1]
 8015534:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8015538:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801553c:	9210      	str	r2, [sp, #64]	; 0x40
 801553e:	9314      	str	r3, [sp, #80]	; 0x50
 8015540:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015542:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015544:	fb10 f201 	smulbb	r2, r0, r1
 8015548:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801554c:	10d2      	asrs	r2, r2, #3
 801554e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015552:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015556:	ea4c 0c03 	orr.w	ip, ip, r3
 801555a:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 801555e:	930f      	str	r3, [sp, #60]	; 0x3c
 8015560:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015562:	041b      	lsls	r3, r3, #16
 8015564:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015568:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801556c:	432b      	orrs	r3, r5
 801556e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8015570:	4353      	muls	r3, r2
 8015572:	fb05 330c 	mla	r3, r5, ip, r3
 8015576:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801557a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801557e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015582:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015586:	f1c1 0c10 	rsb	ip, r1, #16
 801558a:	ebac 0c00 	sub.w	ip, ip, r0
 801558e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015592:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015596:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015598:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801559a:	0418      	lsls	r0, r3, #16
 801559c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80155a0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80155a4:	4318      	orrs	r0, r3
 80155a6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80155aa:	fb02 c200 	mla	r2, r2, r0, ip
 80155ae:	0d53      	lsrs	r3, r2, #21
 80155b0:	0952      	lsrs	r2, r2, #5
 80155b2:	f8b7 c000 	ldrh.w	ip, [r7]
 80155b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80155ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80155be:	431a      	orrs	r2, r3
 80155c0:	b292      	uxth	r2, r2
 80155c2:	ea4f 212c 	mov.w	r1, ip, asr #8
 80155c6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80155ca:	1210      	asrs	r0, r2, #8
 80155cc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80155d0:	fb11 f105 	smulbb	r1, r1, r5
 80155d4:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80155d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80155dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80155e0:	fb00 1003 	mla	r0, r0, r3, r1
 80155e4:	fa5f fc8c 	uxtb.w	ip, ip
 80155e8:	10d1      	asrs	r1, r2, #3
 80155ea:	00d2      	lsls	r2, r2, #3
 80155ec:	fb1c fc05 	smulbb	ip, ip, r5
 80155f0:	b2d2      	uxtb	r2, r2
 80155f2:	fb02 c203 	mla	r2, r2, r3, ip
 80155f6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80155fa:	b280      	uxth	r0, r0
 80155fc:	b292      	uxth	r2, r2
 80155fe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015602:	fb1e fe05 	smulbb	lr, lr, r5
 8015606:	fb01 e103 	mla	r1, r1, r3, lr
 801560a:	f102 0c01 	add.w	ip, r2, #1
 801560e:	1c43      	adds	r3, r0, #1
 8015610:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015614:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8015618:	b289      	uxth	r1, r1
 801561a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801561e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015622:	4313      	orrs	r3, r2
 8015624:	1c4a      	adds	r2, r1, #1
 8015626:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801562a:	0949      	lsrs	r1, r1, #5
 801562c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015630:	430b      	orrs	r3, r1
 8015632:	803b      	strh	r3, [r7, #0]
 8015634:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8015636:	4499      	add	r9, r3
 8015638:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801563a:	3702      	adds	r7, #2
 801563c:	4498      	add	r8, r3
 801563e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015642:	e749      	b.n	80154d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8015644:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8015646:	4499      	add	r9, r3
 8015648:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801564a:	4498      	add	r8, r3
 801564c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801564e:	3b01      	subs	r3, #1
 8015650:	9309      	str	r3, [sp, #36]	; 0x24
 8015652:	f10a 0a02 	add.w	sl, sl, #2
 8015656:	e6f9      	b.n	801544c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015658:	f47f af0a 	bne.w	8015470 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801565c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801565e:	2b00      	cmp	r3, #0
 8015660:	f340 8109 	ble.w	8015876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8015664:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015668:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801566c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015670:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015672:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015676:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801567a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801567e:	eef0 6a48 	vmov.f32	s13, s16
 8015682:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015686:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801568a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801568e:	ee16 9a90 	vmov	r9, s13
 8015692:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015696:	eef0 6a68 	vmov.f32	s13, s17
 801569a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801569e:	ee18 2a10 	vmov	r2, s16
 80156a2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80156a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80156aa:	ee18 2a90 	vmov	r2, s17
 80156ae:	932f      	str	r3, [sp, #188]	; 0xbc
 80156b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80156b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80156b6:	9330      	str	r3, [sp, #192]	; 0xc0
 80156b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80156ba:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80156bc:	3b01      	subs	r3, #1
 80156be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156c2:	930d      	str	r3, [sp, #52]	; 0x34
 80156c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80156c6:	bf08      	it	eq
 80156c8:	4613      	moveq	r3, r2
 80156ca:	ee16 8a90 	vmov	r8, s13
 80156ce:	9309      	str	r3, [sp, #36]	; 0x24
 80156d0:	eef0 8a67 	vmov.f32	s17, s15
 80156d4:	eeb0 8a47 	vmov.f32	s16, s14
 80156d8:	e6b1      	b.n	801543e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80156da:	2900      	cmp	r1, #0
 80156dc:	f43f af30 	beq.w	8015540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80156e0:	5d13      	ldrb	r3, [r2, r4]
 80156e2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80156e6:	9310      	str	r3, [sp, #64]	; 0x40
 80156e8:	e72a      	b.n	8015540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80156ea:	1c55      	adds	r5, r2, #1
 80156ec:	d1a2      	bne.n	8015634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80156ee:	4294      	cmp	r4, r2
 80156f0:	dda0      	ble.n	8015634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80156f2:	1c5d      	adds	r5, r3, #1
 80156f4:	db9e      	blt.n	8015634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80156f6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80156f8:	429d      	cmp	r5, r3
 80156fa:	dd9b      	ble.n	8015634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80156fc:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8015700:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015702:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015704:	9202      	str	r2, [sp, #8]
 8015706:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801570a:	e9cd 4300 	strd	r4, r3, [sp]
 801570e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015710:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015712:	4633      	mov	r3, r6
 8015714:	4639      	mov	r1, r7
 8015716:	f7ff fd7f 	bl	8015218 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801571a:	e78b      	b.n	8015634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801571c:	ea4f 4329 	mov.w	r3, r9, asr #16
 8015720:	ea4f 4228 	mov.w	r2, r8, asr #16
 8015724:	fb04 3202 	mla	r2, r4, r2, r3
 8015728:	990c      	ldr	r1, [sp, #48]	; 0x30
 801572a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801572c:	4413      	add	r3, r2
 801572e:	5c8a      	ldrb	r2, [r1, r2]
 8015730:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8015734:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8015738:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 801573c:	f1bc 0f00 	cmp.w	ip, #0
 8015740:	f000 8091 	beq.w	8015866 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8015744:	785a      	ldrb	r2, [r3, #1]
 8015746:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801574a:	9215      	str	r2, [sp, #84]	; 0x54
 801574c:	b140      	cbz	r0, 8015760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801574e:	191a      	adds	r2, r3, r4
 8015750:	5d1b      	ldrb	r3, [r3, r4]
 8015752:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015756:	9311      	str	r3, [sp, #68]	; 0x44
 8015758:	7853      	ldrb	r3, [r2, #1]
 801575a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801575e:	9316      	str	r3, [sp, #88]	; 0x58
 8015760:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015762:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015764:	fb1c f200 	smulbb	r2, ip, r0
 8015768:	041f      	lsls	r7, r3, #16
 801576a:	10d2      	asrs	r2, r2, #3
 801576c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015770:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8015774:	431f      	orrs	r7, r3
 8015776:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801577a:	9319      	str	r3, [sp, #100]	; 0x64
 801577c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801577e:	041b      	lsls	r3, r3, #16
 8015780:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8015784:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015788:	ea43 030b 	orr.w	r3, r3, fp
 801578c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 801578e:	4353      	muls	r3, r2
 8015790:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015794:	fb05 3707 	mla	r7, r5, r7, r3
 8015798:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801579c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80157a0:	ea43 0b01 	orr.w	fp, r3, r1
 80157a4:	f1c0 0110 	rsb	r1, r0, #16
 80157a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80157aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80157ac:	eba1 0c0c 	sub.w	ip, r1, ip
 80157b0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80157b4:	fb0c 770b 	mla	r7, ip, fp, r7
 80157b8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80157bc:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80157c0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80157c4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80157c8:	ea4c 0c0b 	orr.w	ip, ip, fp
 80157cc:	fb02 770c 	mla	r7, r2, ip, r7
 80157d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80157d2:	0d79      	lsrs	r1, r7, #21
 80157d4:	8812      	ldrh	r2, [r2, #0]
 80157d6:	097f      	lsrs	r7, r7, #5
 80157d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80157dc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80157e0:	430f      	orrs	r7, r1
 80157e2:	1211      	asrs	r1, r2, #8
 80157e4:	b2bb      	uxth	r3, r7
 80157e6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80157ea:	fb11 f105 	smulbb	r1, r1, r5
 80157ee:	1218      	asrs	r0, r3, #8
 80157f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80157f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80157f6:	fb00 1005 	mla	r0, r0, r5, r1
 80157fa:	10d7      	asrs	r7, r2, #3
 80157fc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80157fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015802:	fb17 f705 	smulbb	r7, r7, r5
 8015806:	10d9      	asrs	r1, r3, #3
 8015808:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801580a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801580e:	fb01 7105 	mla	r1, r1, r5, r7
 8015812:	00d2      	lsls	r2, r2, #3
 8015814:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8015816:	b2d2      	uxtb	r2, r2
 8015818:	fb12 f205 	smulbb	r2, r2, r5
 801581c:	00db      	lsls	r3, r3, #3
 801581e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015820:	b2db      	uxtb	r3, r3
 8015822:	b280      	uxth	r0, r0
 8015824:	fb03 2305 	mla	r3, r3, r5, r2
 8015828:	b29b      	uxth	r3, r3
 801582a:	b289      	uxth	r1, r1
 801582c:	1c42      	adds	r2, r0, #1
 801582e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015832:	1c4f      	adds	r7, r1, #1
 8015834:	1c5a      	adds	r2, r3, #1
 8015836:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801583a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801583e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015842:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015846:	0949      	lsrs	r1, r1, #5
 8015848:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801584a:	4310      	orrs	r0, r2
 801584c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015850:	4308      	orrs	r0, r1
 8015852:	f823 0b02 	strh.w	r0, [r3], #2
 8015856:	930f      	str	r3, [sp, #60]	; 0x3c
 8015858:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801585a:	4499      	add	r9, r3
 801585c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801585e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015862:	4498      	add	r8, r3
 8015864:	e61e      	b.n	80154a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8015866:	2800      	cmp	r0, #0
 8015868:	f43f af7a 	beq.w	8015760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801586c:	5d1b      	ldrb	r3, [r3, r4]
 801586e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015872:	9311      	str	r3, [sp, #68]	; 0x44
 8015874:	e774      	b.n	8015760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8015876:	b01b      	add	sp, #108	; 0x6c
 8015878:	ecbd 8b08 	vpop	{d8-d11}
 801587c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8015880:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015884:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8015888:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801588c:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8015890:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8015894:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8015898:	8808      	ldrh	r0, [r1, #0]
 801589a:	fb06 570e 	mla	r7, r6, lr, r5
 801589e:	2e00      	cmp	r6, #0
 80158a0:	eb02 0807 	add.w	r8, r2, r7
 80158a4:	db38      	blt.n	8015918 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80158a6:	45b1      	cmp	r9, r6
 80158a8:	dd36      	ble.n	8015918 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80158aa:	2d00      	cmp	r5, #0
 80158ac:	db32      	blt.n	8015914 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80158ae:	45ae      	cmp	lr, r5
 80158b0:	dd30      	ble.n	8015914 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80158b2:	5dd2      	ldrb	r2, [r2, r7]
 80158b4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80158b8:	1c6a      	adds	r2, r5, #1
 80158ba:	d430      	bmi.n	801591e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80158bc:	4596      	cmp	lr, r2
 80158be:	dd2e      	ble.n	801591e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80158c0:	b36c      	cbz	r4, 801591e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80158c2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80158c6:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80158ca:	3601      	adds	r6, #1
 80158cc:	d42b      	bmi.n	8015926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80158ce:	45b1      	cmp	r9, r6
 80158d0:	dd29      	ble.n	8015926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80158d2:	f1bc 0f00 	cmp.w	ip, #0
 80158d6:	d028      	beq.n	801592a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 80158d8:	2d00      	cmp	r5, #0
 80158da:	db22      	blt.n	8015922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80158dc:	45ae      	cmp	lr, r5
 80158de:	dd20      	ble.n	8015922 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80158e0:	f818 600e 	ldrb.w	r6, [r8, lr]
 80158e4:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80158e8:	3501      	adds	r5, #1
 80158ea:	d407      	bmi.n	80158fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80158ec:	45ae      	cmp	lr, r5
 80158ee:	dd05      	ble.n	80158fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80158f0:	b134      	cbz	r4, 8015900 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80158f2:	44c6      	add	lr, r8
 80158f4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80158f8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80158fc:	2c0f      	cmp	r4, #15
 80158fe:	d802      	bhi.n	8015906 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8015900:	f1bc 0f0f 	cmp.w	ip, #15
 8015904:	d914      	bls.n	8015930 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8015906:	4b26      	ldr	r3, [pc, #152]	; (80159a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8015908:	4a26      	ldr	r2, [pc, #152]	; (80159a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801590a:	4827      	ldr	r0, [pc, #156]	; (80159a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801590c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8015910:	f006 fd34 	bl	801c37c <__assert_func>
 8015914:	4607      	mov	r7, r0
 8015916:	e7cf      	b.n	80158b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8015918:	4602      	mov	r2, r0
 801591a:	4607      	mov	r7, r0
 801591c:	e7d5      	b.n	80158ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801591e:	4602      	mov	r2, r0
 8015920:	e7d3      	b.n	80158ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8015922:	4606      	mov	r6, r0
 8015924:	e7e0      	b.n	80158e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8015926:	4606      	mov	r6, r0
 8015928:	e7e8      	b.n	80158fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801592a:	2c0f      	cmp	r4, #15
 801592c:	d8eb      	bhi.n	8015906 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801592e:	4606      	mov	r6, r0
 8015930:	043d      	lsls	r5, r7, #16
 8015932:	fb14 f30c 	smulbb	r3, r4, ip
 8015936:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801593a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801593e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015942:	10db      	asrs	r3, r3, #3
 8015944:	432f      	orrs	r7, r5
 8015946:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801594a:	f1cc 0510 	rsb	r5, ip, #16
 801594e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015952:	1b2d      	subs	r5, r5, r4
 8015954:	ea4e 0202 	orr.w	r2, lr, r2
 8015958:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801595c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8015960:	4354      	muls	r4, r2
 8015962:	fb05 4507 	mla	r5, r5, r7, r4
 8015966:	0404      	lsls	r4, r0, #16
 8015968:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801596c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015970:	4320      	orrs	r0, r4
 8015972:	fb03 5400 	mla	r4, r3, r0, r5
 8015976:	0430      	lsls	r0, r6, #16
 8015978:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801597c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8015980:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8015984:	4330      	orrs	r0, r6
 8015986:	fb03 4000 	mla	r0, r3, r0, r4
 801598a:	0d43      	lsrs	r3, r0, #21
 801598c:	0940      	lsrs	r0, r0, #5
 801598e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015992:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015996:	4318      	orrs	r0, r3
 8015998:	8008      	strh	r0, [r1, #0]
 801599a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801599e:	bf00      	nop
 80159a0:	08020dcd 	.word	0x08020dcd
 80159a4:	080213ce 	.word	0x080213ce
 80159a8:	08020e55 	.word	0x08020e55

080159ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80159ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159b0:	ed2d 8b0a 	vpush	{d8-d12}
 80159b4:	b095      	sub	sp, #84	; 0x54
 80159b6:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 80159ba:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 80159bc:	9306      	str	r3, [sp, #24]
 80159be:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80159c2:	9109      	str	r1, [sp, #36]	; 0x24
 80159c4:	9307      	str	r3, [sp, #28]
 80159c6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80159ca:	9012      	str	r0, [sp, #72]	; 0x48
 80159cc:	6878      	ldr	r0, [r7, #4]
 80159ce:	9211      	str	r2, [sp, #68]	; 0x44
 80159d0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80159d2:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 80159d6:	fb00 1303 	mla	r3, r0, r3, r1
 80159da:	6839      	ldr	r1, [r7, #0]
 80159dc:	6857      	ldr	r7, [r2, #4]
 80159de:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 80159e2:	6813      	ldr	r3, [r2, #0]
 80159e4:	9308      	str	r3, [sp, #32]
 80159e6:	eeb0 aa40 	vmov.f32	s20, s0
 80159ea:	eef0 9a60 	vmov.f32	s19, s1
 80159ee:	eeb0 9a41 	vmov.f32	s18, s2
 80159f2:	eeb0 8a62 	vmov.f32	s16, s5
 80159f6:	eef0 8a43 	vmov.f32	s17, s6
 80159fa:	eeb0 ca44 	vmov.f32	s24, s8
 80159fe:	eef0 ba64 	vmov.f32	s23, s9
 8015a02:	eeb0 ba45 	vmov.f32	s22, s10
 8015a06:	3704      	adds	r7, #4
 8015a08:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015a0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015a0e:	2b00      	cmp	r3, #0
 8015a10:	dc03      	bgt.n	8015a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8015a12:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015a14:	2b00      	cmp	r3, #0
 8015a16:	f340 819a 	ble.w	8015d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8015a1a:	9b06      	ldr	r3, [sp, #24]
 8015a1c:	2b00      	cmp	r3, #0
 8015a1e:	f340 80c4 	ble.w	8015baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015a22:	ea5f 4229 	movs.w	r2, r9, asr #16
 8015a26:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015a2a:	d429      	bmi.n	8015a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015a2c:	1c51      	adds	r1, r2, #1
 8015a2e:	428c      	cmp	r4, r1
 8015a30:	dd29      	ble.n	8015a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8015a32:	2b00      	cmp	r3, #0
 8015a34:	db27      	blt.n	8015a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8015a36:	9807      	ldr	r0, [sp, #28]
 8015a38:	1c59      	adds	r1, r3, #1
 8015a3a:	4288      	cmp	r0, r1
 8015a3c:	dd23      	ble.n	8015a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8015a3e:	9b06      	ldr	r3, [sp, #24]
 8015a40:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015a42:	3b01      	subs	r3, #1
 8015a44:	fb02 9203 	mla	r2, r2, r3, r9
 8015a48:	1412      	asrs	r2, r2, #16
 8015a4a:	d425      	bmi.n	8015a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015a4c:	3201      	adds	r2, #1
 8015a4e:	4294      	cmp	r4, r2
 8015a50:	dd22      	ble.n	8015a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015a52:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015a54:	fb02 6303 	mla	r3, r2, r3, r6
 8015a58:	141b      	asrs	r3, r3, #16
 8015a5a:	d41d      	bmi.n	8015a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015a5c:	9a07      	ldr	r2, [sp, #28]
 8015a5e:	3301      	adds	r3, #1
 8015a60:	429a      	cmp	r2, r3
 8015a62:	dd19      	ble.n	8015a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015a64:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8015a68:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8015a6c:	f1b8 0f00 	cmp.w	r8, #0
 8015a70:	f300 80f8 	bgt.w	8015c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8015a74:	9b06      	ldr	r3, [sp, #24]
 8015a76:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8015a7a:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8015a7e:	e096      	b.n	8015bae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8015a80:	1c51      	adds	r1, r2, #1
 8015a82:	f040 8088 	bne.w	8015b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8015a86:	42a2      	cmp	r2, r4
 8015a88:	f280 8085 	bge.w	8015b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8015a8c:	1c5a      	adds	r2, r3, #1
 8015a8e:	f2c0 8082 	blt.w	8015b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8015a92:	9a07      	ldr	r2, [sp, #28]
 8015a94:	4293      	cmp	r3, r2
 8015a96:	da7e      	bge.n	8015b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8015a98:	f8dd b018 	ldr.w	fp, [sp, #24]
 8015a9c:	46d0      	mov	r8, sl
 8015a9e:	f1bb 0f00 	cmp.w	fp, #0
 8015aa2:	dde7      	ble.n	8015a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8015aa4:	ea5f 4229 	movs.w	r2, r9, asr #16
 8015aa8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015aac:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8015ab0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8015ab4:	f100 80c0 	bmi.w	8015c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8015ab8:	f102 0c01 	add.w	ip, r2, #1
 8015abc:	4564      	cmp	r4, ip
 8015abe:	f340 80bd 	ble.w	8015c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8015ac2:	2b00      	cmp	r3, #0
 8015ac4:	f2c0 80ba 	blt.w	8015c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8015ac8:	9d07      	ldr	r5, [sp, #28]
 8015aca:	f103 0c01 	add.w	ip, r3, #1
 8015ace:	4565      	cmp	r5, ip
 8015ad0:	f340 80b4 	ble.w	8015c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8015ad4:	fb03 2304 	mla	r3, r3, r4, r2
 8015ad8:	9d08      	ldr	r5, [sp, #32]
 8015ada:	9a08      	ldr	r2, [sp, #32]
 8015adc:	441a      	add	r2, r3
 8015ade:	5ceb      	ldrb	r3, [r5, r3]
 8015ae0:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8015ae4:	2800      	cmp	r0, #0
 8015ae6:	f000 809f 	beq.w	8015c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 8015aea:	7853      	ldrb	r3, [r2, #1]
 8015aec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015af0:	930d      	str	r3, [sp, #52]	; 0x34
 8015af2:	b141      	cbz	r1, 8015b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8015af4:	1913      	adds	r3, r2, r4
 8015af6:	5d12      	ldrb	r2, [r2, r4]
 8015af8:	785b      	ldrb	r3, [r3, #1]
 8015afa:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8015afe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015b02:	920a      	str	r2, [sp, #40]	; 0x28
 8015b04:	930e      	str	r3, [sp, #56]	; 0x38
 8015b06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015b08:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015b0a:	fb10 f201 	smulbb	r2, r0, r1
 8015b0e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015b12:	10d2      	asrs	r2, r2, #3
 8015b14:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015b18:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015b1c:	ea4c 0c03 	orr.w	ip, ip, r3
 8015b20:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8015b24:	930c      	str	r3, [sp, #48]	; 0x30
 8015b26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b28:	041b      	lsls	r3, r3, #16
 8015b2a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015b2e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015b32:	432b      	orrs	r3, r5
 8015b34:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015b36:	4353      	muls	r3, r2
 8015b38:	fb05 330c 	mla	r3, r5, ip, r3
 8015b3c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015b40:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015b44:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015b48:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015b4c:	f1c1 0c10 	rsb	ip, r1, #16
 8015b50:	ebac 0c00 	sub.w	ip, ip, r0
 8015b54:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015b58:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015b5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015b5e:	0418      	lsls	r0, r3, #16
 8015b60:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015b64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015b68:	4318      	orrs	r0, r3
 8015b6a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015b6e:	fb02 c200 	mla	r2, r2, r0, ip
 8015b72:	0d53      	lsrs	r3, r2, #21
 8015b74:	0952      	lsrs	r2, r2, #5
 8015b76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015b7a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015b7e:	431a      	orrs	r2, r3
 8015b80:	f8a8 2000 	strh.w	r2, [r8]
 8015b84:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015b86:	4499      	add	r9, r3
 8015b88:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015b8a:	f108 0802 	add.w	r8, r8, #2
 8015b8e:	441e      	add	r6, r3
 8015b90:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015b94:	e783      	b.n	8015a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015b96:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015b98:	4499      	add	r9, r3
 8015b9a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015b9c:	441e      	add	r6, r3
 8015b9e:	9b06      	ldr	r3, [sp, #24]
 8015ba0:	3b01      	subs	r3, #1
 8015ba2:	9306      	str	r3, [sp, #24]
 8015ba4:	f10a 0a02 	add.w	sl, sl, #2
 8015ba8:	e737      	b.n	8015a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8015baa:	f47f af48 	bne.w	8015a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8015bae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015bb0:	2b00      	cmp	r3, #0
 8015bb2:	f340 80cc 	ble.w	8015d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8015bb6:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015bba:	ee79 9aab 	vadd.f32	s19, s19, s23
 8015bbe:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015bc2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015bc4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015bc8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015bcc:	eef0 6a48 	vmov.f32	s13, s16
 8015bd0:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015bd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015bd8:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015bdc:	ee16 9a90 	vmov	r9, s13
 8015be0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015be4:	eef0 6a68 	vmov.f32	s13, s17
 8015be8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015bec:	ee18 2a10 	vmov	r2, s16
 8015bf0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015bf4:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bf8:	ee18 2a90 	vmov	r2, s17
 8015bfc:	932b      	str	r3, [sp, #172]	; 0xac
 8015bfe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c00:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c04:	932c      	str	r3, [sp, #176]	; 0xb0
 8015c06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015c0a:	3b01      	subs	r3, #1
 8015c0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015c10:	9309      	str	r3, [sp, #36]	; 0x24
 8015c12:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c14:	bf08      	it	eq
 8015c16:	4613      	moveq	r3, r2
 8015c18:	ee16 6a90 	vmov	r6, s13
 8015c1c:	9306      	str	r3, [sp, #24]
 8015c1e:	eef0 8a67 	vmov.f32	s17, s15
 8015c22:	eeb0 8a47 	vmov.f32	s16, s14
 8015c26:	e6f1      	b.n	8015a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8015c28:	2900      	cmp	r1, #0
 8015c2a:	f43f af6c 	beq.w	8015b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8015c2e:	5d13      	ldrb	r3, [r2, r4]
 8015c30:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015c34:	930a      	str	r3, [sp, #40]	; 0x28
 8015c36:	e766      	b.n	8015b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8015c38:	1c55      	adds	r5, r2, #1
 8015c3a:	d1a3      	bne.n	8015b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015c3c:	4294      	cmp	r4, r2
 8015c3e:	dda1      	ble.n	8015b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015c40:	1c5d      	adds	r5, r3, #1
 8015c42:	db9f      	blt.n	8015b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015c44:	9d07      	ldr	r5, [sp, #28]
 8015c46:	429d      	cmp	r5, r3
 8015c48:	dd9c      	ble.n	8015b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015c4a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015c4e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8015c52:	e9cd 4500 	strd	r4, r5, [sp]
 8015c56:	463b      	mov	r3, r7
 8015c58:	9a08      	ldr	r2, [sp, #32]
 8015c5a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015c5c:	4641      	mov	r1, r8
 8015c5e:	f7ff fe0f 	bl	8015880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015c62:	e78f      	b.n	8015b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015c64:	ea4f 4329 	mov.w	r3, r9, asr #16
 8015c68:	1432      	asrs	r2, r6, #16
 8015c6a:	fb04 3202 	mla	r2, r4, r2, r3
 8015c6e:	9908      	ldr	r1, [sp, #32]
 8015c70:	9b08      	ldr	r3, [sp, #32]
 8015c72:	4413      	add	r3, r2
 8015c74:	5c8a      	ldrb	r2, [r1, r2]
 8015c76:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8015c7a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015c7e:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8015c82:	f1be 0f00 	cmp.w	lr, #0
 8015c86:	d05b      	beq.n	8015d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8015c88:	785a      	ldrb	r2, [r3, #1]
 8015c8a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8015c8e:	920f      	str	r2, [sp, #60]	; 0x3c
 8015c90:	b140      	cbz	r0, 8015ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8015c92:	191a      	adds	r2, r3, r4
 8015c94:	5d1b      	ldrb	r3, [r3, r4]
 8015c96:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015c9a:	930b      	str	r3, [sp, #44]	; 0x2c
 8015c9c:	7853      	ldrb	r3, [r2, #1]
 8015c9e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015ca2:	9310      	str	r3, [sp, #64]	; 0x40
 8015ca4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015ca6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8015ca8:	fb1e f200 	smulbb	r2, lr, r0
 8015cac:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015cb0:	10d2      	asrs	r2, r2, #3
 8015cb2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015cb6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015cba:	ea4c 0c03 	orr.w	ip, ip, r3
 8015cbe:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8015cc2:	9313      	str	r3, [sp, #76]	; 0x4c
 8015cc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015cc6:	041b      	lsls	r3, r3, #16
 8015cc8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8015ccc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015cd0:	ea43 030b 	orr.w	r3, r3, fp
 8015cd4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015cd6:	4353      	muls	r3, r2
 8015cd8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015cdc:	fb05 3c0c 	mla	ip, r5, ip, r3
 8015ce0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015ce4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015ce8:	ea43 0b01 	orr.w	fp, r3, r1
 8015cec:	f1c0 0110 	rsb	r1, r0, #16
 8015cf0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015cf2:	eba1 0e0e 	sub.w	lr, r1, lr
 8015cf6:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8015cfa:	fb0e cc0b 	mla	ip, lr, fp, ip
 8015cfe:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015d02:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8015d06:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015d0a:	ea4b 0e0e 	orr.w	lr, fp, lr
 8015d0e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015d12:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015d16:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8015d1a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8015d1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015d22:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015d26:	ea43 0c0c 	orr.w	ip, r3, ip
 8015d2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015d2c:	f823 cb02 	strh.w	ip, [r3], #2
 8015d30:	930c      	str	r3, [sp, #48]	; 0x30
 8015d32:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015d34:	4499      	add	r9, r3
 8015d36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015d38:	f108 38ff 	add.w	r8, r8, #4294967295
 8015d3c:	441e      	add	r6, r3
 8015d3e:	e695      	b.n	8015a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8015d40:	2800      	cmp	r0, #0
 8015d42:	d0af      	beq.n	8015ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8015d44:	5d1b      	ldrb	r3, [r3, r4]
 8015d46:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015d4a:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d4c:	e7aa      	b.n	8015ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8015d4e:	b015      	add	sp, #84	; 0x54
 8015d50:	ecbd 8b0a 	vpop	{d8-d12}
 8015d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8015d58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d5c:	468b      	mov	fp, r1
 8015d5e:	8809      	ldrh	r1, [r1, #0]
 8015d60:	b089      	sub	sp, #36	; 0x24
 8015d62:	10cd      	asrs	r5, r1, #3
 8015d64:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8015d68:	ea4f 2921 	mov.w	r9, r1, asr #8
 8015d6c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015d70:	00c9      	lsls	r1, r1, #3
 8015d72:	9500      	str	r5, [sp, #0]
 8015d74:	b2c9      	uxtb	r1, r1
 8015d76:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8015d7a:	9101      	str	r1, [sp, #4]
 8015d7c:	9900      	ldr	r1, [sp, #0]
 8015d7e:	9202      	str	r2, [sp, #8]
 8015d80:	fb04 650e 	mla	r5, r4, lr, r6
 8015d84:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8015d88:	eb02 0805 	add.w	r8, r2, r5
 8015d8c:	0209      	lsls	r1, r1, #8
 8015d8e:	9a01      	ldr	r2, [sp, #4]
 8015d90:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8015d94:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8015d98:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8015d9c:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8015da0:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8015da4:	4311      	orrs	r1, r2
 8015da6:	2c00      	cmp	r4, #0
 8015da8:	9107      	str	r1, [sp, #28]
 8015daa:	db43      	blt.n	8015e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015dac:	45a2      	cmp	sl, r4
 8015dae:	dd41      	ble.n	8015e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015db0:	2e00      	cmp	r6, #0
 8015db2:	db3d      	blt.n	8015e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8015db4:	45b6      	cmp	lr, r6
 8015db6:	dd3b      	ble.n	8015e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8015db8:	9a02      	ldr	r2, [sp, #8]
 8015dba:	5d55      	ldrb	r5, [r2, r5]
 8015dbc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015dc0:	441d      	add	r5, r3
 8015dc2:	1c72      	adds	r2, r6, #1
 8015dc4:	d439      	bmi.n	8015e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015dc6:	4596      	cmp	lr, r2
 8015dc8:	dd37      	ble.n	8015e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015dca:	2f00      	cmp	r7, #0
 8015dcc:	d035      	beq.n	8015e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015dce:	f898 1001 	ldrb.w	r1, [r8, #1]
 8015dd2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8015dd6:	4419      	add	r1, r3
 8015dd8:	3401      	adds	r4, #1
 8015dda:	d432      	bmi.n	8015e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015ddc:	45a2      	cmp	sl, r4
 8015dde:	dd30      	ble.n	8015e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015de0:	b378      	cbz	r0, 8015e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015de2:	2e00      	cmp	r6, #0
 8015de4:	db2b      	blt.n	8015e3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8015de6:	45b6      	cmp	lr, r6
 8015de8:	dd29      	ble.n	8015e3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8015dea:	f818 400e 	ldrb.w	r4, [r8, lr]
 8015dee:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015df2:	441c      	add	r4, r3
 8015df4:	3601      	adds	r6, #1
 8015df6:	d427      	bmi.n	8015e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015df8:	45b6      	cmp	lr, r6
 8015dfa:	dd25      	ble.n	8015e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015dfc:	b327      	cbz	r7, 8015e48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015dfe:	44c6      	add	lr, r8
 8015e00:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015e04:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015e08:	4413      	add	r3, r2
 8015e0a:	782a      	ldrb	r2, [r5, #0]
 8015e0c:	9202      	str	r2, [sp, #8]
 8015e0e:	780a      	ldrb	r2, [r1, #0]
 8015e10:	9203      	str	r2, [sp, #12]
 8015e12:	7822      	ldrb	r2, [r4, #0]
 8015e14:	9204      	str	r2, [sp, #16]
 8015e16:	2f0f      	cmp	r7, #15
 8015e18:	781a      	ldrb	r2, [r3, #0]
 8015e1a:	9205      	str	r2, [sp, #20]
 8015e1c:	d801      	bhi.n	8015e22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8015e1e:	280f      	cmp	r0, #15
 8015e20:	d914      	bls.n	8015e4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8015e22:	4b3f      	ldr	r3, [pc, #252]	; (8015f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8015e24:	4a3f      	ldr	r2, [pc, #252]	; (8015f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8015e26:	4840      	ldr	r0, [pc, #256]	; (8015f28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8015e28:	f240 210d 	movw	r1, #525	; 0x20d
 8015e2c:	f006 faa6 	bl	801c37c <__assert_func>
 8015e30:	ad07      	add	r5, sp, #28
 8015e32:	e7c6      	b.n	8015dc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8015e34:	a907      	add	r1, sp, #28
 8015e36:	460d      	mov	r5, r1
 8015e38:	e7ce      	b.n	8015dd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8015e3a:	a907      	add	r1, sp, #28
 8015e3c:	e7cc      	b.n	8015dd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8015e3e:	ac07      	add	r4, sp, #28
 8015e40:	e7d8      	b.n	8015df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8015e42:	ab07      	add	r3, sp, #28
 8015e44:	461c      	mov	r4, r3
 8015e46:	e7e0      	b.n	8015e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015e48:	ab07      	add	r3, sp, #28
 8015e4a:	e7de      	b.n	8015e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015e4c:	b2ba      	uxth	r2, r7
 8015e4e:	b280      	uxth	r0, r0
 8015e50:	fb02 fa00 	mul.w	sl, r2, r0
 8015e54:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8015e58:	0112      	lsls	r2, r2, #4
 8015e5a:	b280      	uxth	r0, r0
 8015e5c:	f891 8002 	ldrb.w	r8, [r1, #2]
 8015e60:	7849      	ldrb	r1, [r1, #1]
 8015e62:	78ae      	ldrb	r6, [r5, #2]
 8015e64:	786d      	ldrb	r5, [r5, #1]
 8015e66:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8015e6a:	eba2 020a 	sub.w	r2, r2, sl
 8015e6e:	b292      	uxth	r2, r2
 8015e70:	ebae 0e00 	sub.w	lr, lr, r0
 8015e74:	fa1f fe8e 	uxth.w	lr, lr
 8015e78:	4351      	muls	r1, r2
 8015e7a:	fb02 f808 	mul.w	r8, r2, r8
 8015e7e:	fb0e 8806 	mla	r8, lr, r6, r8
 8015e82:	fb0e 1505 	mla	r5, lr, r5, r1
 8015e86:	78a6      	ldrb	r6, [r4, #2]
 8015e88:	7861      	ldrb	r1, [r4, #1]
 8015e8a:	fa1f f78c 	uxth.w	r7, ip
 8015e8e:	fb00 8806 	mla	r8, r0, r6, r8
 8015e92:	fb00 5501 	mla	r5, r0, r1, r5
 8015e96:	789e      	ldrb	r6, [r3, #2]
 8015e98:	7859      	ldrb	r1, [r3, #1]
 8015e9a:	9b00      	ldr	r3, [sp, #0]
 8015e9c:	ea6f 0c0c 	mvn.w	ip, ip
 8015ea0:	fa5f fc8c 	uxtb.w	ip, ip
 8015ea4:	fb0a 5101 	mla	r1, sl, r1, r5
 8015ea8:	fb13 f50c 	smulbb	r5, r3, ip
 8015eac:	9b03      	ldr	r3, [sp, #12]
 8015eae:	435a      	muls	r2, r3
 8015eb0:	9b02      	ldr	r3, [sp, #8]
 8015eb2:	fb0e 2203 	mla	r2, lr, r3, r2
 8015eb6:	9b04      	ldr	r3, [sp, #16]
 8015eb8:	fb00 2003 	mla	r0, r0, r3, r2
 8015ebc:	9b05      	ldr	r3, [sp, #20]
 8015ebe:	fb0a 8606 	mla	r6, sl, r6, r8
 8015ec2:	fb0a 0a03 	mla	sl, sl, r3, r0
 8015ec6:	9b01      	ldr	r3, [sp, #4]
 8015ec8:	fb19 f90c 	smulbb	r9, r9, ip
 8015ecc:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8015ed0:	fb13 fc0c 	smulbb	ip, r3, ip
 8015ed4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015ed8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015edc:	fb06 9607 	mla	r6, r6, r7, r9
 8015ee0:	fb01 5107 	mla	r1, r1, r7, r5
 8015ee4:	fb0a c707 	mla	r7, sl, r7, ip
 8015ee8:	b2b6      	uxth	r6, r6
 8015eea:	b289      	uxth	r1, r1
 8015eec:	b2bf      	uxth	r7, r7
 8015eee:	f106 0901 	add.w	r9, r6, #1
 8015ef2:	f107 0c01 	add.w	ip, r7, #1
 8015ef6:	1c4d      	adds	r5, r1, #1
 8015ef8:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8015efc:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8015f00:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8015f04:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015f08:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015f0c:	0949      	lsrs	r1, r1, #5
 8015f0e:	433e      	orrs	r6, r7
 8015f10:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015f14:	430e      	orrs	r6, r1
 8015f16:	f8ab 6000 	strh.w	r6, [fp]
 8015f1a:	b009      	add	sp, #36	; 0x24
 8015f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f20:	08020dcd 	.word	0x08020dcd
 8015f24:	08021325 	.word	0x08021325
 8015f28:	08020e55 	.word	0x08020e55

08015f2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f30:	ed2d 8b08 	vpush	{d8-d11}
 8015f34:	b097      	sub	sp, #92	; 0x5c
 8015f36:	eeb0 aa40 	vmov.f32	s20, s0
 8015f3a:	9309      	str	r3, [sp, #36]	; 0x24
 8015f3c:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8015f40:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015f42:	930b      	str	r3, [sp, #44]	; 0x2c
 8015f44:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8015f48:	9310      	str	r3, [sp, #64]	; 0x40
 8015f4a:	910f      	str	r1, [sp, #60]	; 0x3c
 8015f4c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015f50:	9015      	str	r0, [sp, #84]	; 0x54
 8015f52:	6860      	ldr	r0, [r4, #4]
 8015f54:	9213      	str	r2, [sp, #76]	; 0x4c
 8015f56:	fb00 1303 	mla	r3, r0, r3, r1
 8015f5a:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015f5c:	6821      	ldr	r1, [r4, #0]
 8015f5e:	6854      	ldr	r4, [r2, #4]
 8015f60:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8015f64:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015f68:	930a      	str	r3, [sp, #40]	; 0x28
 8015f6a:	6813      	ldr	r3, [r2, #0]
 8015f6c:	930e      	str	r3, [sp, #56]	; 0x38
 8015f6e:	1d23      	adds	r3, r4, #4
 8015f70:	9308      	str	r3, [sp, #32]
 8015f72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015f74:	43db      	mvns	r3, r3
 8015f76:	b2db      	uxtb	r3, r3
 8015f78:	eef0 9a60 	vmov.f32	s19, s1
 8015f7c:	eeb0 9a41 	vmov.f32	s18, s2
 8015f80:	eeb0 8a62 	vmov.f32	s16, s5
 8015f84:	eef0 8a43 	vmov.f32	s17, s6
 8015f88:	eef0 ba44 	vmov.f32	s23, s8
 8015f8c:	eeb0 ba64 	vmov.f32	s22, s9
 8015f90:	eef0 aa45 	vmov.f32	s21, s10
 8015f94:	930c      	str	r3, [sp, #48]	; 0x30
 8015f96:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015f98:	2b00      	cmp	r3, #0
 8015f9a:	dc03      	bgt.n	8015fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015f9c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015f9e:	2b00      	cmp	r3, #0
 8015fa0:	f340 825c 	ble.w	801645c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8015fa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fa6:	2b00      	cmp	r3, #0
 8015fa8:	f340 8127 	ble.w	80161fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8015fac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015fae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015fb0:	1412      	asrs	r2, r2, #16
 8015fb2:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015fb6:	d430      	bmi.n	801601a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8015fb8:	1c51      	adds	r1, r2, #1
 8015fba:	428d      	cmp	r5, r1
 8015fbc:	dd30      	ble.n	8016020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8015fbe:	2b00      	cmp	r3, #0
 8015fc0:	db2e      	blt.n	8016020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8015fc2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015fc4:	1c59      	adds	r1, r3, #1
 8015fc6:	4288      	cmp	r0, r1
 8015fc8:	dd2a      	ble.n	8016020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8015fca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fcc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015fce:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015fd0:	3b01      	subs	r3, #1
 8015fd2:	fb02 1203 	mla	r2, r2, r3, r1
 8015fd6:	1412      	asrs	r2, r2, #16
 8015fd8:	d42c      	bmi.n	8016034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015fda:	3201      	adds	r2, #1
 8015fdc:	4295      	cmp	r5, r2
 8015fde:	dd29      	ble.n	8016034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015fe0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015fe2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015fe4:	fb02 1303 	mla	r3, r2, r3, r1
 8015fe8:	141b      	asrs	r3, r3, #16
 8015fea:	d423      	bmi.n	8016034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015fec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015fee:	3301      	adds	r3, #1
 8015ff0:	429a      	cmp	r2, r3
 8015ff2:	dd1f      	ble.n	8016034 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015ff4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ff6:	9311      	str	r3, [sp, #68]	; 0x44
 8015ff8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015ffa:	930d      	str	r3, [sp, #52]	; 0x34
 8015ffc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8016000:	9312      	str	r3, [sp, #72]	; 0x48
 8016002:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016004:	2b00      	cmp	r3, #0
 8016006:	f300 8161 	bgt.w	80162cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 801600a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801600c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801600e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016012:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016016:	930a      	str	r3, [sp, #40]	; 0x28
 8016018:	e0f1      	b.n	80161fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 801601a:	1c51      	adds	r1, r2, #1
 801601c:	f040 80de 	bne.w	80161dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8016020:	42aa      	cmp	r2, r5
 8016022:	f280 80db 	bge.w	80161dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8016026:	1c5f      	adds	r7, r3, #1
 8016028:	f2c0 80d8 	blt.w	80161dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801602c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801602e:	4293      	cmp	r3, r2
 8016030:	f280 80d4 	bge.w	80161dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8016034:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016036:	9311      	str	r3, [sp, #68]	; 0x44
 8016038:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801603a:	930d      	str	r3, [sp, #52]	; 0x34
 801603c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801603e:	2b00      	cmp	r3, #0
 8016040:	dde3      	ble.n	801600a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8016042:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016044:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8016046:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8016048:	141a      	asrs	r2, r3, #16
 801604a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801604c:	1400      	asrs	r0, r0, #16
 801604e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016052:	f3c1 3103 	ubfx	r1, r1, #12, #4
 8016056:	f100 8120 	bmi.w	801629a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 801605a:	1c46      	adds	r6, r0, #1
 801605c:	42b5      	cmp	r5, r6
 801605e:	f340 811e 	ble.w	801629e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8016062:	2a00      	cmp	r2, #0
 8016064:	f2c0 811b 	blt.w	801629e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8016068:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801606a:	1c56      	adds	r6, r2, #1
 801606c:	42b7      	cmp	r7, r6
 801606e:	f340 8116 	ble.w	801629e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8016072:	fb02 0005 	mla	r0, r2, r5, r0
 8016076:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016078:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801607a:	9c08      	ldr	r4, [sp, #32]
 801607c:	4402      	add	r2, r0
 801607e:	5c30      	ldrb	r0, [r6, r0]
 8016080:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016084:	9014      	str	r0, [sp, #80]	; 0x50
 8016086:	1826      	adds	r6, r4, r0
 8016088:	2b00      	cmp	r3, #0
 801608a:	f000 80f7 	beq.w	801627c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 801608e:	f892 e001 	ldrb.w	lr, [r2, #1]
 8016092:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016096:	44a6      	add	lr, r4
 8016098:	2900      	cmp	r1, #0
 801609a:	f000 80f8 	beq.w	801628e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801609e:	1950      	adds	r0, r2, r5
 80160a0:	5d52      	ldrb	r2, [r2, r5]
 80160a2:	7840      	ldrb	r0, [r0, #1]
 80160a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80160a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80160ac:	4422      	add	r2, r4
 80160ae:	4420      	add	r0, r4
 80160b0:	b29b      	uxth	r3, r3
 80160b2:	b289      	uxth	r1, r1
 80160b4:	fb03 fa01 	mul.w	sl, r3, r1
 80160b8:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 80160bc:	011b      	lsls	r3, r3, #4
 80160be:	b289      	uxth	r1, r1
 80160c0:	f89e c002 	ldrb.w	ip, [lr, #2]
 80160c4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80160c8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80160ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80160cc:	f8b7 8000 	ldrh.w	r8, [r7]
 80160d0:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 80160d4:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 80160d8:	eba3 030a 	sub.w	r3, r3, sl
 80160dc:	b29b      	uxth	r3, r3
 80160de:	eba9 0901 	sub.w	r9, r9, r1
 80160e2:	fa1f f989 	uxth.w	r9, r9
 80160e6:	fb03 fc0c 	mul.w	ip, r3, ip
 80160ea:	fb09 cc0b 	mla	ip, r9, fp, ip
 80160ee:	f892 b002 	ldrb.w	fp, [r2, #2]
 80160f2:	fb01 cc0b 	mla	ip, r1, fp, ip
 80160f6:	f890 b002 	ldrb.w	fp, [r0, #2]
 80160fa:	fb0a cc0b 	mla	ip, sl, fp, ip
 80160fe:	ea4f 2b28 	mov.w	fp, r8, asr #8
 8016102:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016106:	fb1b fb04 	smulbb	fp, fp, r4
 801610a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801610e:	fb0c bc07 	mla	ip, ip, r7, fp
 8016112:	f896 b001 	ldrb.w	fp, [r6, #1]
 8016116:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801611a:	f89e e000 	ldrb.w	lr, [lr]
 801611e:	435e      	muls	r6, r3
 8016120:	fb09 660b 	mla	r6, r9, fp, r6
 8016124:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016128:	fb01 660b 	mla	r6, r1, fp, r6
 801612c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016130:	fb0a 660b 	mla	r6, sl, fp, r6
 8016134:	ea4f 0be8 	mov.w	fp, r8, asr #3
 8016138:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801613c:	fb1b fb04 	smulbb	fp, fp, r4
 8016140:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016144:	fb06 b607 	mla	r6, r6, r7, fp
 8016148:	b2b4      	uxth	r4, r6
 801614a:	9412      	str	r4, [sp, #72]	; 0x48
 801614c:	9e08      	ldr	r6, [sp, #32]
 801614e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016150:	f816 b004 	ldrb.w	fp, [r6, r4]
 8016154:	fb03 f30e 	mul.w	r3, r3, lr
 8016158:	f892 e000 	ldrb.w	lr, [r2]
 801615c:	fb09 330b 	mla	r3, r9, fp, r3
 8016160:	fb01 330e 	mla	r3, r1, lr, r3
 8016164:	f890 e000 	ldrb.w	lr, [r0]
 8016168:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801616c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8016170:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016172:	fa5f f888 	uxtb.w	r8, r8
 8016176:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801617a:	fb18 f803 	smulbb	r8, r8, r3
 801617e:	fb0e 8807 	mla	r8, lr, r7, r8
 8016182:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016184:	fa1f fc8c 	uxth.w	ip, ip
 8016188:	fa1f f888 	uxth.w	r8, r8
 801618c:	f103 0b01 	add.w	fp, r3, #1
 8016190:	f10c 0201 	add.w	r2, ip, #1
 8016194:	f108 0e01 	add.w	lr, r8, #1
 8016198:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 801619c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80161a0:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 80161a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80161a8:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 80161ac:	0976      	lsrs	r6, r6, #5
 80161ae:	ea4c 0c08 	orr.w	ip, ip, r8
 80161b2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80161b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80161b8:	ea4c 0606 	orr.w	r6, ip, r6
 80161bc:	801e      	strh	r6, [r3, #0]
 80161be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80161c0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80161c2:	3302      	adds	r3, #2
 80161c4:	930d      	str	r3, [sp, #52]	; 0x34
 80161c6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80161c8:	4413      	add	r3, r2
 80161ca:	9329      	str	r3, [sp, #164]	; 0xa4
 80161cc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80161ce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80161d0:	4413      	add	r3, r2
 80161d2:	932a      	str	r3, [sp, #168]	; 0xa8
 80161d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80161d6:	3b01      	subs	r3, #1
 80161d8:	9311      	str	r3, [sp, #68]	; 0x44
 80161da:	e72f      	b.n	801603c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80161dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80161de:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80161e0:	4413      	add	r3, r2
 80161e2:	9329      	str	r3, [sp, #164]	; 0xa4
 80161e4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80161e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80161e8:	4413      	add	r3, r2
 80161ea:	932a      	str	r3, [sp, #168]	; 0xa8
 80161ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161ee:	3b01      	subs	r3, #1
 80161f0:	9309      	str	r3, [sp, #36]	; 0x24
 80161f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80161f4:	3302      	adds	r3, #2
 80161f6:	930a      	str	r3, [sp, #40]	; 0x28
 80161f8:	e6d4      	b.n	8015fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80161fa:	f47f aee6 	bne.w	8015fca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80161fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016200:	2b00      	cmp	r3, #0
 8016202:	f340 812b 	ble.w	801645c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8016206:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801620a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801620e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016212:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016214:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016218:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801621c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016220:	eef0 6a48 	vmov.f32	s13, s16
 8016224:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016228:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801622c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016230:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8016234:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016238:	eef0 6a68 	vmov.f32	s13, s17
 801623c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016240:	ee18 2a10 	vmov	r2, s16
 8016244:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016248:	fb92 f3f3 	sdiv	r3, r2, r3
 801624c:	ee18 2a90 	vmov	r2, s17
 8016250:	932b      	str	r3, [sp, #172]	; 0xac
 8016252:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016254:	fb92 f3f3 	sdiv	r3, r2, r3
 8016258:	932c      	str	r3, [sp, #176]	; 0xb0
 801625a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801625c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801625e:	3b01      	subs	r3, #1
 8016260:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016264:	930f      	str	r3, [sp, #60]	; 0x3c
 8016266:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016268:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801626c:	bf08      	it	eq
 801626e:	4613      	moveq	r3, r2
 8016270:	9309      	str	r3, [sp, #36]	; 0x24
 8016272:	eef0 8a67 	vmov.f32	s17, s15
 8016276:	eeb0 8a47 	vmov.f32	s16, s14
 801627a:	e68c      	b.n	8015f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801627c:	b151      	cbz	r1, 8016294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801627e:	5d52      	ldrb	r2, [r2, r5]
 8016280:	9808      	ldr	r0, [sp, #32]
 8016282:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016286:	4402      	add	r2, r0
 8016288:	4630      	mov	r0, r6
 801628a:	46b6      	mov	lr, r6
 801628c:	e710      	b.n	80160b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 801628e:	4630      	mov	r0, r6
 8016290:	4632      	mov	r2, r6
 8016292:	e70d      	b.n	80160b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8016294:	4630      	mov	r0, r6
 8016296:	4632      	mov	r2, r6
 8016298:	e7f7      	b.n	801628a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 801629a:	1c46      	adds	r6, r0, #1
 801629c:	d18f      	bne.n	80161be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801629e:	4285      	cmp	r5, r0
 80162a0:	dd8d      	ble.n	80161be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80162a2:	1c54      	adds	r4, r2, #1
 80162a4:	db8b      	blt.n	80161be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80162a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80162a8:	4294      	cmp	r4, r2
 80162aa:	dd88      	ble.n	80161be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80162ac:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80162b0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80162b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80162b4:	9002      	str	r0, [sp, #8]
 80162b6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80162ba:	e9cd 5300 	strd	r5, r3, [sp]
 80162be:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 80162c2:	9b08      	ldr	r3, [sp, #32]
 80162c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80162c6:	f7ff fd47 	bl	8015d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80162ca:	e778      	b.n	80161be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80162cc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80162ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80162d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80162d2:	1410      	asrs	r0, r2, #16
 80162d4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80162d8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80162da:	1412      	asrs	r2, r2, #16
 80162dc:	fb05 2000 	mla	r0, r5, r0, r2
 80162e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80162e2:	f814 a000 	ldrb.w	sl, [r4, r0]
 80162e6:	4402      	add	r2, r0
 80162e8:	9808      	ldr	r0, [sp, #32]
 80162ea:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80162ee:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80162f2:	eb00 060a 	add.w	r6, r0, sl
 80162f6:	2b00      	cmp	r3, #0
 80162f8:	f000 80a1 	beq.w	801643e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 80162fc:	f892 c001 	ldrb.w	ip, [r2, #1]
 8016300:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8016304:	4484      	add	ip, r0
 8016306:	2900      	cmp	r1, #0
 8016308:	f000 80a2 	beq.w	8016450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801630c:	1950      	adds	r0, r2, r5
 801630e:	5d52      	ldrb	r2, [r2, r5]
 8016310:	7840      	ldrb	r0, [r0, #1]
 8016312:	9c08      	ldr	r4, [sp, #32]
 8016314:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016318:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801631c:	4422      	add	r2, r4
 801631e:	4420      	add	r0, r4
 8016320:	b29b      	uxth	r3, r3
 8016322:	b289      	uxth	r1, r1
 8016324:	fb03 f901 	mul.w	r9, r3, r1
 8016328:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801632c:	011b      	lsls	r3, r3, #4
 801632e:	b289      	uxth	r1, r1
 8016330:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8016334:	f896 b002 	ldrb.w	fp, [r6, #2]
 8016338:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801633a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801633e:	eba3 0309 	sub.w	r3, r3, r9
 8016342:	b29b      	uxth	r3, r3
 8016344:	eba8 0801 	sub.w	r8, r8, r1
 8016348:	fa1f f888 	uxth.w	r8, r8
 801634c:	435f      	muls	r7, r3
 801634e:	fb08 770b 	mla	r7, r8, fp, r7
 8016352:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016356:	f8b4 e000 	ldrh.w	lr, [r4]
 801635a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801635c:	fb01 770b 	mla	r7, r1, fp, r7
 8016360:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016364:	fb09 770b 	mla	r7, r9, fp, r7
 8016368:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801636c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016370:	fb1b fb04 	smulbb	fp, fp, r4
 8016374:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016376:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801637a:	fb07 b704 	mla	r7, r7, r4, fp
 801637e:	f896 b001 	ldrb.w	fp, [r6, #1]
 8016382:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8016386:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016388:	f89c c000 	ldrb.w	ip, [ip]
 801638c:	435e      	muls	r6, r3
 801638e:	fb08 660b 	mla	r6, r8, fp, r6
 8016392:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016396:	fb01 660b 	mla	r6, r1, fp, r6
 801639a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801639e:	fb09 660b 	mla	r6, r9, fp, r6
 80163a2:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80163a6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80163aa:	fb1b fb04 	smulbb	fp, fp, r4
 80163ae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80163b0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80163b4:	fb06 b604 	mla	r6, r6, r4, fp
 80163b8:	9c08      	ldr	r4, [sp, #32]
 80163ba:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80163be:	fb03 f30c 	mul.w	r3, r3, ip
 80163c2:	f892 c000 	ldrb.w	ip, [r2]
 80163c6:	fb08 330a 	mla	r3, r8, sl, r3
 80163ca:	fb01 330c 	mla	r3, r1, ip, r3
 80163ce:	f890 c000 	ldrb.w	ip, [r0]
 80163d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80163d6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80163da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80163dc:	fa5f fe8e 	uxtb.w	lr, lr
 80163e0:	fb1e fe03 	smulbb	lr, lr, r3
 80163e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80163e6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80163ea:	fb0c ec03 	mla	ip, ip, r3, lr
 80163ee:	b2bf      	uxth	r7, r7
 80163f0:	b2b6      	uxth	r6, r6
 80163f2:	fa1f fc8c 	uxth.w	ip, ip
 80163f6:	1c7b      	adds	r3, r7, #1
 80163f8:	f10c 0201 	add.w	r2, ip, #1
 80163fc:	f106 0b01 	add.w	fp, r6, #1
 8016400:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016404:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8016408:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 801640c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016410:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016414:	0976      	lsrs	r6, r6, #5
 8016416:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016418:	4317      	orrs	r7, r2
 801641a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801641e:	4337      	orrs	r7, r6
 8016420:	f823 7b02 	strh.w	r7, [r3], #2
 8016424:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016426:	930d      	str	r3, [sp, #52]	; 0x34
 8016428:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801642a:	4413      	add	r3, r2
 801642c:	9329      	str	r3, [sp, #164]	; 0xa4
 801642e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016430:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016432:	4413      	add	r3, r2
 8016434:	932a      	str	r3, [sp, #168]	; 0xa8
 8016436:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016438:	3b01      	subs	r3, #1
 801643a:	9311      	str	r3, [sp, #68]	; 0x44
 801643c:	e5e1      	b.n	8016002 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801643e:	b151      	cbz	r1, 8016456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8016440:	5d52      	ldrb	r2, [r2, r5]
 8016442:	9808      	ldr	r0, [sp, #32]
 8016444:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016448:	4402      	add	r2, r0
 801644a:	4630      	mov	r0, r6
 801644c:	46b4      	mov	ip, r6
 801644e:	e767      	b.n	8016320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8016450:	4630      	mov	r0, r6
 8016452:	4632      	mov	r2, r6
 8016454:	e764      	b.n	8016320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8016456:	4630      	mov	r0, r6
 8016458:	4632      	mov	r2, r6
 801645a:	e7f7      	b.n	801644c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 801645c:	b017      	add	sp, #92	; 0x5c
 801645e:	ecbd 8b08 	vpop	{d8-d11}
 8016462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8016468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801646c:	880e      	ldrh	r6, [r1, #0]
 801646e:	b085      	sub	sp, #20
 8016470:	0230      	lsls	r0, r6, #8
 8016472:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8016476:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801647a:	0170      	lsls	r0, r6, #5
 801647c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016480:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016484:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8016488:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 801648c:	00f6      	lsls	r6, r6, #3
 801648e:	ea4b 0000 	orr.w	r0, fp, r0
 8016492:	b2f6      	uxtb	r6, r6
 8016494:	4691      	mov	r9, r2
 8016496:	fb05 7a0c 	mla	sl, r5, ip, r7
 801649a:	4306      	orrs	r6, r0
 801649c:	2d00      	cmp	r5, #0
 801649e:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80164a2:	9603      	str	r6, [sp, #12]
 80164a4:	eb09 0e0a 	add.w	lr, r9, sl
 80164a8:	db42      	blt.n	8016530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80164aa:	45a8      	cmp	r8, r5
 80164ac:	dd40      	ble.n	8016530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80164ae:	2f00      	cmp	r7, #0
 80164b0:	db3c      	blt.n	801652c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 80164b2:	45bc      	cmp	ip, r7
 80164b4:	dd3a      	ble.n	801652c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 80164b6:	f819 600a 	ldrb.w	r6, [r9, sl]
 80164ba:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80164be:	441e      	add	r6, r3
 80164c0:	1c78      	adds	r0, r7, #1
 80164c2:	d438      	bmi.n	8016536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80164c4:	4584      	cmp	ip, r0
 80164c6:	dd36      	ble.n	8016536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80164c8:	b3aa      	cbz	r2, 8016536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80164ca:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80164ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80164d2:	4418      	add	r0, r3
 80164d4:	3501      	adds	r5, #1
 80164d6:	d432      	bmi.n	801653e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 80164d8:	45a8      	cmp	r8, r5
 80164da:	dd30      	ble.n	801653e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 80164dc:	b37c      	cbz	r4, 801653e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 80164de:	2f00      	cmp	r7, #0
 80164e0:	db2b      	blt.n	801653a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 80164e2:	45bc      	cmp	ip, r7
 80164e4:	dd29      	ble.n	801653a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 80164e6:	f81e 500c 	ldrb.w	r5, [lr, ip]
 80164ea:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80164ee:	441d      	add	r5, r3
 80164f0:	3701      	adds	r7, #1
 80164f2:	d427      	bmi.n	8016544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 80164f4:	45bc      	cmp	ip, r7
 80164f6:	dd25      	ble.n	8016544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 80164f8:	b322      	cbz	r2, 8016544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 80164fa:	44f4      	add	ip, lr
 80164fc:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8016500:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016504:	443b      	add	r3, r7
 8016506:	781f      	ldrb	r7, [r3, #0]
 8016508:	f896 a000 	ldrb.w	sl, [r6]
 801650c:	f890 b000 	ldrb.w	fp, [r0]
 8016510:	f895 9000 	ldrb.w	r9, [r5]
 8016514:	9700      	str	r7, [sp, #0]
 8016516:	2a0f      	cmp	r2, #15
 8016518:	d801      	bhi.n	801651e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 801651a:	2c0f      	cmp	r4, #15
 801651c:	d914      	bls.n	8016548 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 801651e:	4b2c      	ldr	r3, [pc, #176]	; (80165d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8016520:	4a2c      	ldr	r2, [pc, #176]	; (80165d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8016522:	482d      	ldr	r0, [pc, #180]	; (80165d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8016524:	f240 210d 	movw	r1, #525	; 0x20d
 8016528:	f005 ff28 	bl	801c37c <__assert_func>
 801652c:	ae03      	add	r6, sp, #12
 801652e:	e7c7      	b.n	80164c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8016530:	a803      	add	r0, sp, #12
 8016532:	4606      	mov	r6, r0
 8016534:	e7ce      	b.n	80164d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8016536:	a803      	add	r0, sp, #12
 8016538:	e7cc      	b.n	80164d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 801653a:	ad03      	add	r5, sp, #12
 801653c:	e7d8      	b.n	80164f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 801653e:	ab03      	add	r3, sp, #12
 8016540:	461d      	mov	r5, r3
 8016542:	e7e0      	b.n	8016506 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8016544:	ab03      	add	r3, sp, #12
 8016546:	e7de      	b.n	8016506 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8016548:	b292      	uxth	r2, r2
 801654a:	b2a4      	uxth	r4, r4
 801654c:	fb02 f804 	mul.w	r8, r2, r4
 8016550:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8016554:	0112      	lsls	r2, r2, #4
 8016556:	b2a4      	uxth	r4, r4
 8016558:	f890 e002 	ldrb.w	lr, [r0, #2]
 801655c:	78b7      	ldrb	r7, [r6, #2]
 801655e:	7840      	ldrb	r0, [r0, #1]
 8016560:	7876      	ldrb	r6, [r6, #1]
 8016562:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8016566:	eba2 0208 	sub.w	r2, r2, r8
 801656a:	b292      	uxth	r2, r2
 801656c:	ebac 0c04 	sub.w	ip, ip, r4
 8016570:	fa1f fc8c 	uxth.w	ip, ip
 8016574:	fb02 fe0e 	mul.w	lr, r2, lr
 8016578:	fb0c ee07 	mla	lr, ip, r7, lr
 801657c:	78af      	ldrb	r7, [r5, #2]
 801657e:	fb04 ee07 	mla	lr, r4, r7, lr
 8016582:	789f      	ldrb	r7, [r3, #2]
 8016584:	785b      	ldrb	r3, [r3, #1]
 8016586:	fb08 e707 	mla	r7, r8, r7, lr
 801658a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801658e:	fb02 fe0b 	mul.w	lr, r2, fp
 8016592:	4342      	muls	r2, r0
 8016594:	7868      	ldrb	r0, [r5, #1]
 8016596:	9701      	str	r7, [sp, #4]
 8016598:	fb0c ee0a 	mla	lr, ip, sl, lr
 801659c:	9f00      	ldr	r7, [sp, #0]
 801659e:	fb0c 2206 	mla	r2, ip, r6, r2
 80165a2:	fb04 ee09 	mla	lr, r4, r9, lr
 80165a6:	fb04 2400 	mla	r4, r4, r0, r2
 80165aa:	fb08 ee07 	mla	lr, r8, r7, lr
 80165ae:	9f01      	ldr	r7, [sp, #4]
 80165b0:	fb08 4803 	mla	r8, r8, r3, r4
 80165b4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80165b8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80165bc:	ea47 070e 	orr.w	r7, r7, lr
 80165c0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80165c4:	ea47 0708 	orr.w	r7, r7, r8
 80165c8:	800f      	strh	r7, [r1, #0]
 80165ca:	b005      	add	sp, #20
 80165cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165d0:	08020dcd 	.word	0x08020dcd
 80165d4:	08021325 	.word	0x08021325
 80165d8:	08020e55 	.word	0x08020e55

080165dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80165dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165e0:	ed2d 8b0a 	vpush	{d8-d12}
 80165e4:	b091      	sub	sp, #68	; 0x44
 80165e6:	eeb0 aa40 	vmov.f32	s20, s0
 80165ea:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80165ec:	9307      	str	r3, [sp, #28]
 80165ee:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 80165f2:	910c      	str	r1, [sp, #48]	; 0x30
 80165f4:	9309      	str	r3, [sp, #36]	; 0x24
 80165f6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80165fa:	900f      	str	r0, [sp, #60]	; 0x3c
 80165fc:	6860      	ldr	r0, [r4, #4]
 80165fe:	920e      	str	r2, [sp, #56]	; 0x38
 8016600:	fb00 1303 	mla	r3, r0, r3, r1
 8016604:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016606:	6821      	ldr	r1, [r4, #0]
 8016608:	6854      	ldr	r4, [r2, #4]
 801660a:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 801660e:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8016612:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016616:	9308      	str	r3, [sp, #32]
 8016618:	6813      	ldr	r3, [r2, #0]
 801661a:	930a      	str	r3, [sp, #40]	; 0x28
 801661c:	eef0 9a60 	vmov.f32	s19, s1
 8016620:	eeb0 9a41 	vmov.f32	s18, s2
 8016624:	eeb0 8a62 	vmov.f32	s16, s5
 8016628:	eef0 8a43 	vmov.f32	s17, s6
 801662c:	eeb0 ca44 	vmov.f32	s24, s8
 8016630:	eef0 ba64 	vmov.f32	s23, s9
 8016634:	eeb0 ba45 	vmov.f32	s22, s10
 8016638:	3404      	adds	r4, #4
 801663a:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801663e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016640:	2b00      	cmp	r3, #0
 8016642:	dc03      	bgt.n	801664c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8016644:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016646:	2b00      	cmp	r3, #0
 8016648:	f340 81cb 	ble.w	80169e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 801664c:	9b07      	ldr	r3, [sp, #28]
 801664e:	2b00      	cmp	r3, #0
 8016650:	f340 80dd 	ble.w	801680e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8016654:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8016656:	1412      	asrs	r2, r2, #16
 8016658:	ea4f 432b 	mov.w	r3, fp, asr #16
 801665c:	d42c      	bmi.n	80166b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801665e:	1c51      	adds	r1, r2, #1
 8016660:	428d      	cmp	r5, r1
 8016662:	dd2c      	ble.n	80166be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8016664:	2b00      	cmp	r3, #0
 8016666:	db2a      	blt.n	80166be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8016668:	9809      	ldr	r0, [sp, #36]	; 0x24
 801666a:	1c59      	adds	r1, r3, #1
 801666c:	4288      	cmp	r0, r1
 801666e:	dd26      	ble.n	80166be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8016670:	9b07      	ldr	r3, [sp, #28]
 8016672:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016674:	9925      	ldr	r1, [sp, #148]	; 0x94
 8016676:	3b01      	subs	r3, #1
 8016678:	fb02 1203 	mla	r2, r2, r3, r1
 801667c:	1412      	asrs	r2, r2, #16
 801667e:	d428      	bmi.n	80166d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8016680:	3201      	adds	r2, #1
 8016682:	4295      	cmp	r5, r2
 8016684:	dd25      	ble.n	80166d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8016686:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016688:	fb02 b303 	mla	r3, r2, r3, fp
 801668c:	141b      	asrs	r3, r3, #16
 801668e:	d420      	bmi.n	80166d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8016690:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016692:	3301      	adds	r3, #1
 8016694:	429a      	cmp	r2, r3
 8016696:	dd1c      	ble.n	80166d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8016698:	9b07      	ldr	r3, [sp, #28]
 801669a:	930b      	str	r3, [sp, #44]	; 0x2c
 801669c:	9b08      	ldr	r3, [sp, #32]
 801669e:	930d      	str	r3, [sp, #52]	; 0x34
 80166a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166a2:	2b00      	cmp	r3, #0
 80166a4:	f300 8116 	bgt.w	80168d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80166a8:	9b07      	ldr	r3, [sp, #28]
 80166aa:	9a08      	ldr	r2, [sp, #32]
 80166ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80166b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80166b4:	9308      	str	r3, [sp, #32]
 80166b6:	e0ac      	b.n	8016812 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 80166b8:	1c51      	adds	r1, r2, #1
 80166ba:	f040 809b 	bne.w	80167f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80166be:	42aa      	cmp	r2, r5
 80166c0:	f280 8098 	bge.w	80167f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80166c4:	1c5a      	adds	r2, r3, #1
 80166c6:	f2c0 8095 	blt.w	80167f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80166ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80166cc:	4293      	cmp	r3, r2
 80166ce:	f280 8091 	bge.w	80167f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80166d2:	9b07      	ldr	r3, [sp, #28]
 80166d4:	930d      	str	r3, [sp, #52]	; 0x34
 80166d6:	9b08      	ldr	r3, [sp, #32]
 80166d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80166da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80166dc:	2b00      	cmp	r3, #0
 80166de:	dde3      	ble.n	80166a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80166e0:	9825      	ldr	r0, [sp, #148]	; 0x94
 80166e2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80166e4:	1400      	asrs	r0, r0, #16
 80166e6:	ea4f 422b 	mov.w	r2, fp, asr #16
 80166ea:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80166ee:	f3cb 3103 	ubfx	r1, fp, #12, #4
 80166f2:	f100 80d9 	bmi.w	80168a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 80166f6:	1c46      	adds	r6, r0, #1
 80166f8:	42b5      	cmp	r5, r6
 80166fa:	f340 80d7 	ble.w	80168ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 80166fe:	2a00      	cmp	r2, #0
 8016700:	f2c0 80d4 	blt.w	80168ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8016704:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016706:	1c56      	adds	r6, r2, #1
 8016708:	42b7      	cmp	r7, r6
 801670a:	f340 80cf 	ble.w	80168ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 801670e:	fb02 0005 	mla	r0, r2, r5, r0
 8016712:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8016714:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016716:	4402      	add	r2, r0
 8016718:	5c30      	ldrb	r0, [r6, r0]
 801671a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801671e:	eb04 0c08 	add.w	ip, r4, r8
 8016722:	2b00      	cmp	r3, #0
 8016724:	f000 80b2 	beq.w	801688c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8016728:	7856      	ldrb	r6, [r2, #1]
 801672a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801672e:	4426      	add	r6, r4
 8016730:	2900      	cmp	r1, #0
 8016732:	f000 80b3 	beq.w	801689c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8016736:	1950      	adds	r0, r2, r5
 8016738:	5d52      	ldrb	r2, [r2, r5]
 801673a:	7840      	ldrb	r0, [r0, #1]
 801673c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016740:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016744:	4422      	add	r2, r4
 8016746:	4420      	add	r0, r4
 8016748:	b29b      	uxth	r3, r3
 801674a:	b289      	uxth	r1, r1
 801674c:	fb03 f901 	mul.w	r9, r3, r1
 8016750:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016754:	011b      	lsls	r3, r3, #4
 8016756:	b289      	uxth	r1, r1
 8016758:	78b7      	ldrb	r7, [r6, #2]
 801675a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801675e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016762:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016766:	eba3 0309 	sub.w	r3, r3, r9
 801676a:	b29b      	uxth	r3, r3
 801676c:	ebae 0e01 	sub.w	lr, lr, r1
 8016770:	fa1f fe8e 	uxth.w	lr, lr
 8016774:	435f      	muls	r7, r3
 8016776:	fb0e 770a 	mla	r7, lr, sl, r7
 801677a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801677e:	fb01 770a 	mla	r7, r1, sl, r7
 8016782:	f890 a002 	ldrb.w	sl, [r0, #2]
 8016786:	fb09 7a0a 	mla	sl, r9, sl, r7
 801678a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801678e:	f896 8000 	ldrb.w	r8, [r6]
 8016792:	7876      	ldrb	r6, [r6, #1]
 8016794:	fb03 f808 	mul.w	r8, r3, r8
 8016798:	fb0e 8807 	mla	r8, lr, r7, r8
 801679c:	7817      	ldrb	r7, [r2, #0]
 801679e:	fb01 8807 	mla	r8, r1, r7, r8
 80167a2:	7807      	ldrb	r7, [r0, #0]
 80167a4:	fb09 8707 	mla	r7, r9, r7, r8
 80167a8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80167ac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80167b0:	ea4a 0707 	orr.w	r7, sl, r7
 80167b4:	4373      	muls	r3, r6
 80167b6:	f892 a001 	ldrb.w	sl, [r2, #1]
 80167ba:	fb0e 330c 	mla	r3, lr, ip, r3
 80167be:	fb01 310a 	mla	r1, r1, sl, r3
 80167c2:	f890 a001 	ldrb.w	sl, [r0, #1]
 80167c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80167c8:	fb09 1a0a 	mla	sl, r9, sl, r1
 80167cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80167d0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80167d4:	ea47 070a 	orr.w	r7, r7, sl
 80167d8:	801f      	strh	r7, [r3, #0]
 80167da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80167dc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80167de:	3302      	adds	r3, #2
 80167e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80167e2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80167e4:	4413      	add	r3, r2
 80167e6:	9325      	str	r3, [sp, #148]	; 0x94
 80167e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80167ea:	449b      	add	fp, r3
 80167ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80167ee:	3b01      	subs	r3, #1
 80167f0:	930d      	str	r3, [sp, #52]	; 0x34
 80167f2:	e772      	b.n	80166da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80167f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80167f6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80167f8:	4413      	add	r3, r2
 80167fa:	9325      	str	r3, [sp, #148]	; 0x94
 80167fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80167fe:	449b      	add	fp, r3
 8016800:	9b07      	ldr	r3, [sp, #28]
 8016802:	3b01      	subs	r3, #1
 8016804:	9307      	str	r3, [sp, #28]
 8016806:	9b08      	ldr	r3, [sp, #32]
 8016808:	3302      	adds	r3, #2
 801680a:	9308      	str	r3, [sp, #32]
 801680c:	e71e      	b.n	801664c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801680e:	f47f af2f 	bne.w	8016670 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8016812:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016814:	2b00      	cmp	r3, #0
 8016816:	f340 80e4 	ble.w	80169e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 801681a:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801681e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8016822:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8016826:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016828:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801682c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016830:	eef0 6a48 	vmov.f32	s13, s16
 8016834:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016838:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801683c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016840:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8016844:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016848:	eef0 6a68 	vmov.f32	s13, s17
 801684c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016850:	ee18 2a10 	vmov	r2, s16
 8016854:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016858:	fb92 f3f3 	sdiv	r3, r2, r3
 801685c:	ee18 2a90 	vmov	r2, s17
 8016860:	9327      	str	r3, [sp, #156]	; 0x9c
 8016862:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016864:	fb92 f3f3 	sdiv	r3, r2, r3
 8016868:	9328      	str	r3, [sp, #160]	; 0xa0
 801686a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801686c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801686e:	3b01      	subs	r3, #1
 8016870:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016874:	930c      	str	r3, [sp, #48]	; 0x30
 8016876:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016878:	bf08      	it	eq
 801687a:	4613      	moveq	r3, r2
 801687c:	ee16 ba90 	vmov	fp, s13
 8016880:	9307      	str	r3, [sp, #28]
 8016882:	eef0 8a67 	vmov.f32	s17, s15
 8016886:	eeb0 8a47 	vmov.f32	s16, s14
 801688a:	e6d8      	b.n	801663e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801688c:	b149      	cbz	r1, 80168a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 801688e:	5d52      	ldrb	r2, [r2, r5]
 8016890:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016894:	4422      	add	r2, r4
 8016896:	4660      	mov	r0, ip
 8016898:	4666      	mov	r6, ip
 801689a:	e755      	b.n	8016748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801689c:	4660      	mov	r0, ip
 801689e:	4662      	mov	r2, ip
 80168a0:	e752      	b.n	8016748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80168a2:	4660      	mov	r0, ip
 80168a4:	4662      	mov	r2, ip
 80168a6:	e7f7      	b.n	8016898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80168a8:	1c47      	adds	r7, r0, #1
 80168aa:	d196      	bne.n	80167da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80168ac:	4285      	cmp	r5, r0
 80168ae:	dd94      	ble.n	80167da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80168b0:	1c56      	adds	r6, r2, #1
 80168b2:	db92      	blt.n	80167da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80168b4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80168b6:	4296      	cmp	r6, r2
 80168b8:	dd8f      	ble.n	80167da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80168ba:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80168be:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80168c2:	e9cd 5600 	strd	r5, r6, [sp]
 80168c6:	4623      	mov	r3, r4
 80168c8:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 80168cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80168ce:	f7ff fdcb 	bl	8016468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80168d2:	e782      	b.n	80167da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80168d4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80168d6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80168d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80168da:	1412      	asrs	r2, r2, #16
 80168dc:	ea4f 402b 	mov.w	r0, fp, asr #16
 80168e0:	fb05 2000 	mla	r0, r5, r0, r2
 80168e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80168e6:	f816 8000 	ldrb.w	r8, [r6, r0]
 80168ea:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80168ee:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80168f2:	f3cb 3103 	ubfx	r1, fp, #12, #4
 80168f6:	4402      	add	r2, r0
 80168f8:	eb04 0c08 	add.w	ip, r4, r8
 80168fc:	2b00      	cmp	r3, #0
 80168fe:	d062      	beq.n	80169c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8016900:	7856      	ldrb	r6, [r2, #1]
 8016902:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016906:	4426      	add	r6, r4
 8016908:	2900      	cmp	r1, #0
 801690a:	d064      	beq.n	80169d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 801690c:	1950      	adds	r0, r2, r5
 801690e:	5d52      	ldrb	r2, [r2, r5]
 8016910:	7840      	ldrb	r0, [r0, #1]
 8016912:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016916:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801691a:	4422      	add	r2, r4
 801691c:	4420      	add	r0, r4
 801691e:	b29b      	uxth	r3, r3
 8016920:	b289      	uxth	r1, r1
 8016922:	fb03 f901 	mul.w	r9, r3, r1
 8016926:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801692a:	011b      	lsls	r3, r3, #4
 801692c:	b289      	uxth	r1, r1
 801692e:	78b7      	ldrb	r7, [r6, #2]
 8016930:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016934:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016938:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801693c:	eba3 0309 	sub.w	r3, r3, r9
 8016940:	b29b      	uxth	r3, r3
 8016942:	ebae 0e01 	sub.w	lr, lr, r1
 8016946:	fa1f fe8e 	uxth.w	lr, lr
 801694a:	435f      	muls	r7, r3
 801694c:	fb0e 770a 	mla	r7, lr, sl, r7
 8016950:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016954:	fb01 770a 	mla	r7, r1, sl, r7
 8016958:	f890 a002 	ldrb.w	sl, [r0, #2]
 801695c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016960:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016964:	f896 8000 	ldrb.w	r8, [r6]
 8016968:	7876      	ldrb	r6, [r6, #1]
 801696a:	fb03 f808 	mul.w	r8, r3, r8
 801696e:	fb0e 8807 	mla	r8, lr, r7, r8
 8016972:	7817      	ldrb	r7, [r2, #0]
 8016974:	fb01 8807 	mla	r8, r1, r7, r8
 8016978:	7807      	ldrb	r7, [r0, #0]
 801697a:	fb09 8707 	mla	r7, r9, r7, r8
 801697e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016982:	4373      	muls	r3, r6
 8016984:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016988:	7856      	ldrb	r6, [r2, #1]
 801698a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801698c:	ea4a 0707 	orr.w	r7, sl, r7
 8016990:	fb0e 330c 	mla	r3, lr, ip, r3
 8016994:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016998:	fb01 3306 	mla	r3, r1, r6, r3
 801699c:	fb09 3a0a 	mla	sl, r9, sl, r3
 80169a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80169a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80169a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80169aa:	ea47 070a 	orr.w	r7, r7, sl
 80169ae:	f823 7b02 	strh.w	r7, [r3], #2
 80169b2:	930d      	str	r3, [sp, #52]	; 0x34
 80169b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80169b6:	4413      	add	r3, r2
 80169b8:	9325      	str	r3, [sp, #148]	; 0x94
 80169ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80169bc:	449b      	add	fp, r3
 80169be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80169c0:	3b01      	subs	r3, #1
 80169c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80169c4:	e66c      	b.n	80166a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 80169c6:	b149      	cbz	r1, 80169dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 80169c8:	5d52      	ldrb	r2, [r2, r5]
 80169ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80169ce:	4422      	add	r2, r4
 80169d0:	4660      	mov	r0, ip
 80169d2:	4666      	mov	r6, ip
 80169d4:	e7a3      	b.n	801691e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 80169d6:	4660      	mov	r0, ip
 80169d8:	4662      	mov	r2, ip
 80169da:	e7a0      	b.n	801691e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 80169dc:	4660      	mov	r0, ip
 80169de:	4662      	mov	r2, ip
 80169e0:	e7f7      	b.n	80169d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 80169e2:	b011      	add	sp, #68	; 0x44
 80169e4:	ecbd 8b0a 	vpop	{d8-d12}
 80169e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080169ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80169ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169f0:	8808      	ldrh	r0, [r1, #0]
 80169f2:	b085      	sub	sp, #20
 80169f4:	1206      	asrs	r6, r0, #8
 80169f6:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80169fa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80169fe:	9600      	str	r6, [sp, #0]
 8016a00:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016a04:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8016a08:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016a0c:	10c6      	asrs	r6, r0, #3
 8016a0e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a12:	9601      	str	r6, [sp, #4]
 8016a14:	00c0      	lsls	r0, r0, #3
 8016a16:	fb04 560c 	mla	r6, r4, ip, r5
 8016a1a:	b2c0      	uxtb	r0, r0
 8016a1c:	4692      	mov	sl, r2
 8016a1e:	eb02 0e06 	add.w	lr, r2, r6
 8016a22:	9a00      	ldr	r2, [sp, #0]
 8016a24:	9002      	str	r0, [sp, #8]
 8016a26:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8016a2a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8016a2e:	9a01      	ldr	r2, [sp, #4]
 8016a30:	2c00      	cmp	r4, #0
 8016a32:	4698      	mov	r8, r3
 8016a34:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8016a38:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8016a3c:	db3e      	blt.n	8016abc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8016a3e:	45a1      	cmp	r9, r4
 8016a40:	dd3c      	ble.n	8016abc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8016a42:	2d00      	cmp	r5, #0
 8016a44:	db38      	blt.n	8016ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8016a46:	45ac      	cmp	ip, r5
 8016a48:	dd36      	ble.n	8016ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8016a4a:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8016a4e:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8016a52:	1c6e      	adds	r6, r5, #1
 8016a54:	d435      	bmi.n	8016ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8016a56:	45b4      	cmp	ip, r6
 8016a58:	dd33      	ble.n	8016ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8016a5a:	b393      	cbz	r3, 8016ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8016a5c:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016a60:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8016a64:	3401      	adds	r4, #1
 8016a66:	d430      	bmi.n	8016aca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8016a68:	45a1      	cmp	r9, r4
 8016a6a:	dd2e      	ble.n	8016aca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8016a6c:	b36f      	cbz	r7, 8016aca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8016a6e:	2d00      	cmp	r5, #0
 8016a70:	db29      	blt.n	8016ac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8016a72:	45ac      	cmp	ip, r5
 8016a74:	dd27      	ble.n	8016ac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8016a76:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8016a7a:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8016a7e:	3501      	adds	r5, #1
 8016a80:	d407      	bmi.n	8016a92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016a82:	45ac      	cmp	ip, r5
 8016a84:	dd05      	ble.n	8016a92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016a86:	b123      	cbz	r3, 8016a92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016a88:	44f4      	add	ip, lr
 8016a8a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8016a8e:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8016a92:	2b0f      	cmp	r3, #15
 8016a94:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016a98:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016a9c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016aa0:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8016aa4:	d801      	bhi.n	8016aaa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016aa6:	2f0f      	cmp	r7, #15
 8016aa8:	d911      	bls.n	8016ace <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 8016aaa:	4b7f      	ldr	r3, [pc, #508]	; (8016ca8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8016aac:	4a7f      	ldr	r2, [pc, #508]	; (8016cac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8016aae:	4880      	ldr	r0, [pc, #512]	; (8016cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8016ab0:	f240 210d 	movw	r1, #525	; 0x20d
 8016ab4:	f005 fc62 	bl	801c37c <__assert_func>
 8016ab8:	4602      	mov	r2, r0
 8016aba:	e7ca      	b.n	8016a52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8016abc:	4606      	mov	r6, r0
 8016abe:	4602      	mov	r2, r0
 8016ac0:	e7d0      	b.n	8016a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8016ac2:	4606      	mov	r6, r0
 8016ac4:	e7ce      	b.n	8016a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8016ac6:	4604      	mov	r4, r0
 8016ac8:	e7d9      	b.n	8016a7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 8016aca:	4604      	mov	r4, r0
 8016acc:	e7e1      	b.n	8016a92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016ace:	b29b      	uxth	r3, r3
 8016ad0:	b2bf      	uxth	r7, r7
 8016ad2:	fb03 fe07 	mul.w	lr, r3, r7
 8016ad6:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016ada:	011b      	lsls	r3, r3, #4
 8016adc:	eba3 0c0e 	sub.w	ip, r3, lr
 8016ae0:	b2bf      	uxth	r7, r7
 8016ae2:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8016ae6:	fa1f fc8c 	uxth.w	ip, ip
 8016aea:	1bed      	subs	r5, r5, r7
 8016aec:	b2ad      	uxth	r5, r5
 8016aee:	fb0c f30a 	mul.w	r3, ip, sl
 8016af2:	fb05 330b 	mla	r3, r5, fp, r3
 8016af6:	fb07 3309 	mla	r3, r7, r9, r3
 8016afa:	fb0e 3308 	mla	r3, lr, r8, r3
 8016afe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016b02:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016b06:	9303      	str	r3, [sp, #12]
 8016b08:	d018      	beq.n	8016b3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 8016b0a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016b0e:	fb0b f303 	mul.w	r3, fp, r3
 8016b12:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016b16:	fb0b fb02 	mul.w	fp, fp, r2
 8016b1a:	0a1a      	lsrs	r2, r3, #8
 8016b1c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016b20:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8016b24:	441a      	add	r2, r3
 8016b26:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8016b2a:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8016b2e:	0a12      	lsrs	r2, r2, #8
 8016b30:	0a1b      	lsrs	r3, r3, #8
 8016b32:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016b36:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b3a:	431a      	orrs	r2, r3
 8016b3c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016b40:	d019      	beq.n	8016b76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8016b42:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016b46:	fb0a fb0b 	mul.w	fp, sl, fp
 8016b4a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016b4e:	fb0a fa06 	mul.w	sl, sl, r6
 8016b52:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016b56:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016b5a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016b5e:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8016b62:	445e      	add	r6, fp
 8016b64:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016b68:	0a36      	lsrs	r6, r6, #8
 8016b6a:	0a1b      	lsrs	r3, r3, #8
 8016b6c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016b70:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b74:	431e      	orrs	r6, r3
 8016b76:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016b7a:	d019      	beq.n	8016bb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8016b7c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016b80:	fb09 fa0a 	mul.w	sl, r9, sl
 8016b84:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016b88:	fb09 f904 	mul.w	r9, r9, r4
 8016b8c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016b90:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016b94:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016b98:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8016b9c:	4454      	add	r4, sl
 8016b9e:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8016ba2:	0a24      	lsrs	r4, r4, #8
 8016ba4:	0a1b      	lsrs	r3, r3, #8
 8016ba6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016baa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bae:	431c      	orrs	r4, r3
 8016bb0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016bb4:	d019      	beq.n	8016bea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8016bb6:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8016bba:	fb08 f909 	mul.w	r9, r8, r9
 8016bbe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016bc2:	fb08 f800 	mul.w	r8, r8, r0
 8016bc6:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8016bca:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016bce:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016bd2:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8016bd6:	4448      	add	r0, r9
 8016bd8:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016bdc:	0a00      	lsrs	r0, r0, #8
 8016bde:	0a1b      	lsrs	r3, r3, #8
 8016be0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016be4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016be8:	4318      	orrs	r0, r3
 8016bea:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016bee:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016bf2:	fb0c f808 	mul.w	r8, ip, r8
 8016bf6:	fb05 8803 	mla	r8, r5, r3, r8
 8016bfa:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8016bfe:	fb07 8803 	mla	r8, r7, r3, r8
 8016c02:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8016c06:	fb0e 8303 	mla	r3, lr, r3, r8
 8016c0a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016c0e:	fb0c f606 	mul.w	r6, ip, r6
 8016c12:	0a1b      	lsrs	r3, r3, #8
 8016c14:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016c18:	fb05 6202 	mla	r2, r5, r2, r6
 8016c1c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8016c20:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8016c24:	fb07 2703 	mla	r7, r7, r3, r2
 8016c28:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8016c2c:	b295      	uxth	r5, r2
 8016c2e:	9a03      	ldr	r2, [sp, #12]
 8016c30:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8016c34:	436a      	muls	r2, r5
 8016c36:	fb0e 7303 	mla	r3, lr, r3, r7
 8016c3a:	1c50      	adds	r0, r2, #1
 8016c3c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016c40:	0a1b      	lsrs	r3, r3, #8
 8016c42:	9a00      	ldr	r2, [sp, #0]
 8016c44:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c48:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016c4c:	ea48 0303 	orr.w	r3, r8, r3
 8016c50:	b2c0      	uxtb	r0, r0
 8016c52:	fb12 f200 	smulbb	r2, r2, r0
 8016c56:	0c1e      	lsrs	r6, r3, #16
 8016c58:	fb06 2605 	mla	r6, r6, r5, r2
 8016c5c:	9a01      	ldr	r2, [sp, #4]
 8016c5e:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8016c62:	fb12 f200 	smulbb	r2, r2, r0
 8016c66:	fb04 2205 	mla	r2, r4, r5, r2
 8016c6a:	b294      	uxth	r4, r2
 8016c6c:	9a02      	ldr	r2, [sp, #8]
 8016c6e:	b2db      	uxtb	r3, r3
 8016c70:	fb12 f200 	smulbb	r2, r2, r0
 8016c74:	fb03 2205 	mla	r2, r3, r5, r2
 8016c78:	b2b6      	uxth	r6, r6
 8016c7a:	b292      	uxth	r2, r2
 8016c7c:	1c73      	adds	r3, r6, #1
 8016c7e:	1c50      	adds	r0, r2, #1
 8016c80:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8016c84:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8016c88:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016c8c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016c90:	4313      	orrs	r3, r2
 8016c92:	1c62      	adds	r2, r4, #1
 8016c94:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016c98:	0952      	lsrs	r2, r2, #5
 8016c9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016c9e:	4313      	orrs	r3, r2
 8016ca0:	800b      	strh	r3, [r1, #0]
 8016ca2:	b005      	add	sp, #20
 8016ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ca8:	08020dcd 	.word	0x08020dcd
 8016cac:	08021325 	.word	0x08021325
 8016cb0:	08020e55 	.word	0x08020e55

08016cb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cb8:	ed2d 8b08 	vpush	{d8-d11}
 8016cbc:	b09b      	sub	sp, #108	; 0x6c
 8016cbe:	eeb0 aa40 	vmov.f32	s20, s0
 8016cc2:	9309      	str	r3, [sp, #36]	; 0x24
 8016cc4:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8016cc8:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8016cca:	9311      	str	r3, [sp, #68]	; 0x44
 8016ccc:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8016cd0:	9114      	str	r1, [sp, #80]	; 0x50
 8016cd2:	9317      	str	r3, [sp, #92]	; 0x5c
 8016cd4:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8016cd8:	9019      	str	r0, [sp, #100]	; 0x64
 8016cda:	6868      	ldr	r0, [r5, #4]
 8016cdc:	9218      	str	r2, [sp, #96]	; 0x60
 8016cde:	fb00 1303 	mla	r3, r0, r3, r1
 8016ce2:	6829      	ldr	r1, [r5, #0]
 8016ce4:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8016ce6:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8016cea:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016cee:	930c      	str	r3, [sp, #48]	; 0x30
 8016cf0:	6813      	ldr	r3, [r2, #0]
 8016cf2:	9313      	str	r3, [sp, #76]	; 0x4c
 8016cf4:	6853      	ldr	r3, [r2, #4]
 8016cf6:	3304      	adds	r3, #4
 8016cf8:	eef0 9a60 	vmov.f32	s19, s1
 8016cfc:	eeb0 9a41 	vmov.f32	s18, s2
 8016d00:	eeb0 8a62 	vmov.f32	s16, s5
 8016d04:	eef0 8a43 	vmov.f32	s17, s6
 8016d08:	eef0 ba44 	vmov.f32	s23, s8
 8016d0c:	eeb0 ba64 	vmov.f32	s22, s9
 8016d10:	eef0 aa45 	vmov.f32	s21, s10
 8016d14:	9308      	str	r3, [sp, #32]
 8016d16:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016d18:	2b00      	cmp	r3, #0
 8016d1a:	dc03      	bgt.n	8016d24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8016d1c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016d1e:	2b00      	cmp	r3, #0
 8016d20:	f340 8363 	ble.w	80173ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8016d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d26:	2b00      	cmp	r3, #0
 8016d28:	f340 81ad 	ble.w	8017086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8016d2c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016d2e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016d30:	1412      	asrs	r2, r2, #16
 8016d32:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016d36:	d42f      	bmi.n	8016d98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016d38:	1c51      	adds	r1, r2, #1
 8016d3a:	428c      	cmp	r4, r1
 8016d3c:	dd2f      	ble.n	8016d9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8016d3e:	2b00      	cmp	r3, #0
 8016d40:	db2d      	blt.n	8016d9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8016d42:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016d44:	1c59      	adds	r1, r3, #1
 8016d46:	4288      	cmp	r0, r1
 8016d48:	dd29      	ble.n	8016d9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8016d4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d4c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016d4e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8016d50:	3b01      	subs	r3, #1
 8016d52:	fb02 1203 	mla	r2, r2, r3, r1
 8016d56:	1412      	asrs	r2, r2, #16
 8016d58:	d42b      	bmi.n	8016db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8016d5a:	3201      	adds	r2, #1
 8016d5c:	4294      	cmp	r4, r2
 8016d5e:	dd28      	ble.n	8016db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8016d60:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8016d62:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8016d64:	fb02 1303 	mla	r3, r2, r3, r1
 8016d68:	141b      	asrs	r3, r3, #16
 8016d6a:	d422      	bmi.n	8016db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8016d6c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016d6e:	3301      	adds	r3, #1
 8016d70:	429a      	cmp	r2, r3
 8016d72:	dd1e      	ble.n	8016db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8016d74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d76:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8016d7a:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 8016d7e:	9312      	str	r3, [sp, #72]	; 0x48
 8016d80:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016d82:	2b00      	cmp	r3, #0
 8016d84:	f300 81ea 	bgt.w	801715c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8016d88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d8a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016d8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016d90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016d94:	930c      	str	r3, [sp, #48]	; 0x30
 8016d96:	e178      	b.n	801708a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8016d98:	1c51      	adds	r1, r2, #1
 8016d9a:	f040 8165 	bne.w	8017068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016d9e:	42a2      	cmp	r2, r4
 8016da0:	f280 8162 	bge.w	8017068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016da4:	1c5f      	adds	r7, r3, #1
 8016da6:	f2c0 815f 	blt.w	8017068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016daa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016dac:	4293      	cmp	r3, r2
 8016dae:	f280 815b 	bge.w	8017068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016db2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016db4:	9316      	str	r3, [sp, #88]	; 0x58
 8016db6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016db8:	9312      	str	r3, [sp, #72]	; 0x48
 8016dba:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8016dbe:	9315      	str	r3, [sp, #84]	; 0x54
 8016dc0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016dc2:	2b00      	cmp	r3, #0
 8016dc4:	dde0      	ble.n	8016d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8016dc6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016dc8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016dca:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8016dce:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016dd0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016dd4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016dd6:	1412      	asrs	r2, r2, #16
 8016dd8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016ddc:	f100 81a5 	bmi.w	801712a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8016de0:	1c55      	adds	r5, r2, #1
 8016de2:	42ac      	cmp	r4, r5
 8016de4:	f340 81a3 	ble.w	801712e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8016de8:	2b00      	cmp	r3, #0
 8016dea:	f2c0 81a0 	blt.w	801712e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8016dee:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8016df0:	1c5d      	adds	r5, r3, #1
 8016df2:	42af      	cmp	r7, r5
 8016df4:	f340 819b 	ble.w	801712e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8016df8:	fb03 2304 	mla	r3, r3, r4, r2
 8016dfc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016dfe:	18d5      	adds	r5, r2, r3
 8016e00:	5cd3      	ldrb	r3, [r2, r3]
 8016e02:	9a08      	ldr	r2, [sp, #32]
 8016e04:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8016e08:	0e1f      	lsrs	r7, r3, #24
 8016e0a:	2800      	cmp	r0, #0
 8016e0c:	f000 817c 	beq.w	8017108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8016e10:	786a      	ldrb	r2, [r5, #1]
 8016e12:	9e08      	ldr	r6, [sp, #32]
 8016e14:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8016e18:	920d      	str	r2, [sp, #52]	; 0x34
 8016e1a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8016e1e:	2900      	cmp	r1, #0
 8016e20:	f000 817d 	beq.w	801711e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8016e24:	192a      	adds	r2, r5, r4
 8016e26:	5d2d      	ldrb	r5, [r5, r4]
 8016e28:	7852      	ldrb	r2, [r2, #1]
 8016e2a:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8016e2e:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8016e32:	950a      	str	r5, [sp, #40]	; 0x28
 8016e34:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8016e38:	920e      	str	r2, [sp, #56]	; 0x38
 8016e3a:	0e15      	lsrs	r5, r2, #24
 8016e3c:	b280      	uxth	r0, r0
 8016e3e:	b289      	uxth	r1, r1
 8016e40:	fb00 fa01 	mul.w	sl, r0, r1
 8016e44:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8016e48:	0100      	lsls	r0, r0, #4
 8016e4a:	eba0 080a 	sub.w	r8, r0, sl
 8016e4e:	b289      	uxth	r1, r1
 8016e50:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8016e54:	fa1f f888 	uxth.w	r8, r8
 8016e58:	1a52      	subs	r2, r2, r1
 8016e5a:	b292      	uxth	r2, r2
 8016e5c:	fb08 f00e 	mul.w	r0, r8, lr
 8016e60:	fb02 0007 	mla	r0, r2, r7, r0
 8016e64:	fb01 0009 	mla	r0, r1, r9, r0
 8016e68:	fb0a 0005 	mla	r0, sl, r5, r0
 8016e6c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016e70:	2800      	cmp	r0, #0
 8016e72:	f000 80ea 	beq.w	801704a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8016e76:	2fff      	cmp	r7, #255	; 0xff
 8016e78:	d01a      	beq.n	8016eb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 8016e7a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016e7e:	fb07 fc0c 	mul.w	ip, r7, ip
 8016e82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016e86:	435f      	muls	r7, r3
 8016e88:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016e8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016e90:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016e94:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8016e98:	4463      	add	r3, ip
 8016e9a:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8016e9e:	0a1b      	lsrs	r3, r3, #8
 8016ea0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016ea4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016ea8:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8016eac:	ea43 030b 	orr.w	r3, r3, fp
 8016eb0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016eb4:	d01e      	beq.n	8016ef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8016eb6:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8016eb8:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016ebc:	fb0e fb0b 	mul.w	fp, lr, fp
 8016ec0:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8016ec4:	fb0e fe07 	mul.w	lr, lr, r7
 8016ec8:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8016ecc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ed0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016ed4:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8016ed8:	44dc      	add	ip, fp
 8016eda:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8016ede:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016ee2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016ee6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016eea:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016eee:	ea4c 060e 	orr.w	r6, ip, lr
 8016ef2:	960d      	str	r6, [sp, #52]	; 0x34
 8016ef4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016ef8:	d01e      	beq.n	8016f38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8016efa:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8016efc:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8016f00:	fb09 fe0e 	mul.w	lr, r9, lr
 8016f04:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8016f08:	fb09 f907 	mul.w	r9, r9, r7
 8016f0c:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016f10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016f14:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016f18:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8016f1c:	44f4      	add	ip, lr
 8016f1e:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8016f22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016f26:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016f2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016f2e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016f32:	ea4c 0609 	orr.w	r6, ip, r9
 8016f36:	960a      	str	r6, [sp, #40]	; 0x28
 8016f38:	2dff      	cmp	r5, #255	; 0xff
 8016f3a:	d01c      	beq.n	8016f76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8016f3c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016f3e:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8016f42:	fb05 fe0e 	mul.w	lr, r5, lr
 8016f46:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8016f4a:	437d      	muls	r5, r7
 8016f4c:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016f50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016f54:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016f58:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8016f5c:	44f4      	add	ip, lr
 8016f5e:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8016f62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016f66:	0a2d      	lsrs	r5, r5, #8
 8016f68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016f6c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8016f70:	ea4c 0505 	orr.w	r5, ip, r5
 8016f74:	950e      	str	r5, [sp, #56]	; 0x38
 8016f76:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016f78:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8016f7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016f7e:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016f82:	fb08 f505 	mul.w	r5, r8, r5
 8016f86:	fb02 5507 	mla	r5, r2, r7, r5
 8016f8a:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8016f8e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016f90:	fb01 5507 	mla	r5, r1, r7, r5
 8016f94:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8016f98:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8016f9a:	fb0a 5507 	mla	r5, sl, r7, r5
 8016f9e:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8016fa2:	fb08 f807 	mul.w	r8, r8, r7
 8016fa6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016faa:	fb02 8303 	mla	r3, r2, r3, r8
 8016fae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016fb0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8016fb2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016fb6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016fb8:	fb01 330c 	mla	r3, r1, ip, r3
 8016fbc:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8016fc0:	fb0a 3a01 	mla	sl, sl, r1, r3
 8016fc4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016fc6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8016fc8:	881f      	ldrh	r7, [r3, #0]
 8016fca:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016fcc:	0a2d      	lsrs	r5, r5, #8
 8016fce:	4343      	muls	r3, r0
 8016fd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016fd4:	1c58      	adds	r0, r3, #1
 8016fd6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016fda:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016fde:	ea45 050a 	orr.w	r5, r5, sl
 8016fe2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016fe6:	0c29      	lsrs	r1, r5, #16
 8016fe8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016fec:	123b      	asrs	r3, r7, #8
 8016fee:	b2c0      	uxtb	r0, r0
 8016ff0:	fb11 f102 	smulbb	r1, r1, r2
 8016ff4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016ff8:	fb03 1300 	mla	r3, r3, r0, r1
 8016ffc:	b299      	uxth	r1, r3
 8016ffe:	10fa      	asrs	r2, r7, #3
 8017000:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8017004:	fb13 f306 	smulbb	r3, r3, r6
 8017008:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801700c:	fb02 3200 	mla	r2, r2, r0, r3
 8017010:	b2ed      	uxtb	r5, r5
 8017012:	00fb      	lsls	r3, r7, #3
 8017014:	b2db      	uxtb	r3, r3
 8017016:	fb15 f506 	smulbb	r5, r5, r6
 801701a:	fb03 5500 	mla	r5, r3, r0, r5
 801701e:	b292      	uxth	r2, r2
 8017020:	b2ad      	uxth	r5, r5
 8017022:	1c4b      	adds	r3, r1, #1
 8017024:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017028:	1c68      	adds	r0, r5, #1
 801702a:	1c51      	adds	r1, r2, #1
 801702c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8017030:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017034:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017038:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801703c:	0952      	lsrs	r2, r2, #5
 801703e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017042:	432b      	orrs	r3, r5
 8017044:	4313      	orrs	r3, r2
 8017046:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017048:	8013      	strh	r3, [r2, #0]
 801704a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801704c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801704e:	3302      	adds	r3, #2
 8017050:	9312      	str	r3, [sp, #72]	; 0x48
 8017052:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017054:	4413      	add	r3, r2
 8017056:	932d      	str	r3, [sp, #180]	; 0xb4
 8017058:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801705a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801705c:	4413      	add	r3, r2
 801705e:	932e      	str	r3, [sp, #184]	; 0xb8
 8017060:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017062:	3b01      	subs	r3, #1
 8017064:	9316      	str	r3, [sp, #88]	; 0x58
 8017066:	e6ab      	b.n	8016dc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8017068:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801706a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801706c:	4413      	add	r3, r2
 801706e:	932d      	str	r3, [sp, #180]	; 0xb4
 8017070:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8017072:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017074:	4413      	add	r3, r2
 8017076:	932e      	str	r3, [sp, #184]	; 0xb8
 8017078:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801707a:	3b01      	subs	r3, #1
 801707c:	9309      	str	r3, [sp, #36]	; 0x24
 801707e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017080:	3302      	adds	r3, #2
 8017082:	930c      	str	r3, [sp, #48]	; 0x30
 8017084:	e64e      	b.n	8016d24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8017086:	f47f ae60 	bne.w	8016d4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801708a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801708c:	2b00      	cmp	r3, #0
 801708e:	f340 81ac 	ble.w	80173ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8017092:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017096:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801709a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801709e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170a0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80170a4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80170a8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80170ac:	eef0 6a48 	vmov.f32	s13, s16
 80170b0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80170b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170b8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80170bc:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80170c0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80170c4:	eef0 6a68 	vmov.f32	s13, s17
 80170c8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80170cc:	ee18 2a10 	vmov	r2, s16
 80170d0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80170d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80170d8:	ee18 2a90 	vmov	r2, s17
 80170dc:	932f      	str	r3, [sp, #188]	; 0xbc
 80170de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80170e4:	9330      	str	r3, [sp, #192]	; 0xc0
 80170e6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80170e8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80170ea:	3b01      	subs	r3, #1
 80170ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170f0:	9314      	str	r3, [sp, #80]	; 0x50
 80170f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170f4:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 80170f8:	bf08      	it	eq
 80170fa:	4613      	moveq	r3, r2
 80170fc:	9309      	str	r3, [sp, #36]	; 0x24
 80170fe:	eef0 8a67 	vmov.f32	s17, s15
 8017102:	eeb0 8a47 	vmov.f32	s16, s14
 8017106:	e606      	b.n	8016d16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8017108:	b161      	cbz	r1, 8017124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801710a:	5d2a      	ldrb	r2, [r5, r4]
 801710c:	9d08      	ldr	r5, [sp, #32]
 801710e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8017112:	920a      	str	r2, [sp, #40]	; 0x28
 8017114:	ea4f 6912 	mov.w	r9, r2, lsr #24
 8017118:	25ff      	movs	r5, #255	; 0xff
 801711a:	46ae      	mov	lr, r5
 801711c:	e68e      	b.n	8016e3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 801711e:	25ff      	movs	r5, #255	; 0xff
 8017120:	46a9      	mov	r9, r5
 8017122:	e68b      	b.n	8016e3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8017124:	25ff      	movs	r5, #255	; 0xff
 8017126:	46a9      	mov	r9, r5
 8017128:	e7f7      	b.n	801711a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801712a:	1c56      	adds	r6, r2, #1
 801712c:	d18d      	bne.n	801704a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801712e:	4294      	cmp	r4, r2
 8017130:	dd8b      	ble.n	801704a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8017132:	1c5d      	adds	r5, r3, #1
 8017134:	db89      	blt.n	801704a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8017136:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017138:	429d      	cmp	r5, r3
 801713a:	dd86      	ble.n	801704a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801713c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8017140:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017142:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017144:	9202      	str	r2, [sp, #8]
 8017146:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801714a:	e9cd 4300 	strd	r4, r3, [sp]
 801714e:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 8017152:	9b08      	ldr	r3, [sp, #32]
 8017154:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017156:	f7ff fc49 	bl	80169ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801715a:	e776      	b.n	801704a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801715c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801715e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017160:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017164:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017166:	1412      	asrs	r2, r2, #16
 8017168:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801716c:	141b      	asrs	r3, r3, #16
 801716e:	fb04 2303 	mla	r3, r4, r3, r2
 8017172:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017174:	18d5      	adds	r5, r2, r3
 8017176:	5cd3      	ldrb	r3, [r2, r3]
 8017178:	9a08      	ldr	r2, [sp, #32]
 801717a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801717e:	0e1e      	lsrs	r6, r3, #24
 8017180:	2900      	cmp	r1, #0
 8017182:	f000 8121 	beq.w	80173c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8017186:	786a      	ldrb	r2, [r5, #1]
 8017188:	9f08      	ldr	r7, [sp, #32]
 801718a:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801718e:	920f      	str	r2, [sp, #60]	; 0x3c
 8017190:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8017194:	2800      	cmp	r0, #0
 8017196:	f000 8122 	beq.w	80173de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 801719a:	192a      	adds	r2, r5, r4
 801719c:	5d2d      	ldrb	r5, [r5, r4]
 801719e:	7852      	ldrb	r2, [r2, #1]
 80171a0:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 80171a4:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80171a8:	950b      	str	r5, [sp, #44]	; 0x2c
 80171aa:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80171ae:	9210      	str	r2, [sp, #64]	; 0x40
 80171b0:	0e15      	lsrs	r5, r2, #24
 80171b2:	b289      	uxth	r1, r1
 80171b4:	b280      	uxth	r0, r0
 80171b6:	fb01 f900 	mul.w	r9, r1, r0
 80171ba:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80171be:	0109      	lsls	r1, r1, #4
 80171c0:	eba1 0e09 	sub.w	lr, r1, r9
 80171c4:	b280      	uxth	r0, r0
 80171c6:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80171ca:	fa1f fe8e 	uxth.w	lr, lr
 80171ce:	1a12      	subs	r2, r2, r0
 80171d0:	b292      	uxth	r2, r2
 80171d2:	fb0e f10c 	mul.w	r1, lr, ip
 80171d6:	fb02 1106 	mla	r1, r2, r6, r1
 80171da:	fb00 1108 	mla	r1, r0, r8, r1
 80171de:	fb09 1105 	mla	r1, r9, r5, r1
 80171e2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80171e6:	2900      	cmp	r1, #0
 80171e8:	f000 80e0 	beq.w	80173ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 80171ec:	2eff      	cmp	r6, #255	; 0xff
 80171ee:	d016      	beq.n	801721e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 80171f0:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80171f4:	4377      	muls	r7, r6
 80171f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80171fa:	435e      	muls	r6, r3
 80171fc:	0a3b      	lsrs	r3, r7, #8
 80171fe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017202:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017206:	443b      	add	r3, r7
 8017208:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801720c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8017210:	0a1b      	lsrs	r3, r3, #8
 8017212:	0a3f      	lsrs	r7, r7, #8
 8017214:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017218:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801721c:	433b      	orrs	r3, r7
 801721e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017222:	d01d      	beq.n	8017260 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8017224:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017226:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017228:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801722c:	fb0c f606 	mul.w	r6, ip, r6
 8017230:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017234:	fb0c fc07 	mul.w	ip, ip, r7
 8017238:	0a37      	lsrs	r7, r6, #8
 801723a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801723e:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8017242:	4437      	add	r7, r6
 8017244:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8017248:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801724c:	0a3f      	lsrs	r7, r7, #8
 801724e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017252:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017256:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801725a:	ea47 060c 	orr.w	r6, r7, ip
 801725e:	960f      	str	r6, [sp, #60]	; 0x3c
 8017260:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017264:	d01d      	beq.n	80172a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 8017266:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8017268:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801726c:	fb08 fc0c 	mul.w	ip, r8, ip
 8017270:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017274:	fb08 f806 	mul.w	r8, r8, r6
 8017278:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801727c:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8017280:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017284:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017288:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 801728c:	4467      	add	r7, ip
 801728e:	0a3f      	lsrs	r7, r7, #8
 8017290:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017294:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017298:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801729c:	ea47 0608 	orr.w	r6, r7, r8
 80172a0:	960b      	str	r6, [sp, #44]	; 0x2c
 80172a2:	2dff      	cmp	r5, #255	; 0xff
 80172a4:	d01a      	beq.n	80172dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 80172a6:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80172a8:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80172ac:	fb05 fc0c 	mul.w	ip, r5, ip
 80172b0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80172b4:	4375      	muls	r5, r6
 80172b6:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80172ba:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80172be:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80172c2:	f505 7680 	add.w	r6, r5, #256	; 0x100
 80172c6:	4467      	add	r7, ip
 80172c8:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80172cc:	0a3f      	lsrs	r7, r7, #8
 80172ce:	0a2d      	lsrs	r5, r5, #8
 80172d0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80172d4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80172d8:	433d      	orrs	r5, r7
 80172da:	9510      	str	r5, [sp, #64]	; 0x40
 80172dc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80172de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80172e2:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 80172e6:	fb0e f505 	mul.w	r5, lr, r5
 80172ea:	fb02 5506 	mla	r5, r2, r6, r5
 80172ee:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80172f0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80172f4:	fb00 5506 	mla	r5, r0, r6, r5
 80172f8:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80172fa:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80172fe:	fb09 5506 	mla	r5, r9, r6, r5
 8017302:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017304:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017308:	fb0e fe06 	mul.w	lr, lr, r6
 801730c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017310:	fb02 e303 	mla	r3, r2, r3, lr
 8017314:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017316:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801731a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801731c:	fb00 3307 	mla	r3, r0, r7, r3
 8017320:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017324:	fb09 3c0c 	mla	ip, r9, ip, r3
 8017328:	fb01 f10b 	mul.w	r1, r1, fp
 801732c:	0a2d      	lsrs	r5, r5, #8
 801732e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017332:	f8ba 0000 	ldrh.w	r0, [sl]
 8017336:	1c4b      	adds	r3, r1, #1
 8017338:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801733c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017340:	ea45 050c 	orr.w	r5, r5, ip
 8017344:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017348:	1202      	asrs	r2, r0, #8
 801734a:	0c2b      	lsrs	r3, r5, #16
 801734c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017350:	b2c9      	uxtb	r1, r1
 8017352:	fb13 f30b 	smulbb	r3, r3, fp
 8017356:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801735a:	fb02 3201 	mla	r2, r2, r1, r3
 801735e:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8017362:	10c3      	asrs	r3, r0, #3
 8017364:	b2ed      	uxtb	r5, r5
 8017366:	00c0      	lsls	r0, r0, #3
 8017368:	b2c0      	uxtb	r0, r0
 801736a:	fb15 f50b 	smulbb	r5, r5, fp
 801736e:	fb00 5001 	mla	r0, r0, r1, r5
 8017372:	b292      	uxth	r2, r2
 8017374:	fb16 f60b 	smulbb	r6, r6, fp
 8017378:	b280      	uxth	r0, r0
 801737a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801737e:	fb03 6301 	mla	r3, r3, r1, r6
 8017382:	1c51      	adds	r1, r2, #1
 8017384:	1c46      	adds	r6, r0, #1
 8017386:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801738a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801738e:	b29b      	uxth	r3, r3
 8017390:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017394:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8017398:	4332      	orrs	r2, r6
 801739a:	1c5e      	adds	r6, r3, #1
 801739c:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80173a0:	095b      	lsrs	r3, r3, #5
 80173a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80173a6:	431a      	orrs	r2, r3
 80173a8:	f8aa 2000 	strh.w	r2, [sl]
 80173ac:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80173ae:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80173b0:	4413      	add	r3, r2
 80173b2:	932d      	str	r3, [sp, #180]	; 0xb4
 80173b4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80173b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80173b8:	4413      	add	r3, r2
 80173ba:	932e      	str	r3, [sp, #184]	; 0xb8
 80173bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80173be:	3b01      	subs	r3, #1
 80173c0:	f10a 0a02 	add.w	sl, sl, #2
 80173c4:	9312      	str	r3, [sp, #72]	; 0x48
 80173c6:	e4db      	b.n	8016d80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80173c8:	b160      	cbz	r0, 80173e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80173ca:	5d2a      	ldrb	r2, [r5, r4]
 80173cc:	9d08      	ldr	r5, [sp, #32]
 80173ce:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80173d2:	920b      	str	r2, [sp, #44]	; 0x2c
 80173d4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80173d8:	25ff      	movs	r5, #255	; 0xff
 80173da:	46ac      	mov	ip, r5
 80173dc:	e6e9      	b.n	80171b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 80173de:	25ff      	movs	r5, #255	; 0xff
 80173e0:	46a8      	mov	r8, r5
 80173e2:	e6e6      	b.n	80171b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 80173e4:	25ff      	movs	r5, #255	; 0xff
 80173e6:	46a8      	mov	r8, r5
 80173e8:	e7f7      	b.n	80173da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 80173ea:	b01b      	add	sp, #108	; 0x6c
 80173ec:	ecbd 8b08 	vpop	{d8-d11}
 80173f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080173f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80173f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173f8:	8808      	ldrh	r0, [r1, #0]
 80173fa:	b085      	sub	sp, #20
 80173fc:	1206      	asrs	r6, r0, #8
 80173fe:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8017402:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017406:	9600      	str	r6, [sp, #0]
 8017408:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801740c:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8017410:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8017414:	10c6      	asrs	r6, r0, #3
 8017416:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801741a:	9601      	str	r6, [sp, #4]
 801741c:	00c0      	lsls	r0, r0, #3
 801741e:	fb04 560c 	mla	r6, r4, ip, r5
 8017422:	b2c0      	uxtb	r0, r0
 8017424:	4692      	mov	sl, r2
 8017426:	eb02 0e06 	add.w	lr, r2, r6
 801742a:	9a00      	ldr	r2, [sp, #0]
 801742c:	9002      	str	r0, [sp, #8]
 801742e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8017432:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8017436:	9a01      	ldr	r2, [sp, #4]
 8017438:	2c00      	cmp	r4, #0
 801743a:	4698      	mov	r8, r3
 801743c:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8017440:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017444:	db3e      	blt.n	80174c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8017446:	45a1      	cmp	r9, r4
 8017448:	dd3c      	ble.n	80174c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 801744a:	2d00      	cmp	r5, #0
 801744c:	db38      	blt.n	80174c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 801744e:	45ac      	cmp	ip, r5
 8017450:	dd36      	ble.n	80174c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8017452:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8017456:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 801745a:	1c6e      	adds	r6, r5, #1
 801745c:	d435      	bmi.n	80174ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801745e:	45b4      	cmp	ip, r6
 8017460:	dd33      	ble.n	80174ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8017462:	b393      	cbz	r3, 80174ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8017464:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8017468:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 801746c:	3401      	adds	r4, #1
 801746e:	d430      	bmi.n	80174d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8017470:	45a1      	cmp	r9, r4
 8017472:	dd2e      	ble.n	80174d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8017474:	b36f      	cbz	r7, 80174d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8017476:	2d00      	cmp	r5, #0
 8017478:	db29      	blt.n	80174ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801747a:	45ac      	cmp	ip, r5
 801747c:	dd27      	ble.n	80174ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801747e:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8017482:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8017486:	3501      	adds	r5, #1
 8017488:	d407      	bmi.n	801749a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801748a:	45ac      	cmp	ip, r5
 801748c:	dd05      	ble.n	801749a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801748e:	b123      	cbz	r3, 801749a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8017490:	44f4      	add	ip, lr
 8017492:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8017496:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 801749a:	2b0f      	cmp	r3, #15
 801749c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80174a0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80174a4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80174a8:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80174ac:	d801      	bhi.n	80174b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 80174ae:	2f0f      	cmp	r7, #15
 80174b0:	d911      	bls.n	80174d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80174b2:	4b79      	ldr	r3, [pc, #484]	; (8017698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 80174b4:	4a79      	ldr	r2, [pc, #484]	; (801769c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80174b6:	487a      	ldr	r0, [pc, #488]	; (80176a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80174b8:	f240 210d 	movw	r1, #525	; 0x20d
 80174bc:	f004 ff5e 	bl	801c37c <__assert_func>
 80174c0:	4602      	mov	r2, r0
 80174c2:	e7ca      	b.n	801745a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 80174c4:	4606      	mov	r6, r0
 80174c6:	4602      	mov	r2, r0
 80174c8:	e7d0      	b.n	801746c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 80174ca:	4606      	mov	r6, r0
 80174cc:	e7ce      	b.n	801746c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 80174ce:	4604      	mov	r4, r0
 80174d0:	e7d9      	b.n	8017486 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 80174d2:	4604      	mov	r4, r0
 80174d4:	e7e1      	b.n	801749a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80174d6:	b29b      	uxth	r3, r3
 80174d8:	b2bf      	uxth	r7, r7
 80174da:	fb03 fe07 	mul.w	lr, r3, r7
 80174de:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80174e2:	011b      	lsls	r3, r3, #4
 80174e4:	eba3 0c0e 	sub.w	ip, r3, lr
 80174e8:	b2bf      	uxth	r7, r7
 80174ea:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80174ee:	fa1f fc8c 	uxth.w	ip, ip
 80174f2:	1bed      	subs	r5, r5, r7
 80174f4:	b2ad      	uxth	r5, r5
 80174f6:	fb0c f30a 	mul.w	r3, ip, sl
 80174fa:	fb05 330b 	mla	r3, r5, fp, r3
 80174fe:	fb07 3309 	mla	r3, r7, r9, r3
 8017502:	fb0e 3308 	mla	r3, lr, r8, r3
 8017506:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801750a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801750e:	9303      	str	r3, [sp, #12]
 8017510:	d018      	beq.n	8017544 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8017512:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017516:	fb0b f303 	mul.w	r3, fp, r3
 801751a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801751e:	fb0b fb02 	mul.w	fp, fp, r2
 8017522:	0a1a      	lsrs	r2, r3, #8
 8017524:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017528:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801752c:	441a      	add	r2, r3
 801752e:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8017532:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8017536:	0a12      	lsrs	r2, r2, #8
 8017538:	0a1b      	lsrs	r3, r3, #8
 801753a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801753e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017542:	431a      	orrs	r2, r3
 8017544:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017548:	d019      	beq.n	801757e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 801754a:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801754e:	fb0a fb0b 	mul.w	fp, sl, fp
 8017552:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017556:	fb0a fa06 	mul.w	sl, sl, r6
 801755a:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801755e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017562:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017566:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801756a:	445e      	add	r6, fp
 801756c:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017570:	0a36      	lsrs	r6, r6, #8
 8017572:	0a1b      	lsrs	r3, r3, #8
 8017574:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017578:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801757c:	431e      	orrs	r6, r3
 801757e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017582:	d019      	beq.n	80175b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8017584:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017588:	fb09 fa0a 	mul.w	sl, r9, sl
 801758c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017590:	fb09 f904 	mul.w	r9, r9, r4
 8017594:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017598:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801759c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80175a0:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80175a4:	4454      	add	r4, sl
 80175a6:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80175aa:	0a24      	lsrs	r4, r4, #8
 80175ac:	0a1b      	lsrs	r3, r3, #8
 80175ae:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80175b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80175b6:	431c      	orrs	r4, r3
 80175b8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80175bc:	d019      	beq.n	80175f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 80175be:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80175c2:	fb08 f909 	mul.w	r9, r8, r9
 80175c6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80175ca:	fb08 f800 	mul.w	r8, r8, r0
 80175ce:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80175d2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80175d6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80175da:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80175de:	4448      	add	r0, r9
 80175e0:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80175e4:	0a00      	lsrs	r0, r0, #8
 80175e6:	0a1b      	lsrs	r3, r3, #8
 80175e8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80175ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80175f0:	4318      	orrs	r0, r3
 80175f2:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80175f6:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80175fa:	fb0c f808 	mul.w	r8, ip, r8
 80175fe:	fb05 8803 	mla	r8, r5, r3, r8
 8017602:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8017606:	fb07 8803 	mla	r8, r7, r3, r8
 801760a:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801760e:	fb0e 8303 	mla	r3, lr, r3, r8
 8017612:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017616:	0a1b      	lsrs	r3, r3, #8
 8017618:	fb0c f606 	mul.w	r6, ip, r6
 801761c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017620:	fb05 6202 	mla	r2, r5, r2, r6
 8017624:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8017628:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 801762c:	fb07 2703 	mla	r7, r7, r3, r2
 8017630:	9a03      	ldr	r2, [sp, #12]
 8017632:	9c02      	ldr	r4, [sp, #8]
 8017634:	9d01      	ldr	r5, [sp, #4]
 8017636:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801763a:	fb0e 7303 	mla	r3, lr, r3, r7
 801763e:	43d0      	mvns	r0, r2
 8017640:	9a00      	ldr	r2, [sp, #0]
 8017642:	b2c0      	uxtb	r0, r0
 8017644:	0a1b      	lsrs	r3, r3, #8
 8017646:	4342      	muls	r2, r0
 8017648:	4344      	muls	r4, r0
 801764a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801764e:	ea48 0303 	orr.w	r3, r8, r3
 8017652:	4345      	muls	r5, r0
 8017654:	4620      	mov	r0, r4
 8017656:	1c54      	adds	r4, r2, #1
 8017658:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801765c:	0c1a      	lsrs	r2, r3, #16
 801765e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8017662:	4a10      	ldr	r2, [pc, #64]	; (80176a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8017664:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8017668:	1c44      	adds	r4, r0, #1
 801766a:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 801766e:	b2d8      	uxtb	r0, r3
 8017670:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8017674:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8017678:	1c68      	adds	r0, r5, #1
 801767a:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 801767e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017682:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017686:	00db      	lsls	r3, r3, #3
 8017688:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801768c:	4313      	orrs	r3, r2
 801768e:	800b      	strh	r3, [r1, #0]
 8017690:	b005      	add	sp, #20
 8017692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017696:	bf00      	nop
 8017698:	08020dcd 	.word	0x08020dcd
 801769c:	08021325 	.word	0x08021325
 80176a0:	08020e55 	.word	0x08020e55
 80176a4:	fffff800 	.word	0xfffff800

080176a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80176a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176ac:	ed2d 8b08 	vpush	{d8-d11}
 80176b0:	b097      	sub	sp, #92	; 0x5c
 80176b2:	eeb0 aa40 	vmov.f32	s20, s0
 80176b6:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 80176b8:	9307      	str	r3, [sp, #28]
 80176ba:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80176be:	9112      	str	r1, [sp, #72]	; 0x48
 80176c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80176c2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80176c6:	9015      	str	r0, [sp, #84]	; 0x54
 80176c8:	6868      	ldr	r0, [r5, #4]
 80176ca:	9214      	str	r2, [sp, #80]	; 0x50
 80176cc:	fb00 1303 	mla	r3, r0, r3, r1
 80176d0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80176d2:	6829      	ldr	r1, [r5, #0]
 80176d4:	6855      	ldr	r5, [r2, #4]
 80176d6:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 80176da:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80176de:	930a      	str	r3, [sp, #40]	; 0x28
 80176e0:	6813      	ldr	r3, [r2, #0]
 80176e2:	9311      	str	r3, [sp, #68]	; 0x44
 80176e4:	eef0 9a60 	vmov.f32	s19, s1
 80176e8:	eeb0 9a41 	vmov.f32	s18, s2
 80176ec:	eeb0 8a62 	vmov.f32	s16, s5
 80176f0:	eef0 8a43 	vmov.f32	s17, s6
 80176f4:	eef0 ba44 	vmov.f32	s23, s8
 80176f8:	eeb0 ba64 	vmov.f32	s22, s9
 80176fc:	eef0 aa45 	vmov.f32	s21, s10
 8017700:	3504      	adds	r5, #4
 8017702:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017704:	2b00      	cmp	r3, #0
 8017706:	dc03      	bgt.n	8017710 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8017708:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801770a:	2b00      	cmp	r3, #0
 801770c:	f340 834d 	ble.w	8017daa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8017710:	9b07      	ldr	r3, [sp, #28]
 8017712:	2b00      	cmp	r3, #0
 8017714:	f340 819c 	ble.w	8017a50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8017718:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801771a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801771c:	1412      	asrs	r2, r2, #16
 801771e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017722:	d42d      	bmi.n	8017780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8017724:	1c51      	adds	r1, r2, #1
 8017726:	428c      	cmp	r4, r1
 8017728:	dd2d      	ble.n	8017786 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801772a:	2b00      	cmp	r3, #0
 801772c:	db2b      	blt.n	8017786 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801772e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017730:	1c59      	adds	r1, r3, #1
 8017732:	4288      	cmp	r0, r1
 8017734:	dd27      	ble.n	8017786 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8017736:	9b07      	ldr	r3, [sp, #28]
 8017738:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801773a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801773c:	3b01      	subs	r3, #1
 801773e:	fb02 1203 	mla	r2, r2, r3, r1
 8017742:	1412      	asrs	r2, r2, #16
 8017744:	d429      	bmi.n	801779a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8017746:	3201      	adds	r2, #1
 8017748:	4294      	cmp	r4, r2
 801774a:	dd26      	ble.n	801779a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801774c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801774e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8017750:	fb02 1303 	mla	r3, r2, r3, r1
 8017754:	141b      	asrs	r3, r3, #16
 8017756:	d420      	bmi.n	801779a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8017758:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801775a:	3301      	adds	r3, #1
 801775c:	429a      	cmp	r2, r3
 801775e:	dd1c      	ble.n	801779a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8017760:	9b07      	ldr	r3, [sp, #28]
 8017762:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8017766:	9310      	str	r3, [sp, #64]	; 0x40
 8017768:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801776a:	2b00      	cmp	r3, #0
 801776c:	f300 81da 	bgt.w	8017b24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8017770:	9b07      	ldr	r3, [sp, #28]
 8017772:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017778:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801777c:	930a      	str	r3, [sp, #40]	; 0x28
 801777e:	e169      	b.n	8017a54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8017780:	1c51      	adds	r1, r2, #1
 8017782:	f040 8156 	bne.w	8017a32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8017786:	42a2      	cmp	r2, r4
 8017788:	f280 8153 	bge.w	8017a32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801778c:	1c5a      	adds	r2, r3, #1
 801778e:	f2c0 8150 	blt.w	8017a32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8017792:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017794:	4293      	cmp	r3, r2
 8017796:	f280 814c 	bge.w	8017a32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801779a:	9b07      	ldr	r3, [sp, #28]
 801779c:	9313      	str	r3, [sp, #76]	; 0x4c
 801779e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80177a0:	9310      	str	r3, [sp, #64]	; 0x40
 80177a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80177a4:	2b00      	cmp	r3, #0
 80177a6:	dde3      	ble.n	8017770 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80177a8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80177aa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80177ac:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80177b0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80177b2:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80177b6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80177b8:	1412      	asrs	r2, r2, #16
 80177ba:	ea4f 4323 	mov.w	r3, r3, asr #16
 80177be:	f100 8198 	bmi.w	8017af2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 80177c2:	1c56      	adds	r6, r2, #1
 80177c4:	42b4      	cmp	r4, r6
 80177c6:	f340 8196 	ble.w	8017af6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80177ca:	2b00      	cmp	r3, #0
 80177cc:	f2c0 8193 	blt.w	8017af6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80177d0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80177d2:	1c5e      	adds	r6, r3, #1
 80177d4:	42b7      	cmp	r7, r6
 80177d6:	f340 818e 	ble.w	8017af6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80177da:	fb03 2304 	mla	r3, r3, r4, r2
 80177de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80177e0:	18d6      	adds	r6, r2, r3
 80177e2:	5cd3      	ldrb	r3, [r2, r3]
 80177e4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80177e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80177ec:	2900      	cmp	r1, #0
 80177ee:	f000 8170 	beq.w	8017ad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 80177f2:	7872      	ldrb	r2, [r6, #1]
 80177f4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80177f8:	920b      	str	r2, [sp, #44]	; 0x2c
 80177fa:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80177fe:	2800      	cmp	r0, #0
 8017800:	f000 8171 	beq.w	8017ae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8017804:	1932      	adds	r2, r6, r4
 8017806:	5d36      	ldrb	r6, [r6, r4]
 8017808:	7852      	ldrb	r2, [r2, #1]
 801780a:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 801780e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8017812:	9608      	str	r6, [sp, #32]
 8017814:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017818:	920c      	str	r2, [sp, #48]	; 0x30
 801781a:	0e16      	lsrs	r6, r2, #24
 801781c:	b289      	uxth	r1, r1
 801781e:	b280      	uxth	r0, r0
 8017820:	fb01 fb00 	mul.w	fp, r1, r0
 8017824:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8017828:	0109      	lsls	r1, r1, #4
 801782a:	eba1 090b 	sub.w	r9, r1, fp
 801782e:	b280      	uxth	r0, r0
 8017830:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8017834:	fa1f f989 	uxth.w	r9, r9
 8017838:	1a12      	subs	r2, r2, r0
 801783a:	b292      	uxth	r2, r2
 801783c:	fb09 f108 	mul.w	r1, r9, r8
 8017840:	fb02 110c 	mla	r1, r2, ip, r1
 8017844:	fb00 110a 	mla	r1, r0, sl, r1
 8017848:	fb0b 1106 	mla	r1, fp, r6, r1
 801784c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017850:	2900      	cmp	r1, #0
 8017852:	f000 80df 	beq.w	8017a14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017856:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801785a:	d01b      	beq.n	8017894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 801785c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017860:	fb0c fe0e 	mul.w	lr, ip, lr
 8017864:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017868:	fb0c fc03 	mul.w	ip, ip, r3
 801786c:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8017870:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017874:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8017878:	4473      	add	r3, lr
 801787a:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801787e:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8017882:	0a1b      	lsrs	r3, r3, #8
 8017884:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017888:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801788c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017890:	ea43 030e 	orr.w	r3, r3, lr
 8017894:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017898:	d01e      	beq.n	80178d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 801789a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801789c:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80178a0:	fb08 fc0c 	mul.w	ip, r8, ip
 80178a4:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 80178a8:	fb08 f80e 	mul.w	r8, r8, lr
 80178ac:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80178b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80178b4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80178b8:	44e6      	add	lr, ip
 80178ba:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80178be:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80178c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80178c6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80178ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80178ce:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80178d2:	ea4e 0708 	orr.w	r7, lr, r8
 80178d6:	970b      	str	r7, [sp, #44]	; 0x2c
 80178d8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80178dc:	d01e      	beq.n	801791c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80178de:	9f08      	ldr	r7, [sp, #32]
 80178e0:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 80178e4:	fb0a f808 	mul.w	r8, sl, r8
 80178e8:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80178ec:	fb0a fa0c 	mul.w	sl, sl, ip
 80178f0:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80178f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80178f8:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80178fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017900:	44c6      	add	lr, r8
 8017902:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017906:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801790a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801790e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017912:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017916:	ea4e 070a 	orr.w	r7, lr, sl
 801791a:	9708      	str	r7, [sp, #32]
 801791c:	2eff      	cmp	r6, #255	; 0xff
 801791e:	d01d      	beq.n	801795c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8017920:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017922:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8017926:	fb06 f808 	mul.w	r8, r6, r8
 801792a:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 801792e:	fb06 f60c 	mul.w	r6, r6, ip
 8017932:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017936:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801793a:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801793e:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8017942:	44c6      	add	lr, r8
 8017944:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8017948:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801794c:	0a36      	lsrs	r6, r6, #8
 801794e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017952:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017956:	ea4e 0606 	orr.w	r6, lr, r6
 801795a:	960c      	str	r6, [sp, #48]	; 0x30
 801795c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801795e:	9f08      	ldr	r7, [sp, #32]
 8017960:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017964:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017968:	fb09 f606 	mul.w	r6, r9, r6
 801796c:	fb02 660c 	mla	r6, r2, ip, r6
 8017970:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8017974:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017976:	fb00 660c 	mla	r6, r0, ip, r6
 801797a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801797e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8017980:	fb0b 660c 	mla	r6, fp, ip, r6
 8017984:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8017988:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801798c:	fb09 f90c 	mul.w	r9, r9, ip
 8017990:	fb02 9303 	mla	r3, r2, r3, r9
 8017994:	9a08      	ldr	r2, [sp, #32]
 8017996:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801799a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801799c:	fb00 330e 	mla	r3, r0, lr, r3
 80179a0:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80179a4:	fb0b 3b00 	mla	fp, fp, r0, r3
 80179a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80179aa:	881b      	ldrh	r3, [r3, #0]
 80179ac:	43c9      	mvns	r1, r1
 80179ae:	1218      	asrs	r0, r3, #8
 80179b0:	b2c9      	uxtb	r1, r1
 80179b2:	10da      	asrs	r2, r3, #3
 80179b4:	0a36      	lsrs	r6, r6, #8
 80179b6:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80179ba:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80179be:	00db      	lsls	r3, r3, #3
 80179c0:	4348      	muls	r0, r1
 80179c2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80179c6:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80179ca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80179ce:	b2db      	uxtb	r3, r3
 80179d0:	434b      	muls	r3, r1
 80179d2:	ea46 060b 	orr.w	r6, r6, fp
 80179d6:	434a      	muls	r2, r1
 80179d8:	1c41      	adds	r1, r0, #1
 80179da:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80179de:	0c30      	lsrs	r0, r6, #16
 80179e0:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 80179e4:	494e      	ldr	r1, [pc, #312]	; (8017b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 80179e6:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 80179ea:	1c59      	adds	r1, r3, #1
 80179ec:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80179f0:	b2f3      	uxtb	r3, r6
 80179f2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80179f6:	1c51      	adds	r1, r2, #1
 80179f8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80179fc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017a00:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8017a04:	00f6      	lsls	r6, r6, #3
 8017a06:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8017a0a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017a0e:	431e      	orrs	r6, r3
 8017a10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017a12:	801e      	strh	r6, [r3, #0]
 8017a14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017a16:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017a18:	3302      	adds	r3, #2
 8017a1a:	9310      	str	r3, [sp, #64]	; 0x40
 8017a1c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017a1e:	4413      	add	r3, r2
 8017a20:	9329      	str	r3, [sp, #164]	; 0xa4
 8017a22:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017a24:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a26:	4413      	add	r3, r2
 8017a28:	932a      	str	r3, [sp, #168]	; 0xa8
 8017a2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017a2c:	3b01      	subs	r3, #1
 8017a2e:	9313      	str	r3, [sp, #76]	; 0x4c
 8017a30:	e6b7      	b.n	80177a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017a32:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017a34:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017a36:	4413      	add	r3, r2
 8017a38:	9329      	str	r3, [sp, #164]	; 0xa4
 8017a3a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017a3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a3e:	4413      	add	r3, r2
 8017a40:	932a      	str	r3, [sp, #168]	; 0xa8
 8017a42:	9b07      	ldr	r3, [sp, #28]
 8017a44:	3b01      	subs	r3, #1
 8017a46:	9307      	str	r3, [sp, #28]
 8017a48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017a4a:	3302      	adds	r3, #2
 8017a4c:	930a      	str	r3, [sp, #40]	; 0x28
 8017a4e:	e65f      	b.n	8017710 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8017a50:	f47f ae71 	bne.w	8017736 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8017a54:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017a56:	2b00      	cmp	r3, #0
 8017a58:	f340 81a7 	ble.w	8017daa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8017a5c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017a60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017a64:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017a68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017a6a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017a6e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017a72:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017a76:	eef0 6a48 	vmov.f32	s13, s16
 8017a7a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017a7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017a82:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017a86:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017a8a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017a8e:	eef0 6a68 	vmov.f32	s13, s17
 8017a92:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017a96:	ee18 2a10 	vmov	r2, s16
 8017a9a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017a9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017aa2:	ee18 2a90 	vmov	r2, s17
 8017aa6:	932b      	str	r3, [sp, #172]	; 0xac
 8017aa8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017aaa:	fb92 f3f3 	sdiv	r3, r2, r3
 8017aae:	932c      	str	r3, [sp, #176]	; 0xb0
 8017ab0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017ab2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017ab4:	3b01      	subs	r3, #1
 8017ab6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017aba:	9312      	str	r3, [sp, #72]	; 0x48
 8017abc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017abe:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8017ac2:	bf08      	it	eq
 8017ac4:	4613      	moveq	r3, r2
 8017ac6:	9307      	str	r3, [sp, #28]
 8017ac8:	eef0 8a67 	vmov.f32	s17, s15
 8017acc:	eeb0 8a47 	vmov.f32	s16, s14
 8017ad0:	e617      	b.n	8017702 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8017ad2:	b158      	cbz	r0, 8017aec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8017ad4:	5d32      	ldrb	r2, [r6, r4]
 8017ad6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8017ada:	9208      	str	r2, [sp, #32]
 8017adc:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8017ae0:	26ff      	movs	r6, #255	; 0xff
 8017ae2:	46b0      	mov	r8, r6
 8017ae4:	e69a      	b.n	801781c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8017ae6:	26ff      	movs	r6, #255	; 0xff
 8017ae8:	46b2      	mov	sl, r6
 8017aea:	e697      	b.n	801781c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8017aec:	26ff      	movs	r6, #255	; 0xff
 8017aee:	46b2      	mov	sl, r6
 8017af0:	e7f7      	b.n	8017ae2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8017af2:	1c57      	adds	r7, r2, #1
 8017af4:	d18e      	bne.n	8017a14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017af6:	4294      	cmp	r4, r2
 8017af8:	dd8c      	ble.n	8017a14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017afa:	1c5e      	adds	r6, r3, #1
 8017afc:	db8a      	blt.n	8017a14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017afe:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017b00:	429e      	cmp	r6, r3
 8017b02:	dd87      	ble.n	8017a14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017b04:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8017b08:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8017b0c:	e9cd 4600 	strd	r4, r6, [sp]
 8017b10:	462b      	mov	r3, r5
 8017b12:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8017b16:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017b18:	f7ff fc6c 	bl	80173f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8017b1c:	e77a      	b.n	8017a14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017b1e:	bf00      	nop
 8017b20:	fffff800 	.word	0xfffff800
 8017b24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017b26:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017b28:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017b2c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017b2e:	1409      	asrs	r1, r1, #16
 8017b30:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8017b34:	141b      	asrs	r3, r3, #16
 8017b36:	fb04 1303 	mla	r3, r4, r3, r1
 8017b3a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017b3c:	18ce      	adds	r6, r1, r3
 8017b3e:	5ccb      	ldrb	r3, [r1, r3]
 8017b40:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8017b44:	0e1f      	lsrs	r7, r3, #24
 8017b46:	2a00      	cmp	r2, #0
 8017b48:	f000 811f 	beq.w	8017d8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8017b4c:	7871      	ldrb	r1, [r6, #1]
 8017b4e:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8017b52:	910d      	str	r1, [sp, #52]	; 0x34
 8017b54:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8017b58:	2800      	cmp	r0, #0
 8017b5a:	f000 8120 	beq.w	8017d9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8017b5e:	1931      	adds	r1, r6, r4
 8017b60:	5d36      	ldrb	r6, [r6, r4]
 8017b62:	7849      	ldrb	r1, [r1, #1]
 8017b64:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8017b68:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8017b6c:	9609      	str	r6, [sp, #36]	; 0x24
 8017b6e:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8017b72:	910e      	str	r1, [sp, #56]	; 0x38
 8017b74:	0e0e      	lsrs	r6, r1, #24
 8017b76:	b292      	uxth	r2, r2
 8017b78:	b280      	uxth	r0, r0
 8017b7a:	fb02 fa00 	mul.w	sl, r2, r0
 8017b7e:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8017b82:	0112      	lsls	r2, r2, #4
 8017b84:	eba2 080a 	sub.w	r8, r2, sl
 8017b88:	b280      	uxth	r0, r0
 8017b8a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8017b8e:	fa1f f888 	uxth.w	r8, r8
 8017b92:	1a09      	subs	r1, r1, r0
 8017b94:	b289      	uxth	r1, r1
 8017b96:	fb08 f20e 	mul.w	r2, r8, lr
 8017b9a:	fb01 2207 	mla	r2, r1, r7, r2
 8017b9e:	fb00 2209 	mla	r2, r0, r9, r2
 8017ba2:	fb0a 2206 	mla	r2, sl, r6, r2
 8017ba6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017baa:	9213      	str	r2, [sp, #76]	; 0x4c
 8017bac:	2a00      	cmp	r2, #0
 8017bae:	f000 80de 	beq.w	8017d6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8017bb2:	2fff      	cmp	r7, #255	; 0xff
 8017bb4:	d01a      	beq.n	8017bec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8017bb6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017bba:	fb07 fc0c 	mul.w	ip, r7, ip
 8017bbe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017bc2:	435f      	muls	r7, r3
 8017bc4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8017bc8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017bcc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017bd0:	4463      	add	r3, ip
 8017bd2:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8017bd6:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8017bda:	0a1b      	lsrs	r3, r3, #8
 8017bdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017be0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017be4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017be8:	ea43 030c 	orr.w	r3, r3, ip
 8017bec:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017bf0:	d01f      	beq.n	8017c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8017bf2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8017bf4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017bf6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017bfa:	fb0e f707 	mul.w	r7, lr, r7
 8017bfe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017c02:	fb0e fe0c 	mul.w	lr, lr, ip
 8017c06:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017c0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c0e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017c12:	44bc      	add	ip, r7
 8017c14:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8017c18:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8017c1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017c20:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017c24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c28:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017c2c:	ea4c 020e 	orr.w	r2, ip, lr
 8017c30:	920d      	str	r2, [sp, #52]	; 0x34
 8017c32:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017c36:	d01e      	beq.n	8017c76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 8017c38:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017c3a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8017c3e:	fb09 fe0e 	mul.w	lr, r9, lr
 8017c42:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8017c46:	fb09 f907 	mul.w	r9, r9, r7
 8017c4a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8017c4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c52:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8017c56:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8017c5a:	44f4      	add	ip, lr
 8017c5c:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8017c60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017c64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017c68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c6c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017c70:	ea4c 0209 	orr.w	r2, ip, r9
 8017c74:	9209      	str	r2, [sp, #36]	; 0x24
 8017c76:	2eff      	cmp	r6, #255	; 0xff
 8017c78:	d01c      	beq.n	8017cb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 8017c7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017c7c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8017c80:	fb06 fe0e 	mul.w	lr, r6, lr
 8017c84:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8017c88:	437e      	muls	r6, r7
 8017c8a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8017c8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c92:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8017c96:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8017c9a:	44f4      	add	ip, lr
 8017c9c:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8017ca0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017ca4:	0a36      	lsrs	r6, r6, #8
 8017ca6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017caa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017cae:	ea4c 0206 	orr.w	r2, ip, r6
 8017cb2:	920e      	str	r2, [sp, #56]	; 0x38
 8017cb4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017cb6:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8017cba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017cbc:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8017cc0:	fb08 f606 	mul.w	r6, r8, r6
 8017cc4:	fb01 6607 	mla	r6, r1, r7, r6
 8017cc8:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8017ccc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017cce:	fb00 6607 	mla	r6, r0, r7, r6
 8017cd2:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8017cd6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017cd8:	fb0a 6607 	mla	r6, sl, r7, r6
 8017cdc:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8017ce0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017ce2:	fb08 f807 	mul.w	r8, r8, r7
 8017ce6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017cea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017cee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017cf0:	fb01 8303 	mla	r3, r1, r3, r8
 8017cf4:	fb00 330c 	mla	r3, r0, ip, r3
 8017cf8:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8017cfc:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8017d00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017d02:	f8bb 3000 	ldrh.w	r3, [fp]
 8017d06:	43d2      	mvns	r2, r2
 8017d08:	1218      	asrs	r0, r3, #8
 8017d0a:	b2d2      	uxtb	r2, r2
 8017d0c:	0a36      	lsrs	r6, r6, #8
 8017d0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017d12:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017d16:	4350      	muls	r0, r2
 8017d18:	10d9      	asrs	r1, r3, #3
 8017d1a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017d1e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017d22:	00db      	lsls	r3, r3, #3
 8017d24:	ea46 060e 	orr.w	r6, r6, lr
 8017d28:	1c47      	adds	r7, r0, #1
 8017d2a:	b2db      	uxtb	r3, r3
 8017d2c:	4353      	muls	r3, r2
 8017d2e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017d32:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017d36:	0c37      	lsrs	r7, r6, #16
 8017d38:	4351      	muls	r1, r2
 8017d3a:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017d3e:	4a1d      	ldr	r2, [pc, #116]	; (8017db4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8017d40:	1c5f      	adds	r7, r3, #1
 8017d42:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8017d46:	b2f7      	uxtb	r7, r6
 8017d48:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8017d4c:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8017d50:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8017d54:	1c4b      	adds	r3, r1, #1
 8017d56:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017d5a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017d5e:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8017d62:	00f6      	lsls	r6, r6, #3
 8017d64:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017d68:	4330      	orrs	r0, r6
 8017d6a:	f8ab 0000 	strh.w	r0, [fp]
 8017d6e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d70:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017d72:	4413      	add	r3, r2
 8017d74:	9329      	str	r3, [sp, #164]	; 0xa4
 8017d76:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017d78:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017d7a:	4413      	add	r3, r2
 8017d7c:	932a      	str	r3, [sp, #168]	; 0xa8
 8017d7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017d80:	3b01      	subs	r3, #1
 8017d82:	f10b 0b02 	add.w	fp, fp, #2
 8017d86:	9310      	str	r3, [sp, #64]	; 0x40
 8017d88:	e4ee      	b.n	8017768 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8017d8a:	b158      	cbz	r0, 8017da4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8017d8c:	5d31      	ldrb	r1, [r6, r4]
 8017d8e:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8017d92:	9109      	str	r1, [sp, #36]	; 0x24
 8017d94:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8017d98:	26ff      	movs	r6, #255	; 0xff
 8017d9a:	46b6      	mov	lr, r6
 8017d9c:	e6eb      	b.n	8017b76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8017d9e:	26ff      	movs	r6, #255	; 0xff
 8017da0:	46b1      	mov	r9, r6
 8017da2:	e6e8      	b.n	8017b76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8017da4:	26ff      	movs	r6, #255	; 0xff
 8017da6:	46b1      	mov	r9, r6
 8017da8:	e7f7      	b.n	8017d9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 8017daa:	b017      	add	sp, #92	; 0x5c
 8017dac:	ecbd 8b08 	vpop	{d8-d11}
 8017db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017db4:	fffff800 	.word	0xfffff800

08017db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8017db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dbc:	b087      	sub	sp, #28
 8017dbe:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8017dc2:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8017dc6:	9105      	str	r1, [sp, #20]
 8017dc8:	fb00 e604 	mla	r6, r0, r4, lr
 8017dcc:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8017dd0:	9102      	str	r1, [sp, #8]
 8017dd2:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8017dd6:	9103      	str	r1, [sp, #12]
 8017dd8:	9905      	ldr	r1, [sp, #20]
 8017dda:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8017dde:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8017de2:	8809      	ldrh	r1, [r1, #0]
 8017de4:	2800      	cmp	r0, #0
 8017de6:	eb03 0a06 	add.w	sl, r3, r6
 8017dea:	f2c0 80ca 	blt.w	8017f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8017dee:	4287      	cmp	r7, r0
 8017df0:	f340 80c7 	ble.w	8017f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8017df4:	f1be 0f00 	cmp.w	lr, #0
 8017df8:	f2c0 80bf 	blt.w	8017f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8017dfc:	4574      	cmp	r4, lr
 8017dfe:	f340 80bc 	ble.w	8017f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8017e02:	f813 c006 	ldrb.w	ip, [r3, r6]
 8017e06:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 8017e0a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017e0e:	d01c      	beq.n	8017e4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8017e10:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8017e14:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017e18:	4372      	muls	r2, r6
 8017e1a:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8017e1e:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8017e22:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017e26:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017e2a:	fb0c f609 	mul.w	r6, ip, r9
 8017e2e:	eb03 0902 	add.w	r9, r3, r2
 8017e32:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8017e36:	f106 0820 	add.w	r8, r6, #32
 8017e3a:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8017e3e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017e42:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017e46:	ea49 0908 	orr.w	r9, r9, r8
 8017e4a:	fa1f f989 	uxth.w	r9, r9
 8017e4e:	f11e 0301 	adds.w	r3, lr, #1
 8017e52:	f100 809b 	bmi.w	8017f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8017e56:	429c      	cmp	r4, r3
 8017e58:	f340 8098 	ble.w	8017f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8017e5c:	2d00      	cmp	r5, #0
 8017e5e:	f000 8095 	beq.w	8017f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8017e62:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8017e66:	9b03      	ldr	r3, [sp, #12]
 8017e68:	2eff      	cmp	r6, #255	; 0xff
 8017e6a:	885b      	ldrh	r3, [r3, #2]
 8017e6c:	d01b      	beq.n	8017ea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 8017e6e:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017e72:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8017e76:	fb08 f202 	mul.w	r2, r8, r2
 8017e7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017e7e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017e82:	fb06 f803 	mul.w	r8, r6, r3
 8017e86:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017e8a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017e8e:	441a      	add	r2, r3
 8017e90:	f108 0320 	add.w	r3, r8, #32
 8017e94:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8017e98:	0a1b      	lsrs	r3, r3, #8
 8017e9a:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017e9e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017ea2:	ea4b 0303 	orr.w	r3, fp, r3
 8017ea6:	b29b      	uxth	r3, r3
 8017ea8:	9301      	str	r3, [sp, #4]
 8017eaa:	3001      	adds	r0, #1
 8017eac:	d474      	bmi.n	8017f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8017eae:	4287      	cmp	r7, r0
 8017eb0:	dd72      	ble.n	8017f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8017eb2:	9a02      	ldr	r2, [sp, #8]
 8017eb4:	2a00      	cmp	r2, #0
 8017eb6:	f000 8121 	beq.w	80180fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 8017eba:	f1be 0f00 	cmp.w	lr, #0
 8017ebe:	db68      	blt.n	8017f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8017ec0:	4574      	cmp	r4, lr
 8017ec2:	dd66      	ble.n	8017f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8017ec4:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8017ec8:	9a03      	ldr	r2, [sp, #12]
 8017eca:	2fff      	cmp	r7, #255	; 0xff
 8017ecc:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8017ed0:	d01c      	beq.n	8017f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8017ed2:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8017ed6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017eda:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017ede:	fb07 fb00 	mul.w	fp, r7, r0
 8017ee2:	fb08 f802 	mul.w	r8, r8, r2
 8017ee6:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8017eea:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8017eee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017ef2:	4490      	add	r8, r2
 8017ef4:	f10b 0220 	add.w	r2, fp, #32
 8017ef8:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8017efc:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8017f00:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8017f04:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017f08:	ea40 000b 	orr.w	r0, r0, fp
 8017f0c:	b280      	uxth	r0, r0
 8017f0e:	f11e 0e01 	adds.w	lr, lr, #1
 8017f12:	d446      	bmi.n	8017fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8017f14:	4574      	cmp	r4, lr
 8017f16:	dd44      	ble.n	8017fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8017f18:	2d00      	cmp	r5, #0
 8017f1a:	d045      	beq.n	8017fa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8017f1c:	1c62      	adds	r2, r4, #1
 8017f1e:	9b03      	ldr	r3, [sp, #12]
 8017f20:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017f24:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8017f28:	2cff      	cmp	r4, #255	; 0xff
 8017f2a:	d01c      	beq.n	8017f66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8017f2c:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8017f30:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017f34:	fb08 fe0e 	mul.w	lr, r8, lr
 8017f38:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8017f3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f40:	fb04 f802 	mul.w	r8, r4, r2
 8017f44:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8017f48:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017f4c:	4472      	add	r2, lr
 8017f4e:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8017f52:	f108 0a20 	add.w	sl, r8, #32
 8017f56:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8017f5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017f5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017f62:	ea42 020a 	orr.w	r2, r2, sl
 8017f66:	b292      	uxth	r2, r2
 8017f68:	2d0f      	cmp	r5, #15
 8017f6a:	d91f      	bls.n	8017fac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 8017f6c:	4b67      	ldr	r3, [pc, #412]	; (801810c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 8017f6e:	4a68      	ldr	r2, [pc, #416]	; (8018110 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 8017f70:	4868      	ldr	r0, [pc, #416]	; (8018114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 8017f72:	f240 210d 	movw	r1, #525	; 0x20d
 8017f76:	f004 fa01 	bl	801c37c <__assert_func>
 8017f7a:	4689      	mov	r9, r1
 8017f7c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8017f80:	e765      	b.n	8017e4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 8017f82:	26ff      	movs	r6, #255	; 0xff
 8017f84:	9101      	str	r1, [sp, #4]
 8017f86:	4689      	mov	r9, r1
 8017f88:	46b4      	mov	ip, r6
 8017f8a:	e78e      	b.n	8017eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8017f8c:	9101      	str	r1, [sp, #4]
 8017f8e:	26ff      	movs	r6, #255	; 0xff
 8017f90:	e78b      	b.n	8017eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8017f92:	4608      	mov	r0, r1
 8017f94:	27ff      	movs	r7, #255	; 0xff
 8017f96:	e7ba      	b.n	8017f0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8017f98:	24ff      	movs	r4, #255	; 0xff
 8017f9a:	460a      	mov	r2, r1
 8017f9c:	4608      	mov	r0, r1
 8017f9e:	4627      	mov	r7, r4
 8017fa0:	e7e2      	b.n	8017f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8017fa2:	460a      	mov	r2, r1
 8017fa4:	24ff      	movs	r4, #255	; 0xff
 8017fa6:	e7df      	b.n	8017f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8017fa8:	460a      	mov	r2, r1
 8017faa:	24ff      	movs	r4, #255	; 0xff
 8017fac:	9b02      	ldr	r3, [sp, #8]
 8017fae:	2b0f      	cmp	r3, #15
 8017fb0:	d8dc      	bhi.n	8017f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8017fb2:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8017fb6:	fa1f f885 	uxth.w	r8, r5
 8017fba:	fb08 fa0e 	mul.w	sl, r8, lr
 8017fbe:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8017fc2:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8017fc6:	9303      	str	r3, [sp, #12]
 8017fc8:	fa1f f38e 	uxth.w	r3, lr
 8017fcc:	9304      	str	r3, [sp, #16]
 8017fce:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8017fd2:	9b02      	ldr	r3, [sp, #8]
 8017fd4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017fd8:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8017fdc:	fb15 fe03 	smulbb	lr, r5, r3
 8017fe0:	ea48 0809 	orr.w	r8, r8, r9
 8017fe4:	f1c3 0910 	rsb	r9, r3, #16
 8017fe8:	9b01      	ldr	r3, [sp, #4]
 8017fea:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017fee:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017ff2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017ff6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017ffa:	eba9 0905 	sub.w	r9, r9, r5
 8017ffe:	ea4b 0303 	orr.w	r3, fp, r3
 8018002:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8018006:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801800a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 801800e:	436b      	muls	r3, r5
 8018010:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018014:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018018:	ea4b 0202 	orr.w	r2, fp, r2
 801801c:	fb09 3308 	mla	r3, r9, r8, r3
 8018020:	fb0e 3302 	mla	r3, lr, r2, r3
 8018024:	0402      	lsls	r2, r0, #16
 8018026:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801802a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801802e:	4310      	orrs	r0, r2
 8018030:	9a02      	ldr	r2, [sp, #8]
 8018032:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8018036:	fb0e 3e00 	mla	lr, lr, r0, r3
 801803a:	9803      	ldr	r0, [sp, #12]
 801803c:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8018040:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8018044:	9804      	ldr	r0, [sp, #16]
 8018046:	1a2d      	subs	r5, r5, r0
 8018048:	9803      	ldr	r0, [sp, #12]
 801804a:	eba0 000a 	sub.w	r0, r0, sl
 801804e:	b280      	uxth	r0, r0
 8018050:	b2ad      	uxth	r5, r5
 8018052:	4346      	muls	r6, r0
 8018054:	9804      	ldr	r0, [sp, #16]
 8018056:	fb0c 6605 	mla	r6, ip, r5, r6
 801805a:	fb00 6707 	mla	r7, r0, r7, r6
 801805e:	fb0a 7404 	mla	r4, sl, r4, r7
 8018062:	b292      	uxth	r2, r2
 8018064:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8018068:	4354      	muls	r4, r2
 801806a:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801806e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018072:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018076:	f104 0a01 	add.w	sl, r4, #1
 801807a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801807e:	ea43 0e0e 	orr.w	lr, r3, lr
 8018082:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018086:	fa1f f38e 	uxth.w	r3, lr
 801808a:	1208      	asrs	r0, r1, #8
 801808c:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 8018090:	b2e4      	uxtb	r4, r4
 8018092:	121d      	asrs	r5, r3, #8
 8018094:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018098:	fb10 f004 	smulbb	r0, r0, r4
 801809c:	10ce      	asrs	r6, r1, #3
 801809e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80180a2:	00c9      	lsls	r1, r1, #3
 80180a4:	fb05 0502 	mla	r5, r5, r2, r0
 80180a8:	b2c9      	uxtb	r1, r1
 80180aa:	10d8      	asrs	r0, r3, #3
 80180ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80180b0:	00db      	lsls	r3, r3, #3
 80180b2:	fb16 f604 	smulbb	r6, r6, r4
 80180b6:	b2db      	uxtb	r3, r3
 80180b8:	fb11 f404 	smulbb	r4, r1, r4
 80180bc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80180c0:	fb00 6002 	mla	r0, r0, r2, r6
 80180c4:	fb03 4202 	mla	r2, r3, r2, r4
 80180c8:	b2ad      	uxth	r5, r5
 80180ca:	b292      	uxth	r2, r2
 80180cc:	1c6b      	adds	r3, r5, #1
 80180ce:	1c51      	adds	r1, r2, #1
 80180d0:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80180d4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80180d8:	b280      	uxth	r0, r0
 80180da:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80180de:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80180e2:	4313      	orrs	r3, r2
 80180e4:	1c42      	adds	r2, r0, #1
 80180e6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80180ea:	0940      	lsrs	r0, r0, #5
 80180ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80180f0:	9a05      	ldr	r2, [sp, #20]
 80180f2:	4303      	orrs	r3, r0
 80180f4:	8013      	strh	r3, [r2, #0]
 80180f6:	b007      	add	sp, #28
 80180f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180fc:	2d0f      	cmp	r5, #15
 80180fe:	f63f af35 	bhi.w	8017f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8018102:	24ff      	movs	r4, #255	; 0xff
 8018104:	460a      	mov	r2, r1
 8018106:	4608      	mov	r0, r1
 8018108:	4627      	mov	r7, r4
 801810a:	e752      	b.n	8017fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 801810c:	08020dcd 	.word	0x08020dcd
 8018110:	08021325 	.word	0x08021325
 8018114:	08020e55 	.word	0x08020e55

08018118 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801811c:	ed2d 8b08 	vpush	{d8-d11}
 8018120:	b099      	sub	sp, #100	; 0x64
 8018122:	eeb0 aa40 	vmov.f32	s20, s0
 8018126:	9308      	str	r3, [sp, #32]
 8018128:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801812c:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 801812e:	930b      	str	r3, [sp, #44]	; 0x2c
 8018130:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8018134:	9314      	str	r3, [sp, #80]	; 0x50
 8018136:	9113      	str	r1, [sp, #76]	; 0x4c
 8018138:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801813c:	9017      	str	r0, [sp, #92]	; 0x5c
 801813e:	6870      	ldr	r0, [r6, #4]
 8018140:	9216      	str	r2, [sp, #88]	; 0x58
 8018142:	fb00 1303 	mla	r3, r0, r3, r1
 8018146:	6831      	ldr	r1, [r6, #0]
 8018148:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801814a:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 801814e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8018152:	9309      	str	r3, [sp, #36]	; 0x24
 8018154:	6813      	ldr	r3, [r2, #0]
 8018156:	930c      	str	r3, [sp, #48]	; 0x30
 8018158:	6853      	ldr	r3, [r2, #4]
 801815a:	930d      	str	r3, [sp, #52]	; 0x34
 801815c:	006b      	lsls	r3, r5, #1
 801815e:	9312      	str	r3, [sp, #72]	; 0x48
 8018160:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8018164:	930a      	str	r3, [sp, #40]	; 0x28
 8018166:	eef0 9a60 	vmov.f32	s19, s1
 801816a:	eeb0 9a41 	vmov.f32	s18, s2
 801816e:	eeb0 8a62 	vmov.f32	s16, s5
 8018172:	eef0 8a43 	vmov.f32	s17, s6
 8018176:	eef0 ba44 	vmov.f32	s23, s8
 801817a:	eeb0 ba64 	vmov.f32	s22, s9
 801817e:	eef0 aa45 	vmov.f32	s21, s10
 8018182:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018184:	2b00      	cmp	r3, #0
 8018186:	dc03      	bgt.n	8018190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8018188:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801818a:	2b00      	cmp	r3, #0
 801818c:	f340 83bf 	ble.w	801890e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8018190:	9b08      	ldr	r3, [sp, #32]
 8018192:	2b00      	cmp	r3, #0
 8018194:	f340 81cb 	ble.w	801852e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 8018198:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801819a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801819c:	1412      	asrs	r2, r2, #16
 801819e:	ea4f 4323 	mov.w	r3, r3, asr #16
 80181a2:	d42f      	bmi.n	8018204 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80181a4:	1c51      	adds	r1, r2, #1
 80181a6:	428d      	cmp	r5, r1
 80181a8:	dd2f      	ble.n	801820a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80181aa:	2b00      	cmp	r3, #0
 80181ac:	db2d      	blt.n	801820a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80181ae:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80181b0:	1c59      	adds	r1, r3, #1
 80181b2:	4288      	cmp	r0, r1
 80181b4:	dd29      	ble.n	801820a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80181b6:	9b08      	ldr	r3, [sp, #32]
 80181b8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80181ba:	992b      	ldr	r1, [sp, #172]	; 0xac
 80181bc:	3b01      	subs	r3, #1
 80181be:	fb02 1203 	mla	r2, r2, r3, r1
 80181c2:	1412      	asrs	r2, r2, #16
 80181c4:	d42b      	bmi.n	801821e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80181c6:	3201      	adds	r2, #1
 80181c8:	4295      	cmp	r5, r2
 80181ca:	dd28      	ble.n	801821e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80181cc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80181ce:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80181d0:	fb02 1303 	mla	r3, r2, r3, r1
 80181d4:	141b      	asrs	r3, r3, #16
 80181d6:	d422      	bmi.n	801821e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80181d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80181da:	3301      	adds	r3, #1
 80181dc:	429a      	cmp	r2, r3
 80181de:	dd1e      	ble.n	801821e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80181e0:	9b08      	ldr	r3, [sp, #32]
 80181e2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80181e6:	9315      	str	r3, [sp, #84]	; 0x54
 80181e8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80181ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80181ee:	2b00      	cmp	r3, #0
 80181f0:	f300 8217 	bgt.w	8018622 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 80181f4:	9b08      	ldr	r3, [sp, #32]
 80181f6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80181fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80181fc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018200:	9309      	str	r3, [sp, #36]	; 0x24
 8018202:	e196      	b.n	8018532 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8018204:	1c57      	adds	r7, r2, #1
 8018206:	f040 8183 	bne.w	8018510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801820a:	42aa      	cmp	r2, r5
 801820c:	f280 8180 	bge.w	8018510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8018210:	1c5e      	adds	r6, r3, #1
 8018212:	f2c0 817d 	blt.w	8018510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8018216:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018218:	4293      	cmp	r3, r2
 801821a:	f280 8179 	bge.w	8018510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801821e:	9b08      	ldr	r3, [sp, #32]
 8018220:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018222:	9315      	str	r3, [sp, #84]	; 0x54
 8018224:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018228:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801822a:	2b00      	cmp	r3, #0
 801822c:	dde2      	ble.n	80181f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801822e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018230:	1419      	asrs	r1, r3, #16
 8018232:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018234:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018238:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801823a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801823e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018240:	141b      	asrs	r3, r3, #16
 8018242:	f100 81d3 	bmi.w	80185ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 8018246:	1c58      	adds	r0, r3, #1
 8018248:	4285      	cmp	r5, r0
 801824a:	f340 81d1 	ble.w	80185f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801824e:	2900      	cmp	r1, #0
 8018250:	f2c0 81ce 	blt.w	80185f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8018254:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018256:	1c48      	adds	r0, r1, #1
 8018258:	4284      	cmp	r4, r0
 801825a:	f340 81c9 	ble.w	80185f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801825e:	fb01 3105 	mla	r1, r1, r5, r3
 8018262:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018264:	fa1f fe82 	uxth.w	lr, r2
 8018268:	eb03 0a01 	add.w	sl, r3, r1
 801826c:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8018270:	f813 9001 	ldrb.w	r9, [r3, r1]
 8018274:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018278:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801827c:	b29b      	uxth	r3, r3
 801827e:	f1bc 0f00 	cmp.w	ip, #0
 8018282:	f000 8195 	beq.w	80185b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 8018286:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801828a:	940e      	str	r4, [sp, #56]	; 0x38
 801828c:	eb0a 0b05 	add.w	fp, sl, r5
 8018290:	fa1f fa8c 	uxth.w	sl, ip
 8018294:	fb0a fe0e 	mul.w	lr, sl, lr
 8018298:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801829c:	fa1f fa8a 	uxth.w	sl, sl
 80182a0:	eba0 000e 	sub.w	r0, r0, lr
 80182a4:	eba3 030a 	sub.w	r3, r3, sl
 80182a8:	b280      	uxth	r0, r0
 80182aa:	fb08 f000 	mul.w	r0, r8, r0
 80182ae:	b29b      	uxth	r3, r3
 80182b0:	fb09 0303 	mla	r3, r9, r3, r0
 80182b4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80182b6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80182ba:	940f      	str	r4, [sp, #60]	; 0x3c
 80182bc:	fb0a 3300 	mla	r3, sl, r0, r3
 80182c0:	fb0e 3304 	mla	r3, lr, r4, r3
 80182c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80182c8:	2b00      	cmp	r3, #0
 80182ca:	f000 8114 	beq.w	80184f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80182ce:	980c      	ldr	r0, [sp, #48]	; 0x30
 80182d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80182d2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80182d6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80182da:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 80182de:	f000 816c 	beq.w	80185ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80182e2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80182e6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80182ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80182ee:	fb09 f101 	mul.w	r1, r9, r1
 80182f2:	fb0a fe0e 	mul.w	lr, sl, lr
 80182f6:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80182fa:	f101 0b20 	add.w	fp, r1, #32
 80182fe:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018302:	44ce      	add	lr, r9
 8018304:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8018308:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801830c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018310:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018314:	ea4e 0909 	orr.w	r9, lr, r9
 8018318:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801831c:	8841      	ldrh	r1, [r0, #2]
 801831e:	d019      	beq.n	8018354 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8018320:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018324:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018328:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801832c:	fb0a fe0e 	mul.w	lr, sl, lr
 8018330:	fb08 f801 	mul.w	r8, r8, r1
 8018334:	f108 0b20 	add.w	fp, r8, #32
 8018338:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 801833c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018340:	448e      	add	lr, r1
 8018342:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8018346:	0a09      	lsrs	r1, r1, #8
 8018348:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 801834c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018350:	ea4a 0101 	orr.w	r1, sl, r1
 8018354:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8018358:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801835c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018360:	ea4e 0909 	orr.w	r9, lr, r9
 8018364:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8018368:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801836c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018370:	ea4e 0e01 	orr.w	lr, lr, r1
 8018374:	f1bc 0f00 	cmp.w	ip, #0
 8018378:	f000 8121 	beq.w	80185be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 801837c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801837e:	eb00 0801 	add.w	r8, r0, r1
 8018382:	5a41      	ldrh	r1, [r0, r1]
 8018384:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018386:	28ff      	cmp	r0, #255	; 0xff
 8018388:	d019      	beq.n	80183be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801838a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801838c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018390:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018394:	fb04 fb01 	mul.w	fp, r4, r1
 8018398:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801839c:	fb0a fa00 	mul.w	sl, sl, r0
 80183a0:	f10b 0020 	add.w	r0, fp, #32
 80183a4:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80183a8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80183ac:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80183b0:	4451      	add	r1, sl
 80183b2:	0a00      	lsrs	r0, r0, #8
 80183b4:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80183b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80183bc:	4301      	orrs	r1, r0
 80183be:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80183c0:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 80183c4:	2cff      	cmp	r4, #255	; 0xff
 80183c6:	d01a      	beq.n	80183fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 80183c8:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 80183cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80183d0:	fb04 fb00 	mul.w	fp, r4, r0
 80183d4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80183d8:	fb0a fa08 	mul.w	sl, sl, r8
 80183dc:	f10b 0820 	add.w	r8, fp, #32
 80183e0:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 80183e4:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 80183e8:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80183ec:	4450      	add	r0, sl
 80183ee:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80183f2:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80183f6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80183fa:	ea40 0008 	orr.w	r0, r0, r8
 80183fe:	fb1c f802 	smulbb	r8, ip, r2
 8018402:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018406:	f1cc 0a10 	rsb	sl, ip, #16
 801840a:	ebaa 0a02 	sub.w	sl, sl, r2
 801840e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018412:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8018416:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 801841a:	fb0e f202 	mul.w	r2, lr, r2
 801841e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018422:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8018426:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801842a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801842e:	fb09 220a 	mla	r2, r9, sl, r2
 8018432:	ea4b 0101 	orr.w	r1, fp, r1
 8018436:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801843a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801843e:	fb0c 2201 	mla	r2, ip, r1, r2
 8018442:	ea4e 0000 	orr.w	r0, lr, r0
 8018446:	fb08 2800 	mla	r8, r8, r0, r2
 801844a:	ea4f 5258 	mov.w	r2, r8, lsr #21
 801844e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018452:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018456:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801845a:	ea42 0808 	orr.w	r8, r2, r8
 801845e:	fa1f f288 	uxth.w	r2, r8
 8018462:	2bff      	cmp	r3, #255	; 0xff
 8018464:	d103      	bne.n	801846e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8018466:	9914      	ldr	r1, [sp, #80]	; 0x50
 8018468:	29ff      	cmp	r1, #255	; 0xff
 801846a:	f000 80bd 	beq.w	80185e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 801846e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018470:	f8b7 c000 	ldrh.w	ip, [r7]
 8018474:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018476:	434b      	muls	r3, r1
 8018478:	f103 0e01 	add.w	lr, r3, #1
 801847c:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8018480:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8018484:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018488:	fa5f fe8e 	uxtb.w	lr, lr
 801848c:	1213      	asrs	r3, r2, #8
 801848e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018492:	fb10 f00e 	smulbb	r0, r0, lr
 8018496:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801849a:	fb03 0301 	mla	r3, r3, r1, r0
 801849e:	b298      	uxth	r0, r3
 80184a0:	ea4f 03ec 	mov.w	r3, ip, asr #3
 80184a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80184a8:	10d1      	asrs	r1, r2, #3
 80184aa:	fa5f fc8c 	uxtb.w	ip, ip
 80184ae:	00d2      	lsls	r2, r2, #3
 80184b0:	fb1c fc0e 	smulbb	ip, ip, lr
 80184b4:	b2d2      	uxtb	r2, r2
 80184b6:	fb02 c204 	mla	r2, r2, r4, ip
 80184ba:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80184be:	fb13 f30e 	smulbb	r3, r3, lr
 80184c2:	b292      	uxth	r2, r2
 80184c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80184c8:	fb01 3104 	mla	r1, r1, r4, r3
 80184cc:	f102 0c01 	add.w	ip, r2, #1
 80184d0:	1c43      	adds	r3, r0, #1
 80184d2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80184d6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80184da:	b289      	uxth	r1, r1
 80184dc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80184e0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80184e4:	4313      	orrs	r3, r2
 80184e6:	1c4a      	adds	r2, r1, #1
 80184e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80184ec:	0949      	lsrs	r1, r1, #5
 80184ee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80184f2:	430b      	orrs	r3, r1
 80184f4:	803b      	strh	r3, [r7, #0]
 80184f6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80184f8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80184fa:	4413      	add	r3, r2
 80184fc:	932b      	str	r3, [sp, #172]	; 0xac
 80184fe:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8018500:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018502:	441a      	add	r2, r3
 8018504:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8018506:	922c      	str	r2, [sp, #176]	; 0xb0
 8018508:	3b01      	subs	r3, #1
 801850a:	3702      	adds	r7, #2
 801850c:	9315      	str	r3, [sp, #84]	; 0x54
 801850e:	e68b      	b.n	8018228 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8018510:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018512:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018514:	4413      	add	r3, r2
 8018516:	932b      	str	r3, [sp, #172]	; 0xac
 8018518:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801851a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801851c:	441a      	add	r2, r3
 801851e:	9b08      	ldr	r3, [sp, #32]
 8018520:	922c      	str	r2, [sp, #176]	; 0xb0
 8018522:	3b01      	subs	r3, #1
 8018524:	9308      	str	r3, [sp, #32]
 8018526:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018528:	3302      	adds	r3, #2
 801852a:	9309      	str	r3, [sp, #36]	; 0x24
 801852c:	e630      	b.n	8018190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801852e:	f47f ae42 	bne.w	80181b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8018532:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018534:	2b00      	cmp	r3, #0
 8018536:	f340 81ea 	ble.w	801890e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 801853a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801853e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018542:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018546:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018548:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801854c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018550:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018554:	eef0 6a48 	vmov.f32	s13, s16
 8018558:	ee69 7a27 	vmul.f32	s15, s18, s15
 801855c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018560:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018564:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8018568:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801856c:	eef0 6a68 	vmov.f32	s13, s17
 8018570:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018574:	ee18 2a10 	vmov	r2, s16
 8018578:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801857c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018580:	ee18 2a90 	vmov	r2, s17
 8018584:	932d      	str	r3, [sp, #180]	; 0xb4
 8018586:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018588:	fb92 f3f3 	sdiv	r3, r2, r3
 801858c:	932e      	str	r3, [sp, #184]	; 0xb8
 801858e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018590:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018592:	3b01      	subs	r3, #1
 8018594:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018598:	9313      	str	r3, [sp, #76]	; 0x4c
 801859a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801859c:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 80185a0:	bf08      	it	eq
 80185a2:	4613      	moveq	r3, r2
 80185a4:	9308      	str	r3, [sp, #32]
 80185a6:	eef0 8a67 	vmov.f32	s17, s15
 80185aa:	eeb0 8a47 	vmov.f32	s16, s14
 80185ae:	e5e8      	b.n	8018182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80185b0:	fb08 f000 	mul.w	r0, r8, r0
 80185b4:	fb09 0303 	mla	r3, r9, r3, r0
 80185b8:	e684      	b.n	80182c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 80185ba:	4689      	mov	r9, r1
 80185bc:	e6ac      	b.n	8018318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 80185be:	f1c2 0010 	rsb	r0, r2, #16
 80185c2:	fb0e f202 	mul.w	r2, lr, r2
 80185c6:	fb09 2900 	mla	r9, r9, r0, r2
 80185ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80185ce:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80185d2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80185d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80185de:	ea42 0909 	orr.w	r9, r2, r9
 80185e2:	fa1f f289 	uxth.w	r2, r9
 80185e6:	e73c      	b.n	8018462 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80185e8:	803a      	strh	r2, [r7, #0]
 80185ea:	e784      	b.n	80184f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80185ec:	1c5c      	adds	r4, r3, #1
 80185ee:	d182      	bne.n	80184f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80185f0:	429d      	cmp	r5, r3
 80185f2:	dd80      	ble.n	80184f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80185f4:	1c48      	adds	r0, r1, #1
 80185f6:	f6ff af7e 	blt.w	80184f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80185fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80185fc:	4288      	cmp	r0, r1
 80185fe:	f77f af7a 	ble.w	80184f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8018602:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018604:	9302      	str	r3, [sp, #8]
 8018606:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018608:	e9cd 1203 	strd	r1, r2, [sp, #12]
 801860c:	e9cd c005 	strd	ip, r0, [sp, #20]
 8018610:	e9cd 5300 	strd	r5, r3, [sp]
 8018614:	4639      	mov	r1, r7
 8018616:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 801861a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801861c:	f7ff fbcc 	bl	8017db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8018620:	e769      	b.n	80184f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8018622:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018624:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018628:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801862a:	141f      	asrs	r7, r3, #16
 801862c:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8018630:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018632:	141b      	asrs	r3, r3, #16
 8018634:	fb05 3707 	mla	r7, r5, r7, r3
 8018638:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801863a:	fa1f fc82 	uxth.w	ip, r2
 801863e:	eb03 0a07 	add.w	sl, r3, r7
 8018642:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8018646:	f813 9007 	ldrb.w	r9, [r3, r7]
 801864a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801864e:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8018652:	b29b      	uxth	r3, r3
 8018654:	2800      	cmp	r0, #0
 8018656:	f000 813f 	beq.w	80188d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 801865a:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801865e:	9410      	str	r4, [sp, #64]	; 0x40
 8018660:	eb0a 0b05 	add.w	fp, sl, r5
 8018664:	fa1f fa80 	uxth.w	sl, r0
 8018668:	fb0a fc0c 	mul.w	ip, sl, ip
 801866c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018670:	fa1f fa8a 	uxth.w	sl, sl
 8018674:	eba1 010c 	sub.w	r1, r1, ip
 8018678:	eba3 030a 	sub.w	r3, r3, sl
 801867c:	b289      	uxth	r1, r1
 801867e:	fb08 f101 	mul.w	r1, r8, r1
 8018682:	b29b      	uxth	r3, r3
 8018684:	fb09 1303 	mla	r3, r9, r3, r1
 8018688:	9910      	ldr	r1, [sp, #64]	; 0x40
 801868a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801868e:	9411      	str	r4, [sp, #68]	; 0x44
 8018690:	fb0a 3301 	mla	r3, sl, r1, r3
 8018694:	fb0c 3304 	mla	r3, ip, r4, r3
 8018698:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801869c:	2b00      	cmp	r3, #0
 801869e:	f000 810d 	beq.w	80188bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 80186a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80186a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80186a6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80186aa:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80186ae:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80186b2:	f000 8116 	beq.w	80188e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 80186b6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80186ba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80186be:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80186c2:	fb09 f707 	mul.w	r7, r9, r7
 80186c6:	fb0a fc0c 	mul.w	ip, sl, ip
 80186ca:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80186ce:	f107 0b20 	add.w	fp, r7, #32
 80186d2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80186d6:	44cc      	add	ip, r9
 80186d8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80186dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80186e0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80186e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80186e8:	ea4c 0909 	orr.w	r9, ip, r9
 80186ec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80186f0:	884f      	ldrh	r7, [r1, #2]
 80186f2:	d019      	beq.n	8018728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 80186f4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80186f8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80186fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018700:	fb08 f807 	mul.w	r8, r8, r7
 8018704:	fb0a fc0c 	mul.w	ip, sl, ip
 8018708:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801870c:	f108 0b20 	add.w	fp, r8, #32
 8018710:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018714:	44bc      	add	ip, r7
 8018716:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801871a:	0a3f      	lsrs	r7, r7, #8
 801871c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018720:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018724:	ea4c 0707 	orr.w	r7, ip, r7
 8018728:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801872c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018730:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018734:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018738:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801873c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018740:	ea4c 0909 	orr.w	r9, ip, r9
 8018744:	ea4a 0707 	orr.w	r7, sl, r7
 8018748:	2800      	cmp	r0, #0
 801874a:	f000 80cc 	beq.w	80188e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 801874e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018750:	eb01 0c04 	add.w	ip, r1, r4
 8018754:	f831 8004 	ldrh.w	r8, [r1, r4]
 8018758:	9910      	ldr	r1, [sp, #64]	; 0x40
 801875a:	29ff      	cmp	r1, #255	; 0xff
 801875c:	d01a      	beq.n	8018794 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 801875e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018760:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8018764:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018768:	fb04 fb08 	mul.w	fp, r4, r8
 801876c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018770:	fb0a fa01 	mul.w	sl, sl, r1
 8018774:	f10b 0120 	add.w	r1, fp, #32
 8018778:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 801877c:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8018780:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018784:	44d0      	add	r8, sl
 8018786:	0a09      	lsrs	r1, r1, #8
 8018788:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 801878c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018790:	ea48 0801 	orr.w	r8, r8, r1
 8018794:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018796:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 801879a:	2cff      	cmp	r4, #255	; 0xff
 801879c:	d01a      	beq.n	80187d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 801879e:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80187a2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80187a6:	fb04 fb01 	mul.w	fp, r4, r1
 80187aa:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80187ae:	fb0a fa0c 	mul.w	sl, sl, ip
 80187b2:	f10b 0c20 	add.w	ip, fp, #32
 80187b6:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80187ba:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 80187be:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80187c2:	4451      	add	r1, sl
 80187c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80187c8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80187cc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80187d0:	ea41 010c 	orr.w	r1, r1, ip
 80187d4:	fb10 fc02 	smulbb	ip, r0, r2
 80187d8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80187dc:	f1c0 0a10 	rsb	sl, r0, #16
 80187e0:	ebaa 0a02 	sub.w	sl, sl, r2
 80187e4:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 80187e8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80187ec:	437a      	muls	r2, r7
 80187ee:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 80187f2:	040f      	lsls	r7, r1, #16
 80187f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80187f8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80187fc:	fb09 220a 	mla	r2, r9, sl, r2
 8018800:	ea4b 0808 	orr.w	r8, fp, r8
 8018804:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8018808:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801880c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018810:	fb00 2208 	mla	r2, r0, r8, r2
 8018814:	4339      	orrs	r1, r7
 8018816:	fb0c 2201 	mla	r2, ip, r1, r2
 801881a:	ea4f 5952 	mov.w	r9, r2, lsr #21
 801881e:	0952      	lsrs	r2, r2, #5
 8018820:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018824:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018828:	ea49 0202 	orr.w	r2, r9, r2
 801882c:	2bff      	cmp	r3, #255	; 0xff
 801882e:	b292      	uxth	r2, r2
 8018830:	d102      	bne.n	8018838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8018832:	9914      	ldr	r1, [sp, #80]	; 0x50
 8018834:	29ff      	cmp	r1, #255	; 0xff
 8018836:	d067      	beq.n	8018908 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8018838:	990a      	ldr	r1, [sp, #40]	; 0x28
 801883a:	f8be 0000 	ldrh.w	r0, [lr]
 801883e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018840:	434b      	muls	r3, r1
 8018842:	1c59      	adds	r1, r3, #1
 8018844:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8018848:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801884c:	1201      	asrs	r1, r0, #8
 801884e:	b2db      	uxtb	r3, r3
 8018850:	1217      	asrs	r7, r2, #8
 8018852:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018856:	fb11 f103 	smulbb	r1, r1, r3
 801885a:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 801885e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018862:	00c0      	lsls	r0, r0, #3
 8018864:	fb07 1704 	mla	r7, r7, r4, r1
 8018868:	b2c0      	uxtb	r0, r0
 801886a:	10d1      	asrs	r1, r2, #3
 801886c:	00d2      	lsls	r2, r2, #3
 801886e:	fb10 f003 	smulbb	r0, r0, r3
 8018872:	b2d2      	uxtb	r2, r2
 8018874:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018878:	fb02 0204 	mla	r2, r2, r4, r0
 801887c:	fb1c fc03 	smulbb	ip, ip, r3
 8018880:	b2bf      	uxth	r7, r7
 8018882:	b292      	uxth	r2, r2
 8018884:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018888:	fb01 c104 	mla	r1, r1, r4, ip
 801888c:	1c7b      	adds	r3, r7, #1
 801888e:	f102 0c01 	add.w	ip, r2, #1
 8018892:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8018896:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801889a:	b289      	uxth	r1, r1
 801889c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80188a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80188a4:	ea47 070c 	orr.w	r7, r7, ip
 80188a8:	f101 0c01 	add.w	ip, r1, #1
 80188ac:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 80188b0:	0949      	lsrs	r1, r1, #5
 80188b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80188b6:	430f      	orrs	r7, r1
 80188b8:	f8ae 7000 	strh.w	r7, [lr]
 80188bc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80188be:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80188c0:	4413      	add	r3, r2
 80188c2:	932b      	str	r3, [sp, #172]	; 0xac
 80188c4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80188c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80188c8:	441a      	add	r2, r3
 80188ca:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80188cc:	922c      	str	r2, [sp, #176]	; 0xb0
 80188ce:	3b01      	subs	r3, #1
 80188d0:	f10e 0e02 	add.w	lr, lr, #2
 80188d4:	9315      	str	r3, [sp, #84]	; 0x54
 80188d6:	e489      	b.n	80181ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80188d8:	fb08 f101 	mul.w	r1, r8, r1
 80188dc:	fb09 1303 	mla	r3, r9, r3, r1
 80188e0:	e6da      	b.n	8018698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 80188e2:	46b9      	mov	r9, r7
 80188e4:	e702      	b.n	80186ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 80188e6:	f1c2 0110 	rsb	r1, r2, #16
 80188ea:	437a      	muls	r2, r7
 80188ec:	fb09 2901 	mla	r9, r9, r1, r2
 80188f0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80188f4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80188f8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80188fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018900:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018904:	4302      	orrs	r2, r0
 8018906:	e791      	b.n	801882c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8018908:	f8ae 2000 	strh.w	r2, [lr]
 801890c:	e7d6      	b.n	80188bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 801890e:	b019      	add	sp, #100	; 0x64
 8018910:	ecbd 8b08 	vpop	{d8-d11}
 8018914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801891c:	b087      	sub	sp, #28
 801891e:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8018922:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8018926:	9105      	str	r1, [sp, #20]
 8018928:	fb00 e604 	mla	r6, r0, r4, lr
 801892c:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8018930:	9102      	str	r1, [sp, #8]
 8018932:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8018936:	9103      	str	r1, [sp, #12]
 8018938:	9905      	ldr	r1, [sp, #20]
 801893a:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 801893e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8018942:	8809      	ldrh	r1, [r1, #0]
 8018944:	2800      	cmp	r0, #0
 8018946:	eb02 0a06 	add.w	sl, r2, r6
 801894a:	f2c0 80ca 	blt.w	8018ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 801894e:	4287      	cmp	r7, r0
 8018950:	f340 80c7 	ble.w	8018ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8018954:	f1be 0f00 	cmp.w	lr, #0
 8018958:	f2c0 80bf 	blt.w	8018ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 801895c:	4574      	cmp	r4, lr
 801895e:	f340 80bc 	ble.w	8018ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8018962:	f812 c006 	ldrb.w	ip, [r2, r6]
 8018966:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 801896a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801896e:	d01c      	beq.n	80189aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8018970:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8018974:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018978:	4372      	muls	r2, r6
 801897a:	f64f 081f 	movw	r8, #63519	; 0xf81f
 801897e:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8018982:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018986:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801898a:	fb0c f609 	mul.w	r6, ip, r9
 801898e:	eb03 0902 	add.w	r9, r3, r2
 8018992:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8018996:	f106 0820 	add.w	r8, r6, #32
 801899a:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 801899e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80189a2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80189a6:	ea49 0908 	orr.w	r9, r9, r8
 80189aa:	fa1f f989 	uxth.w	r9, r9
 80189ae:	f11e 0301 	adds.w	r3, lr, #1
 80189b2:	f100 809b 	bmi.w	8018aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80189b6:	429c      	cmp	r4, r3
 80189b8:	f340 8098 	ble.w	8018aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80189bc:	2d00      	cmp	r5, #0
 80189be:	f000 8095 	beq.w	8018aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80189c2:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80189c6:	9b03      	ldr	r3, [sp, #12]
 80189c8:	2eff      	cmp	r6, #255	; 0xff
 80189ca:	885b      	ldrh	r3, [r3, #2]
 80189cc:	d01b      	beq.n	8018a06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 80189ce:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80189d2:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80189d6:	fb08 f202 	mul.w	r2, r8, r2
 80189da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80189de:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80189e2:	fb06 f803 	mul.w	r8, r6, r3
 80189e6:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80189ea:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80189ee:	441a      	add	r2, r3
 80189f0:	f108 0320 	add.w	r3, r8, #32
 80189f4:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80189f8:	0a1b      	lsrs	r3, r3, #8
 80189fa:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80189fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018a02:	ea4b 0303 	orr.w	r3, fp, r3
 8018a06:	b29b      	uxth	r3, r3
 8018a08:	9301      	str	r3, [sp, #4]
 8018a0a:	3001      	adds	r0, #1
 8018a0c:	d474      	bmi.n	8018af8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8018a0e:	4287      	cmp	r7, r0
 8018a10:	dd72      	ble.n	8018af8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8018a12:	9a02      	ldr	r2, [sp, #8]
 8018a14:	2a00      	cmp	r2, #0
 8018a16:	f000 8111 	beq.w	8018c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 8018a1a:	f1be 0f00 	cmp.w	lr, #0
 8018a1e:	db68      	blt.n	8018af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8018a20:	4574      	cmp	r4, lr
 8018a22:	dd66      	ble.n	8018af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8018a24:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8018a28:	9a03      	ldr	r2, [sp, #12]
 8018a2a:	2fff      	cmp	r7, #255	; 0xff
 8018a2c:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8018a30:	d01c      	beq.n	8018a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8018a32:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8018a36:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8018a3a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018a3e:	fb07 fb00 	mul.w	fp, r7, r0
 8018a42:	fb08 f802 	mul.w	r8, r8, r2
 8018a46:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8018a4a:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8018a4e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018a52:	4490      	add	r8, r2
 8018a54:	f10b 0220 	add.w	r2, fp, #32
 8018a58:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8018a5c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018a60:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8018a64:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018a68:	ea40 000b 	orr.w	r0, r0, fp
 8018a6c:	b280      	uxth	r0, r0
 8018a6e:	f11e 0e01 	adds.w	lr, lr, #1
 8018a72:	d446      	bmi.n	8018b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8018a74:	4574      	cmp	r4, lr
 8018a76:	dd44      	ble.n	8018b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8018a78:	2d00      	cmp	r5, #0
 8018a7a:	d045      	beq.n	8018b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 8018a7c:	1c62      	adds	r2, r4, #1
 8018a7e:	9b03      	ldr	r3, [sp, #12]
 8018a80:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018a84:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8018a88:	2cff      	cmp	r4, #255	; 0xff
 8018a8a:	d01c      	beq.n	8018ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8018a8c:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8018a90:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018a94:	fb08 fe0e 	mul.w	lr, r8, lr
 8018a98:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8018a9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018aa0:	fb04 f802 	mul.w	r8, r4, r2
 8018aa4:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8018aa8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018aac:	4472      	add	r2, lr
 8018aae:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8018ab2:	f108 0a20 	add.w	sl, r8, #32
 8018ab6:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8018aba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018abe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018ac2:	ea42 020a 	orr.w	r2, r2, sl
 8018ac6:	b292      	uxth	r2, r2
 8018ac8:	2d0f      	cmp	r5, #15
 8018aca:	d91f      	bls.n	8018b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8018acc:	4b5f      	ldr	r3, [pc, #380]	; (8018c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8018ace:	4a60      	ldr	r2, [pc, #384]	; (8018c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8018ad0:	4860      	ldr	r0, [pc, #384]	; (8018c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8018ad2:	f240 210d 	movw	r1, #525	; 0x20d
 8018ad6:	f003 fc51 	bl	801c37c <__assert_func>
 8018ada:	4689      	mov	r9, r1
 8018adc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8018ae0:	e765      	b.n	80189ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8018ae2:	26ff      	movs	r6, #255	; 0xff
 8018ae4:	9101      	str	r1, [sp, #4]
 8018ae6:	4689      	mov	r9, r1
 8018ae8:	46b4      	mov	ip, r6
 8018aea:	e78e      	b.n	8018a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8018aec:	9101      	str	r1, [sp, #4]
 8018aee:	26ff      	movs	r6, #255	; 0xff
 8018af0:	e78b      	b.n	8018a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8018af2:	4608      	mov	r0, r1
 8018af4:	27ff      	movs	r7, #255	; 0xff
 8018af6:	e7ba      	b.n	8018a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8018af8:	24ff      	movs	r4, #255	; 0xff
 8018afa:	460a      	mov	r2, r1
 8018afc:	4608      	mov	r0, r1
 8018afe:	4627      	mov	r7, r4
 8018b00:	e7e2      	b.n	8018ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018b02:	460a      	mov	r2, r1
 8018b04:	24ff      	movs	r4, #255	; 0xff
 8018b06:	e7df      	b.n	8018ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018b08:	460a      	mov	r2, r1
 8018b0a:	24ff      	movs	r4, #255	; 0xff
 8018b0c:	9b02      	ldr	r3, [sp, #8]
 8018b0e:	2b0f      	cmp	r3, #15
 8018b10:	d8dc      	bhi.n	8018acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8018b12:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8018b16:	fa1f f885 	uxth.w	r8, r5
 8018b1a:	fb08 fa0e 	mul.w	sl, r8, lr
 8018b1e:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8018b22:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8018b26:	9303      	str	r3, [sp, #12]
 8018b28:	fa1f f38e 	uxth.w	r3, lr
 8018b2c:	9304      	str	r3, [sp, #16]
 8018b2e:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8018b32:	9b02      	ldr	r3, [sp, #8]
 8018b34:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018b38:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8018b3c:	fb15 fe03 	smulbb	lr, r5, r3
 8018b40:	ea48 0809 	orr.w	r8, r8, r9
 8018b44:	f1c3 0910 	rsb	r9, r3, #16
 8018b48:	9b01      	ldr	r3, [sp, #4]
 8018b4a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018b4e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018b52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b5a:	eba9 0905 	sub.w	r9, r9, r5
 8018b5e:	ea4b 0303 	orr.w	r3, fp, r3
 8018b62:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8018b66:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018b6a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8018b6e:	436b      	muls	r3, r5
 8018b70:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b74:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018b78:	ea4b 0202 	orr.w	r2, fp, r2
 8018b7c:	fb09 3308 	mla	r3, r9, r8, r3
 8018b80:	fb0e 3302 	mla	r3, lr, r2, r3
 8018b84:	0402      	lsls	r2, r0, #16
 8018b86:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018b8e:	4310      	orrs	r0, r2
 8018b90:	9a02      	ldr	r2, [sp, #8]
 8018b92:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8018b96:	9a03      	ldr	r2, [sp, #12]
 8018b98:	fb0e 3e00 	mla	lr, lr, r0, r3
 8018b9c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8018ba0:	9a04      	ldr	r2, [sp, #16]
 8018ba2:	1a80      	subs	r0, r0, r2
 8018ba4:	9a03      	ldr	r2, [sp, #12]
 8018ba6:	eba2 020a 	sub.w	r2, r2, sl
 8018baa:	b292      	uxth	r2, r2
 8018bac:	b280      	uxth	r0, r0
 8018bae:	4356      	muls	r6, r2
 8018bb0:	9a04      	ldr	r2, [sp, #16]
 8018bb2:	fb0c 6600 	mla	r6, ip, r0, r6
 8018bb6:	fb02 6707 	mla	r7, r2, r7, r6
 8018bba:	fb0a 7404 	mla	r4, sl, r4, r7
 8018bbe:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8018bc2:	1208      	asrs	r0, r1, #8
 8018bc4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018bc8:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8018bcc:	b2e4      	uxtb	r4, r4
 8018bce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018bd2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018bd6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018bda:	4360      	muls	r0, r4
 8018bdc:	ea43 0e0e 	orr.w	lr, r3, lr
 8018be0:	fa1f f38e 	uxth.w	r3, lr
 8018be4:	1c42      	adds	r2, r0, #1
 8018be6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018bea:	1218      	asrs	r0, r3, #8
 8018bec:	10cd      	asrs	r5, r1, #3
 8018bee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018bf2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018bf6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018bfa:	4a17      	ldr	r2, [pc, #92]	; (8018c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8018bfc:	4365      	muls	r5, r4
 8018bfe:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8018c02:	1c6a      	adds	r2, r5, #1
 8018c04:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018c08:	00c9      	lsls	r1, r1, #3
 8018c0a:	10da      	asrs	r2, r3, #3
 8018c0c:	b2c9      	uxtb	r1, r1
 8018c0e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018c12:	434c      	muls	r4, r1
 8018c14:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8018c18:	1c61      	adds	r1, r4, #1
 8018c1a:	00d2      	lsls	r2, r2, #3
 8018c1c:	00db      	lsls	r3, r3, #3
 8018c1e:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8018c22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018c26:	b2db      	uxtb	r3, r3
 8018c28:	4302      	orrs	r2, r0
 8018c2a:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8018c2e:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8018c32:	9a05      	ldr	r2, [sp, #20]
 8018c34:	8013      	strh	r3, [r2, #0]
 8018c36:	b007      	add	sp, #28
 8018c38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c3c:	2d0f      	cmp	r5, #15
 8018c3e:	f63f af45 	bhi.w	8018acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8018c42:	24ff      	movs	r4, #255	; 0xff
 8018c44:	460a      	mov	r2, r1
 8018c46:	4608      	mov	r0, r1
 8018c48:	4627      	mov	r7, r4
 8018c4a:	e762      	b.n	8018b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8018c4c:	08020dcd 	.word	0x08020dcd
 8018c50:	08021325 	.word	0x08021325
 8018c54:	08020e55 	.word	0x08020e55
 8018c58:	fffff800 	.word	0xfffff800

08018c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c60:	ed2d 8b08 	vpush	{d8-d11}
 8018c64:	b095      	sub	sp, #84	; 0x54
 8018c66:	eeb0 aa40 	vmov.f32	s20, s0
 8018c6a:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8018c6c:	9306      	str	r3, [sp, #24]
 8018c6e:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8018c72:	9110      	str	r1, [sp, #64]	; 0x40
 8018c74:	9308      	str	r3, [sp, #32]
 8018c76:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018c7a:	9013      	str	r0, [sp, #76]	; 0x4c
 8018c7c:	6870      	ldr	r0, [r6, #4]
 8018c7e:	9212      	str	r2, [sp, #72]	; 0x48
 8018c80:	fb00 1303 	mla	r3, r0, r3, r1
 8018c84:	6831      	ldr	r1, [r6, #0]
 8018c86:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8018c88:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8018c8c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8018c90:	9307      	str	r3, [sp, #28]
 8018c92:	6813      	ldr	r3, [r2, #0]
 8018c94:	9309      	str	r3, [sp, #36]	; 0x24
 8018c96:	6853      	ldr	r3, [r2, #4]
 8018c98:	930a      	str	r3, [sp, #40]	; 0x28
 8018c9a:	006b      	lsls	r3, r5, #1
 8018c9c:	eef0 9a60 	vmov.f32	s19, s1
 8018ca0:	eeb0 9a41 	vmov.f32	s18, s2
 8018ca4:	eeb0 8a62 	vmov.f32	s16, s5
 8018ca8:	eef0 8a43 	vmov.f32	s17, s6
 8018cac:	eef0 ba44 	vmov.f32	s23, s8
 8018cb0:	eeb0 ba64 	vmov.f32	s22, s9
 8018cb4:	eef0 aa45 	vmov.f32	s21, s10
 8018cb8:	930f      	str	r3, [sp, #60]	; 0x3c
 8018cba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018cbc:	2b00      	cmp	r3, #0
 8018cbe:	dc03      	bgt.n	8018cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8018cc0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018cc2:	2b00      	cmp	r3, #0
 8018cc4:	f340 83a3 	ble.w	801940e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8018cc8:	9b06      	ldr	r3, [sp, #24]
 8018cca:	2b00      	cmp	r3, #0
 8018ccc:	f340 81bc 	ble.w	8019048 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8018cd0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018cd2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018cd4:	1412      	asrs	r2, r2, #16
 8018cd6:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018cda:	d42f      	bmi.n	8018d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8018cdc:	1c51      	adds	r1, r2, #1
 8018cde:	428d      	cmp	r5, r1
 8018ce0:	dd2f      	ble.n	8018d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018ce2:	2b00      	cmp	r3, #0
 8018ce4:	db2d      	blt.n	8018d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018ce6:	9808      	ldr	r0, [sp, #32]
 8018ce8:	1c59      	adds	r1, r3, #1
 8018cea:	4288      	cmp	r0, r1
 8018cec:	dd29      	ble.n	8018d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018cee:	9b06      	ldr	r3, [sp, #24]
 8018cf0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018cf2:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8018cf4:	3b01      	subs	r3, #1
 8018cf6:	fb02 1203 	mla	r2, r2, r3, r1
 8018cfa:	1412      	asrs	r2, r2, #16
 8018cfc:	d42b      	bmi.n	8018d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018cfe:	3201      	adds	r2, #1
 8018d00:	4295      	cmp	r5, r2
 8018d02:	dd28      	ble.n	8018d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018d04:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018d06:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018d08:	fb02 1303 	mla	r3, r2, r3, r1
 8018d0c:	141b      	asrs	r3, r3, #16
 8018d0e:	d422      	bmi.n	8018d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018d10:	9a08      	ldr	r2, [sp, #32]
 8018d12:	3301      	adds	r3, #1
 8018d14:	429a      	cmp	r2, r3
 8018d16:	dd1e      	ble.n	8018d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018d18:	9b06      	ldr	r3, [sp, #24]
 8018d1a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018d1e:	9311      	str	r3, [sp, #68]	; 0x44
 8018d20:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018d24:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018d26:	2b00      	cmp	r3, #0
 8018d28:	f300 8208 	bgt.w	801913c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8018d2c:	9b06      	ldr	r3, [sp, #24]
 8018d2e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018d32:	9b07      	ldr	r3, [sp, #28]
 8018d34:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018d38:	9307      	str	r3, [sp, #28]
 8018d3a:	e187      	b.n	801904c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8018d3c:	1c57      	adds	r7, r2, #1
 8018d3e:	f040 8174 	bne.w	801902a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8018d42:	42aa      	cmp	r2, r5
 8018d44:	f280 8171 	bge.w	801902a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8018d48:	1c5e      	adds	r6, r3, #1
 8018d4a:	f2c0 816e 	blt.w	801902a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8018d4e:	9a08      	ldr	r2, [sp, #32]
 8018d50:	4293      	cmp	r3, r2
 8018d52:	f280 816a 	bge.w	801902a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8018d56:	9b06      	ldr	r3, [sp, #24]
 8018d58:	9f07      	ldr	r7, [sp, #28]
 8018d5a:	9311      	str	r3, [sp, #68]	; 0x44
 8018d5c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018d60:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018d62:	2b00      	cmp	r3, #0
 8018d64:	dde2      	ble.n	8018d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8018d66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018d68:	1419      	asrs	r1, r3, #16
 8018d6a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018d6c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018d70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018d72:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8018d76:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018d78:	141b      	asrs	r3, r3, #16
 8018d7a:	f100 81c4 	bmi.w	8019106 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 8018d7e:	1c58      	adds	r0, r3, #1
 8018d80:	4285      	cmp	r5, r0
 8018d82:	f340 81c2 	ble.w	801910a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8018d86:	2900      	cmp	r1, #0
 8018d88:	f2c0 81bf 	blt.w	801910a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8018d8c:	9c08      	ldr	r4, [sp, #32]
 8018d8e:	1c48      	adds	r0, r1, #1
 8018d90:	4284      	cmp	r4, r0
 8018d92:	f340 81ba 	ble.w	801910a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8018d96:	fb01 3105 	mla	r1, r1, r5, r3
 8018d9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018d9c:	fa1f fe82 	uxth.w	lr, r2
 8018da0:	eb03 0a01 	add.w	sl, r3, r1
 8018da4:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8018da8:	f813 9001 	ldrb.w	r9, [r3, r1]
 8018dac:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018db0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018db4:	b29b      	uxth	r3, r3
 8018db6:	f1bc 0f00 	cmp.w	ip, #0
 8018dba:	f000 8186 	beq.w	80190ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8018dbe:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8018dc2:	940b      	str	r4, [sp, #44]	; 0x2c
 8018dc4:	eb0a 0b05 	add.w	fp, sl, r5
 8018dc8:	fa1f fa8c 	uxth.w	sl, ip
 8018dcc:	fb0a fe0e 	mul.w	lr, sl, lr
 8018dd0:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018dd4:	fa1f fa8a 	uxth.w	sl, sl
 8018dd8:	eba0 000e 	sub.w	r0, r0, lr
 8018ddc:	eba3 030a 	sub.w	r3, r3, sl
 8018de0:	b280      	uxth	r0, r0
 8018de2:	fb08 f000 	mul.w	r0, r8, r0
 8018de6:	b29b      	uxth	r3, r3
 8018de8:	fb09 0303 	mla	r3, r9, r3, r0
 8018dec:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018dee:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018df2:	940c      	str	r4, [sp, #48]	; 0x30
 8018df4:	fb0a 3300 	mla	r3, sl, r0, r3
 8018df8:	fb0e 3304 	mla	r3, lr, r4, r3
 8018dfc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018e00:	2b00      	cmp	r3, #0
 8018e02:	f000 8105 	beq.w	8019010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018e06:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018e08:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018e0a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018e0e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018e12:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8018e16:	f000 815d 	beq.w	80190d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 8018e1a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018e1e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018e22:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e26:	fb09 f101 	mul.w	r1, r9, r1
 8018e2a:	fb0a fe0e 	mul.w	lr, sl, lr
 8018e2e:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018e32:	f101 0b20 	add.w	fp, r1, #32
 8018e36:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018e3a:	44ce      	add	lr, r9
 8018e3c:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8018e40:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018e44:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018e48:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018e4c:	ea4e 0909 	orr.w	r9, lr, r9
 8018e50:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018e54:	8841      	ldrh	r1, [r0, #2]
 8018e56:	d019      	beq.n	8018e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8018e58:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018e5c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018e60:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e64:	fb0a fe0e 	mul.w	lr, sl, lr
 8018e68:	fb08 f801 	mul.w	r8, r8, r1
 8018e6c:	f108 0b20 	add.w	fp, r8, #32
 8018e70:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8018e74:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018e78:	448e      	add	lr, r1
 8018e7a:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8018e7e:	0a09      	lsrs	r1, r1, #8
 8018e80:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8018e84:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e88:	ea4a 0101 	orr.w	r1, sl, r1
 8018e8c:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8018e90:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018e94:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018e98:	ea4e 0909 	orr.w	r9, lr, r9
 8018e9c:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8018ea0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018ea4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018ea8:	ea4e 0e01 	orr.w	lr, lr, r1
 8018eac:	f1bc 0f00 	cmp.w	ip, #0
 8018eb0:	f000 8112 	beq.w	80190d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8018eb4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8018eb6:	eb00 0801 	add.w	r8, r0, r1
 8018eba:	5a41      	ldrh	r1, [r0, r1]
 8018ebc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018ebe:	28ff      	cmp	r0, #255	; 0xff
 8018ec0:	d019      	beq.n	8018ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8018ec2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018ec4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018ec8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018ecc:	fb04 fb01 	mul.w	fp, r4, r1
 8018ed0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018ed4:	fb0a fa00 	mul.w	sl, sl, r0
 8018ed8:	f10b 0020 	add.w	r0, fp, #32
 8018edc:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8018ee0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8018ee4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018ee8:	4451      	add	r1, sl
 8018eea:	0a00      	lsrs	r0, r0, #8
 8018eec:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018ef0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018ef4:	4301      	orrs	r1, r0
 8018ef6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018ef8:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8018efc:	2cff      	cmp	r4, #255	; 0xff
 8018efe:	d01a      	beq.n	8018f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8018f00:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8018f04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018f08:	fb04 fb00 	mul.w	fp, r4, r0
 8018f0c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018f10:	fb0a fa08 	mul.w	sl, sl, r8
 8018f14:	f10b 0820 	add.w	r8, fp, #32
 8018f18:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8018f1c:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8018f20:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018f24:	4450      	add	r0, sl
 8018f26:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018f2a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018f2e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018f32:	ea40 0008 	orr.w	r0, r0, r8
 8018f36:	fb1c f802 	smulbb	r8, ip, r2
 8018f3a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018f3e:	f1cc 0a10 	rsb	sl, ip, #16
 8018f42:	ebaa 0a02 	sub.w	sl, sl, r2
 8018f46:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018f4a:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8018f4e:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8018f52:	fb0e f202 	mul.w	r2, lr, r2
 8018f56:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018f5a:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8018f5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018f62:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8018f66:	fb09 220a 	mla	r2, r9, sl, r2
 8018f6a:	ea4b 0101 	orr.w	r1, fp, r1
 8018f6e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018f72:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018f76:	fb0c 2201 	mla	r2, ip, r1, r2
 8018f7a:	ea4e 0000 	orr.w	r0, lr, r0
 8018f7e:	fb08 2800 	mla	r8, r8, r0, r2
 8018f82:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8018f86:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018f8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018f8e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8018f92:	ea42 0808 	orr.w	r8, r2, r8
 8018f96:	fa1f f288 	uxth.w	r2, r8
 8018f9a:	2bff      	cmp	r3, #255	; 0xff
 8018f9c:	f000 80b1 	beq.w	8019102 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8018fa0:	f8b7 8000 	ldrh.w	r8, [r7]
 8018fa4:	43db      	mvns	r3, r3
 8018fa6:	ea4f 2028 	mov.w	r0, r8, asr #8
 8018faa:	fa5f fe83 	uxtb.w	lr, r3
 8018fae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018fb2:	fb00 f00e 	mul.w	r0, r0, lr
 8018fb6:	1c41      	adds	r1, r0, #1
 8018fb8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018fbc:	1210      	asrs	r0, r2, #8
 8018fbe:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8018fc2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018fc6:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8018fca:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018fce:	495a      	ldr	r1, [pc, #360]	; (8019138 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8018fd0:	fb0c fc0e 	mul.w	ip, ip, lr
 8018fd4:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8018fd8:	f10c 0101 	add.w	r1, ip, #1
 8018fdc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8018fe0:	10d1      	asrs	r1, r2, #3
 8018fe2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018fe6:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8018fea:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8018fee:	b2db      	uxtb	r3, r3
 8018ff0:	00c9      	lsls	r1, r1, #3
 8018ff2:	fb03 f30e 	mul.w	r3, r3, lr
 8018ff6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018ffa:	4301      	orrs	r1, r0
 8018ffc:	1c58      	adds	r0, r3, #1
 8018ffe:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019002:	00d3      	lsls	r3, r2, #3
 8019004:	b2db      	uxtb	r3, r3
 8019006:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801900a:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801900e:	803b      	strh	r3, [r7, #0]
 8019010:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019012:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019014:	4413      	add	r3, r2
 8019016:	9327      	str	r3, [sp, #156]	; 0x9c
 8019018:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801901a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801901c:	441a      	add	r2, r3
 801901e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019020:	9228      	str	r2, [sp, #160]	; 0xa0
 8019022:	3b01      	subs	r3, #1
 8019024:	3702      	adds	r7, #2
 8019026:	9311      	str	r3, [sp, #68]	; 0x44
 8019028:	e69a      	b.n	8018d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801902a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801902c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801902e:	4413      	add	r3, r2
 8019030:	9327      	str	r3, [sp, #156]	; 0x9c
 8019032:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8019034:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019036:	441a      	add	r2, r3
 8019038:	9b06      	ldr	r3, [sp, #24]
 801903a:	9228      	str	r2, [sp, #160]	; 0xa0
 801903c:	3b01      	subs	r3, #1
 801903e:	9306      	str	r3, [sp, #24]
 8019040:	9b07      	ldr	r3, [sp, #28]
 8019042:	3302      	adds	r3, #2
 8019044:	9307      	str	r3, [sp, #28]
 8019046:	e63f      	b.n	8018cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8019048:	f47f ae51 	bne.w	8018cee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801904c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801904e:	2b00      	cmp	r3, #0
 8019050:	f340 81dd 	ble.w	801940e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8019054:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019058:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801905c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019060:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019062:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019066:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801906a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801906e:	eef0 6a48 	vmov.f32	s13, s16
 8019072:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019076:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801907a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801907e:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8019082:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019086:	eef0 6a68 	vmov.f32	s13, s17
 801908a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801908e:	ee18 2a10 	vmov	r2, s16
 8019092:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019096:	fb92 f3f3 	sdiv	r3, r2, r3
 801909a:	ee18 2a90 	vmov	r2, s17
 801909e:	9329      	str	r3, [sp, #164]	; 0xa4
 80190a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80190a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80190a6:	932a      	str	r3, [sp, #168]	; 0xa8
 80190a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80190aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80190ac:	3b01      	subs	r3, #1
 80190ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190b2:	9310      	str	r3, [sp, #64]	; 0x40
 80190b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80190b6:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80190ba:	bf08      	it	eq
 80190bc:	4613      	moveq	r3, r2
 80190be:	9306      	str	r3, [sp, #24]
 80190c0:	eef0 8a67 	vmov.f32	s17, s15
 80190c4:	eeb0 8a47 	vmov.f32	s16, s14
 80190c8:	e5f7      	b.n	8018cba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 80190ca:	fb08 f000 	mul.w	r0, r8, r0
 80190ce:	fb09 0303 	mla	r3, r9, r3, r0
 80190d2:	e693      	b.n	8018dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 80190d4:	4689      	mov	r9, r1
 80190d6:	e6bb      	b.n	8018e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 80190d8:	f1c2 0010 	rsb	r0, r2, #16
 80190dc:	fb0e f202 	mul.w	r2, lr, r2
 80190e0:	fb09 2900 	mla	r9, r9, r0, r2
 80190e4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80190e8:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80190ec:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80190f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80190f4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80190f8:	ea42 0909 	orr.w	r9, r2, r9
 80190fc:	fa1f f289 	uxth.w	r2, r9
 8019100:	e74b      	b.n	8018f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8019102:	803a      	strh	r2, [r7, #0]
 8019104:	e784      	b.n	8019010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8019106:	1c5c      	adds	r4, r3, #1
 8019108:	d182      	bne.n	8019010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801910a:	429d      	cmp	r5, r3
 801910c:	dd80      	ble.n	8019010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801910e:	1c48      	adds	r0, r1, #1
 8019110:	f6ff af7e 	blt.w	8019010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8019114:	9808      	ldr	r0, [sp, #32]
 8019116:	4288      	cmp	r0, r1
 8019118:	f77f af7a 	ble.w	8019010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801911c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8019120:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8019124:	e9cd 5000 	strd	r5, r0, [sp]
 8019128:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 801912c:	4639      	mov	r1, r7
 801912e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019130:	f7ff fbf2 	bl	8018918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019134:	e76c      	b.n	8019010 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8019136:	bf00      	nop
 8019138:	fffff800 	.word	0xfffff800
 801913c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801913e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019142:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019144:	141f      	asrs	r7, r3, #16
 8019146:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801914a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801914c:	141b      	asrs	r3, r3, #16
 801914e:	fb05 3707 	mla	r7, r5, r7, r3
 8019152:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019154:	fa1f fc82 	uxth.w	ip, r2
 8019158:	eb03 0a07 	add.w	sl, r3, r7
 801915c:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8019160:	f813 9007 	ldrb.w	r9, [r3, r7]
 8019164:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019168:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 801916c:	b29b      	uxth	r3, r3
 801916e:	2800      	cmp	r0, #0
 8019170:	f000 8132 	beq.w	80193d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 8019174:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8019178:	940d      	str	r4, [sp, #52]	; 0x34
 801917a:	eb0a 0b05 	add.w	fp, sl, r5
 801917e:	fa1f fa80 	uxth.w	sl, r0
 8019182:	fb0a fc0c 	mul.w	ip, sl, ip
 8019186:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801918a:	fa1f fa8a 	uxth.w	sl, sl
 801918e:	eba1 010c 	sub.w	r1, r1, ip
 8019192:	eba3 030a 	sub.w	r3, r3, sl
 8019196:	b289      	uxth	r1, r1
 8019198:	fb08 f101 	mul.w	r1, r8, r1
 801919c:	b29b      	uxth	r3, r3
 801919e:	fb09 1303 	mla	r3, r9, r3, r1
 80191a2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80191a4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80191a8:	940e      	str	r4, [sp, #56]	; 0x38
 80191aa:	fb0a 3301 	mla	r3, sl, r1, r3
 80191ae:	fb0c 3304 	mla	r3, ip, r4, r3
 80191b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80191b6:	2b00      	cmp	r3, #0
 80191b8:	f000 8100 	beq.w	80193bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 80191bc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80191be:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80191c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80191c4:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80191c8:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80191cc:	f000 8109 	beq.w	80193e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 80191d0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80191d4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80191d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80191dc:	fb09 f707 	mul.w	r7, r9, r7
 80191e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80191e4:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80191e8:	f107 0b20 	add.w	fp, r7, #32
 80191ec:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80191f0:	44cc      	add	ip, r9
 80191f2:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80191f6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80191fa:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80191fe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019202:	ea4c 0909 	orr.w	r9, ip, r9
 8019206:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801920a:	884f      	ldrh	r7, [r1, #2]
 801920c:	d019      	beq.n	8019242 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 801920e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019212:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019216:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801921a:	fb08 f807 	mul.w	r8, r8, r7
 801921e:	fb0a fc0c 	mul.w	ip, sl, ip
 8019222:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019226:	f108 0b20 	add.w	fp, r8, #32
 801922a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801922e:	44bc      	add	ip, r7
 8019230:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019234:	0a3f      	lsrs	r7, r7, #8
 8019236:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801923a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801923e:	ea4c 0707 	orr.w	r7, ip, r7
 8019242:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019246:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801924a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801924e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019252:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019256:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801925a:	ea4c 0909 	orr.w	r9, ip, r9
 801925e:	ea4a 0707 	orr.w	r7, sl, r7
 8019262:	2800      	cmp	r0, #0
 8019264:	f000 80bf 	beq.w	80193e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8019268:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801926a:	eb01 0c04 	add.w	ip, r1, r4
 801926e:	f831 8004 	ldrh.w	r8, [r1, r4]
 8019272:	990d      	ldr	r1, [sp, #52]	; 0x34
 8019274:	29ff      	cmp	r1, #255	; 0xff
 8019276:	d01a      	beq.n	80192ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 8019278:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801927a:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 801927e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019282:	fb04 fb08 	mul.w	fp, r4, r8
 8019286:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801928a:	fb0a fa01 	mul.w	sl, sl, r1
 801928e:	f10b 0120 	add.w	r1, fp, #32
 8019292:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8019296:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 801929a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801929e:	44d0      	add	r8, sl
 80192a0:	0a09      	lsrs	r1, r1, #8
 80192a2:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80192a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80192aa:	ea48 0801 	orr.w	r8, r8, r1
 80192ae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80192b0:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80192b4:	2cff      	cmp	r4, #255	; 0xff
 80192b6:	d01a      	beq.n	80192ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 80192b8:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80192bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80192c0:	fb04 fb01 	mul.w	fp, r4, r1
 80192c4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80192c8:	fb0a fa0c 	mul.w	sl, sl, ip
 80192cc:	f10b 0c20 	add.w	ip, fp, #32
 80192d0:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80192d4:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 80192d8:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80192dc:	4451      	add	r1, sl
 80192de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80192e2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80192e6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80192ea:	ea41 010c 	orr.w	r1, r1, ip
 80192ee:	fb10 fc02 	smulbb	ip, r0, r2
 80192f2:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80192f6:	f1c0 0a10 	rsb	sl, r0, #16
 80192fa:	ebaa 0a02 	sub.w	sl, sl, r2
 80192fe:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8019302:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019306:	437a      	muls	r2, r7
 8019308:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 801930c:	040f      	lsls	r7, r1, #16
 801930e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019312:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019316:	fb09 220a 	mla	r2, r9, sl, r2
 801931a:	ea4b 0808 	orr.w	r8, fp, r8
 801931e:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8019322:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019326:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801932a:	fb00 2208 	mla	r2, r0, r8, r2
 801932e:	4339      	orrs	r1, r7
 8019330:	fb0c 2201 	mla	r2, ip, r1, r2
 8019334:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8019338:	0952      	lsrs	r2, r2, #5
 801933a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801933e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019342:	ea49 0202 	orr.w	r2, r9, r2
 8019346:	2bff      	cmp	r3, #255	; 0xff
 8019348:	b292      	uxth	r2, r2
 801934a:	d05d      	beq.n	8019408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 801934c:	f8be 8000 	ldrh.w	r8, [lr]
 8019350:	4c31      	ldr	r4, [pc, #196]	; (8019418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8019352:	43db      	mvns	r3, r3
 8019354:	ea4f 2028 	mov.w	r0, r8, asr #8
 8019358:	fa5f fc83 	uxtb.w	ip, r3
 801935c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019360:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019364:	fb00 f00c 	mul.w	r0, r0, ip
 8019368:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801936c:	fb07 f10c 	mul.w	r1, r7, ip
 8019370:	1c47      	adds	r7, r0, #1
 8019372:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8019376:	1217      	asrs	r7, r2, #8
 8019378:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801937c:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8019380:	1c4f      	adds	r7, r1, #1
 8019382:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8019386:	10d1      	asrs	r1, r2, #3
 8019388:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801938c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8019390:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8019394:	b2db      	uxtb	r3, r3
 8019396:	00c9      	lsls	r1, r1, #3
 8019398:	fb03 f30c 	mul.w	r3, r3, ip
 801939c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80193a0:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80193a4:	4308      	orrs	r0, r1
 80193a6:	00d2      	lsls	r2, r2, #3
 80193a8:	1c59      	adds	r1, r3, #1
 80193aa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80193ae:	b2d2      	uxtb	r2, r2
 80193b0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80193b4:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80193b8:	f8ae 0000 	strh.w	r0, [lr]
 80193bc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80193be:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80193c0:	4413      	add	r3, r2
 80193c2:	9327      	str	r3, [sp, #156]	; 0x9c
 80193c4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80193c6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80193c8:	441a      	add	r2, r3
 80193ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80193cc:	9228      	str	r2, [sp, #160]	; 0xa0
 80193ce:	3b01      	subs	r3, #1
 80193d0:	f10e 0e02 	add.w	lr, lr, #2
 80193d4:	9311      	str	r3, [sp, #68]	; 0x44
 80193d6:	e4a5      	b.n	8018d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80193d8:	fb08 f101 	mul.w	r1, r8, r1
 80193dc:	fb09 1303 	mla	r3, r9, r3, r1
 80193e0:	e6e7      	b.n	80191b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 80193e2:	46b9      	mov	r9, r7
 80193e4:	e70f      	b.n	8019206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 80193e6:	f1c2 0110 	rsb	r1, r2, #16
 80193ea:	437a      	muls	r2, r7
 80193ec:	fb09 2901 	mla	r9, r9, r1, r2
 80193f0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80193f4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80193f8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80193fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019400:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019404:	4302      	orrs	r2, r0
 8019406:	e79e      	b.n	8019346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8019408:	f8ae 2000 	strh.w	r2, [lr]
 801940c:	e7d6      	b.n	80193bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 801940e:	b015      	add	sp, #84	; 0x54
 8019410:	ecbd 8b08 	vpop	{d8-d11}
 8019414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019418:	fffff800 	.word	0xfffff800

0801941c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801941c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019420:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8019424:	fb0c 4e03 	mla	lr, ip, r3, r4
 8019428:	f1bc 0f00 	cmp.w	ip, #0
 801942c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8019430:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8019434:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8019438:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801943c:	8808      	ldrh	r0, [r1, #0]
 801943e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8019442:	db2f      	blt.n	80194a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019444:	45e2      	cmp	sl, ip
 8019446:	dd2d      	ble.n	80194a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019448:	2c00      	cmp	r4, #0
 801944a:	db29      	blt.n	80194a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801944c:	42a3      	cmp	r3, r4
 801944e:	dd27      	ble.n	80194a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8019450:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8019454:	1c62      	adds	r2, r4, #1
 8019456:	d428      	bmi.n	80194aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019458:	4293      	cmp	r3, r2
 801945a:	dd26      	ble.n	80194aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801945c:	b32f      	cbz	r7, 80194aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801945e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8019462:	f11c 0c01 	adds.w	ip, ip, #1
 8019466:	d424      	bmi.n	80194b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8019468:	45e2      	cmp	sl, ip
 801946a:	dd22      	ble.n	80194b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801946c:	2e00      	cmp	r6, #0
 801946e:	f000 809c 	beq.w	80195aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8019472:	2c00      	cmp	r4, #0
 8019474:	db1b      	blt.n	80194ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8019476:	42a3      	cmp	r3, r4
 8019478:	dd19      	ble.n	80194ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801947a:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801947e:	3401      	adds	r4, #1
 8019480:	d41a      	bmi.n	80194b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019482:	42a3      	cmp	r3, r4
 8019484:	dd18      	ble.n	80194b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019486:	b1cf      	cbz	r7, 80194bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8019488:	3301      	adds	r3, #1
 801948a:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801948e:	2f0f      	cmp	r7, #15
 8019490:	d915      	bls.n	80194be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8019492:	4b49      	ldr	r3, [pc, #292]	; (80195b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8019494:	4a49      	ldr	r2, [pc, #292]	; (80195bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8019496:	484a      	ldr	r0, [pc, #296]	; (80195c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8019498:	f240 11ef 	movw	r1, #495	; 0x1ef
 801949c:	f002 ff6e 	bl	801c37c <__assert_func>
 80194a0:	4681      	mov	r9, r0
 80194a2:	e7d7      	b.n	8019454 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80194a4:	4686      	mov	lr, r0
 80194a6:	4681      	mov	r9, r0
 80194a8:	e7db      	b.n	8019462 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80194aa:	4686      	mov	lr, r0
 80194ac:	e7d9      	b.n	8019462 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80194ae:	4684      	mov	ip, r0
 80194b0:	e7e5      	b.n	801947e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80194b2:	4603      	mov	r3, r0
 80194b4:	4684      	mov	ip, r0
 80194b6:	e7ea      	b.n	801948e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80194b8:	4603      	mov	r3, r0
 80194ba:	e7e8      	b.n	801948e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80194bc:	4603      	mov	r3, r0
 80194be:	2e0f      	cmp	r6, #15
 80194c0:	d8e7      	bhi.n	8019492 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80194c2:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80194c6:	fb17 f806 	smulbb	r8, r7, r6
 80194ca:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80194ce:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 80194d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80194d6:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80194da:	ea44 0909 	orr.w	r9, r4, r9
 80194de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80194e2:	f1c6 0410 	rsb	r4, r6, #16
 80194e6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80194ea:	1be4      	subs	r4, r4, r7
 80194ec:	041a      	lsls	r2, r3, #16
 80194ee:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 80194f2:	ea4a 0e0e 	orr.w	lr, sl, lr
 80194f6:	fb07 fe0e 	mul.w	lr, r7, lr
 80194fa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80194fe:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8019502:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019506:	fb04 e409 	mla	r4, r4, r9, lr
 801950a:	4313      	orrs	r3, r2
 801950c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8019510:	fb08 4303 	mla	r3, r8, r3, r4
 8019514:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019518:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801951c:	4322      	orrs	r2, r4
 801951e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8019522:	fb06 3202 	mla	r2, r6, r2, r3
 8019526:	0d53      	lsrs	r3, r2, #21
 8019528:	0952      	lsrs	r2, r2, #5
 801952a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801952e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019532:	431a      	orrs	r2, r3
 8019534:	b293      	uxth	r3, r2
 8019536:	b2af      	uxth	r7, r5
 8019538:	1202      	asrs	r2, r0, #8
 801953a:	43ed      	mvns	r5, r5
 801953c:	b2ed      	uxtb	r5, r5
 801953e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019542:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019546:	fb12 f205 	smulbb	r2, r2, r5
 801954a:	10c6      	asrs	r6, r0, #3
 801954c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019550:	fb0c 2c07 	mla	ip, ip, r7, r2
 8019554:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019558:	10da      	asrs	r2, r3, #3
 801955a:	fb16 f605 	smulbb	r6, r6, r5
 801955e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019562:	fb02 6207 	mla	r2, r2, r7, r6
 8019566:	b296      	uxth	r6, r2
 8019568:	00c2      	lsls	r2, r0, #3
 801956a:	00dc      	lsls	r4, r3, #3
 801956c:	b2d2      	uxtb	r2, r2
 801956e:	b2e4      	uxtb	r4, r4
 8019570:	fb12 f205 	smulbb	r2, r2, r5
 8019574:	fb04 2207 	mla	r2, r4, r7, r2
 8019578:	fa1f fc8c 	uxth.w	ip, ip
 801957c:	b292      	uxth	r2, r2
 801957e:	f10c 0301 	add.w	r3, ip, #1
 8019582:	1c50      	adds	r0, r2, #1
 8019584:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019588:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801958c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019590:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019594:	4313      	orrs	r3, r2
 8019596:	1c72      	adds	r2, r6, #1
 8019598:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801959c:	0952      	lsrs	r2, r2, #5
 801959e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80195a2:	4313      	orrs	r3, r2
 80195a4:	800b      	strh	r3, [r1, #0]
 80195a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80195aa:	2f0f      	cmp	r7, #15
 80195ac:	f63f af71 	bhi.w	8019492 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80195b0:	4603      	mov	r3, r0
 80195b2:	4684      	mov	ip, r0
 80195b4:	e785      	b.n	80194c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80195b6:	bf00      	nop
 80195b8:	08020dcd 	.word	0x08020dcd
 80195bc:	080213ce 	.word	0x080213ce
 80195c0:	08020e55 	.word	0x08020e55

080195c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80195c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195c8:	ed2d 8b08 	vpush	{d8-d11}
 80195cc:	b095      	sub	sp, #84	; 0x54
 80195ce:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80195d2:	9306      	str	r3, [sp, #24]
 80195d4:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 80195d8:	9212      	str	r2, [sp, #72]	; 0x48
 80195da:	9307      	str	r3, [sp, #28]
 80195dc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80195de:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80195e2:	930c      	str	r3, [sp, #48]	; 0x30
 80195e4:	910b      	str	r1, [sp, #44]	; 0x2c
 80195e6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80195ea:	9013      	str	r0, [sp, #76]	; 0x4c
 80195ec:	6850      	ldr	r0, [r2, #4]
 80195ee:	6812      	ldr	r2, [r2, #0]
 80195f0:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 80195f4:	fb00 1303 	mla	r3, r0, r3, r1
 80195f8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80195fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80195fe:	681b      	ldr	r3, [r3, #0]
 8019600:	9309      	str	r3, [sp, #36]	; 0x24
 8019602:	007b      	lsls	r3, r7, #1
 8019604:	930a      	str	r3, [sp, #40]	; 0x28
 8019606:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019608:	43db      	mvns	r3, r3
 801960a:	b2db      	uxtb	r3, r3
 801960c:	eeb0 aa40 	vmov.f32	s20, s0
 8019610:	eef0 9a60 	vmov.f32	s19, s1
 8019614:	eeb0 9a41 	vmov.f32	s18, s2
 8019618:	eeb0 8a62 	vmov.f32	s16, s5
 801961c:	eef0 8a43 	vmov.f32	s17, s6
 8019620:	eef0 ba44 	vmov.f32	s23, s8
 8019624:	eeb0 ba64 	vmov.f32	s22, s9
 8019628:	eef0 aa45 	vmov.f32	s21, s10
 801962c:	9308      	str	r3, [sp, #32]
 801962e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019630:	2b00      	cmp	r3, #0
 8019632:	dc03      	bgt.n	801963c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8019634:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019636:	2b00      	cmp	r3, #0
 8019638:	f340 81f3 	ble.w	8019a22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 801963c:	9b06      	ldr	r3, [sp, #24]
 801963e:	2b00      	cmp	r3, #0
 8019640:	f340 80fa 	ble.w	8019838 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8019644:	1422      	asrs	r2, r4, #16
 8019646:	ea4f 4326 	mov.w	r3, r6, asr #16
 801964a:	d42b      	bmi.n	80196a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 801964c:	1c51      	adds	r1, r2, #1
 801964e:	428f      	cmp	r7, r1
 8019650:	dd2b      	ble.n	80196aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8019652:	2b00      	cmp	r3, #0
 8019654:	db29      	blt.n	80196aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8019656:	9807      	ldr	r0, [sp, #28]
 8019658:	1c59      	adds	r1, r3, #1
 801965a:	4288      	cmp	r0, r1
 801965c:	dd25      	ble.n	80196aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801965e:	9b06      	ldr	r3, [sp, #24]
 8019660:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019662:	3b01      	subs	r3, #1
 8019664:	fb02 4203 	mla	r2, r2, r3, r4
 8019668:	1412      	asrs	r2, r2, #16
 801966a:	d428      	bmi.n	80196be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801966c:	3201      	adds	r2, #1
 801966e:	4297      	cmp	r7, r2
 8019670:	dd25      	ble.n	80196be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019672:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019674:	fb02 6303 	mla	r3, r2, r3, r6
 8019678:	141b      	asrs	r3, r3, #16
 801967a:	d420      	bmi.n	80196be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801967c:	9a07      	ldr	r2, [sp, #28]
 801967e:	3301      	adds	r3, #1
 8019680:	429a      	cmp	r2, r3
 8019682:	dd1c      	ble.n	80196be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019684:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019688:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 801968c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8019690:	f1b8 0f00 	cmp.w	r8, #0
 8019694:	f300 8129 	bgt.w	80198ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8019698:	9b06      	ldr	r3, [sp, #24]
 801969a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801969e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80196a2:	e0cb      	b.n	801983c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 80196a4:	1c51      	adds	r1, r2, #1
 80196a6:	f040 80bd 	bne.w	8019824 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80196aa:	42ba      	cmp	r2, r7
 80196ac:	f280 80ba 	bge.w	8019824 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80196b0:	1c5a      	adds	r2, r3, #1
 80196b2:	f2c0 80b7 	blt.w	8019824 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80196b6:	9a07      	ldr	r2, [sp, #28]
 80196b8:	4293      	cmp	r3, r2
 80196ba:	f280 80b3 	bge.w	8019824 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80196be:	f8dd b018 	ldr.w	fp, [sp, #24]
 80196c2:	46c8      	mov	r8, r9
 80196c4:	f1bb 0f00 	cmp.w	fp, #0
 80196c8:	dde6      	ble.n	8019698 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80196ca:	1421      	asrs	r1, r4, #16
 80196cc:	ea4f 4226 	mov.w	r2, r6, asr #16
 80196d0:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80196d4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80196d8:	f100 80ef 	bmi.w	80198ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 80196dc:	f101 0c01 	add.w	ip, r1, #1
 80196e0:	4567      	cmp	r7, ip
 80196e2:	f340 80ec 	ble.w	80198be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 80196e6:	2a00      	cmp	r2, #0
 80196e8:	f2c0 80e9 	blt.w	80198be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 80196ec:	9d07      	ldr	r5, [sp, #28]
 80196ee:	f102 0c01 	add.w	ip, r2, #1
 80196f2:	4565      	cmp	r5, ip
 80196f4:	f340 80e3 	ble.w	80198be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 80196f8:	fb02 1207 	mla	r2, r2, r7, r1
 80196fc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80196fe:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8019702:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8019706:	f8be 1002 	ldrh.w	r1, [lr, #2]
 801970a:	b138      	cbz	r0, 801971c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 801970c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801970e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019710:	4472      	add	r2, lr
 8019712:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8019716:	8852      	ldrh	r2, [r2, #2]
 8019718:	950e      	str	r5, [sp, #56]	; 0x38
 801971a:	920f      	str	r2, [sp, #60]	; 0x3c
 801971c:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8019720:	fb13 f200 	smulbb	r2, r3, r0
 8019724:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019728:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801972c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019730:	10d2      	asrs	r2, r2, #3
 8019732:	ea4e 0c0c 	orr.w	ip, lr, ip
 8019736:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801973a:	f1c0 0e10 	rsb	lr, r0, #16
 801973e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019742:	ebae 0e03 	sub.w	lr, lr, r3
 8019746:	ea4a 0101 	orr.w	r1, sl, r1
 801974a:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 801974e:	4359      	muls	r1, r3
 8019750:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019752:	9d08      	ldr	r5, [sp, #32]
 8019754:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019758:	fb0e 1e0c 	mla	lr, lr, ip, r1
 801975c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019760:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019764:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019768:	ea4c 0c03 	orr.w	ip, ip, r3
 801976c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801976e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019770:	041b      	lsls	r3, r3, #16
 8019772:	fb02 ec0c 	mla	ip, r2, ip, lr
 8019776:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801977a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801977e:	ea43 030e 	orr.w	r3, r3, lr
 8019782:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019786:	fb02 c203 	mla	r2, r2, r3, ip
 801978a:	0d53      	lsrs	r3, r2, #21
 801978c:	0952      	lsrs	r2, r2, #5
 801978e:	f8b8 c000 	ldrh.w	ip, [r8]
 8019792:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019796:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801979a:	431a      	orrs	r2, r3
 801979c:	b292      	uxth	r2, r2
 801979e:	ea4f 212c 	mov.w	r1, ip, asr #8
 80197a2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80197a6:	1210      	asrs	r0, r2, #8
 80197a8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80197ac:	fb11 f105 	smulbb	r1, r1, r5
 80197b0:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80197b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80197b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80197bc:	fb00 1003 	mla	r0, r0, r3, r1
 80197c0:	fa5f fc8c 	uxtb.w	ip, ip
 80197c4:	10d1      	asrs	r1, r2, #3
 80197c6:	00d2      	lsls	r2, r2, #3
 80197c8:	fb1c fc05 	smulbb	ip, ip, r5
 80197cc:	b2d2      	uxtb	r2, r2
 80197ce:	fb02 c203 	mla	r2, r2, r3, ip
 80197d2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80197d6:	b280      	uxth	r0, r0
 80197d8:	b292      	uxth	r2, r2
 80197da:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80197de:	fb1e fe05 	smulbb	lr, lr, r5
 80197e2:	fb01 e103 	mla	r1, r1, r3, lr
 80197e6:	f102 0c01 	add.w	ip, r2, #1
 80197ea:	1c43      	adds	r3, r0, #1
 80197ec:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80197f0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80197f4:	b289      	uxth	r1, r1
 80197f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80197fa:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80197fe:	4313      	orrs	r3, r2
 8019800:	1c4a      	adds	r2, r1, #1
 8019802:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019806:	0949      	lsrs	r1, r1, #5
 8019808:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801980c:	430b      	orrs	r3, r1
 801980e:	f8a8 3000 	strh.w	r3, [r8]
 8019812:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019814:	441c      	add	r4, r3
 8019816:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019818:	f108 0802 	add.w	r8, r8, #2
 801981c:	441e      	add	r6, r3
 801981e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019822:	e74f      	b.n	80196c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8019824:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019826:	441c      	add	r4, r3
 8019828:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801982a:	441e      	add	r6, r3
 801982c:	9b06      	ldr	r3, [sp, #24]
 801982e:	3b01      	subs	r3, #1
 8019830:	9306      	str	r3, [sp, #24]
 8019832:	f109 0902 	add.w	r9, r9, #2
 8019836:	e701      	b.n	801963c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8019838:	f47f af11 	bne.w	801965e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801983c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801983e:	2b00      	cmp	r3, #0
 8019840:	f340 80ef 	ble.w	8019a22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8019844:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019848:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801984c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019850:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019852:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019856:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801985a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801985e:	eef0 6a48 	vmov.f32	s13, s16
 8019862:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019866:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801986a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801986e:	ee16 4a90 	vmov	r4, s13
 8019872:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019876:	eef0 6a68 	vmov.f32	s13, s17
 801987a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801987e:	ee18 2a10 	vmov	r2, s16
 8019882:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019886:	fb92 f3f3 	sdiv	r3, r2, r3
 801988a:	ee18 2a90 	vmov	r2, s17
 801988e:	9329      	str	r3, [sp, #164]	; 0xa4
 8019890:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019892:	fb92 f3f3 	sdiv	r3, r2, r3
 8019896:	932a      	str	r3, [sp, #168]	; 0xa8
 8019898:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801989a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801989c:	3b01      	subs	r3, #1
 801989e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80198a2:	930b      	str	r3, [sp, #44]	; 0x2c
 80198a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80198a6:	bf08      	it	eq
 80198a8:	4613      	moveq	r3, r2
 80198aa:	ee16 6a90 	vmov	r6, s13
 80198ae:	9306      	str	r3, [sp, #24]
 80198b0:	eef0 8a67 	vmov.f32	s17, s15
 80198b4:	eeb0 8a47 	vmov.f32	s16, s14
 80198b8:	e6b9      	b.n	801962e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80198ba:	1c4d      	adds	r5, r1, #1
 80198bc:	d1a9      	bne.n	8019812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80198be:	428f      	cmp	r7, r1
 80198c0:	dda7      	ble.n	8019812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80198c2:	1c55      	adds	r5, r2, #1
 80198c4:	dba5      	blt.n	8019812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80198c6:	9d07      	ldr	r5, [sp, #28]
 80198c8:	4295      	cmp	r5, r2
 80198ca:	dda2      	ble.n	8019812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80198cc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80198ce:	9101      	str	r1, [sp, #4]
 80198d0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80198d4:	9b07      	ldr	r3, [sp, #28]
 80198d6:	9300      	str	r3, [sp, #0]
 80198d8:	e9cd 0504 	strd	r0, r5, [sp, #16]
 80198dc:	463b      	mov	r3, r7
 80198de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80198e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80198e2:	4641      	mov	r1, r8
 80198e4:	f7ff fd9a 	bl	801941c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80198e8:	e793      	b.n	8019812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80198ea:	1422      	asrs	r2, r4, #16
 80198ec:	1431      	asrs	r1, r6, #16
 80198ee:	fb07 2101 	mla	r1, r7, r1, r2
 80198f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80198f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80198f6:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80198fa:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80198fe:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8019902:	8851      	ldrh	r1, [r2, #2]
 8019904:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8019908:	f1be 0f00 	cmp.w	lr, #0
 801990c:	d006      	beq.n	801991c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801990e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019910:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019912:	1810      	adds	r0, r2, r0
 8019914:	5b52      	ldrh	r2, [r2, r5]
 8019916:	9210      	str	r2, [sp, #64]	; 0x40
 8019918:	8842      	ldrh	r2, [r0, #2]
 801991a:	9211      	str	r2, [sp, #68]	; 0x44
 801991c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8019920:	fb13 f20e 	smulbb	r2, r3, lr
 8019924:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019928:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801992c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019930:	10d2      	asrs	r2, r2, #3
 8019932:	ea40 000c 	orr.w	r0, r0, ip
 8019936:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801993a:	f1ce 0c10 	rsb	ip, lr, #16
 801993e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019942:	ebac 0c03 	sub.w	ip, ip, r3
 8019946:	ea4b 0101 	orr.w	r1, fp, r1
 801994a:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 801994e:	4359      	muls	r1, r3
 8019950:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019952:	9d08      	ldr	r5, [sp, #32]
 8019954:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019958:	fb0c 1c00 	mla	ip, ip, r0, r1
 801995c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019960:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8019964:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019966:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801996a:	ea4b 0000 	orr.w	r0, fp, r0
 801996e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019972:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019976:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801997a:	fb02 c000 	mla	r0, r2, r0, ip
 801997e:	ea4b 0b03 	orr.w	fp, fp, r3
 8019982:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8019986:	fb02 0b0b 	mla	fp, r2, fp, r0
 801998a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801998c:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8019990:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019994:	8812      	ldrh	r2, [r2, #0]
 8019996:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801999a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801999e:	ea41 0b0b 	orr.w	fp, r1, fp
 80199a2:	fa1f f38b 	uxth.w	r3, fp
 80199a6:	1211      	asrs	r1, r2, #8
 80199a8:	1218      	asrs	r0, r3, #8
 80199aa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80199ae:	fb11 f105 	smulbb	r1, r1, r5
 80199b2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80199b6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80199ba:	00d2      	lsls	r2, r2, #3
 80199bc:	fb00 100a 	mla	r0, r0, sl, r1
 80199c0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80199c4:	10d9      	asrs	r1, r3, #3
 80199c6:	b2d2      	uxtb	r2, r2
 80199c8:	00db      	lsls	r3, r3, #3
 80199ca:	fb1c fc05 	smulbb	ip, ip, r5
 80199ce:	fb12 f205 	smulbb	r2, r2, r5
 80199d2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80199d6:	b2db      	uxtb	r3, r3
 80199d8:	b280      	uxth	r0, r0
 80199da:	fb01 c10a 	mla	r1, r1, sl, ip
 80199de:	fb03 230a 	mla	r3, r3, sl, r2
 80199e2:	b29b      	uxth	r3, r3
 80199e4:	b289      	uxth	r1, r1
 80199e6:	1c42      	adds	r2, r0, #1
 80199e8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80199ec:	f101 0c01 	add.w	ip, r1, #1
 80199f0:	1c5a      	adds	r2, r3, #1
 80199f2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80199f6:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 80199fa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80199fe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019a02:	0949      	lsrs	r1, r1, #5
 8019a04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019a06:	4310      	orrs	r0, r2
 8019a08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019a0c:	4308      	orrs	r0, r1
 8019a0e:	f823 0b02 	strh.w	r0, [r3], #2
 8019a12:	930d      	str	r3, [sp, #52]	; 0x34
 8019a14:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019a16:	441c      	add	r4, r3
 8019a18:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019a1a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019a1e:	441e      	add	r6, r3
 8019a20:	e636      	b.n	8019690 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8019a22:	b015      	add	sp, #84	; 0x54
 8019a24:	ecbd 8b08 	vpop	{d8-d11}
 8019a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8019a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019a30:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8019a34:	fb06 5c03 	mla	ip, r6, r3, r5
 8019a38:	2e00      	cmp	r6, #0
 8019a3a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8019a3e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8019a42:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8019a46:	8808      	ldrh	r0, [r1, #0]
 8019a48:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8019a4c:	db2e      	blt.n	8019aac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019a4e:	45b0      	cmp	r8, r6
 8019a50:	dd2c      	ble.n	8019aac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019a52:	2d00      	cmp	r5, #0
 8019a54:	db28      	blt.n	8019aa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8019a56:	42ab      	cmp	r3, r5
 8019a58:	dd26      	ble.n	8019aa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8019a5a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8019a5e:	1c6a      	adds	r2, r5, #1
 8019a60:	d427      	bmi.n	8019ab2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019a62:	4293      	cmp	r3, r2
 8019a64:	dd25      	ble.n	8019ab2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019a66:	b324      	cbz	r4, 8019ab2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019a68:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8019a6c:	3601      	adds	r6, #1
 8019a6e:	d424      	bmi.n	8019aba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8019a70:	45b0      	cmp	r8, r6
 8019a72:	dd22      	ble.n	8019aba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8019a74:	b31f      	cbz	r7, 8019abe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8019a76:	2d00      	cmp	r5, #0
 8019a78:	db1d      	blt.n	8019ab6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8019a7a:	42ab      	cmp	r3, r5
 8019a7c:	dd1b      	ble.n	8019ab6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8019a7e:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8019a82:	3501      	adds	r5, #1
 8019a84:	d405      	bmi.n	8019a92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019a86:	42ab      	cmp	r3, r5
 8019a88:	dd03      	ble.n	8019a92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019a8a:	b124      	cbz	r4, 8019a96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8019a8c:	3301      	adds	r3, #1
 8019a8e:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8019a92:	2c0f      	cmp	r4, #15
 8019a94:	d801      	bhi.n	8019a9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019a96:	2f0f      	cmp	r7, #15
 8019a98:	d914      	bls.n	8019ac4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8019a9a:	4b27      	ldr	r3, [pc, #156]	; (8019b38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8019a9c:	4a27      	ldr	r2, [pc, #156]	; (8019b3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8019a9e:	4828      	ldr	r0, [pc, #160]	; (8019b40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8019aa0:	f240 11ef 	movw	r1, #495	; 0x1ef
 8019aa4:	f002 fc6a 	bl	801c37c <__assert_func>
 8019aa8:	4684      	mov	ip, r0
 8019aaa:	e7d8      	b.n	8019a5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8019aac:	4602      	mov	r2, r0
 8019aae:	4684      	mov	ip, r0
 8019ab0:	e7dc      	b.n	8019a6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8019ab2:	4602      	mov	r2, r0
 8019ab4:	e7da      	b.n	8019a6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8019ab6:	4606      	mov	r6, r0
 8019ab8:	e7e3      	b.n	8019a82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8019aba:	4606      	mov	r6, r0
 8019abc:	e7e9      	b.n	8019a92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019abe:	2c0f      	cmp	r4, #15
 8019ac0:	d8eb      	bhi.n	8019a9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019ac2:	4606      	mov	r6, r0
 8019ac4:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8019ac8:	fb14 f307 	smulbb	r3, r4, r7
 8019acc:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8019ad0:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8019ad4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019ad8:	10db      	asrs	r3, r3, #3
 8019ada:	ea45 0c0c 	orr.w	ip, r5, ip
 8019ade:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019ae2:	f1c7 0510 	rsb	r5, r7, #16
 8019ae6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019aea:	1b2d      	subs	r5, r5, r4
 8019aec:	ea4e 0202 	orr.w	r2, lr, r2
 8019af0:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8019af4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019af8:	4354      	muls	r4, r2
 8019afa:	fb05 450c 	mla	r5, r5, ip, r4
 8019afe:	0404      	lsls	r4, r0, #16
 8019b00:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019b04:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019b08:	4320      	orrs	r0, r4
 8019b0a:	fb03 5400 	mla	r4, r3, r0, r5
 8019b0e:	0430      	lsls	r0, r6, #16
 8019b10:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019b14:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8019b18:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8019b1c:	4330      	orrs	r0, r6
 8019b1e:	fb07 4000 	mla	r0, r7, r0, r4
 8019b22:	0d43      	lsrs	r3, r0, #21
 8019b24:	0940      	lsrs	r0, r0, #5
 8019b26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b2a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019b2e:	4318      	orrs	r0, r3
 8019b30:	8008      	strh	r0, [r1, #0]
 8019b32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019b36:	bf00      	nop
 8019b38:	08020dcd 	.word	0x08020dcd
 8019b3c:	080213ce 	.word	0x080213ce
 8019b40:	08020e55 	.word	0x08020e55

08019b44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b48:	ed2d 8b0a 	vpush	{d8-d12}
 8019b4c:	b093      	sub	sp, #76	; 0x4c
 8019b4e:	461d      	mov	r5, r3
 8019b50:	9210      	str	r2, [sp, #64]	; 0x40
 8019b52:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019b54:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 8019b58:	9208      	str	r2, [sp, #32]
 8019b5a:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 8019b5e:	910b      	str	r1, [sp, #44]	; 0x2c
 8019b60:	6859      	ldr	r1, [r3, #4]
 8019b62:	681b      	ldr	r3, [r3, #0]
 8019b64:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8019b68:	9011      	str	r0, [sp, #68]	; 0x44
 8019b6a:	fb01 2707 	mla	r7, r1, r7, r2
 8019b6e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8019b72:	9307      	str	r3, [sp, #28]
 8019b74:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019b76:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8019b7a:	681b      	ldr	r3, [r3, #0]
 8019b7c:	9309      	str	r3, [sp, #36]	; 0x24
 8019b7e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8019b82:	eeb0 aa40 	vmov.f32	s20, s0
 8019b86:	eef0 9a60 	vmov.f32	s19, s1
 8019b8a:	eeb0 9a41 	vmov.f32	s18, s2
 8019b8e:	eeb0 8a62 	vmov.f32	s16, s5
 8019b92:	eef0 8a43 	vmov.f32	s17, s6
 8019b96:	eeb0 ca44 	vmov.f32	s24, s8
 8019b9a:	eef0 ba64 	vmov.f32	s23, s9
 8019b9e:	eeb0 ba45 	vmov.f32	s22, s10
 8019ba2:	930a      	str	r3, [sp, #40]	; 0x28
 8019ba4:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8019ba8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019baa:	2b00      	cmp	r3, #0
 8019bac:	dc03      	bgt.n	8019bb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8019bae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019bb0:	2b00      	cmp	r3, #0
 8019bb2:	f340 816c 	ble.w	8019e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8019bb6:	2d00      	cmp	r5, #0
 8019bb8:	f340 80b6 	ble.w	8019d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8019bbc:	1422      	asrs	r2, r4, #16
 8019bbe:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019bc2:	d428      	bmi.n	8019c16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8019bc4:	1c51      	adds	r1, r2, #1
 8019bc6:	4588      	cmp	r8, r1
 8019bc8:	dd27      	ble.n	8019c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019bca:	2b00      	cmp	r3, #0
 8019bcc:	db25      	blt.n	8019c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019bce:	9808      	ldr	r0, [sp, #32]
 8019bd0:	1c59      	adds	r1, r3, #1
 8019bd2:	4288      	cmp	r0, r1
 8019bd4:	dd21      	ble.n	8019c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019bd6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019bd8:	1e6b      	subs	r3, r5, #1
 8019bda:	fb02 4203 	mla	r2, r2, r3, r4
 8019bde:	1412      	asrs	r2, r2, #16
 8019be0:	d422      	bmi.n	8019c28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019be2:	3201      	adds	r2, #1
 8019be4:	4590      	cmp	r8, r2
 8019be6:	dd1f      	ble.n	8019c28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019be8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019bea:	fb02 6303 	mla	r3, r2, r3, r6
 8019bee:	141b      	asrs	r3, r3, #16
 8019bf0:	d41a      	bmi.n	8019c28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019bf2:	9a08      	ldr	r2, [sp, #32]
 8019bf4:	3301      	adds	r3, #1
 8019bf6:	429a      	cmp	r2, r3
 8019bf8:	dd16      	ble.n	8019c28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019bfa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019bfe:	46a9      	mov	r9, r5
 8019c00:	f1b9 0f00 	cmp.w	r9, #0
 8019c04:	f300 80e4 	bgt.w	8019dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8019c08:	9b07      	ldr	r3, [sp, #28]
 8019c0a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019c0e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019c12:	9307      	str	r3, [sp, #28]
 8019c14:	e08a      	b.n	8019d2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8019c16:	1c51      	adds	r1, r2, #1
 8019c18:	d17d      	bne.n	8019d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8019c1a:	4542      	cmp	r2, r8
 8019c1c:	da7b      	bge.n	8019d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8019c1e:	1c5a      	adds	r2, r3, #1
 8019c20:	db79      	blt.n	8019d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8019c22:	9a08      	ldr	r2, [sp, #32]
 8019c24:	4293      	cmp	r3, r2
 8019c26:	da76      	bge.n	8019d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8019c28:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8019c2c:	46aa      	mov	sl, r5
 8019c2e:	f1ba 0f00 	cmp.w	sl, #0
 8019c32:	dde9      	ble.n	8019c08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8019c34:	1421      	asrs	r1, r4, #16
 8019c36:	ea4f 4226 	mov.w	r2, r6, asr #16
 8019c3a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8019c3e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019c42:	f100 80b0 	bmi.w	8019da6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 8019c46:	f101 0c01 	add.w	ip, r1, #1
 8019c4a:	45e0      	cmp	r8, ip
 8019c4c:	f340 80ad 	ble.w	8019daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8019c50:	2a00      	cmp	r2, #0
 8019c52:	f2c0 80aa 	blt.w	8019daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8019c56:	9f08      	ldr	r7, [sp, #32]
 8019c58:	f102 0c01 	add.w	ip, r2, #1
 8019c5c:	4567      	cmp	r7, ip
 8019c5e:	f340 80a4 	ble.w	8019daa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8019c62:	fb02 1208 	mla	r2, r2, r8, r1
 8019c66:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019c68:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8019c6c:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8019c70:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8019c74:	b138      	cbz	r0, 8019c86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8019c76:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019c78:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019c7a:	4472      	add	r2, lr
 8019c7c:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8019c80:	8852      	ldrh	r2, [r2, #2]
 8019c82:	970c      	str	r7, [sp, #48]	; 0x30
 8019c84:	920d      	str	r2, [sp, #52]	; 0x34
 8019c86:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8019c8a:	fb13 f200 	smulbb	r2, r3, r0
 8019c8e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019c92:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019c96:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019c9a:	10d2      	asrs	r2, r2, #3
 8019c9c:	ea4e 0c0c 	orr.w	ip, lr, ip
 8019ca0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019ca4:	f1c0 0e10 	rsb	lr, r0, #16
 8019ca8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019cac:	ebae 0e03 	sub.w	lr, lr, r3
 8019cb0:	ea4b 0101 	orr.w	r1, fp, r1
 8019cb4:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8019cb8:	4359      	muls	r1, r3
 8019cba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019cbc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019cc0:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8019cc4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019cc8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019ccc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019cd0:	ea4c 0c03 	orr.w	ip, ip, r3
 8019cd4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019cd6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019cd8:	041b      	lsls	r3, r3, #16
 8019cda:	fb02 ec0c 	mla	ip, r2, ip, lr
 8019cde:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019ce2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019ce6:	ea43 030e 	orr.w	r3, r3, lr
 8019cea:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019cee:	fb02 c203 	mla	r2, r2, r3, ip
 8019cf2:	0d53      	lsrs	r3, r2, #21
 8019cf4:	0952      	lsrs	r2, r2, #5
 8019cf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019cfa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019cfe:	431a      	orrs	r2, r3
 8019d00:	f8a9 2000 	strh.w	r2, [r9]
 8019d04:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019d06:	441c      	add	r4, r3
 8019d08:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019d0a:	f109 0902 	add.w	r9, r9, #2
 8019d0e:	441e      	add	r6, r3
 8019d10:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019d14:	e78b      	b.n	8019c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8019d16:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019d18:	441c      	add	r4, r3
 8019d1a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019d1c:	441e      	add	r6, r3
 8019d1e:	9b07      	ldr	r3, [sp, #28]
 8019d20:	3302      	adds	r3, #2
 8019d22:	3d01      	subs	r5, #1
 8019d24:	9307      	str	r3, [sp, #28]
 8019d26:	e746      	b.n	8019bb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8019d28:	f47f af55 	bne.w	8019bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8019d2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019d2e:	2b00      	cmp	r3, #0
 8019d30:	f340 80ad 	ble.w	8019e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8019d34:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8019d38:	ee79 9aab 	vadd.f32	s19, s19, s23
 8019d3c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8019d40:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d42:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8019d46:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019d4a:	eef0 6a48 	vmov.f32	s13, s16
 8019d4e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019d52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d56:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019d5a:	ee16 4a90 	vmov	r4, s13
 8019d5e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019d62:	eef0 6a68 	vmov.f32	s13, s17
 8019d66:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019d6a:	ee18 2a10 	vmov	r2, s16
 8019d6e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019d72:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d76:	ee18 2a90 	vmov	r2, s17
 8019d7a:	9329      	str	r3, [sp, #164]	; 0xa4
 8019d7c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d82:	932a      	str	r3, [sp, #168]	; 0xa8
 8019d84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019d86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d88:	3b01      	subs	r3, #1
 8019d8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d8e:	930b      	str	r3, [sp, #44]	; 0x2c
 8019d90:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019d92:	ee16 6a90 	vmov	r6, s13
 8019d96:	bf14      	ite	ne
 8019d98:	461d      	movne	r5, r3
 8019d9a:	4615      	moveq	r5, r2
 8019d9c:	eef0 8a67 	vmov.f32	s17, s15
 8019da0:	eeb0 8a47 	vmov.f32	s16, s14
 8019da4:	e700      	b.n	8019ba8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8019da6:	1c4f      	adds	r7, r1, #1
 8019da8:	d1ac      	bne.n	8019d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019daa:	4588      	cmp	r8, r1
 8019dac:	ddaa      	ble.n	8019d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019dae:	1c57      	adds	r7, r2, #1
 8019db0:	dba8      	blt.n	8019d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019db2:	9f08      	ldr	r7, [sp, #32]
 8019db4:	4297      	cmp	r7, r2
 8019db6:	dda5      	ble.n	8019d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019db8:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8019dbc:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8019dc0:	9700      	str	r7, [sp, #0]
 8019dc2:	4643      	mov	r3, r8
 8019dc4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019dc6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019dc8:	4649      	mov	r1, r9
 8019dca:	f7ff fe2f 	bl	8019a2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8019dce:	e799      	b.n	8019d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019dd0:	1422      	asrs	r2, r4, #16
 8019dd2:	1431      	asrs	r1, r6, #16
 8019dd4:	fb08 2101 	mla	r1, r8, r1, r2
 8019dd8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019dda:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019ddc:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8019de0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019de4:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8019de8:	8851      	ldrh	r1, [r2, #2]
 8019dea:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8019dee:	f1be 0f00 	cmp.w	lr, #0
 8019df2:	d006      	beq.n	8019e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8019df4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019df6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019df8:	1810      	adds	r0, r2, r0
 8019dfa:	5bd2      	ldrh	r2, [r2, r7]
 8019dfc:	920e      	str	r2, [sp, #56]	; 0x38
 8019dfe:	8842      	ldrh	r2, [r0, #2]
 8019e00:	920f      	str	r2, [sp, #60]	; 0x3c
 8019e02:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8019e06:	fb13 f20e 	smulbb	r2, r3, lr
 8019e0a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019e0e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019e12:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019e16:	10d2      	asrs	r2, r2, #3
 8019e18:	ea40 000c 	orr.w	r0, r0, ip
 8019e1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019e20:	f1ce 0c10 	rsb	ip, lr, #16
 8019e24:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019e28:	ebac 0c03 	sub.w	ip, ip, r3
 8019e2c:	ea4a 0101 	orr.w	r1, sl, r1
 8019e30:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8019e34:	4359      	muls	r1, r3
 8019e36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e38:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019e3c:	fb0c 1c00 	mla	ip, ip, r0, r1
 8019e40:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8019e44:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8019e48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e4a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019e4c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019e50:	041b      	lsls	r3, r3, #16
 8019e52:	ea4a 0000 	orr.w	r0, sl, r0
 8019e56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019e5a:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 8019e5e:	fb02 c000 	mla	r0, r2, r0, ip
 8019e62:	ea43 0a0a 	orr.w	sl, r3, sl
 8019e66:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8019e6a:	fb02 000a 	mla	r0, r2, sl, r0
 8019e6e:	0d43      	lsrs	r3, r0, #21
 8019e70:	0940      	lsrs	r0, r0, #5
 8019e72:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019e76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019e7a:	4318      	orrs	r0, r3
 8019e7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019e7e:	f82b 0b02 	strh.w	r0, [fp], #2
 8019e82:	441c      	add	r4, r3
 8019e84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e86:	f109 39ff 	add.w	r9, r9, #4294967295
 8019e8a:	441e      	add	r6, r3
 8019e8c:	e6b8      	b.n	8019c00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 8019e8e:	b013      	add	sp, #76	; 0x4c
 8019e90:	ecbd 8b0a 	vpop	{d8-d12}
 8019e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8019e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e9c:	8808      	ldrh	r0, [r1, #0]
 8019e9e:	b085      	sub	sp, #20
 8019ea0:	1206      	asrs	r6, r0, #8
 8019ea2:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8019ea6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019eaa:	9600      	str	r6, [sp, #0]
 8019eac:	10c6      	asrs	r6, r0, #3
 8019eae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019eb2:	9601      	str	r6, [sp, #4]
 8019eb4:	00c0      	lsls	r0, r0, #3
 8019eb6:	fb04 c603 	mla	r6, r4, r3, ip
 8019eba:	b2c0      	uxtb	r0, r0
 8019ebc:	4691      	mov	r9, r2
 8019ebe:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8019ec2:	9a00      	ldr	r2, [sp, #0]
 8019ec4:	9002      	str	r0, [sp, #8]
 8019ec6:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8019eca:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8019ece:	9a01      	ldr	r2, [sp, #4]
 8019ed0:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8019ed4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8019ed8:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019edc:	2c00      	cmp	r4, #0
 8019ede:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8019ee2:	db3a      	blt.n	8019f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8019ee4:	45a0      	cmp	r8, r4
 8019ee6:	dd38      	ble.n	8019f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8019ee8:	f1bc 0f00 	cmp.w	ip, #0
 8019eec:	db33      	blt.n	8019f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8019eee:	4563      	cmp	r3, ip
 8019ef0:	dd31      	ble.n	8019f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8019ef2:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8019ef6:	f11c 0601 	adds.w	r6, ip, #1
 8019efa:	d431      	bmi.n	8019f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8019efc:	42b3      	cmp	r3, r6
 8019efe:	dd2f      	ble.n	8019f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8019f00:	b375      	cbz	r5, 8019f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8019f02:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019f06:	3401      	adds	r4, #1
 8019f08:	d42e      	bmi.n	8019f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8019f0a:	45a0      	cmp	r8, r4
 8019f0c:	dd2c      	ble.n	8019f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8019f0e:	b35f      	cbz	r7, 8019f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8019f10:	f1bc 0f00 	cmp.w	ip, #0
 8019f14:	db26      	blt.n	8019f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8019f16:	4563      	cmp	r3, ip
 8019f18:	dd24      	ble.n	8019f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8019f1a:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8019f1e:	f11c 0c01 	adds.w	ip, ip, #1
 8019f22:	d405      	bmi.n	8019f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8019f24:	4563      	cmp	r3, ip
 8019f26:	dd03      	ble.n	8019f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8019f28:	b115      	cbz	r5, 8019f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8019f2a:	3301      	adds	r3, #1
 8019f2c:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8019f30:	2d0f      	cmp	r5, #15
 8019f32:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019f36:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019f3a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019f3e:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8019f42:	d801      	bhi.n	8019f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8019f44:	2f0f      	cmp	r7, #15
 8019f46:	d911      	bls.n	8019f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8019f48:	4b82      	ldr	r3, [pc, #520]	; (801a154 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8019f4a:	4a83      	ldr	r2, [pc, #524]	; (801a158 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8019f4c:	4883      	ldr	r0, [pc, #524]	; (801a15c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 8019f4e:	f240 210d 	movw	r1, #525	; 0x20d
 8019f52:	f002 fa13 	bl	801c37c <__assert_func>
 8019f56:	4602      	mov	r2, r0
 8019f58:	e7cd      	b.n	8019ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8019f5a:	4606      	mov	r6, r0
 8019f5c:	4602      	mov	r2, r0
 8019f5e:	e7d2      	b.n	8019f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8019f60:	4606      	mov	r6, r0
 8019f62:	e7d0      	b.n	8019f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8019f64:	4604      	mov	r4, r0
 8019f66:	e7da      	b.n	8019f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8019f68:	4604      	mov	r4, r0
 8019f6a:	e7e1      	b.n	8019f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8019f6c:	b2ab      	uxth	r3, r5
 8019f6e:	b2bf      	uxth	r7, r7
 8019f70:	fb03 fe07 	mul.w	lr, r3, r7
 8019f74:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019f78:	011b      	lsls	r3, r3, #4
 8019f7a:	eba3 0c0e 	sub.w	ip, r3, lr
 8019f7e:	b2bf      	uxth	r7, r7
 8019f80:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8019f84:	fa1f fc8c 	uxth.w	ip, ip
 8019f88:	1bed      	subs	r5, r5, r7
 8019f8a:	b2ad      	uxth	r5, r5
 8019f8c:	fb0c f30a 	mul.w	r3, ip, sl
 8019f90:	fb05 330b 	mla	r3, r5, fp, r3
 8019f94:	fb07 3309 	mla	r3, r7, r9, r3
 8019f98:	fb0e 3308 	mla	r3, lr, r8, r3
 8019f9c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019fa0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019fa4:	9303      	str	r3, [sp, #12]
 8019fa6:	d018      	beq.n	8019fda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8019fa8:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8019fac:	fb0b f303 	mul.w	r3, fp, r3
 8019fb0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019fb4:	fb0b fb02 	mul.w	fp, fp, r2
 8019fb8:	0a1a      	lsrs	r2, r3, #8
 8019fba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019fbe:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8019fc2:	441a      	add	r2, r3
 8019fc4:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8019fc8:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8019fcc:	0a12      	lsrs	r2, r2, #8
 8019fce:	0a1b      	lsrs	r3, r3, #8
 8019fd0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019fd4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019fd8:	431a      	orrs	r2, r3
 8019fda:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019fde:	d019      	beq.n	801a014 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8019fe0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019fe4:	fb0a fb0b 	mul.w	fp, sl, fp
 8019fe8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019fec:	fb0a fa06 	mul.w	sl, sl, r6
 8019ff0:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019ff4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019ff8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019ffc:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801a000:	445e      	add	r6, fp
 801a002:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801a006:	0a36      	lsrs	r6, r6, #8
 801a008:	0a1b      	lsrs	r3, r3, #8
 801a00a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a00e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a012:	431e      	orrs	r6, r3
 801a014:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a018:	d019      	beq.n	801a04e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801a01a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a01e:	fb09 fa0a 	mul.w	sl, r9, sl
 801a022:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a026:	fb09 f904 	mul.w	r9, r9, r4
 801a02a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a02e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a032:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a036:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801a03a:	4454      	add	r4, sl
 801a03c:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801a040:	0a24      	lsrs	r4, r4, #8
 801a042:	0a1b      	lsrs	r3, r3, #8
 801a044:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a048:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a04c:	431c      	orrs	r4, r3
 801a04e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a052:	d019      	beq.n	801a088 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 801a054:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801a058:	fb08 f909 	mul.w	r9, r8, r9
 801a05c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a060:	fb08 f800 	mul.w	r8, r8, r0
 801a064:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801a068:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a06c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a070:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801a074:	4448      	add	r0, r9
 801a076:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801a07a:	0a00      	lsrs	r0, r0, #8
 801a07c:	0a1b      	lsrs	r3, r3, #8
 801a07e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a082:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a086:	4318      	orrs	r0, r3
 801a088:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a08c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a090:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801a094:	fb0c f808 	mul.w	r8, ip, r8
 801a098:	fb0c f606 	mul.w	r6, ip, r6
 801a09c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a0a0:	fb05 6202 	mla	r2, r5, r2, r6
 801a0a4:	fb05 8803 	mla	r8, r5, r3, r8
 801a0a8:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801a0ac:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a0b0:	fb07 8803 	mla	r8, r7, r3, r8
 801a0b4:	fb07 2704 	mla	r7, r7, r4, r2
 801a0b8:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801a0bc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a0c0:	fb0e 8303 	mla	r3, lr, r3, r8
 801a0c4:	fb0e 7e00 	mla	lr, lr, r0, r7
 801a0c8:	0a1b      	lsrs	r3, r3, #8
 801a0ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a0ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a0d2:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801a0d6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a0da:	ea43 0e0e 	orr.w	lr, r3, lr
 801a0de:	9b03      	ldr	r3, [sp, #12]
 801a0e0:	b2a4      	uxth	r4, r4
 801a0e2:	4363      	muls	r3, r4
 801a0e4:	1c5a      	adds	r2, r3, #1
 801a0e6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a0ea:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801a0ee:	9b00      	ldr	r3, [sp, #0]
 801a0f0:	b2d2      	uxtb	r2, r2
 801a0f2:	ea4f 451e 	mov.w	r5, lr, lsr #16
 801a0f6:	fb13 f302 	smulbb	r3, r3, r2
 801a0fa:	fb05 3304 	mla	r3, r5, r4, r3
 801a0fe:	b29d      	uxth	r5, r3
 801a100:	9b01      	ldr	r3, [sp, #4]
 801a102:	f3ce 2007 	ubfx	r0, lr, #8, #8
 801a106:	fb13 f302 	smulbb	r3, r3, r2
 801a10a:	fb00 3004 	mla	r0, r0, r4, r3
 801a10e:	9b02      	ldr	r3, [sp, #8]
 801a110:	fa5f fe8e 	uxtb.w	lr, lr
 801a114:	fb13 f202 	smulbb	r2, r3, r2
 801a118:	fb0e 2e04 	mla	lr, lr, r4, r2
 801a11c:	fa1f fe8e 	uxth.w	lr, lr
 801a120:	b280      	uxth	r0, r0
 801a122:	f10e 0201 	add.w	r2, lr, #1
 801a126:	1c6b      	adds	r3, r5, #1
 801a128:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a12c:	1c42      	adds	r2, r0, #1
 801a12e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a132:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a136:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a13a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a13e:	0952      	lsrs	r2, r2, #5
 801a140:	ea43 030e 	orr.w	r3, r3, lr
 801a144:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a148:	4313      	orrs	r3, r2
 801a14a:	800b      	strh	r3, [r1, #0]
 801a14c:	b005      	add	sp, #20
 801a14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a152:	bf00      	nop
 801a154:	08020dcd 	.word	0x08020dcd
 801a158:	08021325 	.word	0x08021325
 801a15c:	08020e55 	.word	0x08020e55

0801a160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801a160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a164:	ed2d 8b08 	vpush	{d8-d11}
 801a168:	b099      	sub	sp, #100	; 0x64
 801a16a:	eeb0 aa40 	vmov.f32	s20, s0
 801a16e:	9306      	str	r3, [sp, #24]
 801a170:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801a174:	9307      	str	r3, [sp, #28]
 801a176:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801a17a:	9216      	str	r2, [sp, #88]	; 0x58
 801a17c:	9310      	str	r3, [sp, #64]	; 0x40
 801a17e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a180:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801a184:	9113      	str	r1, [sp, #76]	; 0x4c
 801a186:	9315      	str	r3, [sp, #84]	; 0x54
 801a188:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801a18c:	9017      	str	r0, [sp, #92]	; 0x5c
 801a18e:	6850      	ldr	r0, [r2, #4]
 801a190:	6812      	ldr	r2, [r2, #0]
 801a192:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801a194:	fb00 1303 	mla	r3, r0, r3, r1
 801a198:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a19c:	930a      	str	r3, [sp, #40]	; 0x28
 801a19e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a1a0:	681b      	ldr	r3, [r3, #0]
 801a1a2:	9312      	str	r3, [sp, #72]	; 0x48
 801a1a4:	9b07      	ldr	r3, [sp, #28]
 801a1a6:	009b      	lsls	r3, r3, #2
 801a1a8:	eef0 9a60 	vmov.f32	s19, s1
 801a1ac:	eeb0 9a41 	vmov.f32	s18, s2
 801a1b0:	eeb0 8a62 	vmov.f32	s16, s5
 801a1b4:	eef0 8a43 	vmov.f32	s17, s6
 801a1b8:	eef0 ba44 	vmov.f32	s23, s8
 801a1bc:	eeb0 ba64 	vmov.f32	s22, s9
 801a1c0:	eef0 aa45 	vmov.f32	s21, s10
 801a1c4:	930e      	str	r3, [sp, #56]	; 0x38
 801a1c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a1c8:	2b00      	cmp	r3, #0
 801a1ca:	dc03      	bgt.n	801a1d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801a1cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a1ce:	2b00      	cmp	r3, #0
 801a1d0:	f340 8352 	ble.w	801a878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 801a1d4:	9b06      	ldr	r3, [sp, #24]
 801a1d6:	2b00      	cmp	r3, #0
 801a1d8:	f340 81a8 	ble.w	801a52c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 801a1dc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a1de:	1412      	asrs	r2, r2, #16
 801a1e0:	ea4f 4324 	mov.w	r3, r4, asr #16
 801a1e4:	d430      	bmi.n	801a248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801a1e6:	9807      	ldr	r0, [sp, #28]
 801a1e8:	1c51      	adds	r1, r2, #1
 801a1ea:	4288      	cmp	r0, r1
 801a1ec:	dd2f      	ble.n	801a24e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801a1ee:	2b00      	cmp	r3, #0
 801a1f0:	db2d      	blt.n	801a24e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801a1f2:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a1f4:	1c59      	adds	r1, r3, #1
 801a1f6:	4288      	cmp	r0, r1
 801a1f8:	dd29      	ble.n	801a24e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801a1fa:	9b06      	ldr	r3, [sp, #24]
 801a1fc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a1fe:	992b      	ldr	r1, [sp, #172]	; 0xac
 801a200:	3b01      	subs	r3, #1
 801a202:	fb02 1203 	mla	r2, r2, r3, r1
 801a206:	1412      	asrs	r2, r2, #16
 801a208:	d42c      	bmi.n	801a264 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801a20a:	9907      	ldr	r1, [sp, #28]
 801a20c:	3201      	adds	r2, #1
 801a20e:	4291      	cmp	r1, r2
 801a210:	dd28      	ble.n	801a264 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801a212:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801a214:	fb02 4303 	mla	r3, r2, r3, r4
 801a218:	141b      	asrs	r3, r3, #16
 801a21a:	d423      	bmi.n	801a264 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801a21c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a21e:	3301      	adds	r3, #1
 801a220:	429a      	cmp	r2, r3
 801a222:	dd1f      	ble.n	801a264 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801a224:	9b06      	ldr	r3, [sp, #24]
 801a226:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801a22a:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 801a22e:	9311      	str	r3, [sp, #68]	; 0x44
 801a230:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a232:	2b00      	cmp	r3, #0
 801a234:	f300 81e3 	bgt.w	801a5fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 801a238:	9b06      	ldr	r3, [sp, #24]
 801a23a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a23e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a240:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a244:	930a      	str	r3, [sp, #40]	; 0x28
 801a246:	e173      	b.n	801a530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 801a248:	1c51      	adds	r1, r2, #1
 801a24a:	f040 8162 	bne.w	801a512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801a24e:	9907      	ldr	r1, [sp, #28]
 801a250:	428a      	cmp	r2, r1
 801a252:	f280 815e 	bge.w	801a512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801a256:	1c5f      	adds	r7, r3, #1
 801a258:	f2c0 815b 	blt.w	801a512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801a25c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a25e:	4293      	cmp	r3, r2
 801a260:	f280 8157 	bge.w	801a512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801a264:	9b06      	ldr	r3, [sp, #24]
 801a266:	9314      	str	r3, [sp, #80]	; 0x50
 801a268:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 801a26c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a26e:	9311      	str	r3, [sp, #68]	; 0x44
 801a270:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a272:	2b00      	cmp	r3, #0
 801a274:	dde0      	ble.n	801a238 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801a276:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a278:	f3c2 3003 	ubfx	r0, r2, #12, #4
 801a27c:	1412      	asrs	r2, r2, #16
 801a27e:	ea4f 4324 	mov.w	r3, r4, asr #16
 801a282:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a286:	f100 81a1 	bmi.w	801a5cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 801a28a:	9e07      	ldr	r6, [sp, #28]
 801a28c:	1c55      	adds	r5, r2, #1
 801a28e:	42ae      	cmp	r6, r5
 801a290:	f340 819e 	ble.w	801a5d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801a294:	2b00      	cmp	r3, #0
 801a296:	f2c0 819b 	blt.w	801a5d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801a29a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 801a29c:	1c5d      	adds	r5, r3, #1
 801a29e:	42ae      	cmp	r6, r5
 801a2a0:	f340 8196 	ble.w	801a5d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801a2a4:	9d07      	ldr	r5, [sp, #28]
 801a2a6:	fb03 2305 	mla	r3, r3, r5, r2
 801a2aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a2ac:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 801a2b0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801a2b4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a2b8:	2800      	cmp	r0, #0
 801a2ba:	f000 8178 	beq.w	801a5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801a2be:	686a      	ldr	r2, [r5, #4]
 801a2c0:	920b      	str	r2, [sp, #44]	; 0x2c
 801a2c2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a2c6:	2900      	cmp	r1, #0
 801a2c8:	f000 817a 	beq.w	801a5c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 801a2cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a2ce:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801a2d0:	18aa      	adds	r2, r5, r2
 801a2d2:	59ad      	ldr	r5, [r5, r6]
 801a2d4:	6852      	ldr	r2, [r2, #4]
 801a2d6:	9508      	str	r5, [sp, #32]
 801a2d8:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 801a2dc:	920c      	str	r2, [sp, #48]	; 0x30
 801a2de:	0e15      	lsrs	r5, r2, #24
 801a2e0:	b280      	uxth	r0, r0
 801a2e2:	b289      	uxth	r1, r1
 801a2e4:	fb00 fb01 	mul.w	fp, r0, r1
 801a2e8:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 801a2ec:	0100      	lsls	r0, r0, #4
 801a2ee:	eba0 090b 	sub.w	r9, r0, fp
 801a2f2:	b289      	uxth	r1, r1
 801a2f4:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 801a2f8:	fa1f f989 	uxth.w	r9, r9
 801a2fc:	1a52      	subs	r2, r2, r1
 801a2fe:	b292      	uxth	r2, r2
 801a300:	fb09 f008 	mul.w	r0, r9, r8
 801a304:	fb02 000c 	mla	r0, r2, ip, r0
 801a308:	fb01 000a 	mla	r0, r1, sl, r0
 801a30c:	fb0b 0005 	mla	r0, fp, r5, r0
 801a310:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a314:	2800      	cmp	r0, #0
 801a316:	f000 80ef 	beq.w	801a4f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a31a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a31e:	d01b      	beq.n	801a358 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 801a320:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a324:	fb0c fe0e 	mul.w	lr, ip, lr
 801a328:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a32c:	fb0c fc03 	mul.w	ip, ip, r3
 801a330:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801a334:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a338:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a33c:	4473      	add	r3, lr
 801a33e:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801a342:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 801a346:	0a1b      	lsrs	r3, r3, #8
 801a348:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a34c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a350:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a354:	ea43 030e 	orr.w	r3, r3, lr
 801a358:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a35c:	d01e      	beq.n	801a39c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 801a35e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801a360:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801a364:	fb08 fc0c 	mul.w	ip, r8, ip
 801a368:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 801a36c:	fb08 f80e 	mul.w	r8, r8, lr
 801a370:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801a374:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a378:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a37c:	44e6      	add	lr, ip
 801a37e:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801a382:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801a386:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a38a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a38e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a392:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a396:	ea4e 0608 	orr.w	r6, lr, r8
 801a39a:	960b      	str	r6, [sp, #44]	; 0x2c
 801a39c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a3a0:	d01e      	beq.n	801a3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 801a3a2:	9e08      	ldr	r6, [sp, #32]
 801a3a4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a3a8:	fb0a f808 	mul.w	r8, sl, r8
 801a3ac:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801a3b0:	fb0a fa0c 	mul.w	sl, sl, ip
 801a3b4:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801a3b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3bc:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801a3c0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a3c4:	44c6      	add	lr, r8
 801a3c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a3ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a3ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a3da:	ea4e 060a 	orr.w	r6, lr, sl
 801a3de:	9608      	str	r6, [sp, #32]
 801a3e0:	2dff      	cmp	r5, #255	; 0xff
 801a3e2:	d01d      	beq.n	801a420 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 801a3e4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a3e6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a3ea:	fb05 f808 	mul.w	r8, r5, r8
 801a3ee:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801a3f2:	fb05 f50c 	mul.w	r5, r5, ip
 801a3f6:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801a3fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3fe:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801a402:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a406:	44c6      	add	lr, r8
 801a408:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a40c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a410:	0a2d      	lsrs	r5, r5, #8
 801a412:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a416:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a41a:	ea4e 0505 	orr.w	r5, lr, r5
 801a41e:	950c      	str	r5, [sp, #48]	; 0x30
 801a420:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a422:	9e08      	ldr	r6, [sp, #32]
 801a424:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a428:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a42c:	fb09 f505 	mul.w	r5, r9, r5
 801a430:	fb02 550c 	mla	r5, r2, ip, r5
 801a434:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801a438:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a43a:	fb01 550c 	mla	r5, r1, ip, r5
 801a43e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801a442:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801a444:	fb0b 550c 	mla	r5, fp, ip, r5
 801a448:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801a44c:	fb09 f90c 	mul.w	r9, r9, ip
 801a450:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a454:	fb02 9303 	mla	r3, r2, r3, r9
 801a458:	9a08      	ldr	r2, [sp, #32]
 801a45a:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801a45e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a460:	fb01 330e 	mla	r3, r1, lr, r3
 801a464:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801a468:	fb0b 3b01 	mla	fp, fp, r1, r3
 801a46c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a46e:	0a2d      	lsrs	r5, r5, #8
 801a470:	f8b3 c000 	ldrh.w	ip, [r3]
 801a474:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801a478:	fb00 f307 	mul.w	r3, r0, r7
 801a47c:	1c58      	adds	r0, r3, #1
 801a47e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a482:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801a486:	ea45 050b 	orr.w	r5, r5, fp
 801a48a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a48e:	0c29      	lsrs	r1, r5, #16
 801a490:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801a494:	ea4f 232c 	mov.w	r3, ip, asr #8
 801a498:	b2c0      	uxtb	r0, r0
 801a49a:	fb11 f107 	smulbb	r1, r1, r7
 801a49e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a4a2:	fb03 1300 	mla	r3, r3, r0, r1
 801a4a6:	b299      	uxth	r1, r3
 801a4a8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a4ac:	f3c5 2307 	ubfx	r3, r5, #8, #8
 801a4b0:	fb13 f307 	smulbb	r3, r3, r7
 801a4b4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a4b8:	fb02 3200 	mla	r2, r2, r0, r3
 801a4bc:	b2ed      	uxtb	r5, r5
 801a4be:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801a4c2:	b2db      	uxtb	r3, r3
 801a4c4:	fb15 f507 	smulbb	r5, r5, r7
 801a4c8:	fb03 5500 	mla	r5, r3, r0, r5
 801a4cc:	b292      	uxth	r2, r2
 801a4ce:	b2ad      	uxth	r5, r5
 801a4d0:	1c4b      	adds	r3, r1, #1
 801a4d2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a4d6:	1c68      	adds	r0, r5, #1
 801a4d8:	1c51      	adds	r1, r2, #1
 801a4da:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801a4de:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a4e2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a4e6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a4ea:	0952      	lsrs	r2, r2, #5
 801a4ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a4f0:	432b      	orrs	r3, r5
 801a4f2:	4313      	orrs	r3, r2
 801a4f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a4f6:	8013      	strh	r3, [r2, #0]
 801a4f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a4fa:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a4fc:	3302      	adds	r3, #2
 801a4fe:	9311      	str	r3, [sp, #68]	; 0x44
 801a500:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a502:	4413      	add	r3, r2
 801a504:	932b      	str	r3, [sp, #172]	; 0xac
 801a506:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a508:	441c      	add	r4, r3
 801a50a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a50c:	3b01      	subs	r3, #1
 801a50e:	9314      	str	r3, [sp, #80]	; 0x50
 801a510:	e6ae      	b.n	801a270 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 801a512:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a514:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a516:	4413      	add	r3, r2
 801a518:	932b      	str	r3, [sp, #172]	; 0xac
 801a51a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a51c:	441c      	add	r4, r3
 801a51e:	9b06      	ldr	r3, [sp, #24]
 801a520:	3b01      	subs	r3, #1
 801a522:	9306      	str	r3, [sp, #24]
 801a524:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a526:	3302      	adds	r3, #2
 801a528:	930a      	str	r3, [sp, #40]	; 0x28
 801a52a:	e653      	b.n	801a1d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801a52c:	f47f ae65 	bne.w	801a1fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801a530:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a532:	2b00      	cmp	r3, #0
 801a534:	f340 81a0 	ble.w	801a878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 801a538:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a53c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a540:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a544:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a546:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a54a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a54e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a552:	eef0 6a48 	vmov.f32	s13, s16
 801a556:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a55a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a55e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a562:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 801a566:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a56a:	eef0 6a68 	vmov.f32	s13, s17
 801a56e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a572:	ee18 2a10 	vmov	r2, s16
 801a576:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a57a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a57e:	ee18 2a90 	vmov	r2, s17
 801a582:	932d      	str	r3, [sp, #180]	; 0xb4
 801a584:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a586:	fb92 f3f3 	sdiv	r3, r2, r3
 801a58a:	932e      	str	r3, [sp, #184]	; 0xb8
 801a58c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a58e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801a590:	3b01      	subs	r3, #1
 801a592:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a596:	9313      	str	r3, [sp, #76]	; 0x4c
 801a598:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a59a:	bf08      	it	eq
 801a59c:	4613      	moveq	r3, r2
 801a59e:	ee16 4a90 	vmov	r4, s13
 801a5a2:	9306      	str	r3, [sp, #24]
 801a5a4:	eef0 8a67 	vmov.f32	s17, s15
 801a5a8:	eeb0 8a47 	vmov.f32	s16, s14
 801a5ac:	e60b      	b.n	801a1c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801a5ae:	b151      	cbz	r1, 801a5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801a5b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a5b2:	58aa      	ldr	r2, [r5, r2]
 801a5b4:	9208      	str	r2, [sp, #32]
 801a5b6:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 801a5ba:	25ff      	movs	r5, #255	; 0xff
 801a5bc:	46a8      	mov	r8, r5
 801a5be:	e68f      	b.n	801a2e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 801a5c0:	25ff      	movs	r5, #255	; 0xff
 801a5c2:	46aa      	mov	sl, r5
 801a5c4:	e68c      	b.n	801a2e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 801a5c6:	25ff      	movs	r5, #255	; 0xff
 801a5c8:	46aa      	mov	sl, r5
 801a5ca:	e7f7      	b.n	801a5bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 801a5cc:	1c56      	adds	r6, r2, #1
 801a5ce:	d193      	bne.n	801a4f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a5d0:	9d07      	ldr	r5, [sp, #28]
 801a5d2:	4295      	cmp	r5, r2
 801a5d4:	dd90      	ble.n	801a4f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a5d6:	1c5d      	adds	r5, r3, #1
 801a5d8:	db8e      	blt.n	801a4f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a5da:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a5dc:	429d      	cmp	r5, r3
 801a5de:	dd8b      	ble.n	801a4f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a5e0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a5e2:	9201      	str	r2, [sp, #4]
 801a5e4:	e9cd 3002 	strd	r3, r0, [sp, #8]
 801a5e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a5ea:	9300      	str	r3, [sp, #0]
 801a5ec:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801a5f0:	9b07      	ldr	r3, [sp, #28]
 801a5f2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801a5f4:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 801a5f8:	f7ff fc4e 	bl	8019e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801a5fc:	e77c      	b.n	801a4f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a5fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a600:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a602:	9d07      	ldr	r5, [sp, #28]
 801a604:	1412      	asrs	r2, r2, #16
 801a606:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801a60a:	1423      	asrs	r3, r4, #16
 801a60c:	fb05 2303 	mla	r3, r5, r3, r2
 801a610:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a612:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 801a616:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801a61a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a61e:	0e1e      	lsrs	r6, r3, #24
 801a620:	2900      	cmp	r1, #0
 801a622:	f000 811a 	beq.w	801a85a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 801a626:	686a      	ldr	r2, [r5, #4]
 801a628:	920d      	str	r2, [sp, #52]	; 0x34
 801a62a:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 801a62e:	2800      	cmp	r0, #0
 801a630:	f000 811c 	beq.w	801a86c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 801a634:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a636:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801a638:	18aa      	adds	r2, r5, r2
 801a63a:	59ed      	ldr	r5, [r5, r7]
 801a63c:	6852      	ldr	r2, [r2, #4]
 801a63e:	9509      	str	r5, [sp, #36]	; 0x24
 801a640:	ea4f 6815 	mov.w	r8, r5, lsr #24
 801a644:	920f      	str	r2, [sp, #60]	; 0x3c
 801a646:	0e15      	lsrs	r5, r2, #24
 801a648:	b289      	uxth	r1, r1
 801a64a:	b280      	uxth	r0, r0
 801a64c:	fb01 f900 	mul.w	r9, r1, r0
 801a650:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a654:	0109      	lsls	r1, r1, #4
 801a656:	eba1 0e09 	sub.w	lr, r1, r9
 801a65a:	b280      	uxth	r0, r0
 801a65c:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801a660:	fa1f fe8e 	uxth.w	lr, lr
 801a664:	1a12      	subs	r2, r2, r0
 801a666:	b292      	uxth	r2, r2
 801a668:	fb0e f10c 	mul.w	r1, lr, ip
 801a66c:	fb02 1106 	mla	r1, r2, r6, r1
 801a670:	fb00 1108 	mla	r1, r0, r8, r1
 801a674:	fb09 1105 	mla	r1, r9, r5, r1
 801a678:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a67c:	2900      	cmp	r1, #0
 801a67e:	f000 80e0 	beq.w	801a842 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 801a682:	2eff      	cmp	r6, #255	; 0xff
 801a684:	d016      	beq.n	801a6b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 801a686:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801a68a:	4377      	muls	r7, r6
 801a68c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a690:	435e      	muls	r6, r3
 801a692:	0a3b      	lsrs	r3, r7, #8
 801a694:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a698:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a69c:	443b      	add	r3, r7
 801a69e:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801a6a2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a6a6:	0a1b      	lsrs	r3, r3, #8
 801a6a8:	0a3f      	lsrs	r7, r7, #8
 801a6aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a6ae:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a6b2:	433b      	orrs	r3, r7
 801a6b4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a6b8:	d01d      	beq.n	801a6f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801a6ba:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801a6bc:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801a6be:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a6c2:	fb0c f606 	mul.w	r6, ip, r6
 801a6c6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a6ca:	fb0c fc07 	mul.w	ip, ip, r7
 801a6ce:	0a37      	lsrs	r7, r6, #8
 801a6d0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a6d4:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 801a6d8:	4437      	add	r7, r6
 801a6da:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 801a6de:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801a6e2:	0a3f      	lsrs	r7, r7, #8
 801a6e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a6e8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a6ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a6f0:	ea47 060c 	orr.w	r6, r7, ip
 801a6f4:	960d      	str	r6, [sp, #52]	; 0x34
 801a6f6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a6fa:	d01d      	beq.n	801a738 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 801a6fc:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801a6fe:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801a702:	fb08 fc0c 	mul.w	ip, r8, ip
 801a706:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a70a:	fb08 f806 	mul.w	r8, r8, r6
 801a70e:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801a712:	f508 7680 	add.w	r6, r8, #256	; 0x100
 801a716:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a71a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a71e:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 801a722:	4467      	add	r7, ip
 801a724:	0a3f      	lsrs	r7, r7, #8
 801a726:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a72a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a72e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a732:	ea47 0608 	orr.w	r6, r7, r8
 801a736:	9609      	str	r6, [sp, #36]	; 0x24
 801a738:	2dff      	cmp	r5, #255	; 0xff
 801a73a:	d01a      	beq.n	801a772 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 801a73c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801a73e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801a742:	fb05 fc0c 	mul.w	ip, r5, ip
 801a746:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a74a:	4375      	muls	r5, r6
 801a74c:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801a750:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a754:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a758:	f505 7680 	add.w	r6, r5, #256	; 0x100
 801a75c:	4467      	add	r7, ip
 801a75e:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 801a762:	0a3f      	lsrs	r7, r7, #8
 801a764:	0a2d      	lsrs	r5, r5, #8
 801a766:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a76a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a76e:	433d      	orrs	r5, r7
 801a770:	950f      	str	r5, [sp, #60]	; 0x3c
 801a772:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a774:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a778:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 801a77c:	fb0e f505 	mul.w	r5, lr, r5
 801a780:	fb02 5506 	mla	r5, r2, r6, r5
 801a784:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801a786:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a78a:	fb00 5506 	mla	r5, r0, r6, r5
 801a78e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801a790:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a794:	fb09 5506 	mla	r5, r9, r6, r5
 801a798:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801a79a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a79e:	fb0e fe06 	mul.w	lr, lr, r6
 801a7a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a7a6:	fb02 e303 	mla	r3, r2, r3, lr
 801a7aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a7ac:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801a7b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a7b2:	fb00 3307 	mla	r3, r0, r7, r3
 801a7b6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801a7ba:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a7be:	fb01 f10b 	mul.w	r1, r1, fp
 801a7c2:	0a2d      	lsrs	r5, r5, #8
 801a7c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a7c8:	f8ba 0000 	ldrh.w	r0, [sl]
 801a7cc:	1c4b      	adds	r3, r1, #1
 801a7ce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a7d2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a7d6:	ea45 050c 	orr.w	r5, r5, ip
 801a7da:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a7de:	1202      	asrs	r2, r0, #8
 801a7e0:	0c2b      	lsrs	r3, r5, #16
 801a7e2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a7e6:	b2c9      	uxtb	r1, r1
 801a7e8:	fb13 f30b 	smulbb	r3, r3, fp
 801a7ec:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a7f0:	fb02 3201 	mla	r2, r2, r1, r3
 801a7f4:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801a7f8:	10c3      	asrs	r3, r0, #3
 801a7fa:	b2ed      	uxtb	r5, r5
 801a7fc:	00c0      	lsls	r0, r0, #3
 801a7fe:	b2c0      	uxtb	r0, r0
 801a800:	fb15 f50b 	smulbb	r5, r5, fp
 801a804:	fb00 5001 	mla	r0, r0, r1, r5
 801a808:	b292      	uxth	r2, r2
 801a80a:	fb16 f60b 	smulbb	r6, r6, fp
 801a80e:	b280      	uxth	r0, r0
 801a810:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a814:	fb03 6301 	mla	r3, r3, r1, r6
 801a818:	1c51      	adds	r1, r2, #1
 801a81a:	1c46      	adds	r6, r0, #1
 801a81c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a820:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801a824:	b29b      	uxth	r3, r3
 801a826:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a82a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a82e:	4332      	orrs	r2, r6
 801a830:	1c5e      	adds	r6, r3, #1
 801a832:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801a836:	095b      	lsrs	r3, r3, #5
 801a838:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a83c:	431a      	orrs	r2, r3
 801a83e:	f8aa 2000 	strh.w	r2, [sl]
 801a842:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a844:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a846:	4413      	add	r3, r2
 801a848:	932b      	str	r3, [sp, #172]	; 0xac
 801a84a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a84c:	441c      	add	r4, r3
 801a84e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a850:	3b01      	subs	r3, #1
 801a852:	f10a 0a02 	add.w	sl, sl, #2
 801a856:	9311      	str	r3, [sp, #68]	; 0x44
 801a858:	e4ea      	b.n	801a230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801a85a:	b150      	cbz	r0, 801a872 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 801a85c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a85e:	58aa      	ldr	r2, [r5, r2]
 801a860:	9209      	str	r2, [sp, #36]	; 0x24
 801a862:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a866:	25ff      	movs	r5, #255	; 0xff
 801a868:	46ac      	mov	ip, r5
 801a86a:	e6ed      	b.n	801a648 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801a86c:	25ff      	movs	r5, #255	; 0xff
 801a86e:	46a8      	mov	r8, r5
 801a870:	e6ea      	b.n	801a648 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801a872:	25ff      	movs	r5, #255	; 0xff
 801a874:	46a8      	mov	r8, r5
 801a876:	e7f7      	b.n	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801a878:	b019      	add	sp, #100	; 0x64
 801a87a:	ecbd 8b08 	vpop	{d8-d11}
 801a87e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801a884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a888:	8808      	ldrh	r0, [r1, #0]
 801a88a:	b085      	sub	sp, #20
 801a88c:	1206      	asrs	r6, r0, #8
 801a88e:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 801a892:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a896:	9600      	str	r6, [sp, #0]
 801a898:	10c6      	asrs	r6, r0, #3
 801a89a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a89e:	9601      	str	r6, [sp, #4]
 801a8a0:	00c0      	lsls	r0, r0, #3
 801a8a2:	fb04 c603 	mla	r6, r4, r3, ip
 801a8a6:	b2c0      	uxtb	r0, r0
 801a8a8:	4691      	mov	r9, r2
 801a8aa:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 801a8ae:	9a00      	ldr	r2, [sp, #0]
 801a8b0:	9002      	str	r0, [sp, #8]
 801a8b2:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801a8b6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801a8ba:	9a01      	ldr	r2, [sp, #4]
 801a8bc:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 801a8c0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801a8c4:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801a8c8:	2c00      	cmp	r4, #0
 801a8ca:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801a8ce:	db3a      	blt.n	801a946 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 801a8d0:	45a0      	cmp	r8, r4
 801a8d2:	dd38      	ble.n	801a946 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 801a8d4:	f1bc 0f00 	cmp.w	ip, #0
 801a8d8:	db33      	blt.n	801a942 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801a8da:	4563      	cmp	r3, ip
 801a8dc:	dd31      	ble.n	801a942 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801a8de:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 801a8e2:	f11c 0601 	adds.w	r6, ip, #1
 801a8e6:	d431      	bmi.n	801a94c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801a8e8:	42b3      	cmp	r3, r6
 801a8ea:	dd2f      	ble.n	801a94c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801a8ec:	b375      	cbz	r5, 801a94c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801a8ee:	f8de 6004 	ldr.w	r6, [lr, #4]
 801a8f2:	3401      	adds	r4, #1
 801a8f4:	d42e      	bmi.n	801a954 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801a8f6:	45a0      	cmp	r8, r4
 801a8f8:	dd2c      	ble.n	801a954 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801a8fa:	b35f      	cbz	r7, 801a954 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801a8fc:	f1bc 0f00 	cmp.w	ip, #0
 801a900:	db26      	blt.n	801a950 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801a902:	4563      	cmp	r3, ip
 801a904:	dd24      	ble.n	801a950 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801a906:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801a90a:	f11c 0c01 	adds.w	ip, ip, #1
 801a90e:	d405      	bmi.n	801a91c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801a910:	4563      	cmp	r3, ip
 801a912:	dd03      	ble.n	801a91c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801a914:	b115      	cbz	r5, 801a91c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801a916:	3301      	adds	r3, #1
 801a918:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 801a91c:	2d0f      	cmp	r5, #15
 801a91e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a922:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a926:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a92a:	ea4f 6810 	mov.w	r8, r0, lsr #24
 801a92e:	d801      	bhi.n	801a934 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 801a930:	2f0f      	cmp	r7, #15
 801a932:	d911      	bls.n	801a958 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 801a934:	4b7b      	ldr	r3, [pc, #492]	; (801ab24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801a936:	4a7c      	ldr	r2, [pc, #496]	; (801ab28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801a938:	487c      	ldr	r0, [pc, #496]	; (801ab2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 801a93a:	f240 210d 	movw	r1, #525	; 0x20d
 801a93e:	f001 fd1d 	bl	801c37c <__assert_func>
 801a942:	4602      	mov	r2, r0
 801a944:	e7cd      	b.n	801a8e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801a946:	4606      	mov	r6, r0
 801a948:	4602      	mov	r2, r0
 801a94a:	e7d2      	b.n	801a8f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 801a94c:	4606      	mov	r6, r0
 801a94e:	e7d0      	b.n	801a8f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 801a950:	4604      	mov	r4, r0
 801a952:	e7da      	b.n	801a90a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801a954:	4604      	mov	r4, r0
 801a956:	e7e1      	b.n	801a91c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801a958:	b2ab      	uxth	r3, r5
 801a95a:	b2bf      	uxth	r7, r7
 801a95c:	fb03 fe07 	mul.w	lr, r3, r7
 801a960:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a964:	011b      	lsls	r3, r3, #4
 801a966:	eba3 0c0e 	sub.w	ip, r3, lr
 801a96a:	b2bf      	uxth	r7, r7
 801a96c:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 801a970:	fa1f fc8c 	uxth.w	ip, ip
 801a974:	1bed      	subs	r5, r5, r7
 801a976:	b2ad      	uxth	r5, r5
 801a978:	fb0c f30a 	mul.w	r3, ip, sl
 801a97c:	fb05 330b 	mla	r3, r5, fp, r3
 801a980:	fb07 3309 	mla	r3, r7, r9, r3
 801a984:	fb0e 3308 	mla	r3, lr, r8, r3
 801a988:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a98c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a990:	9303      	str	r3, [sp, #12]
 801a992:	d018      	beq.n	801a9c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 801a994:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801a998:	fb0b f303 	mul.w	r3, fp, r3
 801a99c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a9a0:	fb0b fb02 	mul.w	fp, fp, r2
 801a9a4:	0a1a      	lsrs	r2, r3, #8
 801a9a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a9aa:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801a9ae:	441a      	add	r2, r3
 801a9b0:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801a9b4:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801a9b8:	0a12      	lsrs	r2, r2, #8
 801a9ba:	0a1b      	lsrs	r3, r3, #8
 801a9bc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a9c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a9c4:	431a      	orrs	r2, r3
 801a9c6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a9ca:	d019      	beq.n	801aa00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 801a9cc:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801a9d0:	fb0a fb0b 	mul.w	fp, sl, fp
 801a9d4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a9d8:	fb0a fa06 	mul.w	sl, sl, r6
 801a9dc:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801a9e0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a9e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a9e8:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801a9ec:	445e      	add	r6, fp
 801a9ee:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801a9f2:	0a36      	lsrs	r6, r6, #8
 801a9f4:	0a1b      	lsrs	r3, r3, #8
 801a9f6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a9fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a9fe:	431e      	orrs	r6, r3
 801aa00:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801aa04:	d019      	beq.n	801aa3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801aa06:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801aa0a:	fb09 fa0a 	mul.w	sl, r9, sl
 801aa0e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801aa12:	fb09 f904 	mul.w	r9, r9, r4
 801aa16:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801aa1a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801aa1e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801aa22:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801aa26:	4454      	add	r4, sl
 801aa28:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801aa2c:	0a24      	lsrs	r4, r4, #8
 801aa2e:	0a1b      	lsrs	r3, r3, #8
 801aa30:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801aa34:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aa38:	431c      	orrs	r4, r3
 801aa3a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801aa3e:	d019      	beq.n	801aa74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 801aa40:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801aa44:	fb08 f909 	mul.w	r9, r8, r9
 801aa48:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801aa4c:	fb08 f800 	mul.w	r8, r8, r0
 801aa50:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801aa54:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801aa58:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801aa5c:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801aa60:	4448      	add	r0, r9
 801aa62:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801aa66:	0a00      	lsrs	r0, r0, #8
 801aa68:	0a1b      	lsrs	r3, r3, #8
 801aa6a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801aa6e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aa72:	4318      	orrs	r0, r3
 801aa74:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801aa78:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801aa7c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801aa80:	fb0c f808 	mul.w	r8, ip, r8
 801aa84:	fb0c f606 	mul.w	r6, ip, r6
 801aa88:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801aa8c:	fb05 8803 	mla	r8, r5, r3, r8
 801aa90:	fb05 6202 	mla	r2, r5, r2, r6
 801aa94:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801aa98:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801aa9c:	fb07 8803 	mla	r8, r7, r3, r8
 801aaa0:	fb07 2704 	mla	r7, r7, r4, r2
 801aaa4:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801aaa8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801aaac:	fb0e 8303 	mla	r3, lr, r3, r8
 801aab0:	fb0e 7e00 	mla	lr, lr, r0, r7
 801aab4:	0a1b      	lsrs	r3, r3, #8
 801aab6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aaba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aabe:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801aac2:	ea43 0e0e 	orr.w	lr, r3, lr
 801aac6:	9b03      	ldr	r3, [sp, #12]
 801aac8:	9800      	ldr	r0, [sp, #0]
 801aaca:	9c01      	ldr	r4, [sp, #4]
 801aacc:	9a02      	ldr	r2, [sp, #8]
 801aace:	43db      	mvns	r3, r3
 801aad0:	b2db      	uxtb	r3, r3
 801aad2:	4358      	muls	r0, r3
 801aad4:	435c      	muls	r4, r3
 801aad6:	435a      	muls	r2, r3
 801aad8:	1c43      	adds	r3, r0, #1
 801aada:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801aade:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801aae2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801aae6:	4b12      	ldr	r3, [pc, #72]	; (801ab30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 801aae8:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 801aaec:	1c50      	adds	r0, r2, #1
 801aaee:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801aaf2:	fa5f f28e 	uxtb.w	r2, lr
 801aaf6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801aafa:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801aafe:	1c62      	adds	r2, r4, #1
 801ab00:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ab04:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801ab08:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801ab0c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab10:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ab14:	ea43 0e0e 	orr.w	lr, r3, lr
 801ab18:	f8a1 e000 	strh.w	lr, [r1]
 801ab1c:	b005      	add	sp, #20
 801ab1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab22:	bf00      	nop
 801ab24:	08020dcd 	.word	0x08020dcd
 801ab28:	08021325 	.word	0x08021325
 801ab2c:	08020e55 	.word	0x08020e55
 801ab30:	fffff800 	.word	0xfffff800

0801ab34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801ab34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab38:	ed2d 8b08 	vpush	{d8-d11}
 801ab3c:	b097      	sub	sp, #92	; 0x5c
 801ab3e:	eeb0 aa40 	vmov.f32	s20, s0
 801ab42:	9306      	str	r3, [sp, #24]
 801ab44:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 801ab48:	9307      	str	r3, [sp, #28]
 801ab4a:	9214      	str	r2, [sp, #80]	; 0x50
 801ab4c:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 801ab50:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ab52:	9112      	str	r1, [sp, #72]	; 0x48
 801ab54:	9310      	str	r3, [sp, #64]	; 0x40
 801ab56:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ab5a:	9015      	str	r0, [sp, #84]	; 0x54
 801ab5c:	6850      	ldr	r0, [r2, #4]
 801ab5e:	6812      	ldr	r2, [r2, #0]
 801ab60:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ab62:	fb00 1303 	mla	r3, r0, r3, r1
 801ab66:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ab6a:	930a      	str	r3, [sp, #40]	; 0x28
 801ab6c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801ab6e:	681b      	ldr	r3, [r3, #0]
 801ab70:	9311      	str	r3, [sp, #68]	; 0x44
 801ab72:	9b07      	ldr	r3, [sp, #28]
 801ab74:	009b      	lsls	r3, r3, #2
 801ab76:	eef0 9a60 	vmov.f32	s19, s1
 801ab7a:	eeb0 9a41 	vmov.f32	s18, s2
 801ab7e:	eeb0 8a62 	vmov.f32	s16, s5
 801ab82:	eef0 8a43 	vmov.f32	s17, s6
 801ab86:	eef0 ba44 	vmov.f32	s23, s8
 801ab8a:	eeb0 ba64 	vmov.f32	s22, s9
 801ab8e:	eef0 aa45 	vmov.f32	s21, s10
 801ab92:	930e      	str	r3, [sp, #56]	; 0x38
 801ab94:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ab96:	2b00      	cmp	r3, #0
 801ab98:	dc03      	bgt.n	801aba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801ab9a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ab9c:	2b00      	cmp	r3, #0
 801ab9e:	f340 8361 	ble.w	801b264 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801aba2:	9b06      	ldr	r3, [sp, #24]
 801aba4:	2b00      	cmp	r3, #0
 801aba6:	f340 819b 	ble.w	801aee0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 801abaa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801abac:	1412      	asrs	r2, r2, #16
 801abae:	ea4f 4325 	mov.w	r3, r5, asr #16
 801abb2:	d42e      	bmi.n	801ac12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801abb4:	9807      	ldr	r0, [sp, #28]
 801abb6:	1c51      	adds	r1, r2, #1
 801abb8:	4288      	cmp	r0, r1
 801abba:	dd2d      	ble.n	801ac18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801abbc:	2b00      	cmp	r3, #0
 801abbe:	db2b      	blt.n	801ac18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801abc0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801abc2:	1c59      	adds	r1, r3, #1
 801abc4:	4288      	cmp	r0, r1
 801abc6:	dd27      	ble.n	801ac18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801abc8:	9b06      	ldr	r3, [sp, #24]
 801abca:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801abcc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801abce:	3b01      	subs	r3, #1
 801abd0:	fb02 1203 	mla	r2, r2, r3, r1
 801abd4:	1412      	asrs	r2, r2, #16
 801abd6:	d42a      	bmi.n	801ac2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801abd8:	9907      	ldr	r1, [sp, #28]
 801abda:	3201      	adds	r2, #1
 801abdc:	4291      	cmp	r1, r2
 801abde:	dd26      	ble.n	801ac2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801abe0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801abe2:	fb02 5303 	mla	r3, r2, r3, r5
 801abe6:	141b      	asrs	r3, r3, #16
 801abe8:	d421      	bmi.n	801ac2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801abea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801abec:	3301      	adds	r3, #1
 801abee:	429a      	cmp	r2, r3
 801abf0:	dd1d      	ble.n	801ac2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801abf2:	9b06      	ldr	r3, [sp, #24]
 801abf4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801abf8:	9313      	str	r3, [sp, #76]	; 0x4c
 801abfa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801abfc:	2b00      	cmp	r3, #0
 801abfe:	f300 81e3 	bgt.w	801afc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 801ac02:	9b06      	ldr	r3, [sp, #24]
 801ac04:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ac08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ac0a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ac0e:	930a      	str	r3, [sp, #40]	; 0x28
 801ac10:	e168      	b.n	801aee4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 801ac12:	1c51      	adds	r1, r2, #1
 801ac14:	f040 8157 	bne.w	801aec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801ac18:	9907      	ldr	r1, [sp, #28]
 801ac1a:	428a      	cmp	r2, r1
 801ac1c:	f280 8153 	bge.w	801aec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801ac20:	1c5f      	adds	r7, r3, #1
 801ac22:	f2c0 8150 	blt.w	801aec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801ac26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ac28:	4293      	cmp	r3, r2
 801ac2a:	f280 814c 	bge.w	801aec6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801ac2e:	9b06      	ldr	r3, [sp, #24]
 801ac30:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ac32:	9313      	str	r3, [sp, #76]	; 0x4c
 801ac34:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ac36:	2b00      	cmp	r3, #0
 801ac38:	dde3      	ble.n	801ac02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801ac3a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801ac3c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ac3e:	1409      	asrs	r1, r1, #16
 801ac40:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ac44:	f3c2 3203 	ubfx	r2, r2, #12, #4
 801ac48:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ac4c:	f100 81a3 	bmi.w	801af96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 801ac50:	9c07      	ldr	r4, [sp, #28]
 801ac52:	1c4e      	adds	r6, r1, #1
 801ac54:	42b4      	cmp	r4, r6
 801ac56:	f340 81a0 	ble.w	801af9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801ac5a:	2b00      	cmp	r3, #0
 801ac5c:	f2c0 819d 	blt.w	801af9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801ac60:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ac62:	1c5e      	adds	r6, r3, #1
 801ac64:	42b4      	cmp	r4, r6
 801ac66:	f340 8198 	ble.w	801af9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801ac6a:	9c07      	ldr	r4, [sp, #28]
 801ac6c:	fb03 1304 	mla	r3, r3, r4, r1
 801ac70:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ac72:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 801ac76:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801ac7a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ac7e:	2a00      	cmp	r2, #0
 801ac80:	f000 816f 	beq.w	801af62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 801ac84:	6871      	ldr	r1, [r6, #4]
 801ac86:	910b      	str	r1, [sp, #44]	; 0x2c
 801ac88:	ea4f 6811 	mov.w	r8, r1, lsr #24
 801ac8c:	2800      	cmp	r0, #0
 801ac8e:	f000 8171 	beq.w	801af74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 801ac92:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ac94:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ac96:	1871      	adds	r1, r6, r1
 801ac98:	5934      	ldr	r4, [r6, r4]
 801ac9a:	6849      	ldr	r1, [r1, #4]
 801ac9c:	9408      	str	r4, [sp, #32]
 801ac9e:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 801aca2:	910c      	str	r1, [sp, #48]	; 0x30
 801aca4:	0e0e      	lsrs	r6, r1, #24
 801aca6:	b292      	uxth	r2, r2
 801aca8:	b280      	uxth	r0, r0
 801acaa:	fb02 fb00 	mul.w	fp, r2, r0
 801acae:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801acb2:	0112      	lsls	r2, r2, #4
 801acb4:	eba2 090b 	sub.w	r9, r2, fp
 801acb8:	b280      	uxth	r0, r0
 801acba:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801acbe:	fa1f f989 	uxth.w	r9, r9
 801acc2:	1a09      	subs	r1, r1, r0
 801acc4:	b289      	uxth	r1, r1
 801acc6:	fb09 f208 	mul.w	r2, r9, r8
 801acca:	fb01 220c 	mla	r2, r1, ip, r2
 801acce:	fb00 220a 	mla	r2, r0, sl, r2
 801acd2:	fb0b 2206 	mla	r2, fp, r6, r2
 801acd6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801acda:	2a00      	cmp	r2, #0
 801acdc:	f000 80e8 	beq.w	801aeb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801ace0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ace4:	d01b      	beq.n	801ad1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801ace6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801acea:	fb0c fe0e 	mul.w	lr, ip, lr
 801acee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801acf2:	fb0c fc03 	mul.w	ip, ip, r3
 801acf6:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801acfa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801acfe:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801ad02:	4473      	add	r3, lr
 801ad04:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801ad08:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 801ad0c:	0a1b      	lsrs	r3, r3, #8
 801ad0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ad12:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad16:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801ad1a:	ea43 030e 	orr.w	r3, r3, lr
 801ad1e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ad22:	d01e      	beq.n	801ad62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 801ad24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ad26:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ad2a:	fb08 fc0c 	mul.w	ip, r8, ip
 801ad2e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801ad32:	fb08 f80e 	mul.w	r8, r8, lr
 801ad36:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801ad3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad3e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ad42:	44e6      	add	lr, ip
 801ad44:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801ad48:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801ad4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ad50:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ad54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad58:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ad5c:	ea4e 0408 	orr.w	r4, lr, r8
 801ad60:	940b      	str	r4, [sp, #44]	; 0x2c
 801ad62:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ad66:	d01e      	beq.n	801ada6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 801ad68:	9c08      	ldr	r4, [sp, #32]
 801ad6a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801ad6e:	fb0a f808 	mul.w	r8, sl, r8
 801ad72:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ad76:	fb0a fa0c 	mul.w	sl, sl, ip
 801ad7a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801ad7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad82:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801ad86:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ad8a:	44c6      	add	lr, r8
 801ad8c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ad90:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ad94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ad98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ada0:	ea4e 040a 	orr.w	r4, lr, sl
 801ada4:	9408      	str	r4, [sp, #32]
 801ada6:	2eff      	cmp	r6, #255	; 0xff
 801ada8:	d01d      	beq.n	801ade6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 801adaa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801adac:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801adb0:	fb06 f808 	mul.w	r8, r6, r8
 801adb4:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801adb8:	fb06 f60c 	mul.w	r6, r6, ip
 801adbc:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801adc0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801adc4:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801adc8:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 801adcc:	44c6      	add	lr, r8
 801adce:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801add2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801add6:	0a36      	lsrs	r6, r6, #8
 801add8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801addc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801ade0:	ea4e 0406 	orr.w	r4, lr, r6
 801ade4:	940c      	str	r4, [sp, #48]	; 0x30
 801ade6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ade8:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801adec:	9c08      	ldr	r4, [sp, #32]
 801adee:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801adf2:	fb09 f606 	mul.w	r6, r9, r6
 801adf6:	fb01 660c 	mla	r6, r1, ip, r6
 801adfa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801adfe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ae00:	fb00 660c 	mla	r6, r0, ip, r6
 801ae04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ae08:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ae0a:	fb0b 660c 	mla	r6, fp, ip, r6
 801ae0e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ae12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ae16:	fb09 f90c 	mul.w	r9, r9, ip
 801ae1a:	fb01 9303 	mla	r3, r1, r3, r9
 801ae1e:	9908      	ldr	r1, [sp, #32]
 801ae20:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801ae24:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ae26:	fb00 330e 	mla	r3, r0, lr, r3
 801ae2a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801ae2e:	fb0b 3b00 	mla	fp, fp, r0, r3
 801ae32:	0a36      	lsrs	r6, r6, #8
 801ae34:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801ae38:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801ae3c:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801ae40:	ea46 060b 	orr.w	r6, r6, fp
 801ae44:	2aff      	cmp	r2, #255	; 0xff
 801ae46:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801ae4a:	f000 8099 	beq.w	801af80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 801ae4e:	8839      	ldrh	r1, [r7, #0]
 801ae50:	43d2      	mvns	r2, r2
 801ae52:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ae56:	fa5f fe82 	uxtb.w	lr, r2
 801ae5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ae5e:	fb0c fc0e 	mul.w	ip, ip, lr
 801ae62:	10c8      	asrs	r0, r1, #3
 801ae64:	00ca      	lsls	r2, r1, #3
 801ae66:	f10c 0101 	add.w	r1, ip, #1
 801ae6a:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801ae6e:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 801ae72:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ae76:	b2d2      	uxtb	r2, r2
 801ae78:	4952      	ldr	r1, [pc, #328]	; (801afc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 801ae7a:	fb02 f20e 	mul.w	r2, r2, lr
 801ae7e:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ae82:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ae86:	1c51      	adds	r1, r2, #1
 801ae88:	fb00 f00e 	mul.w	r0, r0, lr
 801ae8c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ae90:	b2f6      	uxtb	r6, r6
 801ae92:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801ae96:	1c42      	adds	r2, r0, #1
 801ae98:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ae9c:	b2db      	uxtb	r3, r3
 801ae9e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801aea2:	00db      	lsls	r3, r3, #3
 801aea4:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 801aea8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aeac:	431e      	orrs	r6, r3
 801aeae:	803e      	strh	r6, [r7, #0]
 801aeb0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801aeb2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801aeb4:	441a      	add	r2, r3
 801aeb6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801aeb8:	9229      	str	r2, [sp, #164]	; 0xa4
 801aeba:	441d      	add	r5, r3
 801aebc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801aebe:	3b01      	subs	r3, #1
 801aec0:	3702      	adds	r7, #2
 801aec2:	9313      	str	r3, [sp, #76]	; 0x4c
 801aec4:	e6b6      	b.n	801ac34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 801aec6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801aec8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801aeca:	441a      	add	r2, r3
 801aecc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801aece:	9229      	str	r2, [sp, #164]	; 0xa4
 801aed0:	441d      	add	r5, r3
 801aed2:	9b06      	ldr	r3, [sp, #24]
 801aed4:	3b01      	subs	r3, #1
 801aed6:	9306      	str	r3, [sp, #24]
 801aed8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aeda:	3302      	adds	r3, #2
 801aedc:	930a      	str	r3, [sp, #40]	; 0x28
 801aede:	e660      	b.n	801aba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801aee0:	f47f ae72 	bne.w	801abc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801aee4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801aee6:	2b00      	cmp	r3, #0
 801aee8:	f340 81bc 	ble.w	801b264 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801aeec:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801aef0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801aef4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801aef8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aefa:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801aefe:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801af02:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801af06:	eef0 6a48 	vmov.f32	s13, s16
 801af0a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801af0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af12:	ee37 8a48 	vsub.f32	s16, s14, s16
 801af16:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801af1a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801af1e:	eef0 6a68 	vmov.f32	s13, s17
 801af22:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801af26:	ee18 2a10 	vmov	r2, s16
 801af2a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801af2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801af32:	ee18 2a90 	vmov	r2, s17
 801af36:	932b      	str	r3, [sp, #172]	; 0xac
 801af38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801af3e:	932c      	str	r3, [sp, #176]	; 0xb0
 801af40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801af42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801af44:	3b01      	subs	r3, #1
 801af46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af4a:	9312      	str	r3, [sp, #72]	; 0x48
 801af4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af4e:	bf08      	it	eq
 801af50:	4613      	moveq	r3, r2
 801af52:	ee16 5a90 	vmov	r5, s13
 801af56:	9306      	str	r3, [sp, #24]
 801af58:	eef0 8a67 	vmov.f32	s17, s15
 801af5c:	eeb0 8a47 	vmov.f32	s16, s14
 801af60:	e618      	b.n	801ab94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801af62:	b150      	cbz	r0, 801af7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 801af64:	990e      	ldr	r1, [sp, #56]	; 0x38
 801af66:	5871      	ldr	r1, [r6, r1]
 801af68:	9108      	str	r1, [sp, #32]
 801af6a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801af6e:	26ff      	movs	r6, #255	; 0xff
 801af70:	46b0      	mov	r8, r6
 801af72:	e698      	b.n	801aca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801af74:	26ff      	movs	r6, #255	; 0xff
 801af76:	46b2      	mov	sl, r6
 801af78:	e695      	b.n	801aca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801af7a:	26ff      	movs	r6, #255	; 0xff
 801af7c:	46b2      	mov	sl, r6
 801af7e:	e7f7      	b.n	801af70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 801af80:	0972      	lsrs	r2, r6, #5
 801af82:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801af86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af8a:	f023 0307 	bic.w	r3, r3, #7
 801af8e:	4313      	orrs	r3, r2
 801af90:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801af94:	e78a      	b.n	801aeac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 801af96:	1c4e      	adds	r6, r1, #1
 801af98:	d18a      	bne.n	801aeb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801af9a:	9c07      	ldr	r4, [sp, #28]
 801af9c:	428c      	cmp	r4, r1
 801af9e:	dd87      	ble.n	801aeb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801afa0:	1c5c      	adds	r4, r3, #1
 801afa2:	db85      	blt.n	801aeb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801afa4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801afa6:	429c      	cmp	r4, r3
 801afa8:	dd82      	ble.n	801aeb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801afaa:	e9cd 2003 	strd	r2, r0, [sp, #12]
 801afae:	e9cd 1301 	strd	r1, r3, [sp, #4]
 801afb2:	9400      	str	r4, [sp, #0]
 801afb4:	9b07      	ldr	r3, [sp, #28]
 801afb6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801afb8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801afba:	4639      	mov	r1, r7
 801afbc:	f7ff fc62 	bl	801a884 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801afc0:	e776      	b.n	801aeb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801afc2:	bf00      	nop
 801afc4:	fffff800 	.word	0xfffff800
 801afc8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801afca:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801afcc:	9c07      	ldr	r4, [sp, #28]
 801afce:	1409      	asrs	r1, r1, #16
 801afd0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801afd4:	142b      	asrs	r3, r5, #16
 801afd6:	fb04 1303 	mla	r3, r4, r3, r1
 801afda:	9911      	ldr	r1, [sp, #68]	; 0x44
 801afdc:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 801afe0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801afe4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801afe8:	0e1f      	lsrs	r7, r3, #24
 801afea:	2a00      	cmp	r2, #0
 801afec:	f000 811d 	beq.w	801b22a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 801aff0:	6871      	ldr	r1, [r6, #4]
 801aff2:	910d      	str	r1, [sp, #52]	; 0x34
 801aff4:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 801aff8:	2800      	cmp	r0, #0
 801affa:	f000 811f 	beq.w	801b23c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801affe:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b000:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b002:	1871      	adds	r1, r6, r1
 801b004:	5934      	ldr	r4, [r6, r4]
 801b006:	6849      	ldr	r1, [r1, #4]
 801b008:	9409      	str	r4, [sp, #36]	; 0x24
 801b00a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b00e:	910f      	str	r1, [sp, #60]	; 0x3c
 801b010:	0e0e      	lsrs	r6, r1, #24
 801b012:	b292      	uxth	r2, r2
 801b014:	b280      	uxth	r0, r0
 801b016:	fb02 fb00 	mul.w	fp, r2, r0
 801b01a:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801b01e:	0112      	lsls	r2, r2, #4
 801b020:	eba2 080b 	sub.w	r8, r2, fp
 801b024:	b280      	uxth	r0, r0
 801b026:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b02a:	fa1f f888 	uxth.w	r8, r8
 801b02e:	1a09      	subs	r1, r1, r0
 801b030:	b289      	uxth	r1, r1
 801b032:	fb08 f20e 	mul.w	r2, r8, lr
 801b036:	fb01 2207 	mla	r2, r1, r7, r2
 801b03a:	fb00 2209 	mla	r2, r0, r9, r2
 801b03e:	fb0b 2206 	mla	r2, fp, r6, r2
 801b042:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b046:	2a00      	cmp	r2, #0
 801b048:	f000 80e3 	beq.w	801b212 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801b04c:	2fff      	cmp	r7, #255	; 0xff
 801b04e:	d01a      	beq.n	801b086 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 801b050:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b054:	fb07 fc0c 	mul.w	ip, r7, ip
 801b058:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b05c:	435f      	muls	r7, r3
 801b05e:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b062:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b066:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b06a:	4463      	add	r3, ip
 801b06c:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 801b070:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801b074:	0a1b      	lsrs	r3, r3, #8
 801b076:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b07a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b07e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b082:	ea43 030c 	orr.w	r3, r3, ip
 801b086:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b08a:	d01e      	beq.n	801b0ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801b08c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b08e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b092:	fb0e f707 	mul.w	r7, lr, r7
 801b096:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b09a:	fb0e fe0c 	mul.w	lr, lr, ip
 801b09e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b0a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b0a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b0aa:	44bc      	add	ip, r7
 801b0ac:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801b0b0:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801b0b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b0bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b0c0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801b0c4:	ea4c 040e 	orr.w	r4, ip, lr
 801b0c8:	940d      	str	r4, [sp, #52]	; 0x34
 801b0ca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b0ce:	d01e      	beq.n	801b10e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 801b0d0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b0d2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b0d6:	fb09 fe0e 	mul.w	lr, r9, lr
 801b0da:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801b0de:	fb09 f907 	mul.w	r9, r9, r7
 801b0e2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801b0e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b0ea:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801b0ee:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801b0f2:	44f4      	add	ip, lr
 801b0f4:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801b0f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0fc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b100:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b104:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b108:	ea4c 0409 	orr.w	r4, ip, r9
 801b10c:	9409      	str	r4, [sp, #36]	; 0x24
 801b10e:	2eff      	cmp	r6, #255	; 0xff
 801b110:	d01c      	beq.n	801b14c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 801b112:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b114:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b118:	fb06 fe0e 	mul.w	lr, r6, lr
 801b11c:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801b120:	437e      	muls	r6, r7
 801b122:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801b126:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b12a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801b12e:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801b132:	44f4      	add	ip, lr
 801b134:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b138:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b13c:	0a36      	lsrs	r6, r6, #8
 801b13e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b142:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b146:	ea4c 0406 	orr.w	r4, ip, r6
 801b14a:	940f      	str	r4, [sp, #60]	; 0x3c
 801b14c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b14e:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801b152:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b154:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801b158:	fb08 f606 	mul.w	r6, r8, r6
 801b15c:	fb01 6607 	mla	r6, r1, r7, r6
 801b160:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b164:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b166:	fb00 6607 	mla	r6, r0, r7, r6
 801b16a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b16e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b170:	fb0b 6607 	mla	r6, fp, r7, r6
 801b174:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801b178:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b17c:	fb08 f807 	mul.w	r8, r8, r7
 801b180:	fb01 8303 	mla	r3, r1, r3, r8
 801b184:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b186:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801b18a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b18c:	fb00 330c 	mla	r3, r0, ip, r3
 801b190:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801b194:	fb0b 3e0e 	mla	lr, fp, lr, r3
 801b198:	0a36      	lsrs	r6, r6, #8
 801b19a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b19e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b1a2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801b1a6:	ea46 060e 	orr.w	r6, r6, lr
 801b1aa:	2aff      	cmp	r2, #255	; 0xff
 801b1ac:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801b1b0:	d04a      	beq.n	801b248 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801b1b2:	f8ba 1000 	ldrh.w	r1, [sl]
 801b1b6:	43d2      	mvns	r2, r2
 801b1b8:	120f      	asrs	r7, r1, #8
 801b1ba:	fa5f fc82 	uxtb.w	ip, r2
 801b1be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b1c2:	fb07 f70c 	mul.w	r7, r7, ip
 801b1c6:	10c8      	asrs	r0, r1, #3
 801b1c8:	00ca      	lsls	r2, r1, #3
 801b1ca:	1c79      	adds	r1, r7, #1
 801b1cc:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 801b1d0:	0c37      	lsrs	r7, r6, #16
 801b1d2:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801b1d6:	b2d2      	uxtb	r2, r2
 801b1d8:	4925      	ldr	r1, [pc, #148]	; (801b270 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 801b1da:	fb02 f20c 	mul.w	r2, r2, ip
 801b1de:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 801b1e2:	1c51      	adds	r1, r2, #1
 801b1e4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b1e8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b1ec:	b2f6      	uxtb	r6, r6
 801b1ee:	fb00 f00c 	mul.w	r0, r0, ip
 801b1f2:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801b1f6:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 801b1fa:	1c46      	adds	r6, r0, #1
 801b1fc:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 801b200:	b2de      	uxtb	r6, r3
 801b202:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801b206:	00f6      	lsls	r6, r6, #3
 801b208:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b20c:	4337      	orrs	r7, r6
 801b20e:	f8aa 7000 	strh.w	r7, [sl]
 801b212:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b214:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b216:	441a      	add	r2, r3
 801b218:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b21a:	9229      	str	r2, [sp, #164]	; 0xa4
 801b21c:	441d      	add	r5, r3
 801b21e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b220:	3b01      	subs	r3, #1
 801b222:	f10a 0a02 	add.w	sl, sl, #2
 801b226:	9313      	str	r3, [sp, #76]	; 0x4c
 801b228:	e4e7      	b.n	801abfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 801b22a:	b150      	cbz	r0, 801b242 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 801b22c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b22e:	5871      	ldr	r1, [r6, r1]
 801b230:	9109      	str	r1, [sp, #36]	; 0x24
 801b232:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801b236:	26ff      	movs	r6, #255	; 0xff
 801b238:	46b6      	mov	lr, r6
 801b23a:	e6ea      	b.n	801b012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801b23c:	26ff      	movs	r6, #255	; 0xff
 801b23e:	46b1      	mov	r9, r6
 801b240:	e6e7      	b.n	801b012 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801b242:	26ff      	movs	r6, #255	; 0xff
 801b244:	46b1      	mov	r9, r6
 801b246:	e7f7      	b.n	801b238 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 801b248:	0972      	lsrs	r2, r6, #5
 801b24a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801b24e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b252:	f023 0307 	bic.w	r3, r3, #7
 801b256:	4313      	orrs	r3, r2
 801b258:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b25c:	431e      	orrs	r6, r3
 801b25e:	f8aa 6000 	strh.w	r6, [sl]
 801b262:	e7d6      	b.n	801b212 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801b264:	b017      	add	sp, #92	; 0x5c
 801b266:	ecbd 8b08 	vpop	{d8-d11}
 801b26a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b26e:	bf00      	nop
 801b270:	fffff800 	.word	0xfffff800

0801b274 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801b274:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b278:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b27c:	2c00      	cmp	r4, #0
 801b27e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b282:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b286:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b28a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b28e:	fb04 ce03 	mla	lr, r4, r3, ip
 801b292:	db60      	blt.n	801b356 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801b294:	45a1      	cmp	r9, r4
 801b296:	dd5e      	ble.n	801b356 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801b298:	f1bc 0f00 	cmp.w	ip, #0
 801b29c:	db59      	blt.n	801b352 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801b29e:	45e0      	cmp	r8, ip
 801b2a0:	dd57      	ble.n	801b352 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801b2a2:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b2a6:	f01e 0f01 	tst.w	lr, #1
 801b2aa:	5c16      	ldrb	r6, [r2, r0]
 801b2ac:	bf0c      	ite	eq
 801b2ae:	f006 060f 	andeq.w	r6, r6, #15
 801b2b2:	1136      	asrne	r6, r6, #4
 801b2b4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b2b8:	b2f6      	uxtb	r6, r6
 801b2ba:	f11c 0001 	adds.w	r0, ip, #1
 801b2be:	d44d      	bmi.n	801b35c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801b2c0:	4580      	cmp	r8, r0
 801b2c2:	dd4b      	ble.n	801b35c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801b2c4:	2d00      	cmp	r5, #0
 801b2c6:	d04b      	beq.n	801b360 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801b2c8:	f10e 0a01 	add.w	sl, lr, #1
 801b2cc:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b2d0:	f01a 0f01 	tst.w	sl, #1
 801b2d4:	5c10      	ldrb	r0, [r2, r0]
 801b2d6:	bf0c      	ite	eq
 801b2d8:	f000 000f 	andeq.w	r0, r0, #15
 801b2dc:	1100      	asrne	r0, r0, #4
 801b2de:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b2e2:	b2c0      	uxtb	r0, r0
 801b2e4:	3401      	adds	r4, #1
 801b2e6:	d43f      	bmi.n	801b368 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801b2e8:	45a1      	cmp	r9, r4
 801b2ea:	dd3d      	ble.n	801b368 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801b2ec:	2f00      	cmp	r7, #0
 801b2ee:	f000 809e 	beq.w	801b42e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801b2f2:	f1bc 0f00 	cmp.w	ip, #0
 801b2f6:	db35      	blt.n	801b364 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801b2f8:	45e0      	cmp	r8, ip
 801b2fa:	dd33      	ble.n	801b364 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801b2fc:	eb03 090e 	add.w	r9, r3, lr
 801b300:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b304:	f019 0f01 	tst.w	r9, #1
 801b308:	5d14      	ldrb	r4, [r2, r4]
 801b30a:	bf0c      	ite	eq
 801b30c:	f004 040f 	andeq.w	r4, r4, #15
 801b310:	1124      	asrne	r4, r4, #4
 801b312:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b316:	b2e4      	uxtb	r4, r4
 801b318:	f11c 0c01 	adds.w	ip, ip, #1
 801b31c:	d427      	bmi.n	801b36e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801b31e:	45e0      	cmp	r8, ip
 801b320:	dd25      	ble.n	801b36e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801b322:	b335      	cbz	r5, 801b372 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801b324:	3301      	adds	r3, #1
 801b326:	449e      	add	lr, r3
 801b328:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b32c:	f01e 0f01 	tst.w	lr, #1
 801b330:	5cd2      	ldrb	r2, [r2, r3]
 801b332:	bf0c      	ite	eq
 801b334:	f002 020f 	andeq.w	r2, r2, #15
 801b338:	1112      	asrne	r2, r2, #4
 801b33a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b33e:	b2d3      	uxtb	r3, r2
 801b340:	2d0f      	cmp	r5, #15
 801b342:	d917      	bls.n	801b374 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801b344:	4b3c      	ldr	r3, [pc, #240]	; (801b438 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801b346:	4a3d      	ldr	r2, [pc, #244]	; (801b43c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801b348:	483d      	ldr	r0, [pc, #244]	; (801b440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801b34a:	f240 210d 	movw	r1, #525	; 0x20d
 801b34e:	f001 f815 	bl	801c37c <__assert_func>
 801b352:	2600      	movs	r6, #0
 801b354:	e7b1      	b.n	801b2ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801b356:	2000      	movs	r0, #0
 801b358:	4606      	mov	r6, r0
 801b35a:	e7c3      	b.n	801b2e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801b35c:	2000      	movs	r0, #0
 801b35e:	e7c1      	b.n	801b2e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801b360:	4628      	mov	r0, r5
 801b362:	e7bf      	b.n	801b2e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801b364:	2400      	movs	r4, #0
 801b366:	e7d7      	b.n	801b318 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801b368:	2300      	movs	r3, #0
 801b36a:	461c      	mov	r4, r3
 801b36c:	e7e8      	b.n	801b340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801b36e:	2300      	movs	r3, #0
 801b370:	e7e6      	b.n	801b340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801b372:	462b      	mov	r3, r5
 801b374:	2f0f      	cmp	r7, #15
 801b376:	d8e5      	bhi.n	801b344 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801b378:	b2ad      	uxth	r5, r5
 801b37a:	b2bf      	uxth	r7, r7
 801b37c:	fb05 fc07 	mul.w	ip, r5, r7
 801b380:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b384:	012d      	lsls	r5, r5, #4
 801b386:	b2bf      	uxth	r7, r7
 801b388:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b38c:	eba5 050c 	sub.w	r5, r5, ip
 801b390:	1bd2      	subs	r2, r2, r7
 801b392:	b2ad      	uxth	r5, r5
 801b394:	b292      	uxth	r2, r2
 801b396:	4368      	muls	r0, r5
 801b398:	fb06 0002 	mla	r0, r6, r2, r0
 801b39c:	fb07 0404 	mla	r4, r7, r4, r0
 801b3a0:	fb0c 4303 	mla	r3, ip, r3, r4
 801b3a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b3a8:	2b00      	cmp	r3, #0
 801b3aa:	d03e      	beq.n	801b42a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 801b3ac:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801b3b0:	4a24      	ldr	r2, [pc, #144]	; (801b444 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801b3b2:	4343      	muls	r3, r0
 801b3b4:	1c58      	adds	r0, r3, #1
 801b3b6:	6816      	ldr	r6, [r2, #0]
 801b3b8:	880a      	ldrh	r2, [r1, #0]
 801b3ba:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b3be:	1200      	asrs	r0, r0, #8
 801b3c0:	b284      	uxth	r4, r0
 801b3c2:	1215      	asrs	r5, r2, #8
 801b3c4:	43c0      	mvns	r0, r0
 801b3c6:	b2c3      	uxtb	r3, r0
 801b3c8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b3cc:	0a30      	lsrs	r0, r6, #8
 801b3ce:	fb15 f503 	smulbb	r5, r5, r3
 801b3d2:	10d7      	asrs	r7, r2, #3
 801b3d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b3d8:	fb00 5004 	mla	r0, r0, r4, r5
 801b3dc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b3e0:	08f5      	lsrs	r5, r6, #3
 801b3e2:	00d2      	lsls	r2, r2, #3
 801b3e4:	fb17 f703 	smulbb	r7, r7, r3
 801b3e8:	b2d2      	uxtb	r2, r2
 801b3ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b3ee:	00f6      	lsls	r6, r6, #3
 801b3f0:	fb05 7504 	mla	r5, r5, r4, r7
 801b3f4:	fb12 f303 	smulbb	r3, r2, r3
 801b3f8:	b2f6      	uxtb	r6, r6
 801b3fa:	fb06 3304 	mla	r3, r6, r4, r3
 801b3fe:	b2ad      	uxth	r5, r5
 801b400:	b29a      	uxth	r2, r3
 801b402:	b280      	uxth	r0, r0
 801b404:	1c6b      	adds	r3, r5, #1
 801b406:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801b40a:	1c44      	adds	r4, r0, #1
 801b40c:	095b      	lsrs	r3, r3, #5
 801b40e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801b412:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b416:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b41a:	4303      	orrs	r3, r0
 801b41c:	1c50      	adds	r0, r2, #1
 801b41e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b422:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b426:	4313      	orrs	r3, r2
 801b428:	800b      	strh	r3, [r1, #0]
 801b42a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b42e:	2d0f      	cmp	r5, #15
 801b430:	d888      	bhi.n	801b344 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801b432:	463b      	mov	r3, r7
 801b434:	463c      	mov	r4, r7
 801b436:	e79f      	b.n	801b378 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801b438:	08020dcd 	.word	0x08020dcd
 801b43c:	08021325 	.word	0x08021325
 801b440:	08020e55 	.word	0x08020e55
 801b444:	200124c0 	.word	0x200124c0

0801b448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801b448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b44c:	ed2d 8b08 	vpush	{d8-d11}
 801b450:	b099      	sub	sp, #100	; 0x64
 801b452:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 801b456:	9309      	str	r3, [sp, #36]	; 0x24
 801b458:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801b45c:	930a      	str	r3, [sp, #40]	; 0x28
 801b45e:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801b462:	9216      	str	r2, [sp, #88]	; 0x58
 801b464:	930b      	str	r3, [sp, #44]	; 0x2c
 801b466:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801b468:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801b46c:	910f      	str	r1, [sp, #60]	; 0x3c
 801b46e:	9310      	str	r3, [sp, #64]	; 0x40
 801b470:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801b474:	9017      	str	r0, [sp, #92]	; 0x5c
 801b476:	6850      	ldr	r0, [r2, #4]
 801b478:	6812      	ldr	r2, [r2, #0]
 801b47a:	fb00 1303 	mla	r3, r0, r3, r1
 801b47e:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801b482:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b484:	3301      	adds	r3, #1
 801b486:	f023 0301 	bic.w	r3, r3, #1
 801b48a:	930c      	str	r3, [sp, #48]	; 0x30
 801b48c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b48e:	681f      	ldr	r7, [r3, #0]
 801b490:	eeb0 aa40 	vmov.f32	s20, s0
 801b494:	eef0 9a60 	vmov.f32	s19, s1
 801b498:	eeb0 9a41 	vmov.f32	s18, s2
 801b49c:	eeb0 8a62 	vmov.f32	s16, s5
 801b4a0:	eef0 8a43 	vmov.f32	s17, s6
 801b4a4:	eef0 ba44 	vmov.f32	s23, s8
 801b4a8:	eeb0 ba64 	vmov.f32	s22, s9
 801b4ac:	eef0 aa45 	vmov.f32	s21, s10
 801b4b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b4b2:	2b00      	cmp	r3, #0
 801b4b4:	dc03      	bgt.n	801b4be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801b4b6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b4b8:	2b00      	cmp	r3, #0
 801b4ba:	f340 8267 	ble.w	801b98c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 801b4be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4c0:	2b00      	cmp	r3, #0
 801b4c2:	f340 811e 	ble.w	801b702 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ba>
 801b4c6:	1422      	asrs	r2, r4, #16
 801b4c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b4cc:	d42d      	bmi.n	801b52a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801b4ce:	980a      	ldr	r0, [sp, #40]	; 0x28
 801b4d0:	1c51      	adds	r1, r2, #1
 801b4d2:	4288      	cmp	r0, r1
 801b4d4:	dd2c      	ble.n	801b530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801b4d6:	2b00      	cmp	r3, #0
 801b4d8:	db2a      	blt.n	801b530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801b4da:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b4dc:	1c59      	adds	r1, r3, #1
 801b4de:	4288      	cmp	r0, r1
 801b4e0:	dd26      	ble.n	801b530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801b4e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4e4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b4e6:	3b01      	subs	r3, #1
 801b4e8:	fb02 4203 	mla	r2, r2, r3, r4
 801b4ec:	1412      	asrs	r2, r2, #16
 801b4ee:	d42a      	bmi.n	801b546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801b4f0:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b4f2:	3201      	adds	r2, #1
 801b4f4:	4291      	cmp	r1, r2
 801b4f6:	dd26      	ble.n	801b546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801b4f8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801b4fa:	fb02 6303 	mla	r3, r2, r3, r6
 801b4fe:	141b      	asrs	r3, r3, #16
 801b500:	d421      	bmi.n	801b546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801b502:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b504:	3301      	adds	r3, #1
 801b506:	429a      	cmp	r2, r3
 801b508:	dd1d      	ble.n	801b546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801b50a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801b50e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b512:	9311      	str	r3, [sp, #68]	; 0x44
 801b514:	46d1      	mov	r9, sl
 801b516:	f1bb 0f00 	cmp.w	fp, #0
 801b51a:	f300 8162 	bgt.w	801b7e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39a>
 801b51e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b520:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b524:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801b528:	e0ed      	b.n	801b706 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 801b52a:	1c51      	adds	r1, r2, #1
 801b52c:	f040 80df 	bne.w	801b6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801b530:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b532:	4291      	cmp	r1, r2
 801b534:	f340 80db 	ble.w	801b6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801b538:	1c5a      	adds	r2, r3, #1
 801b53a:	f2c0 80d8 	blt.w	801b6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801b53e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b540:	4293      	cmp	r3, r2
 801b542:	f280 80d4 	bge.w	801b6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801b546:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801b54a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801b54e:	9311      	str	r3, [sp, #68]	; 0x44
 801b550:	46d0      	mov	r8, sl
 801b552:	f1b9 0f00 	cmp.w	r9, #0
 801b556:	dde2      	ble.n	801b51e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801b558:	1420      	asrs	r0, r4, #16
 801b55a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b55e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b562:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b566:	f100 8121 	bmi.w	801b7ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x364>
 801b56a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801b56c:	f100 0c01 	add.w	ip, r0, #1
 801b570:	4565      	cmp	r5, ip
 801b572:	f340 811d 	ble.w	801b7b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801b576:	2b00      	cmp	r3, #0
 801b578:	f2c0 811a 	blt.w	801b7b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801b57c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b57e:	f103 0c01 	add.w	ip, r3, #1
 801b582:	4565      	cmp	r5, ip
 801b584:	f340 8114 	ble.w	801b7b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801b588:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b58a:	fb03 0305 	mla	r3, r3, r5, r0
 801b58e:	0858      	lsrs	r0, r3, #1
 801b590:	07dd      	lsls	r5, r3, #31
 801b592:	5c38      	ldrb	r0, [r7, r0]
 801b594:	bf54      	ite	pl
 801b596:	f000 000f 	andpl.w	r0, r0, #15
 801b59a:	1100      	asrmi	r0, r0, #4
 801b59c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b5a0:	b2c0      	uxtb	r0, r0
 801b5a2:	2a00      	cmp	r2, #0
 801b5a4:	f000 80ee 	beq.w	801b784 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33c>
 801b5a8:	f103 0e01 	add.w	lr, r3, #1
 801b5ac:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801b5b0:	f01e 0f01 	tst.w	lr, #1
 801b5b4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b5b8:	bf0c      	ite	eq
 801b5ba:	f00c 0c0f 	andeq.w	ip, ip, #15
 801b5be:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801b5c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b5c6:	fa5f f58c 	uxtb.w	r5, ip
 801b5ca:	9512      	str	r5, [sp, #72]	; 0x48
 801b5cc:	b1f9      	cbz	r1, 801b60e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801b5ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b5d0:	442b      	add	r3, r5
 801b5d2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b5d6:	07dd      	lsls	r5, r3, #31
 801b5d8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b5dc:	bf54      	ite	pl
 801b5de:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b5e2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b5e6:	3301      	adds	r3, #1
 801b5e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b5ec:	fa5f f58c 	uxtb.w	r5, ip
 801b5f0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b5f4:	950d      	str	r5, [sp, #52]	; 0x34
 801b5f6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b5fa:	07dd      	lsls	r5, r3, #31
 801b5fc:	bf54      	ite	pl
 801b5fe:	f00c 030f 	andpl.w	r3, ip, #15
 801b602:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801b606:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b60a:	b2db      	uxtb	r3, r3
 801b60c:	9313      	str	r3, [sp, #76]	; 0x4c
 801b60e:	b292      	uxth	r2, r2
 801b610:	b289      	uxth	r1, r1
 801b612:	fb02 f301 	mul.w	r3, r2, r1
 801b616:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b61a:	0112      	lsls	r2, r2, #4
 801b61c:	b289      	uxth	r1, r1
 801b61e:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801b622:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b624:	1ad2      	subs	r2, r2, r3
 801b626:	ebac 0c01 	sub.w	ip, ip, r1
 801b62a:	b292      	uxth	r2, r2
 801b62c:	436a      	muls	r2, r5
 801b62e:	fa1f fc8c 	uxth.w	ip, ip
 801b632:	fb00 200c 	mla	r0, r0, ip, r2
 801b636:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b638:	fb01 0102 	mla	r1, r1, r2, r0
 801b63c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b63e:	fb03 1302 	mla	r3, r3, r2, r1
 801b642:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b646:	2b00      	cmp	r3, #0
 801b648:	d048      	beq.n	801b6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801b64a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b64c:	4ace      	ldr	r2, [pc, #824]	; (801b988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 801b64e:	434b      	muls	r3, r1
 801b650:	1c59      	adds	r1, r3, #1
 801b652:	f8d2 e000 	ldr.w	lr, [r2]
 801b656:	f8b8 2000 	ldrh.w	r2, [r8]
 801b65a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b65e:	121b      	asrs	r3, r3, #8
 801b660:	b299      	uxth	r1, r3
 801b662:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801b666:	43db      	mvns	r3, r3
 801b668:	b2db      	uxtb	r3, r3
 801b66a:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801b66e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b672:	fb1c fc03 	smulbb	ip, ip, r3
 801b676:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801b67a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b67e:	fb00 c001 	mla	r0, r0, r1, ip
 801b682:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b686:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801b68a:	fb1b fb03 	smulbb	fp, fp, r3
 801b68e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b692:	00d2      	lsls	r2, r2, #3
 801b694:	fb0c bc01 	mla	ip, ip, r1, fp
 801b698:	b2d2      	uxtb	r2, r2
 801b69a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b69e:	fb12 f303 	smulbb	r3, r2, r3
 801b6a2:	fa1f fc8c 	uxth.w	ip, ip
 801b6a6:	fa5f fe8e 	uxtb.w	lr, lr
 801b6aa:	b280      	uxth	r0, r0
 801b6ac:	fb0e 3101 	mla	r1, lr, r1, r3
 801b6b0:	f10c 0201 	add.w	r2, ip, #1
 801b6b4:	b289      	uxth	r1, r1
 801b6b6:	1c43      	adds	r3, r0, #1
 801b6b8:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801b6bc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b6c0:	0952      	lsrs	r2, r2, #5
 801b6c2:	1c4b      	adds	r3, r1, #1
 801b6c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b6c8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b6cc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b6d0:	4310      	orrs	r0, r2
 801b6d2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b6d6:	4308      	orrs	r0, r1
 801b6d8:	f8a8 0000 	strh.w	r0, [r8]
 801b6dc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801b6de:	441c      	add	r4, r3
 801b6e0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b6e2:	f108 0802 	add.w	r8, r8, #2
 801b6e6:	441e      	add	r6, r3
 801b6e8:	f109 39ff 	add.w	r9, r9, #4294967295
 801b6ec:	e731      	b.n	801b552 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801b6ee:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801b6f0:	441c      	add	r4, r3
 801b6f2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b6f4:	441e      	add	r6, r3
 801b6f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b6f8:	3b01      	subs	r3, #1
 801b6fa:	9309      	str	r3, [sp, #36]	; 0x24
 801b6fc:	f10a 0a02 	add.w	sl, sl, #2
 801b700:	e6dd      	b.n	801b4be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801b702:	f47f aeee 	bne.w	801b4e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801b706:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b708:	2b00      	cmp	r3, #0
 801b70a:	f340 813f 	ble.w	801b98c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 801b70e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b712:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b716:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b71a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b71c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b720:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b724:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b728:	eef0 6a48 	vmov.f32	s13, s16
 801b72c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b730:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b734:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b738:	ee16 4a90 	vmov	r4, s13
 801b73c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b740:	eef0 6a68 	vmov.f32	s13, s17
 801b744:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b748:	ee18 2a10 	vmov	r2, s16
 801b74c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b750:	fb92 f3f3 	sdiv	r3, r2, r3
 801b754:	ee18 2a90 	vmov	r2, s17
 801b758:	932d      	str	r3, [sp, #180]	; 0xb4
 801b75a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b75c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b760:	932e      	str	r3, [sp, #184]	; 0xb8
 801b762:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b764:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801b766:	3b01      	subs	r3, #1
 801b768:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b76c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b76e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b770:	bf08      	it	eq
 801b772:	4613      	moveq	r3, r2
 801b774:	ee16 6a90 	vmov	r6, s13
 801b778:	9309      	str	r3, [sp, #36]	; 0x24
 801b77a:	eef0 8a67 	vmov.f32	s17, s15
 801b77e:	eeb0 8a47 	vmov.f32	s16, s14
 801b782:	e695      	b.n	801b4b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801b784:	2900      	cmp	r1, #0
 801b786:	f43f af42 	beq.w	801b60e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801b78a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b78c:	442b      	add	r3, r5
 801b78e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b792:	07db      	lsls	r3, r3, #31
 801b794:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b798:	bf54      	ite	pl
 801b79a:	f00c 030f 	andpl.w	r3, ip, #15
 801b79e:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801b7a2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b7a6:	b2db      	uxtb	r3, r3
 801b7a8:	930d      	str	r3, [sp, #52]	; 0x34
 801b7aa:	e730      	b.n	801b60e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801b7ac:	1c45      	adds	r5, r0, #1
 801b7ae:	d195      	bne.n	801b6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801b7b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801b7b2:	4285      	cmp	r5, r0
 801b7b4:	dd92      	ble.n	801b6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801b7b6:	1c5d      	adds	r5, r3, #1
 801b7b8:	db90      	blt.n	801b6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801b7ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b7bc:	429d      	cmp	r5, r3
 801b7be:	dd8d      	ble.n	801b6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801b7c0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 801b7c4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b7c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b7c8:	9301      	str	r3, [sp, #4]
 801b7ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b7cc:	9002      	str	r0, [sp, #8]
 801b7ce:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801b7d2:	9300      	str	r3, [sp, #0]
 801b7d4:	463a      	mov	r2, r7
 801b7d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b7d8:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801b7da:	4641      	mov	r1, r8
 801b7dc:	f7ff fd4a 	bl	801b274 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801b7e0:	e77c      	b.n	801b6dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801b7e2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b7e4:	1422      	asrs	r2, r4, #16
 801b7e6:	1433      	asrs	r3, r6, #16
 801b7e8:	fb05 2303 	mla	r3, r5, r3, r2
 801b7ec:	085a      	lsrs	r2, r3, #1
 801b7ee:	07dd      	lsls	r5, r3, #31
 801b7f0:	5cba      	ldrb	r2, [r7, r2]
 801b7f2:	bf54      	ite	pl
 801b7f4:	f002 020f 	andpl.w	r2, r2, #15
 801b7f8:	1112      	asrmi	r2, r2, #4
 801b7fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b7fe:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b802:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b806:	b2d2      	uxtb	r2, r2
 801b808:	2900      	cmp	r1, #0
 801b80a:	f000 80a8 	beq.w	801b95e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x516>
 801b80e:	f103 0e01 	add.w	lr, r3, #1
 801b812:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801b816:	f01e 0f01 	tst.w	lr, #1
 801b81a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b81e:	bf0c      	ite	eq
 801b820:	f00c 0c0f 	andeq.w	ip, ip, #15
 801b824:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801b828:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b82c:	fa5f f58c 	uxtb.w	r5, ip
 801b830:	9514      	str	r5, [sp, #80]	; 0x50
 801b832:	b300      	cbz	r0, 801b876 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 801b834:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b836:	442b      	add	r3, r5
 801b838:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b83c:	07dd      	lsls	r5, r3, #31
 801b83e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b842:	bf54      	ite	pl
 801b844:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b848:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b84c:	3301      	adds	r3, #1
 801b84e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b852:	fa5f f58c 	uxtb.w	r5, ip
 801b856:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b85a:	950e      	str	r5, [sp, #56]	; 0x38
 801b85c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b860:	07dd      	lsls	r5, r3, #31
 801b862:	bf54      	ite	pl
 801b864:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b868:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b86c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b870:	fa5f f38c 	uxtb.w	r3, ip
 801b874:	9315      	str	r3, [sp, #84]	; 0x54
 801b876:	b289      	uxth	r1, r1
 801b878:	b280      	uxth	r0, r0
 801b87a:	fb01 f300 	mul.w	r3, r1, r0
 801b87e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801b882:	0109      	lsls	r1, r1, #4
 801b884:	b280      	uxth	r0, r0
 801b886:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801b88a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b88c:	1ac9      	subs	r1, r1, r3
 801b88e:	ebac 0c00 	sub.w	ip, ip, r0
 801b892:	b289      	uxth	r1, r1
 801b894:	4369      	muls	r1, r5
 801b896:	fa1f fc8c 	uxth.w	ip, ip
 801b89a:	fb02 120c 	mla	r2, r2, ip, r1
 801b89e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b8a0:	fb00 2001 	mla	r0, r0, r1, r2
 801b8a4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801b8a6:	fb03 0302 	mla	r3, r3, r2, r0
 801b8aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b8ae:	2b00      	cmp	r3, #0
 801b8b0:	d04c      	beq.n	801b94c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x504>
 801b8b2:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b8b4:	4a34      	ldr	r2, [pc, #208]	; (801b988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 801b8b6:	434b      	muls	r3, r1
 801b8b8:	1c59      	adds	r1, r3, #1
 801b8ba:	f8d2 e000 	ldr.w	lr, [r2]
 801b8be:	f8b9 2000 	ldrh.w	r2, [r9]
 801b8c2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b8c6:	121b      	asrs	r3, r3, #8
 801b8c8:	b299      	uxth	r1, r3
 801b8ca:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801b8ce:	43db      	mvns	r3, r3
 801b8d0:	b2db      	uxtb	r3, r3
 801b8d2:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801b8d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b8da:	fb1c fc03 	smulbb	ip, ip, r3
 801b8de:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801b8e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b8e6:	fb00 c001 	mla	r0, r0, r1, ip
 801b8ea:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b8ee:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801b8f2:	fb18 f803 	smulbb	r8, r8, r3
 801b8f6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b8fa:	00d2      	lsls	r2, r2, #3
 801b8fc:	fb0c 8c01 	mla	ip, ip, r1, r8
 801b900:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b904:	b2d2      	uxtb	r2, r2
 801b906:	fa1f fc8c 	uxth.w	ip, ip
 801b90a:	fa5f fe8e 	uxtb.w	lr, lr
 801b90e:	fb12 f203 	smulbb	r2, r2, r3
 801b912:	b280      	uxth	r0, r0
 801b914:	fb0e 2201 	mla	r2, lr, r1, r2
 801b918:	f10c 0801 	add.w	r8, ip, #1
 801b91c:	b292      	uxth	r2, r2
 801b91e:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801b922:	f100 0801 	add.w	r8, r0, #1
 801b926:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b92a:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801b92e:	1c51      	adds	r1, r2, #1
 801b930:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b934:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b938:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b93c:	ea4c 0c00 	orr.w	ip, ip, r0
 801b940:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b944:	ea4c 0c02 	orr.w	ip, ip, r2
 801b948:	f8a9 c000 	strh.w	ip, [r9]
 801b94c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801b94e:	441c      	add	r4, r3
 801b950:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b952:	f109 0902 	add.w	r9, r9, #2
 801b956:	441e      	add	r6, r3
 801b958:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b95c:	e5db      	b.n	801b516 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801b95e:	2800      	cmp	r0, #0
 801b960:	d089      	beq.n	801b876 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 801b962:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b964:	442b      	add	r3, r5
 801b966:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b96a:	07db      	lsls	r3, r3, #31
 801b96c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b970:	bf54      	ite	pl
 801b972:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b976:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b97a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b97e:	fa5f f38c 	uxtb.w	r3, ip
 801b982:	930e      	str	r3, [sp, #56]	; 0x38
 801b984:	e777      	b.n	801b876 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 801b986:	bf00      	nop
 801b988:	200124c0 	.word	0x200124c0
 801b98c:	b019      	add	sp, #100	; 0x64
 801b98e:	ecbd 8b08 	vpop	{d8-d11}
 801b992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b996:	bf00      	nop

0801b998 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801b998:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b99c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b9a0:	2c00      	cmp	r4, #0
 801b9a2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b9a6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b9aa:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b9ae:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b9b2:	fb04 ce03 	mla	lr, r4, r3, ip
 801b9b6:	db60      	blt.n	801ba7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b9b8:	45a1      	cmp	r9, r4
 801b9ba:	dd5e      	ble.n	801ba7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b9bc:	f1bc 0f00 	cmp.w	ip, #0
 801b9c0:	db59      	blt.n	801ba76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b9c2:	45e0      	cmp	r8, ip
 801b9c4:	dd57      	ble.n	801ba76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b9c6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b9ca:	f01e 0f01 	tst.w	lr, #1
 801b9ce:	5c16      	ldrb	r6, [r2, r0]
 801b9d0:	bf0c      	ite	eq
 801b9d2:	f006 060f 	andeq.w	r6, r6, #15
 801b9d6:	1136      	asrne	r6, r6, #4
 801b9d8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b9dc:	b2f6      	uxtb	r6, r6
 801b9de:	f11c 0001 	adds.w	r0, ip, #1
 801b9e2:	d44d      	bmi.n	801ba80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b9e4:	4580      	cmp	r8, r0
 801b9e6:	dd4b      	ble.n	801ba80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b9e8:	2d00      	cmp	r5, #0
 801b9ea:	d04b      	beq.n	801ba84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801b9ec:	f10e 0a01 	add.w	sl, lr, #1
 801b9f0:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b9f4:	f01a 0f01 	tst.w	sl, #1
 801b9f8:	5c10      	ldrb	r0, [r2, r0]
 801b9fa:	bf0c      	ite	eq
 801b9fc:	f000 000f 	andeq.w	r0, r0, #15
 801ba00:	1100      	asrne	r0, r0, #4
 801ba02:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ba06:	b2c0      	uxtb	r0, r0
 801ba08:	3401      	adds	r4, #1
 801ba0a:	d43f      	bmi.n	801ba8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ba0c:	45a1      	cmp	r9, r4
 801ba0e:	dd3d      	ble.n	801ba8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801ba10:	2f00      	cmp	r7, #0
 801ba12:	f000 8097 	beq.w	801bb44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801ba16:	f1bc 0f00 	cmp.w	ip, #0
 801ba1a:	db35      	blt.n	801ba88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801ba1c:	45e0      	cmp	r8, ip
 801ba1e:	dd33      	ble.n	801ba88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801ba20:	eb03 090e 	add.w	r9, r3, lr
 801ba24:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801ba28:	f019 0f01 	tst.w	r9, #1
 801ba2c:	5d14      	ldrb	r4, [r2, r4]
 801ba2e:	bf0c      	ite	eq
 801ba30:	f004 040f 	andeq.w	r4, r4, #15
 801ba34:	1124      	asrne	r4, r4, #4
 801ba36:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ba3a:	b2e4      	uxtb	r4, r4
 801ba3c:	f11c 0c01 	adds.w	ip, ip, #1
 801ba40:	d427      	bmi.n	801ba92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ba42:	45e0      	cmp	r8, ip
 801ba44:	dd25      	ble.n	801ba92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801ba46:	b335      	cbz	r5, 801ba96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801ba48:	3301      	adds	r3, #1
 801ba4a:	449e      	add	lr, r3
 801ba4c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ba50:	f01e 0f01 	tst.w	lr, #1
 801ba54:	5cd2      	ldrb	r2, [r2, r3]
 801ba56:	bf0c      	ite	eq
 801ba58:	f002 020f 	andeq.w	r2, r2, #15
 801ba5c:	1112      	asrne	r2, r2, #4
 801ba5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ba62:	b2d3      	uxtb	r3, r2
 801ba64:	2d0f      	cmp	r5, #15
 801ba66:	d917      	bls.n	801ba98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801ba68:	4b39      	ldr	r3, [pc, #228]	; (801bb50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801ba6a:	4a3a      	ldr	r2, [pc, #232]	; (801bb54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801ba6c:	483a      	ldr	r0, [pc, #232]	; (801bb58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801ba6e:	f240 210d 	movw	r1, #525	; 0x20d
 801ba72:	f000 fc83 	bl	801c37c <__assert_func>
 801ba76:	2600      	movs	r6, #0
 801ba78:	e7b1      	b.n	801b9de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801ba7a:	2000      	movs	r0, #0
 801ba7c:	4606      	mov	r6, r0
 801ba7e:	e7c3      	b.n	801ba08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ba80:	2000      	movs	r0, #0
 801ba82:	e7c1      	b.n	801ba08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ba84:	4628      	mov	r0, r5
 801ba86:	e7bf      	b.n	801ba08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801ba88:	2400      	movs	r4, #0
 801ba8a:	e7d7      	b.n	801ba3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801ba8c:	2300      	movs	r3, #0
 801ba8e:	461c      	mov	r4, r3
 801ba90:	e7e8      	b.n	801ba64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ba92:	2300      	movs	r3, #0
 801ba94:	e7e6      	b.n	801ba64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801ba96:	462b      	mov	r3, r5
 801ba98:	2f0f      	cmp	r7, #15
 801ba9a:	d8e5      	bhi.n	801ba68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801ba9c:	b2ad      	uxth	r5, r5
 801ba9e:	b2bf      	uxth	r7, r7
 801baa0:	fb05 fc07 	mul.w	ip, r5, r7
 801baa4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801baa8:	012d      	lsls	r5, r5, #4
 801baaa:	b2bf      	uxth	r7, r7
 801baac:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801bab0:	eba5 050c 	sub.w	r5, r5, ip
 801bab4:	1bd2      	subs	r2, r2, r7
 801bab6:	b2ad      	uxth	r5, r5
 801bab8:	b292      	uxth	r2, r2
 801baba:	4368      	muls	r0, r5
 801babc:	fb06 0002 	mla	r0, r6, r2, r0
 801bac0:	fb07 0404 	mla	r4, r7, r4, r0
 801bac4:	fb0c 4303 	mla	r3, ip, r3, r4
 801bac8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bacc:	2b00      	cmp	r3, #0
 801bace:	d037      	beq.n	801bb40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 801bad0:	4a22      	ldr	r2, [pc, #136]	; (801bb5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801bad2:	6816      	ldr	r6, [r2, #0]
 801bad4:	880a      	ldrh	r2, [r1, #0]
 801bad6:	b298      	uxth	r0, r3
 801bad8:	1215      	asrs	r5, r2, #8
 801bada:	43db      	mvns	r3, r3
 801badc:	b2db      	uxtb	r3, r3
 801bade:	0a34      	lsrs	r4, r6, #8
 801bae0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bae4:	fb15 f503 	smulbb	r5, r5, r3
 801bae8:	10d7      	asrs	r7, r2, #3
 801baea:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801baee:	fb04 5400 	mla	r4, r4, r0, r5
 801baf2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801baf6:	08f5      	lsrs	r5, r6, #3
 801baf8:	fb17 f703 	smulbb	r7, r7, r3
 801bafc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bb00:	00d2      	lsls	r2, r2, #3
 801bb02:	fb05 7500 	mla	r5, r5, r0, r7
 801bb06:	b2d2      	uxtb	r2, r2
 801bb08:	00f6      	lsls	r6, r6, #3
 801bb0a:	fb12 f303 	smulbb	r3, r2, r3
 801bb0e:	b2ad      	uxth	r5, r5
 801bb10:	b2f6      	uxtb	r6, r6
 801bb12:	b2a4      	uxth	r4, r4
 801bb14:	fb06 3000 	mla	r0, r6, r0, r3
 801bb18:	1c6b      	adds	r3, r5, #1
 801bb1a:	b280      	uxth	r0, r0
 801bb1c:	1c62      	adds	r2, r4, #1
 801bb1e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801bb22:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bb26:	095b      	lsrs	r3, r3, #5
 801bb28:	1c42      	adds	r2, r0, #1
 801bb2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bb2e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801bb32:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bb36:	4323      	orrs	r3, r4
 801bb38:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801bb3c:	4303      	orrs	r3, r0
 801bb3e:	800b      	strh	r3, [r1, #0]
 801bb40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bb44:	2d0f      	cmp	r5, #15
 801bb46:	d88f      	bhi.n	801ba68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801bb48:	463b      	mov	r3, r7
 801bb4a:	463c      	mov	r4, r7
 801bb4c:	e7a6      	b.n	801ba9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801bb4e:	bf00      	nop
 801bb50:	08020dcd 	.word	0x08020dcd
 801bb54:	08021325 	.word	0x08021325
 801bb58:	08020e55 	.word	0x08020e55
 801bb5c:	200124c0 	.word	0x200124c0

0801bb60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801bb60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb64:	ed2d 8b08 	vpush	{d8-d11}
 801bb68:	b095      	sub	sp, #84	; 0x54
 801bb6a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801bb6e:	9306      	str	r3, [sp, #24]
 801bb70:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801bb74:	9307      	str	r3, [sp, #28]
 801bb76:	920d      	str	r2, [sp, #52]	; 0x34
 801bb78:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801bb7c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801bb7e:	910a      	str	r1, [sp, #40]	; 0x28
 801bb80:	9308      	str	r3, [sp, #32]
 801bb82:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801bb86:	9013      	str	r0, [sp, #76]	; 0x4c
 801bb88:	6850      	ldr	r0, [r2, #4]
 801bb8a:	6812      	ldr	r2, [r2, #0]
 801bb8c:	fb00 1303 	mla	r3, r0, r3, r1
 801bb90:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801bb94:	9b07      	ldr	r3, [sp, #28]
 801bb96:	3301      	adds	r3, #1
 801bb98:	f023 0301 	bic.w	r3, r3, #1
 801bb9c:	9309      	str	r3, [sp, #36]	; 0x24
 801bb9e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bba0:	681f      	ldr	r7, [r3, #0]
 801bba2:	eeb0 aa40 	vmov.f32	s20, s0
 801bba6:	eef0 9a60 	vmov.f32	s19, s1
 801bbaa:	eeb0 9a41 	vmov.f32	s18, s2
 801bbae:	eeb0 8a62 	vmov.f32	s16, s5
 801bbb2:	eef0 8a43 	vmov.f32	s17, s6
 801bbb6:	eef0 ba44 	vmov.f32	s23, s8
 801bbba:	eeb0 ba64 	vmov.f32	s22, s9
 801bbbe:	eef0 aa45 	vmov.f32	s21, s10
 801bbc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bbc4:	2b00      	cmp	r3, #0
 801bbc6:	dc03      	bgt.n	801bbd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801bbc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bbca:	2b00      	cmp	r3, #0
 801bbcc:	f340 825c 	ble.w	801c088 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 801bbd0:	9b06      	ldr	r3, [sp, #24]
 801bbd2:	2b00      	cmp	r3, #0
 801bbd4:	f340 8119 	ble.w	801be0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2aa>
 801bbd8:	1422      	asrs	r2, r4, #16
 801bbda:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bbde:	d42d      	bmi.n	801bc3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801bbe0:	9807      	ldr	r0, [sp, #28]
 801bbe2:	1c51      	adds	r1, r2, #1
 801bbe4:	4288      	cmp	r0, r1
 801bbe6:	dd2c      	ble.n	801bc42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801bbe8:	2b00      	cmp	r3, #0
 801bbea:	db2a      	blt.n	801bc42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801bbec:	9808      	ldr	r0, [sp, #32]
 801bbee:	1c59      	adds	r1, r3, #1
 801bbf0:	4288      	cmp	r0, r1
 801bbf2:	dd26      	ble.n	801bc42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801bbf4:	9b06      	ldr	r3, [sp, #24]
 801bbf6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801bbf8:	3b01      	subs	r3, #1
 801bbfa:	fb02 4203 	mla	r2, r2, r3, r4
 801bbfe:	1412      	asrs	r2, r2, #16
 801bc00:	d42a      	bmi.n	801bc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801bc02:	9907      	ldr	r1, [sp, #28]
 801bc04:	3201      	adds	r2, #1
 801bc06:	4291      	cmp	r1, r2
 801bc08:	dd26      	ble.n	801bc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801bc0a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801bc0c:	fb02 6303 	mla	r3, r2, r3, r6
 801bc10:	141b      	asrs	r3, r3, #16
 801bc12:	d421      	bmi.n	801bc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801bc14:	9a08      	ldr	r2, [sp, #32]
 801bc16:	3301      	adds	r3, #1
 801bc18:	429a      	cmp	r2, r3
 801bc1a:	dd1d      	ble.n	801bc58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801bc1c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801bc20:	f8dd a018 	ldr.w	sl, [sp, #24]
 801bc24:	930e      	str	r3, [sp, #56]	; 0x38
 801bc26:	46d8      	mov	r8, fp
 801bc28:	f1ba 0f00 	cmp.w	sl, #0
 801bc2c:	f300 8161 	bgt.w	801bef2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801bc30:	9b06      	ldr	r3, [sp, #24]
 801bc32:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bc36:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801bc3a:	e0e8      	b.n	801be0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ae>
 801bc3c:	1c51      	adds	r1, r2, #1
 801bc3e:	f040 80da 	bne.w	801bdf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801bc42:	9907      	ldr	r1, [sp, #28]
 801bc44:	4291      	cmp	r1, r2
 801bc46:	f340 80d6 	ble.w	801bdf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801bc4a:	1c5a      	adds	r2, r3, #1
 801bc4c:	f2c0 80d3 	blt.w	801bdf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801bc50:	9a08      	ldr	r2, [sp, #32]
 801bc52:	4293      	cmp	r3, r2
 801bc54:	f280 80cf 	bge.w	801bdf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801bc58:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801bc5c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801bc60:	46d8      	mov	r8, fp
 801bc62:	f1b9 0f00 	cmp.w	r9, #0
 801bc66:	dde3      	ble.n	801bc30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801bc68:	1420      	asrs	r0, r4, #16
 801bc6a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bc6e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bc72:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801bc76:	f100 8124 	bmi.w	801bec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801bc7a:	9d07      	ldr	r5, [sp, #28]
 801bc7c:	f100 0c01 	add.w	ip, r0, #1
 801bc80:	4565      	cmp	r5, ip
 801bc82:	f340 8120 	ble.w	801bec6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801bc86:	2b00      	cmp	r3, #0
 801bc88:	f2c0 811d 	blt.w	801bec6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801bc8c:	9d08      	ldr	r5, [sp, #32]
 801bc8e:	f103 0c01 	add.w	ip, r3, #1
 801bc92:	4565      	cmp	r5, ip
 801bc94:	f340 8117 	ble.w	801bec6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801bc98:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bc9a:	fb03 0305 	mla	r3, r3, r5, r0
 801bc9e:	0858      	lsrs	r0, r3, #1
 801bca0:	07dd      	lsls	r5, r3, #31
 801bca2:	5c38      	ldrb	r0, [r7, r0]
 801bca4:	bf54      	ite	pl
 801bca6:	f000 000f 	andpl.w	r0, r0, #15
 801bcaa:	1100      	asrmi	r0, r0, #4
 801bcac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801bcb0:	b2c0      	uxtb	r0, r0
 801bcb2:	2a00      	cmp	r2, #0
 801bcb4:	f000 80ea 	beq.w	801be8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32c>
 801bcb8:	f103 0e01 	add.w	lr, r3, #1
 801bcbc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801bcc0:	f01e 0f01 	tst.w	lr, #1
 801bcc4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bcc8:	bf0c      	ite	eq
 801bcca:	f00c 0c0f 	andeq.w	ip, ip, #15
 801bcce:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801bcd2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bcd6:	fa5f fc8c 	uxtb.w	ip, ip
 801bcda:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801bcde:	b1f9      	cbz	r1, 801bd20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801bce0:	4453      	add	r3, sl
 801bce2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bce6:	07dd      	lsls	r5, r3, #31
 801bce8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bcec:	bf54      	ite	pl
 801bcee:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bcf2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bcf6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bcfa:	3301      	adds	r3, #1
 801bcfc:	fa5f fc8c 	uxtb.w	ip, ip
 801bd00:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801bd04:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bd08:	07dd      	lsls	r5, r3, #31
 801bd0a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bd0e:	bf54      	ite	pl
 801bd10:	f00c 030f 	andpl.w	r3, ip, #15
 801bd14:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801bd18:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801bd1c:	b2db      	uxtb	r3, r3
 801bd1e:	9310      	str	r3, [sp, #64]	; 0x40
 801bd20:	b292      	uxth	r2, r2
 801bd22:	b289      	uxth	r1, r1
 801bd24:	fb02 f301 	mul.w	r3, r2, r1
 801bd28:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801bd2c:	0112      	lsls	r2, r2, #4
 801bd2e:	b289      	uxth	r1, r1
 801bd30:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801bd34:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bd36:	1ad2      	subs	r2, r2, r3
 801bd38:	ebac 0c01 	sub.w	ip, ip, r1
 801bd3c:	b292      	uxth	r2, r2
 801bd3e:	436a      	muls	r2, r5
 801bd40:	fa1f fc8c 	uxth.w	ip, ip
 801bd44:	fb00 200c 	mla	r0, r0, ip, r2
 801bd48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bd4a:	fb01 0102 	mla	r1, r1, r2, r0
 801bd4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bd50:	fb03 1302 	mla	r3, r3, r2, r1
 801bd54:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bd58:	2b00      	cmp	r3, #0
 801bd5a:	d043      	beq.n	801bde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801bd5c:	4ac9      	ldr	r2, [pc, #804]	; (801c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 801bd5e:	6811      	ldr	r1, [r2, #0]
 801bd60:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801bd64:	08ca      	lsrs	r2, r1, #3
 801bd66:	00c9      	lsls	r1, r1, #3
 801bd68:	b2c9      	uxtb	r1, r1
 801bd6a:	2bff      	cmp	r3, #255	; 0xff
 801bd6c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bd70:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bd74:	460d      	mov	r5, r1
 801bd76:	f000 809c 	beq.w	801beb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x352>
 801bd7a:	f8b8 c000 	ldrh.w	ip, [r8]
 801bd7e:	b299      	uxth	r1, r3
 801bd80:	ea4f 202c 	mov.w	r0, ip, asr #8
 801bd84:	43db      	mvns	r3, r3
 801bd86:	b2db      	uxtb	r3, r3
 801bd88:	fb1e fe01 	smulbb	lr, lr, r1
 801bd8c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bd90:	fb00 e003 	mla	r0, r0, r3, lr
 801bd94:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801bd98:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801bd9c:	fb12 f201 	smulbb	r2, r2, r1
 801bda0:	fb0e 2203 	mla	r2, lr, r3, r2
 801bda4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bda8:	b292      	uxth	r2, r2
 801bdaa:	fb15 f101 	smulbb	r1, r5, r1
 801bdae:	fa5f fc8c 	uxtb.w	ip, ip
 801bdb2:	b280      	uxth	r0, r0
 801bdb4:	fb0c 1303 	mla	r3, ip, r3, r1
 801bdb8:	f102 0e01 	add.w	lr, r2, #1
 801bdbc:	b29b      	uxth	r3, r3
 801bdbe:	1c41      	adds	r1, r0, #1
 801bdc0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bdc4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801bdc8:	0952      	lsrs	r2, r2, #5
 801bdca:	1c59      	adds	r1, r3, #1
 801bdcc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bdd0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801bdd4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bdd8:	4310      	orrs	r0, r2
 801bdda:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bdde:	4318      	orrs	r0, r3
 801bde0:	f8a8 0000 	strh.w	r0, [r8]
 801bde4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bde6:	441c      	add	r4, r3
 801bde8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801bdea:	f108 0802 	add.w	r8, r8, #2
 801bdee:	441e      	add	r6, r3
 801bdf0:	f109 39ff 	add.w	r9, r9, #4294967295
 801bdf4:	e735      	b.n	801bc62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801bdf6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bdf8:	441c      	add	r4, r3
 801bdfa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801bdfc:	441e      	add	r6, r3
 801bdfe:	9b06      	ldr	r3, [sp, #24]
 801be00:	3b01      	subs	r3, #1
 801be02:	9306      	str	r3, [sp, #24]
 801be04:	f10b 0b02 	add.w	fp, fp, #2
 801be08:	e6e2      	b.n	801bbd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801be0a:	f47f aef3 	bne.w	801bbf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801be0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be10:	2b00      	cmp	r3, #0
 801be12:	f340 8139 	ble.w	801c088 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 801be16:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801be1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801be1e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801be22:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801be24:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801be28:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801be2c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801be30:	eef0 6a48 	vmov.f32	s13, s16
 801be34:	ee69 7a27 	vmul.f32	s15, s18, s15
 801be38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801be3c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801be40:	ee16 4a90 	vmov	r4, s13
 801be44:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801be48:	eef0 6a68 	vmov.f32	s13, s17
 801be4c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801be50:	ee18 2a10 	vmov	r2, s16
 801be54:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801be58:	fb92 f3f3 	sdiv	r3, r2, r3
 801be5c:	ee18 2a90 	vmov	r2, s17
 801be60:	9329      	str	r3, [sp, #164]	; 0xa4
 801be62:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801be64:	fb92 f3f3 	sdiv	r3, r2, r3
 801be68:	932a      	str	r3, [sp, #168]	; 0xa8
 801be6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be6c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801be6e:	3b01      	subs	r3, #1
 801be70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801be74:	930a      	str	r3, [sp, #40]	; 0x28
 801be76:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801be78:	bf08      	it	eq
 801be7a:	4613      	moveq	r3, r2
 801be7c:	ee16 6a90 	vmov	r6, s13
 801be80:	9306      	str	r3, [sp, #24]
 801be82:	eef0 8a67 	vmov.f32	s17, s15
 801be86:	eeb0 8a47 	vmov.f32	s16, s14
 801be8a:	e69a      	b.n	801bbc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801be8c:	2900      	cmp	r1, #0
 801be8e:	f43f af47 	beq.w	801bd20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801be92:	4453      	add	r3, sl
 801be94:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801be98:	07db      	lsls	r3, r3, #31
 801be9a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801be9e:	bf54      	ite	pl
 801bea0:	f00c 030f 	andpl.w	r3, ip, #15
 801bea4:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801bea8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801beac:	b2db      	uxtb	r3, r3
 801beae:	930b      	str	r3, [sp, #44]	; 0x2c
 801beb0:	e736      	b.n	801bd20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801beb2:	00d2      	lsls	r2, r2, #3
 801beb4:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801beb8:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801bebc:	f8a8 1000 	strh.w	r1, [r8]
 801bec0:	e790      	b.n	801bde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801bec2:	1c45      	adds	r5, r0, #1
 801bec4:	d18e      	bne.n	801bde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801bec6:	9d07      	ldr	r5, [sp, #28]
 801bec8:	4285      	cmp	r5, r0
 801beca:	dd8b      	ble.n	801bde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801becc:	1c5d      	adds	r5, r3, #1
 801bece:	db89      	blt.n	801bde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801bed0:	9d08      	ldr	r5, [sp, #32]
 801bed2:	429d      	cmp	r5, r3
 801bed4:	dd86      	ble.n	801bde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801bed6:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801beda:	9b07      	ldr	r3, [sp, #28]
 801bedc:	9300      	str	r3, [sp, #0]
 801bede:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801bee2:	9501      	str	r5, [sp, #4]
 801bee4:	4653      	mov	r3, sl
 801bee6:	463a      	mov	r2, r7
 801bee8:	4641      	mov	r1, r8
 801beea:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801beec:	f7ff fd54 	bl	801b998 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801bef0:	e778      	b.n	801bde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801bef2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bef4:	1422      	asrs	r2, r4, #16
 801bef6:	1433      	asrs	r3, r6, #16
 801bef8:	fb01 2303 	mla	r3, r1, r3, r2
 801befc:	085a      	lsrs	r2, r3, #1
 801befe:	07d9      	lsls	r1, r3, #31
 801bf00:	5cba      	ldrb	r2, [r7, r2]
 801bf02:	bf54      	ite	pl
 801bf04:	f002 020f 	andpl.w	r2, r2, #15
 801bf08:	1112      	asrmi	r2, r2, #4
 801bf0a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bf0e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801bf12:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801bf16:	b2d2      	uxtb	r2, r2
 801bf18:	2800      	cmp	r0, #0
 801bf1a:	f000 8099 	beq.w	801c050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4f0>
 801bf1e:	f103 0e01 	add.w	lr, r3, #1
 801bf22:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801bf26:	f01e 0f01 	tst.w	lr, #1
 801bf2a:	5c79      	ldrb	r1, [r7, r1]
 801bf2c:	bf0c      	ite	eq
 801bf2e:	f001 010f 	andeq.w	r1, r1, #15
 801bf32:	1109      	asrne	r1, r1, #4
 801bf34:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801bf38:	b2c9      	uxtb	r1, r1
 801bf3a:	9111      	str	r1, [sp, #68]	; 0x44
 801bf3c:	f1bc 0f00 	cmp.w	ip, #0
 801bf40:	d018      	beq.n	801bf74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 801bf42:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bf44:	440b      	add	r3, r1
 801bf46:	0859      	lsrs	r1, r3, #1
 801bf48:	07dd      	lsls	r5, r3, #31
 801bf4a:	5c79      	ldrb	r1, [r7, r1]
 801bf4c:	bf54      	ite	pl
 801bf4e:	f001 010f 	andpl.w	r1, r1, #15
 801bf52:	1109      	asrmi	r1, r1, #4
 801bf54:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801bf58:	b2c9      	uxtb	r1, r1
 801bf5a:	3301      	adds	r3, #1
 801bf5c:	910c      	str	r1, [sp, #48]	; 0x30
 801bf5e:	0859      	lsrs	r1, r3, #1
 801bf60:	07dd      	lsls	r5, r3, #31
 801bf62:	5c79      	ldrb	r1, [r7, r1]
 801bf64:	bf54      	ite	pl
 801bf66:	f001 010f 	andpl.w	r1, r1, #15
 801bf6a:	1109      	asrmi	r1, r1, #4
 801bf6c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801bf70:	b2c9      	uxtb	r1, r1
 801bf72:	9112      	str	r1, [sp, #72]	; 0x48
 801bf74:	b280      	uxth	r0, r0
 801bf76:	fa1f fc8c 	uxth.w	ip, ip
 801bf7a:	fb00 f30c 	mul.w	r3, r0, ip
 801bf7e:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801bf82:	0100      	lsls	r0, r0, #4
 801bf84:	fa1f fc8c 	uxth.w	ip, ip
 801bf88:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801bf8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bf8e:	1ac0      	subs	r0, r0, r3
 801bf90:	eba1 010c 	sub.w	r1, r1, ip
 801bf94:	b280      	uxth	r0, r0
 801bf96:	b289      	uxth	r1, r1
 801bf98:	4368      	muls	r0, r5
 801bf9a:	fb02 0201 	mla	r2, r2, r1, r0
 801bf9e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bfa0:	fb0c 2c01 	mla	ip, ip, r1, r2
 801bfa4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bfa6:	fb03 c302 	mla	r3, r3, r2, ip
 801bfaa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bfae:	2b00      	cmp	r3, #0
 801bfb0:	d045      	beq.n	801c03e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801bfb2:	4a34      	ldr	r2, [pc, #208]	; (801c084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 801bfb4:	6811      	ldr	r1, [r2, #0]
 801bfb6:	2bff      	cmp	r3, #255	; 0xff
 801bfb8:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801bfbc:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801bfc0:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801bfc4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bfc8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bfcc:	b2c9      	uxtb	r1, r1
 801bfce:	d050      	beq.n	801c072 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 801bfd0:	f8b8 c000 	ldrh.w	ip, [r8]
 801bfd4:	fa1f f983 	uxth.w	r9, r3
 801bfd8:	ea4f 202c 	mov.w	r0, ip, asr #8
 801bfdc:	43db      	mvns	r3, r3
 801bfde:	b2db      	uxtb	r3, r3
 801bfe0:	fb1e fe09 	smulbb	lr, lr, r9
 801bfe4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bfe8:	fb00 e003 	mla	r0, r0, r3, lr
 801bfec:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801bff0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801bff4:	fb12 f209 	smulbb	r2, r2, r9
 801bff8:	fb0e 2203 	mla	r2, lr, r3, r2
 801bffc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c000:	b292      	uxth	r2, r2
 801c002:	fa5f fc8c 	uxtb.w	ip, ip
 801c006:	fb11 f109 	smulbb	r1, r1, r9
 801c00a:	b280      	uxth	r0, r0
 801c00c:	fb0c 1103 	mla	r1, ip, r3, r1
 801c010:	f102 0e01 	add.w	lr, r2, #1
 801c014:	b289      	uxth	r1, r1
 801c016:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c01a:	f100 0e01 	add.w	lr, r0, #1
 801c01e:	0952      	lsrs	r2, r2, #5
 801c020:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801c024:	1c4b      	adds	r3, r1, #1
 801c026:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c02a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c02e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c032:	4302      	orrs	r2, r0
 801c034:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c038:	430a      	orrs	r2, r1
 801c03a:	f8a8 2000 	strh.w	r2, [r8]
 801c03e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c040:	441c      	add	r4, r3
 801c042:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c044:	f108 0802 	add.w	r8, r8, #2
 801c048:	441e      	add	r6, r3
 801c04a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c04e:	e5eb      	b.n	801bc28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801c050:	f1bc 0f00 	cmp.w	ip, #0
 801c054:	d08e      	beq.n	801bf74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 801c056:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c058:	440b      	add	r3, r1
 801c05a:	0859      	lsrs	r1, r3, #1
 801c05c:	07db      	lsls	r3, r3, #31
 801c05e:	5c79      	ldrb	r1, [r7, r1]
 801c060:	bf54      	ite	pl
 801c062:	f001 010f 	andpl.w	r1, r1, #15
 801c066:	1109      	asrmi	r1, r1, #4
 801c068:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c06c:	b2c9      	uxtb	r1, r1
 801c06e:	910c      	str	r1, [sp, #48]	; 0x30
 801c070:	e780      	b.n	801bf74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 801c072:	00d2      	lsls	r2, r2, #3
 801c074:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801c078:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801c07c:	f8a8 1000 	strh.w	r1, [r8]
 801c080:	e7dd      	b.n	801c03e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801c082:	bf00      	nop
 801c084:	200124c0 	.word	0x200124c0
 801c088:	b015      	add	sp, #84	; 0x54
 801c08a:	ecbd 8b08 	vpop	{d8-d11}
 801c08e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c092:	bf00      	nop

0801c094 <CRC_Lock>:
 801c094:	b530      	push	{r4, r5, lr}
 801c096:	4a1d      	ldr	r2, [pc, #116]	; (801c10c <CRC_Lock+0x78>)
 801c098:	6813      	ldr	r3, [r2, #0]
 801c09a:	f023 0301 	bic.w	r3, r3, #1
 801c09e:	6013      	str	r3, [r2, #0]
 801c0a0:	4b1b      	ldr	r3, [pc, #108]	; (801c110 <CRC_Lock+0x7c>)
 801c0a2:	681a      	ldr	r2, [r3, #0]
 801c0a4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801c0a8:	4022      	ands	r2, r4
 801c0aa:	f24c 2540 	movw	r5, #49728	; 0xc240
 801c0ae:	42aa      	cmp	r2, r5
 801c0b0:	d005      	beq.n	801c0be <CRC_Lock+0x2a>
 801c0b2:	681b      	ldr	r3, [r3, #0]
 801c0b4:	f24c 2270 	movw	r2, #49776	; 0xc270
 801c0b8:	4023      	ands	r3, r4
 801c0ba:	4293      	cmp	r3, r2
 801c0bc:	d11d      	bne.n	801c0fa <CRC_Lock+0x66>
 801c0be:	4b15      	ldr	r3, [pc, #84]	; (801c114 <CRC_Lock+0x80>)
 801c0c0:	681b      	ldr	r3, [r3, #0]
 801c0c2:	b9d3      	cbnz	r3, 801c0fa <CRC_Lock+0x66>
 801c0c4:	4a14      	ldr	r2, [pc, #80]	; (801c118 <CRC_Lock+0x84>)
 801c0c6:	6813      	ldr	r3, [r2, #0]
 801c0c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c0cc:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801c0d0:	d006      	beq.n	801c0e0 <CRC_Lock+0x4c>
 801c0d2:	6813      	ldr	r3, [r2, #0]
 801c0d4:	f240 4283 	movw	r2, #1155	; 0x483
 801c0d8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c0dc:	4293      	cmp	r3, r2
 801c0de:	d10c      	bne.n	801c0fa <CRC_Lock+0x66>
 801c0e0:	4b0e      	ldr	r3, [pc, #56]	; (801c11c <CRC_Lock+0x88>)
 801c0e2:	2201      	movs	r2, #1
 801c0e4:	601a      	str	r2, [r3, #0]
 801c0e6:	681a      	ldr	r2, [r3, #0]
 801c0e8:	2a00      	cmp	r2, #0
 801c0ea:	d1fc      	bne.n	801c0e6 <CRC_Lock+0x52>
 801c0ec:	4b0c      	ldr	r3, [pc, #48]	; (801c120 <CRC_Lock+0x8c>)
 801c0ee:	6018      	str	r0, [r3, #0]
 801c0f0:	6818      	ldr	r0, [r3, #0]
 801c0f2:	1a43      	subs	r3, r0, r1
 801c0f4:	4258      	negs	r0, r3
 801c0f6:	4158      	adcs	r0, r3
 801c0f8:	bd30      	pop	{r4, r5, pc}
 801c0fa:	4b0a      	ldr	r3, [pc, #40]	; (801c124 <CRC_Lock+0x90>)
 801c0fc:	2201      	movs	r2, #1
 801c0fe:	601a      	str	r2, [r3, #0]
 801c100:	681a      	ldr	r2, [r3, #0]
 801c102:	2a00      	cmp	r2, #0
 801c104:	d1fc      	bne.n	801c100 <CRC_Lock+0x6c>
 801c106:	4b08      	ldr	r3, [pc, #32]	; (801c128 <CRC_Lock+0x94>)
 801c108:	e7f1      	b.n	801c0ee <CRC_Lock+0x5a>
 801c10a:	bf00      	nop
 801c10c:	e0002000 	.word	0xe0002000
 801c110:	e000ed00 	.word	0xe000ed00
 801c114:	e0042000 	.word	0xe0042000
 801c118:	5c001000 	.word	0x5c001000
 801c11c:	58024c08 	.word	0x58024c08
 801c120:	58024c00 	.word	0x58024c00
 801c124:	40023008 	.word	0x40023008
 801c128:	40023000 	.word	0x40023000

0801c12c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801c12c:	6101      	str	r1, [r0, #16]
 801c12e:	4770      	bx	lr

0801c130 <_ZN8touchgfx8Gestures4tickEv>:
 801c130:	7b83      	ldrb	r3, [r0, #14]
 801c132:	b14b      	cbz	r3, 801c148 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801c134:	8903      	ldrh	r3, [r0, #8]
 801c136:	3301      	adds	r3, #1
 801c138:	b29b      	uxth	r3, r3
 801c13a:	2b07      	cmp	r3, #7
 801c13c:	8103      	strh	r3, [r0, #8]
 801c13e:	bf81      	itttt	hi
 801c140:	2300      	movhi	r3, #0
 801c142:	8143      	strhhi	r3, [r0, #10]
 801c144:	8183      	strhhi	r3, [r0, #12]
 801c146:	7383      	strbhi	r3, [r0, #14]
 801c148:	4770      	bx	lr
	...

0801c14c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801c14c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801c150:	4604      	mov	r4, r0
 801c152:	8880      	ldrh	r0, [r0, #4]
 801c154:	f8ad 0006 	strh.w	r0, [sp, #6]
 801c158:	4698      	mov	r8, r3
 801c15a:	eba8 0000 	sub.w	r0, r8, r0
 801c15e:	4b1c      	ldr	r3, [pc, #112]	; (801c1d0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801c160:	9300      	str	r3, [sp, #0]
 801c162:	b280      	uxth	r0, r0
 801c164:	2300      	movs	r3, #0
 801c166:	f88d 3004 	strb.w	r3, [sp, #4]
 801c16a:	b203      	sxth	r3, r0
 801c16c:	2b00      	cmp	r3, #0
 801c16e:	bfb8      	it	lt
 801c170:	4240      	neglt	r0, r0
 801c172:	4617      	mov	r7, r2
 801c174:	8aa2      	ldrh	r2, [r4, #20]
 801c176:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801c17a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801c17e:	bfb8      	it	lt
 801c180:	b203      	sxthlt	r3, r0
 801c182:	460e      	mov	r6, r1
 801c184:	4293      	cmp	r3, r2
 801c186:	88e1      	ldrh	r1, [r4, #6]
 801c188:	f8ad 1008 	strh.w	r1, [sp, #8]
 801c18c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801c190:	dc08      	bgt.n	801c1a4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801c192:	1a69      	subs	r1, r5, r1
 801c194:	b289      	uxth	r1, r1
 801c196:	b20b      	sxth	r3, r1
 801c198:	2b00      	cmp	r3, #0
 801c19a:	bfbc      	itt	lt
 801c19c:	4249      	neglt	r1, r1
 801c19e:	b20b      	sxthlt	r3, r1
 801c1a0:	429a      	cmp	r2, r3
 801c1a2:	da13      	bge.n	801c1cc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801c1a4:	6920      	ldr	r0, [r4, #16]
 801c1a6:	6803      	ldr	r3, [r0, #0]
 801c1a8:	4669      	mov	r1, sp
 801c1aa:	685b      	ldr	r3, [r3, #4]
 801c1ac:	4798      	blx	r3
 801c1ae:	eba8 0606 	sub.w	r6, r8, r6
 801c1b2:	2300      	movs	r3, #0
 801c1b4:	1bef      	subs	r7, r5, r7
 801c1b6:	2001      	movs	r0, #1
 801c1b8:	8123      	strh	r3, [r4, #8]
 801c1ba:	8166      	strh	r6, [r4, #10]
 801c1bc:	81a7      	strh	r7, [r4, #12]
 801c1be:	f8a4 8004 	strh.w	r8, [r4, #4]
 801c1c2:	80e5      	strh	r5, [r4, #6]
 801c1c4:	73a0      	strb	r0, [r4, #14]
 801c1c6:	b004      	add	sp, #16
 801c1c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c1cc:	2000      	movs	r0, #0
 801c1ce:	e7fa      	b.n	801c1c6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801c1d0:	080202dc 	.word	0x080202dc

0801c1d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801c1d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c1d6:	461e      	mov	r6, r3
 801c1d8:	1e4b      	subs	r3, r1, #1
 801c1da:	2b01      	cmp	r3, #1
 801c1dc:	b085      	sub	sp, #20
 801c1de:	4604      	mov	r4, r0
 801c1e0:	460d      	mov	r5, r1
 801c1e2:	4617      	mov	r7, r2
 801c1e4:	d84b      	bhi.n	801c27e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801c1e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801c1ea:	1cd3      	adds	r3, r2, #3
 801c1ec:	b29b      	uxth	r3, r3
 801c1ee:	2b06      	cmp	r3, #6
 801c1f0:	d916      	bls.n	801c220 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801c1f2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801c294 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801c1f6:	f8cd c004 	str.w	ip, [sp, #4]
 801c1fa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c1fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c202:	6900      	ldr	r0, [r0, #16]
 801c204:	f8ad 100c 	strh.w	r1, [sp, #12]
 801c208:	f04f 0c00 	mov.w	ip, #0
 801c20c:	f88d c008 	strb.w	ip, [sp, #8]
 801c210:	f8ad 200a 	strh.w	r2, [sp, #10]
 801c214:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c218:	6803      	ldr	r3, [r0, #0]
 801c21a:	a901      	add	r1, sp, #4
 801c21c:	689b      	ldr	r3, [r3, #8]
 801c21e:	4798      	blx	r3
 801c220:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c224:	1cd3      	adds	r3, r2, #3
 801c226:	b29b      	uxth	r3, r3
 801c228:	2b06      	cmp	r3, #6
 801c22a:	d916      	bls.n	801c25a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801c22c:	f8df c064 	ldr.w	ip, [pc, #100]	; 801c294 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801c230:	f8cd c004 	str.w	ip, [sp, #4]
 801c234:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c238:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c23c:	6920      	ldr	r0, [r4, #16]
 801c23e:	f8ad 100c 	strh.w	r1, [sp, #12]
 801c242:	f04f 0c01 	mov.w	ip, #1
 801c246:	f88d c008 	strb.w	ip, [sp, #8]
 801c24a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801c24e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c252:	6803      	ldr	r3, [r0, #0]
 801c254:	a901      	add	r1, sp, #4
 801c256:	689b      	ldr	r3, [r3, #8]
 801c258:	4798      	blx	r3
 801c25a:	4b0d      	ldr	r3, [pc, #52]	; (801c290 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801c25c:	9301      	str	r3, [sp, #4]
 801c25e:	6920      	ldr	r0, [r4, #16]
 801c260:	f88d 5008 	strb.w	r5, [sp, #8]
 801c264:	2300      	movs	r3, #0
 801c266:	f8ad 700a 	strh.w	r7, [sp, #10]
 801c26a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801c26e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c272:	6803      	ldr	r3, [r0, #0]
 801c274:	a901      	add	r1, sp, #4
 801c276:	681b      	ldr	r3, [r3, #0]
 801c278:	4798      	blx	r3
 801c27a:	b005      	add	sp, #20
 801c27c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c27e:	2900      	cmp	r1, #0
 801c280:	d1eb      	bne.n	801c25a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801c282:	80a2      	strh	r2, [r4, #4]
 801c284:	80c6      	strh	r6, [r0, #6]
 801c286:	60a1      	str	r1, [r4, #8]
 801c288:	81a1      	strh	r1, [r4, #12]
 801c28a:	73a1      	strb	r1, [r4, #14]
 801c28c:	e7e5      	b.n	801c25a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801c28e:	bf00      	nop
 801c290:	080202c8 	.word	0x080202c8
 801c294:	080202f0 	.word	0x080202f0

0801c298 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801c298:	b570      	push	{r4, r5, r6, lr}
 801c29a:	790b      	ldrb	r3, [r1, #4]
 801c29c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801c2a0:	2b00      	cmp	r3, #0
 801c2a2:	bf0c      	ite	eq
 801c2a4:	2301      	moveq	r3, #1
 801c2a6:	2300      	movne	r3, #0
 801c2a8:	4604      	mov	r4, r0
 801c2aa:	460e      	mov	r6, r1
 801c2ac:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801c2b0:	d110      	bne.n	801c2d4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801c2b2:	b185      	cbz	r5, 801c2d6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 801c2b4:	7933      	ldrb	r3, [r6, #4]
 801c2b6:	2b01      	cmp	r3, #1
 801c2b8:	d113      	bne.n	801c2e2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801c2ba:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801c2bc:	b188      	cbz	r0, 801c2e2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801c2be:	6803      	ldr	r3, [r0, #0]
 801c2c0:	68db      	ldr	r3, [r3, #12]
 801c2c2:	4798      	blx	r3
 801c2c4:	b168      	cbz	r0, 801c2e2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801c2c6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801c2c8:	6803      	ldr	r3, [r0, #0]
 801c2ca:	4621      	mov	r1, r4
 801c2cc:	689b      	ldr	r3, [r3, #8]
 801c2ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c2d2:	4718      	bx	r3
 801c2d4:	b12d      	cbz	r5, 801c2e2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801c2d6:	6823      	ldr	r3, [r4, #0]
 801c2d8:	4620      	mov	r0, r4
 801c2da:	695b      	ldr	r3, [r3, #20]
 801c2dc:	4798      	blx	r3
 801c2de:	2d00      	cmp	r5, #0
 801c2e0:	d1e8      	bne.n	801c2b4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801c2e2:	bd70      	pop	{r4, r5, r6, pc}

0801c2e4 <__aeabi_atexit>:
 801c2e4:	460b      	mov	r3, r1
 801c2e6:	4601      	mov	r1, r0
 801c2e8:	4618      	mov	r0, r3
 801c2ea:	f000 b86b 	b.w	801c3c4 <__cxa_atexit>

0801c2ee <__cxa_pure_virtual>:
 801c2ee:	b508      	push	{r3, lr}
 801c2f0:	f000 f838 	bl	801c364 <_ZSt9terminatev>

0801c2f4 <_ZdlPvj>:
 801c2f4:	f000 b828 	b.w	801c348 <_ZdlPv>

0801c2f8 <_Znwj>:
 801c2f8:	b510      	push	{r4, lr}
 801c2fa:	2800      	cmp	r0, #0
 801c2fc:	bf14      	ite	ne
 801c2fe:	4604      	movne	r4, r0
 801c300:	2401      	moveq	r4, #1
 801c302:	4620      	mov	r0, r4
 801c304:	f000 f8a8 	bl	801c458 <malloc>
 801c308:	b930      	cbnz	r0, 801c318 <_Znwj+0x20>
 801c30a:	f000 f815 	bl	801c338 <_ZSt15get_new_handlerv>
 801c30e:	b908      	cbnz	r0, 801c314 <_Znwj+0x1c>
 801c310:	f000 f82d 	bl	801c36e <abort>
 801c314:	4780      	blx	r0
 801c316:	e7f4      	b.n	801c302 <_Znwj+0xa>
 801c318:	bd10      	pop	{r4, pc}

0801c31a <__cxa_guard_acquire>:
 801c31a:	6803      	ldr	r3, [r0, #0]
 801c31c:	07db      	lsls	r3, r3, #31
 801c31e:	d406      	bmi.n	801c32e <__cxa_guard_acquire+0x14>
 801c320:	7843      	ldrb	r3, [r0, #1]
 801c322:	b103      	cbz	r3, 801c326 <__cxa_guard_acquire+0xc>
 801c324:	deff      	udf	#255	; 0xff
 801c326:	2301      	movs	r3, #1
 801c328:	7043      	strb	r3, [r0, #1]
 801c32a:	4618      	mov	r0, r3
 801c32c:	4770      	bx	lr
 801c32e:	2000      	movs	r0, #0
 801c330:	4770      	bx	lr

0801c332 <__cxa_guard_release>:
 801c332:	2301      	movs	r3, #1
 801c334:	6003      	str	r3, [r0, #0]
 801c336:	4770      	bx	lr

0801c338 <_ZSt15get_new_handlerv>:
 801c338:	4b02      	ldr	r3, [pc, #8]	; (801c344 <_ZSt15get_new_handlerv+0xc>)
 801c33a:	6818      	ldr	r0, [r3, #0]
 801c33c:	f3bf 8f5b 	dmb	ish
 801c340:	4770      	bx	lr
 801c342:	bf00      	nop
 801c344:	200125d4 	.word	0x200125d4

0801c348 <_ZdlPv>:
 801c348:	f000 b88e 	b.w	801c468 <free>

0801c34c <_ZN10__cxxabiv111__terminateEPFvvE>:
 801c34c:	b508      	push	{r3, lr}
 801c34e:	4780      	blx	r0
 801c350:	f000 f80d 	bl	801c36e <abort>

0801c354 <_ZSt13get_terminatev>:
 801c354:	4b02      	ldr	r3, [pc, #8]	; (801c360 <_ZSt13get_terminatev+0xc>)
 801c356:	6818      	ldr	r0, [r3, #0]
 801c358:	f3bf 8f5b 	dmb	ish
 801c35c:	4770      	bx	lr
 801c35e:	bf00      	nop
 801c360:	20000108 	.word	0x20000108

0801c364 <_ZSt9terminatev>:
 801c364:	b508      	push	{r3, lr}
 801c366:	f7ff fff5 	bl	801c354 <_ZSt13get_terminatev>
 801c36a:	f7ff ffef 	bl	801c34c <_ZN10__cxxabiv111__terminateEPFvvE>

0801c36e <abort>:
 801c36e:	b508      	push	{r3, lr}
 801c370:	2006      	movs	r0, #6
 801c372:	f000 fc3d 	bl	801cbf0 <raise>
 801c376:	2001      	movs	r0, #1
 801c378:	f7e6 fae0 	bl	800293c <_exit>

0801c37c <__assert_func>:
 801c37c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801c37e:	461c      	mov	r4, r3
 801c380:	4b09      	ldr	r3, [pc, #36]	; (801c3a8 <__assert_func+0x2c>)
 801c382:	681b      	ldr	r3, [r3, #0]
 801c384:	4605      	mov	r5, r0
 801c386:	68d8      	ldr	r0, [r3, #12]
 801c388:	b152      	cbz	r2, 801c3a0 <__assert_func+0x24>
 801c38a:	4b08      	ldr	r3, [pc, #32]	; (801c3ac <__assert_func+0x30>)
 801c38c:	9100      	str	r1, [sp, #0]
 801c38e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801c392:	4907      	ldr	r1, [pc, #28]	; (801c3b0 <__assert_func+0x34>)
 801c394:	462b      	mov	r3, r5
 801c396:	4622      	mov	r2, r4
 801c398:	f000 f828 	bl	801c3ec <fiprintf>
 801c39c:	f7ff ffe7 	bl	801c36e <abort>
 801c3a0:	4b04      	ldr	r3, [pc, #16]	; (801c3b4 <__assert_func+0x38>)
 801c3a2:	461a      	mov	r2, r3
 801c3a4:	e7f2      	b.n	801c38c <__assert_func+0x10>
 801c3a6:	bf00      	nop
 801c3a8:	2000010c 	.word	0x2000010c
 801c3ac:	08021560 	.word	0x08021560
 801c3b0:	0802156d 	.word	0x0802156d
 801c3b4:	0802159b 	.word	0x0802159b

0801c3b8 <atexit>:
 801c3b8:	2300      	movs	r3, #0
 801c3ba:	4601      	mov	r1, r0
 801c3bc:	461a      	mov	r2, r3
 801c3be:	4618      	mov	r0, r3
 801c3c0:	f000 bcf2 	b.w	801cda8 <__register_exitproc>

0801c3c4 <__cxa_atexit>:
 801c3c4:	b510      	push	{r4, lr}
 801c3c6:	4c05      	ldr	r4, [pc, #20]	; (801c3dc <__cxa_atexit+0x18>)
 801c3c8:	4613      	mov	r3, r2
 801c3ca:	b12c      	cbz	r4, 801c3d8 <__cxa_atexit+0x14>
 801c3cc:	460a      	mov	r2, r1
 801c3ce:	4601      	mov	r1, r0
 801c3d0:	2002      	movs	r0, #2
 801c3d2:	f000 fce9 	bl	801cda8 <__register_exitproc>
 801c3d6:	bd10      	pop	{r4, pc}
 801c3d8:	4620      	mov	r0, r4
 801c3da:	e7fc      	b.n	801c3d6 <__cxa_atexit+0x12>
 801c3dc:	0801cda9 	.word	0x0801cda9

0801c3e0 <__errno>:
 801c3e0:	4b01      	ldr	r3, [pc, #4]	; (801c3e8 <__errno+0x8>)
 801c3e2:	6818      	ldr	r0, [r3, #0]
 801c3e4:	4770      	bx	lr
 801c3e6:	bf00      	nop
 801c3e8:	2000010c 	.word	0x2000010c

0801c3ec <fiprintf>:
 801c3ec:	b40e      	push	{r1, r2, r3}
 801c3ee:	b503      	push	{r0, r1, lr}
 801c3f0:	4601      	mov	r1, r0
 801c3f2:	ab03      	add	r3, sp, #12
 801c3f4:	4805      	ldr	r0, [pc, #20]	; (801c40c <fiprintf+0x20>)
 801c3f6:	f853 2b04 	ldr.w	r2, [r3], #4
 801c3fa:	6800      	ldr	r0, [r0, #0]
 801c3fc:	9301      	str	r3, [sp, #4]
 801c3fe:	f000 f921 	bl	801c644 <_vfiprintf_r>
 801c402:	b002      	add	sp, #8
 801c404:	f85d eb04 	ldr.w	lr, [sp], #4
 801c408:	b003      	add	sp, #12
 801c40a:	4770      	bx	lr
 801c40c:	2000010c 	.word	0x2000010c

0801c410 <__libc_init_array>:
 801c410:	b570      	push	{r4, r5, r6, lr}
 801c412:	4e0d      	ldr	r6, [pc, #52]	; (801c448 <__libc_init_array+0x38>)
 801c414:	4c0d      	ldr	r4, [pc, #52]	; (801c44c <__libc_init_array+0x3c>)
 801c416:	1ba4      	subs	r4, r4, r6
 801c418:	10a4      	asrs	r4, r4, #2
 801c41a:	2500      	movs	r5, #0
 801c41c:	42a5      	cmp	r5, r4
 801c41e:	d109      	bne.n	801c434 <__libc_init_array+0x24>
 801c420:	4e0b      	ldr	r6, [pc, #44]	; (801c450 <__libc_init_array+0x40>)
 801c422:	4c0c      	ldr	r4, [pc, #48]	; (801c454 <__libc_init_array+0x44>)
 801c424:	f000 ffb0 	bl	801d388 <_init>
 801c428:	1ba4      	subs	r4, r4, r6
 801c42a:	10a4      	asrs	r4, r4, #2
 801c42c:	2500      	movs	r5, #0
 801c42e:	42a5      	cmp	r5, r4
 801c430:	d105      	bne.n	801c43e <__libc_init_array+0x2e>
 801c432:	bd70      	pop	{r4, r5, r6, pc}
 801c434:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801c438:	4798      	blx	r3
 801c43a:	3501      	adds	r5, #1
 801c43c:	e7ee      	b.n	801c41c <__libc_init_array+0xc>
 801c43e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801c442:	4798      	blx	r3
 801c444:	3501      	adds	r5, #1
 801c446:	e7f2      	b.n	801c42e <__libc_init_array+0x1e>
 801c448:	08064b74 	.word	0x08064b74
 801c44c:	08064b74 	.word	0x08064b74
 801c450:	08064b74 	.word	0x08064b74
 801c454:	08064b8c 	.word	0x08064b8c

0801c458 <malloc>:
 801c458:	4b02      	ldr	r3, [pc, #8]	; (801c464 <malloc+0xc>)
 801c45a:	4601      	mov	r1, r0
 801c45c:	6818      	ldr	r0, [r3, #0]
 801c45e:	f000 b86d 	b.w	801c53c <_malloc_r>
 801c462:	bf00      	nop
 801c464:	2000010c 	.word	0x2000010c

0801c468 <free>:
 801c468:	4b02      	ldr	r3, [pc, #8]	; (801c474 <free+0xc>)
 801c46a:	4601      	mov	r1, r0
 801c46c:	6818      	ldr	r0, [r3, #0]
 801c46e:	f000 b817 	b.w	801c4a0 <_free_r>
 801c472:	bf00      	nop
 801c474:	2000010c 	.word	0x2000010c

0801c478 <memcpy>:
 801c478:	b510      	push	{r4, lr}
 801c47a:	1e43      	subs	r3, r0, #1
 801c47c:	440a      	add	r2, r1
 801c47e:	4291      	cmp	r1, r2
 801c480:	d100      	bne.n	801c484 <memcpy+0xc>
 801c482:	bd10      	pop	{r4, pc}
 801c484:	f811 4b01 	ldrb.w	r4, [r1], #1
 801c488:	f803 4f01 	strb.w	r4, [r3, #1]!
 801c48c:	e7f7      	b.n	801c47e <memcpy+0x6>

0801c48e <memset>:
 801c48e:	4402      	add	r2, r0
 801c490:	4603      	mov	r3, r0
 801c492:	4293      	cmp	r3, r2
 801c494:	d100      	bne.n	801c498 <memset+0xa>
 801c496:	4770      	bx	lr
 801c498:	f803 1b01 	strb.w	r1, [r3], #1
 801c49c:	e7f9      	b.n	801c492 <memset+0x4>
	...

0801c4a0 <_free_r>:
 801c4a0:	b538      	push	{r3, r4, r5, lr}
 801c4a2:	4605      	mov	r5, r0
 801c4a4:	2900      	cmp	r1, #0
 801c4a6:	d045      	beq.n	801c534 <_free_r+0x94>
 801c4a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801c4ac:	1f0c      	subs	r4, r1, #4
 801c4ae:	2b00      	cmp	r3, #0
 801c4b0:	bfb8      	it	lt
 801c4b2:	18e4      	addlt	r4, r4, r3
 801c4b4:	f000 feba 	bl	801d22c <__malloc_lock>
 801c4b8:	4a1f      	ldr	r2, [pc, #124]	; (801c538 <_free_r+0x98>)
 801c4ba:	6813      	ldr	r3, [r2, #0]
 801c4bc:	4610      	mov	r0, r2
 801c4be:	b933      	cbnz	r3, 801c4ce <_free_r+0x2e>
 801c4c0:	6063      	str	r3, [r4, #4]
 801c4c2:	6014      	str	r4, [r2, #0]
 801c4c4:	4628      	mov	r0, r5
 801c4c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c4ca:	f000 beb0 	b.w	801d22e <__malloc_unlock>
 801c4ce:	42a3      	cmp	r3, r4
 801c4d0:	d90c      	bls.n	801c4ec <_free_r+0x4c>
 801c4d2:	6821      	ldr	r1, [r4, #0]
 801c4d4:	1862      	adds	r2, r4, r1
 801c4d6:	4293      	cmp	r3, r2
 801c4d8:	bf04      	itt	eq
 801c4da:	681a      	ldreq	r2, [r3, #0]
 801c4dc:	685b      	ldreq	r3, [r3, #4]
 801c4de:	6063      	str	r3, [r4, #4]
 801c4e0:	bf04      	itt	eq
 801c4e2:	1852      	addeq	r2, r2, r1
 801c4e4:	6022      	streq	r2, [r4, #0]
 801c4e6:	6004      	str	r4, [r0, #0]
 801c4e8:	e7ec      	b.n	801c4c4 <_free_r+0x24>
 801c4ea:	4613      	mov	r3, r2
 801c4ec:	685a      	ldr	r2, [r3, #4]
 801c4ee:	b10a      	cbz	r2, 801c4f4 <_free_r+0x54>
 801c4f0:	42a2      	cmp	r2, r4
 801c4f2:	d9fa      	bls.n	801c4ea <_free_r+0x4a>
 801c4f4:	6819      	ldr	r1, [r3, #0]
 801c4f6:	1858      	adds	r0, r3, r1
 801c4f8:	42a0      	cmp	r0, r4
 801c4fa:	d10b      	bne.n	801c514 <_free_r+0x74>
 801c4fc:	6820      	ldr	r0, [r4, #0]
 801c4fe:	4401      	add	r1, r0
 801c500:	1858      	adds	r0, r3, r1
 801c502:	4282      	cmp	r2, r0
 801c504:	6019      	str	r1, [r3, #0]
 801c506:	d1dd      	bne.n	801c4c4 <_free_r+0x24>
 801c508:	6810      	ldr	r0, [r2, #0]
 801c50a:	6852      	ldr	r2, [r2, #4]
 801c50c:	605a      	str	r2, [r3, #4]
 801c50e:	4401      	add	r1, r0
 801c510:	6019      	str	r1, [r3, #0]
 801c512:	e7d7      	b.n	801c4c4 <_free_r+0x24>
 801c514:	d902      	bls.n	801c51c <_free_r+0x7c>
 801c516:	230c      	movs	r3, #12
 801c518:	602b      	str	r3, [r5, #0]
 801c51a:	e7d3      	b.n	801c4c4 <_free_r+0x24>
 801c51c:	6820      	ldr	r0, [r4, #0]
 801c51e:	1821      	adds	r1, r4, r0
 801c520:	428a      	cmp	r2, r1
 801c522:	bf04      	itt	eq
 801c524:	6811      	ldreq	r1, [r2, #0]
 801c526:	6852      	ldreq	r2, [r2, #4]
 801c528:	6062      	str	r2, [r4, #4]
 801c52a:	bf04      	itt	eq
 801c52c:	1809      	addeq	r1, r1, r0
 801c52e:	6021      	streq	r1, [r4, #0]
 801c530:	605c      	str	r4, [r3, #4]
 801c532:	e7c7      	b.n	801c4c4 <_free_r+0x24>
 801c534:	bd38      	pop	{r3, r4, r5, pc}
 801c536:	bf00      	nop
 801c538:	200125d8 	.word	0x200125d8

0801c53c <_malloc_r>:
 801c53c:	b570      	push	{r4, r5, r6, lr}
 801c53e:	1ccd      	adds	r5, r1, #3
 801c540:	f025 0503 	bic.w	r5, r5, #3
 801c544:	3508      	adds	r5, #8
 801c546:	2d0c      	cmp	r5, #12
 801c548:	bf38      	it	cc
 801c54a:	250c      	movcc	r5, #12
 801c54c:	2d00      	cmp	r5, #0
 801c54e:	4606      	mov	r6, r0
 801c550:	db01      	blt.n	801c556 <_malloc_r+0x1a>
 801c552:	42a9      	cmp	r1, r5
 801c554:	d903      	bls.n	801c55e <_malloc_r+0x22>
 801c556:	230c      	movs	r3, #12
 801c558:	6033      	str	r3, [r6, #0]
 801c55a:	2000      	movs	r0, #0
 801c55c:	bd70      	pop	{r4, r5, r6, pc}
 801c55e:	f000 fe65 	bl	801d22c <__malloc_lock>
 801c562:	4a21      	ldr	r2, [pc, #132]	; (801c5e8 <_malloc_r+0xac>)
 801c564:	6814      	ldr	r4, [r2, #0]
 801c566:	4621      	mov	r1, r4
 801c568:	b991      	cbnz	r1, 801c590 <_malloc_r+0x54>
 801c56a:	4c20      	ldr	r4, [pc, #128]	; (801c5ec <_malloc_r+0xb0>)
 801c56c:	6823      	ldr	r3, [r4, #0]
 801c56e:	b91b      	cbnz	r3, 801c578 <_malloc_r+0x3c>
 801c570:	4630      	mov	r0, r6
 801c572:	f000 fb05 	bl	801cb80 <_sbrk_r>
 801c576:	6020      	str	r0, [r4, #0]
 801c578:	4629      	mov	r1, r5
 801c57a:	4630      	mov	r0, r6
 801c57c:	f000 fb00 	bl	801cb80 <_sbrk_r>
 801c580:	1c43      	adds	r3, r0, #1
 801c582:	d124      	bne.n	801c5ce <_malloc_r+0x92>
 801c584:	230c      	movs	r3, #12
 801c586:	6033      	str	r3, [r6, #0]
 801c588:	4630      	mov	r0, r6
 801c58a:	f000 fe50 	bl	801d22e <__malloc_unlock>
 801c58e:	e7e4      	b.n	801c55a <_malloc_r+0x1e>
 801c590:	680b      	ldr	r3, [r1, #0]
 801c592:	1b5b      	subs	r3, r3, r5
 801c594:	d418      	bmi.n	801c5c8 <_malloc_r+0x8c>
 801c596:	2b0b      	cmp	r3, #11
 801c598:	d90f      	bls.n	801c5ba <_malloc_r+0x7e>
 801c59a:	600b      	str	r3, [r1, #0]
 801c59c:	50cd      	str	r5, [r1, r3]
 801c59e:	18cc      	adds	r4, r1, r3
 801c5a0:	4630      	mov	r0, r6
 801c5a2:	f000 fe44 	bl	801d22e <__malloc_unlock>
 801c5a6:	f104 000b 	add.w	r0, r4, #11
 801c5aa:	1d23      	adds	r3, r4, #4
 801c5ac:	f020 0007 	bic.w	r0, r0, #7
 801c5b0:	1ac3      	subs	r3, r0, r3
 801c5b2:	d0d3      	beq.n	801c55c <_malloc_r+0x20>
 801c5b4:	425a      	negs	r2, r3
 801c5b6:	50e2      	str	r2, [r4, r3]
 801c5b8:	e7d0      	b.n	801c55c <_malloc_r+0x20>
 801c5ba:	428c      	cmp	r4, r1
 801c5bc:	684b      	ldr	r3, [r1, #4]
 801c5be:	bf16      	itet	ne
 801c5c0:	6063      	strne	r3, [r4, #4]
 801c5c2:	6013      	streq	r3, [r2, #0]
 801c5c4:	460c      	movne	r4, r1
 801c5c6:	e7eb      	b.n	801c5a0 <_malloc_r+0x64>
 801c5c8:	460c      	mov	r4, r1
 801c5ca:	6849      	ldr	r1, [r1, #4]
 801c5cc:	e7cc      	b.n	801c568 <_malloc_r+0x2c>
 801c5ce:	1cc4      	adds	r4, r0, #3
 801c5d0:	f024 0403 	bic.w	r4, r4, #3
 801c5d4:	42a0      	cmp	r0, r4
 801c5d6:	d005      	beq.n	801c5e4 <_malloc_r+0xa8>
 801c5d8:	1a21      	subs	r1, r4, r0
 801c5da:	4630      	mov	r0, r6
 801c5dc:	f000 fad0 	bl	801cb80 <_sbrk_r>
 801c5e0:	3001      	adds	r0, #1
 801c5e2:	d0cf      	beq.n	801c584 <_malloc_r+0x48>
 801c5e4:	6025      	str	r5, [r4, #0]
 801c5e6:	e7db      	b.n	801c5a0 <_malloc_r+0x64>
 801c5e8:	200125d8 	.word	0x200125d8
 801c5ec:	200125dc 	.word	0x200125dc

0801c5f0 <__sfputc_r>:
 801c5f0:	6893      	ldr	r3, [r2, #8]
 801c5f2:	3b01      	subs	r3, #1
 801c5f4:	2b00      	cmp	r3, #0
 801c5f6:	b410      	push	{r4}
 801c5f8:	6093      	str	r3, [r2, #8]
 801c5fa:	da08      	bge.n	801c60e <__sfputc_r+0x1e>
 801c5fc:	6994      	ldr	r4, [r2, #24]
 801c5fe:	42a3      	cmp	r3, r4
 801c600:	db01      	blt.n	801c606 <__sfputc_r+0x16>
 801c602:	290a      	cmp	r1, #10
 801c604:	d103      	bne.n	801c60e <__sfputc_r+0x1e>
 801c606:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c60a:	f000 bb0d 	b.w	801cc28 <__swbuf_r>
 801c60e:	6813      	ldr	r3, [r2, #0]
 801c610:	1c58      	adds	r0, r3, #1
 801c612:	6010      	str	r0, [r2, #0]
 801c614:	7019      	strb	r1, [r3, #0]
 801c616:	4608      	mov	r0, r1
 801c618:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c61c:	4770      	bx	lr

0801c61e <__sfputs_r>:
 801c61e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c620:	4606      	mov	r6, r0
 801c622:	460f      	mov	r7, r1
 801c624:	4614      	mov	r4, r2
 801c626:	18d5      	adds	r5, r2, r3
 801c628:	42ac      	cmp	r4, r5
 801c62a:	d101      	bne.n	801c630 <__sfputs_r+0x12>
 801c62c:	2000      	movs	r0, #0
 801c62e:	e007      	b.n	801c640 <__sfputs_r+0x22>
 801c630:	463a      	mov	r2, r7
 801c632:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c636:	4630      	mov	r0, r6
 801c638:	f7ff ffda 	bl	801c5f0 <__sfputc_r>
 801c63c:	1c43      	adds	r3, r0, #1
 801c63e:	d1f3      	bne.n	801c628 <__sfputs_r+0xa>
 801c640:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801c644 <_vfiprintf_r>:
 801c644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c648:	460c      	mov	r4, r1
 801c64a:	b09d      	sub	sp, #116	; 0x74
 801c64c:	4617      	mov	r7, r2
 801c64e:	461d      	mov	r5, r3
 801c650:	4606      	mov	r6, r0
 801c652:	b118      	cbz	r0, 801c65c <_vfiprintf_r+0x18>
 801c654:	6983      	ldr	r3, [r0, #24]
 801c656:	b90b      	cbnz	r3, 801c65c <_vfiprintf_r+0x18>
 801c658:	f000 fcfa 	bl	801d050 <__sinit>
 801c65c:	4b7c      	ldr	r3, [pc, #496]	; (801c850 <_vfiprintf_r+0x20c>)
 801c65e:	429c      	cmp	r4, r3
 801c660:	d158      	bne.n	801c714 <_vfiprintf_r+0xd0>
 801c662:	6874      	ldr	r4, [r6, #4]
 801c664:	89a3      	ldrh	r3, [r4, #12]
 801c666:	0718      	lsls	r0, r3, #28
 801c668:	d55e      	bpl.n	801c728 <_vfiprintf_r+0xe4>
 801c66a:	6923      	ldr	r3, [r4, #16]
 801c66c:	2b00      	cmp	r3, #0
 801c66e:	d05b      	beq.n	801c728 <_vfiprintf_r+0xe4>
 801c670:	2300      	movs	r3, #0
 801c672:	9309      	str	r3, [sp, #36]	; 0x24
 801c674:	2320      	movs	r3, #32
 801c676:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801c67a:	2330      	movs	r3, #48	; 0x30
 801c67c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801c680:	9503      	str	r5, [sp, #12]
 801c682:	f04f 0b01 	mov.w	fp, #1
 801c686:	46b8      	mov	r8, r7
 801c688:	4645      	mov	r5, r8
 801c68a:	f815 3b01 	ldrb.w	r3, [r5], #1
 801c68e:	b10b      	cbz	r3, 801c694 <_vfiprintf_r+0x50>
 801c690:	2b25      	cmp	r3, #37	; 0x25
 801c692:	d154      	bne.n	801c73e <_vfiprintf_r+0xfa>
 801c694:	ebb8 0a07 	subs.w	sl, r8, r7
 801c698:	d00b      	beq.n	801c6b2 <_vfiprintf_r+0x6e>
 801c69a:	4653      	mov	r3, sl
 801c69c:	463a      	mov	r2, r7
 801c69e:	4621      	mov	r1, r4
 801c6a0:	4630      	mov	r0, r6
 801c6a2:	f7ff ffbc 	bl	801c61e <__sfputs_r>
 801c6a6:	3001      	adds	r0, #1
 801c6a8:	f000 80c2 	beq.w	801c830 <_vfiprintf_r+0x1ec>
 801c6ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c6ae:	4453      	add	r3, sl
 801c6b0:	9309      	str	r3, [sp, #36]	; 0x24
 801c6b2:	f898 3000 	ldrb.w	r3, [r8]
 801c6b6:	2b00      	cmp	r3, #0
 801c6b8:	f000 80ba 	beq.w	801c830 <_vfiprintf_r+0x1ec>
 801c6bc:	2300      	movs	r3, #0
 801c6be:	f04f 32ff 	mov.w	r2, #4294967295
 801c6c2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801c6c6:	9304      	str	r3, [sp, #16]
 801c6c8:	9307      	str	r3, [sp, #28]
 801c6ca:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801c6ce:	931a      	str	r3, [sp, #104]	; 0x68
 801c6d0:	46a8      	mov	r8, r5
 801c6d2:	2205      	movs	r2, #5
 801c6d4:	f818 1b01 	ldrb.w	r1, [r8], #1
 801c6d8:	485e      	ldr	r0, [pc, #376]	; (801c854 <_vfiprintf_r+0x210>)
 801c6da:	f7e3 fd89 	bl	80001f0 <memchr>
 801c6de:	9b04      	ldr	r3, [sp, #16]
 801c6e0:	bb78      	cbnz	r0, 801c742 <_vfiprintf_r+0xfe>
 801c6e2:	06d9      	lsls	r1, r3, #27
 801c6e4:	bf44      	itt	mi
 801c6e6:	2220      	movmi	r2, #32
 801c6e8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801c6ec:	071a      	lsls	r2, r3, #28
 801c6ee:	bf44      	itt	mi
 801c6f0:	222b      	movmi	r2, #43	; 0x2b
 801c6f2:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801c6f6:	782a      	ldrb	r2, [r5, #0]
 801c6f8:	2a2a      	cmp	r2, #42	; 0x2a
 801c6fa:	d02a      	beq.n	801c752 <_vfiprintf_r+0x10e>
 801c6fc:	9a07      	ldr	r2, [sp, #28]
 801c6fe:	46a8      	mov	r8, r5
 801c700:	2000      	movs	r0, #0
 801c702:	250a      	movs	r5, #10
 801c704:	4641      	mov	r1, r8
 801c706:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c70a:	3b30      	subs	r3, #48	; 0x30
 801c70c:	2b09      	cmp	r3, #9
 801c70e:	d969      	bls.n	801c7e4 <_vfiprintf_r+0x1a0>
 801c710:	b360      	cbz	r0, 801c76c <_vfiprintf_r+0x128>
 801c712:	e024      	b.n	801c75e <_vfiprintf_r+0x11a>
 801c714:	4b50      	ldr	r3, [pc, #320]	; (801c858 <_vfiprintf_r+0x214>)
 801c716:	429c      	cmp	r4, r3
 801c718:	d101      	bne.n	801c71e <_vfiprintf_r+0xda>
 801c71a:	68b4      	ldr	r4, [r6, #8]
 801c71c:	e7a2      	b.n	801c664 <_vfiprintf_r+0x20>
 801c71e:	4b4f      	ldr	r3, [pc, #316]	; (801c85c <_vfiprintf_r+0x218>)
 801c720:	429c      	cmp	r4, r3
 801c722:	bf08      	it	eq
 801c724:	68f4      	ldreq	r4, [r6, #12]
 801c726:	e79d      	b.n	801c664 <_vfiprintf_r+0x20>
 801c728:	4621      	mov	r1, r4
 801c72a:	4630      	mov	r0, r6
 801c72c:	f000 face 	bl	801cccc <__swsetup_r>
 801c730:	2800      	cmp	r0, #0
 801c732:	d09d      	beq.n	801c670 <_vfiprintf_r+0x2c>
 801c734:	f04f 30ff 	mov.w	r0, #4294967295
 801c738:	b01d      	add	sp, #116	; 0x74
 801c73a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c73e:	46a8      	mov	r8, r5
 801c740:	e7a2      	b.n	801c688 <_vfiprintf_r+0x44>
 801c742:	4a44      	ldr	r2, [pc, #272]	; (801c854 <_vfiprintf_r+0x210>)
 801c744:	1a80      	subs	r0, r0, r2
 801c746:	fa0b f000 	lsl.w	r0, fp, r0
 801c74a:	4318      	orrs	r0, r3
 801c74c:	9004      	str	r0, [sp, #16]
 801c74e:	4645      	mov	r5, r8
 801c750:	e7be      	b.n	801c6d0 <_vfiprintf_r+0x8c>
 801c752:	9a03      	ldr	r2, [sp, #12]
 801c754:	1d11      	adds	r1, r2, #4
 801c756:	6812      	ldr	r2, [r2, #0]
 801c758:	9103      	str	r1, [sp, #12]
 801c75a:	2a00      	cmp	r2, #0
 801c75c:	db01      	blt.n	801c762 <_vfiprintf_r+0x11e>
 801c75e:	9207      	str	r2, [sp, #28]
 801c760:	e004      	b.n	801c76c <_vfiprintf_r+0x128>
 801c762:	4252      	negs	r2, r2
 801c764:	f043 0302 	orr.w	r3, r3, #2
 801c768:	9207      	str	r2, [sp, #28]
 801c76a:	9304      	str	r3, [sp, #16]
 801c76c:	f898 3000 	ldrb.w	r3, [r8]
 801c770:	2b2e      	cmp	r3, #46	; 0x2e
 801c772:	d10e      	bne.n	801c792 <_vfiprintf_r+0x14e>
 801c774:	f898 3001 	ldrb.w	r3, [r8, #1]
 801c778:	2b2a      	cmp	r3, #42	; 0x2a
 801c77a:	d138      	bne.n	801c7ee <_vfiprintf_r+0x1aa>
 801c77c:	9b03      	ldr	r3, [sp, #12]
 801c77e:	1d1a      	adds	r2, r3, #4
 801c780:	681b      	ldr	r3, [r3, #0]
 801c782:	9203      	str	r2, [sp, #12]
 801c784:	2b00      	cmp	r3, #0
 801c786:	bfb8      	it	lt
 801c788:	f04f 33ff 	movlt.w	r3, #4294967295
 801c78c:	f108 0802 	add.w	r8, r8, #2
 801c790:	9305      	str	r3, [sp, #20]
 801c792:	4d33      	ldr	r5, [pc, #204]	; (801c860 <_vfiprintf_r+0x21c>)
 801c794:	f898 1000 	ldrb.w	r1, [r8]
 801c798:	2203      	movs	r2, #3
 801c79a:	4628      	mov	r0, r5
 801c79c:	f7e3 fd28 	bl	80001f0 <memchr>
 801c7a0:	b140      	cbz	r0, 801c7b4 <_vfiprintf_r+0x170>
 801c7a2:	2340      	movs	r3, #64	; 0x40
 801c7a4:	1b40      	subs	r0, r0, r5
 801c7a6:	fa03 f000 	lsl.w	r0, r3, r0
 801c7aa:	9b04      	ldr	r3, [sp, #16]
 801c7ac:	4303      	orrs	r3, r0
 801c7ae:	f108 0801 	add.w	r8, r8, #1
 801c7b2:	9304      	str	r3, [sp, #16]
 801c7b4:	f898 1000 	ldrb.w	r1, [r8]
 801c7b8:	482a      	ldr	r0, [pc, #168]	; (801c864 <_vfiprintf_r+0x220>)
 801c7ba:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801c7be:	2206      	movs	r2, #6
 801c7c0:	f108 0701 	add.w	r7, r8, #1
 801c7c4:	f7e3 fd14 	bl	80001f0 <memchr>
 801c7c8:	2800      	cmp	r0, #0
 801c7ca:	d037      	beq.n	801c83c <_vfiprintf_r+0x1f8>
 801c7cc:	4b26      	ldr	r3, [pc, #152]	; (801c868 <_vfiprintf_r+0x224>)
 801c7ce:	bb1b      	cbnz	r3, 801c818 <_vfiprintf_r+0x1d4>
 801c7d0:	9b03      	ldr	r3, [sp, #12]
 801c7d2:	3307      	adds	r3, #7
 801c7d4:	f023 0307 	bic.w	r3, r3, #7
 801c7d8:	3308      	adds	r3, #8
 801c7da:	9303      	str	r3, [sp, #12]
 801c7dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c7de:	444b      	add	r3, r9
 801c7e0:	9309      	str	r3, [sp, #36]	; 0x24
 801c7e2:	e750      	b.n	801c686 <_vfiprintf_r+0x42>
 801c7e4:	fb05 3202 	mla	r2, r5, r2, r3
 801c7e8:	2001      	movs	r0, #1
 801c7ea:	4688      	mov	r8, r1
 801c7ec:	e78a      	b.n	801c704 <_vfiprintf_r+0xc0>
 801c7ee:	2300      	movs	r3, #0
 801c7f0:	f108 0801 	add.w	r8, r8, #1
 801c7f4:	9305      	str	r3, [sp, #20]
 801c7f6:	4619      	mov	r1, r3
 801c7f8:	250a      	movs	r5, #10
 801c7fa:	4640      	mov	r0, r8
 801c7fc:	f810 2b01 	ldrb.w	r2, [r0], #1
 801c800:	3a30      	subs	r2, #48	; 0x30
 801c802:	2a09      	cmp	r2, #9
 801c804:	d903      	bls.n	801c80e <_vfiprintf_r+0x1ca>
 801c806:	2b00      	cmp	r3, #0
 801c808:	d0c3      	beq.n	801c792 <_vfiprintf_r+0x14e>
 801c80a:	9105      	str	r1, [sp, #20]
 801c80c:	e7c1      	b.n	801c792 <_vfiprintf_r+0x14e>
 801c80e:	fb05 2101 	mla	r1, r5, r1, r2
 801c812:	2301      	movs	r3, #1
 801c814:	4680      	mov	r8, r0
 801c816:	e7f0      	b.n	801c7fa <_vfiprintf_r+0x1b6>
 801c818:	ab03      	add	r3, sp, #12
 801c81a:	9300      	str	r3, [sp, #0]
 801c81c:	4622      	mov	r2, r4
 801c81e:	4b13      	ldr	r3, [pc, #76]	; (801c86c <_vfiprintf_r+0x228>)
 801c820:	a904      	add	r1, sp, #16
 801c822:	4630      	mov	r0, r6
 801c824:	f3af 8000 	nop.w
 801c828:	f1b0 3fff 	cmp.w	r0, #4294967295
 801c82c:	4681      	mov	r9, r0
 801c82e:	d1d5      	bne.n	801c7dc <_vfiprintf_r+0x198>
 801c830:	89a3      	ldrh	r3, [r4, #12]
 801c832:	065b      	lsls	r3, r3, #25
 801c834:	f53f af7e 	bmi.w	801c734 <_vfiprintf_r+0xf0>
 801c838:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c83a:	e77d      	b.n	801c738 <_vfiprintf_r+0xf4>
 801c83c:	ab03      	add	r3, sp, #12
 801c83e:	9300      	str	r3, [sp, #0]
 801c840:	4622      	mov	r2, r4
 801c842:	4b0a      	ldr	r3, [pc, #40]	; (801c86c <_vfiprintf_r+0x228>)
 801c844:	a904      	add	r1, sp, #16
 801c846:	4630      	mov	r0, r6
 801c848:	f000 f888 	bl	801c95c <_printf_i>
 801c84c:	e7ec      	b.n	801c828 <_vfiprintf_r+0x1e4>
 801c84e:	bf00      	nop
 801c850:	080215f8 	.word	0x080215f8
 801c854:	080215a0 	.word	0x080215a0
 801c858:	08021618 	.word	0x08021618
 801c85c:	080215d8 	.word	0x080215d8
 801c860:	080215a6 	.word	0x080215a6
 801c864:	080215aa 	.word	0x080215aa
 801c868:	00000000 	.word	0x00000000
 801c86c:	0801c61f 	.word	0x0801c61f

0801c870 <_printf_common>:
 801c870:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c874:	4691      	mov	r9, r2
 801c876:	461f      	mov	r7, r3
 801c878:	688a      	ldr	r2, [r1, #8]
 801c87a:	690b      	ldr	r3, [r1, #16]
 801c87c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801c880:	4293      	cmp	r3, r2
 801c882:	bfb8      	it	lt
 801c884:	4613      	movlt	r3, r2
 801c886:	f8c9 3000 	str.w	r3, [r9]
 801c88a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801c88e:	4606      	mov	r6, r0
 801c890:	460c      	mov	r4, r1
 801c892:	b112      	cbz	r2, 801c89a <_printf_common+0x2a>
 801c894:	3301      	adds	r3, #1
 801c896:	f8c9 3000 	str.w	r3, [r9]
 801c89a:	6823      	ldr	r3, [r4, #0]
 801c89c:	0699      	lsls	r1, r3, #26
 801c89e:	bf42      	ittt	mi
 801c8a0:	f8d9 3000 	ldrmi.w	r3, [r9]
 801c8a4:	3302      	addmi	r3, #2
 801c8a6:	f8c9 3000 	strmi.w	r3, [r9]
 801c8aa:	6825      	ldr	r5, [r4, #0]
 801c8ac:	f015 0506 	ands.w	r5, r5, #6
 801c8b0:	d107      	bne.n	801c8c2 <_printf_common+0x52>
 801c8b2:	f104 0a19 	add.w	sl, r4, #25
 801c8b6:	68e3      	ldr	r3, [r4, #12]
 801c8b8:	f8d9 2000 	ldr.w	r2, [r9]
 801c8bc:	1a9b      	subs	r3, r3, r2
 801c8be:	42ab      	cmp	r3, r5
 801c8c0:	dc28      	bgt.n	801c914 <_printf_common+0xa4>
 801c8c2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801c8c6:	6822      	ldr	r2, [r4, #0]
 801c8c8:	3300      	adds	r3, #0
 801c8ca:	bf18      	it	ne
 801c8cc:	2301      	movne	r3, #1
 801c8ce:	0692      	lsls	r2, r2, #26
 801c8d0:	d42d      	bmi.n	801c92e <_printf_common+0xbe>
 801c8d2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c8d6:	4639      	mov	r1, r7
 801c8d8:	4630      	mov	r0, r6
 801c8da:	47c0      	blx	r8
 801c8dc:	3001      	adds	r0, #1
 801c8de:	d020      	beq.n	801c922 <_printf_common+0xb2>
 801c8e0:	6823      	ldr	r3, [r4, #0]
 801c8e2:	68e5      	ldr	r5, [r4, #12]
 801c8e4:	f8d9 2000 	ldr.w	r2, [r9]
 801c8e8:	f003 0306 	and.w	r3, r3, #6
 801c8ec:	2b04      	cmp	r3, #4
 801c8ee:	bf08      	it	eq
 801c8f0:	1aad      	subeq	r5, r5, r2
 801c8f2:	68a3      	ldr	r3, [r4, #8]
 801c8f4:	6922      	ldr	r2, [r4, #16]
 801c8f6:	bf0c      	ite	eq
 801c8f8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801c8fc:	2500      	movne	r5, #0
 801c8fe:	4293      	cmp	r3, r2
 801c900:	bfc4      	itt	gt
 801c902:	1a9b      	subgt	r3, r3, r2
 801c904:	18ed      	addgt	r5, r5, r3
 801c906:	f04f 0900 	mov.w	r9, #0
 801c90a:	341a      	adds	r4, #26
 801c90c:	454d      	cmp	r5, r9
 801c90e:	d11a      	bne.n	801c946 <_printf_common+0xd6>
 801c910:	2000      	movs	r0, #0
 801c912:	e008      	b.n	801c926 <_printf_common+0xb6>
 801c914:	2301      	movs	r3, #1
 801c916:	4652      	mov	r2, sl
 801c918:	4639      	mov	r1, r7
 801c91a:	4630      	mov	r0, r6
 801c91c:	47c0      	blx	r8
 801c91e:	3001      	adds	r0, #1
 801c920:	d103      	bne.n	801c92a <_printf_common+0xba>
 801c922:	f04f 30ff 	mov.w	r0, #4294967295
 801c926:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c92a:	3501      	adds	r5, #1
 801c92c:	e7c3      	b.n	801c8b6 <_printf_common+0x46>
 801c92e:	18e1      	adds	r1, r4, r3
 801c930:	1c5a      	adds	r2, r3, #1
 801c932:	2030      	movs	r0, #48	; 0x30
 801c934:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801c938:	4422      	add	r2, r4
 801c93a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801c93e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801c942:	3302      	adds	r3, #2
 801c944:	e7c5      	b.n	801c8d2 <_printf_common+0x62>
 801c946:	2301      	movs	r3, #1
 801c948:	4622      	mov	r2, r4
 801c94a:	4639      	mov	r1, r7
 801c94c:	4630      	mov	r0, r6
 801c94e:	47c0      	blx	r8
 801c950:	3001      	adds	r0, #1
 801c952:	d0e6      	beq.n	801c922 <_printf_common+0xb2>
 801c954:	f109 0901 	add.w	r9, r9, #1
 801c958:	e7d8      	b.n	801c90c <_printf_common+0x9c>
	...

0801c95c <_printf_i>:
 801c95c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c960:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801c964:	460c      	mov	r4, r1
 801c966:	7e09      	ldrb	r1, [r1, #24]
 801c968:	b085      	sub	sp, #20
 801c96a:	296e      	cmp	r1, #110	; 0x6e
 801c96c:	4617      	mov	r7, r2
 801c96e:	4606      	mov	r6, r0
 801c970:	4698      	mov	r8, r3
 801c972:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c974:	f000 80b3 	beq.w	801cade <_printf_i+0x182>
 801c978:	d822      	bhi.n	801c9c0 <_printf_i+0x64>
 801c97a:	2963      	cmp	r1, #99	; 0x63
 801c97c:	d036      	beq.n	801c9ec <_printf_i+0x90>
 801c97e:	d80a      	bhi.n	801c996 <_printf_i+0x3a>
 801c980:	2900      	cmp	r1, #0
 801c982:	f000 80b9 	beq.w	801caf8 <_printf_i+0x19c>
 801c986:	2958      	cmp	r1, #88	; 0x58
 801c988:	f000 8083 	beq.w	801ca92 <_printf_i+0x136>
 801c98c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c990:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801c994:	e032      	b.n	801c9fc <_printf_i+0xa0>
 801c996:	2964      	cmp	r1, #100	; 0x64
 801c998:	d001      	beq.n	801c99e <_printf_i+0x42>
 801c99a:	2969      	cmp	r1, #105	; 0x69
 801c99c:	d1f6      	bne.n	801c98c <_printf_i+0x30>
 801c99e:	6820      	ldr	r0, [r4, #0]
 801c9a0:	6813      	ldr	r3, [r2, #0]
 801c9a2:	0605      	lsls	r5, r0, #24
 801c9a4:	f103 0104 	add.w	r1, r3, #4
 801c9a8:	d52a      	bpl.n	801ca00 <_printf_i+0xa4>
 801c9aa:	681b      	ldr	r3, [r3, #0]
 801c9ac:	6011      	str	r1, [r2, #0]
 801c9ae:	2b00      	cmp	r3, #0
 801c9b0:	da03      	bge.n	801c9ba <_printf_i+0x5e>
 801c9b2:	222d      	movs	r2, #45	; 0x2d
 801c9b4:	425b      	negs	r3, r3
 801c9b6:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801c9ba:	486f      	ldr	r0, [pc, #444]	; (801cb78 <_printf_i+0x21c>)
 801c9bc:	220a      	movs	r2, #10
 801c9be:	e039      	b.n	801ca34 <_printf_i+0xd8>
 801c9c0:	2973      	cmp	r1, #115	; 0x73
 801c9c2:	f000 809d 	beq.w	801cb00 <_printf_i+0x1a4>
 801c9c6:	d808      	bhi.n	801c9da <_printf_i+0x7e>
 801c9c8:	296f      	cmp	r1, #111	; 0x6f
 801c9ca:	d020      	beq.n	801ca0e <_printf_i+0xb2>
 801c9cc:	2970      	cmp	r1, #112	; 0x70
 801c9ce:	d1dd      	bne.n	801c98c <_printf_i+0x30>
 801c9d0:	6823      	ldr	r3, [r4, #0]
 801c9d2:	f043 0320 	orr.w	r3, r3, #32
 801c9d6:	6023      	str	r3, [r4, #0]
 801c9d8:	e003      	b.n	801c9e2 <_printf_i+0x86>
 801c9da:	2975      	cmp	r1, #117	; 0x75
 801c9dc:	d017      	beq.n	801ca0e <_printf_i+0xb2>
 801c9de:	2978      	cmp	r1, #120	; 0x78
 801c9e0:	d1d4      	bne.n	801c98c <_printf_i+0x30>
 801c9e2:	2378      	movs	r3, #120	; 0x78
 801c9e4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c9e8:	4864      	ldr	r0, [pc, #400]	; (801cb7c <_printf_i+0x220>)
 801c9ea:	e055      	b.n	801ca98 <_printf_i+0x13c>
 801c9ec:	6813      	ldr	r3, [r2, #0]
 801c9ee:	1d19      	adds	r1, r3, #4
 801c9f0:	681b      	ldr	r3, [r3, #0]
 801c9f2:	6011      	str	r1, [r2, #0]
 801c9f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c9f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801c9fc:	2301      	movs	r3, #1
 801c9fe:	e08c      	b.n	801cb1a <_printf_i+0x1be>
 801ca00:	681b      	ldr	r3, [r3, #0]
 801ca02:	6011      	str	r1, [r2, #0]
 801ca04:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ca08:	bf18      	it	ne
 801ca0a:	b21b      	sxthne	r3, r3
 801ca0c:	e7cf      	b.n	801c9ae <_printf_i+0x52>
 801ca0e:	6813      	ldr	r3, [r2, #0]
 801ca10:	6825      	ldr	r5, [r4, #0]
 801ca12:	1d18      	adds	r0, r3, #4
 801ca14:	6010      	str	r0, [r2, #0]
 801ca16:	0628      	lsls	r0, r5, #24
 801ca18:	d501      	bpl.n	801ca1e <_printf_i+0xc2>
 801ca1a:	681b      	ldr	r3, [r3, #0]
 801ca1c:	e002      	b.n	801ca24 <_printf_i+0xc8>
 801ca1e:	0668      	lsls	r0, r5, #25
 801ca20:	d5fb      	bpl.n	801ca1a <_printf_i+0xbe>
 801ca22:	881b      	ldrh	r3, [r3, #0]
 801ca24:	4854      	ldr	r0, [pc, #336]	; (801cb78 <_printf_i+0x21c>)
 801ca26:	296f      	cmp	r1, #111	; 0x6f
 801ca28:	bf14      	ite	ne
 801ca2a:	220a      	movne	r2, #10
 801ca2c:	2208      	moveq	r2, #8
 801ca2e:	2100      	movs	r1, #0
 801ca30:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801ca34:	6865      	ldr	r5, [r4, #4]
 801ca36:	60a5      	str	r5, [r4, #8]
 801ca38:	2d00      	cmp	r5, #0
 801ca3a:	f2c0 8095 	blt.w	801cb68 <_printf_i+0x20c>
 801ca3e:	6821      	ldr	r1, [r4, #0]
 801ca40:	f021 0104 	bic.w	r1, r1, #4
 801ca44:	6021      	str	r1, [r4, #0]
 801ca46:	2b00      	cmp	r3, #0
 801ca48:	d13d      	bne.n	801cac6 <_printf_i+0x16a>
 801ca4a:	2d00      	cmp	r5, #0
 801ca4c:	f040 808e 	bne.w	801cb6c <_printf_i+0x210>
 801ca50:	4665      	mov	r5, ip
 801ca52:	2a08      	cmp	r2, #8
 801ca54:	d10b      	bne.n	801ca6e <_printf_i+0x112>
 801ca56:	6823      	ldr	r3, [r4, #0]
 801ca58:	07db      	lsls	r3, r3, #31
 801ca5a:	d508      	bpl.n	801ca6e <_printf_i+0x112>
 801ca5c:	6923      	ldr	r3, [r4, #16]
 801ca5e:	6862      	ldr	r2, [r4, #4]
 801ca60:	429a      	cmp	r2, r3
 801ca62:	bfde      	ittt	le
 801ca64:	2330      	movle	r3, #48	; 0x30
 801ca66:	f805 3c01 	strble.w	r3, [r5, #-1]
 801ca6a:	f105 35ff 	addle.w	r5, r5, #4294967295
 801ca6e:	ebac 0305 	sub.w	r3, ip, r5
 801ca72:	6123      	str	r3, [r4, #16]
 801ca74:	f8cd 8000 	str.w	r8, [sp]
 801ca78:	463b      	mov	r3, r7
 801ca7a:	aa03      	add	r2, sp, #12
 801ca7c:	4621      	mov	r1, r4
 801ca7e:	4630      	mov	r0, r6
 801ca80:	f7ff fef6 	bl	801c870 <_printf_common>
 801ca84:	3001      	adds	r0, #1
 801ca86:	d14d      	bne.n	801cb24 <_printf_i+0x1c8>
 801ca88:	f04f 30ff 	mov.w	r0, #4294967295
 801ca8c:	b005      	add	sp, #20
 801ca8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ca92:	4839      	ldr	r0, [pc, #228]	; (801cb78 <_printf_i+0x21c>)
 801ca94:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801ca98:	6813      	ldr	r3, [r2, #0]
 801ca9a:	6821      	ldr	r1, [r4, #0]
 801ca9c:	1d1d      	adds	r5, r3, #4
 801ca9e:	681b      	ldr	r3, [r3, #0]
 801caa0:	6015      	str	r5, [r2, #0]
 801caa2:	060a      	lsls	r2, r1, #24
 801caa4:	d50b      	bpl.n	801cabe <_printf_i+0x162>
 801caa6:	07ca      	lsls	r2, r1, #31
 801caa8:	bf44      	itt	mi
 801caaa:	f041 0120 	orrmi.w	r1, r1, #32
 801caae:	6021      	strmi	r1, [r4, #0]
 801cab0:	b91b      	cbnz	r3, 801caba <_printf_i+0x15e>
 801cab2:	6822      	ldr	r2, [r4, #0]
 801cab4:	f022 0220 	bic.w	r2, r2, #32
 801cab8:	6022      	str	r2, [r4, #0]
 801caba:	2210      	movs	r2, #16
 801cabc:	e7b7      	b.n	801ca2e <_printf_i+0xd2>
 801cabe:	064d      	lsls	r5, r1, #25
 801cac0:	bf48      	it	mi
 801cac2:	b29b      	uxthmi	r3, r3
 801cac4:	e7ef      	b.n	801caa6 <_printf_i+0x14a>
 801cac6:	4665      	mov	r5, ip
 801cac8:	fbb3 f1f2 	udiv	r1, r3, r2
 801cacc:	fb02 3311 	mls	r3, r2, r1, r3
 801cad0:	5cc3      	ldrb	r3, [r0, r3]
 801cad2:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801cad6:	460b      	mov	r3, r1
 801cad8:	2900      	cmp	r1, #0
 801cada:	d1f5      	bne.n	801cac8 <_printf_i+0x16c>
 801cadc:	e7b9      	b.n	801ca52 <_printf_i+0xf6>
 801cade:	6813      	ldr	r3, [r2, #0]
 801cae0:	6825      	ldr	r5, [r4, #0]
 801cae2:	6961      	ldr	r1, [r4, #20]
 801cae4:	1d18      	adds	r0, r3, #4
 801cae6:	6010      	str	r0, [r2, #0]
 801cae8:	0628      	lsls	r0, r5, #24
 801caea:	681b      	ldr	r3, [r3, #0]
 801caec:	d501      	bpl.n	801caf2 <_printf_i+0x196>
 801caee:	6019      	str	r1, [r3, #0]
 801caf0:	e002      	b.n	801caf8 <_printf_i+0x19c>
 801caf2:	066a      	lsls	r2, r5, #25
 801caf4:	d5fb      	bpl.n	801caee <_printf_i+0x192>
 801caf6:	8019      	strh	r1, [r3, #0]
 801caf8:	2300      	movs	r3, #0
 801cafa:	6123      	str	r3, [r4, #16]
 801cafc:	4665      	mov	r5, ip
 801cafe:	e7b9      	b.n	801ca74 <_printf_i+0x118>
 801cb00:	6813      	ldr	r3, [r2, #0]
 801cb02:	1d19      	adds	r1, r3, #4
 801cb04:	6011      	str	r1, [r2, #0]
 801cb06:	681d      	ldr	r5, [r3, #0]
 801cb08:	6862      	ldr	r2, [r4, #4]
 801cb0a:	2100      	movs	r1, #0
 801cb0c:	4628      	mov	r0, r5
 801cb0e:	f7e3 fb6f 	bl	80001f0 <memchr>
 801cb12:	b108      	cbz	r0, 801cb18 <_printf_i+0x1bc>
 801cb14:	1b40      	subs	r0, r0, r5
 801cb16:	6060      	str	r0, [r4, #4]
 801cb18:	6863      	ldr	r3, [r4, #4]
 801cb1a:	6123      	str	r3, [r4, #16]
 801cb1c:	2300      	movs	r3, #0
 801cb1e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801cb22:	e7a7      	b.n	801ca74 <_printf_i+0x118>
 801cb24:	6923      	ldr	r3, [r4, #16]
 801cb26:	462a      	mov	r2, r5
 801cb28:	4639      	mov	r1, r7
 801cb2a:	4630      	mov	r0, r6
 801cb2c:	47c0      	blx	r8
 801cb2e:	3001      	adds	r0, #1
 801cb30:	d0aa      	beq.n	801ca88 <_printf_i+0x12c>
 801cb32:	6823      	ldr	r3, [r4, #0]
 801cb34:	079b      	lsls	r3, r3, #30
 801cb36:	d413      	bmi.n	801cb60 <_printf_i+0x204>
 801cb38:	68e0      	ldr	r0, [r4, #12]
 801cb3a:	9b03      	ldr	r3, [sp, #12]
 801cb3c:	4298      	cmp	r0, r3
 801cb3e:	bfb8      	it	lt
 801cb40:	4618      	movlt	r0, r3
 801cb42:	e7a3      	b.n	801ca8c <_printf_i+0x130>
 801cb44:	2301      	movs	r3, #1
 801cb46:	464a      	mov	r2, r9
 801cb48:	4639      	mov	r1, r7
 801cb4a:	4630      	mov	r0, r6
 801cb4c:	47c0      	blx	r8
 801cb4e:	3001      	adds	r0, #1
 801cb50:	d09a      	beq.n	801ca88 <_printf_i+0x12c>
 801cb52:	3501      	adds	r5, #1
 801cb54:	68e3      	ldr	r3, [r4, #12]
 801cb56:	9a03      	ldr	r2, [sp, #12]
 801cb58:	1a9b      	subs	r3, r3, r2
 801cb5a:	42ab      	cmp	r3, r5
 801cb5c:	dcf2      	bgt.n	801cb44 <_printf_i+0x1e8>
 801cb5e:	e7eb      	b.n	801cb38 <_printf_i+0x1dc>
 801cb60:	2500      	movs	r5, #0
 801cb62:	f104 0919 	add.w	r9, r4, #25
 801cb66:	e7f5      	b.n	801cb54 <_printf_i+0x1f8>
 801cb68:	2b00      	cmp	r3, #0
 801cb6a:	d1ac      	bne.n	801cac6 <_printf_i+0x16a>
 801cb6c:	7803      	ldrb	r3, [r0, #0]
 801cb6e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801cb72:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801cb76:	e76c      	b.n	801ca52 <_printf_i+0xf6>
 801cb78:	080215b1 	.word	0x080215b1
 801cb7c:	080215c2 	.word	0x080215c2

0801cb80 <_sbrk_r>:
 801cb80:	b538      	push	{r3, r4, r5, lr}
 801cb82:	4c06      	ldr	r4, [pc, #24]	; (801cb9c <_sbrk_r+0x1c>)
 801cb84:	2300      	movs	r3, #0
 801cb86:	4605      	mov	r5, r0
 801cb88:	4608      	mov	r0, r1
 801cb8a:	6023      	str	r3, [r4, #0]
 801cb8c:	f7e5 ff04 	bl	8002998 <_sbrk>
 801cb90:	1c43      	adds	r3, r0, #1
 801cb92:	d102      	bne.n	801cb9a <_sbrk_r+0x1a>
 801cb94:	6823      	ldr	r3, [r4, #0]
 801cb96:	b103      	cbz	r3, 801cb9a <_sbrk_r+0x1a>
 801cb98:	602b      	str	r3, [r5, #0]
 801cb9a:	bd38      	pop	{r3, r4, r5, pc}
 801cb9c:	20012cb0 	.word	0x20012cb0

0801cba0 <_raise_r>:
 801cba0:	291f      	cmp	r1, #31
 801cba2:	b538      	push	{r3, r4, r5, lr}
 801cba4:	4604      	mov	r4, r0
 801cba6:	460d      	mov	r5, r1
 801cba8:	d904      	bls.n	801cbb4 <_raise_r+0x14>
 801cbaa:	2316      	movs	r3, #22
 801cbac:	6003      	str	r3, [r0, #0]
 801cbae:	f04f 30ff 	mov.w	r0, #4294967295
 801cbb2:	bd38      	pop	{r3, r4, r5, pc}
 801cbb4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801cbb6:	b112      	cbz	r2, 801cbbe <_raise_r+0x1e>
 801cbb8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801cbbc:	b94b      	cbnz	r3, 801cbd2 <_raise_r+0x32>
 801cbbe:	4620      	mov	r0, r4
 801cbc0:	f000 f830 	bl	801cc24 <_getpid_r>
 801cbc4:	462a      	mov	r2, r5
 801cbc6:	4601      	mov	r1, r0
 801cbc8:	4620      	mov	r0, r4
 801cbca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801cbce:	f000 b817 	b.w	801cc00 <_kill_r>
 801cbd2:	2b01      	cmp	r3, #1
 801cbd4:	d00a      	beq.n	801cbec <_raise_r+0x4c>
 801cbd6:	1c59      	adds	r1, r3, #1
 801cbd8:	d103      	bne.n	801cbe2 <_raise_r+0x42>
 801cbda:	2316      	movs	r3, #22
 801cbdc:	6003      	str	r3, [r0, #0]
 801cbde:	2001      	movs	r0, #1
 801cbe0:	e7e7      	b.n	801cbb2 <_raise_r+0x12>
 801cbe2:	2400      	movs	r4, #0
 801cbe4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801cbe8:	4628      	mov	r0, r5
 801cbea:	4798      	blx	r3
 801cbec:	2000      	movs	r0, #0
 801cbee:	e7e0      	b.n	801cbb2 <_raise_r+0x12>

0801cbf0 <raise>:
 801cbf0:	4b02      	ldr	r3, [pc, #8]	; (801cbfc <raise+0xc>)
 801cbf2:	4601      	mov	r1, r0
 801cbf4:	6818      	ldr	r0, [r3, #0]
 801cbf6:	f7ff bfd3 	b.w	801cba0 <_raise_r>
 801cbfa:	bf00      	nop
 801cbfc:	2000010c 	.word	0x2000010c

0801cc00 <_kill_r>:
 801cc00:	b538      	push	{r3, r4, r5, lr}
 801cc02:	4c07      	ldr	r4, [pc, #28]	; (801cc20 <_kill_r+0x20>)
 801cc04:	2300      	movs	r3, #0
 801cc06:	4605      	mov	r5, r0
 801cc08:	4608      	mov	r0, r1
 801cc0a:	4611      	mov	r1, r2
 801cc0c:	6023      	str	r3, [r4, #0]
 801cc0e:	f7e5 fe8d 	bl	800292c <_kill>
 801cc12:	1c43      	adds	r3, r0, #1
 801cc14:	d102      	bne.n	801cc1c <_kill_r+0x1c>
 801cc16:	6823      	ldr	r3, [r4, #0]
 801cc18:	b103      	cbz	r3, 801cc1c <_kill_r+0x1c>
 801cc1a:	602b      	str	r3, [r5, #0]
 801cc1c:	bd38      	pop	{r3, r4, r5, pc}
 801cc1e:	bf00      	nop
 801cc20:	20012cb0 	.word	0x20012cb0

0801cc24 <_getpid_r>:
 801cc24:	f7e5 be80 	b.w	8002928 <_getpid>

0801cc28 <__swbuf_r>:
 801cc28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cc2a:	460e      	mov	r6, r1
 801cc2c:	4614      	mov	r4, r2
 801cc2e:	4605      	mov	r5, r0
 801cc30:	b118      	cbz	r0, 801cc3a <__swbuf_r+0x12>
 801cc32:	6983      	ldr	r3, [r0, #24]
 801cc34:	b90b      	cbnz	r3, 801cc3a <__swbuf_r+0x12>
 801cc36:	f000 fa0b 	bl	801d050 <__sinit>
 801cc3a:	4b21      	ldr	r3, [pc, #132]	; (801ccc0 <__swbuf_r+0x98>)
 801cc3c:	429c      	cmp	r4, r3
 801cc3e:	d12a      	bne.n	801cc96 <__swbuf_r+0x6e>
 801cc40:	686c      	ldr	r4, [r5, #4]
 801cc42:	69a3      	ldr	r3, [r4, #24]
 801cc44:	60a3      	str	r3, [r4, #8]
 801cc46:	89a3      	ldrh	r3, [r4, #12]
 801cc48:	071a      	lsls	r2, r3, #28
 801cc4a:	d52e      	bpl.n	801ccaa <__swbuf_r+0x82>
 801cc4c:	6923      	ldr	r3, [r4, #16]
 801cc4e:	b363      	cbz	r3, 801ccaa <__swbuf_r+0x82>
 801cc50:	6923      	ldr	r3, [r4, #16]
 801cc52:	6820      	ldr	r0, [r4, #0]
 801cc54:	1ac0      	subs	r0, r0, r3
 801cc56:	6963      	ldr	r3, [r4, #20]
 801cc58:	b2f6      	uxtb	r6, r6
 801cc5a:	4283      	cmp	r3, r0
 801cc5c:	4637      	mov	r7, r6
 801cc5e:	dc04      	bgt.n	801cc6a <__swbuf_r+0x42>
 801cc60:	4621      	mov	r1, r4
 801cc62:	4628      	mov	r0, r5
 801cc64:	f000 f98a 	bl	801cf7c <_fflush_r>
 801cc68:	bb28      	cbnz	r0, 801ccb6 <__swbuf_r+0x8e>
 801cc6a:	68a3      	ldr	r3, [r4, #8]
 801cc6c:	3b01      	subs	r3, #1
 801cc6e:	60a3      	str	r3, [r4, #8]
 801cc70:	6823      	ldr	r3, [r4, #0]
 801cc72:	1c5a      	adds	r2, r3, #1
 801cc74:	6022      	str	r2, [r4, #0]
 801cc76:	701e      	strb	r6, [r3, #0]
 801cc78:	6963      	ldr	r3, [r4, #20]
 801cc7a:	3001      	adds	r0, #1
 801cc7c:	4283      	cmp	r3, r0
 801cc7e:	d004      	beq.n	801cc8a <__swbuf_r+0x62>
 801cc80:	89a3      	ldrh	r3, [r4, #12]
 801cc82:	07db      	lsls	r3, r3, #31
 801cc84:	d519      	bpl.n	801ccba <__swbuf_r+0x92>
 801cc86:	2e0a      	cmp	r6, #10
 801cc88:	d117      	bne.n	801ccba <__swbuf_r+0x92>
 801cc8a:	4621      	mov	r1, r4
 801cc8c:	4628      	mov	r0, r5
 801cc8e:	f000 f975 	bl	801cf7c <_fflush_r>
 801cc92:	b190      	cbz	r0, 801ccba <__swbuf_r+0x92>
 801cc94:	e00f      	b.n	801ccb6 <__swbuf_r+0x8e>
 801cc96:	4b0b      	ldr	r3, [pc, #44]	; (801ccc4 <__swbuf_r+0x9c>)
 801cc98:	429c      	cmp	r4, r3
 801cc9a:	d101      	bne.n	801cca0 <__swbuf_r+0x78>
 801cc9c:	68ac      	ldr	r4, [r5, #8]
 801cc9e:	e7d0      	b.n	801cc42 <__swbuf_r+0x1a>
 801cca0:	4b09      	ldr	r3, [pc, #36]	; (801ccc8 <__swbuf_r+0xa0>)
 801cca2:	429c      	cmp	r4, r3
 801cca4:	bf08      	it	eq
 801cca6:	68ec      	ldreq	r4, [r5, #12]
 801cca8:	e7cb      	b.n	801cc42 <__swbuf_r+0x1a>
 801ccaa:	4621      	mov	r1, r4
 801ccac:	4628      	mov	r0, r5
 801ccae:	f000 f80d 	bl	801cccc <__swsetup_r>
 801ccb2:	2800      	cmp	r0, #0
 801ccb4:	d0cc      	beq.n	801cc50 <__swbuf_r+0x28>
 801ccb6:	f04f 37ff 	mov.w	r7, #4294967295
 801ccba:	4638      	mov	r0, r7
 801ccbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ccbe:	bf00      	nop
 801ccc0:	080215f8 	.word	0x080215f8
 801ccc4:	08021618 	.word	0x08021618
 801ccc8:	080215d8 	.word	0x080215d8

0801cccc <__swsetup_r>:
 801cccc:	4b32      	ldr	r3, [pc, #200]	; (801cd98 <__swsetup_r+0xcc>)
 801ccce:	b570      	push	{r4, r5, r6, lr}
 801ccd0:	681d      	ldr	r5, [r3, #0]
 801ccd2:	4606      	mov	r6, r0
 801ccd4:	460c      	mov	r4, r1
 801ccd6:	b125      	cbz	r5, 801cce2 <__swsetup_r+0x16>
 801ccd8:	69ab      	ldr	r3, [r5, #24]
 801ccda:	b913      	cbnz	r3, 801cce2 <__swsetup_r+0x16>
 801ccdc:	4628      	mov	r0, r5
 801ccde:	f000 f9b7 	bl	801d050 <__sinit>
 801cce2:	4b2e      	ldr	r3, [pc, #184]	; (801cd9c <__swsetup_r+0xd0>)
 801cce4:	429c      	cmp	r4, r3
 801cce6:	d10f      	bne.n	801cd08 <__swsetup_r+0x3c>
 801cce8:	686c      	ldr	r4, [r5, #4]
 801ccea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ccee:	b29a      	uxth	r2, r3
 801ccf0:	0715      	lsls	r5, r2, #28
 801ccf2:	d42c      	bmi.n	801cd4e <__swsetup_r+0x82>
 801ccf4:	06d0      	lsls	r0, r2, #27
 801ccf6:	d411      	bmi.n	801cd1c <__swsetup_r+0x50>
 801ccf8:	2209      	movs	r2, #9
 801ccfa:	6032      	str	r2, [r6, #0]
 801ccfc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801cd00:	81a3      	strh	r3, [r4, #12]
 801cd02:	f04f 30ff 	mov.w	r0, #4294967295
 801cd06:	e03e      	b.n	801cd86 <__swsetup_r+0xba>
 801cd08:	4b25      	ldr	r3, [pc, #148]	; (801cda0 <__swsetup_r+0xd4>)
 801cd0a:	429c      	cmp	r4, r3
 801cd0c:	d101      	bne.n	801cd12 <__swsetup_r+0x46>
 801cd0e:	68ac      	ldr	r4, [r5, #8]
 801cd10:	e7eb      	b.n	801ccea <__swsetup_r+0x1e>
 801cd12:	4b24      	ldr	r3, [pc, #144]	; (801cda4 <__swsetup_r+0xd8>)
 801cd14:	429c      	cmp	r4, r3
 801cd16:	bf08      	it	eq
 801cd18:	68ec      	ldreq	r4, [r5, #12]
 801cd1a:	e7e6      	b.n	801ccea <__swsetup_r+0x1e>
 801cd1c:	0751      	lsls	r1, r2, #29
 801cd1e:	d512      	bpl.n	801cd46 <__swsetup_r+0x7a>
 801cd20:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801cd22:	b141      	cbz	r1, 801cd36 <__swsetup_r+0x6a>
 801cd24:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801cd28:	4299      	cmp	r1, r3
 801cd2a:	d002      	beq.n	801cd32 <__swsetup_r+0x66>
 801cd2c:	4630      	mov	r0, r6
 801cd2e:	f7ff fbb7 	bl	801c4a0 <_free_r>
 801cd32:	2300      	movs	r3, #0
 801cd34:	6363      	str	r3, [r4, #52]	; 0x34
 801cd36:	89a3      	ldrh	r3, [r4, #12]
 801cd38:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801cd3c:	81a3      	strh	r3, [r4, #12]
 801cd3e:	2300      	movs	r3, #0
 801cd40:	6063      	str	r3, [r4, #4]
 801cd42:	6923      	ldr	r3, [r4, #16]
 801cd44:	6023      	str	r3, [r4, #0]
 801cd46:	89a3      	ldrh	r3, [r4, #12]
 801cd48:	f043 0308 	orr.w	r3, r3, #8
 801cd4c:	81a3      	strh	r3, [r4, #12]
 801cd4e:	6923      	ldr	r3, [r4, #16]
 801cd50:	b94b      	cbnz	r3, 801cd66 <__swsetup_r+0x9a>
 801cd52:	89a3      	ldrh	r3, [r4, #12]
 801cd54:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801cd58:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801cd5c:	d003      	beq.n	801cd66 <__swsetup_r+0x9a>
 801cd5e:	4621      	mov	r1, r4
 801cd60:	4630      	mov	r0, r6
 801cd62:	f000 fa23 	bl	801d1ac <__smakebuf_r>
 801cd66:	89a2      	ldrh	r2, [r4, #12]
 801cd68:	f012 0301 	ands.w	r3, r2, #1
 801cd6c:	d00c      	beq.n	801cd88 <__swsetup_r+0xbc>
 801cd6e:	2300      	movs	r3, #0
 801cd70:	60a3      	str	r3, [r4, #8]
 801cd72:	6963      	ldr	r3, [r4, #20]
 801cd74:	425b      	negs	r3, r3
 801cd76:	61a3      	str	r3, [r4, #24]
 801cd78:	6923      	ldr	r3, [r4, #16]
 801cd7a:	b953      	cbnz	r3, 801cd92 <__swsetup_r+0xc6>
 801cd7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cd80:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801cd84:	d1ba      	bne.n	801ccfc <__swsetup_r+0x30>
 801cd86:	bd70      	pop	{r4, r5, r6, pc}
 801cd88:	0792      	lsls	r2, r2, #30
 801cd8a:	bf58      	it	pl
 801cd8c:	6963      	ldrpl	r3, [r4, #20]
 801cd8e:	60a3      	str	r3, [r4, #8]
 801cd90:	e7f2      	b.n	801cd78 <__swsetup_r+0xac>
 801cd92:	2000      	movs	r0, #0
 801cd94:	e7f7      	b.n	801cd86 <__swsetup_r+0xba>
 801cd96:	bf00      	nop
 801cd98:	2000010c 	.word	0x2000010c
 801cd9c:	080215f8 	.word	0x080215f8
 801cda0:	08021618 	.word	0x08021618
 801cda4:	080215d8 	.word	0x080215d8

0801cda8 <__register_exitproc>:
 801cda8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801cdac:	4d2c      	ldr	r5, [pc, #176]	; (801ce60 <__register_exitproc+0xb8>)
 801cdae:	682c      	ldr	r4, [r5, #0]
 801cdb0:	4607      	mov	r7, r0
 801cdb2:	460e      	mov	r6, r1
 801cdb4:	4691      	mov	r9, r2
 801cdb6:	4698      	mov	r8, r3
 801cdb8:	b934      	cbnz	r4, 801cdc8 <__register_exitproc+0x20>
 801cdba:	4b2a      	ldr	r3, [pc, #168]	; (801ce64 <__register_exitproc+0xbc>)
 801cdbc:	4c2a      	ldr	r4, [pc, #168]	; (801ce68 <__register_exitproc+0xc0>)
 801cdbe:	602c      	str	r4, [r5, #0]
 801cdc0:	b113      	cbz	r3, 801cdc8 <__register_exitproc+0x20>
 801cdc2:	681b      	ldr	r3, [r3, #0]
 801cdc4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801cdc8:	6863      	ldr	r3, [r4, #4]
 801cdca:	2b1f      	cmp	r3, #31
 801cdcc:	dd3d      	ble.n	801ce4a <__register_exitproc+0xa2>
 801cdce:	4b27      	ldr	r3, [pc, #156]	; (801ce6c <__register_exitproc+0xc4>)
 801cdd0:	b91b      	cbnz	r3, 801cdda <__register_exitproc+0x32>
 801cdd2:	f04f 30ff 	mov.w	r0, #4294967295
 801cdd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801cdda:	208c      	movs	r0, #140	; 0x8c
 801cddc:	f7ff fb3c 	bl	801c458 <malloc>
 801cde0:	4604      	mov	r4, r0
 801cde2:	2800      	cmp	r0, #0
 801cde4:	d0f5      	beq.n	801cdd2 <__register_exitproc+0x2a>
 801cde6:	2300      	movs	r3, #0
 801cde8:	682a      	ldr	r2, [r5, #0]
 801cdea:	6002      	str	r2, [r0, #0]
 801cdec:	6043      	str	r3, [r0, #4]
 801cdee:	6028      	str	r0, [r5, #0]
 801cdf0:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801cdf4:	b30f      	cbz	r7, 801ce3a <__register_exitproc+0x92>
 801cdf6:	f44f 7084 	mov.w	r0, #264	; 0x108
 801cdfa:	f7ff fb2d 	bl	801c458 <malloc>
 801cdfe:	2800      	cmp	r0, #0
 801ce00:	d0e7      	beq.n	801cdd2 <__register_exitproc+0x2a>
 801ce02:	2300      	movs	r3, #0
 801ce04:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801ce08:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801ce0c:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801ce10:	6862      	ldr	r2, [r4, #4]
 801ce12:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801ce16:	2301      	movs	r3, #1
 801ce18:	4093      	lsls	r3, r2
 801ce1a:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801ce1e:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801ce22:	431a      	orrs	r2, r3
 801ce24:	2f02      	cmp	r7, #2
 801ce26:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801ce2a:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801ce2e:	bf02      	ittt	eq
 801ce30:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801ce34:	4313      	orreq	r3, r2
 801ce36:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801ce3a:	6863      	ldr	r3, [r4, #4]
 801ce3c:	1c5a      	adds	r2, r3, #1
 801ce3e:	3302      	adds	r3, #2
 801ce40:	6062      	str	r2, [r4, #4]
 801ce42:	2000      	movs	r0, #0
 801ce44:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801ce48:	e7c5      	b.n	801cdd6 <__register_exitproc+0x2e>
 801ce4a:	2f00      	cmp	r7, #0
 801ce4c:	d0f5      	beq.n	801ce3a <__register_exitproc+0x92>
 801ce4e:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801ce52:	2800      	cmp	r0, #0
 801ce54:	d1dc      	bne.n	801ce10 <__register_exitproc+0x68>
 801ce56:	4b05      	ldr	r3, [pc, #20]	; (801ce6c <__register_exitproc+0xc4>)
 801ce58:	2b00      	cmp	r3, #0
 801ce5a:	d0ba      	beq.n	801cdd2 <__register_exitproc+0x2a>
 801ce5c:	e7cb      	b.n	801cdf6 <__register_exitproc+0x4e>
 801ce5e:	bf00      	nop
 801ce60:	20012774 	.word	0x20012774
 801ce64:	080215d4 	.word	0x080215d4
 801ce68:	200126e8 	.word	0x200126e8
 801ce6c:	0801c459 	.word	0x0801c459

0801ce70 <__sflush_r>:
 801ce70:	898a      	ldrh	r2, [r1, #12]
 801ce72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ce76:	4605      	mov	r5, r0
 801ce78:	0710      	lsls	r0, r2, #28
 801ce7a:	460c      	mov	r4, r1
 801ce7c:	d458      	bmi.n	801cf30 <__sflush_r+0xc0>
 801ce7e:	684b      	ldr	r3, [r1, #4]
 801ce80:	2b00      	cmp	r3, #0
 801ce82:	dc05      	bgt.n	801ce90 <__sflush_r+0x20>
 801ce84:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801ce86:	2b00      	cmp	r3, #0
 801ce88:	dc02      	bgt.n	801ce90 <__sflush_r+0x20>
 801ce8a:	2000      	movs	r0, #0
 801ce8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ce90:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801ce92:	2e00      	cmp	r6, #0
 801ce94:	d0f9      	beq.n	801ce8a <__sflush_r+0x1a>
 801ce96:	2300      	movs	r3, #0
 801ce98:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801ce9c:	682f      	ldr	r7, [r5, #0]
 801ce9e:	6a21      	ldr	r1, [r4, #32]
 801cea0:	602b      	str	r3, [r5, #0]
 801cea2:	d032      	beq.n	801cf0a <__sflush_r+0x9a>
 801cea4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801cea6:	89a3      	ldrh	r3, [r4, #12]
 801cea8:	075a      	lsls	r2, r3, #29
 801ceaa:	d505      	bpl.n	801ceb8 <__sflush_r+0x48>
 801ceac:	6863      	ldr	r3, [r4, #4]
 801ceae:	1ac0      	subs	r0, r0, r3
 801ceb0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801ceb2:	b10b      	cbz	r3, 801ceb8 <__sflush_r+0x48>
 801ceb4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801ceb6:	1ac0      	subs	r0, r0, r3
 801ceb8:	2300      	movs	r3, #0
 801ceba:	4602      	mov	r2, r0
 801cebc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801cebe:	6a21      	ldr	r1, [r4, #32]
 801cec0:	4628      	mov	r0, r5
 801cec2:	47b0      	blx	r6
 801cec4:	1c43      	adds	r3, r0, #1
 801cec6:	89a3      	ldrh	r3, [r4, #12]
 801cec8:	d106      	bne.n	801ced8 <__sflush_r+0x68>
 801ceca:	6829      	ldr	r1, [r5, #0]
 801cecc:	291d      	cmp	r1, #29
 801cece:	d848      	bhi.n	801cf62 <__sflush_r+0xf2>
 801ced0:	4a29      	ldr	r2, [pc, #164]	; (801cf78 <__sflush_r+0x108>)
 801ced2:	40ca      	lsrs	r2, r1
 801ced4:	07d6      	lsls	r6, r2, #31
 801ced6:	d544      	bpl.n	801cf62 <__sflush_r+0xf2>
 801ced8:	2200      	movs	r2, #0
 801ceda:	6062      	str	r2, [r4, #4]
 801cedc:	04d9      	lsls	r1, r3, #19
 801cede:	6922      	ldr	r2, [r4, #16]
 801cee0:	6022      	str	r2, [r4, #0]
 801cee2:	d504      	bpl.n	801ceee <__sflush_r+0x7e>
 801cee4:	1c42      	adds	r2, r0, #1
 801cee6:	d101      	bne.n	801ceec <__sflush_r+0x7c>
 801cee8:	682b      	ldr	r3, [r5, #0]
 801ceea:	b903      	cbnz	r3, 801ceee <__sflush_r+0x7e>
 801ceec:	6560      	str	r0, [r4, #84]	; 0x54
 801ceee:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801cef0:	602f      	str	r7, [r5, #0]
 801cef2:	2900      	cmp	r1, #0
 801cef4:	d0c9      	beq.n	801ce8a <__sflush_r+0x1a>
 801cef6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801cefa:	4299      	cmp	r1, r3
 801cefc:	d002      	beq.n	801cf04 <__sflush_r+0x94>
 801cefe:	4628      	mov	r0, r5
 801cf00:	f7ff face 	bl	801c4a0 <_free_r>
 801cf04:	2000      	movs	r0, #0
 801cf06:	6360      	str	r0, [r4, #52]	; 0x34
 801cf08:	e7c0      	b.n	801ce8c <__sflush_r+0x1c>
 801cf0a:	2301      	movs	r3, #1
 801cf0c:	4628      	mov	r0, r5
 801cf0e:	47b0      	blx	r6
 801cf10:	1c41      	adds	r1, r0, #1
 801cf12:	d1c8      	bne.n	801cea6 <__sflush_r+0x36>
 801cf14:	682b      	ldr	r3, [r5, #0]
 801cf16:	2b00      	cmp	r3, #0
 801cf18:	d0c5      	beq.n	801cea6 <__sflush_r+0x36>
 801cf1a:	2b1d      	cmp	r3, #29
 801cf1c:	d001      	beq.n	801cf22 <__sflush_r+0xb2>
 801cf1e:	2b16      	cmp	r3, #22
 801cf20:	d101      	bne.n	801cf26 <__sflush_r+0xb6>
 801cf22:	602f      	str	r7, [r5, #0]
 801cf24:	e7b1      	b.n	801ce8a <__sflush_r+0x1a>
 801cf26:	89a3      	ldrh	r3, [r4, #12]
 801cf28:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801cf2c:	81a3      	strh	r3, [r4, #12]
 801cf2e:	e7ad      	b.n	801ce8c <__sflush_r+0x1c>
 801cf30:	690f      	ldr	r7, [r1, #16]
 801cf32:	2f00      	cmp	r7, #0
 801cf34:	d0a9      	beq.n	801ce8a <__sflush_r+0x1a>
 801cf36:	0793      	lsls	r3, r2, #30
 801cf38:	680e      	ldr	r6, [r1, #0]
 801cf3a:	bf08      	it	eq
 801cf3c:	694b      	ldreq	r3, [r1, #20]
 801cf3e:	600f      	str	r7, [r1, #0]
 801cf40:	bf18      	it	ne
 801cf42:	2300      	movne	r3, #0
 801cf44:	eba6 0807 	sub.w	r8, r6, r7
 801cf48:	608b      	str	r3, [r1, #8]
 801cf4a:	f1b8 0f00 	cmp.w	r8, #0
 801cf4e:	dd9c      	ble.n	801ce8a <__sflush_r+0x1a>
 801cf50:	4643      	mov	r3, r8
 801cf52:	463a      	mov	r2, r7
 801cf54:	6a21      	ldr	r1, [r4, #32]
 801cf56:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801cf58:	4628      	mov	r0, r5
 801cf5a:	47b0      	blx	r6
 801cf5c:	2800      	cmp	r0, #0
 801cf5e:	dc06      	bgt.n	801cf6e <__sflush_r+0xfe>
 801cf60:	89a3      	ldrh	r3, [r4, #12]
 801cf62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801cf66:	81a3      	strh	r3, [r4, #12]
 801cf68:	f04f 30ff 	mov.w	r0, #4294967295
 801cf6c:	e78e      	b.n	801ce8c <__sflush_r+0x1c>
 801cf6e:	4407      	add	r7, r0
 801cf70:	eba8 0800 	sub.w	r8, r8, r0
 801cf74:	e7e9      	b.n	801cf4a <__sflush_r+0xda>
 801cf76:	bf00      	nop
 801cf78:	20400001 	.word	0x20400001

0801cf7c <_fflush_r>:
 801cf7c:	b538      	push	{r3, r4, r5, lr}
 801cf7e:	690b      	ldr	r3, [r1, #16]
 801cf80:	4605      	mov	r5, r0
 801cf82:	460c      	mov	r4, r1
 801cf84:	b1db      	cbz	r3, 801cfbe <_fflush_r+0x42>
 801cf86:	b118      	cbz	r0, 801cf90 <_fflush_r+0x14>
 801cf88:	6983      	ldr	r3, [r0, #24]
 801cf8a:	b90b      	cbnz	r3, 801cf90 <_fflush_r+0x14>
 801cf8c:	f000 f860 	bl	801d050 <__sinit>
 801cf90:	4b0c      	ldr	r3, [pc, #48]	; (801cfc4 <_fflush_r+0x48>)
 801cf92:	429c      	cmp	r4, r3
 801cf94:	d109      	bne.n	801cfaa <_fflush_r+0x2e>
 801cf96:	686c      	ldr	r4, [r5, #4]
 801cf98:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cf9c:	b17b      	cbz	r3, 801cfbe <_fflush_r+0x42>
 801cf9e:	4621      	mov	r1, r4
 801cfa0:	4628      	mov	r0, r5
 801cfa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801cfa6:	f7ff bf63 	b.w	801ce70 <__sflush_r>
 801cfaa:	4b07      	ldr	r3, [pc, #28]	; (801cfc8 <_fflush_r+0x4c>)
 801cfac:	429c      	cmp	r4, r3
 801cfae:	d101      	bne.n	801cfb4 <_fflush_r+0x38>
 801cfb0:	68ac      	ldr	r4, [r5, #8]
 801cfb2:	e7f1      	b.n	801cf98 <_fflush_r+0x1c>
 801cfb4:	4b05      	ldr	r3, [pc, #20]	; (801cfcc <_fflush_r+0x50>)
 801cfb6:	429c      	cmp	r4, r3
 801cfb8:	bf08      	it	eq
 801cfba:	68ec      	ldreq	r4, [r5, #12]
 801cfbc:	e7ec      	b.n	801cf98 <_fflush_r+0x1c>
 801cfbe:	2000      	movs	r0, #0
 801cfc0:	bd38      	pop	{r3, r4, r5, pc}
 801cfc2:	bf00      	nop
 801cfc4:	080215f8 	.word	0x080215f8
 801cfc8:	08021618 	.word	0x08021618
 801cfcc:	080215d8 	.word	0x080215d8

0801cfd0 <std>:
 801cfd0:	2300      	movs	r3, #0
 801cfd2:	b510      	push	{r4, lr}
 801cfd4:	4604      	mov	r4, r0
 801cfd6:	e9c0 3300 	strd	r3, r3, [r0]
 801cfda:	6083      	str	r3, [r0, #8]
 801cfdc:	8181      	strh	r1, [r0, #12]
 801cfde:	6643      	str	r3, [r0, #100]	; 0x64
 801cfe0:	81c2      	strh	r2, [r0, #14]
 801cfe2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801cfe6:	6183      	str	r3, [r0, #24]
 801cfe8:	4619      	mov	r1, r3
 801cfea:	2208      	movs	r2, #8
 801cfec:	305c      	adds	r0, #92	; 0x5c
 801cfee:	f7ff fa4e 	bl	801c48e <memset>
 801cff2:	4b05      	ldr	r3, [pc, #20]	; (801d008 <std+0x38>)
 801cff4:	6263      	str	r3, [r4, #36]	; 0x24
 801cff6:	4b05      	ldr	r3, [pc, #20]	; (801d00c <std+0x3c>)
 801cff8:	62a3      	str	r3, [r4, #40]	; 0x28
 801cffa:	4b05      	ldr	r3, [pc, #20]	; (801d010 <std+0x40>)
 801cffc:	62e3      	str	r3, [r4, #44]	; 0x2c
 801cffe:	4b05      	ldr	r3, [pc, #20]	; (801d014 <std+0x44>)
 801d000:	6224      	str	r4, [r4, #32]
 801d002:	6323      	str	r3, [r4, #48]	; 0x30
 801d004:	bd10      	pop	{r4, pc}
 801d006:	bf00      	nop
 801d008:	0801d231 	.word	0x0801d231
 801d00c:	0801d253 	.word	0x0801d253
 801d010:	0801d28b 	.word	0x0801d28b
 801d014:	0801d2af 	.word	0x0801d2af

0801d018 <_cleanup_r>:
 801d018:	4901      	ldr	r1, [pc, #4]	; (801d020 <_cleanup_r+0x8>)
 801d01a:	f000 b885 	b.w	801d128 <_fwalk_reent>
 801d01e:	bf00      	nop
 801d020:	0801cf7d 	.word	0x0801cf7d

0801d024 <__sfmoreglue>:
 801d024:	b570      	push	{r4, r5, r6, lr}
 801d026:	1e4a      	subs	r2, r1, #1
 801d028:	2568      	movs	r5, #104	; 0x68
 801d02a:	4355      	muls	r5, r2
 801d02c:	460e      	mov	r6, r1
 801d02e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801d032:	f7ff fa83 	bl	801c53c <_malloc_r>
 801d036:	4604      	mov	r4, r0
 801d038:	b140      	cbz	r0, 801d04c <__sfmoreglue+0x28>
 801d03a:	2100      	movs	r1, #0
 801d03c:	e9c0 1600 	strd	r1, r6, [r0]
 801d040:	300c      	adds	r0, #12
 801d042:	60a0      	str	r0, [r4, #8]
 801d044:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801d048:	f7ff fa21 	bl	801c48e <memset>
 801d04c:	4620      	mov	r0, r4
 801d04e:	bd70      	pop	{r4, r5, r6, pc}

0801d050 <__sinit>:
 801d050:	6983      	ldr	r3, [r0, #24]
 801d052:	b510      	push	{r4, lr}
 801d054:	4604      	mov	r4, r0
 801d056:	bb33      	cbnz	r3, 801d0a6 <__sinit+0x56>
 801d058:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801d05c:	6503      	str	r3, [r0, #80]	; 0x50
 801d05e:	4b12      	ldr	r3, [pc, #72]	; (801d0a8 <__sinit+0x58>)
 801d060:	4a12      	ldr	r2, [pc, #72]	; (801d0ac <__sinit+0x5c>)
 801d062:	681b      	ldr	r3, [r3, #0]
 801d064:	6282      	str	r2, [r0, #40]	; 0x28
 801d066:	4298      	cmp	r0, r3
 801d068:	bf04      	itt	eq
 801d06a:	2301      	moveq	r3, #1
 801d06c:	6183      	streq	r3, [r0, #24]
 801d06e:	f000 f81f 	bl	801d0b0 <__sfp>
 801d072:	6060      	str	r0, [r4, #4]
 801d074:	4620      	mov	r0, r4
 801d076:	f000 f81b 	bl	801d0b0 <__sfp>
 801d07a:	60a0      	str	r0, [r4, #8]
 801d07c:	4620      	mov	r0, r4
 801d07e:	f000 f817 	bl	801d0b0 <__sfp>
 801d082:	2200      	movs	r2, #0
 801d084:	60e0      	str	r0, [r4, #12]
 801d086:	2104      	movs	r1, #4
 801d088:	6860      	ldr	r0, [r4, #4]
 801d08a:	f7ff ffa1 	bl	801cfd0 <std>
 801d08e:	2201      	movs	r2, #1
 801d090:	2109      	movs	r1, #9
 801d092:	68a0      	ldr	r0, [r4, #8]
 801d094:	f7ff ff9c 	bl	801cfd0 <std>
 801d098:	2202      	movs	r2, #2
 801d09a:	2112      	movs	r1, #18
 801d09c:	68e0      	ldr	r0, [r4, #12]
 801d09e:	f7ff ff97 	bl	801cfd0 <std>
 801d0a2:	2301      	movs	r3, #1
 801d0a4:	61a3      	str	r3, [r4, #24]
 801d0a6:	bd10      	pop	{r4, pc}
 801d0a8:	0802159c 	.word	0x0802159c
 801d0ac:	0801d019 	.word	0x0801d019

0801d0b0 <__sfp>:
 801d0b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d0b2:	4b1b      	ldr	r3, [pc, #108]	; (801d120 <__sfp+0x70>)
 801d0b4:	681e      	ldr	r6, [r3, #0]
 801d0b6:	69b3      	ldr	r3, [r6, #24]
 801d0b8:	4607      	mov	r7, r0
 801d0ba:	b913      	cbnz	r3, 801d0c2 <__sfp+0x12>
 801d0bc:	4630      	mov	r0, r6
 801d0be:	f7ff ffc7 	bl	801d050 <__sinit>
 801d0c2:	3648      	adds	r6, #72	; 0x48
 801d0c4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801d0c8:	3b01      	subs	r3, #1
 801d0ca:	d503      	bpl.n	801d0d4 <__sfp+0x24>
 801d0cc:	6833      	ldr	r3, [r6, #0]
 801d0ce:	b133      	cbz	r3, 801d0de <__sfp+0x2e>
 801d0d0:	6836      	ldr	r6, [r6, #0]
 801d0d2:	e7f7      	b.n	801d0c4 <__sfp+0x14>
 801d0d4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801d0d8:	b16d      	cbz	r5, 801d0f6 <__sfp+0x46>
 801d0da:	3468      	adds	r4, #104	; 0x68
 801d0dc:	e7f4      	b.n	801d0c8 <__sfp+0x18>
 801d0de:	2104      	movs	r1, #4
 801d0e0:	4638      	mov	r0, r7
 801d0e2:	f7ff ff9f 	bl	801d024 <__sfmoreglue>
 801d0e6:	6030      	str	r0, [r6, #0]
 801d0e8:	2800      	cmp	r0, #0
 801d0ea:	d1f1      	bne.n	801d0d0 <__sfp+0x20>
 801d0ec:	230c      	movs	r3, #12
 801d0ee:	603b      	str	r3, [r7, #0]
 801d0f0:	4604      	mov	r4, r0
 801d0f2:	4620      	mov	r0, r4
 801d0f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801d0f6:	4b0b      	ldr	r3, [pc, #44]	; (801d124 <__sfp+0x74>)
 801d0f8:	6665      	str	r5, [r4, #100]	; 0x64
 801d0fa:	e9c4 5500 	strd	r5, r5, [r4]
 801d0fe:	60a5      	str	r5, [r4, #8]
 801d100:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801d104:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801d108:	2208      	movs	r2, #8
 801d10a:	4629      	mov	r1, r5
 801d10c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801d110:	f7ff f9bd 	bl	801c48e <memset>
 801d114:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801d118:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801d11c:	e7e9      	b.n	801d0f2 <__sfp+0x42>
 801d11e:	bf00      	nop
 801d120:	0802159c 	.word	0x0802159c
 801d124:	ffff0001 	.word	0xffff0001

0801d128 <_fwalk_reent>:
 801d128:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d12c:	4680      	mov	r8, r0
 801d12e:	4689      	mov	r9, r1
 801d130:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801d134:	2600      	movs	r6, #0
 801d136:	b914      	cbnz	r4, 801d13e <_fwalk_reent+0x16>
 801d138:	4630      	mov	r0, r6
 801d13a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d13e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801d142:	3f01      	subs	r7, #1
 801d144:	d501      	bpl.n	801d14a <_fwalk_reent+0x22>
 801d146:	6824      	ldr	r4, [r4, #0]
 801d148:	e7f5      	b.n	801d136 <_fwalk_reent+0xe>
 801d14a:	89ab      	ldrh	r3, [r5, #12]
 801d14c:	2b01      	cmp	r3, #1
 801d14e:	d907      	bls.n	801d160 <_fwalk_reent+0x38>
 801d150:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801d154:	3301      	adds	r3, #1
 801d156:	d003      	beq.n	801d160 <_fwalk_reent+0x38>
 801d158:	4629      	mov	r1, r5
 801d15a:	4640      	mov	r0, r8
 801d15c:	47c8      	blx	r9
 801d15e:	4306      	orrs	r6, r0
 801d160:	3568      	adds	r5, #104	; 0x68
 801d162:	e7ee      	b.n	801d142 <_fwalk_reent+0x1a>

0801d164 <__swhatbuf_r>:
 801d164:	b570      	push	{r4, r5, r6, lr}
 801d166:	460e      	mov	r6, r1
 801d168:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d16c:	2900      	cmp	r1, #0
 801d16e:	b096      	sub	sp, #88	; 0x58
 801d170:	4614      	mov	r4, r2
 801d172:	461d      	mov	r5, r3
 801d174:	da07      	bge.n	801d186 <__swhatbuf_r+0x22>
 801d176:	2300      	movs	r3, #0
 801d178:	602b      	str	r3, [r5, #0]
 801d17a:	89b3      	ldrh	r3, [r6, #12]
 801d17c:	061a      	lsls	r2, r3, #24
 801d17e:	d410      	bmi.n	801d1a2 <__swhatbuf_r+0x3e>
 801d180:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801d184:	e00e      	b.n	801d1a4 <__swhatbuf_r+0x40>
 801d186:	466a      	mov	r2, sp
 801d188:	f000 f8b8 	bl	801d2fc <_fstat_r>
 801d18c:	2800      	cmp	r0, #0
 801d18e:	dbf2      	blt.n	801d176 <__swhatbuf_r+0x12>
 801d190:	9a01      	ldr	r2, [sp, #4]
 801d192:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801d196:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801d19a:	425a      	negs	r2, r3
 801d19c:	415a      	adcs	r2, r3
 801d19e:	602a      	str	r2, [r5, #0]
 801d1a0:	e7ee      	b.n	801d180 <__swhatbuf_r+0x1c>
 801d1a2:	2340      	movs	r3, #64	; 0x40
 801d1a4:	2000      	movs	r0, #0
 801d1a6:	6023      	str	r3, [r4, #0]
 801d1a8:	b016      	add	sp, #88	; 0x58
 801d1aa:	bd70      	pop	{r4, r5, r6, pc}

0801d1ac <__smakebuf_r>:
 801d1ac:	898b      	ldrh	r3, [r1, #12]
 801d1ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801d1b0:	079d      	lsls	r5, r3, #30
 801d1b2:	4606      	mov	r6, r0
 801d1b4:	460c      	mov	r4, r1
 801d1b6:	d507      	bpl.n	801d1c8 <__smakebuf_r+0x1c>
 801d1b8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801d1bc:	6023      	str	r3, [r4, #0]
 801d1be:	6123      	str	r3, [r4, #16]
 801d1c0:	2301      	movs	r3, #1
 801d1c2:	6163      	str	r3, [r4, #20]
 801d1c4:	b002      	add	sp, #8
 801d1c6:	bd70      	pop	{r4, r5, r6, pc}
 801d1c8:	ab01      	add	r3, sp, #4
 801d1ca:	466a      	mov	r2, sp
 801d1cc:	f7ff ffca 	bl	801d164 <__swhatbuf_r>
 801d1d0:	9900      	ldr	r1, [sp, #0]
 801d1d2:	4605      	mov	r5, r0
 801d1d4:	4630      	mov	r0, r6
 801d1d6:	f7ff f9b1 	bl	801c53c <_malloc_r>
 801d1da:	b948      	cbnz	r0, 801d1f0 <__smakebuf_r+0x44>
 801d1dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801d1e0:	059a      	lsls	r2, r3, #22
 801d1e2:	d4ef      	bmi.n	801d1c4 <__smakebuf_r+0x18>
 801d1e4:	f023 0303 	bic.w	r3, r3, #3
 801d1e8:	f043 0302 	orr.w	r3, r3, #2
 801d1ec:	81a3      	strh	r3, [r4, #12]
 801d1ee:	e7e3      	b.n	801d1b8 <__smakebuf_r+0xc>
 801d1f0:	4b0d      	ldr	r3, [pc, #52]	; (801d228 <__smakebuf_r+0x7c>)
 801d1f2:	62b3      	str	r3, [r6, #40]	; 0x28
 801d1f4:	89a3      	ldrh	r3, [r4, #12]
 801d1f6:	6020      	str	r0, [r4, #0]
 801d1f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801d1fc:	81a3      	strh	r3, [r4, #12]
 801d1fe:	9b00      	ldr	r3, [sp, #0]
 801d200:	6163      	str	r3, [r4, #20]
 801d202:	9b01      	ldr	r3, [sp, #4]
 801d204:	6120      	str	r0, [r4, #16]
 801d206:	b15b      	cbz	r3, 801d220 <__smakebuf_r+0x74>
 801d208:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d20c:	4630      	mov	r0, r6
 801d20e:	f000 f887 	bl	801d320 <_isatty_r>
 801d212:	b128      	cbz	r0, 801d220 <__smakebuf_r+0x74>
 801d214:	89a3      	ldrh	r3, [r4, #12]
 801d216:	f023 0303 	bic.w	r3, r3, #3
 801d21a:	f043 0301 	orr.w	r3, r3, #1
 801d21e:	81a3      	strh	r3, [r4, #12]
 801d220:	89a3      	ldrh	r3, [r4, #12]
 801d222:	431d      	orrs	r5, r3
 801d224:	81a5      	strh	r5, [r4, #12]
 801d226:	e7cd      	b.n	801d1c4 <__smakebuf_r+0x18>
 801d228:	0801d019 	.word	0x0801d019

0801d22c <__malloc_lock>:
 801d22c:	4770      	bx	lr

0801d22e <__malloc_unlock>:
 801d22e:	4770      	bx	lr

0801d230 <__sread>:
 801d230:	b510      	push	{r4, lr}
 801d232:	460c      	mov	r4, r1
 801d234:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d238:	f000 f894 	bl	801d364 <_read_r>
 801d23c:	2800      	cmp	r0, #0
 801d23e:	bfab      	itete	ge
 801d240:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801d242:	89a3      	ldrhlt	r3, [r4, #12]
 801d244:	181b      	addge	r3, r3, r0
 801d246:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801d24a:	bfac      	ite	ge
 801d24c:	6563      	strge	r3, [r4, #84]	; 0x54
 801d24e:	81a3      	strhlt	r3, [r4, #12]
 801d250:	bd10      	pop	{r4, pc}

0801d252 <__swrite>:
 801d252:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d256:	461f      	mov	r7, r3
 801d258:	898b      	ldrh	r3, [r1, #12]
 801d25a:	05db      	lsls	r3, r3, #23
 801d25c:	4605      	mov	r5, r0
 801d25e:	460c      	mov	r4, r1
 801d260:	4616      	mov	r6, r2
 801d262:	d505      	bpl.n	801d270 <__swrite+0x1e>
 801d264:	2302      	movs	r3, #2
 801d266:	2200      	movs	r2, #0
 801d268:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d26c:	f000 f868 	bl	801d340 <_lseek_r>
 801d270:	89a3      	ldrh	r3, [r4, #12]
 801d272:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d276:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801d27a:	81a3      	strh	r3, [r4, #12]
 801d27c:	4632      	mov	r2, r6
 801d27e:	463b      	mov	r3, r7
 801d280:	4628      	mov	r0, r5
 801d282:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801d286:	f000 b817 	b.w	801d2b8 <_write_r>

0801d28a <__sseek>:
 801d28a:	b510      	push	{r4, lr}
 801d28c:	460c      	mov	r4, r1
 801d28e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d292:	f000 f855 	bl	801d340 <_lseek_r>
 801d296:	1c43      	adds	r3, r0, #1
 801d298:	89a3      	ldrh	r3, [r4, #12]
 801d29a:	bf15      	itete	ne
 801d29c:	6560      	strne	r0, [r4, #84]	; 0x54
 801d29e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801d2a2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801d2a6:	81a3      	strheq	r3, [r4, #12]
 801d2a8:	bf18      	it	ne
 801d2aa:	81a3      	strhne	r3, [r4, #12]
 801d2ac:	bd10      	pop	{r4, pc}

0801d2ae <__sclose>:
 801d2ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d2b2:	f000 b813 	b.w	801d2dc <_close_r>
	...

0801d2b8 <_write_r>:
 801d2b8:	b538      	push	{r3, r4, r5, lr}
 801d2ba:	4c07      	ldr	r4, [pc, #28]	; (801d2d8 <_write_r+0x20>)
 801d2bc:	4605      	mov	r5, r0
 801d2be:	4608      	mov	r0, r1
 801d2c0:	4611      	mov	r1, r2
 801d2c2:	2200      	movs	r2, #0
 801d2c4:	6022      	str	r2, [r4, #0]
 801d2c6:	461a      	mov	r2, r3
 801d2c8:	f7e5 fb4c 	bl	8002964 <_write>
 801d2cc:	1c43      	adds	r3, r0, #1
 801d2ce:	d102      	bne.n	801d2d6 <_write_r+0x1e>
 801d2d0:	6823      	ldr	r3, [r4, #0]
 801d2d2:	b103      	cbz	r3, 801d2d6 <_write_r+0x1e>
 801d2d4:	602b      	str	r3, [r5, #0]
 801d2d6:	bd38      	pop	{r3, r4, r5, pc}
 801d2d8:	20012cb0 	.word	0x20012cb0

0801d2dc <_close_r>:
 801d2dc:	b538      	push	{r3, r4, r5, lr}
 801d2de:	4c06      	ldr	r4, [pc, #24]	; (801d2f8 <_close_r+0x1c>)
 801d2e0:	2300      	movs	r3, #0
 801d2e2:	4605      	mov	r5, r0
 801d2e4:	4608      	mov	r0, r1
 801d2e6:	6023      	str	r3, [r4, #0]
 801d2e8:	f7e5 fb4a 	bl	8002980 <_close>
 801d2ec:	1c43      	adds	r3, r0, #1
 801d2ee:	d102      	bne.n	801d2f6 <_close_r+0x1a>
 801d2f0:	6823      	ldr	r3, [r4, #0]
 801d2f2:	b103      	cbz	r3, 801d2f6 <_close_r+0x1a>
 801d2f4:	602b      	str	r3, [r5, #0]
 801d2f6:	bd38      	pop	{r3, r4, r5, pc}
 801d2f8:	20012cb0 	.word	0x20012cb0

0801d2fc <_fstat_r>:
 801d2fc:	b538      	push	{r3, r4, r5, lr}
 801d2fe:	4c07      	ldr	r4, [pc, #28]	; (801d31c <_fstat_r+0x20>)
 801d300:	2300      	movs	r3, #0
 801d302:	4605      	mov	r5, r0
 801d304:	4608      	mov	r0, r1
 801d306:	4611      	mov	r1, r2
 801d308:	6023      	str	r3, [r4, #0]
 801d30a:	f7e5 fb3c 	bl	8002986 <_fstat>
 801d30e:	1c43      	adds	r3, r0, #1
 801d310:	d102      	bne.n	801d318 <_fstat_r+0x1c>
 801d312:	6823      	ldr	r3, [r4, #0]
 801d314:	b103      	cbz	r3, 801d318 <_fstat_r+0x1c>
 801d316:	602b      	str	r3, [r5, #0]
 801d318:	bd38      	pop	{r3, r4, r5, pc}
 801d31a:	bf00      	nop
 801d31c:	20012cb0 	.word	0x20012cb0

0801d320 <_isatty_r>:
 801d320:	b538      	push	{r3, r4, r5, lr}
 801d322:	4c06      	ldr	r4, [pc, #24]	; (801d33c <_isatty_r+0x1c>)
 801d324:	2300      	movs	r3, #0
 801d326:	4605      	mov	r5, r0
 801d328:	4608      	mov	r0, r1
 801d32a:	6023      	str	r3, [r4, #0]
 801d32c:	f7e5 fb30 	bl	8002990 <_isatty>
 801d330:	1c43      	adds	r3, r0, #1
 801d332:	d102      	bne.n	801d33a <_isatty_r+0x1a>
 801d334:	6823      	ldr	r3, [r4, #0]
 801d336:	b103      	cbz	r3, 801d33a <_isatty_r+0x1a>
 801d338:	602b      	str	r3, [r5, #0]
 801d33a:	bd38      	pop	{r3, r4, r5, pc}
 801d33c:	20012cb0 	.word	0x20012cb0

0801d340 <_lseek_r>:
 801d340:	b538      	push	{r3, r4, r5, lr}
 801d342:	4c07      	ldr	r4, [pc, #28]	; (801d360 <_lseek_r+0x20>)
 801d344:	4605      	mov	r5, r0
 801d346:	4608      	mov	r0, r1
 801d348:	4611      	mov	r1, r2
 801d34a:	2200      	movs	r2, #0
 801d34c:	6022      	str	r2, [r4, #0]
 801d34e:	461a      	mov	r2, r3
 801d350:	f7e5 fb20 	bl	8002994 <_lseek>
 801d354:	1c43      	adds	r3, r0, #1
 801d356:	d102      	bne.n	801d35e <_lseek_r+0x1e>
 801d358:	6823      	ldr	r3, [r4, #0]
 801d35a:	b103      	cbz	r3, 801d35e <_lseek_r+0x1e>
 801d35c:	602b      	str	r3, [r5, #0]
 801d35e:	bd38      	pop	{r3, r4, r5, pc}
 801d360:	20012cb0 	.word	0x20012cb0

0801d364 <_read_r>:
 801d364:	b538      	push	{r3, r4, r5, lr}
 801d366:	4c07      	ldr	r4, [pc, #28]	; (801d384 <_read_r+0x20>)
 801d368:	4605      	mov	r5, r0
 801d36a:	4608      	mov	r0, r1
 801d36c:	4611      	mov	r1, r2
 801d36e:	2200      	movs	r2, #0
 801d370:	6022      	str	r2, [r4, #0]
 801d372:	461a      	mov	r2, r3
 801d374:	f7e5 fae8 	bl	8002948 <_read>
 801d378:	1c43      	adds	r3, r0, #1
 801d37a:	d102      	bne.n	801d382 <_read_r+0x1e>
 801d37c:	6823      	ldr	r3, [r4, #0]
 801d37e:	b103      	cbz	r3, 801d382 <_read_r+0x1e>
 801d380:	602b      	str	r3, [r5, #0]
 801d382:	bd38      	pop	{r3, r4, r5, pc}
 801d384:	20012cb0 	.word	0x20012cb0

0801d388 <_init>:
 801d388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d38a:	bf00      	nop
 801d38c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801d38e:	bc08      	pop	{r3}
 801d390:	469e      	mov	lr, r3
 801d392:	4770      	bx	lr

0801d394 <_fini>:
 801d394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d396:	bf00      	nop
 801d398:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801d39a:	bc08      	pop	{r3}
 801d39c:	469e      	mov	lr, r3
 801d39e:	4770      	bx	lr
