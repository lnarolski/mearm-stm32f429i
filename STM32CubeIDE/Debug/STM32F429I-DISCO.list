
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001b65c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003b7c  0801b80c  0801b80c  0002b80c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000097e  0801f388  0801f388  0002f388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000014  0801fd08  0801fd08  0002fd08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000098  0801fd1c  0801fd1c  0002fd1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00042988  0801fdb4  0801fdb4  0002fdb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0806273c  0806273c  00080170  2**0
                  CONTENTS
  8 .ARM          00000008  0806273c  0806273c  0007273c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08062744  08062744  00080170  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08062744  08062744  00072744  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08062758  08062758  00072758  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000170  20000000  08062760  00080000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00012a44  20000170  080628d0  00080170  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20012bb4  080628d0  00082bb4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00080170  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00090000  2**2
                  ALLOC
 17 .debug_line   000327ec  00000000  00000000  000801a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_info   000a6a0a  00000000  00000000  000b298c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 00012afb  00000000  00000000  00159396  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00002970  00000000  00000000  0016be98  2**3
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    00108b66  00000000  00000000  0016e808  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 00003a50  00000000  00000000  00277370  2**3
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_loc    0001cdfd  00000000  00000000  0027adc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0002fa81  00000000  00000000  00297bbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000fa  00000000  00000000  002c763e  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00007a18  00000000  00000000  002c7738  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801b7f4 	.word	0x0801b7f4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0801b7f4 	.word	0x0801b7f4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__aeabi_d2iz>:
 8000a2c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a30:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a34:	d215      	bcs.n	8000a62 <__aeabi_d2iz+0x36>
 8000a36:	d511      	bpl.n	8000a5c <__aeabi_d2iz+0x30>
 8000a38:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a3c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a40:	d912      	bls.n	8000a68 <__aeabi_d2iz+0x3c>
 8000a42:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a46:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a4a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a4e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a52:	fa23 f002 	lsr.w	r0, r3, r2
 8000a56:	bf18      	it	ne
 8000a58:	4240      	negne	r0, r0
 8000a5a:	4770      	bx	lr
 8000a5c:	f04f 0000 	mov.w	r0, #0
 8000a60:	4770      	bx	lr
 8000a62:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a66:	d105      	bne.n	8000a74 <__aeabi_d2iz+0x48>
 8000a68:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a6c:	bf08      	it	eq
 8000a6e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a72:	4770      	bx	lr
 8000a74:	f04f 0000 	mov.w	r0, #0
 8000a78:	4770      	bx	lr
 8000a7a:	bf00      	nop

08000a7c <__aeabi_uldivmod>:
 8000a7c:	b953      	cbnz	r3, 8000a94 <__aeabi_uldivmod+0x18>
 8000a7e:	b94a      	cbnz	r2, 8000a94 <__aeabi_uldivmod+0x18>
 8000a80:	2900      	cmp	r1, #0
 8000a82:	bf08      	it	eq
 8000a84:	2800      	cmpeq	r0, #0
 8000a86:	bf1c      	itt	ne
 8000a88:	f04f 31ff 	movne.w	r1, #4294967295
 8000a8c:	f04f 30ff 	movne.w	r0, #4294967295
 8000a90:	f000 b972 	b.w	8000d78 <__aeabi_idiv0>
 8000a94:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a98:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000a9c:	f000 f806 	bl	8000aac <__udivmoddi4>
 8000aa0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000aa4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000aa8:	b004      	add	sp, #16
 8000aaa:	4770      	bx	lr

08000aac <__udivmoddi4>:
 8000aac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ab0:	9e08      	ldr	r6, [sp, #32]
 8000ab2:	4604      	mov	r4, r0
 8000ab4:	4688      	mov	r8, r1
 8000ab6:	2b00      	cmp	r3, #0
 8000ab8:	d14b      	bne.n	8000b52 <__udivmoddi4+0xa6>
 8000aba:	428a      	cmp	r2, r1
 8000abc:	4615      	mov	r5, r2
 8000abe:	d967      	bls.n	8000b90 <__udivmoddi4+0xe4>
 8000ac0:	fab2 f282 	clz	r2, r2
 8000ac4:	b14a      	cbz	r2, 8000ada <__udivmoddi4+0x2e>
 8000ac6:	f1c2 0720 	rsb	r7, r2, #32
 8000aca:	fa01 f302 	lsl.w	r3, r1, r2
 8000ace:	fa20 f707 	lsr.w	r7, r0, r7
 8000ad2:	4095      	lsls	r5, r2
 8000ad4:	ea47 0803 	orr.w	r8, r7, r3
 8000ad8:	4094      	lsls	r4, r2
 8000ada:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ade:	0c23      	lsrs	r3, r4, #16
 8000ae0:	fbb8 f7fe 	udiv	r7, r8, lr
 8000ae4:	fa1f fc85 	uxth.w	ip, r5
 8000ae8:	fb0e 8817 	mls	r8, lr, r7, r8
 8000aec:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000af0:	fb07 f10c 	mul.w	r1, r7, ip
 8000af4:	4299      	cmp	r1, r3
 8000af6:	d909      	bls.n	8000b0c <__udivmoddi4+0x60>
 8000af8:	18eb      	adds	r3, r5, r3
 8000afa:	f107 30ff 	add.w	r0, r7, #4294967295
 8000afe:	f080 811b 	bcs.w	8000d38 <__udivmoddi4+0x28c>
 8000b02:	4299      	cmp	r1, r3
 8000b04:	f240 8118 	bls.w	8000d38 <__udivmoddi4+0x28c>
 8000b08:	3f02      	subs	r7, #2
 8000b0a:	442b      	add	r3, r5
 8000b0c:	1a5b      	subs	r3, r3, r1
 8000b0e:	b2a4      	uxth	r4, r4
 8000b10:	fbb3 f0fe 	udiv	r0, r3, lr
 8000b14:	fb0e 3310 	mls	r3, lr, r0, r3
 8000b18:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000b1c:	fb00 fc0c 	mul.w	ip, r0, ip
 8000b20:	45a4      	cmp	ip, r4
 8000b22:	d909      	bls.n	8000b38 <__udivmoddi4+0x8c>
 8000b24:	192c      	adds	r4, r5, r4
 8000b26:	f100 33ff 	add.w	r3, r0, #4294967295
 8000b2a:	f080 8107 	bcs.w	8000d3c <__udivmoddi4+0x290>
 8000b2e:	45a4      	cmp	ip, r4
 8000b30:	f240 8104 	bls.w	8000d3c <__udivmoddi4+0x290>
 8000b34:	3802      	subs	r0, #2
 8000b36:	442c      	add	r4, r5
 8000b38:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000b3c:	eba4 040c 	sub.w	r4, r4, ip
 8000b40:	2700      	movs	r7, #0
 8000b42:	b11e      	cbz	r6, 8000b4c <__udivmoddi4+0xa0>
 8000b44:	40d4      	lsrs	r4, r2
 8000b46:	2300      	movs	r3, #0
 8000b48:	e9c6 4300 	strd	r4, r3, [r6]
 8000b4c:	4639      	mov	r1, r7
 8000b4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b52:	428b      	cmp	r3, r1
 8000b54:	d909      	bls.n	8000b6a <__udivmoddi4+0xbe>
 8000b56:	2e00      	cmp	r6, #0
 8000b58:	f000 80eb 	beq.w	8000d32 <__udivmoddi4+0x286>
 8000b5c:	2700      	movs	r7, #0
 8000b5e:	e9c6 0100 	strd	r0, r1, [r6]
 8000b62:	4638      	mov	r0, r7
 8000b64:	4639      	mov	r1, r7
 8000b66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b6a:	fab3 f783 	clz	r7, r3
 8000b6e:	2f00      	cmp	r7, #0
 8000b70:	d147      	bne.n	8000c02 <__udivmoddi4+0x156>
 8000b72:	428b      	cmp	r3, r1
 8000b74:	d302      	bcc.n	8000b7c <__udivmoddi4+0xd0>
 8000b76:	4282      	cmp	r2, r0
 8000b78:	f200 80fa 	bhi.w	8000d70 <__udivmoddi4+0x2c4>
 8000b7c:	1a84      	subs	r4, r0, r2
 8000b7e:	eb61 0303 	sbc.w	r3, r1, r3
 8000b82:	2001      	movs	r0, #1
 8000b84:	4698      	mov	r8, r3
 8000b86:	2e00      	cmp	r6, #0
 8000b88:	d0e0      	beq.n	8000b4c <__udivmoddi4+0xa0>
 8000b8a:	e9c6 4800 	strd	r4, r8, [r6]
 8000b8e:	e7dd      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000b90:	b902      	cbnz	r2, 8000b94 <__udivmoddi4+0xe8>
 8000b92:	deff      	udf	#255	; 0xff
 8000b94:	fab2 f282 	clz	r2, r2
 8000b98:	2a00      	cmp	r2, #0
 8000b9a:	f040 808f 	bne.w	8000cbc <__udivmoddi4+0x210>
 8000b9e:	1b49      	subs	r1, r1, r5
 8000ba0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ba4:	fa1f f885 	uxth.w	r8, r5
 8000ba8:	2701      	movs	r7, #1
 8000baa:	fbb1 fcfe 	udiv	ip, r1, lr
 8000bae:	0c23      	lsrs	r3, r4, #16
 8000bb0:	fb0e 111c 	mls	r1, lr, ip, r1
 8000bb4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000bb8:	fb08 f10c 	mul.w	r1, r8, ip
 8000bbc:	4299      	cmp	r1, r3
 8000bbe:	d907      	bls.n	8000bd0 <__udivmoddi4+0x124>
 8000bc0:	18eb      	adds	r3, r5, r3
 8000bc2:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000bc6:	d202      	bcs.n	8000bce <__udivmoddi4+0x122>
 8000bc8:	4299      	cmp	r1, r3
 8000bca:	f200 80cd 	bhi.w	8000d68 <__udivmoddi4+0x2bc>
 8000bce:	4684      	mov	ip, r0
 8000bd0:	1a59      	subs	r1, r3, r1
 8000bd2:	b2a3      	uxth	r3, r4
 8000bd4:	fbb1 f0fe 	udiv	r0, r1, lr
 8000bd8:	fb0e 1410 	mls	r4, lr, r0, r1
 8000bdc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000be0:	fb08 f800 	mul.w	r8, r8, r0
 8000be4:	45a0      	cmp	r8, r4
 8000be6:	d907      	bls.n	8000bf8 <__udivmoddi4+0x14c>
 8000be8:	192c      	adds	r4, r5, r4
 8000bea:	f100 33ff 	add.w	r3, r0, #4294967295
 8000bee:	d202      	bcs.n	8000bf6 <__udivmoddi4+0x14a>
 8000bf0:	45a0      	cmp	r8, r4
 8000bf2:	f200 80b6 	bhi.w	8000d62 <__udivmoddi4+0x2b6>
 8000bf6:	4618      	mov	r0, r3
 8000bf8:	eba4 0408 	sub.w	r4, r4, r8
 8000bfc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000c00:	e79f      	b.n	8000b42 <__udivmoddi4+0x96>
 8000c02:	f1c7 0c20 	rsb	ip, r7, #32
 8000c06:	40bb      	lsls	r3, r7
 8000c08:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000c0c:	ea4e 0e03 	orr.w	lr, lr, r3
 8000c10:	fa01 f407 	lsl.w	r4, r1, r7
 8000c14:	fa20 f50c 	lsr.w	r5, r0, ip
 8000c18:	fa21 f30c 	lsr.w	r3, r1, ip
 8000c1c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000c20:	4325      	orrs	r5, r4
 8000c22:	fbb3 f9f8 	udiv	r9, r3, r8
 8000c26:	0c2c      	lsrs	r4, r5, #16
 8000c28:	fb08 3319 	mls	r3, r8, r9, r3
 8000c2c:	fa1f fa8e 	uxth.w	sl, lr
 8000c30:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000c34:	fb09 f40a 	mul.w	r4, r9, sl
 8000c38:	429c      	cmp	r4, r3
 8000c3a:	fa02 f207 	lsl.w	r2, r2, r7
 8000c3e:	fa00 f107 	lsl.w	r1, r0, r7
 8000c42:	d90b      	bls.n	8000c5c <__udivmoddi4+0x1b0>
 8000c44:	eb1e 0303 	adds.w	r3, lr, r3
 8000c48:	f109 30ff 	add.w	r0, r9, #4294967295
 8000c4c:	f080 8087 	bcs.w	8000d5e <__udivmoddi4+0x2b2>
 8000c50:	429c      	cmp	r4, r3
 8000c52:	f240 8084 	bls.w	8000d5e <__udivmoddi4+0x2b2>
 8000c56:	f1a9 0902 	sub.w	r9, r9, #2
 8000c5a:	4473      	add	r3, lr
 8000c5c:	1b1b      	subs	r3, r3, r4
 8000c5e:	b2ad      	uxth	r5, r5
 8000c60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c64:	fb08 3310 	mls	r3, r8, r0, r3
 8000c68:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000c6c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000c70:	45a2      	cmp	sl, r4
 8000c72:	d908      	bls.n	8000c86 <__udivmoddi4+0x1da>
 8000c74:	eb1e 0404 	adds.w	r4, lr, r4
 8000c78:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c7c:	d26b      	bcs.n	8000d56 <__udivmoddi4+0x2aa>
 8000c7e:	45a2      	cmp	sl, r4
 8000c80:	d969      	bls.n	8000d56 <__udivmoddi4+0x2aa>
 8000c82:	3802      	subs	r0, #2
 8000c84:	4474      	add	r4, lr
 8000c86:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000c8a:	fba0 8902 	umull	r8, r9, r0, r2
 8000c8e:	eba4 040a 	sub.w	r4, r4, sl
 8000c92:	454c      	cmp	r4, r9
 8000c94:	46c2      	mov	sl, r8
 8000c96:	464b      	mov	r3, r9
 8000c98:	d354      	bcc.n	8000d44 <__udivmoddi4+0x298>
 8000c9a:	d051      	beq.n	8000d40 <__udivmoddi4+0x294>
 8000c9c:	2e00      	cmp	r6, #0
 8000c9e:	d069      	beq.n	8000d74 <__udivmoddi4+0x2c8>
 8000ca0:	ebb1 050a 	subs.w	r5, r1, sl
 8000ca4:	eb64 0403 	sbc.w	r4, r4, r3
 8000ca8:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000cac:	40fd      	lsrs	r5, r7
 8000cae:	40fc      	lsrs	r4, r7
 8000cb0:	ea4c 0505 	orr.w	r5, ip, r5
 8000cb4:	e9c6 5400 	strd	r5, r4, [r6]
 8000cb8:	2700      	movs	r7, #0
 8000cba:	e747      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000cbc:	f1c2 0320 	rsb	r3, r2, #32
 8000cc0:	fa20 f703 	lsr.w	r7, r0, r3
 8000cc4:	4095      	lsls	r5, r2
 8000cc6:	fa01 f002 	lsl.w	r0, r1, r2
 8000cca:	fa21 f303 	lsr.w	r3, r1, r3
 8000cce:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000cd2:	4338      	orrs	r0, r7
 8000cd4:	0c01      	lsrs	r1, r0, #16
 8000cd6:	fbb3 f7fe 	udiv	r7, r3, lr
 8000cda:	fa1f f885 	uxth.w	r8, r5
 8000cde:	fb0e 3317 	mls	r3, lr, r7, r3
 8000ce2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ce6:	fb07 f308 	mul.w	r3, r7, r8
 8000cea:	428b      	cmp	r3, r1
 8000cec:	fa04 f402 	lsl.w	r4, r4, r2
 8000cf0:	d907      	bls.n	8000d02 <__udivmoddi4+0x256>
 8000cf2:	1869      	adds	r1, r5, r1
 8000cf4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000cf8:	d22f      	bcs.n	8000d5a <__udivmoddi4+0x2ae>
 8000cfa:	428b      	cmp	r3, r1
 8000cfc:	d92d      	bls.n	8000d5a <__udivmoddi4+0x2ae>
 8000cfe:	3f02      	subs	r7, #2
 8000d00:	4429      	add	r1, r5
 8000d02:	1acb      	subs	r3, r1, r3
 8000d04:	b281      	uxth	r1, r0
 8000d06:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d0a:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d0e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d12:	fb00 f308 	mul.w	r3, r0, r8
 8000d16:	428b      	cmp	r3, r1
 8000d18:	d907      	bls.n	8000d2a <__udivmoddi4+0x27e>
 8000d1a:	1869      	adds	r1, r5, r1
 8000d1c:	f100 3cff 	add.w	ip, r0, #4294967295
 8000d20:	d217      	bcs.n	8000d52 <__udivmoddi4+0x2a6>
 8000d22:	428b      	cmp	r3, r1
 8000d24:	d915      	bls.n	8000d52 <__udivmoddi4+0x2a6>
 8000d26:	3802      	subs	r0, #2
 8000d28:	4429      	add	r1, r5
 8000d2a:	1ac9      	subs	r1, r1, r3
 8000d2c:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000d30:	e73b      	b.n	8000baa <__udivmoddi4+0xfe>
 8000d32:	4637      	mov	r7, r6
 8000d34:	4630      	mov	r0, r6
 8000d36:	e709      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000d38:	4607      	mov	r7, r0
 8000d3a:	e6e7      	b.n	8000b0c <__udivmoddi4+0x60>
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	e6fb      	b.n	8000b38 <__udivmoddi4+0x8c>
 8000d40:	4541      	cmp	r1, r8
 8000d42:	d2ab      	bcs.n	8000c9c <__udivmoddi4+0x1f0>
 8000d44:	ebb8 0a02 	subs.w	sl, r8, r2
 8000d48:	eb69 020e 	sbc.w	r2, r9, lr
 8000d4c:	3801      	subs	r0, #1
 8000d4e:	4613      	mov	r3, r2
 8000d50:	e7a4      	b.n	8000c9c <__udivmoddi4+0x1f0>
 8000d52:	4660      	mov	r0, ip
 8000d54:	e7e9      	b.n	8000d2a <__udivmoddi4+0x27e>
 8000d56:	4618      	mov	r0, r3
 8000d58:	e795      	b.n	8000c86 <__udivmoddi4+0x1da>
 8000d5a:	4667      	mov	r7, ip
 8000d5c:	e7d1      	b.n	8000d02 <__udivmoddi4+0x256>
 8000d5e:	4681      	mov	r9, r0
 8000d60:	e77c      	b.n	8000c5c <__udivmoddi4+0x1b0>
 8000d62:	3802      	subs	r0, #2
 8000d64:	442c      	add	r4, r5
 8000d66:	e747      	b.n	8000bf8 <__udivmoddi4+0x14c>
 8000d68:	f1ac 0c02 	sub.w	ip, ip, #2
 8000d6c:	442b      	add	r3, r5
 8000d6e:	e72f      	b.n	8000bd0 <__udivmoddi4+0x124>
 8000d70:	4638      	mov	r0, r7
 8000d72:	e708      	b.n	8000b86 <__udivmoddi4+0xda>
 8000d74:	4637      	mov	r7, r6
 8000d76:	e6e9      	b.n	8000b4c <__udivmoddi4+0xa0>

08000d78 <__aeabi_idiv0>:
 8000d78:	4770      	bx	lr
 8000d7a:	bf00      	nop

08000d7c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000d7c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000db4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000d80:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000d82:	e003      	b.n	8000d8c <LoopCopyDataInit>

08000d84 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000d84:	4b0c      	ldr	r3, [pc, #48]	; (8000db8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000d86:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000d88:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000d8a:	3104      	adds	r1, #4

08000d8c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000d8c:	480b      	ldr	r0, [pc, #44]	; (8000dbc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000d8e:	4b0c      	ldr	r3, [pc, #48]	; (8000dc0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000d90:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000d92:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000d94:	d3f6      	bcc.n	8000d84 <CopyDataInit>
  ldr  r2, =_sbss
 8000d96:	4a0b      	ldr	r2, [pc, #44]	; (8000dc4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000d98:	e002      	b.n	8000da0 <LoopFillZerobss>

08000d9a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000d9a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000d9c:	f842 3b04 	str.w	r3, [r2], #4

08000da0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000da0:	4b09      	ldr	r3, [pc, #36]	; (8000dc8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000da2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000da4:	d3f9      	bcc.n	8000d9a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000da6:	f003 feb5 	bl	8004b14 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000daa:	f019 fd67 	bl	801a87c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000dae:	f000 fe95 	bl	8001adc <main>
  bx  lr    
 8000db2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000db4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000db8:	08062760 	.word	0x08062760
  ldr  r0, =_sdata
 8000dbc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000dc0:	20000170 	.word	0x20000170
  ldr  r2, =_sbss
 8000dc4:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000dc8:	20012bb4 	.word	0x20012bb4

08000dcc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000dcc:	e7fe      	b.n	8000dcc <ADC_IRQHandler>

08000dce <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8000dce:	f000 bc93 	b.w	80016f8 <touchgfx_init>

08000dd2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8000dd2:	f000 bd01 	b.w	80017d8 <touchgfx_taskEntry>

08000dd6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000dd6:	4770      	bx	lr

08000dd8 <_ZN20STM32TouchControllerD0Ev>:
 8000dd8:	b510      	push	{r4, lr}
 8000dda:	2104      	movs	r1, #4
 8000ddc:	4604      	mov	r4, r0
 8000dde:	f019 fcd7 	bl	801a790 <_ZdlPvj>
 8000de2:	4620      	mov	r0, r4
 8000de4:	bd10      	pop	{r4, pc}
	...

08000de8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000de8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000dea:	4b0c      	ldr	r3, [pc, #48]	; (8000e1c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000dec:	4c0c      	ldr	r4, [pc, #48]	; (8000e20 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000dee:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000df0:	4b0c      	ldr	r3, [pc, #48]	; (8000e24 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000df2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000df4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000df6:	6863      	ldr	r3, [r4, #4]
 8000df8:	4798      	blx	r3
 8000dfa:	f640 0311 	movw	r3, #2065	; 0x811
 8000dfe:	4298      	cmp	r0, r3
 8000e00:	d10a      	bne.n	8000e18 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000e02:	4d09      	ldr	r5, [pc, #36]	; (8000e28 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000e04:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000e06:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000e08:	2082      	movs	r0, #130	; 0x82
 8000e0a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000e0c:	682b      	ldr	r3, [r5, #0]
 8000e0e:	2082      	movs	r0, #130	; 0x82
 8000e10:	68db      	ldr	r3, [r3, #12]
 8000e12:	4798      	blx	r3
        ret = TS_OK;
 8000e14:	2000      	movs	r0, #0
    }

    return ret;
}
 8000e16:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000e18:	2001      	movs	r0, #1
 8000e1a:	e7fc      	b.n	8000e16 <_Z11BSP_TS_Inittt+0x2e>
 8000e1c:	2000018c 	.word	0x2000018c
 8000e20:	2000005c 	.word	0x2000005c
 8000e24:	2000018e 	.word	0x2000018e
 8000e28:	20000190 	.word	0x20000190

08000e2c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000e2c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000e30:	20f0      	movs	r0, #240	; 0xf0
 8000e32:	f7ff bfd9 	b.w	8000de8 <_Z11BSP_TS_Inittt>
	...

08000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000e38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000e3a:	4d2c      	ldr	r5, [pc, #176]	; (8000eec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>)
 8000e3c:	682b      	ldr	r3, [r5, #0]
{
 8000e3e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000e40:	691b      	ldr	r3, [r3, #16]
 8000e42:	2082      	movs	r0, #130	; 0x82
 8000e44:	4798      	blx	r3
 8000e46:	b280      	uxth	r0, r0
 8000e48:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000e4a:	2800      	cmp	r0, #0
 8000e4c:	d04b      	beq.n	8000ee6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000e4e:	682b      	ldr	r3, [r5, #0]
 8000e50:	f10d 0206 	add.w	r2, sp, #6
 8000e54:	695b      	ldr	r3, [r3, #20]
 8000e56:	a901      	add	r1, sp, #4
 8000e58:	2082      	movs	r0, #130	; 0x82
 8000e5a:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000e5c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000e60:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168

        /* Y value second correction */
        yr = y / 11;
 8000e64:	b29b      	uxth	r3, r3
 8000e66:	220b      	movs	r2, #11
 8000e68:	fbb3 f3f2 	udiv	r3, r3, r2

        /* Return y position value */
        if (yr <= 0)
 8000e6c:	b133      	cbz	r3, 8000e7c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000e6e:	4a20      	ldr	r2, [pc, #128]	; (8000ef0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000e70:	8812      	ldrh	r2, [r2, #0]
 8000e72:	429a      	cmp	r2, r3
        {
            yr = TsYBoundary - 1;
 8000e74:	bf3c      	itt	cc
 8000e76:	f102 33ff 	addcc.w	r3, r2, #4294967295
 8000e7a:	b29b      	uxthcc	r3, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000e7c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000e80:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000e84:	428a      	cmp	r2, r1
        {
            x = 3870 - x;
 8000e86:	bf95      	itete	ls
 8000e88:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
        }
        else
        {
            x = 3800 - x;
 8000e8c:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
            x = 3870 - x;
 8000e90:	320e      	addls	r2, #14
            x = 3800 - x;
 8000e92:	3208      	addhi	r2, #8
 8000e94:	f8ad 2004 	strh.w	r2, [sp, #4]
        }

        /* X value second correction */
        xr = x / 15;
 8000e98:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8000e9c:	220f      	movs	r2, #15
 8000e9e:	fbb1 f1f2 	udiv	r1, r1, r2

        /* Return X position value */
        if (xr <= 0)
 8000ea2:	b131      	cbz	r1, 8000eb2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000ea4:	4a13      	ldr	r2, [pc, #76]	; (8000ef4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8000ea6:	8812      	ldrh	r2, [r2, #0]
 8000ea8:	428a      	cmp	r2, r1
        {
            xr = TsXBoundary - 1;
 8000eaa:	bf3c      	itt	cc
 8000eac:	f102 31ff 	addcc.w	r1, r2, #4294967295
 8000eb0:	b289      	uxthcc	r1, r1
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000eb2:	4e11      	ldr	r6, [pc, #68]	; (8000ef8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000eb4:	4d11      	ldr	r5, [pc, #68]	; (8000efc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000eb6:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000eb8:	682f      	ldr	r7, [r5, #0]
 8000eba:	b282      	uxth	r2, r0
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ebc:	4281      	cmp	r1, r0
 8000ebe:	bf88      	it	hi
 8000ec0:	1a8a      	subhi	r2, r1, r2
 8000ec2:	b2b8      	uxth	r0, r7
 8000ec4:	bf98      	it	ls
 8000ec6:	1a52      	subls	r2, r2, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ec8:	42bb      	cmp	r3, r7
 8000eca:	bf8c      	ite	hi
 8000ecc:	1a18      	subhi	r0, r3, r0
 8000ece:	1ac0      	subls	r0, r0, r3
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ed0:	b292      	uxth	r2, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ed2:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000ed4:	4402      	add	r2, r0
 8000ed6:	2a05      	cmp	r2, #5
        {
            _x = x;
 8000ed8:	bfc4      	itt	gt
 8000eda:	6031      	strgt	r1, [r6, #0]
            _y = y;
 8000edc:	602b      	strgt	r3, [r5, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8000ede:	6833      	ldr	r3, [r6, #0]
 8000ee0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000ee2:	682b      	ldr	r3, [r5, #0]
 8000ee4:	80a3      	strh	r3, [r4, #4]
    }
}
 8000ee6:	b003      	add	sp, #12
 8000ee8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eea:	bf00      	nop
 8000eec:	20000190 	.word	0x20000190
 8000ef0:	2000018e 	.word	0x2000018e
 8000ef4:	2000018c 	.word	0x2000018c
 8000ef8:	20000194 	.word	0x20000194
 8000efc:	20000198 	.word	0x20000198

08000f00 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000f00:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000f02:	4668      	mov	r0, sp
{
 8000f04:	460d      	mov	r5, r1
 8000f06:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000f08:	f7ff ff96 	bl	8000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000f0c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000f10:	b130      	cbz	r0, 8000f20 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000f12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000f16:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000f18:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000f1c:	6023      	str	r3, [r4, #0]
        return true;
 8000f1e:	2001      	movs	r0, #1
}
 8000f20:	b003      	add	sp, #12
 8000f22:	bd30      	pop	{r4, r5, pc}

08000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000f24:	4770      	bx	lr

08000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000f26:	4770      	bx	lr

08000f28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000f28:	4770      	bx	lr

08000f2a <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000f2a:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000f2c:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000f30:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000f34:	4770      	bx	lr

08000f36 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000f36:	2000      	movs	r0, #0
 8000f38:	4770      	bx	lr

08000f3a <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000f3a:	2000      	movs	r0, #0
 8000f3c:	4770      	bx	lr

08000f3e <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000f3e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000f40:	b10b      	cbz	r3, 8000f46 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000f42:	4608      	mov	r0, r1
 8000f44:	4718      	bx	r3
        }
    }
 8000f46:	4770      	bx	lr

08000f48 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000f48:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000f4c:	4770      	bx	lr

08000f4e <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000f4e:	6840      	ldr	r0, [r0, #4]
 8000f50:	6803      	ldr	r3, [r0, #0]
 8000f52:	699b      	ldr	r3, [r3, #24]
 8000f54:	4718      	bx	r3

08000f56 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000f56:	4770      	bx	lr

08000f58 <_ZN11TouchGFXHAL9taskEntryEv>:

    TouchGFXGeneratedHAL::initialize();
}

void TouchGFXHAL::taskEntry()
{
 8000f58:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000f5a:	6803      	ldr	r3, [r0, #0]
{
 8000f5c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000f5e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000f60:	4798      	blx	r3
    enableInterrupts();
 8000f62:	6823      	ldr	r3, [r4, #0]
 8000f64:	4620      	mov	r0, r4
 8000f66:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000f68:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000f6a:	f000 f957 	bl	800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	4620      	mov	r0, r4
 8000f72:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f74:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000f76:	2029      	movs	r0, #41	; 0x29
 8000f78:	f001 f8b2 	bl	80020e0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000f7c:	f000 f94e 	bl	800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000f80:	6823      	ldr	r3, [r4, #0]
 8000f82:	4620      	mov	r0, r4
 8000f84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f86:	4798      	blx	r3
 8000f88:	e7f8      	b.n	8000f7c <_ZN11TouchGFXHAL9taskEntryEv+0x24>

08000f8a <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000f8a:	b510      	push	{r4, lr}
 8000f8c:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000f8e:	f00a f847 	bl	800b020 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000f92:	6823      	ldr	r3, [r4, #0]
 8000f94:	4620      	mov	r0, r4
 8000f96:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    }
 8000f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000f9e:	4718      	bx	r3

08000fa0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000fa0:	f000 bcb6 	b.w	8001910 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000fa4 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000fa4:	f000 bcba 	b.w	800191c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000fa8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000fa8:	f000 bcc0 	b.w	800192c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000fac <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000fac:	f000 bc8c 	b.w	80018c8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000fb0 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000fb0:	f000 bcbe 	b.w	8001930 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000fb4 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000fb4:	f000 bcc6 	b.w	8001944 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000fb8 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000fb8:	f000 bc90 	b.w	80018dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000fbc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000fbc:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000fbe:	b931      	cbnz	r1, 8000fce <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 8000fc0:	4b0a      	ldr	r3, [pc, #40]	; (8000fec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000fc2:	4a0b      	ldr	r2, [pc, #44]	; (8000ff0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000fc4:	480b      	ldr	r0, [pc, #44]	; (8000ff4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000fc6:	f44f 7127 	mov.w	r1, #668	; 0x29c
 8000fca:	f019 fc0d 	bl	801a7e8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000fce:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000fd2:	3200      	adds	r2, #0
 8000fd4:	4908      	ldr	r1, [pc, #32]	; (8000ff8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000fd6:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000fd8:	bf18      	it	ne
 8000fda:	2201      	movne	r2, #1
 8000fdc:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000fde:	3300      	adds	r3, #0
 8000fe0:	4a06      	ldr	r2, [pc, #24]	; (8000ffc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 8000fe2:	bf18      	it	ne
 8000fe4:	2301      	movne	r3, #1
 8000fe6:	7013      	strb	r3, [r2, #0]
    }
 8000fe8:	bd08      	pop	{r3, pc}
 8000fea:	bf00      	nop
 8000fec:	0801b889 	.word	0x0801b889
 8000ff0:	0801ba14 	.word	0x0801ba14
 8000ff4:	0801b8c1 	.word	0x0801b8c1
 8000ff8:	200123ba 	.word	0x200123ba
 8000ffc:	200123bb 	.word	0x200123bb

08001000 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
    TOUCHGFX_DEPRECATED(
 8001000:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001004:	4699      	mov	r9, r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001006:	4b1c      	ldr	r3, [pc, #112]	; (8001078 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
    TOUCHGFX_DEPRECATED(
 8001008:	f89d 5020 	ldrb.w	r5, [sp, #32]
 800100c:	4688      	mov	r8, r1
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800100e:	6819      	ldr	r1, [r3, #0]
 8001010:	f891 3076 	ldrb.w	r3, [r1, #118]	; 0x76
    TOUCHGFX_DEPRECATED(
 8001014:	4607      	mov	r7, r0
 8001016:	4614      	mov	r4, r2
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001018:	b10b      	cbz	r3, 800101e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x1e>
 800101a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800101c:	b900      	cbnz	r0, 8001020 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x20>
            return instance->lcdRef;
 800101e:	6888      	ldr	r0, [r1, #8]
        uint16_t stride = lcd().framebufferStride();
 8001020:	6803      	ldr	r3, [r0, #0]
 8001022:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001024:	4798      	blx	r3
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 8001026:	4b15      	ldr	r3, [pc, #84]	; (800107c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x7c>)
 8001028:	881e      	ldrh	r6, [r3, #0]
 800102a:	4370      	muls	r0, r6
        if (useDoubleBuffering)
 800102c:	f1b9 0f00 	cmp.w	r9, #0
 8001030:	d016      	beq.n	8001060 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x60>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8001032:	eb08 0100 	add.w	r1, r8, r0
            double_buf = (void*)ptr;
 8001036:	460a      	mov	r2, r1
        if (useAnimationStorage)
 8001038:	b1ad      	cbz	r5, 8001066 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x66>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800103a:	180b      	adds	r3, r1, r0
 800103c:	3c01      	subs	r4, #1
 800103e:	b2a4      	uxth	r4, r4
 8001040:	2c1f      	cmp	r4, #31
 8001042:	d812      	bhi.n	800106a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
 8001044:	2101      	movs	r1, #1
 8001046:	fa01 f404 	lsl.w	r4, r1, r4
 800104a:	490d      	ldr	r1, [pc, #52]	; (8001080 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x80>)
 800104c:	4021      	ands	r1, r4
 800104e:	b161      	cbz	r1, 800106a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8001050:	6839      	ldr	r1, [r7, #0]
 8001052:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8001054:	4638      	mov	r0, r7
 8001056:	4641      	mov	r1, r8
 8001058:	46a4      	mov	ip, r4
    }
 800105a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 800105e:	4760      	bx	ip
        uint8_t* ptr = (uint8_t*)adr;
 8001060:	4641      	mov	r1, r8
        void* double_buf = 0;
 8001062:	464a      	mov	r2, r9
 8001064:	e7e8      	b.n	8001038 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x38>
        void* anim_store = 0;
 8001066:	462b      	mov	r3, r5
 8001068:	e7e8      	b.n	800103c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x3c>
            assert(0 && "Unsupported bit depth");
 800106a:	4b06      	ldr	r3, [pc, #24]	; (8001084 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x84>)
 800106c:	4a06      	ldr	r2, [pc, #24]	; (8001088 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x88>)
 800106e:	4807      	ldr	r0, [pc, #28]	; (800108c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x8c>)
 8001070:	f240 2189 	movw	r1, #649	; 0x289
 8001074:	f019 fbb8 	bl	801a7e8 <__assert_func>
 8001078:	200123bc 	.word	0x200123bc
 800107c:	200123b8 	.word	0x200123b8
 8001080:	8080808b 	.word	0x8080808b
 8001084:	0801b86c 	.word	0x0801b86c
 8001088:	0801b9c0 	.word	0x0801b9c0
 800108c:	0801b8c1 	.word	0x0801b8c1

08001090 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001090:	f009 ba57 	b.w	800a542 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001094 <_ZN11TouchGFXHALD0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	2178      	movs	r1, #120	; 0x78
 8001098:	4604      	mov	r4, r0
 800109a:	f019 fb79 	bl	801a790 <_ZdlPvj>
 800109e:	4620      	mov	r0, r4
 80010a0:	bd10      	pop	{r4, pc}

080010a2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80010a2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80010a6:	b11b      	cbz	r3, 80010b0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80010a8:	6840      	ldr	r0, [r0, #4]
 80010aa:	6803      	ldr	r3, [r0, #0]
 80010ac:	681b      	ldr	r3, [r3, #0]
 80010ae:	4718      	bx	r3
    }
 80010b0:	4618      	mov	r0, r3
 80010b2:	4770      	bx	lr

080010b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80010b4:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80010b6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80010ba:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80010be:	4b10      	ldr	r3, [pc, #64]	; (8001100 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80010c0:	428c      	cmp	r4, r1
 80010c2:	781a      	ldrb	r2, [r3, #0]
 80010c4:	d00d      	beq.n	80010e2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80010c6:	b95a      	cbnz	r2, 80010e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010c8:	4a0e      	ldr	r2, [pc, #56]	; (8001104 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80010ca:	490f      	ldr	r1, [pc, #60]	; (8001108 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010cc:	480f      	ldr	r0, [pc, #60]	; (800110c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010ce:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d0:	4d0f      	ldr	r5, [pc, #60]	; (8001110 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010d2:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d4:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80010d6:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d8:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80010da:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80010dc:	2201      	movs	r2, #1
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80010de:	701a      	strb	r2, [r3, #0]
        }
    }
 80010e0:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80010e2:	2a00      	cmp	r2, #0
 80010e4:	d0fc      	beq.n	80010e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80010e6:	4809      	ldr	r0, [pc, #36]	; (800110c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80010e8:	4a07      	ldr	r2, [pc, #28]	; (8001108 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80010ea:	8801      	ldrh	r1, [r0, #0]
 80010ec:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80010ee:	4a05      	ldr	r2, [pc, #20]	; (8001104 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80010f0:	4d07      	ldr	r5, [pc, #28]	; (8001110 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80010f2:	8814      	ldrh	r4, [r2, #0]
 80010f4:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80010f6:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80010f8:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80010fa:	2200      	movs	r2, #0
 80010fc:	e7ef      	b.n	80010de <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80010fe:	bf00      	nop
 8001100:	200123b4 	.word	0x200123b4
 8001104:	200123b0 	.word	0x200123b0
 8001108:	200123b6 	.word	0x200123b6
 800110c:	200123b2 	.word	0x200123b2
 8001110:	200123b8 	.word	0x200123b8

08001114 <_ZN11TouchGFXHAL10initializeEv>:
    TouchGFXGeneratedHAL::initialize();
 8001114:	f000 bc2a 	b.w	800196c <_ZN20TouchGFXGeneratedHAL10initializeEv>

08001118 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001118:	2101      	movs	r1, #1
{
 800111a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800111c:	2200      	movs	r2, #0
 800111e:	4608      	mov	r0, r1
 8001120:	f006 fbf6 	bl	8007910 <osSemaphoreNew>
 8001124:	4b06      	ldr	r3, [pc, #24]	; (8001140 <_ZN8touchgfx10OSWrappers10initializeEv+0x28>)
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 8001126:	f04f 31ff 	mov.w	r1, #4294967295
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800112a:	6018      	str	r0, [r3, #0]
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 800112c:	f006 fc46 	bl	80079bc <osSemaphoreAcquire>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001130:	2200      	movs	r2, #0
 8001132:	2104      	movs	r1, #4
 8001134:	2001      	movs	r0, #1
 8001136:	f006 fcb5 	bl	8007aa4 <osMessageQueueNew>
 800113a:	4b02      	ldr	r3, [pc, #8]	; (8001144 <_ZN8touchgfx10OSWrappers10initializeEv+0x2c>)
 800113c:	6018      	str	r0, [r3, #0]
}
 800113e:	bd08      	pop	{r3, pc}
 8001140:	200001a0 	.word	0x200001a0
 8001144:	2000019c 	.word	0x2000019c

08001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8001148:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800114a:	4b07      	ldr	r3, [pc, #28]	; (8001168 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x20>)
 800114c:	6818      	ldr	r0, [r3, #0]
 800114e:	b928      	cbnz	r0, 800115c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x14>
 8001150:	4b06      	ldr	r3, [pc, #24]	; (800116c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x24>)
 8001152:	4a07      	ldr	r2, [pc, #28]	; (8001170 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8001154:	4807      	ldr	r0, [pc, #28]	; (8001174 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2c>)
 8001156:	2131      	movs	r1, #49	; 0x31
 8001158:	f019 fb46 	bl	801a7e8 <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800115c:	f04f 31ff 	mov.w	r1, #4294967295
}
 8001160:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001164:	f006 bc2a 	b.w	80079bc <osSemaphoreAcquire>
 8001168:	200001a0 	.word	0x200001a0
 800116c:	0801ba62 	.word	0x0801ba62
 8001170:	0801bafe 	.word	0x0801bafe
 8001174:	0801ba73 	.word	0x0801ba73

08001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8001178:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x1c>)
 800117c:	6818      	ldr	r0, [r3, #0]
 800117e:	b928      	cbnz	r0, 800118c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>
 8001180:	4b05      	ldr	r3, [pc, #20]	; (8001198 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x20>)
 8001182:	4a06      	ldr	r2, [pc, #24]	; (800119c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x24>)
 8001184:	4806      	ldr	r0, [pc, #24]	; (80011a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x28>)
 8001186:	213a      	movs	r1, #58	; 0x3a
 8001188:	f019 fb2e 	bl	801a7e8 <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 800118c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 8001190:	f006 bc50 	b.w	8007a34 <osSemaphoreRelease>
 8001194:	200001a0 	.word	0x200001a0
 8001198:	0801ba62 	.word	0x0801ba62
 800119c:	0801bac1 	.word	0x0801bac1
 80011a0:	0801ba73 	.word	0x0801ba73

080011a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80011a4:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80011a6:	4b07      	ldr	r3, [pc, #28]	; (80011c4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x20>)
 80011a8:	6818      	ldr	r0, [r3, #0]
 80011aa:	b928      	cbnz	r0, 80011b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>
 80011ac:	4b06      	ldr	r3, [pc, #24]	; (80011c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x24>)
 80011ae:	4a07      	ldr	r2, [pc, #28]	; (80011cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x28>)
 80011b0:	4807      	ldr	r0, [pc, #28]	; (80011d0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x2c>)
 80011b2:	2147      	movs	r1, #71	; 0x47
 80011b4:	f019 fb18 	bl	801a7e8 <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011b8:	2100      	movs	r1, #0
}
 80011ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011be:	f006 bbfd 	b.w	80079bc <osSemaphoreAcquire>
 80011c2:	bf00      	nop
 80011c4:	200001a0 	.word	0x200001a0
 80011c8:	0801ba62 	.word	0x0801ba62
 80011cc:	0801bb3b 	.word	0x0801bb3b
 80011d0:	0801ba73 	.word	0x0801ba73

080011d4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80011d4:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80011d6:	4b06      	ldr	r3, [pc, #24]	; (80011f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x1c>)
 80011d8:	6818      	ldr	r0, [r3, #0]
 80011da:	b928      	cbnz	r0, 80011e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>
 80011dc:	4b05      	ldr	r3, [pc, #20]	; (80011f4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x20>)
 80011de:	4a06      	ldr	r2, [pc, #24]	; (80011f8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x24>)
 80011e0:	4806      	ldr	r0, [pc, #24]	; (80011fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x28>)
 80011e2:	2154      	movs	r1, #84	; 0x54
 80011e4:	f019 fb00 	bl	801a7e8 <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80011e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 80011ec:	f006 bc22 	b.w	8007a34 <osSemaphoreRelease>
 80011f0:	200001a0 	.word	0x200001a0
 80011f4:	0801ba62 	.word	0x0801ba62
 80011f8:	0801bb7b 	.word	0x0801bb7b
 80011fc:	0801ba73 	.word	0x0801ba73

08001200 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    if (vsync_queue)
 8001200:	4b04      	ldr	r3, [pc, #16]	; (8001214 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001202:	6818      	ldr	r0, [r3, #0]
 8001204:	b120      	cbz	r0, 8001210 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>
    {
        osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001206:	2300      	movs	r3, #0
 8001208:	461a      	mov	r2, r3
 800120a:	4903      	ldr	r1, [pc, #12]	; (8001218 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
 800120c:	f006 bc90 	b.w	8007b30 <osMessageQueuePut>
    }
}
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop
 8001214:	2000019c 	.word	0x2000019c
 8001218:	20000004 	.word	0x20000004

0800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 800121c:	b513      	push	{r0, r1, r4, lr}
    if (vsync_queue)
 800121e:	4c08      	ldr	r4, [pc, #32]	; (8001240 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001220:	6820      	ldr	r0, [r4, #0]
 8001222:	b158      	cbz	r0, 800123c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x20>
    {
        uint32_t dummyGet;
        // First make sure the queue is empty, by trying to remove an element with 0 timeout.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001224:	2300      	movs	r3, #0
 8001226:	461a      	mov	r2, r3
 8001228:	a901      	add	r1, sp, #4
 800122a:	f006 fcc3 	bl	8007bb4 <osMessageQueueGet>

        // Then, wait for next VSYNC to occur.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 800122e:	f04f 33ff 	mov.w	r3, #4294967295
 8001232:	2200      	movs	r2, #0
 8001234:	a901      	add	r1, sp, #4
 8001236:	6820      	ldr	r0, [r4, #0]
 8001238:	f006 fcbc 	bl	8007bb4 <osMessageQueueGet>
    }
}
 800123c:	b002      	add	sp, #8
 800123e:	bd10      	pop	{r4, pc}
 8001240:	2000019c 	.word	0x2000019c

08001244 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001244:	6803      	ldr	r3, [r0, #0]
 8001246:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001248:	4718      	bx	r3

0800124a <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 800124a:	2000      	movs	r0, #0
 800124c:	4770      	bx	lr

0800124e <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800124e:	6803      	ldr	r3, [r0, #0]
 8001250:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001252:	4718      	bx	r3

08001254 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001254:	f240 10ef 	movw	r0, #495	; 0x1ef
 8001258:	4770      	bx	lr
	...

0800125c <_ZN10STM32F4DMA10initializeEv>:
{
 800125c:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 800125e:	4c07      	ldr	r4, [pc, #28]	; (800127c <_ZN10STM32F4DMA10initializeEv+0x20>)
 8001260:	4b07      	ldr	r3, [pc, #28]	; (8001280 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8001262:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8001264:	4620      	mov	r0, r4
 8001266:	f003 fe2b 	bl	8004ec0 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800126a:	4b06      	ldr	r3, [pc, #24]	; (8001284 <_ZN10STM32F4DMA10initializeEv+0x28>)
 800126c:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800126e:	4b06      	ldr	r3, [pc, #24]	; (8001288 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8001270:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001272:	4b06      	ldr	r3, [pc, #24]	; (800128c <_ZN10STM32F4DMA10initializeEv+0x30>)
 8001274:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001278:	609a      	str	r2, [r3, #8]
}
 800127a:	bd10      	pop	{r4, pc}
 800127c:	20012a18 	.word	0x20012a18
 8001280:	4002b000 	.word	0x4002b000
 8001284:	080012ad 	.word	0x080012ad
 8001288:	08001291 	.word	0x08001291
 800128c:	e000e100 	.word	0xe000e100

08001290 <DMA2D_XferErrorCallback>:
    {
 8001290:	b508      	push	{r3, lr}
        assert(0);
 8001292:	4a03      	ldr	r2, [pc, #12]	; (80012a0 <DMA2D_XferErrorCallback+0x10>)
 8001294:	4b03      	ldr	r3, [pc, #12]	; (80012a4 <DMA2D_XferErrorCallback+0x14>)
 8001296:	4804      	ldr	r0, [pc, #16]	; (80012a8 <DMA2D_XferErrorCallback+0x18>)
 8001298:	2136      	movs	r1, #54	; 0x36
 800129a:	f019 faa5 	bl	801a7e8 <__assert_func>
 800129e:	bf00      	nop
 80012a0:	0801bc5c 	.word	0x0801bc5c
 80012a4:	0801c5a7 	.word	0x0801c5a7
 80012a8:	0801bbbf 	.word	0x0801bbbf

080012ac <DMA2D_XferCpltCallback>:
        touchgfx::HAL::getInstance()->signalDMAInterrupt();
 80012ac:	4b02      	ldr	r3, [pc, #8]	; (80012b8 <DMA2D_XferCpltCallback+0xc>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80012b2:	6803      	ldr	r3, [r0, #0]
 80012b4:	695b      	ldr	r3, [r3, #20]
 80012b6:	4718      	bx	r3
 80012b8:	200123bc 	.word	0x200123bc

080012bc <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 80012bc:	4b08      	ldr	r3, [pc, #32]	; (80012e0 <_ZN10STM32F4DMAD1Ev+0x24>)
 80012be:	b510      	push	{r4, lr}
 80012c0:	6003      	str	r3, [r0, #0]
 80012c2:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 80012c4:	4807      	ldr	r0, [pc, #28]	; (80012e4 <_ZN10STM32F4DMAD1Ev+0x28>)
 80012c6:	f003 fec3 	bl	8005050 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80012ca:	4b07      	ldr	r3, [pc, #28]	; (80012e8 <_ZN10STM32F4DMAD1Ev+0x2c>)
 80012cc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80012d0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80012d4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012d8:	f3bf 8f6f 	isb	sy
}
 80012dc:	4620      	mov	r0, r4
 80012de:	bd10      	pop	{r4, pc}
 80012e0:	0801bc14 	.word	0x0801bc14
 80012e4:	20012a18 	.word	0x20012a18
 80012e8:	e000e100 	.word	0xe000e100

080012ec <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 80012ec:	b510      	push	{r4, lr}
 80012ee:	4604      	mov	r4, r0
}
 80012f0:	f7ff ffe4 	bl	80012bc <_ZN10STM32F4DMAD1Ev>
 80012f4:	4620      	mov	r0, r4
 80012f6:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 80012fa:	f019 fa49 	bl	801a790 <_ZdlPvj>
 80012fe:	4620      	mov	r0, r4
 8001300:	bd10      	pop	{r4, pc}
	...

08001304 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001304:	4b04      	ldr	r3, [pc, #16]	; (8001318 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800130c:	b10a      	cbz	r2, 8001312 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800130e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001310:	b900      	cbnz	r0, 8001314 <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8001312:	6898      	ldr	r0, [r3, #8]
    }
 8001314:	4770      	bx	lr
 8001316:	bf00      	nop
 8001318:	200123bc 	.word	0x200123bc

0800131c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800131c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8001320:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001322:	2d20      	cmp	r5, #32
{
 8001324:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001326:	f000 8097 	beq.w	8001458 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800132a:	2d40      	cmp	r5, #64	; 0x40
 800132c:	f000 8094 	beq.w	8001458 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001330:	1f2a      	subs	r2, r5, #4
 8001332:	4256      	negs	r6, r2
 8001334:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8001336:	2d80      	cmp	r5, #128	; 0x80
 8001338:	f000 8090 	beq.w	800145c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 800133c:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8001340:	425d      	negs	r5, r3
 8001342:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8001344:	f7ff ffde 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8001348:	6803      	ldr	r3, [r0, #0]
 800134a:	69db      	ldr	r3, [r3, #28]
 800134c:	4798      	blx	r3

    switch (blitOp.operation)
 800134e:	6823      	ldr	r3, [r4, #0]
 8001350:	2b40      	cmp	r3, #64	; 0x40
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8001352:	4686      	mov	lr, r0
    switch (blitOp.operation)
 8001354:	f000 8099 	beq.w	800148a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
 8001358:	f200 8082 	bhi.w	8001460 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>
 800135c:	2b04      	cmp	r3, #4
 800135e:	f000 808d 	beq.w	800147c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
 8001362:	2b20      	cmp	r3, #32
 8001364:	f000 8091 	beq.w	800148a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001368:	f1be 0f10 	cmp.w	lr, #16
 800136c:	bf14      	ite	ne
 800136e:	f04f 0c01 	movne.w	ip, #1
 8001372:	f04f 0c02 	moveq.w	ip, #2
 8001376:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8001378:	4b4b      	ldr	r3, [pc, #300]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800137a:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800137e:	6819      	ldr	r1, [r3, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001380:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001382:	f8d1 9000 	ldr.w	r9, [r1]
    hdma2d.Init.Mode = dma2dTransferMode;
 8001386:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001388:	f1be 0f10 	cmp.w	lr, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800138c:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001390:	bf14      	ite	ne
 8001392:	2001      	movne	r0, #1
 8001394:	2002      	moveq	r0, #2
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001396:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800139a:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800139e:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 80013a0:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80013a2:	600a      	str	r2, [r1, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80013a4:	6b4a      	ldr	r2, [r1, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 80013a6:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80013aa:	f022 0207 	bic.w	r2, r2, #7
 80013ae:	4302      	orrs	r2, r0
 80013b0:	634a      	str	r2, [r1, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 80013b2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80013b4:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 80013b8:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 80013bc:	433a      	orrs	r2, r7
 80013be:	640a      	str	r2, [r1, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 80013c0:	8aa2      	ldrh	r2, [r4, #20]
 80013c2:	eba2 0208 	sub.w	r2, r2, r8
 80013c6:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 80013c8:	b906      	cbnz	r6, 80013cc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
 80013ca:	b395      	cbz	r5, 8001432 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
    {
        if (blitOp.alpha < 255)
 80013cc:	7f22      	ldrb	r2, [r4, #28]
 80013ce:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 80013d0:	bf15      	itete	ne
 80013d2:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013d4:	2200      	moveq	r2, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 80013d6:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013da:	631a      	streq	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 80013dc:	b31d      	cbz	r5, 8001426 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
 80013de:	7f22      	ldrb	r2, [r4, #28]
 80013e0:	69a1      	ldr	r1, [r4, #24]
        {
            if (bitDepth == 16)
 80013e2:	f1be 0f10 	cmp.w	lr, #16
 80013e6:	ea4f 6c02 	mov.w	ip, r2, lsl #24
 80013ea:	d151      	bne.n	8001490 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80013ec:	f04f 081f 	mov.w	r8, #31
 80013f0:	f3c1 22c4 	ubfx	r2, r1, #11, #5
 80013f4:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 80013f8:	fbb2 fef8 	udiv	lr, r2, r8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80013fc:	ea01 0208 	and.w	r2, r1, r8
 8001400:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8001404:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8001408:	ea42 020c 	orr.w	r2, r2, ip
 800140c:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8001410:	f3c1 1145 	ubfx	r1, r1, #5, #6
 8001414:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8001418:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 800141c:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8001420:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001424:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001426:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800142a:	2100      	movs	r1, #0
 800142c:	481e      	ldr	r0, [pc, #120]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 800142e:	f003 fecf 	bl	80051d0 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001432:	2101      	movs	r1, #1
 8001434:	481c      	ldr	r0, [pc, #112]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8001436:	f003 fecb 	bl	80051d0 <HAL_DMA2D_ConfigLayer>
 800143a:	8a23      	ldrh	r3, [r4, #16]
 800143c:	8a62      	ldrh	r2, [r4, #18]

    if (blendingImage || blendingText)
 800143e:	b906      	cbnz	r6, 8001442 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
 8001440:	b355      	cbz	r5, 8001498 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8001442:	e9cd 3200 	strd	r3, r2, [sp]
 8001446:	68e3      	ldr	r3, [r4, #12]
 8001448:	6861      	ldr	r1, [r4, #4]
 800144a:	4817      	ldr	r0, [pc, #92]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 800144c:	461a      	mov	r2, r3
 800144e:	f003 fd81 	bl	8004f54 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8001452:	b003      	add	sp, #12
 8001454:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001458:	2601      	movs	r6, #1
 800145a:	e76f      	b.n	800133c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 800145c:	2501      	movs	r5, #1
 800145e:	e771      	b.n	8001344 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8001460:	2b80      	cmp	r3, #128	; 0x80
 8001462:	d006      	beq.n	8001472 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
 8001464:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001468:	f47f af7e 	bne.w	8001368 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
        dma2dColorMode = CM_A8;
 800146c:	f04f 0c09 	mov.w	ip, #9
 8001470:	e001      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_A4;
 8001472:	f04f 0c0a 	mov.w	ip, #10
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8001476:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800147a:	e77d      	b.n	8001378 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800147c:	2810      	cmp	r0, #16
 800147e:	bf14      	ite	ne
 8001480:	f04f 0c01 	movne.w	ip, #1
 8001484:	f04f 0c02 	moveq.w	ip, #2
 8001488:	e7f5      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_ARGB8888;
 800148a:	f04f 0c00 	mov.w	ip, #0
 800148e:	e7f2      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8001490:	ea4c 0101 	orr.w	r1, ip, r1
 8001494:	6359      	str	r1, [r3, #52]	; 0x34
 8001496:	e7c6      	b.n	8001426 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
        HAL_DMA2D_Start_IT(&hdma2d,
 8001498:	9200      	str	r2, [sp, #0]
 800149a:	6861      	ldr	r1, [r4, #4]
 800149c:	68e2      	ldr	r2, [r4, #12]
 800149e:	4802      	ldr	r0, [pc, #8]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 80014a0:	f003 fd3a 	bl	8004f18 <HAL_DMA2D_Start_IT>
}
 80014a4:	e7d5      	b.n	8001452 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 80014a6:	bf00      	nop
 80014a8:	20012a18 	.word	0x20012a18

080014ac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 80014ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014ae:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 80014b0:	f7ff ff28 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 80014b4:	6803      	ldr	r3, [r0, #0]
 80014b6:	69db      	ldr	r3, [r3, #28]
 80014b8:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80014ba:	2810      	cmp	r0, #16
 80014bc:	69ab      	ldr	r3, [r5, #24]
 80014be:	7f29      	ldrb	r1, [r5, #28]
 80014c0:	d166      	bne.n	8001590 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80014c2:	f003 021f 	and.w	r2, r3, #31
 80014c6:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 80014ca:	201f      	movs	r0, #31
 80014cc:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014d0:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014d4:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014d8:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014dc:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014e0:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014e4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014e8:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 80014ec:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80014ee:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014f0:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014f4:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 80014f8:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 80014fa:	4827      	ldr	r0, [pc, #156]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 80014fc:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80014fe:	6802      	ldr	r2, [r0, #0]
    switch (blitOp.operation)
 8001500:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001502:	8a2b      	ldrh	r3, [r5, #16]
 8001504:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001508:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800150a:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 800150c:	bf0c      	ite	eq
 800150e:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8001512:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001516:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800151a:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800151c:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001520:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8001522:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001524:	f023 0307 	bic.w	r3, r3, #7
 8001528:	430b      	orrs	r3, r1
 800152a:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800152c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800152e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001532:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001536:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001538:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800153c:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800153e:	d11c      	bne.n	800157a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8001540:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8001542:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8001546:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001548:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800154c:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800154e:	2100      	movs	r1, #0
 8001550:	f003 fe3e 	bl	80051d0 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001554:	2101      	movs	r1, #1
 8001556:	4810      	ldr	r0, [pc, #64]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8001558:	f003 fe3a 	bl	80051d0 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800155c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8001560:	8a2b      	ldrh	r3, [r5, #16]
 8001562:	8a6a      	ldrh	r2, [r5, #18]
 8001564:	d10d      	bne.n	8001582 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8001566:	68e9      	ldr	r1, [r5, #12]
 8001568:	480b      	ldr	r0, [pc, #44]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 800156a:	e9cd 3200 	strd	r3, r2, [sp]
 800156e:	460b      	mov	r3, r1
 8001570:	460a      	mov	r2, r1
 8001572:	f003 fcef 	bl	8004f54 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8001576:	b003      	add	sp, #12
 8001578:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 800157a:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800157c:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800157e:	6283      	str	r3, [r0, #40]	; 0x28
 8001580:	e7e8      	b.n	8001554 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8001582:	9200      	str	r2, [sp, #0]
 8001584:	4621      	mov	r1, r4
 8001586:	68ea      	ldr	r2, [r5, #12]
 8001588:	4803      	ldr	r0, [pc, #12]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 800158a:	f003 fcc5 	bl	8004f18 <HAL_DMA2D_Start_IT>
}
 800158e:	e7f2      	b.n	8001576 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8001590:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001594:	2101      	movs	r1, #1
 8001596:	e7af      	b.n	80014f8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 8001598:	20012a18 	.word	0x20012a18

0800159c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800159c:	b570      	push	{r4, r5, r6, lr}
 800159e:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80015a0:	462c      	mov	r4, r5
 80015a2:	4b0a      	ldr	r3, [pc, #40]	; (80015cc <_ZN10STM32F4DMAC1Ev+0x30>)
 80015a4:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80015a6:	2600      	movs	r6, #0
 80015a8:	6068      	str	r0, [r5, #4]
 80015aa:	722e      	strb	r6, [r5, #8]
 80015ac:	726e      	strb	r6, [r5, #9]
 80015ae:	f844 3b20 	str.w	r3, [r4], #32
 80015b2:	2260      	movs	r2, #96	; 0x60
 80015b4:	4621      	mov	r1, r4
 80015b6:	f009 fe5f 	bl	800b278 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80015ba:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80015be:	61a6      	str	r6, [r4, #24]
 80015c0:	3420      	adds	r4, #32
 80015c2:	42a3      	cmp	r3, r4
 80015c4:	d1fb      	bne.n	80015be <_ZN10STM32F4DMAC1Ev+0x22>
{}
 80015c6:	4628      	mov	r0, r5
 80015c8:	bd70      	pop	{r4, r5, r6, pc}
 80015ca:	bf00      	nop
 80015cc:	0801bc14 	.word	0x0801bc14

080015d0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
     * @see touchgfx::AbstractPartition::capacity
     */
    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80015d0:	2001      	movs	r0, #1
 80015d2:	4770      	bx	lr

080015d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:
     * @see touchgfx::AbstractPartition::element_size
     */
    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80015d4:	2054      	movs	r0, #84	; 0x54
 80015d6:	4770      	bx	lr

080015d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80015d8:	2354      	movs	r3, #84	; 0x54
 80015da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015de:	3008      	adds	r0, #8
 80015e0:	4770      	bx	lr

080015e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80015e2:	2354      	movs	r3, #84	; 0x54
 80015e4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015e8:	3008      	adds	r0, #8
 80015ea:	4770      	bx	lr

080015ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80015ec:	2001      	movs	r0, #1
 80015ee:	4770      	bx	lr

080015f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80015f0:	f44f 60aa 	mov.w	r0, #1360	; 0x550
 80015f4:	4770      	bx	lr

080015f6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80015f6:	f44f 63aa 	mov.w	r3, #1360	; 0x550
 80015fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015fe:	3008      	adds	r0, #8
 8001600:	4770      	bx	lr

08001602 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001602:	f44f 63aa 	mov.w	r3, #1360	; 0x550
 8001606:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800160a:	3008      	adds	r0, #8
 800160c:	4770      	bx	lr

0800160e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800160e:	2001      	movs	r0, #1
 8001610:	4770      	bx	lr

08001612 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001612:	2010      	movs	r0, #16
 8001614:	4770      	bx	lr

08001616 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001616:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800161a:	3008      	adds	r0, #8
 800161c:	4770      	bx	lr

0800161e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800161e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001622:	3008      	adds	r0, #8
 8001624:	4770      	bx	lr

08001626 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
 8001626:	4608      	mov	r0, r1
 8001628:	f001 bcb8 	b.w	8002f9c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>

0800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800162c:	b510      	push	{r4, lr}
 800162e:	4b03      	ldr	r3, [pc, #12]	; (800163c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001630:	6003      	str	r3, [r0, #0]
 8001632:	4604      	mov	r4, r0
 8001634:	f008 fa84 	bl	8009b40 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001638:	4620      	mov	r0, r4
 800163a:	bd10      	pop	{r4, pc}
 800163c:	0801bd00 	.word	0x0801bd00

08001640 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001640:	b510      	push	{r4, lr}
 8001642:	4604      	mov	r4, r0
 8001644:	f7ff fff2 	bl	800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001648:	4620      	mov	r0, r4
 800164a:	215c      	movs	r1, #92	; 0x5c
 800164c:	f019 f8a0 	bl	801a790 <_ZdlPvj>
 8001650:	4620      	mov	r0, r4
 8001652:	bd10      	pop	{r4, pc}

08001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001654:	b510      	push	{r4, lr}
 8001656:	4b03      	ldr	r3, [pc, #12]	; (8001664 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001658:	6003      	str	r3, [r0, #0]
 800165a:	4604      	mov	r4, r0
 800165c:	f008 fa70 	bl	8009b40 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001660:	4620      	mov	r0, r4
 8001662:	bd10      	pop	{r4, pc}
 8001664:	0801bccc 	.word	0x0801bccc

08001668 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001668:	b510      	push	{r4, lr}
 800166a:	4604      	mov	r4, r0
 800166c:	f7ff fff2 	bl	8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001670:	4620      	mov	r0, r4
 8001672:	f44f 61ab 	mov.w	r1, #1368	; 0x558
 8001676:	f019 f88b 	bl	801a790 <_ZdlPvj>
 800167a:	4620      	mov	r0, r4
 800167c:	bd10      	pop	{r4, pc}
	...

08001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001680:	b510      	push	{r4, lr}
 8001682:	4b03      	ldr	r3, [pc, #12]	; (8001690 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001684:	6003      	str	r3, [r0, #0]
 8001686:	4604      	mov	r4, r0
 8001688:	f008 fa5a 	bl	8009b40 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800168c:	4620      	mov	r0, r4
 800168e:	bd10      	pop	{r4, pc}
 8001690:	0801bc98 	.word	0x0801bc98

08001694 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001694:	b510      	push	{r4, lr}
 8001696:	4604      	mov	r4, r0
 8001698:	f7ff fff2 	bl	8001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800169c:	4620      	mov	r0, r4
 800169e:	2118      	movs	r1, #24
 80016a0:	f019 f876 	bl	801a790 <_ZdlPvj>
 80016a4:	4620      	mov	r0, r4
 80016a6:	bd10      	pop	{r4, pc}

080016a8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80016a8:	b510      	push	{r4, lr}
 80016aa:	4b08      	ldr	r3, [pc, #32]	; (80016cc <_ZN12FrontendHeapD1Ev+0x24>)
 80016ac:	6003      	str	r3, [r0, #0]
 80016ae:	4604      	mov	r4, r0
 80016b0:	f200 5084 	addw	r0, r0, #1412	; 0x584
 80016b4:	f7ff ffba 	bl	800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80016b8:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80016bc:	f7ff ffca 	bl	8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016c0:	f104 0014 	add.w	r0, r4, #20
 80016c4:	f7ff ffdc 	bl	8001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI23sequenceScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016c8:	4620      	mov	r0, r4
 80016ca:	bd10      	pop	{r4, pc}
 80016cc:	0801bd34 	.word	0x0801bd34

080016d0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80016d0:	b508      	push	{r3, lr}
 80016d2:	4802      	ldr	r0, [pc, #8]	; (80016dc <__tcf_0+0xc>)
 80016d4:	f7ff ffe8 	bl	80016a8 <_ZN12FrontendHeapD1Ev>
 80016d8:	bd08      	pop	{r3, pc}
 80016da:	bf00      	nop
 80016dc:	200001a8 	.word	0x200001a8

080016e0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80016e0:	b510      	push	{r4, lr}
 80016e2:	4604      	mov	r4, r0
 80016e4:	f7ff ffe0 	bl	80016a8 <_ZN12FrontendHeapD1Ev>
 80016e8:	4620      	mov	r0, r4
 80016ea:	f240 713c 	movw	r1, #1852	; 0x73c
 80016ee:	f019 f84f 	bl	801a790 <_ZdlPvj>
 80016f2:	4620      	mov	r0, r4
 80016f4:	bd10      	pop	{r4, pc}
	...

080016f8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80016f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80016fc:	f001 f982 	bl	8002a04 <_ZN14BitmapDatabase11getInstanceEv>
 8001700:	4605      	mov	r5, r0
 8001702:	f001 f983 	bl	8002a0c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001706:	2400      	movs	r4, #0
 8001708:	4601      	mov	r1, r0
 800170a:	4623      	mov	r3, r4
 800170c:	4628      	mov	r0, r5
 800170e:	4622      	mov	r2, r4
 8001710:	9400      	str	r4, [sp, #0]
 8001712:	f00d fb87 	bl	800ee24 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001716:	4b25      	ldr	r3, [pc, #148]	; (80017ac <touchgfx_init+0xb4>)
 8001718:	4a25      	ldr	r2, [pc, #148]	; (80017b0 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 800171a:	4d26      	ldr	r5, [pc, #152]	; (80017b4 <touchgfx_init+0xbc>)
 800171c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800171e:	4620      	mov	r0, r4
 8001720:	f002 f88e 	bl	8003840 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001724:	4824      	ldr	r0, [pc, #144]	; (80017b8 <touchgfx_init+0xc0>)
 8001726:	f00d fac7 	bl	800ecb8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800172a:	782b      	ldrb	r3, [r5, #0]
 800172c:	f3bf 8f5b 	dmb	ish
 8001730:	07db      	lsls	r3, r3, #31
 8001732:	d435      	bmi.n	80017a0 <touchgfx_init+0xa8>
 8001734:	4628      	mov	r0, r5
 8001736:	f019 f82d 	bl	801a794 <__cxa_guard_acquire>
 800173a:	b388      	cbz	r0, 80017a0 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800173c:	4c1f      	ldr	r4, [pc, #124]	; (80017bc <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800173e:	4b20      	ldr	r3, [pc, #128]	; (80017c0 <touchgfx_init+0xc8>)
 8001740:	6023      	str	r3, [r4, #0]
 8001742:	f204 56e4 	addw	r6, r4, #1508	; 0x5e4
 8001746:	f104 0014 	add.w	r0, r4, #20
 800174a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800174e:	f204 5784 	addw	r7, r4, #1412	; 0x584
 8001752:	6060      	str	r0, [r4, #4]
 8001754:	f8c4 8008 	str.w	r8, [r4, #8]
 8001758:	60e7      	str	r7, [r4, #12]
 800175a:	6126      	str	r6, [r4, #16]
 800175c:	f008 f9f2 	bl	8009b44 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001760:	4b18      	ldr	r3, [pc, #96]	; (80017c4 <touchgfx_init+0xcc>)
 8001762:	6163      	str	r3, [r4, #20]
 8001764:	4640      	mov	r0, r8
 8001766:	f008 f9ed 	bl	8009b44 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800176a:	4b17      	ldr	r3, [pc, #92]	; (80017c8 <touchgfx_init+0xd0>)
 800176c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800176e:	4638      	mov	r0, r7
 8001770:	f008 f9e8 	bl	8009b44 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001774:	4b15      	ldr	r3, [pc, #84]	; (80017cc <touchgfx_init+0xd4>)
 8001776:	f8c4 3584 	str.w	r3, [r4, #1412]	; 0x584
 800177a:	f504 60bc 	add.w	r0, r4, #1504	; 0x5e0
 800177e:	f002 fe39 	bl	80043f4 <_ZN5ModelC1Ev>
 8001782:	4622      	mov	r2, r4
 8001784:	f504 61bc 	add.w	r1, r4, #1504	; 0x5e0
 8001788:	4630      	mov	r0, r6
 800178a:	f002 fe29 	bl	80043e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800178e:	4630      	mov	r0, r6
 8001790:	f001 fc04 	bl	8002f9c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001794:	4628      	mov	r0, r5
 8001796:	f019 f809 	bl	801a7ac <__cxa_guard_release>
 800179a:	480d      	ldr	r0, [pc, #52]	; (80017d0 <touchgfx_init+0xd8>)
 800179c:	f019 f842 	bl	801a824 <atexit>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 80017a0:	480c      	ldr	r0, [pc, #48]	; (80017d4 <touchgfx_init+0xdc>)
}
 80017a2:	b002      	add	sp, #8
 80017a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80017a8:	f7ff bcb4 	b.w	8001114 <_ZN11TouchGFXHAL10initializeEv>
 80017ac:	20012438 	.word	0x20012438
 80017b0:	20001580 	.word	0x20001580
 80017b4:	200001a4 	.word	0x200001a4
 80017b8:	20000008 	.word	0x20000008
 80017bc:	200001a8 	.word	0x200001a8
 80017c0:	0801bd34 	.word	0x0801bd34
 80017c4:	0801bc98 	.word	0x0801bc98
 80017c8:	0801bccc 	.word	0x0801bccc
 80017cc:	0801bd00 	.word	0x0801bd00
 80017d0:	080016d1 	.word	0x080016d1
 80017d4:	20001508 	.word	0x20001508

080017d8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80017d8:	4801      	ldr	r0, [pc, #4]	; (80017e0 <touchgfx_taskEntry+0x8>)
 80017da:	f7ff bbbd 	b.w	8000f58 <_ZN11TouchGFXHAL9taskEntryEv>
 80017de:	bf00      	nop
 80017e0:	20001508 	.word	0x20001508

080017e4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80017e4:	b570      	push	{r4, r5, r6, lr}
static STM32F4DMA dma;
 80017e6:	4e28      	ldr	r6, [pc, #160]	; (8001888 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
{
public:

    STM32TouchController() {}
 80017e8:	4c28      	ldr	r4, [pc, #160]	; (800188c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
static LCD16bpp display;
 80017ea:	4d29      	ldr	r5, [pc, #164]	; (8001890 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 80017ec:	4b29      	ldr	r3, [pc, #164]	; (8001894 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80017ee:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80017f0:	4630      	mov	r0, r6
 80017f2:	f7ff fed3 	bl	800159c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80017f6:	4628      	mov	r0, r5
 80017f8:	f010 fb0e 	bl	8011e18 <_ZN8touchgfx8LCD16bppC1Ev>
          useDMAAcceleration(true)
 80017fc:	4b26      	ldr	r3, [pc, #152]	; (8001898 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 80017fe:	4827      	ldr	r0, [pc, #156]	; (800189c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001800:	6658      	str	r0, [r3, #100]	; 0x64
        instance = this;
 8001802:	4827      	ldr	r0, [pc, #156]	; (80018a0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useDMAAcceleration(true)
 8001804:	60dc      	str	r4, [r3, #12]
 8001806:	2200      	movs	r2, #0
 8001808:	2101      	movs	r1, #1
 800180a:	e9c3 6501 	strd	r6, r5, [r3, #4]
 800180e:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8001812:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001816:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800181a:	851a      	strh	r2, [r3, #40]	; 0x28
 800181c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001820:	62da      	str	r2, [r3, #44]	; 0x2c
 8001822:	861a      	strh	r2, [r3, #48]	; 0x30
 8001824:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001828:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 800182c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001830:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        this->x = 0;
 8001834:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
        this->y = 0;
 8001838:	655a      	str	r2, [r3, #84]	; 0x54
 800183a:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800183e:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8001842:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 8001846:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800184a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800184e:	671a      	str	r2, [r3, #112]	; 0x70
 8001850:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001854:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8001858:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
 800185c:	f883 1077 	strb.w	r1, [r3, #119]	; 0x77
        instance = this;
 8001860:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 8001862:	4810      	ldr	r0, [pc, #64]	; (80018a4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        DISPLAY_HEIGHT = height;
 8001864:	4d10      	ldr	r5, [pc, #64]	; (80018a8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001866:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_WIDTH = width;
 800186a:	24f0      	movs	r4, #240	; 0xf0
 800186c:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 800186e:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8001872:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 8001874:	4d0d      	ldr	r5, [pc, #52]	; (80018ac <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8001876:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001878:	4a0d      	ldr	r2, [pc, #52]	; (80018b0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 800187a:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800187c:	4a0d      	ldr	r2, [pc, #52]	; (80018b4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 800187e:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001880:	4a0d      	ldr	r2, [pc, #52]	; (80018b8 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 8001882:	601a      	str	r2, [r3, #0]
}
 8001884:	bd70      	pop	{r4, r5, r6, pc}
 8001886:	bf00      	nop
 8001888:	200008e8 	.word	0x200008e8
 800188c:	200008e4 	.word	0x200008e4
 8001890:	20001584 	.word	0x20001584
 8001894:	0801b85c 	.word	0x0801b85c
 8001898:	20001508 	.word	0x20001508
 800189c:	01000001 	.word	0x01000001
 80018a0:	200123bc 	.word	0x200123bc
 80018a4:	200123b0 	.word	0x200123b0
 80018a8:	200123b2 	.word	0x200123b2
 80018ac:	200123b4 	.word	0x200123b4
 80018b0:	200123b6 	.word	0x200123b6
 80018b4:	200123b8 	.word	0x200123b8
 80018b8:	0801b910 	.word	0x0801b910

080018bc <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 80018bc:	4801      	ldr	r0, [pc, #4]	; (80018c4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80018be:	f7ff bcfd 	b.w	80012bc <_ZN10STM32F4DMAD1Ev>
 80018c2:	bf00      	nop
 80018c4:	200008e8 	.word	0x200008e8

080018c8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80018c8:	4b03      	ldr	r3, [pc, #12]	; (80018d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80018ca:	2290      	movs	r2, #144	; 0x90
 80018cc:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80018d0:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80018d4:	4770      	bx	lr
 80018d6:	bf00      	nop
 80018d8:	e000e100 	.word	0xe000e100

080018dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80018dc:	4a09      	ldr	r2, [pc, #36]	; (8001904 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80018de:	490a      	ldr	r1, [pc, #40]	; (8001908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80018e0:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80018e2:	480a      	ldr	r0, [pc, #40]	; (800190c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80018e4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80018e8:	3b01      	subs	r3, #1
 80018ea:	b29b      	uxth	r3, r3
 80018ec:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80018ee:	6911      	ldr	r1, [r2, #16]
 80018f0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80018f4:	3901      	subs	r1, #1
 80018f6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80018f8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80018fa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80018fc:	f043 0301 	orr.w	r3, r3, #1
 8001900:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001902:	4770      	bx	lr
 8001904:	40016800 	.word	0x40016800
 8001908:	200015fe 	.word	0x200015fe
 800190c:	200015fc 	.word	0x200015fc

08001910 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001910:	4b01      	ldr	r3, [pc, #4]	; (8001918 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001912:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 8001914:	4770      	bx	lr
 8001916:	bf00      	nop
 8001918:	40016884 	.word	0x40016884

0800191c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800191c:	4b02      	ldr	r3, [pc, #8]	; (8001928 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800191e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001920:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001922:	f843 2c60 	str.w	r2, [r3, #-96]
}
 8001926:	4770      	bx	lr
 8001928:	40016884 	.word	0x40016884

0800192c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800192c:	f008 be0f 	b.w	800a54e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001930 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001930:	4b03      	ldr	r3, [pc, #12]	; (8001940 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001932:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001936:	609a      	str	r2, [r3, #8]
 8001938:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800193c:	609a      	str	r2, [r3, #8]
}
 800193e:	4770      	bx	lr
 8001940:	e000e100 	.word	0xe000e100

08001944 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001944:	4b08      	ldr	r3, [pc, #32]	; (8001968 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001946:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800194a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800194e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001952:	f3bf 8f6f 	isb	sy
 8001956:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800195a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800195e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001962:	f3bf 8f6f 	isb	sy
}
 8001966:	4770      	bx	lr
 8001968:	e000e100 	.word	0xe000e100

0800196c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800196c:	b538      	push	{r3, r4, r5, lr}
 800196e:	4604      	mov	r4, r0
    HAL::initialize();
 8001970:	f009 f8ce 	bl	800ab10 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(touchgfx::Application::getInstance()));
 8001974:	6823      	ldr	r3, [r4, #0]
 8001976:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8001978:	f00b fa5c 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 800197c:	4601      	mov	r1, r0
 800197e:	4620      	mov	r0, r4
 8001980:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001982:	6823      	ldr	r3, [r4, #0]
 8001984:	4a05      	ldr	r2, [pc, #20]	; (800199c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001986:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 8001988:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800198c:	2300      	movs	r3, #0
 800198e:	4620      	mov	r0, r4
 8001990:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 8001992:	2300      	movs	r3, #0
 8001994:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8001998:	bd38      	pop	{r3, r4, r5, pc}
 800199a:	bf00      	nop
 800199c:	d0025800 	.word	0xd0025800

080019a0 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80019a0:	4b13      	ldr	r3, [pc, #76]	; (80019f0 <HAL_LTDC_LineEventCallback+0x50>)
 80019a2:	4a14      	ldr	r2, [pc, #80]	; (80019f4 <HAL_LTDC_LineEventCallback+0x54>)
 80019a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019a6:	8811      	ldrh	r1, [r2, #0]
 80019a8:	428b      	cmp	r3, r1
    {
 80019aa:	b510      	push	{r4, lr}
 80019ac:	4c12      	ldr	r4, [pc, #72]	; (80019f8 <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80019ae:	d113      	bne.n	80019d8 <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80019b0:	4b12      	ldr	r3, [pc, #72]	; (80019fc <HAL_LTDC_LineEventCallback+0x5c>)
 80019b2:	8819      	ldrh	r1, [r3, #0]
 80019b4:	f004 fb1c 	bl	8005ff0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80019b8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80019ba:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80019be:	3301      	adds	r3, #1
 80019c0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80019c4:	f7ff fc1c 	bl	8001200 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80019c8:	6820      	ldr	r0, [r4, #0]
 80019ca:	f009 fb29 	bl	800b020 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80019ce:	2000      	movs	r0, #0
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80019d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80019d4:	f7ff baa6 	b.w	8000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80019d8:	f004 fb0a 	bl	8005ff0 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80019dc:	2000      	movs	r0, #0
 80019de:	f7ff faa2 	bl	8000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80019e2:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80019e4:	6803      	ldr	r3, [r0, #0]
    }
 80019e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80019ea:	699b      	ldr	r3, [r3, #24]
 80019ec:	4718      	bx	r3
 80019ee:	bf00      	nop
 80019f0:	40016800 	.word	0x40016800
 80019f4:	200015fe 	.word	0x200015fe
 80019f8:	200123bc 	.word	0x200123bc
 80019fc:	200015fc 	.word	0x200015fc

08001a00 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a00:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a02:	4b06      	ldr	r3, [pc, #24]	; (8001a1c <SPI5_Write+0x1c>)
{
 8001a04:	a902      	add	r1, sp, #8
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a06:	681b      	ldr	r3, [r3, #0]
{
 8001a08:	f821 0d02 	strh.w	r0, [r1, #-2]!
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a0c:	2201      	movs	r2, #1
 8001a0e:	4804      	ldr	r0, [pc, #16]	; (8001a20 <SPI5_Write+0x20>)
 8001a10:	f004 ffe9 	bl	80069e6 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a14:	b003      	add	sp, #12
 8001a16:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a1a:	bf00      	nop
 8001a1c:	20000010 	.word	0x20000010
 8001a20:	2001272c 	.word	0x2001272c

08001a24 <SystemClock_Config>:
{
 8001a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a26:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a28:	2210      	movs	r2, #16
 8001a2a:	2100      	movs	r1, #0
 8001a2c:	a80a      	add	r0, sp, #40	; 0x28
 8001a2e:	f018 ff64 	bl	801a8fa <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a32:	2214      	movs	r2, #20
 8001a34:	2100      	movs	r1, #0
 8001a36:	a803      	add	r0, sp, #12
 8001a38:	f018 ff5f 	bl	801a8fa <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001a3c:	2100      	movs	r1, #0
 8001a3e:	2230      	movs	r2, #48	; 0x30
 8001a40:	a814      	add	r0, sp, #80	; 0x50
 8001a42:	f018 ff5a 	bl	801a8fa <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a46:	2400      	movs	r4, #0
 8001a48:	4b22      	ldr	r3, [pc, #136]	; (8001ad4 <SystemClock_Config+0xb0>)
 8001a4a:	9401      	str	r4, [sp, #4]
 8001a4c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a4e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001a52:	641a      	str	r2, [r3, #64]	; 0x40
 8001a54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a5a:	9301      	str	r3, [sp, #4]
 8001a5c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a5e:	4b1e      	ldr	r3, [pc, #120]	; (8001ad8 <SystemClock_Config+0xb4>)
 8001a60:	9402      	str	r4, [sp, #8]
 8001a62:	681a      	ldr	r2, [r3, #0]
 8001a64:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001a68:	601a      	str	r2, [r3, #0]
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001a70:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a72:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a74:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a76:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001a7a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001a7e:	2502      	movs	r5, #2
 8001a80:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001a84:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001a88:	2708      	movs	r7, #8
 8001a8a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a8e:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a90:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001a92:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001a96:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a98:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a9a:	f004 fac7 	bl	800602c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a9e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001aa0:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001aa4:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001aa8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001aac:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ab0:	a803      	add	r0, sp, #12
 8001ab2:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001ab4:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ab6:	f004 fc8d 	bl	80063d4 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001aba:	23c0      	movs	r3, #192	; 0xc0
 8001abc:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001abe:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001ac4:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001ac6:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac8:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001aca:	f004 fd4b 	bl	8006564 <HAL_RCCEx_PeriphCLKConfig>
}
 8001ace:	b021      	add	sp, #132	; 0x84
 8001ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ad2:	bf00      	nop
 8001ad4:	40023800 	.word	0x40023800
 8001ad8:	40007000 	.word	0x40007000

08001adc <main>:
{
 8001adc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001ae0:	b09f      	sub	sp, #124	; 0x7c
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ae2:	2400      	movs	r4, #0
 8001ae4:	4dc7      	ldr	r5, [pc, #796]	; (8001e04 <main+0x328>)
  hi2c3.Instance = I2C3;
 8001ae6:	4ec8      	ldr	r6, [pc, #800]	; (8001e08 <main+0x32c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ae8:	f8df b360 	ldr.w	fp, [pc, #864]	; 8001e4c <main+0x370>
  HAL_Init();
 8001aec:	f003 f820 	bl	8004b30 <HAL_Init>
  SystemClock_Config();
 8001af0:	f7ff ff98 	bl	8001a24 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001af4:	2214      	movs	r2, #20
 8001af6:	2100      	movs	r1, #0
 8001af8:	a811      	add	r0, sp, #68	; 0x44
 8001afa:	f018 fefe 	bl	801a8fa <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001afe:	9402      	str	r4, [sp, #8]
 8001b00:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b02:	48c2      	ldr	r0, [pc, #776]	; (8001e0c <main+0x330>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b04:	f043 0320 	orr.w	r3, r3, #32
 8001b08:	632b      	str	r3, [r5, #48]	; 0x30
 8001b0a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b0c:	f003 0320 	and.w	r3, r3, #32
 8001b10:	9302      	str	r3, [sp, #8]
 8001b12:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b14:	9403      	str	r4, [sp, #12]
 8001b16:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001b1c:	632b      	str	r3, [r5, #48]	; 0x30
 8001b1e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b20:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b24:	9303      	str	r3, [sp, #12]
 8001b26:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b28:	9404      	str	r4, [sp, #16]
 8001b2a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b2c:	f043 0304 	orr.w	r3, r3, #4
 8001b30:	632b      	str	r3, [r5, #48]	; 0x30
 8001b32:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b34:	f003 0304 	and.w	r3, r3, #4
 8001b38:	9304      	str	r3, [sp, #16]
 8001b3a:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b3c:	9405      	str	r4, [sp, #20]
 8001b3e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b40:	f043 0301 	orr.w	r3, r3, #1
 8001b44:	632b      	str	r3, [r5, #48]	; 0x30
 8001b46:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b48:	f003 0301 	and.w	r3, r3, #1
 8001b4c:	9305      	str	r3, [sp, #20]
 8001b4e:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b50:	9406      	str	r4, [sp, #24]
 8001b52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b54:	f043 0302 	orr.w	r3, r3, #2
 8001b58:	632b      	str	r3, [r5, #48]	; 0x30
 8001b5a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b5c:	f003 0302 	and.w	r3, r3, #2
 8001b60:	9306      	str	r3, [sp, #24]
 8001b62:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b64:	9407      	str	r4, [sp, #28]
 8001b66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001b6c:	632b      	str	r3, [r5, #48]	; 0x30
 8001b6e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b70:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001b74:	9307      	str	r3, [sp, #28]
 8001b76:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b78:	9408      	str	r4, [sp, #32]
 8001b7a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b7c:	f043 0310 	orr.w	r3, r3, #16
 8001b80:	632b      	str	r3, [r5, #48]	; 0x30
 8001b82:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b84:	f003 0310 	and.w	r3, r3, #16
 8001b88:	9308      	str	r3, [sp, #32]
 8001b8a:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b8c:	9409      	str	r4, [sp, #36]	; 0x24
 8001b8e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b90:	f043 0308 	orr.w	r3, r3, #8
 8001b94:	632b      	str	r3, [r5, #48]	; 0x30
 8001b96:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b98:	f003 0308 	and.w	r3, r3, #8
 8001b9c:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b9e:	4622      	mov	r2, r4
 8001ba0:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ba4:	f003 fc4a 	bl	800543c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001ba8:	4622      	mov	r2, r4
 8001baa:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001bae:	4898      	ldr	r0, [pc, #608]	; (8001e10 <main+0x334>)
 8001bb0:	f003 fc44 	bl	800543c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bb4:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bb6:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bba:	f04f 0904 	mov.w	r9, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bbe:	a911      	add	r1, sp, #68	; 0x44
 8001bc0:	4892      	ldr	r0, [pc, #584]	; (8001e0c <main+0x330>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bc2:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bc6:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bca:	9413      	str	r4, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bcc:	f003 fb4a 	bl	8005264 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bd0:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001bd2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bd6:	488e      	ldr	r0, [pc, #568]	; (8001e10 <main+0x334>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bd8:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bdc:	e9cd 4813 	strd	r4, r8, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001be0:	f003 fb40 	bl	8005264 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001be4:	488b      	ldr	r0, [pc, #556]	; (8001e14 <main+0x338>)
 8001be6:	4b8c      	ldr	r3, [pc, #560]	; (8001e18 <main+0x33c>)
 8001be8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001bea:	f003 f849 	bl	8004c80 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001bee:	4a8b      	ldr	r2, [pc, #556]	; (8001e1c <main+0x340>)
 8001bf0:	4b8b      	ldr	r3, [pc, #556]	; (8001e20 <main+0x344>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001bf2:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001bf4:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001bf8:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001bfa:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001bfe:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001c02:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c06:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c0a:	f003 fdf1 	bl	80057f0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001c0e:	2110      	movs	r1, #16
 8001c10:	4630      	mov	r0, r6
 8001c12:	f004 f835 	bl	8005c80 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c16:	4621      	mov	r1, r4
 8001c18:	4630      	mov	r0, r6
 8001c1a:	f004 f850 	bl	8005cbe <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001c1e:	4881      	ldr	r0, [pc, #516]	; (8001e24 <main+0x348>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c20:	4981      	ldr	r1, [pc, #516]	; (8001e28 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001c22:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c24:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001c28:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001c2c:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001c30:	2318      	movs	r3, #24
 8001c32:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001c36:	230a      	movs	r3, #10
 8001c38:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001c3a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001c3e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001c42:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001c46:	f004 fe91 	bl	800696c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001c4a:	4a78      	ldr	r2, [pc, #480]	; (8001e2c <main+0x350>)
  SdramTiming.LoadToActiveDelay = 2;
 8001c4c:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001c50:	f04f 0a10 	mov.w	sl, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001c54:	e9cb 2700 	strd	r2, r7, [fp]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001c58:	2240      	movs	r2, #64	; 0x40
 8001c5a:	e9cb a204 	strd	sl, r2, [fp, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001c5e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001c62:	e9cb 2406 	strd	r2, r4, [fp, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001c66:	f44f 6200 	mov.w	r2, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001c6a:	e9cb 2408 	strd	r2, r4, [fp, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c6e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001c72:	2303      	movs	r3, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c74:	f8cb 2028 	str.w	r2, [fp, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c78:	a911      	add	r1, sp, #68	; 0x44
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001c7a:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c7c:	4658      	mov	r0, fp
  SdramTiming.RPDelay = 2;
 8001c7e:	e9cd 3815 	strd	r3, r8, [sp, #84]	; 0x54
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c82:	2608      	movs	r6, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001c84:	e9cb 4902 	strd	r4, r9, [fp, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001c88:	e9cd 2912 	strd	r2, r9, [sp, #72]	; 0x48
  SdramTiming.RowCycleDelay = 7;
 8001c8c:	9214      	str	r2, [sp, #80]	; 0x50
  SdramTiming.RCDDelay = 2;
 8001c8e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c92:	f004 fd91 	bl	80067b8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001c96:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c9a:	a90d      	add	r1, sp, #52	; 0x34
 8001c9c:	4658      	mov	r0, fp
  Command->AutoRefreshNumber       = 1;
 8001c9e:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001ca2:	970d      	str	r7, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001ca4:	940a      	str	r4, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 8001ca6:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ca8:	f004 fda6 	bl	80067f8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001cac:	4638      	mov	r0, r7
 8001cae:	f002 ff6b 	bl	8004b88 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001cb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cb6:	a90d      	add	r1, sp, #52	; 0x34
 8001cb8:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cba:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001cbe:	e9cd 740f 	strd	r7, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001cc2:	f004 fd99 	bl	80067f8 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001cc6:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ccc:	a90d      	add	r1, sp, #52	; 0x34
 8001cce:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cd0:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001cd4:	e9cd 940f 	strd	r9, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cd8:	f004 fd8e 	bl	80067f8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001cdc:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001ce0:	920a      	str	r2, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 8001ce2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001ce4:	9210      	str	r2, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ce6:	a90d      	add	r1, sp, #52	; 0x34
 8001ce8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cec:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cee:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  Command->AutoRefreshNumber       = 1;
 8001cf2:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cf4:	f004 fd80 	bl	80067f8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001cf8:	f240 516a 	movw	r1, #1386	; 0x56a
 8001cfc:	4658      	mov	r0, fp
 8001cfe:	f004 fd92 	bl	8006826 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001d02:	2234      	movs	r2, #52	; 0x34
 8001d04:	4621      	mov	r1, r4
 8001d06:	a811      	add	r0, sp, #68	; 0x44
 8001d08:	f018 fdf7 	bl	801a8fa <memset>
  hltdc.Instance = LTDC;
 8001d0c:	4e48      	ldr	r6, [pc, #288]	; (8001e30 <main+0x354>)
 8001d0e:	4b49      	ldr	r3, [pc, #292]	; (8001e34 <main+0x358>)
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001d10:	6134      	str	r4, [r6, #16]
  hltdc.Instance = LTDC;
 8001d12:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001d16:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedHBP = 29;
 8001d18:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.HorizontalSync = 9;
 8001d1c:	e9c6 3705 	strd	r3, r7, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001d20:	2303      	movs	r3, #3
 8001d22:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveW = 269;
 8001d26:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001d2a:	f240 1343 	movw	r3, #323	; 0x143
 8001d2e:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalWidth = 279;
 8001d32:	f240 1b17 	movw	fp, #279	; 0x117
 8001d36:	f240 1347 	movw	r3, #327	; 0x147
 8001d3a:	e9c6 b30b 	strd	fp, r3, [r6, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001d3e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.TotalHeigh = 327;
 8001d42:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001d44:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001d48:	4630      	mov	r0, r6
 8001d4a:	f004 f85d 	bl	8005e08 <HAL_LTDC_Init>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001d4e:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
 8001d50:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha = 255;
 8001d52:	e9cd 1416 	strd	r1, r4, [sp, #88]	; 0x58
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001d56:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8001d5a:	2105      	movs	r1, #5
  pLayerCfg.WindowY0 = 0;
 8001d5c:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001d60:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  pLayerCfg.WindowX1 = 240;
 8001d64:	e9cd 2412 	strd	r2, r4, [sp, #72]	; 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d68:	a911      	add	r1, sp, #68	; 0x44
  pLayerCfg.FBStartAdress = 0;
 8001d6a:	e9cd 421a 	strd	r4, r2, [sp, #104]	; 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d6e:	4630      	mov	r0, r6
 8001d70:	4622      	mov	r2, r4
  pLayerCfg.WindowY1 = 320;
 8001d72:	e9cd 3814 	strd	r3, r8, [sp, #80]	; 0x50
  LcdDrv = &ili9341_drv;
 8001d76:	4e30      	ldr	r6, [pc, #192]	; (8001e38 <main+0x35c>)
  pLayerCfg.ImageWidth = 240;
 8001d78:	931c      	str	r3, [sp, #112]	; 0x70
  pLayerCfg.WindowX0 = 0;
 8001d7a:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.ImageHeight = 320;
 8001d7c:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
  pLayerCfg.Backcolor.Green = 0;
 8001d80:	f88d 4076 	strb.w	r4, [sp, #118]	; 0x76
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d84:	f004 f90b 	bl	8005f9e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001d88:	4b2c      	ldr	r3, [pc, #176]	; (8001e3c <main+0x360>)
 8001d8a:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001d90:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 8001d92:	4e2b      	ldr	r6, [pc, #172]	; (8001e40 <main+0x364>)
  LcdDrv->DisplayOff();
 8001d94:	68db      	ldr	r3, [r3, #12]
 8001d96:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001d98:	4b2a      	ldr	r3, [pc, #168]	; (8001e44 <main+0x368>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001d9a:	e9c6 480a 	strd	r4, r8, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001d9e:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001da2:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001da4:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001da8:	e9c6 8402 	strd	r8, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001dac:	f003 f888 	bl	8004ec0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001db0:	4639      	mov	r1, r7
 8001db2:	4630      	mov	r0, r6
 8001db4:	f003 fa0c 	bl	80051d0 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001db8:	f7ff f809 	bl	8000dce <MX_TouchGFX_Init>
  */
static void MX_DMA_Init(void)
{

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dbc:	9401      	str	r4, [sp, #4]
 8001dbe:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dc0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001dc4:	632b      	str	r3, [r5, #48]	; 0x30
 8001dc6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  htim2.Instance = TIM2;
 8001dc8:	4d1f      	ldr	r5, [pc, #124]	; (8001e48 <main+0x36c>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dca:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001dce:	9301      	str	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dd0:	4652      	mov	r2, sl
 8001dd2:	4621      	mov	r1, r4
 8001dd4:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dd6:	9b01      	ldr	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dd8:	f018 fd8f 	bl	801a8fa <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ddc:	221c      	movs	r2, #28
 8001dde:	4621      	mov	r1, r4
 8001de0:	a811      	add	r0, sp, #68	; 0x44
  htim2.Init.Prescaler = 167;
 8001de2:	f04f 0ba7 	mov.w	fp, #167	; 0xa7
  htim2.Init.Period = 9999;
 8001de6:	f242 780f 	movw	r8, #9999	; 0x270f
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001dea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001dee:	f018 fd84 	bl	801a8fa <memset>
  htim2.Init.Prescaler = 167;
 8001df2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001df6:	4628      	mov	r0, r5
  htim2.Init.Prescaler = 167;
 8001df8:	e9c5 3b00 	strd	r3, fp, [r5]
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001dfc:	f44f 5780 	mov.w	r7, #4096	; 0x1000
 8001e00:	e026      	b.n	8001e50 <main+0x374>
 8001e02:	bf00      	nop
 8001e04:	40023800 	.word	0x40023800
 8001e08:	200126d8 	.word	0x200126d8
 8001e0c:	40020800 	.word	0x40020800
 8001e10:	40020c00 	.word	0x40020c00
 8001e14:	200127c4 	.word	0x200127c4
 8001e18:	40023000 	.word	0x40023000
 8001e1c:	40005c00 	.word	0x40005c00
 8001e20:	000186a0 	.word	0x000186a0
 8001e24:	2001272c 	.word	0x2001272c
 8001e28:	40015000 	.word	0x40015000
 8001e2c:	a0000140 	.word	0xa0000140
 8001e30:	200128ac 	.word	0x200128ac
 8001e34:	40016800 	.word	0x40016800
 8001e38:	20001600 	.word	0x20001600
 8001e3c:	20000024 	.word	0x20000024
 8001e40:	20012a18 	.word	0x20012a18
 8001e44:	4002b000 	.word	0x4002b000
 8001e48:	20012a58 	.word	0x20012a58
 8001e4c:	20012af8 	.word	0x20012af8
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e50:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e52:	e9c5 8403 	strd	r8, r4, [r5, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e56:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001e58:	f005 f9e6 	bl	8007228 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e5c:	a90d      	add	r1, sp, #52	; 0x34
 8001e5e:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001e60:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e62:	f005 fab7 	bl	80073d4 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001e66:	4628      	mov	r0, r5
 8001e68:	f005 f9f8 	bl	800725c <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e6c:	a90b      	add	r1, sp, #44	; 0x2c
 8001e6e:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001e70:	2660      	movs	r6, #96	; 0x60
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e72:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e76:	f005 fbd9 	bl	800762c <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001e7a:	220c      	movs	r2, #12
 8001e7c:	a911      	add	r1, sp, #68	; 0x44
 8001e7e:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001e80:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001e84:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001e86:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001e88:	f005 fa38 	bl	80072fc <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim2);
 8001e8c:	4628      	mov	r0, r5
 8001e8e:	f000 fc87 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e92:	4652      	mov	r2, sl
 8001e94:	4621      	mov	r1, r4
 8001e96:	a80d      	add	r0, sp, #52	; 0x34
  htim3.Instance = TIM3;
 8001e98:	4d4d      	ldr	r5, [pc, #308]	; (8001fd0 <main+0x4f4>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e9a:	f018 fd2e 	bl	801a8fa <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001e9e:	221c      	movs	r2, #28
 8001ea0:	4621      	mov	r1, r4
 8001ea2:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ea4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ea8:	f018 fd27 	bl	801a8fa <memset>
  htim3.Instance = TIM3;
 8001eac:	4b49      	ldr	r3, [pc, #292]	; (8001fd4 <main+0x4f8>)
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001eae:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001eb0:	4628      	mov	r0, r5
  htim3.Init.Prescaler = 167;
 8001eb2:	e9c5 3b00 	strd	r3, fp, [r5]
  htim3.Init.Period = 9999;
 8001eb6:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001eba:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001ebc:	f005 f9b4 	bl	8007228 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001ec0:	a90d      	add	r1, sp, #52	; 0x34
 8001ec2:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001ec4:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001ec6:	f005 fa85 	bl	80073d4 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001eca:	4628      	mov	r0, r5
 8001ecc:	f005 f9c6 	bl	800725c <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ed0:	a90b      	add	r1, sp, #44	; 0x2c
 8001ed2:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ed4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ed8:	f005 fba8 	bl	800762c <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001edc:	464a      	mov	r2, r9
 8001ede:	a911      	add	r1, sp, #68	; 0x44
 8001ee0:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001ee2:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001ee6:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001ee8:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001eea:	f005 fa07 	bl	80072fc <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 8001eee:	4628      	mov	r0, r5
 8001ef0:	f000 fc56 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ef4:	4652      	mov	r2, sl
 8001ef6:	4621      	mov	r1, r4
 8001ef8:	a80d      	add	r0, sp, #52	; 0x34
  htim4.Instance = TIM4;
 8001efa:	4d37      	ldr	r5, [pc, #220]	; (8001fd8 <main+0x4fc>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001efc:	f018 fcfd 	bl	801a8fa <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f00:	221c      	movs	r2, #28
 8001f02:	4621      	mov	r1, r4
 8001f04:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f0a:	f018 fcf6 	bl	801a8fa <memset>
  htim4.Instance = TIM4;
 8001f0e:	4b33      	ldr	r3, [pc, #204]	; (8001fdc <main+0x500>)
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f10:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001f12:	4628      	mov	r0, r5
  htim4.Init.Prescaler = 167;
 8001f14:	e9c5 3b00 	strd	r3, fp, [r5]
  htim4.Init.Period = 9999;
 8001f18:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f1c:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001f1e:	f005 f983 	bl	8007228 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001f22:	a90d      	add	r1, sp, #52	; 0x34
 8001f24:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f26:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001f28:	f005 fa54 	bl	80073d4 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001f2c:	4628      	mov	r0, r5
 8001f2e:	f005 f995 	bl	800725c <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001f32:	a90b      	add	r1, sp, #44	; 0x2c
 8001f34:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f36:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001f3a:	f005 fb77 	bl	800762c <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f3e:	4622      	mov	r2, r4
 8001f40:	a911      	add	r1, sp, #68	; 0x44
 8001f42:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001f44:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001f48:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001f4a:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f4c:	f005 f9d6 	bl	80072fc <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim4);
 8001f50:	4628      	mov	r0, r5
 8001f52:	f000 fc25 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f56:	4652      	mov	r2, sl
 8001f58:	4621      	mov	r1, r4
 8001f5a:	a80d      	add	r0, sp, #52	; 0x34
  htim5.Instance = TIM5;
 8001f5c:	4d20      	ldr	r5, [pc, #128]	; (8001fe0 <main+0x504>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f5e:	f018 fccc 	bl	801a8fa <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f62:	221c      	movs	r2, #28
 8001f64:	4621      	mov	r1, r4
 8001f66:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f68:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f6c:	f018 fcc5 	bl	801a8fa <memset>
  htim5.Instance = TIM5;
 8001f70:	4b1c      	ldr	r3, [pc, #112]	; (8001fe4 <main+0x508>)
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f72:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001f74:	4628      	mov	r0, r5
  htim5.Init.Prescaler = 167;
 8001f76:	e9c5 3b00 	strd	r3, fp, [r5]
  htim5.Init.Period = 9999;
 8001f7a:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f7e:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001f80:	f005 f952 	bl	8007228 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001f84:	a90d      	add	r1, sp, #52	; 0x34
 8001f86:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f88:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001f8a:	f005 fa23 	bl	80073d4 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8001f8e:	4628      	mov	r0, r5
 8001f90:	f005 f964 	bl	800725c <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001f94:	a90b      	add	r1, sp, #44	; 0x2c
 8001f96:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f98:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001f9c:	f005 fb46 	bl	800762c <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fa0:	4622      	mov	r2, r4
 8001fa2:	a911      	add	r1, sp, #68	; 0x44
 8001fa4:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001fa6:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001faa:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001fac:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fae:	f005 f9a5 	bl	80072fc <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim5);
 8001fb2:	4628      	mov	r0, r5
 8001fb4:	f000 fbf4 	bl	80027a0 <HAL_TIM_MspPostInit>
  osKernelInitialize();
 8001fb8:	f005 fc1a 	bl	80077f0 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001fbc:	4a0a      	ldr	r2, [pc, #40]	; (8001fe8 <main+0x50c>)
 8001fbe:	480b      	ldr	r0, [pc, #44]	; (8001fec <main+0x510>)
 8001fc0:	4621      	mov	r1, r4
 8001fc2:	f005 fc4f 	bl	8007864 <osThreadNew>
 8001fc6:	4b0a      	ldr	r3, [pc, #40]	; (8001ff0 <main+0x514>)
 8001fc8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001fca:	f005 fc2b 	bl	8007824 <osKernelStart>
 8001fce:	e7fe      	b.n	8001fce <main+0x4f2>
 8001fd0:	2001286c 	.word	0x2001286c
 8001fd4:	40000400 	.word	0x40000400
 8001fd8:	20012784 	.word	0x20012784
 8001fdc:	40000800 	.word	0x40000800
 8001fe0:	2001282c 	.word	0x2001282c
 8001fe4:	40000c00 	.word	0x40000c00
 8001fe8:	0801bd40 	.word	0x0801bd40
 8001fec:	08000dd3 	.word	0x08000dd3
 8001ff0:	20012a14 	.word	0x20012a14

08001ff4 <IOE_Init>:
 8001ff4:	4770      	bx	lr

08001ff6 <IOE_ITConfig>:
 8001ff6:	4770      	bx	lr

08001ff8 <IOE_Write>:
{
 8001ff8:	b510      	push	{r4, lr}
 8001ffa:	b086      	sub	sp, #24
 8001ffc:	ac06      	add	r4, sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001ffe:	4b07      	ldr	r3, [pc, #28]	; (800201c <IOE_Write+0x24>)
 8002000:	f804 2d01 	strb.w	r2, [r4, #-1]!
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	9302      	str	r3, [sp, #8]
 8002008:	2301      	movs	r3, #1
 800200a:	460a      	mov	r2, r1
 800200c:	e9cd 4300 	strd	r4, r3, [sp]
 8002010:	4601      	mov	r1, r0
 8002012:	4803      	ldr	r0, [pc, #12]	; (8002020 <IOE_Write+0x28>)
 8002014:	f003 fc98 	bl	8005948 <HAL_I2C_Mem_Write>
}
 8002018:	b006      	add	sp, #24
 800201a:	bd10      	pop	{r4, pc}
 800201c:	2000000c 	.word	0x2000000c
 8002020:	200126d8 	.word	0x200126d8

08002024 <IOE_Read>:
{
 8002024:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8002026:	aa06      	add	r2, sp, #24
 8002028:	2300      	movs	r3, #0
 800202a:	f802 3d01 	strb.w	r3, [r2, #-1]!
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800202e:	4b08      	ldr	r3, [pc, #32]	; (8002050 <IOE_Read+0x2c>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	9302      	str	r3, [sp, #8]
 8002034:	2301      	movs	r3, #1
 8002036:	e9cd 2300 	strd	r2, r3, [sp]
 800203a:	460a      	mov	r2, r1
 800203c:	4601      	mov	r1, r0
 800203e:	4805      	ldr	r0, [pc, #20]	; (8002054 <IOE_Read+0x30>)
 8002040:	f003 fd12 	bl	8005a68 <HAL_I2C_Mem_Read>
}
 8002044:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002048:	b007      	add	sp, #28
 800204a:	f85d fb04 	ldr.w	pc, [sp], #4
 800204e:	bf00      	nop
 8002050:	2000000c 	.word	0x2000000c
 8002054:	200126d8 	.word	0x200126d8

08002058 <IOE_ReadMultiple>:
{
 8002058:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800205a:	4c08      	ldr	r4, [pc, #32]	; (800207c <IOE_ReadMultiple+0x24>)
 800205c:	6824      	ldr	r4, [r4, #0]
 800205e:	9200      	str	r2, [sp, #0]
 8002060:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002064:	460a      	mov	r2, r1
 8002066:	2301      	movs	r3, #1
 8002068:	4601      	mov	r1, r0
 800206a:	4805      	ldr	r0, [pc, #20]	; (8002080 <IOE_ReadMultiple+0x28>)
 800206c:	f003 fcfc 	bl	8005a68 <HAL_I2C_Mem_Read>
}
 8002070:	3000      	adds	r0, #0
 8002072:	bf18      	it	ne
 8002074:	2001      	movne	r0, #1
 8002076:	b004      	add	sp, #16
 8002078:	bd10      	pop	{r4, pc}
 800207a:	bf00      	nop
 800207c:	2000000c 	.word	0x2000000c
 8002080:	200126d8 	.word	0x200126d8

08002084 <IOE_Delay>:
 8002084:	f002 bd80 	b.w	8004b88 <HAL_Delay>

08002088 <LCD_IO_Init>:
{
 8002088:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800208a:	4c06      	ldr	r4, [pc, #24]	; (80020a4 <LCD_IO_Init+0x1c>)
 800208c:	2200      	movs	r2, #0
 800208e:	4620      	mov	r0, r4
 8002090:	2104      	movs	r1, #4
 8002092:	f003 f9d3 	bl	800543c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002096:	4620      	mov	r0, r4
 8002098:	2201      	movs	r2, #1
 800209a:	2104      	movs	r1, #4
}
 800209c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020a0:	f003 b9cc 	b.w	800543c <HAL_GPIO_WritePin>
 80020a4:	40020800 	.word	0x40020800

080020a8 <LCD_IO_WriteData>:
{
 80020a8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020aa:	4c0b      	ldr	r4, [pc, #44]	; (80020d8 <LCD_IO_WriteData+0x30>)
{
 80020ac:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020ae:	2201      	movs	r2, #1
 80020b0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020b4:	4809      	ldr	r0, [pc, #36]	; (80020dc <LCD_IO_WriteData+0x34>)
 80020b6:	f003 f9c1 	bl	800543c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020ba:	2200      	movs	r2, #0
 80020bc:	2104      	movs	r1, #4
 80020be:	4620      	mov	r0, r4
 80020c0:	f003 f9bc 	bl	800543c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80020c4:	4628      	mov	r0, r5
 80020c6:	f7ff fc9b 	bl	8001a00 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020ca:	4620      	mov	r0, r4
 80020cc:	2201      	movs	r2, #1
 80020ce:	2104      	movs	r1, #4
}
 80020d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020d4:	f003 b9b2 	b.w	800543c <HAL_GPIO_WritePin>
 80020d8:	40020800 	.word	0x40020800
 80020dc:	40020c00 	.word	0x40020c00

080020e0 <LCD_IO_WriteReg>:
{
 80020e0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020e2:	4c0b      	ldr	r4, [pc, #44]	; (8002110 <LCD_IO_WriteReg+0x30>)
{
 80020e4:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80020e6:	2200      	movs	r2, #0
 80020e8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020ec:	4809      	ldr	r0, [pc, #36]	; (8002114 <LCD_IO_WriteReg+0x34>)
 80020ee:	f003 f9a5 	bl	800543c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020f2:	2200      	movs	r2, #0
 80020f4:	2104      	movs	r1, #4
 80020f6:	4620      	mov	r0, r4
 80020f8:	f003 f9a0 	bl	800543c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80020fc:	4628      	mov	r0, r5
 80020fe:	f7ff fc7f 	bl	8001a00 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002102:	4620      	mov	r0, r4
 8002104:	2201      	movs	r2, #1
 8002106:	2104      	movs	r1, #4
}
 8002108:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800210c:	f003 b996 	b.w	800543c <HAL_GPIO_WritePin>
 8002110:	40020800 	.word	0x40020800
 8002114:	40020c00 	.word	0x40020c00

08002118 <LCD_IO_ReadData>:
{
 8002118:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800211a:	4c14      	ldr	r4, [pc, #80]	; (800216c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800211c:	4d14      	ldr	r5, [pc, #80]	; (8002170 <LCD_IO_ReadData+0x58>)
{
 800211e:	4607      	mov	r7, r0
 8002120:	460e      	mov	r6, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002122:	4620      	mov	r0, r4
 8002124:	2200      	movs	r2, #0
 8002126:	2104      	movs	r1, #4
 8002128:	f003 f988 	bl	800543c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800212c:	2200      	movs	r2, #0
 800212e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002132:	4628      	mov	r0, r5
 8002134:	f003 f982 	bl	800543c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002138:	4638      	mov	r0, r7
 800213a:	f7ff fc61 	bl	8001a00 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800213e:	4b0d      	ldr	r3, [pc, #52]	; (8002174 <LCD_IO_ReadData+0x5c>)
 8002140:	480d      	ldr	r0, [pc, #52]	; (8002178 <LCD_IO_ReadData+0x60>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	4632      	mov	r2, r6
 8002146:	a901      	add	r1, sp, #4
 8002148:	f004 fde5 	bl	8006d16 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800214c:	4628      	mov	r0, r5
 800214e:	2201      	movs	r2, #1
 8002150:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002154:	9e01      	ldr	r6, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002156:	f003 f971 	bl	800543c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800215a:	4620      	mov	r0, r4
 800215c:	2201      	movs	r2, #1
 800215e:	2104      	movs	r1, #4
 8002160:	f003 f96c 	bl	800543c <HAL_GPIO_WritePin>
}
 8002164:	4630      	mov	r0, r6
 8002166:	b003      	add	sp, #12
 8002168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800216a:	bf00      	nop
 800216c:	40020800 	.word	0x40020800
 8002170:	40020c00 	.word	0x40020c00
 8002174:	20000010 	.word	0x20000010
 8002178:	2001272c 	.word	0x2001272c

0800217c <LCD_Delay>:
  HAL_Delay(Delay);
 800217c:	f002 bd04 	b.w	8004b88 <HAL_Delay>

08002180 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 8002180:	6802      	ldr	r2, [r0, #0]
 8002182:	4b03      	ldr	r3, [pc, #12]	; (8002190 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002184:	429a      	cmp	r2, r3
 8002186:	d101      	bne.n	800218c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8002188:	f002 bcec 	b.w	8004b64 <HAL_IncTick>
}
 800218c:	4770      	bx	lr
 800218e:	bf00      	nop
 8002190:	40001000 	.word	0x40001000

08002194 <Error_Handler>:
}
 8002194:	4770      	bx	lr
	...

08002198 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002198:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800219a:	4b0e      	ldr	r3, [pc, #56]	; (80021d4 <HAL_MspInit+0x3c>)
 800219c:	2200      	movs	r2, #0
 800219e:	9200      	str	r2, [sp, #0]
 80021a0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021a2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80021a6:	6459      	str	r1, [r3, #68]	; 0x44
 80021a8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021aa:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80021ae:	9100      	str	r1, [sp, #0]
 80021b0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021b2:	9201      	str	r2, [sp, #4]
 80021b4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80021b6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80021ba:	6419      	str	r1, [r3, #64]	; 0x40
 80021bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021be:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021c2:	9301      	str	r3, [sp, #4]
 80021c4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021c6:	210f      	movs	r1, #15
 80021c8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80021cc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021ce:	f002 bd01 	b.w	8004bd4 <HAL_NVIC_SetPriority>
 80021d2:	bf00      	nop
 80021d4:	40023800 	.word	0x40023800

080021d8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80021d8:	6802      	ldr	r2, [r0, #0]
 80021da:	4b09      	ldr	r3, [pc, #36]	; (8002200 <HAL_CRC_MspInit+0x28>)
 80021dc:	429a      	cmp	r2, r3
{
 80021de:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80021e0:	d10b      	bne.n	80021fa <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80021e2:	2300      	movs	r3, #0
 80021e4:	9301      	str	r3, [sp, #4]
 80021e6:	4b07      	ldr	r3, [pc, #28]	; (8002204 <HAL_CRC_MspInit+0x2c>)
 80021e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021ea:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80021ee:	631a      	str	r2, [r3, #48]	; 0x30
 80021f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021f2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80021f6:	9301      	str	r3, [sp, #4]
 80021f8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80021fa:	b002      	add	sp, #8
 80021fc:	4770      	bx	lr
 80021fe:	bf00      	nop
 8002200:	40023000 	.word	0x40023000
 8002204:	40023800 	.word	0x40023800

08002208 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002208:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800220a:	4b0f      	ldr	r3, [pc, #60]	; (8002248 <HAL_DMA2D_MspInit+0x40>)
 800220c:	6802      	ldr	r2, [r0, #0]
 800220e:	429a      	cmp	r2, r3
 8002210:	d116      	bne.n	8002240 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002212:	2200      	movs	r2, #0
 8002214:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002218:	9201      	str	r2, [sp, #4]
 800221a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800221c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002220:	6319      	str	r1, [r3, #48]	; 0x30
 8002222:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002224:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002228:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800222a:	2105      	movs	r1, #5
 800222c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800222e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002230:	f002 fcd0 	bl	8004bd4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002234:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002236:	b003      	add	sp, #12
 8002238:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800223c:	f002 bcfe 	b.w	8004c3c <HAL_NVIC_EnableIRQ>
}
 8002240:	b003      	add	sp, #12
 8002242:	f85d fb04 	ldr.w	pc, [sp], #4
 8002246:	bf00      	nop
 8002248:	4002b000 	.word	0x4002b000

0800224c <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 800224c:	6802      	ldr	r2, [r0, #0]
 800224e:	4b06      	ldr	r3, [pc, #24]	; (8002268 <HAL_DMA2D_MspDeInit+0x1c>)
 8002250:	429a      	cmp	r2, r3
 8002252:	d107      	bne.n	8002264 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8002254:	4a05      	ldr	r2, [pc, #20]	; (800226c <HAL_DMA2D_MspDeInit+0x20>)
 8002256:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8002258:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800225c:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 800225e:	205a      	movs	r0, #90	; 0x5a
 8002260:	f002 bcfa 	b.w	8004c58 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8002264:	4770      	bx	lr
 8002266:	bf00      	nop
 8002268:	4002b000 	.word	0x4002b000
 800226c:	40023800 	.word	0x40023800

08002270 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002270:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002274:	4604      	mov	r4, r0
 8002276:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002278:	2214      	movs	r2, #20
 800227a:	2100      	movs	r1, #0
 800227c:	a803      	add	r0, sp, #12
 800227e:	f018 fb3c 	bl	801a8fa <memset>
  if(hi2c->Instance==I2C3)
 8002282:	6822      	ldr	r2, [r4, #0]
 8002284:	4b24      	ldr	r3, [pc, #144]	; (8002318 <HAL_I2C_MspInit+0xa8>)
 8002286:	429a      	cmp	r2, r3
 8002288:	d143      	bne.n	8002312 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800228a:	4c24      	ldr	r4, [pc, #144]	; (800231c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800228c:	4824      	ldr	r0, [pc, #144]	; (8002320 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800228e:	2500      	movs	r5, #0
 8002290:	9500      	str	r5, [sp, #0]
 8002292:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002294:	f043 0304 	orr.w	r3, r3, #4
 8002298:	6323      	str	r3, [r4, #48]	; 0x30
 800229a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800229c:	f003 0304 	and.w	r3, r3, #4
 80022a0:	9300      	str	r3, [sp, #0]
 80022a2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022a4:	9501      	str	r5, [sp, #4]
 80022a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022a8:	f043 0301 	orr.w	r3, r3, #1
 80022ac:	6323      	str	r3, [r4, #48]	; 0x30
 80022ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022b0:	f003 0301 	and.w	r3, r3, #1
 80022b4:	9301      	str	r3, [sp, #4]
 80022b6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022b8:	f04f 0912 	mov.w	r9, #18
 80022bc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022c0:	f04f 0801 	mov.w	r8, #1
 80022c4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022c6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022c8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022ca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022ce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022d2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022d4:	f002 ffc6 	bl	8005264 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022d8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022dc:	a903      	add	r1, sp, #12
 80022de:	4811      	ldr	r0, [pc, #68]	; (8002324 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022e0:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022e2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022e6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022ea:	f002 ffbb 	bl	8005264 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022ee:	9502      	str	r5, [sp, #8]
 80022f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80022f2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022f6:	6423      	str	r3, [r4, #64]	; 0x40
 80022f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80022fa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80022fe:	9302      	str	r3, [sp, #8]
 8002300:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002302:	6a23      	ldr	r3, [r4, #32]
 8002304:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002308:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800230a:	6a23      	ldr	r3, [r4, #32]
 800230c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002310:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002312:	b009      	add	sp, #36	; 0x24
 8002314:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002318:	40005c00 	.word	0x40005c00
 800231c:	40023800 	.word	0x40023800
 8002320:	40020800 	.word	0x40020800
 8002324:	40020000 	.word	0x40020000

08002328 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002328:	b5f0      	push	{r4, r5, r6, r7, lr}
 800232a:	4604      	mov	r4, r0
 800232c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800232e:	2214      	movs	r2, #20
 8002330:	2100      	movs	r1, #0
 8002332:	a807      	add	r0, sp, #28
 8002334:	f018 fae1 	bl	801a8fa <memset>
  if(hltdc->Instance==LTDC)
 8002338:	6822      	ldr	r2, [r4, #0]
 800233a:	4b57      	ldr	r3, [pc, #348]	; (8002498 <HAL_LTDC_MspInit+0x170>)
 800233c:	429a      	cmp	r2, r3
 800233e:	f040 80a8 	bne.w	8002492 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002342:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8002346:	2500      	movs	r5, #0
 8002348:	9500      	str	r5, [sp, #0]
 800234a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800234c:	4853      	ldr	r0, [pc, #332]	; (800249c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 800234e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002352:	645a      	str	r2, [r3, #68]	; 0x44
 8002354:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002356:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800235a:	9200      	str	r2, [sp, #0]
 800235c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800235e:	9501      	str	r5, [sp, #4]
 8002360:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002362:	f042 0220 	orr.w	r2, r2, #32
 8002366:	631a      	str	r2, [r3, #48]	; 0x30
 8002368:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800236a:	f002 0220 	and.w	r2, r2, #32
 800236e:	9201      	str	r2, [sp, #4]
 8002370:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002372:	9502      	str	r5, [sp, #8]
 8002374:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002376:	f042 0201 	orr.w	r2, r2, #1
 800237a:	631a      	str	r2, [r3, #48]	; 0x30
 800237c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800237e:	f002 0201 	and.w	r2, r2, #1
 8002382:	9202      	str	r2, [sp, #8]
 8002384:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002386:	9503      	str	r5, [sp, #12]
 8002388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800238a:	f042 0202 	orr.w	r2, r2, #2
 800238e:	631a      	str	r2, [r3, #48]	; 0x30
 8002390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002392:	f002 0202 	and.w	r2, r2, #2
 8002396:	9203      	str	r2, [sp, #12]
 8002398:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800239a:	9504      	str	r5, [sp, #16]
 800239c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800239e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80023a2:	631a      	str	r2, [r3, #48]	; 0x30
 80023a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023a6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80023aa:	9204      	str	r2, [sp, #16]
 80023ac:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ae:	9505      	str	r5, [sp, #20]
 80023b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023b2:	f042 0204 	orr.w	r2, r2, #4
 80023b6:	631a      	str	r2, [r3, #48]	; 0x30
 80023b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023ba:	f002 0204 	and.w	r2, r2, #4
 80023be:	9205      	str	r2, [sp, #20]
 80023c0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023c2:	9506      	str	r5, [sp, #24]
 80023c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023c6:	f042 0208 	orr.w	r2, r2, #8
 80023ca:	631a      	str	r2, [r3, #48]	; 0x30
 80023cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ce:	f003 0308 	and.w	r3, r3, #8
 80023d2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023d4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023d6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023d8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023da:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023e2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023e6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e8:	f002 ff3c 	bl	8005264 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 80023ec:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023f0:	a907      	add	r1, sp, #28
 80023f2:	482b      	ldr	r0, [pc, #172]	; (80024a0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023f4:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023f6:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80023fa:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023fc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002400:	f002 ff30 	bl	8005264 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002404:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002406:	a907      	add	r1, sp, #28
 8002408:	4826      	ldr	r0, [pc, #152]	; (80024a4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800240a:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800240c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002410:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002414:	f002 ff26 	bl	8005264 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002418:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800241c:	a907      	add	r1, sp, #28
 800241e:	4821      	ldr	r0, [pc, #132]	; (80024a4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002420:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002422:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002426:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800242a:	f002 ff1b 	bl	8005264 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800242e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002432:	a907      	add	r1, sp, #28
 8002434:	481c      	ldr	r0, [pc, #112]	; (80024a8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002436:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002438:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800243c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002440:	f002 ff10 	bl	8005264 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002444:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002446:	a907      	add	r1, sp, #28
 8002448:	4818      	ldr	r0, [pc, #96]	; (80024ac <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800244a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800244c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002450:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002454:	f002 ff06 	bl	8005264 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002458:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800245a:	a907      	add	r1, sp, #28
 800245c:	4814      	ldr	r0, [pc, #80]	; (80024b0 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800245e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002460:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002464:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002468:	f002 fefc 	bl	8005264 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800246c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002470:	a907      	add	r1, sp, #28
 8002472:	480d      	ldr	r0, [pc, #52]	; (80024a8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002474:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002476:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800247a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800247e:	f002 fef1 	bl	8005264 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002482:	2058      	movs	r0, #88	; 0x58
 8002484:	462a      	mov	r2, r5
 8002486:	2105      	movs	r1, #5
 8002488:	f002 fba4 	bl	8004bd4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800248c:	2058      	movs	r0, #88	; 0x58
 800248e:	f002 fbd5 	bl	8004c3c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002492:	b00d      	add	sp, #52	; 0x34
 8002494:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002496:	bf00      	nop
 8002498:	40016800 	.word	0x40016800
 800249c:	40021400 	.word	0x40021400
 80024a0:	40020000 	.word	0x40020000
 80024a4:	40020400 	.word	0x40020400
 80024a8:	40021800 	.word	0x40021800
 80024ac:	40020800 	.word	0x40020800
 80024b0:	40020c00 	.word	0x40020c00

080024b4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024b4:	b510      	push	{r4, lr}
 80024b6:	4604      	mov	r4, r0
 80024b8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024ba:	2214      	movs	r2, #20
 80024bc:	2100      	movs	r1, #0
 80024be:	a803      	add	r0, sp, #12
 80024c0:	f018 fa1b 	bl	801a8fa <memset>
  if(hspi->Instance==SPI5)
 80024c4:	6822      	ldr	r2, [r4, #0]
 80024c6:	4b14      	ldr	r3, [pc, #80]	; (8002518 <HAL_SPI_MspInit+0x64>)
 80024c8:	429a      	cmp	r2, r3
 80024ca:	d123      	bne.n	8002514 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024cc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80024d0:	2100      	movs	r1, #0
 80024d2:	9101      	str	r1, [sp, #4]
 80024d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024d6:	4811      	ldr	r0, [pc, #68]	; (800251c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024d8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80024dc:	645a      	str	r2, [r3, #68]	; 0x44
 80024de:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80024e0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 80024e4:	9201      	str	r2, [sp, #4]
 80024e6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024e8:	9102      	str	r1, [sp, #8]
 80024ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ec:	f042 0220 	orr.w	r2, r2, #32
 80024f0:	631a      	str	r2, [r3, #48]	; 0x30
 80024f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024f4:	f003 0320 	and.w	r3, r3, #32
 80024f8:	9302      	str	r3, [sp, #8]
 80024fa:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002500:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002502:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002504:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002508:	2305      	movs	r3, #5
 800250a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800250e:	a903      	add	r1, sp, #12
 8002510:	f002 fea8 	bl	8005264 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002514:	b008      	add	sp, #32
 8002516:	bd10      	pop	{r4, pc}
 8002518:	40015000 	.word	0x40015000
 800251c:	40021400 	.word	0x40021400

08002520 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002524:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002526:	2214      	movs	r2, #20
 8002528:	2100      	movs	r1, #0
 800252a:	a801      	add	r0, sp, #4
 800252c:	f018 f9e5 	bl	801a8fa <memset>
  if (FMC_Initialized) {
 8002530:	4b2b      	ldr	r3, [pc, #172]	; (80025e0 <HAL_SDRAM_MspInit+0xc0>)
 8002532:	681c      	ldr	r4, [r3, #0]
 8002534:	2c00      	cmp	r4, #0
 8002536:	d14f      	bne.n	80025d8 <HAL_SDRAM_MspInit+0xb8>
  FMC_Initialized = 1;
 8002538:	f04f 0801 	mov.w	r8, #1
 800253c:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002540:	4b28      	ldr	r3, [pc, #160]	; (80025e4 <HAL_SDRAM_MspInit+0xc4>)
 8002542:	9400      	str	r4, [sp, #0]
 8002544:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002546:	4828      	ldr	r0, [pc, #160]	; (80025e8 <HAL_SDRAM_MspInit+0xc8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002548:	ea42 0208 	orr.w	r2, r2, r8
 800254c:	639a      	str	r2, [r3, #56]	; 0x38
 800254e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002550:	ea03 0308 	and.w	r3, r3, r8
 8002554:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002556:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002558:	2603      	movs	r6, #3
 800255a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800255c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800255e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002560:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002564:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002568:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800256c:	f002 fe7a 	bl	8005264 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002570:	a901      	add	r1, sp, #4
 8002572:	481e      	ldr	r0, [pc, #120]	; (80025ec <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002574:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002576:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800257a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800257e:	f002 fe71 	bl	8005264 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 8002582:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002586:	a901      	add	r1, sp, #4
 8002588:	4819      	ldr	r0, [pc, #100]	; (80025f0 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800258a:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800258c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002590:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002594:	f002 fe66 	bl	8005264 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 8002598:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800259c:	a901      	add	r1, sp, #4
 800259e:	4815      	ldr	r0, [pc, #84]	; (80025f4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025a0:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025a2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025a6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80025aa:	f002 fe5b 	bl	8005264 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 80025ae:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025b2:	a901      	add	r1, sp, #4
 80025b4:	4810      	ldr	r0, [pc, #64]	; (80025f8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025b6:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025b8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025bc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025c0:	f002 fe50 	bl	8005264 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025c4:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025c6:	a901      	add	r1, sp, #4
 80025c8:	480c      	ldr	r0, [pc, #48]	; (80025fc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025ca:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025cc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025d0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025d4:	f002 fe46 	bl	8005264 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80025d8:	b006      	add	sp, #24
 80025da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80025de:	bf00      	nop
 80025e0:	20001604 	.word	0x20001604
 80025e4:	40023800 	.word	0x40023800
 80025e8:	40021400 	.word	0x40021400
 80025ec:	40020800 	.word	0x40020800
 80025f0:	40021800 	.word	0x40021800
 80025f4:	40021000 	.word	0x40021000
 80025f8:	40020c00 	.word	0x40020c00
 80025fc:	40020400 	.word	0x40020400

08002600 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002600:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM2)
 8002602:	6803      	ldr	r3, [r0, #0]
 8002604:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8002608:	b085      	sub	sp, #20
 800260a:	4605      	mov	r5, r0
  if(htim_base->Instance==TIM2)
 800260c:	d12e      	bne.n	800266c <HAL_TIM_Base_MspInit+0x6c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800260e:	2300      	movs	r3, #0
 8002610:	4a57      	ldr	r2, [pc, #348]	; (8002770 <HAL_TIM_Base_MspInit+0x170>)
 8002612:	9300      	str	r3, [sp, #0]
 8002614:	6c11      	ldr	r1, [r2, #64]	; 0x40

    /* TIM2 DMA Init */
    /* TIM2_UP_CH4 Init */
    hdma_tim2_up_ch4.Instance = DMA1_Stream7;
 8002616:	4c57      	ldr	r4, [pc, #348]	; (8002774 <HAL_TIM_Base_MspInit+0x174>)
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 8002618:	f8df e17c 	ldr.w	lr, [pc, #380]	; 8002798 <HAL_TIM_Base_MspInit+0x198>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800261c:	f041 0101 	orr.w	r1, r1, #1
 8002620:	6411      	str	r1, [r2, #64]	; 0x40
 8002622:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002624:	f002 0201 	and.w	r2, r2, #1
 8002628:	9200      	str	r2, [sp, #0]
 800262a:	9a00      	ldr	r2, [sp, #0]
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 800262c:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8002630:	e9c4 e200 	strd	lr, r2, [r4]
    hdma_tim2_up_ch4.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002634:	2240      	movs	r2, #64	; 0x40
    hdma_tim2_up_ch4.Init.PeriphInc = DMA_PINC_DISABLE;
 8002636:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim2_up_ch4.Init.MemInc = DMA_MINC_ENABLE;
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800263a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800263e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    hdma_tim2_up_ch4.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 8002642:	f44f 4080 	mov.w	r0, #16384	; 0x4000
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8002646:	e9c4 1204 	strd	r1, r2, [r4, #16]
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 800264a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800264e:	e9c4 0206 	strd	r0, r2, [r4, #24]
    hdma_tim2_up_ch4.Init.Priority = DMA_PRIORITY_LOW;
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8002652:	4620      	mov	r0, r4
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002654:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8002658:	f002 fb38 	bl	8004ccc <HAL_DMA_Init>
 800265c:	b108      	cbz	r0, 8002662 <HAL_TIM_Base_MspInit+0x62>
    {
      Error_Handler();
 800265e:	f7ff fd99 	bl	8002194 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch4);
 8002662:	622c      	str	r4, [r5, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC4],hdma_tim2_up_ch4);
 8002664:	632c      	str	r4, [r5, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
    {
      Error_Handler();
    }

    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8002666:	63a5      	str	r5, [r4, #56]	; 0x38
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
 8002668:	b005      	add	sp, #20
 800266a:	bd30      	pop	{r4, r5, pc}
  else if(htim_base->Instance==TIM3)
 800266c:	4a42      	ldr	r2, [pc, #264]	; (8002778 <HAL_TIM_Base_MspInit+0x178>)
 800266e:	4293      	cmp	r3, r2
 8002670:	d12b      	bne.n	80026ca <HAL_TIM_Base_MspInit+0xca>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002672:	2300      	movs	r3, #0
 8002674:	f502 320d 	add.w	r2, r2, #144384	; 0x23400
 8002678:	9301      	str	r3, [sp, #4]
 800267a:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim3_ch2.Instance = DMA1_Stream5;
 800267c:	4c3f      	ldr	r4, [pc, #252]	; (800277c <HAL_TIM_Base_MspInit+0x17c>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 800267e:	f041 0102 	orr.w	r1, r1, #2
 8002682:	6411      	str	r1, [r2, #64]	; 0x40
 8002684:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8002686:	493e      	ldr	r1, [pc, #248]	; (8002780 <HAL_TIM_Base_MspInit+0x180>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002688:	f002 0202 	and.w	r2, r2, #2
 800268c:	9201      	str	r2, [sp, #4]
 800268e:	9a01      	ldr	r2, [sp, #4]
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8002690:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8002694:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim3_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002698:	2240      	movs	r2, #64	; 0x40
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800269a:	f44f 6080 	mov.w	r0, #1024	; 0x400
    hdma_tim3_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 800269e:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80026a6:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 80026aa:	f44f 5c00 	mov.w	ip, #8192	; 0x2000
 80026ae:	f44f 7280 	mov.w	r2, #256	; 0x100
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 80026b2:	4620      	mov	r0, r4
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 80026b4:	e9c4 c206 	strd	ip, r2, [r4, #24]
    hdma_tim3_ch2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80026b8:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 80026bc:	f002 fb06 	bl	8004ccc <HAL_DMA_Init>
 80026c0:	b108      	cbz	r0, 80026c6 <HAL_TIM_Base_MspInit+0xc6>
      Error_Handler();
 80026c2:	f7ff fd67 	bl	8002194 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC2],hdma_tim3_ch2);
 80026c6:	62ac      	str	r4, [r5, #40]	; 0x28
 80026c8:	e7cd      	b.n	8002666 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM4)
 80026ca:	4a2e      	ldr	r2, [pc, #184]	; (8002784 <HAL_TIM_Base_MspInit+0x184>)
 80026cc:	4293      	cmp	r3, r2
 80026ce:	d12c      	bne.n	800272a <HAL_TIM_Base_MspInit+0x12a>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80026d0:	f502 320c 	add.w	r2, r2, #143360	; 0x23000
 80026d4:	2300      	movs	r3, #0
 80026d6:	9302      	str	r3, [sp, #8]
 80026d8:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim4_ch1.Instance = DMA1_Stream0;
 80026da:	4c2b      	ldr	r4, [pc, #172]	; (8002788 <HAL_TIM_Base_MspInit+0x188>)
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 80026dc:	f8df c0bc 	ldr.w	ip, [pc, #188]	; 800279c <HAL_TIM_Base_MspInit+0x19c>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80026e0:	f041 0104 	orr.w	r1, r1, #4
 80026e4:	6411      	str	r1, [r2, #64]	; 0x40
 80026e6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80026e8:	f002 0204 	and.w	r2, r2, #4
 80026ec:	9202      	str	r2, [sp, #8]
 80026ee:	9a02      	ldr	r2, [sp, #8]
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 80026f0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80026f4:	e9c4 c200 	strd	ip, r2, [r4]
    hdma_tim4_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80026f8:	2240      	movs	r2, #64	; 0x40
    hdma_tim4_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 80026fa:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim4_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026fe:	f44f 6e80 	mov.w	lr, #1024	; 0x400
 8002702:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002706:	e9c4 e204 	strd	lr, r2, [r4, #16]
    hdma_tim4_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800270a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 800270e:	61a2      	str	r2, [r4, #24]
    hdma_tim5_ch1.Init.Mode = DMA_CIRCULAR;
 8002710:	f44f 7280 	mov.w	r2, #256	; 0x100
    hdma_tim5_ch1.Init.Priority = DMA_PRIORITY_LOW;
 8002714:	e9c4 2307 	strd	r2, r3, [r4, #28]
    hdma_tim5_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002718:	6263      	str	r3, [r4, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
 800271a:	4620      	mov	r0, r4
 800271c:	f002 fad6 	bl	8004ccc <HAL_DMA_Init>
 8002720:	b108      	cbz	r0, 8002726 <HAL_TIM_Base_MspInit+0x126>
      Error_Handler();
 8002722:	f7ff fd37 	bl	8002194 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8002726:	626c      	str	r4, [r5, #36]	; 0x24
 8002728:	e79d      	b.n	8002666 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM5)
 800272a:	4a18      	ldr	r2, [pc, #96]	; (800278c <HAL_TIM_Base_MspInit+0x18c>)
 800272c:	4293      	cmp	r3, r2
 800272e:	d19b      	bne.n	8002668 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002730:	f502 320b 	add.w	r2, r2, #142336	; 0x22c00
 8002734:	2300      	movs	r3, #0
 8002736:	9303      	str	r3, [sp, #12]
 8002738:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim5_ch1.Instance = DMA1_Stream2;
 800273a:	4c15      	ldr	r4, [pc, #84]	; (8002790 <HAL_TIM_Base_MspInit+0x190>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 800273c:	f041 0108 	orr.w	r1, r1, #8
 8002740:	6411      	str	r1, [r2, #64]	; 0x40
 8002742:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 8002744:	4913      	ldr	r1, [pc, #76]	; (8002794 <HAL_TIM_Base_MspInit+0x194>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002746:	f002 0208 	and.w	r2, r2, #8
 800274a:	9203      	str	r2, [sp, #12]
 800274c:	9a03      	ldr	r2, [sp, #12]
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 800274e:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8002752:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim5_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002756:	2240      	movs	r2, #64	; 0x40
    hdma_tim5_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8002758:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim5_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800275c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8002760:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002764:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8002768:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800276c:	e7cf      	b.n	800270e <HAL_TIM_Base_MspInit+0x10e>
 800276e:	bf00      	nop
 8002770:	40023800 	.word	0x40023800
 8002774:	20012678 	.word	0x20012678
 8002778:	40000400 	.word	0x40000400
 800277c:	200129b4 	.word	0x200129b4
 8002780:	40026088 	.word	0x40026088
 8002784:	40000800 	.word	0x40000800
 8002788:	20012a98 	.word	0x20012a98
 800278c:	40000c00 	.word	0x40000c00
 8002790:	20012954 	.word	0x20012954
 8002794:	40026040 	.word	0x40026040
 8002798:	400260b8 	.word	0x400260b8
 800279c:	40026010 	.word	0x40026010

080027a0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80027a0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a2:	2214      	movs	r2, #20
{
 80027a4:	b08a      	sub	sp, #40	; 0x28
 80027a6:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a8:	2100      	movs	r1, #0
 80027aa:	eb0d 0002 	add.w	r0, sp, r2
 80027ae:	f018 f8a4 	bl	801a8fa <memset>
  if(htim->Instance==TIM2)
 80027b2:	6823      	ldr	r3, [r4, #0]
 80027b4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80027b8:	d114      	bne.n	80027e4 <HAL_TIM_MspPostInit+0x44>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ba:	2300      	movs	r3, #0
 80027bc:	9301      	str	r3, [sp, #4]
 80027be:	4b29      	ldr	r3, [pc, #164]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 80027c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027c2:	f042 0201 	orr.w	r2, r2, #1
 80027c6:	631a      	str	r2, [r3, #48]	; 0x30
 80027c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ca:	f003 0301 	and.w	r3, r3, #1
 80027ce:	9301      	str	r3, [sp, #4]
 80027d0:	9b01      	ldr	r3, [sp, #4]
    /**TIM2 GPIO Configuration
    PA3     ------> TIM2_CH4
    */
    GPIO_InitStruct.Pin = xAxisPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027d2:	2108      	movs	r1, #8
 80027d4:	2302      	movs	r3, #2
 80027d6:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80027da:	2301      	movs	r3, #1
    */
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80027dc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 80027de:	a905      	add	r1, sp, #20
 80027e0:	4821      	ldr	r0, [pc, #132]	; (8002868 <HAL_TIM_MspPostInit+0xc8>)
 80027e2:	e02a      	b.n	800283a <HAL_TIM_MspPostInit+0x9a>
  else if(htim->Instance==TIM3)
 80027e4:	4a21      	ldr	r2, [pc, #132]	; (800286c <HAL_TIM_MspPostInit+0xcc>)
 80027e6:	4293      	cmp	r3, r2
 80027e8:	d110      	bne.n	800280c <HAL_TIM_MspPostInit+0x6c>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ea:	2300      	movs	r3, #0
 80027ec:	9302      	str	r3, [sp, #8]
 80027ee:	4b1d      	ldr	r3, [pc, #116]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 80027f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027f2:	f042 0201 	orr.w	r2, r2, #1
 80027f6:	631a      	str	r2, [r3, #48]	; 0x30
 80027f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027fa:	f003 0301 	and.w	r3, r3, #1
 80027fe:	9302      	str	r3, [sp, #8]
 8002800:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = yAxisPWM_L_Pin;
 8002802:	2380      	movs	r3, #128	; 0x80
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002804:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002806:	2302      	movs	r3, #2
 8002808:	9306      	str	r3, [sp, #24]
 800280a:	e7e7      	b.n	80027dc <HAL_TIM_MspPostInit+0x3c>
  else if(htim->Instance==TIM4)
 800280c:	4a18      	ldr	r2, [pc, #96]	; (8002870 <HAL_TIM_MspPostInit+0xd0>)
 800280e:	4293      	cmp	r3, r2
 8002810:	d117      	bne.n	8002842 <HAL_TIM_MspPostInit+0xa2>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002812:	2300      	movs	r3, #0
 8002814:	9303      	str	r3, [sp, #12]
 8002816:	4b13      	ldr	r3, [pc, #76]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 8002818:	4816      	ldr	r0, [pc, #88]	; (8002874 <HAL_TIM_MspPostInit+0xd4>)
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800281a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800281c:	f042 0208 	orr.w	r2, r2, #8
 8002820:	631a      	str	r2, [r3, #48]	; 0x30
 8002822:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002824:	f003 0308 	and.w	r3, r3, #8
 8002828:	9303      	str	r3, [sp, #12]
 800282a:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800282c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002830:	2302      	movs	r3, #2
 8002832:	e9cd 2305 	strd	r2, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002836:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 8002838:	a905      	add	r1, sp, #20
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 800283a:	f002 fd13 	bl	8005264 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 800283e:	b00a      	add	sp, #40	; 0x28
 8002840:	bd10      	pop	{r4, pc}
  else if(htim->Instance==TIM5)
 8002842:	4a0d      	ldr	r2, [pc, #52]	; (8002878 <HAL_TIM_MspPostInit+0xd8>)
 8002844:	4293      	cmp	r3, r2
 8002846:	d1fa      	bne.n	800283e <HAL_TIM_MspPostInit+0x9e>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002848:	2300      	movs	r3, #0
 800284a:	9304      	str	r3, [sp, #16]
 800284c:	4b05      	ldr	r3, [pc, #20]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 800284e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002850:	f042 0201 	orr.w	r2, r2, #1
 8002854:	631a      	str	r2, [r3, #48]	; 0x30
 8002856:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002858:	f003 0301 	and.w	r3, r3, #1
 800285c:	9304      	str	r3, [sp, #16]
 800285e:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002860:	2301      	movs	r3, #1
 8002862:	e7cf      	b.n	8002804 <HAL_TIM_MspPostInit+0x64>
 8002864:	40023800 	.word	0x40023800
 8002868:	40020000 	.word	0x40020000
 800286c:	40000400 	.word	0x40000400
 8002870:	40000800 	.word	0x40000800
 8002874:	40020c00 	.word	0x40020c00
 8002878:	40000c00 	.word	0x40000c00

0800287c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800287c:	b530      	push	{r4, r5, lr}
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 800287e:	4601      	mov	r1, r0
{
 8002880:	b089      	sub	sp, #36	; 0x24
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8002882:	2200      	movs	r2, #0
 8002884:	2036      	movs	r0, #54	; 0x36
 8002886:	f002 f9a5 	bl	8004bd4 <HAL_NVIC_SetPriority>
  
  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn); 
 800288a:	2036      	movs	r0, #54	; 0x36
 800288c:	f002 f9d6 	bl	8004c3c <HAL_NVIC_EnableIRQ>
  
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002890:	2500      	movs	r5, #0
 8002892:	4b15      	ldr	r3, [pc, #84]	; (80028e8 <HAL_InitTick+0x6c>)
 8002894:	9502      	str	r5, [sp, #8]
 8002896:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  
  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002898:	4c14      	ldr	r4, [pc, #80]	; (80028ec <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 800289a:	f042 0210 	orr.w	r2, r2, #16
 800289e:	641a      	str	r2, [r3, #64]	; 0x40
 80028a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028a2:	f003 0310 	and.w	r3, r3, #16
 80028a6:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028a8:	a901      	add	r1, sp, #4
 80028aa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028ac:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028ae:	f003 fe3b 	bl	8006528 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028b2:	f003 fe29 	bl	8006508 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80028b6:	4b0e      	ldr	r3, [pc, #56]	; (80028f0 <HAL_InitTick+0x74>)
 80028b8:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 80028ba:	f240 33e7 	movw	r3, #999	; 0x3e7
 80028be:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028c0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80028c2:	4b0c      	ldr	r3, [pc, #48]	; (80028f4 <HAL_InitTick+0x78>)
 80028c4:	fbb0 f0f3 	udiv	r0, r0, r3
 80028c8:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80028ca:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028cc:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80028ce:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028d0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028d2:	f004 fca9 	bl	8007228 <HAL_TIM_Base_Init>
 80028d6:	b920      	cbnz	r0, 80028e2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80028d8:	4620      	mov	r0, r4
 80028da:	f004 fb41 	bl	8006f60 <HAL_TIM_Base_Start_IT>
  }
  
  /* Return function status */
  return HAL_ERROR;
}
 80028de:	b009      	add	sp, #36	; 0x24
 80028e0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80028e2:	2001      	movs	r0, #1
 80028e4:	e7fb      	b.n	80028de <HAL_InitTick+0x62>
 80028e6:	bf00      	nop
 80028e8:	40023800 	.word	0x40023800
 80028ec:	20012b2c 	.word	0x20012b2c
 80028f0:	40001000 	.word	0x40001000
 80028f4:	000f4240 	.word	0x000f4240

080028f8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80028f8:	4770      	bx	lr

080028fa <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80028fa:	e7fe      	b.n	80028fa <HardFault_Handler>

080028fc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80028fc:	e7fe      	b.n	80028fc <MemManage_Handler>

080028fe <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80028fe:	e7fe      	b.n	80028fe <BusFault_Handler>

08002900 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002900:	e7fe      	b.n	8002900 <UsageFault_Handler>

08002902 <DebugMon_Handler>:
 8002902:	4770      	bx	lr

08002904 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002904:	4801      	ldr	r0, [pc, #4]	; (800290c <TIM6_DAC_IRQHandler+0x8>)
 8002906:	f004 bb7d 	b.w	8007004 <HAL_TIM_IRQHandler>
 800290a:	bf00      	nop
 800290c:	20012b2c 	.word	0x20012b2c

08002910 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002910:	4801      	ldr	r0, [pc, #4]	; (8002918 <LTDC_IRQHandler+0x8>)
 8002912:	f003 bae7 	b.w	8005ee4 <HAL_LTDC_IRQHandler>
 8002916:	bf00      	nop
 8002918:	200128ac 	.word	0x200128ac

0800291c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800291c:	4801      	ldr	r0, [pc, #4]	; (8002924 <DMA2D_IRQHandler+0x8>)
 800291e:	f002 bbcd 	b.w	80050bc <HAL_DMA2D_IRQHandler>
 8002922:	bf00      	nop
 8002924:	20012a18 	.word	0x20012a18

08002928 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002928:	2001      	movs	r0, #1
 800292a:	4770      	bx	lr

0800292c <_kill>:

int _kill(int pid, int sig)
{
 800292c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800292e:	f017 ff8d 	bl	801a84c <__errno>
 8002932:	2316      	movs	r3, #22
 8002934:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002936:	f04f 30ff 	mov.w	r0, #4294967295
 800293a:	bd08      	pop	{r3, pc}

0800293c <_exit>:

void _exit (int status)
{
 800293c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800293e:	f017 ff85 	bl	801a84c <__errno>
 8002942:	2316      	movs	r3, #22
 8002944:	6003      	str	r3, [r0, #0]
 8002946:	e7fe      	b.n	8002946 <_exit+0xa>

08002948 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002948:	b570      	push	{r4, r5, r6, lr}
 800294a:	460e      	mov	r6, r1
 800294c:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800294e:	460c      	mov	r4, r1
 8002950:	1ba3      	subs	r3, r4, r6
 8002952:	429d      	cmp	r5, r3
 8002954:	dc01      	bgt.n	800295a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002956:	4628      	mov	r0, r5
 8002958:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800295a:	f3af 8000 	nop.w
 800295e:	f804 0b01 	strb.w	r0, [r4], #1
 8002962:	e7f5      	b.n	8002950 <_read+0x8>

08002964 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002964:	b570      	push	{r4, r5, r6, lr}
 8002966:	460e      	mov	r6, r1
 8002968:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800296a:	460c      	mov	r4, r1
 800296c:	1ba3      	subs	r3, r4, r6
 800296e:	429d      	cmp	r5, r3
 8002970:	dc01      	bgt.n	8002976 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002972:	4628      	mov	r0, r5
 8002974:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002976:	f814 0b01 	ldrb.w	r0, [r4], #1
 800297a:	f3af 8000 	nop.w
 800297e:	e7f5      	b.n	800296c <_write+0x8>

08002980 <_close>:

int _close(int file)
{
	return -1;
}
 8002980:	f04f 30ff 	mov.w	r0, #4294967295
 8002984:	4770      	bx	lr

08002986 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002986:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800298a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800298c:	2000      	movs	r0, #0
 800298e:	4770      	bx	lr

08002990 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002990:	2001      	movs	r0, #1
 8002992:	4770      	bx	lr

08002994 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002994:	2000      	movs	r0, #0
 8002996:	4770      	bx	lr

08002998 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002998:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800299a:	4b0a      	ldr	r3, [pc, #40]	; (80029c4 <_sbrk+0x2c>)
 800299c:	6819      	ldr	r1, [r3, #0]
{
 800299e:	4602      	mov	r2, r0
	if (heap_end == 0)
 80029a0:	b909      	cbnz	r1, 80029a6 <_sbrk+0xe>
		heap_end = &end;
 80029a2:	4909      	ldr	r1, [pc, #36]	; (80029c8 <_sbrk+0x30>)
 80029a4:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 80029a6:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 80029a8:	4669      	mov	r1, sp
 80029aa:	4402      	add	r2, r0
 80029ac:	428a      	cmp	r2, r1
 80029ae:	d906      	bls.n	80029be <_sbrk+0x26>
	{
		errno = ENOMEM;
 80029b0:	f017 ff4c 	bl	801a84c <__errno>
 80029b4:	230c      	movs	r3, #12
 80029b6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80029b8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80029bc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80029be:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 80029c0:	e7fc      	b.n	80029bc <_sbrk+0x24>
 80029c2:	bf00      	nop
 80029c4:	20001608 	.word	0x20001608
 80029c8:	20012bb8 	.word	0x20012bb8

080029cc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80029cc:	4770      	bx	lr

080029ce <_ZN23ApplicationFontProviderD0Ev>:
 80029ce:	b510      	push	{r4, lr}
 80029d0:	2104      	movs	r1, #4
 80029d2:	4604      	mov	r4, r0
 80029d4:	f017 fedc 	bl	801a790 <_ZdlPvj>
 80029d8:	4620      	mov	r0, r4
 80029da:	bd10      	pop	{r4, pc}

080029dc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80029dc:	2901      	cmp	r1, #1
{
 80029de:	b508      	push	{r3, lr}
    switch (typography)
 80029e0:	d008      	beq.n	80029f4 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 80029e2:	d303      	bcc.n	80029ec <_ZN23ApplicationFontProvider7getFontEt+0x10>
 80029e4:	2902      	cmp	r1, #2
 80029e6:	d009      	beq.n	80029fc <_ZN23ApplicationFontProvider7getFontEt+0x20>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
 80029e8:	2000      	movs	r0, #0
 80029ea:	e002      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80029ec:	f000 ff72 	bl	80038d4 <_ZN17TypedTextDatabase8getFontsEv>
 80029f0:	6800      	ldr	r0, [r0, #0]
    }
}
 80029f2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80029f4:	f000 ff6e 	bl	80038d4 <_ZN17TypedTextDatabase8getFontsEv>
 80029f8:	6840      	ldr	r0, [r0, #4]
 80029fa:	e7fa      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80029fc:	f000 ff6a 	bl	80038d4 <_ZN17TypedTextDatabase8getFontsEv>
 8002a00:	6880      	ldr	r0, [r0, #8]
 8002a02:	e7f6      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>

08002a04 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002a04:	4800      	ldr	r0, [pc, #0]	; (8002a08 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002a06:	4770      	bx	lr
 8002a08:	0801bd84 	.word	0x0801bd84

08002a0c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002a0c:	200f      	movs	r0, #15
 8002a0e:	4770      	bx	lr

08002a10 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002a10:	b513      	push	{r0, r1, r4, lr}
 8002a12:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8002a14:	b149      	cbz	r1, 8002a2a <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8002a16:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 8002a18:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002a1a:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002a1e:	6802      	ldr	r2, [r0, #0]
 8002a20:	6894      	ldr	r4, [r2, #8]
 8002a22:	aa01      	add	r2, sp, #4
 8002a24:	47a0      	blx	r4
        return glyph;
    }
 8002a26:	b002      	add	sp, #8
 8002a28:	bd10      	pop	{r4, pc}
            return 0;
 8002a2a:	4608      	mov	r0, r1
 8002a2c:	e7fb      	b.n	8002a26 <_ZNK8touchgfx4Font8getGlyphEt+0x16>

08002a2e <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002a2e:	8940      	ldrh	r0, [r0, #10]
 8002a30:	4770      	bx	lr

08002a32 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002a32:	8980      	ldrh	r0, [r0, #12]
 8002a34:	4770      	bx	lr

08002a36 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002a36:	8880      	ldrh	r0, [r0, #4]
 8002a38:	4770      	bx	lr

08002a3a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002a3a:	7983      	ldrb	r3, [r0, #6]
 8002a3c:	8880      	ldrh	r0, [r0, #4]
 8002a3e:	4418      	add	r0, r3
    }
 8002a40:	b280      	uxth	r0, r0
 8002a42:	4770      	bx	lr

08002a44 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002a44:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a46:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002a4a:	4770      	bx	lr

08002a4c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002a4c:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a4e:	09c0      	lsrs	r0, r0, #7
 8002a50:	4770      	bx	lr

08002a52 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002a52:	4770      	bx	lr

08002a54 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002a54:	b510      	push	{r4, lr}
    }
 8002a56:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002a58:	4604      	mov	r4, r0
    }
 8002a5a:	f017 fe99 	bl	801a790 <_ZdlPvj>
 8002a5e:	4620      	mov	r0, r4
 8002a60:	bd10      	pop	{r4, pc}

08002a62 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002a62:	4770      	bx	lr

08002a64 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002a64:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002a68:	6808      	ldr	r0, [r1, #0]
 8002a6a:	6849      	ldr	r1, [r1, #4]
 8002a6c:	c303      	stmia	r3!, {r0, r1}
    };
 8002a6e:	4770      	bx	lr

08002a70 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002a70:	4770      	bx	lr

08002a72 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002a72:	4770      	bx	lr

08002a74 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002a74:	6041      	str	r1, [r0, #4]
    }
 8002a76:	4770      	bx	lr

08002a78 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002a78:	4770      	bx	lr

08002a7a <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	7203      	strb	r3, [r0, #8]
    }
 8002a7e:	4770      	bx	lr

08002a80 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a80:	4770      	bx	lr

08002a82 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED1Ev>:
 8002a82:	4770      	bx	lr

08002a84 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8002a84:	4770      	bx	lr

08002a86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 8002a86:	4770      	bx	lr

08002a88 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002a88:	4770      	bx	lr

08002a8a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a8a:	4770      	bx	lr

08002a8c <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 8002a8c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002a8e:	68c5      	ldr	r5, [r0, #12]
 8002a90:	6844      	ldr	r4, [r0, #4]
 8002a92:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8002a94:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002a96:	07ed      	lsls	r5, r5, #31
 8002a98:	eb04 0002 	add.w	r0, r4, r2
 8002a9c:	689b      	ldr	r3, [r3, #8]
 8002a9e:	bf48      	it	mi
 8002aa0:	58a2      	ldrmi	r2, [r4, r2]
    }
 8002aa2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002aa4:	bf48      	it	mi
 8002aa6:	58d3      	ldrmi	r3, [r2, r3]
 8002aa8:	4718      	bx	r3

08002aaa <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002aaa:	6843      	ldr	r3, [r0, #4]
 8002aac:	b12b      	cbz	r3, 8002aba <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x10>
 8002aae:	6883      	ldr	r3, [r0, #8]
 8002ab0:	b92b      	cbnz	r3, 8002abe <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvE7isValidEv+0x14>
 8002ab2:	68c0      	ldr	r0, [r0, #12]
 8002ab4:	f000 0001 	and.w	r0, r0, #1
 8002ab8:	4770      	bx	lr
 8002aba:	4618      	mov	r0, r3
 8002abc:	4770      	bx	lr
 8002abe:	2001      	movs	r0, #1
    }
 8002ac0:	4770      	bx	lr

08002ac2 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 8002ac2:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002ac4:	68c5      	ldr	r5, [r0, #12]
 8002ac6:	6844      	ldr	r4, [r0, #4]
 8002ac8:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8002aca:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002acc:	07ed      	lsls	r5, r5, #31
 8002ace:	eb04 0002 	add.w	r0, r4, r2
 8002ad2:	689b      	ldr	r3, [r3, #8]
 8002ad4:	bf48      	it	mi
 8002ad6:	58a2      	ldrmi	r2, [r4, r2]
    }
 8002ad8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002ada:	bf48      	it	mi
 8002adc:	58d3      	ldrmi	r3, [r2, r3]
 8002ade:	4718      	bx	r3

08002ae0 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002ae0:	6843      	ldr	r3, [r0, #4]
 8002ae2:	b12b      	cbz	r3, 8002af0 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x10>
 8002ae4:	6883      	ldr	r3, [r0, #8]
 8002ae6:	b92b      	cbnz	r3, 8002af4 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x14>
 8002ae8:	68c0      	ldr	r0, [r0, #12]
 8002aea:	f000 0001 	and.w	r0, r0, #1
 8002aee:	4770      	bx	lr
 8002af0:	4618      	mov	r0, r3
 8002af2:	4770      	bx	lr
 8002af4:	2001      	movs	r0, #1
    }
 8002af6:	4770      	bx	lr

08002af8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002af8:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002afa:	68c4      	ldr	r4, [r0, #12]
 8002afc:	6841      	ldr	r1, [r0, #4]
 8002afe:	1062      	asrs	r2, r4, #1
    virtual void execute()
 8002b00:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002b02:	07e4      	lsls	r4, r4, #31
 8002b04:	eb01 0002 	add.w	r0, r1, r2
 8002b08:	689b      	ldr	r3, [r3, #8]
 8002b0a:	bf48      	it	mi
 8002b0c:	588a      	ldrmi	r2, [r1, r2]
    }
 8002b0e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002b12:	bf48      	it	mi
 8002b14:	58d3      	ldrmi	r3, [r2, r3]
 8002b16:	4718      	bx	r3

08002b18 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002b18:	6843      	ldr	r3, [r0, #4]
 8002b1a:	b12b      	cbz	r3, 8002b28 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002b1c:	6883      	ldr	r3, [r0, #8]
 8002b1e:	b92b      	cbnz	r3, 8002b2c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002b20:	68c0      	ldr	r0, [r0, #12]
 8002b22:	f000 0001 	and.w	r0, r0, #1
 8002b26:	4770      	bx	lr
 8002b28:	4618      	mov	r0, r3
 8002b2a:	4770      	bx	lr
 8002b2c:	2001      	movs	r0, #1
    }
 8002b2e:	4770      	bx	lr

08002b30 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002b30:	b510      	push	{r4, lr}
 8002b32:	210c      	movs	r1, #12
 8002b34:	4604      	mov	r4, r0
 8002b36:	f017 fe2b 	bl	801a790 <_ZdlPvj>
 8002b3a:	4620      	mov	r0, r4
 8002b3c:	bd10      	pop	{r4, pc}

08002b3e <_ZN23FrontendApplicationBaseD0Ev>:
 8002b3e:	b510      	push	{r4, lr}
 8002b40:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002b44:	4604      	mov	r4, r0
 8002b46:	f017 fe23 	bl	801a790 <_ZdlPvj>
 8002b4a:	4620      	mov	r0, r4
 8002b4c:	bd10      	pop	{r4, pc}

08002b4e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b4e:	b510      	push	{r4, lr}
 8002b50:	2110      	movs	r1, #16
 8002b52:	4604      	mov	r4, r0
 8002b54:	f017 fe1c 	bl	801a790 <_ZdlPvj>
 8002b58:	4620      	mov	r0, r4
 8002b5a:	bd10      	pop	{r4, pc}

08002b5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 8002b5c:	b510      	push	{r4, lr}
 8002b5e:	2154      	movs	r1, #84	; 0x54
 8002b60:	4604      	mov	r4, r0
 8002b62:	f017 fe15 	bl	801a790 <_ZdlPvj>
 8002b66:	4620      	mov	r0, r4
 8002b68:	bd10      	pop	{r4, pc}

08002b6a <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b6a:	b510      	push	{r4, lr}
 8002b6c:	2110      	movs	r1, #16
 8002b6e:	4604      	mov	r4, r0
 8002b70:	f017 fe0e 	bl	801a790 <_ZdlPvj>
 8002b74:	4620      	mov	r0, r4
 8002b76:	bd10      	pop	{r4, pc}

08002b78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8002b78:	b510      	push	{r4, lr}
 8002b7a:	2154      	movs	r1, #84	; 0x54
 8002b7c:	4604      	mov	r4, r0
 8002b7e:	f017 fe07 	bl	801a790 <_ZdlPvj>
 8002b82:	4620      	mov	r0, r4
 8002b84:	bd10      	pop	{r4, pc}

08002b86 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED0Ev>:
 8002b86:	b510      	push	{r4, lr}
 8002b88:	2110      	movs	r1, #16
 8002b8a:	4604      	mov	r4, r0
 8002b8c:	f017 fe00 	bl	801a790 <_ZdlPvj>
 8002b90:	4620      	mov	r0, r4
 8002b92:	bd10      	pop	{r4, pc}

08002b94 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002b94:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8002b96:	f00a f94d 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 8002b9a:	6803      	ldr	r3, [r0, #0]
    }
 8002b9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002ba0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ba2:	4718      	bx	r3

08002ba4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE>:
    /**
     * Moves the Drawable.
     *
     * @param [in] d The Drawable to move.
     */
    virtual void tickMoveDrawable(Drawable& d)
 8002ba4:	4603      	mov	r3, r0
 8002ba6:	b410      	push	{r4}
    {
        if (&d == snapshotPtr)
 8002ba8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002baa:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8002bac:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8002bae:	d018      	beq.n	8002be2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x3e>
        {
            return;
        }

        switch (direction)
 8002bb0:	f893 204c 	ldrb.w	r2, [r3, #76]	; 0x4c
 8002bb4:	2a03      	cmp	r2, #3
 8002bb6:	d812      	bhi.n	8002bde <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x3a>
 8002bb8:	e8df f002 	tbb	[pc, r2]
 8002bbc:	02020b0b 	.word	0x02020b0b
        {
        case EAST:
        case WEST:
            d.moveRelative(calculatedValue, 0);
 8002bc0:	6802      	ldr	r2, [r0, #0]
 8002bc2:	f9b3 1052 	ldrsh.w	r1, [r3, #82]	; 0x52
 8002bc6:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002bc8:	2200      	movs	r2, #0
            break;
        case NORTH:
        case SOUTH:
            d.moveRelative(0, calculatedValue);
 8002bca:	4623      	mov	r3, r4
        default:
            // Special case, do not move. Class NoTransition can be used instead.
            done = true;
            break;
        }
    }
 8002bcc:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, calculatedValue);
 8002bd0:	4718      	bx	r3
 8002bd2:	6802      	ldr	r2, [r0, #0]
 8002bd4:	2100      	movs	r1, #0
 8002bd6:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002bd8:	f9b3 2052 	ldrsh.w	r2, [r3, #82]	; 0x52
 8002bdc:	e7f5      	b.n	8002bca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE+0x26>
            done = true;
 8002bde:	2201      	movs	r2, #1
 8002be0:	721a      	strb	r2, [r3, #8]
    }
 8002be2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002be6:	4770      	bx	lr

08002be8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE>:
    virtual void tickMoveDrawable(Drawable& d)
 8002be8:	4603      	mov	r3, r0
 8002bea:	b410      	push	{r4}
        if (&d == snapshotPtr)
 8002bec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002bee:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8002bf0:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8002bf2:	d018      	beq.n	8002c26 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x3e>
        switch (direction)
 8002bf4:	f893 204c 	ldrb.w	r2, [r3, #76]	; 0x4c
 8002bf8:	2a03      	cmp	r2, #3
 8002bfa:	d812      	bhi.n	8002c22 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x3a>
 8002bfc:	e8df f002 	tbb	[pc, r2]
 8002c00:	02020b0b 	.word	0x02020b0b
            d.moveRelative(calculatedValue, 0);
 8002c04:	6802      	ldr	r2, [r0, #0]
 8002c06:	f9b3 1052 	ldrsh.w	r1, [r3, #82]	; 0x52
 8002c0a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002c0c:	2200      	movs	r2, #0
            d.moveRelative(0, calculatedValue);
 8002c0e:	4623      	mov	r3, r4
    }
 8002c10:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, calculatedValue);
 8002c14:	4718      	bx	r3
 8002c16:	6802      	ldr	r2, [r0, #0]
 8002c18:	2100      	movs	r1, #0
 8002c1a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002c1c:	f9b3 2052 	ldrsh.w	r2, [r3, #82]	; 0x52
 8002c20:	e7f5      	b.n	8002c0e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x26>
            done = true;
 8002c22:	2201      	movs	r2, #1
 8002c24:	721a      	strb	r2, [r3, #8]
    }
 8002c26:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002c2a:	4770      	bx	lr

08002c2c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002c2c:	4b05      	ldr	r3, [pc, #20]	; (8002c44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 8002c2e:	781b      	ldrb	r3, [r3, #0]
 8002c30:	b13b      	cbz	r3, 8002c42 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
 8002c32:	6843      	ldr	r3, [r0, #4]
 8002c34:	b12b      	cbz	r3, 8002c42 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
 8002c36:	681a      	ldr	r2, [r3, #0]
 8002c38:	f100 010c 	add.w	r1, r0, #12
 8002c3c:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8002c3e:	4618      	mov	r0, r3
 8002c40:	4710      	bx	r2
    }
 8002c42:	4770      	bx	lr
 8002c44:	200123bb 	.word	0x200123bb

08002c48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE.part.5>:
            d.moveRelative(0, -HAL::DISPLAY_HEIGHT);
 8002c48:	4b03      	ldr	r3, [pc, #12]	; (8002c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE.part.5+0x10>)
 8002c4a:	881a      	ldrh	r2, [r3, #0]
 8002c4c:	6803      	ldr	r3, [r0, #0]
 8002c4e:	4252      	negs	r2, r2
 8002c50:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002c52:	b212      	sxth	r2, r2
 8002c54:	2100      	movs	r1, #0
 8002c56:	4718      	bx	r3
 8002c58:	200123b2 	.word	0x200123b2

08002c5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE>:
        switch (direction)
 8002c5c:	f890 204c 	ldrb.w	r2, [r0, #76]	; 0x4c
    virtual void initMoveDrawable(Drawable& d)
 8002c60:	b410      	push	{r4}
 8002c62:	460b      	mov	r3, r1
        switch (direction)
 8002c64:	2a03      	cmp	r2, #3
 8002c66:	d822      	bhi.n	8002cae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x52>
 8002c68:	e8df f002 	tbb	[pc, r2]
 8002c6c:	0d021a15 	.word	0x0d021a15
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 8002c70:	4910      	ldr	r1, [pc, #64]	; (8002cb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x58>)
 8002c72:	681a      	ldr	r2, [r3, #0]
 8002c74:	f9b1 1000 	ldrsh.w	r1, [r1]
 8002c78:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002c7a:	2200      	movs	r2, #0
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002c7c:	4618      	mov	r0, r3
 8002c7e:	4623      	mov	r3, r4
    }
 8002c80:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002c84:	4718      	bx	r3
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 8002c86:	4a0b      	ldr	r2, [pc, #44]	; (8002cb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x58>)
 8002c88:	8811      	ldrh	r1, [r2, #0]
 8002c8a:	681a      	ldr	r2, [r3, #0]
 8002c8c:	4249      	negs	r1, r1
 8002c8e:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002c90:	b209      	sxth	r1, r1
 8002c92:	2200      	movs	r2, #0
 8002c94:	e7f2      	b.n	8002c7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x20>
 8002c96:	4618      	mov	r0, r3
    }
 8002c98:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002c9c:	f7ff bfd4 	b.w	8002c48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE.part.5>
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002ca0:	681a      	ldr	r2, [r3, #0]
 8002ca2:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002ca4:	4a04      	ldr	r2, [pc, #16]	; (8002cb8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x5c>)
 8002ca6:	2100      	movs	r1, #0
 8002ca8:	f9b2 2000 	ldrsh.w	r2, [r2]
 8002cac:	e7e6      	b.n	8002c7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE+0x20>
    }
 8002cae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002cb2:	4770      	bx	lr
 8002cb4:	200123b0 	.word	0x200123b0
 8002cb8:	200123b2 	.word	0x200123b2

08002cbc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002cbc:	4b05      	ldr	r3, [pc, #20]	; (8002cd4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 8002cbe:	781b      	ldrb	r3, [r3, #0]
 8002cc0:	b13b      	cbz	r3, 8002cd2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
 8002cc2:	6843      	ldr	r3, [r0, #4]
 8002cc4:	b12b      	cbz	r3, 8002cd2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
 8002cc6:	681a      	ldr	r2, [r3, #0]
 8002cc8:	f100 010c 	add.w	r1, r0, #12
 8002ccc:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8002cce:	4618      	mov	r0, r3
 8002cd0:	4710      	bx	r2
    }
 8002cd2:	4770      	bx	lr
 8002cd4:	200123bb 	.word	0x200123bb

08002cd8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE>:
        switch (direction)
 8002cd8:	f890 204c 	ldrb.w	r2, [r0, #76]	; 0x4c
    virtual void initMoveDrawable(Drawable& d)
 8002cdc:	b410      	push	{r4}
 8002cde:	460b      	mov	r3, r1
        switch (direction)
 8002ce0:	2a03      	cmp	r2, #3
 8002ce2:	d822      	bhi.n	8002d2a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x52>
 8002ce4:	e8df f002 	tbb	[pc, r2]
 8002ce8:	0d021a15 	.word	0x0d021a15
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 8002cec:	4910      	ldr	r1, [pc, #64]	; (8002d30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x58>)
 8002cee:	681a      	ldr	r2, [r3, #0]
 8002cf0:	f9b1 1000 	ldrsh.w	r1, [r1]
 8002cf4:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002cf6:	2200      	movs	r2, #0
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	4623      	mov	r3, r4
    }
 8002cfc:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002d00:	4718      	bx	r3
            d.moveRelative(-HAL::DISPLAY_WIDTH, 0);
 8002d02:	4a0b      	ldr	r2, [pc, #44]	; (8002d30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x58>)
 8002d04:	8811      	ldrh	r1, [r2, #0]
 8002d06:	681a      	ldr	r2, [r3, #0]
 8002d08:	4249      	negs	r1, r1
 8002d0a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002d0c:	b209      	sxth	r1, r1
 8002d0e:	2200      	movs	r2, #0
 8002d10:	e7f2      	b.n	8002cf8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x20>
 8002d12:	4618      	mov	r0, r3
    }
 8002d14:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002d18:	f7ff bf96 	b.w	8002c48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE.part.5>
            d.moveRelative(0, HAL::DISPLAY_HEIGHT);
 8002d1c:	681a      	ldr	r2, [r3, #0]
 8002d1e:	6d54      	ldr	r4, [r2, #84]	; 0x54
 8002d20:	4a04      	ldr	r2, [pc, #16]	; (8002d34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x5c>)
 8002d22:	2100      	movs	r1, #0
 8002d24:	f9b2 2000 	ldrsh.w	r2, [r2]
 8002d28:	e7e6      	b.n	8002cf8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x20>
    }
 8002d2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002d2e:	4770      	bx	lr
 8002d30:	200123b0 	.word	0x200123b0
 8002d34:	200123b2 	.word	0x200123b2

08002d38 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8002d38:	4b29      	ldr	r3, [pc, #164]	; (8002de0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa8>)
 8002d3a:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8002d3c:	b510      	push	{r4, lr}
 8002d3e:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 8002d40:	b913      	cbnz	r3, 8002d48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x10>
            done = true;
 8002d42:	2301      	movs	r3, #1
 8002d44:	7203      	strb	r3, [r0, #8]
    }
 8002d46:	bd10      	pop	{r4, pc}
        animationCounter++;
 8002d48:	f890 004e 	ldrb.w	r0, [r0, #78]	; 0x4e
        if (animationCounter <= animationSteps)
 8002d4c:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
        animationCounter++;
 8002d50:	3001      	adds	r0, #1
 8002d52:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8002d54:	4298      	cmp	r0, r3
        animationCounter++;
 8002d56:	f884 004e 	strb.w	r0, [r4, #78]	; 0x4e
        if (animationCounter <= animationSteps)
 8002d5a:	d818      	bhi.n	8002d8e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x56>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002d5c:	f9b4 2050 	ldrsh.w	r2, [r4, #80]	; 0x50
 8002d60:	2100      	movs	r1, #0
 8002d62:	f00b f9f3 	bl	800e14c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002d66:	b283      	uxth	r3, r0
 8002d68:	f013 0201 	ands.w	r2, r3, #1
 8002d6c:	d015      	beq.n	8002d9a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x62>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002d6e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002d72:	2800      	cmp	r0, #0
 8002d74:	bfd8      	it	le
 8002d76:	460a      	movle	r2, r1
 8002d78:	4413      	add	r3, r2
 8002d7a:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
        switch (direction)
 8002d7e:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 8002d82:	2b03      	cmp	r3, #3
 8002d84:	d829      	bhi.n	8002dda <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa2>
 8002d86:	e8df f003 	tbb	[pc, r3]
 8002d8a:	1f1f      	.short	0x1f1f
 8002d8c:	0b0b      	.short	0x0b0b
            done = true;
 8002d8e:	2301      	movs	r3, #1
 8002d90:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002d92:	2300      	movs	r3, #0
 8002d94:	f884 304e 	strb.w	r3, [r4, #78]	; 0x4e
            return;
 8002d98:	e7d5      	b.n	8002d46 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002d9a:	f8a4 0052 	strh.w	r0, [r4, #82]	; 0x52
 8002d9e:	e7ee      	b.n	8002d7e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x46>
            calculatedValue -= snapshot.getX();
 8002da0:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 8002da4:	8a23      	ldrh	r3, [r4, #16]
 8002da6:	1ac9      	subs	r1, r1, r3
 8002da8:	b209      	sxth	r1, r1
 8002daa:	f8a4 1052 	strh.w	r1, [r4, #82]	; 0x52
            snapshot.moveRelative(calculatedValue, 0);
 8002dae:	2200      	movs	r2, #0
            snapshot.moveRelative(0, calculatedValue);
 8002db0:	f104 000c 	add.w	r0, r4, #12
 8002db4:	f00a fd3d 	bl	800d832 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8002db8:	6860      	ldr	r0, [r4, #4]
 8002dba:	6803      	ldr	r3, [r0, #0]
 8002dbc:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8002dc0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    }
 8002dc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002dc6:	4718      	bx	r3
            calculatedValue -= snapshot.getY();
 8002dc8:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
 8002dcc:	8a63      	ldrh	r3, [r4, #18]
 8002dce:	1ad2      	subs	r2, r2, r3
 8002dd0:	b212      	sxth	r2, r2
 8002dd2:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
            snapshot.moveRelative(0, calculatedValue);
 8002dd6:	2100      	movs	r1, #0
 8002dd8:	e7ea      	b.n	8002db0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x78>
            done = true;
 8002dda:	2301      	movs	r3, #1
 8002ddc:	7223      	strb	r3, [r4, #8]
            break;
 8002dde:	e7eb      	b.n	8002db8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>
 8002de0:	200123bb 	.word	0x200123bb

08002de4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8002de4:	4b29      	ldr	r3, [pc, #164]	; (8002e8c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa8>)
 8002de6:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 8002de8:	b510      	push	{r4, lr}
 8002dea:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 8002dec:	b913      	cbnz	r3, 8002df4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x10>
            done = true;
 8002dee:	2301      	movs	r3, #1
 8002df0:	7203      	strb	r3, [r0, #8]
    }
 8002df2:	bd10      	pop	{r4, pc}
        animationCounter++;
 8002df4:	f890 004e 	ldrb.w	r0, [r0, #78]	; 0x4e
        if (animationCounter <= animationSteps)
 8002df8:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
        animationCounter++;
 8002dfc:	3001      	adds	r0, #1
 8002dfe:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8002e00:	4298      	cmp	r0, r3
        animationCounter++;
 8002e02:	f884 004e 	strb.w	r0, [r4, #78]	; 0x4e
        if (animationCounter <= animationSteps)
 8002e06:	d818      	bhi.n	8002e3a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x56>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002e08:	f9b4 2050 	ldrsh.w	r2, [r4, #80]	; 0x50
 8002e0c:	2100      	movs	r1, #0
 8002e0e:	f00b f99d 	bl	800e14c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002e12:	b283      	uxth	r3, r0
 8002e14:	f013 0201 	ands.w	r2, r3, #1
 8002e18:	d015      	beq.n	8002e46 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x62>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002e1a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002e1e:	2800      	cmp	r0, #0
 8002e20:	bfd8      	it	le
 8002e22:	460a      	movle	r2, r1
 8002e24:	4413      	add	r3, r2
 8002e26:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
        switch (direction)
 8002e2a:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 8002e2e:	2b03      	cmp	r3, #3
 8002e30:	d829      	bhi.n	8002e86 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa2>
 8002e32:	e8df f003 	tbb	[pc, r3]
 8002e36:	1f1f      	.short	0x1f1f
 8002e38:	0b0b      	.short	0x0b0b
            done = true;
 8002e3a:	2301      	movs	r3, #1
 8002e3c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002e3e:	2300      	movs	r3, #0
 8002e40:	f884 304e 	strb.w	r3, [r4, #78]	; 0x4e
            return;
 8002e44:	e7d5      	b.n	8002df2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002e46:	f8a4 0052 	strh.w	r0, [r4, #82]	; 0x52
 8002e4a:	e7ee      	b.n	8002e2a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x46>
            calculatedValue -= snapshot.getX();
 8002e4c:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 8002e50:	8a23      	ldrh	r3, [r4, #16]
 8002e52:	1ac9      	subs	r1, r1, r3
 8002e54:	b209      	sxth	r1, r1
 8002e56:	f8a4 1052 	strh.w	r1, [r4, #82]	; 0x52
            snapshot.moveRelative(calculatedValue, 0);
 8002e5a:	2200      	movs	r2, #0
            snapshot.moveRelative(0, calculatedValue);
 8002e5c:	f104 000c 	add.w	r0, r4, #12
 8002e60:	f00a fce7 	bl	800d832 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8002e64:	6860      	ldr	r0, [r4, #4]
 8002e66:	6803      	ldr	r3, [r0, #0]
 8002e68:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8002e6c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    }
 8002e6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002e72:	4718      	bx	r3
            calculatedValue -= snapshot.getY();
 8002e74:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
 8002e78:	8a63      	ldrh	r3, [r4, #18]
 8002e7a:	1ad2      	subs	r2, r2, r3
 8002e7c:	b212      	sxth	r2, r2
 8002e7e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
            snapshot.moveRelative(0, calculatedValue);
 8002e82:	2100      	movs	r1, #0
 8002e84:	e7ea      	b.n	8002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x78>
            done = true;
 8002e86:	2301      	movs	r3, #1
 8002e88:	7223      	strb	r3, [r4, #8]
            break;
 8002e8a:	e7eb      	b.n	8002e64 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
 8002e8c:	200123bb 	.word	0x200123bb

08002e90 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002e90:	b510      	push	{r4, lr}
 8002e92:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002e94:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002e98:	b158      	cbz	r0, 8002eb2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002e9a:	6803      	ldr	r3, [r0, #0]
 8002e9c:	68db      	ldr	r3, [r3, #12]
 8002e9e:	4798      	blx	r3
 8002ea0:	b138      	cbz	r0, 8002eb2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002ea2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002ea6:	6803      	ldr	r3, [r0, #0]
 8002ea8:	689b      	ldr	r3, [r3, #8]
 8002eaa:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002eac:	2300      	movs	r3, #0
 8002eae:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002eb2:	bd10      	pop	{r4, pc}

08002eb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
    virtual void init()
 8002eb4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 8002eb6:	4b0c      	ldr	r3, [pc, #48]	; (8002ee8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x34>)
 8002eb8:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8002eba:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8002ebc:	b18b      	cbz	r3, 8002ee2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x2e>
    {
 8002ebe:	4b0b      	ldr	r3, [pc, #44]	; (8002eec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>)
        this->pmemfun_1 = pmemfun_1;
 8002ec0:	221c      	movs	r2, #28
        this->pobject = pobject;
 8002ec2:	e9cd 3000 	strd	r3, r0, [sp]
        this->pmemfun_1 = pmemfun_1;
 8002ec6:	2301      	movs	r3, #1
 8002ec8:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8002ecc:	6840      	ldr	r0, [r0, #4]
 8002ece:	6803      	ldr	r3, [r0, #0]
 8002ed0:	4669      	mov	r1, sp
 8002ed2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002ed4:	4798      	blx	r3
            screenContainer->add(snapshot);
 8002ed6:	6860      	ldr	r0, [r4, #4]
 8002ed8:	6803      	ldr	r3, [r0, #0]
 8002eda:	f104 010c 	add.w	r1, r4, #12
 8002ede:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002ee0:	4798      	blx	r3
    }
 8002ee2:	b004      	add	sp, #16
 8002ee4:	bd10      	pop	{r4, pc}
 8002ee6:	bf00      	nop
 8002ee8:	200123bb 	.word	0x200123bb
 8002eec:	0801bf8c 	.word	0x0801bf8c

08002ef0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8002ef0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 8002ef2:	4b0c      	ldr	r3, [pc, #48]	; (8002f24 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x34>)
 8002ef4:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8002ef6:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8002ef8:	b18b      	cbz	r3, 8002f1e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
    {
 8002efa:	4b0b      	ldr	r3, [pc, #44]	; (8002f28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>)
        this->pmemfun_1 = pmemfun_1;
 8002efc:	221c      	movs	r2, #28
        this->pobject = pobject;
 8002efe:	e9cd 3000 	strd	r3, r0, [sp]
        this->pmemfun_1 = pmemfun_1;
 8002f02:	2301      	movs	r3, #1
 8002f04:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8002f08:	6840      	ldr	r0, [r0, #4]
 8002f0a:	6803      	ldr	r3, [r0, #0]
 8002f0c:	4669      	mov	r1, sp
 8002f0e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002f10:	4798      	blx	r3
            screenContainer->add(snapshot);
 8002f12:	6860      	ldr	r0, [r4, #4]
 8002f14:	6803      	ldr	r3, [r0, #0]
 8002f16:	f104 010c 	add.w	r1, r4, #12
 8002f1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002f1c:	4798      	blx	r3
    }
 8002f1e:	b004      	add	sp, #16
 8002f20:	bd10      	pop	{r4, pc}
 8002f22:	bf00      	nop
 8002f24:	200123bb 	.word	0x200123bb
 8002f28:	0801bf48 	.word	0x0801bf48

08002f2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/sequencescreen_screen/sequenceScreenView.hpp>
#include <gui/sequencescreen_screen/sequenceScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002f2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002f2e:	4604      	mov	r4, r0
 8002f30:	4617      	mov	r7, r2
 8002f32:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002f34:	f009 ff9e 	bl	800ce74 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002f38:	4b14      	ldr	r3, [pc, #80]	; (8002f8c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8002f3a:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8002f3e:	601c      	str	r4, [r3, #0]
        return instance;
 8002f40:	4e13      	ldr	r6, [pc, #76]	; (8002f90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8002f42:	4b14      	ldr	r3, [pc, #80]	; (8002f94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8002f44:	6023      	str	r3, [r4, #0]
          pendingScreenTransitionCallback(0)
 8002f46:	2500      	movs	r5, #0
 8002f48:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun_0(0)
 8002f4a:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8002f4e:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8002f52:	4b11      	ldr	r3, [pc, #68]	; (8002f98 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8002f54:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f58:	6803      	ldr	r3, [r0, #0]
 8002f5a:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8002f5e:	689b      	ldr	r3, [r3, #8]
 8002f60:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 8002f64:	2101      	movs	r1, #1
 8002f66:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 8002f6a:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002f6e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002f70:	4628      	mov	r0, r5
 8002f72:	f000 fc65 	bl	8003840 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002f76:	6833      	ldr	r3, [r6, #0]
 8002f78:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002f7c:	b10a      	cbz	r2, 8002f82 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 8002f7e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002f80:	b900      	cbnz	r0, 8002f84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 8002f82:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002f84:	f010 fb81 	bl	801368a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002f88:	4620      	mov	r0, r4
 8002f8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002f8c:	20012428 	.word	0x20012428
 8002f90:	200123bc 	.word	0x200123bc
 8002f94:	0801bee0 	.word	0x0801bee0
 8002f98:	0801bec8 	.word	0x0801bec8

08002f9c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002f9c:	4b06      	ldr	r3, [pc, #24]	; (8002fb8 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv+0x1c>)
 8002f9e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002fa2:	2300      	movs	r3, #0
 8002fa4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002fa8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002fac:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002fb0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002fb4:	4770      	bx	lr
 8002fb6:	bf00      	nop
 8002fb8:	0800313d 	.word	0x0800313d

08002fbc <_ZN23FrontendApplicationBase39gotomainScreenScreenSlideTransitionWestEv>:
 8002fbc:	4b06      	ldr	r3, [pc, #24]	; (8002fd8 <_ZN23FrontendApplicationBase39gotomainScreenScreenSlideTransitionWestEv+0x1c>)
 8002fbe:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002fc2:	2300      	movs	r3, #0
 8002fc4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
}

void FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002fc8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002fcc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002fd0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002fd4:	4770      	bx	lr
 8002fd6:	bf00      	nop
 8002fd8:	08003335 	.word	0x08003335

08002fdc <_ZN23FrontendApplicationBase43gotosequenceScreenScreenSlideTransitionEastEv>:
 8002fdc:	4b06      	ldr	r3, [pc, #24]	; (8002ff8 <_ZN23FrontendApplicationBase43gotosequenceScreenScreenSlideTransitionEastEv+0x1c>)
 8002fde:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002fe2:	2300      	movs	r3, #0
 8002fe4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// sequenceScreen

void FrontendApplicationBase::gotosequenceScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotosequenceScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002fe8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002fec:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ff0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ff4:	4770      	bx	lr
 8002ff6:	bf00      	nop
 8002ff8:	0800352d 	.word	0x0800352d

08002ffc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002ffc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003000:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003002:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003004:	f8dd a020 	ldr.w	sl, [sp, #32]
 8003008:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800300a:	6803      	ldr	r3, [r0, #0]
 800300c:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800300e:	4688      	mov	r8, r1
 8003010:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003012:	4798      	blx	r3
 8003014:	f5b0 6faa 	cmp.w	r0, #1360	; 0x550
 8003018:	d205      	bcs.n	8003026 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 800301a:	4b42      	ldr	r3, [pc, #264]	; (8003124 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800301c:	4a42      	ldr	r2, [pc, #264]	; (8003128 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800301e:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003020:	4842      	ldr	r0, [pc, #264]	; (800312c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8003022:	f017 fbe1 	bl	801a7e8 <__assert_func>
 8003026:	6868      	ldr	r0, [r5, #4]
 8003028:	6803      	ldr	r3, [r0, #0]
 800302a:	6a1b      	ldr	r3, [r3, #32]
 800302c:	4798      	blx	r3
 800302e:	280f      	cmp	r0, #15
 8003030:	d803      	bhi.n	800303a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 8003032:	4b3f      	ldr	r3, [pc, #252]	; (8003130 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8003034:	4a3c      	ldr	r2, [pc, #240]	; (8003128 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8003036:	21a8      	movs	r1, #168	; 0xa8
 8003038:	e7f2      	b.n	8003020 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800303a:	68e8      	ldr	r0, [r5, #12]
 800303c:	6803      	ldr	r3, [r0, #0]
 800303e:	6a1b      	ldr	r3, [r3, #32]
 8003040:	4798      	blx	r3
 8003042:	280b      	cmp	r0, #11
 8003044:	d803      	bhi.n	800304e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 8003046:	4b3b      	ldr	r3, [pc, #236]	; (8003134 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8003048:	4a37      	ldr	r2, [pc, #220]	; (8003128 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800304a:	21a9      	movs	r1, #169	; 0xa9
 800304c:	e7e8      	b.n	8003020 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 800304e:	f009 fef1 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 8003052:	f009 fef5 	bl	800ce40 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8003056:	f8d9 0000 	ldr.w	r0, [r9]
 800305a:	b110      	cbz	r0, 8003062 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 800305c:	6803      	ldr	r3, [r0, #0]
 800305e:	68db      	ldr	r3, [r3, #12]
 8003060:	4798      	blx	r3
    if (*currentTrans)
 8003062:	f8d9 0000 	ldr.w	r0, [r9]
 8003066:	b110      	cbz	r0, 800306e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8003068:	6803      	ldr	r3, [r0, #0]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	4798      	blx	r3
    if (*currentScreen)
 800306e:	6838      	ldr	r0, [r7, #0]
 8003070:	b110      	cbz	r0, 8003078 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 8003072:	6803      	ldr	r3, [r0, #0]
 8003074:	695b      	ldr	r3, [r3, #20]
 8003076:	4798      	blx	r3
    if (*currentPresenter)
 8003078:	f8d8 0000 	ldr.w	r0, [r8]
 800307c:	b110      	cbz	r0, 8003084 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 800307e:	6803      	ldr	r3, [r0, #0]
 8003080:	685b      	ldr	r3, [r3, #4]
 8003082:	4798      	blx	r3
    if (*currentScreen)
 8003084:	6838      	ldr	r0, [r7, #0]
 8003086:	b110      	cbz	r0, 800308e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8003088:	6803      	ldr	r3, [r0, #0]
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	4798      	blx	r3
    if (*currentPresenter)
 800308e:	f8d8 0000 	ldr.w	r0, [r8]
 8003092:	b110      	cbz	r0, 800309a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 8003094:	6803      	ldr	r3, [r0, #0]
 8003096:	689b      	ldr	r3, [r3, #8]
 8003098:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800309a:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800309c:	6803      	ldr	r3, [r0, #0]
 800309e:	2100      	movs	r1, #0
 80030a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030a2:	4798      	blx	r3
 80030a4:	4604      	mov	r4, r0
 80030a6:	b120      	cbz	r0, 80030b2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        : screenContainer(0), done(false)
 80030a8:	2300      	movs	r3, #0
 80030aa:	6043      	str	r3, [r0, #4]
 80030ac:	7203      	strb	r3, [r0, #8]
 80030ae:	4b22      	ldr	r3, [pc, #136]	; (8003138 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 80030b0:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80030b2:	68a8      	ldr	r0, [r5, #8]
 80030b4:	6803      	ldr	r3, [r0, #0]
 80030b6:	2100      	movs	r1, #0
 80030b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030ba:	4798      	blx	r3
 80030bc:	4606      	mov	r6, r0
 80030be:	b108      	cbz	r0, 80030c4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
 80030c0:	f001 fa24 	bl	800450c <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80030c4:	6868      	ldr	r0, [r5, #4]
 80030c6:	6803      	ldr	r3, [r0, #0]
 80030c8:	2100      	movs	r1, #0
 80030ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030cc:	4798      	blx	r3
 80030ce:	4605      	mov	r5, r0
 80030d0:	b110      	cbz	r0, 80030d8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 80030d2:	4631      	mov	r1, r6
 80030d4:	f001 f9a0 	bl	8004418 <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 80030d8:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80030dc:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 80030e0:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80030e2:	b1e5      	cbz	r5, 800311e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 80030e4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80030e6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80030ea:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80030ec:	f8c5 a008 	str.w	sl, [r5, #8]
 80030f0:	4630      	mov	r0, r6
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80030f2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80030f4:	68db      	ldr	r3, [r3, #12]
 80030f6:	4798      	blx	r3
    newPresenter->activate();
 80030f8:	682b      	ldr	r3, [r5, #0]
 80030fa:	4628      	mov	r0, r5
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003100:	4621      	mov	r1, r4
 8003102:	4630      	mov	r0, r6
 8003104:	f00b f81c 	bl	800e140 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003108:	6823      	ldr	r3, [r4, #0]
 800310a:	4620      	mov	r0, r4
 800310c:	691b      	ldr	r3, [r3, #16]
 800310e:	4798      	blx	r3
    newTransition->invalidate();
 8003110:	6823      	ldr	r3, [r4, #0]
 8003112:	4620      	mov	r0, r4
 8003114:	695b      	ldr	r3, [r3, #20]
 8003116:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8003118:	4628      	mov	r0, r5
 800311a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 800311e:	462b      	mov	r3, r5
 8003120:	e7e1      	b.n	80030e6 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 8003122:	bf00      	nop
 8003124:	0801bfc8 	.word	0x0801bfc8
 8003128:	0801c1e3 	.word	0x0801c1e3
 800312c:	0801c056 	.word	0x0801c056
 8003130:	0801c09d 	.word	0x0801c09d
 8003134:	0801c140 	.word	0x0801c140
 8003138:	0801bf24 	.word	0x0801bf24

0800313c <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv>:
{
 800313c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800313e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8003142:	9300      	str	r3, [sp, #0]
 8003144:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8003148:	4b04      	ldr	r3, [pc, #16]	; (800315c <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x20>)
 800314a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 800314e:	4804      	ldr	r0, [pc, #16]	; (8003160 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x24>)
 8003150:	f7ff ff54 	bl	8002ffc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8003154:	b003      	add	sp, #12
 8003156:	f85d fb04 	ldr.w	pc, [sp], #4
 800315a:	bf00      	nop
 800315c:	2001241c 	.word	0x2001241c
 8003160:	20012418 	.word	0x20012418

08003164 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003164:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003168:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800316a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800316c:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800316e:	6803      	ldr	r3, [r0, #0]
 8003170:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003172:	4688      	mov	r8, r1
 8003174:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003176:	4798      	blx	r3
 8003178:	f5b0 6faa 	cmp.w	r0, #1360	; 0x550
 800317c:	d205      	bcs.n	800318a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
 800317e:	4b63      	ldr	r3, [pc, #396]	; (800330c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a8>)
 8003180:	4a63      	ldr	r2, [pc, #396]	; (8003310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 8003182:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003184:	4863      	ldr	r0, [pc, #396]	; (8003314 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>)
 8003186:	f017 fb2f 	bl	801a7e8 <__assert_func>
 800318a:	6868      	ldr	r0, [r5, #4]
 800318c:	6803      	ldr	r3, [r0, #0]
 800318e:	6a1b      	ldr	r3, [r3, #32]
 8003190:	4798      	blx	r3
 8003192:	280f      	cmp	r0, #15
 8003194:	d803      	bhi.n	800319e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3a>
 8003196:	4b60      	ldr	r3, [pc, #384]	; (8003318 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>)
 8003198:	4a5d      	ldr	r2, [pc, #372]	; (8003310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 800319a:	21a8      	movs	r1, #168	; 0xa8
 800319c:	e7f2      	b.n	8003184 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800319e:	68e8      	ldr	r0, [r5, #12]
 80031a0:	6803      	ldr	r3, [r0, #0]
 80031a2:	6a1b      	ldr	r3, [r3, #32]
 80031a4:	4798      	blx	r3
 80031a6:	2853      	cmp	r0, #83	; 0x53
 80031a8:	d803      	bhi.n	80031b2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x4e>
 80031aa:	4b5c      	ldr	r3, [pc, #368]	; (800331c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b8>)
 80031ac:	4a58      	ldr	r2, [pc, #352]	; (8003310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 80031ae:	21a9      	movs	r1, #169	; 0xa9
 80031b0:	e7e8      	b.n	8003184 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80031b2:	f009 fe3f 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 80031b6:	f009 fe43 	bl	800ce40 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80031ba:	f8d9 0000 	ldr.w	r0, [r9]
 80031be:	b110      	cbz	r0, 80031c6 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x62>
        (*currentTrans)->tearDown();
 80031c0:	6803      	ldr	r3, [r0, #0]
 80031c2:	68db      	ldr	r3, [r3, #12]
 80031c4:	4798      	blx	r3
    if (*currentTrans)
 80031c6:	f8d9 0000 	ldr.w	r0, [r9]
 80031ca:	b110      	cbz	r0, 80031d2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x6e>
        (*currentTrans)->~Transition();
 80031cc:	6803      	ldr	r3, [r0, #0]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	4798      	blx	r3
    if (*currentScreen)
 80031d2:	6838      	ldr	r0, [r7, #0]
 80031d4:	b110      	cbz	r0, 80031dc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x78>
        (*currentScreen)->tearDownScreen();
 80031d6:	6803      	ldr	r3, [r0, #0]
 80031d8:	695b      	ldr	r3, [r3, #20]
 80031da:	4798      	blx	r3
    if (*currentPresenter)
 80031dc:	f8d8 0000 	ldr.w	r0, [r8]
 80031e0:	b110      	cbz	r0, 80031e8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x84>
        (*currentPresenter)->deactivate();
 80031e2:	6803      	ldr	r3, [r0, #0]
 80031e4:	685b      	ldr	r3, [r3, #4]
 80031e6:	4798      	blx	r3
    if (*currentScreen)
 80031e8:	6838      	ldr	r0, [r7, #0]
 80031ea:	b110      	cbz	r0, 80031f2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8e>
        (*currentScreen)->~Screen();
 80031ec:	6803      	ldr	r3, [r0, #0]
 80031ee:	681b      	ldr	r3, [r3, #0]
 80031f0:	4798      	blx	r3
    if (*currentPresenter)
 80031f2:	f8d8 0000 	ldr.w	r0, [r8]
 80031f6:	b110      	cbz	r0, 80031fe <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9a>
        (*currentPresenter)->~Presenter();
 80031f8:	6803      	ldr	r3, [r0, #0]
 80031fa:	689b      	ldr	r3, [r3, #8]
 80031fc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80031fe:	68e8      	ldr	r0, [r5, #12]
 8003200:	6803      	ldr	r3, [r0, #0]
 8003202:	2100      	movs	r1, #0
 8003204:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003206:	4798      	blx	r3
 8003208:	4604      	mov	r4, r0
 800320a:	2800      	cmp	r0, #0
 800320c:	d03e      	beq.n	800328c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
          calculatedValue(0)
 800320e:	4682      	mov	sl, r0
 8003210:	2200      	movs	r2, #0
 8003212:	4943      	ldr	r1, [pc, #268]	; (8003320 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1bc>)
 8003214:	6042      	str	r2, [r0, #4]
 8003216:	7202      	strb	r2, [r0, #8]
 8003218:	f84a 1b0c 	str.w	r1, [sl], #12
 800321c:	4650      	mov	r0, sl
 800321e:	9201      	str	r2, [sp, #4]
 8003220:	f008 f8da 	bl	800b3d8 <_ZN8touchgfx14SnapshotWidgetC1Ev>
    {
 8003224:	493f      	ldr	r1, [pc, #252]	; (8003324 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c0>)
 8003226:	9a01      	ldr	r2, [sp, #4]
 8003228:	f8c4 a038 	str.w	sl, [r4, #56]	; 0x38
        this->pobject = pobject;
 800322c:	e9c4 140f 	strd	r1, r4, [r4, #60]	; 0x3c
        this->pmemfun_1 = pmemfun_1;
 8003230:	2320      	movs	r3, #32
 8003232:	2101      	movs	r1, #1
 8003234:	e9c4 3111 	strd	r3, r1, [r4, #68]	; 0x44
 8003238:	2103      	movs	r1, #3
 800323a:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
 800323e:	2114      	movs	r1, #20
 8003240:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
        if (HAL::USE_ANIMATION_STORAGE)
 8003244:	4938      	ldr	r1, [pc, #224]	; (8003328 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c4>)
          calculatedValue(0)
 8003246:	f884 204e 	strb.w	r2, [r4, #78]	; 0x4e
        if (HAL::USE_ANIMATION_STORAGE)
 800324a:	7809      	ldrb	r1, [r1, #0]
          calculatedValue(0)
 800324c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
        if (HAL::USE_ANIMATION_STORAGE)
 8003250:	b1e1      	cbz	r1, 800328c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003252:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8003330 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1cc>
 8003256:	4e35      	ldr	r6, [pc, #212]	; (800332c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c8>)
 8003258:	f9bb 0000 	ldrsh.w	r0, [fp]
 800325c:	f9b6 1000 	ldrsh.w	r1, [r6]
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003260:	82a0      	strh	r0, [r4, #20]
        rect.x = x;
 8003262:	6122      	str	r2, [r4, #16]
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003264:	82e1      	strh	r1, [r4, #22]
            snapshot.makeSnapshot();
 8003266:	4650      	mov	r0, sl
 8003268:	f008 f831 	bl	800b2ce <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            switch (direction)
 800326c:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 8003270:	2b03      	cmp	r3, #3
 8003272:	d845      	bhi.n	8003300 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x19c>
 8003274:	e8df f003 	tbb	[pc, r3]
 8003278:	06024240 	.word	0x06024240
                targetValue = -HAL::DISPLAY_WIDTH;
 800327c:	f8bb 3000 	ldrh.w	r3, [fp]
                targetValue = -HAL::DISPLAY_HEIGHT;
 8003280:	425b      	negs	r3, r3
 8003282:	e001      	b.n	8003288 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
                targetValue = HAL::DISPLAY_WIDTH;
 8003284:	f8bb 3000 	ldrh.w	r3, [fp]
                targetValue = HAL::DISPLAY_HEIGHT;
 8003288:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800328c:	68a8      	ldr	r0, [r5, #8]
 800328e:	6803      	ldr	r3, [r0, #0]
 8003290:	2100      	movs	r1, #0
 8003292:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003294:	4798      	blx	r3
 8003296:	4606      	mov	r6, r0
 8003298:	b108      	cbz	r0, 800329e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13a>
 800329a:	f001 f937 	bl	800450c <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800329e:	6868      	ldr	r0, [r5, #4]
 80032a0:	6803      	ldr	r3, [r0, #0]
 80032a2:	2100      	movs	r1, #0
 80032a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032a6:	4798      	blx	r3
 80032a8:	4605      	mov	r5, r0
 80032aa:	b110      	cbz	r0, 80032b2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14e>
 80032ac:	4631      	mov	r1, r6
 80032ae:	f001 f8b3 	bl	8004418 <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 80032b2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80032b6:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 80032ba:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80032bc:	b31d      	cbz	r5, 8003306 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a2>
 80032be:	1d2b      	adds	r3, r5, #4
 80032c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80032c2:	6013      	str	r3, [r2, #0]
    newScreen->setupScreen();
 80032c4:	6833      	ldr	r3, [r6, #0]
 80032c6:	60aa      	str	r2, [r5, #8]
 80032c8:	4630      	mov	r0, r6
 80032ca:	63f5      	str	r5, [r6, #60]	; 0x3c
 80032cc:	68db      	ldr	r3, [r3, #12]
 80032ce:	4798      	blx	r3
    newPresenter->activate();
 80032d0:	682b      	ldr	r3, [r5, #0]
 80032d2:	4628      	mov	r0, r5
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80032d8:	4621      	mov	r1, r4
 80032da:	4630      	mov	r0, r6
 80032dc:	f00a ff30 	bl	800e140 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80032e0:	6823      	ldr	r3, [r4, #0]
 80032e2:	4620      	mov	r0, r4
 80032e4:	691b      	ldr	r3, [r3, #16]
 80032e6:	4798      	blx	r3
    newTransition->invalidate();
 80032e8:	6823      	ldr	r3, [r4, #0]
 80032ea:	4620      	mov	r0, r4
 80032ec:	695b      	ldr	r3, [r3, #20]
 80032ee:	4798      	blx	r3
}
 80032f0:	4628      	mov	r0, r5
 80032f2:	b003      	add	sp, #12
 80032f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032f8:	8833      	ldrh	r3, [r6, #0]
 80032fa:	e7c5      	b.n	8003288 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
                targetValue = -HAL::DISPLAY_HEIGHT;
 80032fc:	8833      	ldrh	r3, [r6, #0]
 80032fe:	e7bf      	b.n	8003280 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11c>
                done = true;
 8003300:	2301      	movs	r3, #1
 8003302:	7223      	strb	r3, [r4, #8]
 8003304:	e7c2      	b.n	800328c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
    model->bind(newPresenter);
 8003306:	462b      	mov	r3, r5
 8003308:	e7da      	b.n	80032c0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>
 800330a:	bf00      	nop
 800330c:	0801bfc8 	.word	0x0801bfc8
 8003310:	0801c2ed 	.word	0x0801c2ed
 8003314:	0801c056 	.word	0x0801c056
 8003318:	0801c09d 	.word	0x0801c09d
 800331c:	0801c140 	.word	0x0801c140
 8003320:	0801bfa4 	.word	0x0801bfa4
 8003324:	0801bf8c 	.word	0x0801bf8c
 8003328:	200123bb 	.word	0x200123bb
 800332c:	200123b2 	.word	0x200123b2
 8003330:	200123b0 	.word	0x200123b0

08003334 <_ZN23FrontendApplicationBase43gotomainScreenScreenSlideTransitionWestImplEv>:
{
 8003334:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003336:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800333a:	9300      	str	r3, [sp, #0]
 800333c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8003340:	4b04      	ldr	r3, [pc, #16]	; (8003354 <_ZN23FrontendApplicationBase43gotomainScreenScreenSlideTransitionWestImplEv+0x20>)
 8003342:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8003346:	4804      	ldr	r0, [pc, #16]	; (8003358 <_ZN23FrontendApplicationBase43gotomainScreenScreenSlideTransitionWestImplEv+0x24>)
 8003348:	f7ff ff0c 	bl	8003164 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800334c:	b003      	add	sp, #12
 800334e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003352:	bf00      	nop
 8003354:	2001241c 	.word	0x2001241c
 8003358:	20012418 	.word	0x20012418

0800335c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800335c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003360:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003362:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8003364:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003366:	6803      	ldr	r3, [r0, #0]
 8003368:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800336a:	4688      	mov	r8, r1
 800336c:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800336e:	4798      	blx	r3
 8003370:	f5b0 7f11 	cmp.w	r0, #580	; 0x244
 8003374:	d205      	bcs.n	8003382 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
 8003376:	4b63      	ldr	r3, [pc, #396]	; (8003504 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a8>)
 8003378:	4a63      	ldr	r2, [pc, #396]	; (8003508 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 800337a:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800337c:	4863      	ldr	r0, [pc, #396]	; (800350c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>)
 800337e:	f017 fa33 	bl	801a7e8 <__assert_func>
 8003382:	6868      	ldr	r0, [r5, #4]
 8003384:	6803      	ldr	r3, [r0, #0]
 8003386:	6a1b      	ldr	r3, [r3, #32]
 8003388:	4798      	blx	r3
 800338a:	280f      	cmp	r0, #15
 800338c:	d803      	bhi.n	8003396 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3a>
 800338e:	4b60      	ldr	r3, [pc, #384]	; (8003510 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>)
 8003390:	4a5d      	ldr	r2, [pc, #372]	; (8003508 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 8003392:	21a8      	movs	r1, #168	; 0xa8
 8003394:	e7f2      	b.n	800337c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003396:	68e8      	ldr	r0, [r5, #12]
 8003398:	6803      	ldr	r3, [r0, #0]
 800339a:	6a1b      	ldr	r3, [r3, #32]
 800339c:	4798      	blx	r3
 800339e:	2853      	cmp	r0, #83	; 0x53
 80033a0:	d803      	bhi.n	80033aa <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x4e>
 80033a2:	4b5c      	ldr	r3, [pc, #368]	; (8003514 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b8>)
 80033a4:	4a58      	ldr	r2, [pc, #352]	; (8003508 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>)
 80033a6:	21a9      	movs	r1, #169	; 0xa9
 80033a8:	e7e8      	b.n	800337c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80033aa:	f009 fd43 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 80033ae:	f009 fd47 	bl	800ce40 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80033b2:	f8d9 0000 	ldr.w	r0, [r9]
 80033b6:	b110      	cbz	r0, 80033be <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x62>
        (*currentTrans)->tearDown();
 80033b8:	6803      	ldr	r3, [r0, #0]
 80033ba:	68db      	ldr	r3, [r3, #12]
 80033bc:	4798      	blx	r3
    if (*currentTrans)
 80033be:	f8d9 0000 	ldr.w	r0, [r9]
 80033c2:	b110      	cbz	r0, 80033ca <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x6e>
        (*currentTrans)->~Transition();
 80033c4:	6803      	ldr	r3, [r0, #0]
 80033c6:	681b      	ldr	r3, [r3, #0]
 80033c8:	4798      	blx	r3
    if (*currentScreen)
 80033ca:	6838      	ldr	r0, [r7, #0]
 80033cc:	b110      	cbz	r0, 80033d4 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x78>
        (*currentScreen)->tearDownScreen();
 80033ce:	6803      	ldr	r3, [r0, #0]
 80033d0:	695b      	ldr	r3, [r3, #20]
 80033d2:	4798      	blx	r3
    if (*currentPresenter)
 80033d4:	f8d8 0000 	ldr.w	r0, [r8]
 80033d8:	b110      	cbz	r0, 80033e0 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x84>
        (*currentPresenter)->deactivate();
 80033da:	6803      	ldr	r3, [r0, #0]
 80033dc:	685b      	ldr	r3, [r3, #4]
 80033de:	4798      	blx	r3
    if (*currentScreen)
 80033e0:	6838      	ldr	r0, [r7, #0]
 80033e2:	b110      	cbz	r0, 80033ea <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8e>
        (*currentScreen)->~Screen();
 80033e4:	6803      	ldr	r3, [r0, #0]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	4798      	blx	r3
    if (*currentPresenter)
 80033ea:	f8d8 0000 	ldr.w	r0, [r8]
 80033ee:	b110      	cbz	r0, 80033f6 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9a>
        (*currentPresenter)->~Presenter();
 80033f0:	6803      	ldr	r3, [r0, #0]
 80033f2:	689b      	ldr	r3, [r3, #8]
 80033f4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80033f6:	68e8      	ldr	r0, [r5, #12]
 80033f8:	6803      	ldr	r3, [r0, #0]
 80033fa:	2100      	movs	r1, #0
 80033fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033fe:	4798      	blx	r3
 8003400:	4604      	mov	r4, r0
 8003402:	2800      	cmp	r0, #0
 8003404:	d03e      	beq.n	8003484 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
          calculatedValue(0)
 8003406:	4682      	mov	sl, r0
 8003408:	2200      	movs	r2, #0
 800340a:	4943      	ldr	r1, [pc, #268]	; (8003518 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1bc>)
 800340c:	6042      	str	r2, [r0, #4]
 800340e:	7202      	strb	r2, [r0, #8]
 8003410:	f84a 1b0c 	str.w	r1, [sl], #12
 8003414:	4650      	mov	r0, sl
 8003416:	9201      	str	r2, [sp, #4]
 8003418:	f007 ffde 	bl	800b3d8 <_ZN8touchgfx14SnapshotWidgetC1Ev>
    {
 800341c:	493f      	ldr	r1, [pc, #252]	; (800351c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c0>)
 800341e:	9a01      	ldr	r2, [sp, #4]
 8003420:	f8c4 a038 	str.w	sl, [r4, #56]	; 0x38
        this->pobject = pobject;
 8003424:	e9c4 140f 	strd	r1, r4, [r4, #60]	; 0x3c
        this->pmemfun_1 = pmemfun_1;
 8003428:	2320      	movs	r3, #32
 800342a:	2101      	movs	r1, #1
 800342c:	e9c4 3111 	strd	r3, r1, [r4, #68]	; 0x44
 8003430:	2102      	movs	r1, #2
 8003432:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
 8003436:	2114      	movs	r1, #20
 8003438:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
        if (HAL::USE_ANIMATION_STORAGE)
 800343c:	4938      	ldr	r1, [pc, #224]	; (8003520 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c4>)
          calculatedValue(0)
 800343e:	f884 204e 	strb.w	r2, [r4, #78]	; 0x4e
        if (HAL::USE_ANIMATION_STORAGE)
 8003442:	7809      	ldrb	r1, [r1, #0]
          calculatedValue(0)
 8003444:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
        if (HAL::USE_ANIMATION_STORAGE)
 8003448:	b1e1      	cbz	r1, 8003484 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800344a:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8003528 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1cc>
 800344e:	4e35      	ldr	r6, [pc, #212]	; (8003524 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1c8>)
 8003450:	f9bb 0000 	ldrsh.w	r0, [fp]
 8003454:	f9b6 1000 	ldrsh.w	r1, [r6]
        rect.width = width;
 8003458:	82a0      	strh	r0, [r4, #20]
        rect.x = x;
 800345a:	6122      	str	r2, [r4, #16]
        rect.height = height;
 800345c:	82e1      	strh	r1, [r4, #22]
            snapshot.makeSnapshot();
 800345e:	4650      	mov	r0, sl
 8003460:	f007 ff35 	bl	800b2ce <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            switch (direction)
 8003464:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 8003468:	2b03      	cmp	r3, #3
 800346a:	d845      	bhi.n	80034f8 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x19c>
 800346c:	e8df f003 	tbb	[pc, r3]
 8003470:	06024240 	.word	0x06024240
                targetValue = -HAL::DISPLAY_WIDTH;
 8003474:	f8bb 3000 	ldrh.w	r3, [fp]
                targetValue = -HAL::DISPLAY_HEIGHT;
 8003478:	425b      	negs	r3, r3
 800347a:	e001      	b.n	8003480 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
                targetValue = HAL::DISPLAY_WIDTH;
 800347c:	f8bb 3000 	ldrh.w	r3, [fp]
                targetValue = HAL::DISPLAY_HEIGHT;
 8003480:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003484:	68a8      	ldr	r0, [r5, #8]
 8003486:	6803      	ldr	r3, [r0, #0]
 8003488:	2100      	movs	r1, #0
 800348a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800348c:	4798      	blx	r3
 800348e:	4606      	mov	r6, r0
 8003490:	b108      	cbz	r0, 8003496 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13a>
 8003492:	f001 f895 	bl	80045c0 <_ZN18sequenceScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003496:	6868      	ldr	r0, [r5, #4]
 8003498:	6803      	ldr	r3, [r0, #0]
 800349a:	2100      	movs	r1, #0
 800349c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800349e:	4798      	blx	r3
 80034a0:	4605      	mov	r5, r0
 80034a2:	b110      	cbz	r0, 80034aa <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14e>
 80034a4:	4631      	mov	r1, r6
 80034a6:	f001 f871 	bl	800458c <_ZN23sequenceScreenPresenterC1ER18sequenceScreenView>
    *currentTrans = newTransition;
 80034aa:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80034ae:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 80034b2:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80034b4:	b31d      	cbz	r5, 80034fe <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1a2>
 80034b6:	1d2b      	adds	r3, r5, #4
 80034b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80034ba:	6013      	str	r3, [r2, #0]
    newScreen->setupScreen();
 80034bc:	6833      	ldr	r3, [r6, #0]
 80034be:	60aa      	str	r2, [r5, #8]
 80034c0:	4630      	mov	r0, r6
 80034c2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80034c4:	68db      	ldr	r3, [r3, #12]
 80034c6:	4798      	blx	r3
    newPresenter->activate();
 80034c8:	682b      	ldr	r3, [r5, #0]
 80034ca:	4628      	mov	r0, r5
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80034d0:	4621      	mov	r1, r4
 80034d2:	4630      	mov	r0, r6
 80034d4:	f00a fe34 	bl	800e140 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80034d8:	6823      	ldr	r3, [r4, #0]
 80034da:	4620      	mov	r0, r4
 80034dc:	691b      	ldr	r3, [r3, #16]
 80034de:	4798      	blx	r3
    newTransition->invalidate();
 80034e0:	6823      	ldr	r3, [r4, #0]
 80034e2:	4620      	mov	r0, r4
 80034e4:	695b      	ldr	r3, [r3, #20]
 80034e6:	4798      	blx	r3
}
 80034e8:	4628      	mov	r0, r5
 80034ea:	b003      	add	sp, #12
 80034ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034f0:	8833      	ldrh	r3, [r6, #0]
 80034f2:	e7c5      	b.n	8003480 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
                targetValue = -HAL::DISPLAY_HEIGHT;
 80034f4:	8833      	ldrh	r3, [r6, #0]
 80034f6:	e7bf      	b.n	8003478 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11c>
                done = true;
 80034f8:	2301      	movs	r3, #1
 80034fa:	7223      	strb	r3, [r4, #8]
 80034fc:	e7c2      	b.n	8003484 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>
    model->bind(newPresenter);
 80034fe:	462b      	mov	r3, r5
 8003500:	e7da      	b.n	80034b8 <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x15c>
 8003502:	bf00      	nop
 8003504:	0801bfc8 	.word	0x0801bfc8
 8003508:	0801c412 	.word	0x0801c412
 800350c:	0801c056 	.word	0x0801c056
 8003510:	0801c09d 	.word	0x0801c09d
 8003514:	0801c140 	.word	0x0801c140
 8003518:	0801bf60 	.word	0x0801bf60
 800351c:	0801bf48 	.word	0x0801bf48
 8003520:	200123bb 	.word	0x200123bb
 8003524:	200123b2 	.word	0x200123b2
 8003528:	200123b0 	.word	0x200123b0

0800352c <_ZN23FrontendApplicationBase47gotosequenceScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotosequenceScreenScreenSlideTransitionEastImpl()
{
 800352c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<sequenceScreenView, sequenceScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800352e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8003532:	9300      	str	r3, [sp, #0]
 8003534:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8003538:	4b04      	ldr	r3, [pc, #16]	; (800354c <_ZN23FrontendApplicationBase47gotosequenceScreenScreenSlideTransitionEastImplEv+0x20>)
 800353a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 800353e:	4804      	ldr	r0, [pc, #16]	; (8003550 <_ZN23FrontendApplicationBase47gotosequenceScreenScreenSlideTransitionEastImplEv+0x24>)
 8003540:	f7ff ff0c 	bl	800335c <_ZN8touchgfx14makeTransitionI18sequenceScreenView23sequenceScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8003544:	b003      	add	sp, #12
 8003546:	f85d fb04 	ldr.w	pc, [sp], #4
 800354a:	bf00      	nop
 800354c:	2001241c 	.word	0x2001241c
 8003550:	20012418 	.word	0x20012418

08003554 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003554:	6a00      	ldr	r0, [r0, #32]
 8003556:	4770      	bx	lr

08003558 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003558:	4770      	bx	lr

0800355a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800355a:	888b      	ldrh	r3, [r1, #4]
 800355c:	6980      	ldr	r0, [r0, #24]
 800355e:	680a      	ldr	r2, [r1, #0]
 8003560:	0adb      	lsrs	r3, r3, #11
 8003562:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8003566:	4410      	add	r0, r2
 8003568:	4770      	bx	lr

0800356a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800356a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800356c:	b1c2      	cbz	r2, 80035a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800356e:	7b13      	ldrb	r3, [r2, #12]
 8003570:	b1b3      	cbz	r3, 80035a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003572:	7b54      	ldrb	r4, [r2, #13]
 8003574:	7ad2      	ldrb	r2, [r2, #11]
 8003576:	0224      	lsls	r4, r4, #8
 8003578:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800357c:	4314      	orrs	r4, r2
 800357e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003580:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003582:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003586:	8813      	ldrh	r3, [r2, #0]
 8003588:	428b      	cmp	r3, r1
 800358a:	d102      	bne.n	8003592 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800358c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8003590:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003592:	d805      	bhi.n	80035a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003594:	3801      	subs	r0, #1
 8003596:	b280      	uxth	r0, r0
 8003598:	3204      	adds	r2, #4
 800359a:	2800      	cmp	r0, #0
 800359c:	d1f3      	bne.n	8003586 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800359e:	e7f7      	b.n	8003590 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80035a0:	2000      	movs	r0, #0
 80035a2:	e7f5      	b.n	8003590 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080035a4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80035a4:	b510      	push	{r4, lr}
 80035a6:	2124      	movs	r1, #36	; 0x24
 80035a8:	4604      	mov	r4, r0
 80035aa:	f017 f8f1 	bl	801a790 <_ZdlPvj>
 80035ae:	4620      	mov	r0, r4
 80035b0:	bd10      	pop	{r4, pc}
	...

080035b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 80035b4:	b530      	push	{r4, r5, lr}
 80035b6:	b089      	sub	sp, #36	; 0x24
 80035b8:	4604      	mov	r4, r0
    gsubTable(gsubData)
 80035ba:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80035be:	9506      	str	r5, [sp, #24]
 80035c0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80035c4:	9505      	str	r5, [sp, #20]
 80035c6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80035ca:	9504      	str	r5, [sp, #16]
 80035cc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80035d0:	9503      	str	r5, [sp, #12]
 80035d2:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80035d6:	9502      	str	r5, [sp, #8]
 80035d8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80035dc:	9501      	str	r5, [sp, #4]
 80035de:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80035e2:	9500      	str	r5, [sp, #0]
 80035e4:	f00a f9b0 	bl	800d948 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80035e8:	4b05      	ldr	r3, [pc, #20]	; (8003600 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 80035ea:	6023      	str	r3, [r4, #0]
 80035ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80035ee:	61a3      	str	r3, [r4, #24]
 80035f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80035f2:	61e3      	str	r3, [r4, #28]
 80035f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80035f6:	6223      	str	r3, [r4, #32]
}
 80035f8:	4620      	mov	r0, r4
 80035fa:	b009      	add	sp, #36	; 0x24
 80035fc:	bd30      	pop	{r4, r5, pc}
 80035fe:	bf00      	nop
 8003600:	0801c548 	.word	0x0801c548

08003604 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003604:	4770      	bx	lr
	...

08003608 <_Z23getFont_verdana_10_4bppv>:
{
 8003608:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800360a:	4d14      	ldr	r5, [pc, #80]	; (800365c <_Z23getFont_verdana_10_4bppv+0x54>)
 800360c:	782c      	ldrb	r4, [r5, #0]
 800360e:	f3bf 8f5b 	dmb	ish
 8003612:	f014 0401 	ands.w	r4, r4, #1
{
 8003616:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003618:	d11d      	bne.n	8003656 <_Z23getFont_verdana_10_4bppv+0x4e>
 800361a:	4628      	mov	r0, r5
 800361c:	f017 f8ba 	bl	801a794 <__cxa_guard_acquire>
 8003620:	b1c8      	cbz	r0, 8003656 <_Z23getFont_verdana_10_4bppv+0x4e>
 8003622:	233f      	movs	r3, #63	; 0x3f
 8003624:	9307      	str	r3, [sp, #28]
 8003626:	4b0e      	ldr	r3, [pc, #56]	; (8003660 <_Z23getFont_verdana_10_4bppv+0x58>)
 8003628:	9306      	str	r3, [sp, #24]
 800362a:	4b0e      	ldr	r3, [pc, #56]	; (8003664 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800362c:	490e      	ldr	r1, [pc, #56]	; (8003668 <_Z23getFont_verdana_10_4bppv+0x60>)
 800362e:	9403      	str	r4, [sp, #12]
 8003630:	2201      	movs	r2, #1
 8003632:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003636:	2304      	movs	r3, #4
 8003638:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800363c:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003640:	230a      	movs	r3, #10
 8003642:	9400      	str	r4, [sp, #0]
 8003644:	4809      	ldr	r0, [pc, #36]	; (800366c <_Z23getFont_verdana_10_4bppv+0x64>)
 8003646:	f7ff ffb5 	bl	80035b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800364a:	4628      	mov	r0, r5
 800364c:	f017 f8ae 	bl	801a7ac <__cxa_guard_release>
 8003650:	4807      	ldr	r0, [pc, #28]	; (8003670 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003652:	f017 f8e7 	bl	801a824 <atexit>
    return verdana_10_4bpp;
}
 8003656:	4805      	ldr	r0, [pc, #20]	; (800366c <_Z23getFont_verdana_10_4bppv+0x64>)
 8003658:	b00b      	add	sp, #44	; 0x2c
 800365a:	bd30      	pop	{r4, r5, pc}
 800365c:	2000160c 	.word	0x2000160c
 8003660:	0801fd08 	.word	0x0801fd08
 8003664:	0801c594 	.word	0x0801c594
 8003668:	0801fb7c 	.word	0x0801fb7c
 800366c:	20001610 	.word	0x20001610
 8003670:	08003605 	.word	0x08003605

08003674 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 26, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003674:	4770      	bx	lr
	...

08003678 <_Z23getFont_verdana_20_4bppv>:
{
 8003678:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 26, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 800367a:	4d15      	ldr	r5, [pc, #84]	; (80036d0 <_Z23getFont_verdana_20_4bppv+0x58>)
 800367c:	782c      	ldrb	r4, [r5, #0]
 800367e:	f3bf 8f5b 	dmb	ish
 8003682:	f014 0401 	ands.w	r4, r4, #1
{
 8003686:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 26, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003688:	d11e      	bne.n	80036c8 <_Z23getFont_verdana_20_4bppv+0x50>
 800368a:	4628      	mov	r0, r5
 800368c:	f017 f882 	bl	801a794 <__cxa_guard_acquire>
 8003690:	b1d0      	cbz	r0, 80036c8 <_Z23getFont_verdana_20_4bppv+0x50>
 8003692:	233f      	movs	r3, #63	; 0x3f
 8003694:	9307      	str	r3, [sp, #28]
 8003696:	4b0f      	ldr	r3, [pc, #60]	; (80036d4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003698:	9306      	str	r3, [sp, #24]
 800369a:	4b0f      	ldr	r3, [pc, #60]	; (80036d8 <_Z23getFont_verdana_20_4bppv+0x60>)
 800369c:	9305      	str	r3, [sp, #20]
 800369e:	2301      	movs	r3, #1
 80036a0:	e9cd 4303 	strd	r4, r3, [sp, #12]
 80036a4:	9302      	str	r3, [sp, #8]
 80036a6:	2304      	movs	r3, #4
 80036a8:	e9cd 3300 	strd	r3, r3, [sp]
 80036ac:	221a      	movs	r2, #26
 80036ae:	2314      	movs	r3, #20
 80036b0:	490a      	ldr	r1, [pc, #40]	; (80036dc <_Z23getFont_verdana_20_4bppv+0x64>)
 80036b2:	480b      	ldr	r0, [pc, #44]	; (80036e0 <_Z23getFont_verdana_20_4bppv+0x68>)
 80036b4:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80036b8:	f7ff ff7c 	bl	80035b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80036bc:	4628      	mov	r0, r5
 80036be:	f017 f875 	bl	801a7ac <__cxa_guard_release>
 80036c2:	4808      	ldr	r0, [pc, #32]	; (80036e4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80036c4:	f017 f8ae 	bl	801a824 <atexit>
    return verdana_20_4bpp;
}
 80036c8:	4805      	ldr	r0, [pc, #20]	; (80036e0 <_Z23getFont_verdana_20_4bppv+0x68>)
 80036ca:	b00b      	add	sp, #44	; 0x2c
 80036cc:	bd30      	pop	{r4, r5, pc}
 80036ce:	bf00      	nop
 80036d0:	20001634 	.word	0x20001634
 80036d4:	0801fd0c 	.word	0x0801fd0c
 80036d8:	0801c598 	.word	0x0801c598
 80036dc:	0801fb8c 	.word	0x0801fb8c
 80036e0:	20001638 	.word	0x20001638
 80036e4:	08003675 	.word	0x08003675

080036e8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80036e8:	4770      	bx	lr
	...

080036ec <_Z23getFont_verdana_40_4bppv>:
{
 80036ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80036ee:	4d14      	ldr	r5, [pc, #80]	; (8003740 <_Z23getFont_verdana_40_4bppv+0x54>)
 80036f0:	782c      	ldrb	r4, [r5, #0]
 80036f2:	f3bf 8f5b 	dmb	ish
 80036f6:	f014 0401 	ands.w	r4, r4, #1
{
 80036fa:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80036fc:	d11d      	bne.n	800373a <_Z23getFont_verdana_40_4bppv+0x4e>
 80036fe:	4628      	mov	r0, r5
 8003700:	f017 f848 	bl	801a794 <__cxa_guard_acquire>
 8003704:	b1c8      	cbz	r0, 800373a <_Z23getFont_verdana_40_4bppv+0x4e>
 8003706:	233f      	movs	r3, #63	; 0x3f
 8003708:	9307      	str	r3, [sp, #28]
 800370a:	4b0e      	ldr	r3, [pc, #56]	; (8003744 <_Z23getFont_verdana_40_4bppv+0x58>)
 800370c:	9306      	str	r3, [sp, #24]
 800370e:	4b0e      	ldr	r3, [pc, #56]	; (8003748 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003710:	490e      	ldr	r1, [pc, #56]	; (800374c <_Z23getFont_verdana_40_4bppv+0x60>)
 8003712:	9403      	str	r4, [sp, #12]
 8003714:	2201      	movs	r2, #1
 8003716:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800371a:	2304      	movs	r3, #4
 800371c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003720:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003724:	2328      	movs	r3, #40	; 0x28
 8003726:	9400      	str	r4, [sp, #0]
 8003728:	4809      	ldr	r0, [pc, #36]	; (8003750 <_Z23getFont_verdana_40_4bppv+0x64>)
 800372a:	f7ff ff43 	bl	80035b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800372e:	4628      	mov	r0, r5
 8003730:	f017 f83c 	bl	801a7ac <__cxa_guard_release>
 8003734:	4807      	ldr	r0, [pc, #28]	; (8003754 <_Z23getFont_verdana_40_4bppv+0x68>)
 8003736:	f017 f875 	bl	801a824 <atexit>
    return verdana_40_4bpp;
}
 800373a:	4805      	ldr	r0, [pc, #20]	; (8003750 <_Z23getFont_verdana_40_4bppv+0x64>)
 800373c:	b00b      	add	sp, #44	; 0x2c
 800373e:	bd30      	pop	{r4, r5, pc}
 8003740:	2000165c 	.word	0x2000165c
 8003744:	0801fd18 	.word	0x0801fd18
 8003748:	0801c59c 	.word	0x0801c59c
 800374c:	0801fcf8 	.word	0x0801fcf8
 8003750:	20001660 	.word	0x20001660
 8003754:	080036e9 	.word	0x080036e9

08003758 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8003758:	2000      	movs	r0, #0
 800375a:	4770      	bx	lr

0800375c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800375c:	b40e      	push	{r1, r2, r3}
 800375e:	b503      	push	{r0, r1, lr}
 8003760:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003762:	2100      	movs	r1, #0
{
 8003764:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8003768:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800376a:	f009 ff29 	bl	800d5c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800376e:	b002      	add	sp, #8
 8003770:	f85d eb04 	ldr.w	lr, [sp], #4
 8003774:	b003      	add	sp, #12
 8003776:	4770      	bx	lr

08003778 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003778:	b40c      	push	{r2, r3}
 800377a:	b507      	push	{r0, r1, r2, lr}
 800377c:	ab04      	add	r3, sp, #16
 800377e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003782:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003784:	f009 ff1c 	bl	800d5c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003788:	b003      	add	sp, #12
 800378a:	f85d eb04 	ldr.w	lr, [sp], #4
 800378e:	b002      	add	sp, #8
 8003790:	4770      	bx	lr
	...

08003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003794:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8003796:	b510      	push	{r4, lr}
 8003798:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800379a:	b373      	cbz	r3, 80037fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800379c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800379e:	b92b      	cbnz	r3, 80037ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80037a0:	4b18      	ldr	r3, [pc, #96]	; (8003804 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80037a2:	4a19      	ldr	r2, [pc, #100]	; (8003808 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80037a4:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80037a6:	4819      	ldr	r0, [pc, #100]	; (800380c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80037a8:	f017 f81e 	bl	801a7e8 <__assert_func>
            return buffer[pos];
 80037ac:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80037ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80037b2:	8b5b      	ldrh	r3, [r3, #26]
 80037b4:	b30b      	cbz	r3, 80037fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80037b6:	f00b fa51 	bl	800ec5c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80037ba:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80037bc:	2b01      	cmp	r3, #1
 80037be:	d803      	bhi.n	80037c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80037c0:	4b13      	ldr	r3, [pc, #76]	; (8003810 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80037c2:	4a14      	ldr	r2, [pc, #80]	; (8003814 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80037c4:	21c5      	movs	r1, #197	; 0xc5
 80037c6:	e7ee      	b.n	80037a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80037c8:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80037ca:	1c53      	adds	r3, r2, #1
 80037cc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80037ce:	2b09      	cmp	r3, #9
 80037d0:	4619      	mov	r1, r3
 80037d2:	bf88      	it	hi
 80037d4:	f1a3 010a 	subhi.w	r1, r3, #10
 80037d8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 80037dc:	f640 103f 	movw	r0, #2367	; 0x93f
 80037e0:	8b49      	ldrh	r1, [r1, #26]
 80037e2:	4281      	cmp	r1, r0
 80037e4:	d109      	bne.n	80037fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80037e6:	2b0a      	cmp	r3, #10
 80037e8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80037ec:	bf28      	it	cs
 80037ee:	2300      	movcs	r3, #0
 80037f0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80037f4:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 80037f6:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 80037f8:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80037fa:	4620      	mov	r0, r4
}
 80037fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003800:	f00b b910 	b.w	800ea24 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003804:	0801c5a0 	.word	0x0801c5a0
 8003808:	0801c6d3 	.word	0x0801c6d3
 800380c:	0801c5a9 	.word	0x0801c5a9
 8003810:	0801c5f3 	.word	0x0801c5f3
 8003814:	0801c601 	.word	0x0801c601

08003818 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003818:	f00b b8be 	b.w	800e998 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800381c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800381c:	b510      	push	{r4, lr}
 800381e:	b086      	sub	sp, #24
 8003820:	ac02      	add	r4, sp, #8
 8003822:	e884 0006 	stmia.w	r4, {r1, r2}
 8003826:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003828:	ab0a      	add	r3, sp, #40	; 0x28
 800382a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800382c:	9301      	str	r3, [sp, #4]
 800382e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003830:	9300      	str	r3, [sp, #0]
 8003832:	4621      	mov	r1, r4
 8003834:	9b08      	ldr	r3, [sp, #32]
 8003836:	f008 ff0c 	bl	800c652 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800383a:	b006      	add	sp, #24
 800383c:	bd10      	pop	{r4, pc}
	...

08003840 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003840:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003842:	b9d8      	cbnz	r0, 800387c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 8003844:	4b11      	ldr	r3, [pc, #68]	; (800388c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8003846:	4812      	ldr	r0, [pc, #72]	; (8003890 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	4912      	ldr	r1, [pc, #72]	; (8003894 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800384c:	b1bb      	cbz	r3, 800387e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800384e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003850:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003852:	441a      	add	r2, r3
 8003854:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003856:	685a      	ldr	r2, [r3, #4]
 8003858:	441a      	add	r2, r3
 800385a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800385c:	441c      	add	r4, r3
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 800385e:	b16c      	cbz	r4, 800387c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 8003860:	4b0d      	ldr	r3, [pc, #52]	; (8003898 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003862:	2200      	movs	r2, #0
 8003864:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003866:	f000 f835 	bl	80038d4 <_ZN17TypedTextDatabase8getFontsEv>
 800386a:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800386c:	f000 f830 	bl	80038d0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003870:	4b0a      	ldr	r3, [pc, #40]	; (800389c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003872:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003874:	4b0a      	ldr	r3, [pc, #40]	; (80038a0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003876:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003878:	4b0a      	ldr	r3, [pc, #40]	; (80038a4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800387a:	8018      	strh	r0, [r3, #0]
    }
}
 800387c:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 800387e:	4b0a      	ldr	r3, [pc, #40]	; (80038a8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003880:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003882:	4b0a      	ldr	r3, [pc, #40]	; (80038ac <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003884:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003886:	4b0a      	ldr	r3, [pc, #40]	; (80038b0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003888:	681c      	ldr	r4, [r3, #0]
 800388a:	e7e8      	b.n	800385e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 800388c:	20001684 	.word	0x20001684
 8003890:	20001688 	.word	0x20001688
 8003894:	2000168c 	.word	0x2000168c
 8003898:	20001690 	.word	0x20001690
 800389c:	2001242c 	.word	0x2001242c
 80038a0:	20012434 	.word	0x20012434
 80038a4:	20012430 	.word	0x20012430
 80038a8:	0801fd34 	.word	0x0801fd34
 80038ac:	0801fd1c 	.word	0x0801fd1c
 80038b0:	0801fdb0 	.word	0x0801fdb0

080038b4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80038b4:	4b04      	ldr	r3, [pc, #16]	; (80038c8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80038bc:	4b03      	ldr	r3, [pc, #12]	; (80038cc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80038be:	681b      	ldr	r3, [r3, #0]
}
 80038c0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80038c4:	4770      	bx	lr
 80038c6:	bf00      	nop
 80038c8:	2000168c 	.word	0x2000168c
 80038cc:	20001688 	.word	0x20001688

080038d0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80038d0:	2006      	movs	r0, #6
 80038d2:	4770      	bx	lr

080038d4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80038d4:	4800      	ldr	r0, [pc, #0]	; (80038d8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80038d6:	4770      	bx	lr
 80038d8:	20001694 	.word	0x20001694

080038dc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 80038dc:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80038de:	f7ff fecb 	bl	8003678 <_Z23getFont_verdana_20_4bppv>
};
 80038e2:	4c04      	ldr	r4, [pc, #16]	; (80038f4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80038e4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80038e6:	f7ff ff01 	bl	80036ec <_Z23getFont_verdana_40_4bppv>
};
 80038ea:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80038ec:	f7ff fe8c 	bl	8003608 <_Z23getFont_verdana_10_4bppv>
};
 80038f0:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 80038f2:	bd10      	pop	{r4, pc}
 80038f4:	20001694 	.word	0x20001694

080038f8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80038f8:	b570      	push	{r4, r5, r6, lr}
 80038fa:	461e      	mov	r6, r3
        setXY(x, y);
 80038fc:	6803      	ldr	r3, [r0, #0]
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80038fe:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
        setXY(x, y);
 8003902:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003904:	4604      	mov	r4, r0
        setXY(x, y);
 8003906:	4798      	blx	r3
        setWidth(width);
 8003908:	6823      	ldr	r3, [r4, #0]
 800390a:	4631      	mov	r1, r6
 800390c:	4620      	mov	r0, r4
 800390e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003910:	4790      	blx	r2
        setHeight(height);
 8003912:	6823      	ldr	r3, [r4, #0]
 8003914:	4629      	mov	r1, r5
 8003916:	4620      	mov	r0, r4
 8003918:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800391a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800391e:	4718      	bx	r3

08003920 <_ZN8touchgfx8Drawable4setXEs>:
        rect.x = x;
 8003920:	8081      	strh	r1, [r0, #4]
    }
 8003922:	4770      	bx	lr

08003924 <_ZN8touchgfx8Drawable4setYEs>:
        rect.y = y;
 8003924:	80c1      	strh	r1, [r0, #6]
    }
 8003926:	4770      	bx	lr

08003928 <_ZN8touchgfx8Drawable5setXYEss>:
    virtual void setXY(int16_t x, int16_t y)
 8003928:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800392a:	6803      	ldr	r3, [r0, #0]
    virtual void setXY(int16_t x, int16_t y)
 800392c:	4604      	mov	r4, r0
        setX(x);
 800392e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXY(int16_t x, int16_t y)
 8003930:	4615      	mov	r5, r2
        setX(x);
 8003932:	4798      	blx	r3
        setY(y);
 8003934:	6823      	ldr	r3, [r4, #0]
 8003936:	4629      	mov	r1, r5
 8003938:	4620      	mov	r0, r4
 800393a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 800393c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003940:	4718      	bx	r3

08003942 <_ZN8touchgfx8Drawable8setWidthEs>:
        rect.width = width;
 8003942:	8101      	strh	r1, [r0, #8]
    }
 8003944:	4770      	bx	lr

08003946 <_ZN8touchgfx8Drawable9setHeightEs>:
        rect.height = height;
 8003946:	8141      	strh	r1, [r0, #10]
    }
 8003948:	4770      	bx	lr

0800394a <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800394a:	4770      	bx	lr

0800394c <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 800394c:	4770      	bx	lr

0800394e <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 800394e:	4770      	bx	lr

08003950 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 8003950:	4770      	bx	lr

08003952 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003952:	4770      	bx	lr

08003954 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 8003954:	88c3      	ldrh	r3, [r0, #6]
 8003956:	1ad2      	subs	r2, r2, r3
 8003958:	8883      	ldrh	r3, [r0, #4]
 800395a:	1ac9      	subs	r1, r1, r3
 800395c:	6803      	ldr	r3, [r0, #0]
    virtual void moveTo(int16_t x, int16_t y)
 800395e:	b410      	push	{r4}
        moveRelative(x - rect.x, y - rect.y);
 8003960:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 8003962:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003966:	b212      	sxth	r2, r2
 8003968:	b209      	sxth	r1, r1
 800396a:	4718      	bx	r3

0800396c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800396c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003970:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003972:	f04f 33ff 	mov.w	r3, #4294967295
 8003976:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003978:	6813      	ldr	r3, [r2, #0]
 800397a:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800397c:	6010      	str	r0, [r2, #0]
    }
 800397e:	4770      	bx	lr

08003980 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003980:	4770      	bx	lr

08003982 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003982:	4770      	bx	lr

08003984 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see touchgfx::Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003984:	4770      	bx	lr

08003986 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003986:	4770      	bx	lr

08003988 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8003988:	4770      	bx	lr

0800398a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800398a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800398e:	b11a      	cbz	r2, 8003998 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003990:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003994:	b102      	cbz	r2, 8003998 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8003996:	6018      	str	r0, [r3, #0]
        }
    }
 8003998:	4770      	bx	lr

0800399a <_ZN18mainScreenViewBaseD1Ev>:

class mainScreenViewBase : public touchgfx::View<mainScreenPresenter>
{
public:
    mainScreenViewBase();
    virtual ~mainScreenViewBase() {}
 800399a:	4770      	bx	lr

0800399c <_ZN18mainScreenViewBase24XAxisSliderValue_ChangedEi>:
     * Virtual Action Handlers
     */
    virtual void XAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800399c:	4770      	bx	lr

0800399e <_ZN18mainScreenViewBase27YAxisSlider_L_Value_ChangedEi>:

    virtual void YAxisSlider_L_Value_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800399e:	4770      	bx	lr

080039a0 <_ZN18mainScreenViewBase38ManipulatorControlToggleButton_ClickedEv>:

    virtual void ManipulatorControlToggleButton_Clicked()
    {
        // Override and implement this function in mainScreen
    }
 80039a0:	4770      	bx	lr

080039a2 <_ZN18mainScreenViewBase27YAxisSlider_R_Value_ChangedEi>:

    virtual void YAxisSlider_R_Value_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 80039a2:	4770      	bx	lr

080039a4 <_ZN18mainScreenViewBase11setupScreenEv>:
}

void mainScreenViewBase::setupScreen()
{

}
 80039a4:	4770      	bx	lr

080039a6 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80039a6:	4770      	bx	lr

080039a8 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80039a8:	4770      	bx	lr

080039aa <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 80039aa:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 80039ac:	68c6      	ldr	r6, [r0, #12]
 80039ae:	6845      	ldr	r5, [r0, #4]
 80039b0:	1074      	asrs	r4, r6, #1
    virtual void execute(T1 t1, T2 t2)
 80039b2:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 80039b4:	07f6      	lsls	r6, r6, #31
 80039b6:	eb05 0004 	add.w	r0, r5, r4
 80039ba:	689b      	ldr	r3, [r3, #8]
 80039bc:	bf44      	itt	mi
 80039be:	592c      	ldrmi	r4, [r5, r4]
 80039c0:	58e3      	ldrmi	r3, [r4, r3]
    }
 80039c2:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 80039c4:	4718      	bx	r3

080039c6 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 80039c6:	6843      	ldr	r3, [r0, #4]
 80039c8:	b12b      	cbz	r3, 80039d6 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x10>
 80039ca:	6883      	ldr	r3, [r0, #8]
 80039cc:	b92b      	cbnz	r3, 80039da <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 80039ce:	68c0      	ldr	r0, [r0, #12]
 80039d0:	f000 0001 	and.w	r0, r0, #1
 80039d4:	4770      	bx	lr
 80039d6:	4618      	mov	r0, r3
 80039d8:	4770      	bx	lr
 80039da:	2001      	movs	r0, #1
    }
 80039dc:	4770      	bx	lr

080039de <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80039de:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80039e0:	68c5      	ldr	r5, [r0, #12]
 80039e2:	6844      	ldr	r4, [r0, #4]
 80039e4:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 80039e6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80039e8:	07ed      	lsls	r5, r5, #31
 80039ea:	eb04 0002 	add.w	r0, r4, r2
 80039ee:	689b      	ldr	r3, [r3, #8]
 80039f0:	bf48      	it	mi
 80039f2:	58a2      	ldrmi	r2, [r4, r2]
    }
 80039f4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80039f6:	bf48      	it	mi
 80039f8:	58d3      	ldrmi	r3, [r2, r3]
 80039fa:	4718      	bx	r3

080039fc <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80039fc:	6843      	ldr	r3, [r0, #4]
 80039fe:	b12b      	cbz	r3, 8003a0c <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003a00:	6883      	ldr	r3, [r0, #8]
 8003a02:	b92b      	cbnz	r3, 8003a10 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003a04:	68c0      	ldr	r0, [r0, #12]
 8003a06:	f000 0001 	and.w	r0, r0, #1
 8003a0a:	4770      	bx	lr
 8003a0c:	4618      	mov	r0, r3
 8003a0e:	4770      	bx	lr
 8003a10:	2001      	movs	r0, #1
    }
 8003a12:	4770      	bx	lr

08003a14 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a14:	b510      	push	{r4, lr}
 8003a16:	2110      	movs	r1, #16
 8003a18:	4604      	mov	r4, r0
 8003a1a:	f016 feb9 	bl	801a790 <_ZdlPvj>
 8003a1e:	4620      	mov	r0, r4
 8003a20:	bd10      	pop	{r4, pc}

08003a22 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8003a22:	b510      	push	{r4, lr}
 8003a24:	2110      	movs	r1, #16
 8003a26:	4604      	mov	r4, r0
 8003a28:	f016 feb2 	bl	801a790 <_ZdlPvj>
 8003a2c:	4620      	mov	r0, r4
 8003a2e:	bd10      	pop	{r4, pc}

08003a30 <_ZN18mainScreenViewBaseD0Ev>:
    virtual ~mainScreenViewBase() {}
 8003a30:	b510      	push	{r4, lr}
 8003a32:	f44f 61aa 	mov.w	r1, #1360	; 0x550
 8003a36:	4604      	mov	r4, r0
 8003a38:	f016 feaa 	bl	801a790 <_ZdlPvj>
 8003a3c:	4620      	mov	r0, r4
 8003a3e:	bd10      	pop	{r4, pc}

08003a40 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:
        application().gotosequenceScreenScreenSlideTransitionEast();
    }
}

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8003a40:	b410      	push	{r4}
 8003a42:	460c      	mov	r4, r1
 8003a44:	4611      	mov	r1, r2
    if (&src == &yAxisSlider_L)
 8003a46:	f500 72a6 	add.w	r2, r0, #332	; 0x14c
 8003a4a:	4294      	cmp	r4, r2
 8003a4c:	d104      	bne.n	8003a58 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x18>
    {
        //YAxisSlider_L_Value_Changed
        //When yAxisSlider_L value changed call virtual function
        //Call YAxisSlider_L_Value_Changed
        YAxisSlider_L_Value_Changed(value);
 8003a4e:	6803      	ldr	r3, [r0, #0]
 8003a50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        //YAxisSlider_R_Value_Changed
        //When yAxisSlider_R value changed call virtual function
        //Call YAxisSlider_R_Value_Changed
        YAxisSlider_R_Value_Changed(value);
    }
}
 8003a52:	f85d 4b04 	ldr.w	r4, [sp], #4
        YAxisSlider_R_Value_Changed(value);
 8003a56:	4718      	bx	r3
    else if (&src == &xAxisSlider)
 8003a58:	f500 7212 	add.w	r2, r0, #584	; 0x248
 8003a5c:	4294      	cmp	r4, r2
 8003a5e:	d102      	bne.n	8003a66 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x26>
        XAxisSliderValue_Changed(value);
 8003a60:	6803      	ldr	r3, [r0, #0]
 8003a62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003a64:	e7f5      	b.n	8003a52 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x12>
    else if (&src == &yAxisSlider_R)
 8003a66:	f500 7251 	add.w	r2, r0, #836	; 0x344
 8003a6a:	4294      	cmp	r4, r2
 8003a6c:	d102      	bne.n	8003a74 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x34>
        YAxisSlider_R_Value_Changed(value);
 8003a6e:	6803      	ldr	r3, [r0, #0]
 8003a70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003a72:	e7ee      	b.n	8003a52 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x12>
}
 8003a74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003a78:	4770      	bx	lr

08003a7a <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &manipulatorControlToggleButton)
 8003a7a:	f100 029c 	add.w	r2, r0, #156	; 0x9c
 8003a7e:	4291      	cmp	r1, r2
{
 8003a80:	b510      	push	{r4, lr}
    if (&src == &manipulatorControlToggleButton)
 8003a82:	d104      	bne.n	8003a8e <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
        ManipulatorControlToggleButton_Clicked();
 8003a84:	6803      	ldr	r3, [r0, #0]
}
 8003a86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ManipulatorControlToggleButton_Clicked();
 8003a8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003a8c:	4718      	bx	r3
    else if (&src == &sequenceScreenButton)
 8003a8e:	f200 43f4 	addw	r3, r0, #1268	; 0x4f4
 8003a92:	4299      	cmp	r1, r3
 8003a94:	d105      	bne.n	8003aa2 <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003a96:	f009 f9cd 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003a9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotosequenceScreenScreenSlideTransitionEast();
 8003a9e:	f7ff ba9d 	b.w	8002fdc <_ZN23FrontendApplicationBase43gotosequenceScreenScreenSlideTransitionEastEv>
}
 8003aa2:	bd10      	pop	{r4, pc}

08003aa4 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8003aa4:	4a09      	ldr	r2, [pc, #36]	; (8003acc <_ZN8touchgfx8DrawableC1Ev+0x28>)
 8003aa6:	6002      	str	r2, [r0, #0]
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 8003aa8:	2200      	movs	r2, #0
 8003aaa:	8082      	strh	r2, [r0, #4]
        this->y = y;
 8003aac:	80c2      	strh	r2, [r0, #6]
        this->width = width;
 8003aae:	8102      	strh	r2, [r0, #8]
        this->height = height;
 8003ab0:	8142      	strh	r2, [r0, #10]
        this->x = 0;
 8003ab2:	8182      	strh	r2, [r0, #12]
        this->y = 0;
 8003ab4:	81c2      	strh	r2, [r0, #14]
        this->width = 0;
 8003ab6:	8202      	strh	r2, [r0, #16]
        this->height = 0;
 8003ab8:	8242      	strh	r2, [r0, #18]
 8003aba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003abe:	61c2      	str	r2, [r0, #28]
 8003ac0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8003ac4:	2201      	movs	r2, #1
 8003ac6:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
    }
 8003aca:	4770      	bx	lr
 8003acc:	0801df5c 	.word	0x0801df5c

08003ad0 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8003ad0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8003ad2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8003ad4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8003ad6:	2100      	movs	r1, #0
 8003ad8:	f016 ff0f 	bl	801a8fa <memset>
class Widget : public Drawable
 8003adc:	4620      	mov	r0, r4
 8003ade:	f7ff ffe1 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8003ae2:	4b09      	ldr	r3, [pc, #36]	; (8003b08 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8003ae4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8003ae6:	4b09      	ldr	r3, [pc, #36]	; (8003b0c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003ae8:	62a3      	str	r3, [r4, #40]	; 0x28
 8003aea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003aee:	85a3      	strh	r3, [r4, #44]	; 0x2c
        color = col;
 8003af0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003af4:	2300      	movs	r3, #0
 8003af6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8003afa:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8003afe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    {
    }
 8003b02:	4620      	mov	r0, r4
 8003b04:	bd10      	pop	{r4, pc}
 8003b06:	bf00      	nop
 8003b08:	0801da74 	.word	0x0801da74
 8003b0c:	0801beb8 	.word	0x0801beb8

08003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8003b10:	4613      	mov	r3, r2
        return instance;
 8003b12:	4a0c      	ldr	r2, [pc, #48]	; (8003b44 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8003b14:	b570      	push	{r4, r5, r6, lr}
 8003b16:	6814      	ldr	r4, [r2, #0]
 8003b18:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 8003b1a:	b92c      	cbnz	r4, 8003b28 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 8003b1c:	4b0a      	ldr	r3, [pc, #40]	; (8003b48 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 8003b1e:	4a0b      	ldr	r2, [pc, #44]	; (8003b4c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8003b20:	480b      	ldr	r0, [pc, #44]	; (8003b50 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 8003b22:	2135      	movs	r1, #53	; 0x35
 8003b24:	f016 fe60 	bl	801a7e8 <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003b28:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 8003b2c:	b10a      	cbz	r2, 8003b32 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 8003b2e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8003b30:	b900      	cbnz	r0, 8003b34 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 8003b32:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8003b34:	6802      	ldr	r2, [r0, #0]
 8003b36:	6a94      	ldr	r4, [r2, #40]	; 0x28
 8003b38:	460a      	mov	r2, r1
 8003b3a:	46a4      	mov	ip, r4
 8003b3c:	4629      	mov	r1, r5
    }
 8003b3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8003b42:	4760      	bx	ip
 8003b44:	200123bc 	.word	0x200123bc
 8003b48:	0801c7b0 	.word	0x0801c7b0
 8003b4c:	0801c87c 	.word	0x0801c87c
 8003b50:	0801c7f3 	.word	0x0801c7f3

08003b54 <_ZN18mainScreenViewBaseC1Ev>:
mainScreenViewBase::mainScreenViewBase() :
 8003b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b58:	4604      	mov	r4, r0
 8003b5a:	b095      	sub	sp, #84	; 0x54
        : presenter(0)
 8003b5c:	f00a f974 	bl	800de48 <_ZN8touchgfx6ScreenC1Ev>
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
 8003b60:	4622      	mov	r2, r4
 8003b62:	2500      	movs	r5, #0
 8003b64:	4bdf      	ldr	r3, [pc, #892]	; (8003ee4 <_ZN18mainScreenViewBaseC1Ev+0x390>)
 8003b66:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003b68:	f842 3b40 	str.w	r3, [r2], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8003b6c:	f04f 0926 	mov.w	r9, #38	; 0x26
 8003b70:	4613      	mov	r3, r2
 8003b72:	4629      	mov	r1, r5
 8003b74:	9205      	str	r2, [sp, #20]
 8003b76:	4618      	mov	r0, r3
 8003b78:	464a      	mov	r2, r9
 8003b7a:	f016 febe 	bl	801a8fa <memset>
 8003b7e:	9805      	ldr	r0, [sp, #20]
 8003b80:	f7ff ff90 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8003b84:	4bd8      	ldr	r3, [pc, #864]	; (8003ee8 <_ZN18mainScreenViewBaseC1Ev+0x394>)
 8003b86:	6423      	str	r3, [r4, #64]	; 0x40
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003b88:	ae14      	add	r6, sp, #80	; 0x50
 8003b8a:	f104 0370 	add.w	r3, r4, #112	; 0x70
 8003b8e:	f04f 08ff 	mov.w	r8, #255	; 0xff
 8003b92:	f64f 77ff 	movw	r7, #65535	; 0xffff
     * @param  bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), alpha(255)
 8003b96:	464a      	mov	r2, r9
 8003b98:	4629      	mov	r1, r5
 8003b9a:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
 8003b9e:	66a5      	str	r5, [r4, #104]	; 0x68
 8003ba0:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 8003ba4:	4618      	mov	r0, r3
 8003ba6:	f826 7d08 	strh.w	r7, [r6, #-8]!
 8003baa:	9303      	str	r3, [sp, #12]
 8003bac:	f016 fea5 	bl	801a8fa <memset>
 8003bb0:	9803      	ldr	r0, [sp, #12]
 8003bb2:	f7ff ff77 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8003bb6:	4bcd      	ldr	r3, [pc, #820]	; (8003eec <_ZN18mainScreenViewBaseC1Ev+0x398>)
 8003bb8:	6723      	str	r3, [r4, #112]	; 0x70
 8003bba:	f8a4 7096 	strh.w	r7, [r4, #150]	; 0x96
 8003bbe:	f884 7098 	strb.w	r7, [r4, #152]	; 0x98
    {
        setBitmap(bmp);
 8003bc2:	4631      	mov	r1, r6
 8003bc4:	9803      	ldr	r0, [sp, #12]
 8003bc6:	f008 f8dc 	bl	800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003bca:	f104 039c 	add.w	r3, r4, #156	; 0x9c
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8003bce:	464a      	mov	r2, r9
 8003bd0:	4629      	mov	r1, r5
 8003bd2:	4618      	mov	r0, r3
 8003bd4:	9304      	str	r3, [sp, #16]
 8003bd6:	f016 fe90 	bl	801a8fa <memset>
 8003bda:	9804      	ldr	r0, [sp, #16]
 8003bdc:	f7ff ff62 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 8003be0:	f04f 0301 	mov.w	r3, #1
 8003be4:	f884 30c0 	strb.w	r3, [r4, #192]	; 0xc0
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8003be8:	4bc1      	ldr	r3, [pc, #772]	; (8003ef0 <_ZN18mainScreenViewBaseC1Ev+0x39c>)
 8003bea:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8003bee:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003bf2:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8003bf6:	f884 50c8 	strb.w	r5, [r4, #200]	; 0xc8
 8003bfa:	f8a4 70ca 	strh.w	r7, [r4, #202]	; 0xca
 8003bfe:	f8a4 70cc 	strh.w	r7, [r4, #204]	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003c02:	f884 80ce 	strb.w	r8, [r4, #206]	; 0xce
 8003c06:	f8a4 70d0 	strh.w	r7, [r4, #208]	; 0xd0
 8003c0a:	4618      	mov	r0, r3
 8003c0c:	9306      	str	r3, [sp, #24]
 8003c0e:	f7ff ff5f 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c12:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8003c16:	f504 7ba6 	add.w	fp, r4, #332	; 0x14c
 8003c1a:	4618      	mov	r0, r3
 8003c1c:	f504 7a12 	add.w	sl, r4, #584	; 0x248
 8003c20:	9307      	str	r3, [sp, #28]
 8003c22:	f7ff ff55 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c26:	4658      	mov	r0, fp
 8003c28:	f504 7951 	add.w	r9, r4, #836	; 0x344
 8003c2c:	f006 fbec 	bl	800a408 <_ZN8touchgfx6SliderC1Ev>
 8003c30:	4650      	mov	r0, sl
 8003c32:	f006 fbe9 	bl	800a408 <_ZN8touchgfx6SliderC1Ev>
 8003c36:	4648      	mov	r0, r9
 8003c38:	f006 fbe6 	bl	800a408 <_ZN8touchgfx6SliderC1Ev>
 8003c3c:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 8003c40:	4618      	mov	r0, r3
 8003c42:	9308      	str	r3, [sp, #32]
 8003c44:	f7ff ff44 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c48:	f204 437c 	addw	r3, r4, #1148	; 0x47c
 8003c4c:	4618      	mov	r0, r3
 8003c4e:	9309      	str	r3, [sp, #36]	; 0x24
 8003c50:	f7ff ff3e 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c54:	f504 6397 	add.w	r3, r4, #1208	; 0x4b8
 8003c58:	4618      	mov	r0, r3
 8003c5a:	930a      	str	r3, [sp, #40]	; 0x28
 8003c5c:	f7ff ff38 	bl	8003ad0 <_ZN8touchgfx8TextAreaC1Ev>
 8003c60:	f204 43f4 	addw	r3, r4, #1268	; 0x4f4
 8003c64:	4618      	mov	r0, r3
 8003c66:	930b      	str	r3, [sp, #44]	; 0x2c
 8003c68:	f008 f866 	bl	800bd38 <_ZN8touchgfx14ButtonWithIconC1Ev>
    {
 8003c6c:	4ba1      	ldr	r3, [pc, #644]	; (8003ef4 <_ZN18mainScreenViewBaseC1Ev+0x3a0>)
 8003c6e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        this->pmemfun_1 = pmemfun_1;
 8003c72:	4ba1      	ldr	r3, [pc, #644]	; (8003ef8 <_ZN18mainScreenViewBaseC1Ev+0x3a4>)
 8003c74:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
    {
 8003c78:	4ba0      	ldr	r3, [pc, #640]	; (8003efc <_ZN18mainScreenViewBaseC1Ev+0x3a8>)
 8003c7a:	f8c4 3540 	str.w	r3, [r4, #1344]	; 0x540
        this->pmemfun_2 = pmemfun_2;
 8003c7e:	4ba0      	ldr	r3, [pc, #640]	; (8003f00 <_ZN18mainScreenViewBaseC1Ev+0x3ac>)
 8003c80:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
    __background.setPosition(0, 0, 240, 320);
 8003c84:	f44f 73a0 	mov.w	r3, #320	; 0x140
        this->pmemfun_1 = pmemfun_1;
 8003c88:	f8c4 553c 	str.w	r5, [r4, #1340]	; 0x53c
        this->pmemfun_2 = pmemfun_2;
 8003c8c:	f8c4 554c 	str.w	r5, [r4, #1356]	; 0x54c
 8003c90:	9300      	str	r3, [sp, #0]
 8003c92:	462a      	mov	r2, r5
 8003c94:	23f0      	movs	r3, #240	; 0xf0
 8003c96:	4629      	mov	r1, r5
 8003c98:	9805      	ldr	r0, [sp, #20]
        this->pobject = pobject;
 8003c9a:	f8c4 4534 	str.w	r4, [r4, #1332]	; 0x534
        this->pobject = pobject;
 8003c9e:	f8c4 4544 	str.w	r4, [r4, #1348]	; 0x544
 8003ca2:	f7ff fe29 	bl	80038f8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003ca6:	462a      	mov	r2, r5
 8003ca8:	4629      	mov	r1, r5
 8003caa:	4628      	mov	r0, r5
 8003cac:	f7ff ff30 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    backgroundImage.setXY(0, 0);
 8003cb0:	462a      	mov	r2, r5
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8003cb2:	66a0      	str	r0, [r4, #104]	; 0x68
 8003cb4:	4629      	mov	r1, r5
 8003cb6:	9803      	ldr	r0, [sp, #12]
 8003cb8:	4f92      	ldr	r7, [pc, #584]	; (8003f04 <_ZN18mainScreenViewBaseC1Ev+0x3b0>)
 8003cba:	f7ff fe35 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));
 8003cbe:	4631      	mov	r1, r6
 8003cc0:	9803      	ldr	r0, [sp, #12]
 8003cc2:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
 8003cc6:	f008 f85c 	bl	800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    manipulatorControlToggleButton.setXY(72, 193);
 8003cca:	9804      	ldr	r0, [sp, #16]
 8003ccc:	22c1      	movs	r2, #193	; 0xc1
 8003cce:	2148      	movs	r1, #72	; 0x48
 8003cd0:	f7ff fe2a 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8003cd4:	230c      	movs	r3, #12
 8003cd6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8003cda:	230d      	movs	r3, #13
{
public:

    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
    {
        originalPressed = bmpPressed;
 8003cdc:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        Button::setBitmaps(bmpReleased, bmpPressed);
 8003ce0:	4632      	mov	r2, r6
 8003ce2:	a911      	add	r1, sp, #68	; 0x44
 8003ce4:	9804      	ldr	r0, [sp, #16]
 8003ce6:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8003cea:	f007 fdc3 	bl	800b874 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    manipulatorControlToggleButton.setAction(buttonCallback);
 8003cee:	f504 63a6 	add.w	r3, r4, #1328	; 0x530
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003cf2:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    titleText.setXY(23, 15);
 8003cf6:	9806      	ldr	r0, [sp, #24]
    manipulatorControlToggleButton.setAction(buttonCallback);
 8003cf8:	930d      	str	r3, [sp, #52]	; 0x34
    titleText.setXY(23, 15);
 8003cfa:	220f      	movs	r2, #15
 8003cfc:	2117      	movs	r1, #23
 8003cfe:	f7ff fe13 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    titleText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003d02:	462a      	mov	r2, r5
 8003d04:	4629      	mov	r1, r5
 8003d06:	4628      	mov	r0, r5
 8003d08:	f7ff ff02 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8003d0c:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        this->color = color;
 8003d10:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
    titleText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8003d14:	4631      	mov	r1, r6
 8003d16:	9806      	ldr	r0, [sp, #24]
 8003d18:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 8003d1c:	9712      	str	r7, [sp, #72]	; 0x48
 8003d1e:	f007 fd67 	bl	800b7f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    manipulatorText.setXY(61, 128);
 8003d22:	9807      	ldr	r0, [sp, #28]
 8003d24:	2280      	movs	r2, #128	; 0x80
 8003d26:	213d      	movs	r1, #61	; 0x3d
 8003d28:	f7ff fdfe 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    manipulatorText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003d2c:	462a      	mov	r2, r5
 8003d2e:	4629      	mov	r1, r5
 8003d30:	4628      	mov	r0, r5
 8003d32:	f7ff feed 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003d36:	f04f 0301 	mov.w	r3, #1
 8003d3a:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
        linespace = space;
 8003d3e:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
    manipulatorText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 8003d42:	4631      	mov	r1, r6
 8003d44:	9807      	ldr	r0, [sp, #28]
 8003d46:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8003d4a:	9712      	str	r7, [sp, #72]	; 0x48
 8003d4c:	f007 fd50 	bl	800b7f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    yAxisSlider_L.setXY(23, 52);
 8003d50:	4658      	mov	r0, fp
 8003d52:	2234      	movs	r2, #52	; 0x34
 8003d54:	2117      	movs	r1, #23
 8003d56:	f7ff fde7 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    yAxisSlider_L.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 8003d5a:	a911      	add	r1, sp, #68	; 0x44
 8003d5c:	f04f 020a 	mov.w	r2, #10
 8003d60:	f04f 080b 	mov.w	r8, #11
 8003d64:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
 8003d68:	4633      	mov	r3, r6
 8003d6a:	460a      	mov	r2, r1
 8003d6c:	4658      	mov	r0, fp
 8003d6e:	a910      	add	r1, sp, #64	; 0x40
 8003d70:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
 8003d74:	f8ad 8044 	strh.w	r8, [sp, #68]	; 0x44
 8003d78:	f006 fb9a 	bl	800a4b0 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider_L.setupVerticalSlider(7, 3, 0, 0, 125);
 8003d7c:	217d      	movs	r1, #125	; 0x7d
 8003d7e:	462b      	mov	r3, r5
 8003d80:	e9cd 5100 	strd	r5, r1, [sp]
 8003d84:	4658      	mov	r0, fp
 8003d86:	2203      	movs	r2, #3
 8003d88:	2107      	movs	r1, #7
 8003d8a:	f006 fa37 	bl	800a1fc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider_L.setValueRange(0, 100);
 8003d8e:	2264      	movs	r2, #100	; 0x64
 8003d90:	4629      	mov	r1, r5
 8003d92:	4658      	mov	r0, fp
 8003d94:	f006 f931 	bl	8009ffa <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider_L.setValue(0);
 8003d98:	4629      	mov	r1, r5
 8003d9a:	4658      	mov	r0, fp
 8003d9c:	f006 f8b9 	bl	8009f12 <_ZN8touchgfx6Slider8setValueEi>
    yAxisSlider_L.setNewValueCallback(sliderValueChangedCallback);
 8003da0:	f504 61a8 	add.w	r1, r4, #1344	; 0x540
 8003da4:	910c      	str	r1, [sp, #48]	; 0x30
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 8003da6:	f8c4 1244 	str.w	r1, [r4, #580]	; 0x244
    xAxisSlider.setXY(31, 261);
 8003daa:	4650      	mov	r0, sl
 8003dac:	f240 1205 	movw	r2, #261	; 0x105
 8003db0:	211f      	movs	r1, #31
 8003db2:	f7ff fdb9 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8003db6:	2309      	movs	r3, #9
 8003db8:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 8003dbc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
    xAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
 8003dc0:	a911      	add	r1, sp, #68	; 0x44
 8003dc2:	2308      	movs	r3, #8
 8003dc4:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8003dc8:	460a      	mov	r2, r1
 8003dca:	4633      	mov	r3, r6
 8003dcc:	a910      	add	r1, sp, #64	; 0x40
 8003dce:	4650      	mov	r0, sl
 8003dd0:	f006 fb6e 	bl	800a4b0 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    xAxisSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
 8003dd4:	217d      	movs	r1, #125	; 0x7d
 8003dd6:	462b      	mov	r3, r5
 8003dd8:	e9cd 5100 	strd	r5, r1, [sp]
 8003ddc:	4650      	mov	r0, sl
 8003dde:	2207      	movs	r2, #7
 8003de0:	2103      	movs	r1, #3
 8003de2:	f006 f9a7 	bl	800a134 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    xAxisSlider.setValueRange(0, 100);
 8003de6:	2264      	movs	r2, #100	; 0x64
 8003de8:	4629      	mov	r1, r5
 8003dea:	4650      	mov	r0, sl
 8003dec:	f006 f905 	bl	8009ffa <_ZN8touchgfx6Slider13setValueRangeEii>
    xAxisSlider.setValue(50);
 8003df0:	4650      	mov	r0, sl
 8003df2:	2132      	movs	r1, #50	; 0x32
 8003df4:	f006 f88d 	bl	8009f12 <_ZN8touchgfx6Slider8setValueEi>
 8003df8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003dfa:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
    yAxisSlider_R.setXY(183, 52);
 8003dfe:	4648      	mov	r0, r9
 8003e00:	2234      	movs	r2, #52	; 0x34
 8003e02:	21b7      	movs	r1, #183	; 0xb7
 8003e04:	f7ff fd90 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8003e08:	f04f 020a 	mov.w	r2, #10
 8003e0c:	f8ad 2048 	strh.w	r2, [sp, #72]	; 0x48
    yAxisSlider_R.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 8003e10:	4633      	mov	r3, r6
 8003e12:	aa11      	add	r2, sp, #68	; 0x44
 8003e14:	a910      	add	r1, sp, #64	; 0x40
 8003e16:	4648      	mov	r0, r9
 8003e18:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
 8003e1c:	f8ad 8044 	strh.w	r8, [sp, #68]	; 0x44
 8003e20:	f006 fb46 	bl	800a4b0 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider_R.setupVerticalSlider(7, 3, 0, 0, 125);
 8003e24:	227d      	movs	r2, #125	; 0x7d
 8003e26:	462b      	mov	r3, r5
 8003e28:	e9cd 5200 	strd	r5, r2, [sp]
 8003e2c:	4648      	mov	r0, r9
 8003e2e:	2203      	movs	r2, #3
 8003e30:	2107      	movs	r1, #7
 8003e32:	f006 f9e3 	bl	800a1fc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider_R.setValueRange(0, 100);
 8003e36:	2264      	movs	r2, #100	; 0x64
 8003e38:	4629      	mov	r1, r5
 8003e3a:	4648      	mov	r0, r9
 8003e3c:	f006 f8dd 	bl	8009ffa <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider_R.setValue(0);
 8003e40:	4629      	mov	r1, r5
 8003e42:	4648      	mov	r0, r9
 8003e44:	f006 f865 	bl	8009f12 <_ZN8touchgfx6Slider8setValueEi>
 8003e48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003e4a:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
    leftText.setXY(21, 239);
 8003e4e:	9808      	ldr	r0, [sp, #32]
 8003e50:	22ef      	movs	r2, #239	; 0xef
 8003e52:	2115      	movs	r1, #21
 8003e54:	f7ff fd68 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    leftText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003e58:	462a      	mov	r2, r5
 8003e5a:	4629      	mov	r1, r5
 8003e5c:	4628      	mov	r0, r5
 8003e5e:	f7ff fe57 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003e62:	f04f 0802 	mov.w	r8, #2
        this->color = color;
 8003e66:	f8c4 0470 	str.w	r0, [r4, #1136]	; 0x470
        linespace = space;
 8003e6a:	f8a4 5474 	strh.w	r5, [r4, #1140]	; 0x474
    leftText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 8003e6e:	4631      	mov	r1, r6
 8003e70:	9808      	ldr	r0, [sp, #32]
 8003e72:	9712      	str	r7, [sp, #72]	; 0x48
 8003e74:	f8ad 804c 	strh.w	r8, [sp, #76]	; 0x4c
 8003e78:	f007 fcba 	bl	800b7f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    rightText.setXY(174, 239);
 8003e7c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e7e:	22ef      	movs	r2, #239	; 0xef
 8003e80:	21ae      	movs	r1, #174	; 0xae
 8003e82:	f7ff fd51 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    rightText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003e86:	462a      	mov	r2, r5
 8003e88:	4629      	mov	r1, r5
 8003e8a:	4628      	mov	r0, r5
 8003e8c:	f7ff fe40 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003e90:	2303      	movs	r3, #3
        this->color = color;
 8003e92:	f8c4 04ac 	str.w	r0, [r4, #1196]	; 0x4ac
        linespace = space;
 8003e96:	f8a4 54b0 	strh.w	r5, [r4, #1200]	; 0x4b0
    rightText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
 8003e9a:	4631      	mov	r1, r6
 8003e9c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e9e:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8003ea2:	9712      	str	r7, [sp, #72]	; 0x48
 8003ea4:	f007 fca4 	bl	800b7f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    baseText.setXY(96, 295);
 8003ea8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003eaa:	f240 1227 	movw	r2, #295	; 0x127
 8003eae:	2160      	movs	r1, #96	; 0x60
 8003eb0:	f7ff fd3a 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    baseText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003eb4:	462a      	mov	r2, r5
 8003eb6:	4629      	mov	r1, r5
 8003eb8:	4628      	mov	r0, r5
 8003eba:	f7ff fe29 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003ebe:	2304      	movs	r3, #4
        this->color = color;
 8003ec0:	f8c4 04e8 	str.w	r0, [r4, #1256]	; 0x4e8
        linespace = space;
 8003ec4:	f8a4 54ec 	strh.w	r5, [r4, #1260]	; 0x4ec
    baseText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8003ec8:	4631      	mov	r1, r6
 8003eca:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ecc:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8003ed0:	9712      	str	r7, [sp, #72]	; 0x48
 8003ed2:	f007 fc8d 	bl	800b7f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    sequenceScreenButton.setXY(90, 52);
 8003ed6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003ed8:	2234      	movs	r2, #52	; 0x34
 8003eda:	215a      	movs	r1, #90	; 0x5a
 8003edc:	f7ff fd24 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8003ee0:	e012      	b.n	8003f08 <_ZN18mainScreenViewBaseC1Ev+0x3b4>
 8003ee2:	bf00      	nop
 8003ee4:	0801c840 	.word	0x0801c840
 8003ee8:	0801db20 	.word	0x0801db20
 8003eec:	0801dd74 	.word	0x0801dd74
 8003ef0:	0801d8d4 	.word	0x0801d8d4
 8003ef4:	0801c788 	.word	0x0801c788
 8003ef8:	08003a7b 	.word	0x08003a7b
 8003efc:	0801c7a0 	.word	0x0801c7a0
 8003f00:	08003a41 	.word	0x08003a41
 8003f04:	0801beb8 	.word	0x0801beb8
 8003f08:	f04f 0301 	mov.w	r3, #1
    sequenceScreenButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_SEQUENCE_ICON_32_ID), touchgfx::Bitmap(BITMAP_SEQUENCE_ICON_32_ID));
 8003f0c:	aa10      	add	r2, sp, #64	; 0x40
 8003f0e:	250e      	movs	r5, #14
 8003f10:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8003f14:	a90f      	add	r1, sp, #60	; 0x3c
 8003f16:	ab11      	add	r3, sp, #68	; 0x44
 8003f18:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003f1a:	9600      	str	r6, [sp, #0]
 8003f1c:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
 8003f20:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
 8003f24:	f8ad 8040 	strh.w	r8, [sp, #64]	; 0x40
 8003f28:	f007 fe62 	bl	800bbf0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003f2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003f2e:	f8a4 552c 	strh.w	r5, [r4, #1324]	; 0x52c
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
    {
        iconY = y;
 8003f32:	f8a4 552e 	strh.w	r5, [r4, #1326]	; 0x52e
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003f36:	1d25      	adds	r5, r4, #4
 8003f38:	f8c4 351c 	str.w	r3, [r4, #1308]	; 0x51c
 8003f3c:	9905      	ldr	r1, [sp, #20]
 8003f3e:	4628      	mov	r0, r5
 8003f40:	f005 fea8 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f44:	9903      	ldr	r1, [sp, #12]
 8003f46:	4628      	mov	r0, r5
 8003f48:	f005 fea4 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f4c:	9904      	ldr	r1, [sp, #16]
 8003f4e:	4628      	mov	r0, r5
 8003f50:	f005 fea0 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f54:	9906      	ldr	r1, [sp, #24]
 8003f56:	4628      	mov	r0, r5
 8003f58:	f005 fe9c 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f5c:	9907      	ldr	r1, [sp, #28]
 8003f5e:	4628      	mov	r0, r5
 8003f60:	f005 fe98 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f64:	4659      	mov	r1, fp
 8003f66:	4628      	mov	r0, r5
 8003f68:	f005 fe94 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f6c:	4651      	mov	r1, sl
 8003f6e:	4628      	mov	r0, r5
 8003f70:	f005 fe90 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f74:	4649      	mov	r1, r9
 8003f76:	4628      	mov	r0, r5
 8003f78:	f005 fe8c 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f7c:	9908      	ldr	r1, [sp, #32]
 8003f7e:	4628      	mov	r0, r5
 8003f80:	f005 fe88 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f84:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003f86:	4628      	mov	r0, r5
 8003f88:	f005 fe84 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f8c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003f8e:	4628      	mov	r0, r5
 8003f90:	f005 fe80 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f94:	4628      	mov	r0, r5
 8003f96:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003f98:	f005 fe7c 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003f9c:	4620      	mov	r0, r4
 8003f9e:	b015      	add	sp, #84	; 0x54
 8003fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003fa4 <_ZN22sequenceScreenViewBaseD1Ev>:

class sequenceScreenViewBase : public touchgfx::View<sequenceScreenPresenter>
{
public:
    sequenceScreenViewBase();
    virtual ~sequenceScreenViewBase() {}
 8003fa4:	4770      	bx	lr

08003fa6 <_ZN22sequenceScreenViewBase26SaveSequenceButton_ClickedEv>:
     * Virtual Action Handlers
     */
    virtual void SaveSequenceButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }
 8003fa6:	4770      	bx	lr

08003fa8 <_ZN22sequenceScreenViewBase26PlaySequenceButton_ClickedEv>:

    virtual void PlaySequenceButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }
 8003fa8:	4770      	bx	lr

08003faa <_ZN22sequenceScreenViewBase28AddNewPositionButton_ClickedEv>:

    virtual void AddNewPositionButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }
 8003faa:	4770      	bx	lr

08003fac <_ZN22sequenceScreenViewBase28DeletePositionButton_ClickedEv>:

    virtual void DeletePositionButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }
 8003fac:	4770      	bx	lr

08003fae <_ZN22sequenceScreenViewBase11setupScreenEv>:
}

void sequenceScreenViewBase::setupScreen()
{

}
 8003fae:	4770      	bx	lr

08003fb0 <_ZN8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003fb0:	4770      	bx	lr

08003fb2 <_ZN8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003fb2:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003fb4:	68c5      	ldr	r5, [r0, #12]
 8003fb6:	6844      	ldr	r4, [r0, #4]
 8003fb8:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8003fba:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003fbc:	07ed      	lsls	r5, r5, #31
 8003fbe:	eb04 0002 	add.w	r0, r4, r2
 8003fc2:	689b      	ldr	r3, [r3, #8]
 8003fc4:	bf48      	it	mi
 8003fc6:	58a2      	ldrmi	r2, [r4, r2]
    }
 8003fc8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003fca:	bf48      	it	mi
 8003fcc:	58d3      	ldrmi	r3, [r2, r3]
 8003fce:	4718      	bx	r3

08003fd0 <_ZNK8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003fd0:	6843      	ldr	r3, [r0, #4]
 8003fd2:	b12b      	cbz	r3, 8003fe0 <_ZNK8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003fd4:	6883      	ldr	r3, [r0, #8]
 8003fd6:	b92b      	cbnz	r3, 8003fe4 <_ZNK8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003fd8:	68c0      	ldr	r0, [r0, #12]
 8003fda:	f000 0001 	and.w	r0, r0, #1
 8003fde:	4770      	bx	lr
 8003fe0:	4618      	mov	r0, r3
 8003fe2:	4770      	bx	lr
 8003fe4:	2001      	movs	r0, #1
    }
 8003fe6:	4770      	bx	lr

08003fe8 <_ZN8touchgfx8CallbackI22sequenceScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003fe8:	b510      	push	{r4, lr}
 8003fea:	2110      	movs	r1, #16
 8003fec:	4604      	mov	r4, r0
 8003fee:	f016 fbcf 	bl	801a790 <_ZdlPvj>
 8003ff2:	4620      	mov	r0, r4
 8003ff4:	bd10      	pop	{r4, pc}

08003ff6 <_ZN22sequenceScreenViewBaseD0Ev>:
    virtual ~sequenceScreenViewBase() {}
 8003ff6:	b510      	push	{r4, lr}
 8003ff8:	f44f 7111 	mov.w	r1, #580	; 0x244
 8003ffc:	4604      	mov	r4, r0
 8003ffe:	f016 fbc7 	bl	801a790 <_ZdlPvj>
 8004002:	4620      	mov	r0, r4
 8004004:	bd10      	pop	{r4, pc}

08004006 <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void sequenceScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backButton)
 8004006:	f100 02c8 	add.w	r2, r0, #200	; 0xc8
 800400a:	4291      	cmp	r1, r2
{
 800400c:	b510      	push	{r4, lr}
    if (&src == &backButton)
 800400e:	d105      	bne.n	800401c <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004010:	f008 ff10 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
        //SaveSequenceButton_Clicked
        //When saveSequenceButton clicked call virtual function
        //Call SaveSequenceButton_Clicked
        SaveSequenceButton_Clicked();
    }
}
 8004014:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotomainScreenScreenSlideTransitionWest();
 8004018:	f7fe bfd0 	b.w	8002fbc <_ZN23FrontendApplicationBase39gotomainScreenScreenSlideTransitionWestEv>
    else if (&src == &deletePositionButton)
 800401c:	f500 7282 	add.w	r2, r0, #260	; 0x104
 8004020:	4291      	cmp	r1, r2
 8004022:	d104      	bne.n	800402e <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
        DeletePositionButton_Clicked();
 8004024:	6803      	ldr	r3, [r0, #0]
 8004026:	6b9b      	ldr	r3, [r3, #56]	; 0x38
}
 8004028:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        SaveSequenceButton_Clicked();
 800402c:	4718      	bx	r3
    else if (&src == &addNewPositionButton)
 800402e:	f500 72a0 	add.w	r2, r0, #320	; 0x140
 8004032:	4291      	cmp	r1, r2
 8004034:	d102      	bne.n	800403c <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
        AddNewPositionButton_Clicked();
 8004036:	6803      	ldr	r3, [r0, #0]
 8004038:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800403a:	e7f5      	b.n	8004028 <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    else if (&src == &playSequenceButton)
 800403c:	f500 72be 	add.w	r2, r0, #380	; 0x17c
 8004040:	4291      	cmp	r1, r2
 8004042:	d102      	bne.n	800404a <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x44>
        PlaySequenceButton_Clicked();
 8004044:	6803      	ldr	r3, [r0, #0]
 8004046:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004048:	e7ee      	b.n	8004028 <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    else if (&src == &saveSequenceButton)
 800404a:	f500 72dc 	add.w	r2, r0, #440	; 0x1b8
 800404e:	4291      	cmp	r1, r2
 8004050:	d102      	bne.n	8004058 <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x52>
        SaveSequenceButton_Clicked();
 8004052:	6803      	ldr	r3, [r0, #0]
 8004054:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004056:	e7e7      	b.n	8004028 <_ZN22sequenceScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
}
 8004058:	bd10      	pop	{r4, pc}
	...

0800405c <_ZN22sequenceScreenViewBaseC1Ev>:
sequenceScreenViewBase::sequenceScreenViewBase() :
 800405c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004060:	4604      	mov	r4, r0
 8004062:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &sequenceScreenViewBase::buttonCallbackHandler)
 8004064:	46a1      	mov	r9, r4
 8004066:	2500      	movs	r5, #0
 8004068:	f009 feee 	bl	800de48 <_ZN8touchgfx6ScreenC1Ev>
 800406c:	4bca      	ldr	r3, [pc, #808]	; (8004398 <_ZN22sequenceScreenViewBaseC1Ev+0x33c>)
 800406e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004070:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8004074:	f04f 0826 	mov.w	r8, #38	; 0x26
 8004078:	4642      	mov	r2, r8
 800407a:	4629      	mov	r1, r5
 800407c:	4648      	mov	r0, r9
 800407e:	f016 fc3c 	bl	801a8fa <memset>
 8004082:	4648      	mov	r0, r9
 8004084:	f7ff fd0e 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8004088:	4bc4      	ldr	r3, [pc, #784]	; (800439c <_ZN22sequenceScreenViewBaseC1Ev+0x340>)
 800408a:	6423      	str	r3, [r4, #64]	; 0x40
 800408c:	ae0e      	add	r6, sp, #56	; 0x38
 800408e:	f104 0b70 	add.w	fp, r4, #112	; 0x70
 8004092:	23ff      	movs	r3, #255	; 0xff
        : Widget(), alpha(255)
 8004094:	4642      	mov	r2, r8
 8004096:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800409a:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800409e:	4629      	mov	r1, r5
 80040a0:	66a5      	str	r5, [r4, #104]	; 0x68
 80040a2:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 80040a6:	4658      	mov	r0, fp
 80040a8:	f826 7d08 	strh.w	r7, [r6, #-8]!
 80040ac:	f016 fc25 	bl	801a8fa <memset>
 80040b0:	4658      	mov	r0, fp
 80040b2:	f7ff fcf7 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 80040b6:	4bba      	ldr	r3, [pc, #744]	; (80043a0 <_ZN22sequenceScreenViewBaseC1Ev+0x344>)
 80040b8:	6723      	str	r3, [r4, #112]	; 0x70
        setBitmap(bmp);
 80040ba:	4631      	mov	r1, r6
 80040bc:	f8a4 7096 	strh.w	r7, [r4, #150]	; 0x96
        : Widget(), alpha(255)
 80040c0:	f884 7098 	strb.w	r7, [r4, #152]	; 0x98
        setBitmap(bmp);
 80040c4:	4658      	mov	r0, fp
 80040c6:	f007 fe5c 	bl	800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80040ca:	f104 039c 	add.w	r3, r4, #156	; 0x9c
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 80040ce:	4618      	mov	r0, r3
 80040d0:	9307      	str	r3, [sp, #28]
 80040d2:	f7ff fce7 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 80040d6:	4bb3      	ldr	r3, [pc, #716]	; (80043a4 <_ZN22sequenceScreenViewBaseC1Ev+0x348>)
 80040d8:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 80040dc:	f104 03c8 	add.w	r3, r4, #200	; 0xc8
 80040e0:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 80040e4:	4618      	mov	r0, r3
 80040e6:	9302      	str	r3, [sp, #8]
 80040e8:	f007 fe26 	bl	800bd38 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80040ec:	f504 7382 	add.w	r3, r4, #260	; 0x104
 80040f0:	4618      	mov	r0, r3
 80040f2:	9303      	str	r3, [sp, #12]
 80040f4:	f007 fe20 	bl	800bd38 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80040f8:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 80040fc:	4618      	mov	r0, r3
 80040fe:	9304      	str	r3, [sp, #16]
 8004100:	f007 fe1a 	bl	800bd38 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004104:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 8004108:	4618      	mov	r0, r3
 800410a:	9305      	str	r3, [sp, #20]
 800410c:	f007 fe14 	bl	800bd38 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004110:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8004114:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8004118:	4618      	mov	r0, r3
 800411a:	9306      	str	r3, [sp, #24]
 800411c:	f007 fe0c 	bl	800bd38 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8004120:	4642      	mov	r2, r8
 8004122:	4629      	mov	r1, r5
 8004124:	4650      	mov	r0, sl
 8004126:	f016 fbe8 	bl	801a8fa <memset>
 800412a:	4650      	mov	r0, sl
 800412c:	f7ff fcba 	bl	8003aa4 <_ZN8touchgfx8DrawableC1Ev>
 8004130:	4b9d      	ldr	r3, [pc, #628]	; (80043a8 <_ZN22sequenceScreenViewBaseC1Ev+0x34c>)
 8004132:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8004136:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 800413a:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 800413e:	4b9b      	ldr	r3, [pc, #620]	; (80043ac <_ZN22sequenceScreenViewBaseC1Ev+0x350>)
 8004140:	f8c4 31f4 	str.w	r3, [r4, #500]	; 0x1f4
    {
 8004144:	4b9a      	ldr	r3, [pc, #616]	; (80043b0 <_ZN22sequenceScreenViewBaseC1Ev+0x354>)
 8004146:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
        this->pmemfun_1 = pmemfun_1;
 800414a:	4b9a      	ldr	r3, [pc, #616]	; (80043b4 <_ZN22sequenceScreenViewBaseC1Ev+0x358>)
 800414c:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
    __background.setPosition(0, 0, 240, 320);
 8004150:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004154:	f8a4 7220 	strh.w	r7, [r4, #544]	; 0x220
 8004158:	f8c4 5224 	str.w	r5, [r4, #548]	; 0x224
 800415c:	f884 522c 	strb.w	r5, [r4, #556]	; 0x22c
 8004160:	f884 522d 	strb.w	r5, [r4, #557]	; 0x22d
 8004164:	f8c4 5230 	str.w	r5, [r4, #560]	; 0x230
 8004168:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 800416c:	9300      	str	r3, [sp, #0]
 800416e:	462a      	mov	r2, r5
 8004170:	23f0      	movs	r3, #240	; 0xf0
 8004172:	4629      	mov	r1, r5
 8004174:	4648      	mov	r0, r9
        this->pobject = pobject;
 8004176:	f8c4 4238 	str.w	r4, [r4, #568]	; 0x238
 800417a:	f7ff fbbd 	bl	80038f8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800417e:	462a      	mov	r2, r5
 8004180:	4629      	mov	r1, r5
 8004182:	4628      	mov	r0, r5
 8004184:	f7ff fcc4 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    backgroundImage.setXY(0, 0);
 8004188:	462a      	mov	r2, r5
        this->color = color;
 800418a:	66a0      	str	r0, [r4, #104]	; 0x68
 800418c:	4629      	mov	r1, r5
 800418e:	4658      	mov	r0, fp
 8004190:	f7ff fbca 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));
 8004194:	4631      	mov	r1, r6
 8004196:	4658      	mov	r0, fp
 8004198:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 800419c:	f007 fdf1 	bl	800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    positionsList.setPosition(0, 60, 240, 200);
 80041a0:	23c8      	movs	r3, #200	; 0xc8
 80041a2:	9300      	str	r3, [sp, #0]
 80041a4:	4629      	mov	r1, r5
 80041a6:	23f0      	movs	r3, #240	; 0xf0
 80041a8:	9807      	ldr	r0, [sp, #28]
 80041aa:	223c      	movs	r2, #60	; 0x3c
 80041ac:	f7ff fba4 	bl	80038f8 <_ZN8touchgfx8Drawable11setPositionEssss>
    backButton.setXY(0, 260);
 80041b0:	4629      	mov	r1, r5
 80041b2:	9802      	ldr	r0, [sp, #8]
 80041b4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80041b8:	f7ff fbb6 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 80041bc:	2304      	movs	r3, #4
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
 80041be:	a90b      	add	r1, sp, #44	; 0x2c
 80041c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80041c4:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80041c8:	f04f 0201 	mov.w	r2, #1
 80041cc:	460b      	mov	r3, r1
 80041ce:	a90a      	add	r1, sp, #40	; 0x28
 80041d0:	f04f 0802 	mov.w	r8, #2
 80041d4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80041d8:	9802      	ldr	r0, [sp, #8]
 80041da:	9600      	str	r6, [sp, #0]
 80041dc:	460a      	mov	r2, r1
 80041de:	a909      	add	r1, sp, #36	; 0x24
    backButton.setAction(buttonCallback);
 80041e0:	f504 770d 	add.w	r7, r4, #564	; 0x234
 80041e4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
 80041e8:	f007 fd02 	bl	800bbf0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 80041ec:	2316      	movs	r3, #22
        iconY = y;
 80041ee:	f04f 010f 	mov.w	r1, #15
        iconX = x;
 80041f2:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
        iconY = y;
 80041f6:	f8a4 1102 	strh.w	r1, [r4, #258]	; 0x102
    deletePositionButton.setXY(180, 0);
 80041fa:	462a      	mov	r2, r5
 80041fc:	9803      	ldr	r0, [sp, #12]
 80041fe:	f8c4 70f0 	str.w	r7, [r4, #240]	; 0xf0
 8004202:	21b4      	movs	r1, #180	; 0xb4
 8004204:	f7ff fb90 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 8004208:	2307      	movs	r3, #7
    deletePositionButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
 800420a:	a80b      	add	r0, sp, #44	; 0x2c
 800420c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004210:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8004214:	f04f 0201 	mov.w	r2, #1
 8004218:	4603      	mov	r3, r0
 800421a:	a80a      	add	r0, sp, #40	; 0x28
 800421c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004220:	4602      	mov	r2, r0
 8004222:	a809      	add	r0, sp, #36	; 0x24
 8004224:	4601      	mov	r1, r0
 8004226:	9600      	str	r6, [sp, #0]
 8004228:	9803      	ldr	r0, [sp, #12]
 800422a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800422e:	f007 fcdf 	bl	800bbf0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 8004232:	f04f 0010 	mov.w	r0, #16
 8004236:	f8a4 013c 	strh.w	r0, [r4, #316]	; 0x13c
        iconY = y;
 800423a:	f8a4 013e 	strh.w	r0, [r4, #318]	; 0x13e
 800423e:	f8c4 712c 	str.w	r7, [r4, #300]	; 0x12c
    addNewPositionButton.setXY(90, 260);
 8004242:	9804      	ldr	r0, [sp, #16]
 8004244:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004248:	215a      	movs	r1, #90	; 0x5a
 800424a:	f7ff fb6d 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800424e:	2303      	movs	r3, #3
    addNewPositionButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
 8004250:	f10d 0c2c 	add.w	ip, sp, #44	; 0x2c
 8004254:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004258:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800425c:	f04f 0201 	mov.w	r2, #1
 8004260:	4663      	mov	r3, ip
 8004262:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8004266:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800426a:	4662      	mov	r2, ip
 800426c:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
 8004270:	4661      	mov	r1, ip
 8004272:	9804      	ldr	r0, [sp, #16]
 8004274:	9600      	str	r6, [sp, #0]
 8004276:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800427a:	f007 fcb9 	bl	800bbf0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 800427e:	f04f 0010 	mov.w	r0, #16
 8004282:	f8a4 0178 	strh.w	r0, [r4, #376]	; 0x178
        iconY = y;
 8004286:	f8a4 017a 	strh.w	r0, [r4, #378]	; 0x17a
 800428a:	f8c4 7168 	str.w	r7, [r4, #360]	; 0x168
    playSequenceButton.setXY(180, 260);
 800428e:	9805      	ldr	r0, [sp, #20]
 8004290:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004294:	21b4      	movs	r1, #180	; 0xb4
 8004296:	f7ff fb47 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800429a:	2306      	movs	r3, #6
    playSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID));
 800429c:	a80b      	add	r0, sp, #44	; 0x2c
 800429e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80042a2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80042a6:	f04f 0201 	mov.w	r2, #1
 80042aa:	4603      	mov	r3, r0
 80042ac:	a80a      	add	r0, sp, #40	; 0x28
 80042ae:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80042b2:	4602      	mov	r2, r0
 80042b4:	a809      	add	r0, sp, #36	; 0x24
 80042b6:	4601      	mov	r1, r0
 80042b8:	9600      	str	r6, [sp, #0]
 80042ba:	9805      	ldr	r0, [sp, #20]
 80042bc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80042c0:	f007 fc96 	bl	800bbf0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 80042c4:	2314      	movs	r3, #20
        iconY = y;
 80042c6:	f04f 010f 	mov.w	r1, #15
        iconX = x;
 80042ca:	f8a4 31b4 	strh.w	r3, [r4, #436]	; 0x1b4
        iconY = y;
 80042ce:	f8a4 11b6 	strh.w	r1, [r4, #438]	; 0x1b6
    saveSequenceButton.setXY(0, 0);
 80042d2:	462a      	mov	r2, r5
 80042d4:	4629      	mov	r1, r5
 80042d6:	9806      	ldr	r0, [sp, #24]
 80042d8:	f8c4 71a4 	str.w	r7, [r4, #420]	; 0x1a4
 80042dc:	f7ff fb24 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 80042e0:	f04f 0201 	mov.w	r2, #1
 80042e4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
    saveSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DONE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DONE_32_ID));
 80042e8:	a809      	add	r0, sp, #36	; 0x24
 80042ea:	aa0b      	add	r2, sp, #44	; 0x2c
 80042ec:	4613      	mov	r3, r2
 80042ee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80042f2:	aa0a      	add	r2, sp, #40	; 0x28
 80042f4:	f04f 0805 	mov.w	r8, #5
 80042f8:	4601      	mov	r1, r0
 80042fa:	9600      	str	r6, [sp, #0]
 80042fc:	9806      	ldr	r0, [sp, #24]
 80042fe:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8004302:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8004306:	f007 fc73 	bl	800bbf0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 800430a:	f04f 010f 	mov.w	r1, #15
 800430e:	f8a4 11f0 	strh.w	r1, [r4, #496]	; 0x1f0
        iconY = y;
 8004312:	f8a4 11f2 	strh.w	r1, [r4, #498]	; 0x1f2
    infoTextArea.setXY(95, 18);
 8004316:	4650      	mov	r0, sl
 8004318:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
 800431c:	2212      	movs	r2, #18
 800431e:	215f      	movs	r1, #95	; 0x5f
 8004320:	f7ff fb02 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
    infoTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8004324:	462a      	mov	r2, r5
 8004326:	4629      	mov	r1, r5
 8004328:	4628      	mov	r0, r5
 800432a:	f7ff fbf1 	bl	8003b10 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800432e:	4b1e      	ldr	r3, [pc, #120]	; (80043a8 <_ZN22sequenceScreenViewBaseC1Ev+0x34c>)
        this->color = color;
 8004330:	f8c4 0224 	str.w	r0, [r4, #548]	; 0x224
        linespace = space;
 8004334:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
    infoTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
 8004338:	4631      	mov	r1, r6
 800433a:	1d25      	adds	r5, r4, #4
 800433c:	4650      	mov	r0, sl
 800433e:	930c      	str	r3, [sp, #48]	; 0x30
 8004340:	f8ad 8034 	strh.w	r8, [sp, #52]	; 0x34
 8004344:	f007 fa54 	bl	800b7f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 8004348:	4649      	mov	r1, r9
 800434a:	4628      	mov	r0, r5
 800434c:	f005 fca2 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004350:	4659      	mov	r1, fp
 8004352:	4628      	mov	r0, r5
 8004354:	f005 fc9e 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004358:	9907      	ldr	r1, [sp, #28]
 800435a:	4628      	mov	r0, r5
 800435c:	f005 fc9a 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004360:	9902      	ldr	r1, [sp, #8]
 8004362:	4628      	mov	r0, r5
 8004364:	f005 fc96 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004368:	9903      	ldr	r1, [sp, #12]
 800436a:	4628      	mov	r0, r5
 800436c:	f005 fc92 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004370:	9904      	ldr	r1, [sp, #16]
 8004372:	4628      	mov	r0, r5
 8004374:	f005 fc8e 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004378:	9905      	ldr	r1, [sp, #20]
 800437a:	4628      	mov	r0, r5
 800437c:	f005 fc8a 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004380:	9906      	ldr	r1, [sp, #24]
 8004382:	4628      	mov	r0, r5
 8004384:	f005 fc86 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004388:	4628      	mov	r0, r5
 800438a:	4651      	mov	r1, sl
 800438c:	f005 fc82 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004390:	4620      	mov	r0, r4
 8004392:	b00f      	add	sp, #60	; 0x3c
 8004394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004398:	0801c8f8 	.word	0x0801c8f8
 800439c:	0801db20 	.word	0x0801db20
 80043a0:	0801dd74 	.word	0x0801dd74
 80043a4:	0801cd40 	.word	0x0801cd40
 80043a8:	0801beb8 	.word	0x0801beb8
 80043ac:	0801dc20 	.word	0x0801dc20
 80043b0:	0801c8e0 	.word	0x0801c8e0
 80043b4:	08004007 	.word	0x08004007

080043b8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80043b8:	4770      	bx	lr

080043ba <_ZN19FrontendApplicationD0Ev>:
 80043ba:	b510      	push	{r4, lr}
 80043bc:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80043c0:	4604      	mov	r4, r0
 80043c2:	f016 f9e5 	bl	801a790 <_ZdlPvj>
 80043c6:	4620      	mov	r0, r4
 80043c8:	bd10      	pop	{r4, pc}

080043ca <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80043ca:	b510      	push	{r4, lr}
 80043cc:	4604      	mov	r4, r0
    {
        model.tick();
 80043ce:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80043d2:	f000 f812 	bl	80043fa <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80043d6:	4620      	mov	r0, r4
    }
 80043d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80043dc:	f008 bc02 	b.w	800cbe4 <_ZN8touchgfx11Application15handleTickEventEv>

080043e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80043e0:	b510      	push	{r4, lr}
 80043e2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80043e4:	f7fe fda2 	bl	8002f2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80043e8:	4b01      	ldr	r3, [pc, #4]	; (80043f0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80043ea:	6023      	str	r3, [r4, #0]
{

}
 80043ec:	4620      	mov	r0, r4
 80043ee:	bd10      	pop	{r4, pc}
 80043f0:	0801c93c 	.word	0x0801c93c

080043f4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80043f4:	2200      	movs	r2, #0
 80043f6:	6002      	str	r2, [r0, #0]
{

}
 80043f8:	4770      	bx	lr

080043fa <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80043fa:	4770      	bx	lr

080043fc <_ZN19mainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~mainScreenPresenter() {};
 80043fc:	4770      	bx	lr

080043fe <_ZThn4_N19mainScreenPresenterD1Ev>:
 80043fe:	3804      	subs	r0, #4
 8004400:	4770      	bx	lr

08004402 <_ZN19mainScreenPresenter10deactivateEv>:
}

void mainScreenPresenter::activate()
{

}
 8004402:	4770      	bx	lr

08004404 <_ZN19mainScreenPresenterD0Ev>:
 8004404:	b510      	push	{r4, lr}
 8004406:	2110      	movs	r1, #16
 8004408:	4604      	mov	r4, r0
 800440a:	f016 f9c1 	bl	801a790 <_ZdlPvj>
 800440e:	4620      	mov	r0, r4
 8004410:	bd10      	pop	{r4, pc}

08004412 <_ZThn4_N19mainScreenPresenterD0Ev>:
 8004412:	f1a0 0004 	sub.w	r0, r0, #4
 8004416:	e7f5      	b.n	8004404 <_ZN19mainScreenPresenterD0Ev>

08004418 <_ZN19mainScreenPresenterC1ER14mainScreenView>:
mainScreenPresenter::mainScreenPresenter(mainScreenView& v)
 8004418:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800441a:	2200      	movs	r2, #0
 800441c:	6082      	str	r2, [r0, #8]
    : view(v)
 800441e:	4a04      	ldr	r2, [pc, #16]	; (8004430 <_ZN19mainScreenPresenterC1ER14mainScreenView+0x18>)
 8004420:	60c1      	str	r1, [r0, #12]
 8004422:	f102 0408 	add.w	r4, r2, #8
 8004426:	3220      	adds	r2, #32
 8004428:	6004      	str	r4, [r0, #0]
 800442a:	6042      	str	r2, [r0, #4]
}
 800442c:	bd10      	pop	{r4, pc}
 800442e:	bf00      	nop
 8004430:	0801c978 	.word	0x0801c978

08004434 <_ZN14mainScreenViewD1Ev>:

class mainScreenView : public mainScreenViewBase
{
public:
    mainScreenView();
    virtual ~mainScreenView() {}
 8004434:	4770      	bx	lr

08004436 <_ZN14mainScreenView14tearDownScreenEv>:
}

void mainScreenView::tearDownScreen()
{
    mainScreenViewBase::tearDownScreen();
}
 8004436:	4770      	bx	lr

08004438 <_ZN14mainScreenView24XAxisSliderValue_ChangedEi>:

void mainScreenView::XAxisSliderValue_Changed(int value)
{
	xAxisPWMDuty = 275 + 9 * value;
 8004438:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 800443c:	4b02      	ldr	r3, [pc, #8]	; (8004448 <_ZN14mainScreenView24XAxisSliderValue_ChangedEi+0x10>)
 800443e:	f201 1113 	addw	r1, r1, #275	; 0x113
 8004442:	6019      	str	r1, [r3, #0]
}
 8004444:	4770      	bx	lr
 8004446:	bf00      	nop
 8004448:	20000018 	.word	0x20000018
 800444c:	00000000 	.word	0x00000000

08004450 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi>:

void mainScreenView::YAxisSlider_L_Value_Changed(int value)
{
	yAxisPWMDuty_L = (int) (842.0 + 5.06 * (float)value);
 8004450:	ee07 1a90 	vmov	s15, r1
 8004454:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 8004458:	b508      	push	{r3, lr}
	yAxisPWMDuty_L = (int) (842.0 + 5.06 * (float)value);
 800445a:	ee17 0a90 	vmov	r0, s15
 800445e:	f7fc f87b 	bl	8000558 <__aeabi_f2d>
 8004462:	a309      	add	r3, pc, #36	; (adr r3, 8004488 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x38>)
 8004464:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004468:	f7fc f8ce 	bl	8000608 <__aeabi_dmul>
 800446c:	4b04      	ldr	r3, [pc, #16]	; (8004480 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x30>)
 800446e:	2200      	movs	r2, #0
 8004470:	f7fb ff14 	bl	800029c <__adddf3>
 8004474:	f7fc fada 	bl	8000a2c <__aeabi_d2iz>
 8004478:	4b02      	ldr	r3, [pc, #8]	; (8004484 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x34>)
 800447a:	6018      	str	r0, [r3, #0]
}
 800447c:	bd08      	pop	{r3, pc}
 800447e:	bf00      	nop
 8004480:	408a5000 	.word	0x408a5000
 8004484:	2000001c 	.word	0x2000001c
 8004488:	a3d70a3d 	.word	0xa3d70a3d
 800448c:	40143d70 	.word	0x40143d70

08004490 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi>:

void mainScreenView::YAxisSlider_R_Value_Changed(int value)
{
	yAxisPWMDuty_R = (int) (842.0 + 3.42 * (float)value);
 8004490:	ee07 1a90 	vmov	s15, r1
 8004494:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 8004498:	b508      	push	{r3, lr}
	yAxisPWMDuty_R = (int) (842.0 + 3.42 * (float)value);
 800449a:	ee17 0a90 	vmov	r0, s15
 800449e:	f7fc f85b 	bl	8000558 <__aeabi_f2d>
 80044a2:	a309      	add	r3, pc, #36	; (adr r3, 80044c8 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x38>)
 80044a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044a8:	f7fc f8ae 	bl	8000608 <__aeabi_dmul>
 80044ac:	4b04      	ldr	r3, [pc, #16]	; (80044c0 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x30>)
 80044ae:	2200      	movs	r2, #0
 80044b0:	f7fb fef4 	bl	800029c <__adddf3>
 80044b4:	f7fc faba 	bl	8000a2c <__aeabi_d2iz>
 80044b8:	4b02      	ldr	r3, [pc, #8]	; (80044c4 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x34>)
 80044ba:	6018      	str	r0, [r3, #0]
}
 80044bc:	bd08      	pop	{r3, pc}
 80044be:	bf00      	nop
 80044c0:	408a5000 	.word	0x408a5000
 80044c4:	20000020 	.word	0x20000020
 80044c8:	f5c28f5c 	.word	0xf5c28f5c
 80044cc:	400b5c28 	.word	0x400b5c28

080044d0 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv>:

void mainScreenView::ManipulatorControlToggleButton_Clicked()
{
	static bool state = false;

	if (state)
 80044d0:	4b07      	ldr	r3, [pc, #28]	; (80044f0 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x20>)
 80044d2:	4a08      	ldr	r2, [pc, #32]	; (80044f4 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x24>)
 80044d4:	7819      	ldrb	r1, [r3, #0]
 80044d6:	b129      	cbz	r1, 80044e4 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x14>
	{
		manipulatorPWMDuty = 275;
 80044d8:	f240 1113 	movw	r1, #275	; 0x113
 80044dc:	6011      	str	r1, [r2, #0]
		state = false;
 80044de:	2200      	movs	r2, #0
	}
	else
	{
		manipulatorPWMDuty = 700;
		state = true;
 80044e0:	701a      	strb	r2, [r3, #0]
	}
}
 80044e2:	4770      	bx	lr
		manipulatorPWMDuty = 700;
 80044e4:	f44f 712f 	mov.w	r1, #700	; 0x2bc
 80044e8:	6011      	str	r1, [r2, #0]
		state = true;
 80044ea:	2201      	movs	r2, #1
 80044ec:	e7f8      	b.n	80044e0 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x10>
 80044ee:	bf00      	nop
 80044f0:	200016a0 	.word	0x200016a0
 80044f4:	20000014 	.word	0x20000014

080044f8 <_ZN14mainScreenView11setupScreenEv>:
    mainScreenViewBase::setupScreen();
 80044f8:	f7ff ba54 	b.w	80039a4 <_ZN18mainScreenViewBase11setupScreenEv>

080044fc <_ZN14mainScreenViewD0Ev>:
 80044fc:	b510      	push	{r4, lr}
 80044fe:	f44f 61aa 	mov.w	r1, #1360	; 0x550
 8004502:	4604      	mov	r4, r0
 8004504:	f016 f944 	bl	801a790 <_ZdlPvj>
 8004508:	4620      	mov	r0, r4
 800450a:	bd10      	pop	{r4, pc}

0800450c <_ZN14mainScreenViewC1Ev>:
mainScreenView::mainScreenView()
 800450c:	b510      	push	{r4, lr}
 800450e:	4604      	mov	r4, r0
 8004510:	f7ff fb20 	bl	8003b54 <_ZN18mainScreenViewBaseC1Ev>
 8004514:	4b0d      	ldr	r3, [pc, #52]	; (800454c <_ZN14mainScreenViewC1Ev+0x40>)
 8004516:	6023      	str	r3, [r4, #0]
	HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_4, &xAxisPWMDuty, 1);
 8004518:	4a0d      	ldr	r2, [pc, #52]	; (8004550 <_ZN14mainScreenViewC1Ev+0x44>)
 800451a:	480e      	ldr	r0, [pc, #56]	; (8004554 <_ZN14mainScreenViewC1Ev+0x48>)
 800451c:	2301      	movs	r3, #1
 800451e:	210c      	movs	r1, #12
 8004520:	f003 f882 	bl	8007628 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim3, TIM_CHANNEL_2, &yAxisPWMDuty_L, 1);
 8004524:	2301      	movs	r3, #1
 8004526:	4a0c      	ldr	r2, [pc, #48]	; (8004558 <_ZN14mainScreenViewC1Ev+0x4c>)
 8004528:	480c      	ldr	r0, [pc, #48]	; (800455c <_ZN14mainScreenViewC1Ev+0x50>)
 800452a:	2104      	movs	r1, #4
 800452c:	f003 f87c 	bl	8007628 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim4, TIM_CHANNEL_1, &yAxisPWMDuty_R, 1);
 8004530:	2301      	movs	r3, #1
 8004532:	4a0b      	ldr	r2, [pc, #44]	; (8004560 <_ZN14mainScreenViewC1Ev+0x54>)
 8004534:	480b      	ldr	r0, [pc, #44]	; (8004564 <_ZN14mainScreenViewC1Ev+0x58>)
 8004536:	2100      	movs	r1, #0
 8004538:	f003 f876 	bl	8007628 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim5, TIM_CHANNEL_1, &manipulatorPWMDuty, 1);
 800453c:	2301      	movs	r3, #1
 800453e:	4a0a      	ldr	r2, [pc, #40]	; (8004568 <_ZN14mainScreenViewC1Ev+0x5c>)
 8004540:	480a      	ldr	r0, [pc, #40]	; (800456c <_ZN14mainScreenViewC1Ev+0x60>)
 8004542:	2100      	movs	r1, #0
 8004544:	f003 f870 	bl	8007628 <HAL_TIM_PWM_Start_DMA>
}
 8004548:	4620      	mov	r0, r4
 800454a:	bd10      	pop	{r4, pc}
 800454c:	0801c9a8 	.word	0x0801c9a8
 8004550:	20000018 	.word	0x20000018
 8004554:	20012a58 	.word	0x20012a58
 8004558:	2000001c 	.word	0x2000001c
 800455c:	2001286c 	.word	0x2001286c
 8004560:	20000020 	.word	0x20000020
 8004564:	20012784 	.word	0x20012784
 8004568:	20000014 	.word	0x20000014
 800456c:	2001282c 	.word	0x2001282c

08004570 <_ZN23sequenceScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~sequenceScreenPresenter() {};
 8004570:	4770      	bx	lr

08004572 <_ZThn4_N23sequenceScreenPresenterD1Ev>:
 8004572:	3804      	subs	r0, #4
 8004574:	4770      	bx	lr

08004576 <_ZN23sequenceScreenPresenter10deactivateEv>:
}

void sequenceScreenPresenter::activate()
{

}
 8004576:	4770      	bx	lr

08004578 <_ZN23sequenceScreenPresenterD0Ev>:
 8004578:	b510      	push	{r4, lr}
 800457a:	2110      	movs	r1, #16
 800457c:	4604      	mov	r4, r0
 800457e:	f016 f907 	bl	801a790 <_ZdlPvj>
 8004582:	4620      	mov	r0, r4
 8004584:	bd10      	pop	{r4, pc}

08004586 <_ZThn4_N23sequenceScreenPresenterD0Ev>:
 8004586:	f1a0 0004 	sub.w	r0, r0, #4
 800458a:	e7f5      	b.n	8004578 <_ZN23sequenceScreenPresenterD0Ev>

0800458c <_ZN23sequenceScreenPresenterC1ER18sequenceScreenView>:
sequenceScreenPresenter::sequenceScreenPresenter(sequenceScreenView& v)
 800458c:	b510      	push	{r4, lr}
 800458e:	2200      	movs	r2, #0
 8004590:	6082      	str	r2, [r0, #8]
    : view(v)
 8004592:	4a04      	ldr	r2, [pc, #16]	; (80045a4 <_ZN23sequenceScreenPresenterC1ER18sequenceScreenView+0x18>)
 8004594:	60c1      	str	r1, [r0, #12]
 8004596:	f102 0408 	add.w	r4, r2, #8
 800459a:	3220      	adds	r2, #32
 800459c:	6004      	str	r4, [r0, #0]
 800459e:	6042      	str	r2, [r0, #4]
}
 80045a0:	bd10      	pop	{r4, pc}
 80045a2:	bf00      	nop
 80045a4:	0801c9e4 	.word	0x0801c9e4

080045a8 <_ZN18sequenceScreenViewD1Ev>:

class sequenceScreenView : public sequenceScreenViewBase
{
public:
    sequenceScreenView();
    virtual ~sequenceScreenView() {}
 80045a8:	4770      	bx	lr

080045aa <_ZN18sequenceScreenView14tearDownScreenEv>:
}

void sequenceScreenView::tearDownScreen()
{
    sequenceScreenViewBase::tearDownScreen();
}
 80045aa:	4770      	bx	lr

080045ac <_ZN18sequenceScreenView11setupScreenEv>:
    sequenceScreenViewBase::setupScreen();
 80045ac:	f7ff bcff 	b.w	8003fae <_ZN22sequenceScreenViewBase11setupScreenEv>

080045b0 <_ZN18sequenceScreenViewD0Ev>:
 80045b0:	b510      	push	{r4, lr}
 80045b2:	f44f 7111 	mov.w	r1, #580	; 0x244
 80045b6:	4604      	mov	r4, r0
 80045b8:	f016 f8ea 	bl	801a790 <_ZdlPvj>
 80045bc:	4620      	mov	r0, r4
 80045be:	bd10      	pop	{r4, pc}

080045c0 <_ZN18sequenceScreenViewC1Ev>:
sequenceScreenView::sequenceScreenView()
 80045c0:	b510      	push	{r4, lr}
 80045c2:	4604      	mov	r4, r0
 80045c4:	f7ff fd4a 	bl	800405c <_ZN22sequenceScreenViewBaseC1Ev>
 80045c8:	4b01      	ldr	r3, [pc, #4]	; (80045d0 <_ZN18sequenceScreenViewC1Ev+0x10>)
 80045ca:	6023      	str	r3, [r4, #0]
}
 80045cc:	4620      	mov	r0, r4
 80045ce:	bd10      	pop	{r4, pc}
 80045d0:	0801ca14 	.word	0x0801ca14

080045d4 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80045d4:	20f0      	movs	r0, #240	; 0xf0
 80045d6:	4770      	bx	lr

080045d8 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80045d8:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80045dc:	4770      	bx	lr

080045de <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80045de:	2029      	movs	r0, #41	; 0x29
 80045e0:	f7fd bd7e 	b.w	80020e0 <LCD_IO_WriteReg>

080045e4 <ili9341_DisplayOff>:
 80045e4:	2028      	movs	r0, #40	; 0x28
 80045e6:	f7fd bd7b 	b.w	80020e0 <LCD_IO_WriteReg>

080045ea <ili9341_Init>:
{
 80045ea:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80045ec:	f7fd fd4c 	bl	8002088 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80045f0:	20ca      	movs	r0, #202	; 0xca
 80045f2:	f7fd fd75 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80045f6:	20c3      	movs	r0, #195	; 0xc3
 80045f8:	f7fd fd56 	bl	80020a8 <LCD_IO_WriteData>
 80045fc:	2008      	movs	r0, #8
 80045fe:	f7fd fd53 	bl	80020a8 <LCD_IO_WriteData>
 8004602:	2050      	movs	r0, #80	; 0x50
 8004604:	f7fd fd50 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004608:	20cf      	movs	r0, #207	; 0xcf
 800460a:	f7fd fd69 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800460e:	2000      	movs	r0, #0
 8004610:	f7fd fd4a 	bl	80020a8 <LCD_IO_WriteData>
 8004614:	20c1      	movs	r0, #193	; 0xc1
 8004616:	f7fd fd47 	bl	80020a8 <LCD_IO_WriteData>
 800461a:	2030      	movs	r0, #48	; 0x30
 800461c:	f7fd fd44 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004620:	20ed      	movs	r0, #237	; 0xed
 8004622:	f7fd fd5d 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004626:	2064      	movs	r0, #100	; 0x64
 8004628:	f7fd fd3e 	bl	80020a8 <LCD_IO_WriteData>
 800462c:	2003      	movs	r0, #3
 800462e:	f7fd fd3b 	bl	80020a8 <LCD_IO_WriteData>
 8004632:	2012      	movs	r0, #18
 8004634:	f7fd fd38 	bl	80020a8 <LCD_IO_WriteData>
 8004638:	2081      	movs	r0, #129	; 0x81
 800463a:	f7fd fd35 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800463e:	20e8      	movs	r0, #232	; 0xe8
 8004640:	f7fd fd4e 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004644:	2085      	movs	r0, #133	; 0x85
 8004646:	f7fd fd2f 	bl	80020a8 <LCD_IO_WriteData>
 800464a:	2000      	movs	r0, #0
 800464c:	f7fd fd2c 	bl	80020a8 <LCD_IO_WriteData>
 8004650:	2078      	movs	r0, #120	; 0x78
 8004652:	f7fd fd29 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004656:	20cb      	movs	r0, #203	; 0xcb
 8004658:	f7fd fd42 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800465c:	2039      	movs	r0, #57	; 0x39
 800465e:	f7fd fd23 	bl	80020a8 <LCD_IO_WriteData>
 8004662:	202c      	movs	r0, #44	; 0x2c
 8004664:	f7fd fd20 	bl	80020a8 <LCD_IO_WriteData>
 8004668:	2000      	movs	r0, #0
 800466a:	f7fd fd1d 	bl	80020a8 <LCD_IO_WriteData>
 800466e:	2034      	movs	r0, #52	; 0x34
 8004670:	f7fd fd1a 	bl	80020a8 <LCD_IO_WriteData>
 8004674:	2002      	movs	r0, #2
 8004676:	f7fd fd17 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800467a:	20f7      	movs	r0, #247	; 0xf7
 800467c:	f7fd fd30 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004680:	2020      	movs	r0, #32
 8004682:	f7fd fd11 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004686:	20ea      	movs	r0, #234	; 0xea
 8004688:	f7fd fd2a 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800468c:	2000      	movs	r0, #0
 800468e:	f7fd fd0b 	bl	80020a8 <LCD_IO_WriteData>
 8004692:	2000      	movs	r0, #0
 8004694:	f7fd fd08 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004698:	20b1      	movs	r0, #177	; 0xb1
 800469a:	f7fd fd21 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800469e:	2000      	movs	r0, #0
 80046a0:	f7fd fd02 	bl	80020a8 <LCD_IO_WriteData>
 80046a4:	201b      	movs	r0, #27
 80046a6:	f7fd fcff 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046aa:	20b6      	movs	r0, #182	; 0xb6
 80046ac:	f7fd fd18 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046b0:	200a      	movs	r0, #10
 80046b2:	f7fd fcf9 	bl	80020a8 <LCD_IO_WriteData>
 80046b6:	20a2      	movs	r0, #162	; 0xa2
 80046b8:	f7fd fcf6 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046bc:	20c0      	movs	r0, #192	; 0xc0
 80046be:	f7fd fd0f 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046c2:	2010      	movs	r0, #16
 80046c4:	f7fd fcf0 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046c8:	20c1      	movs	r0, #193	; 0xc1
 80046ca:	f7fd fd09 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046ce:	2010      	movs	r0, #16
 80046d0:	f7fd fcea 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046d4:	20c5      	movs	r0, #197	; 0xc5
 80046d6:	f7fd fd03 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046da:	2045      	movs	r0, #69	; 0x45
 80046dc:	f7fd fce4 	bl	80020a8 <LCD_IO_WriteData>
 80046e0:	2015      	movs	r0, #21
 80046e2:	f7fd fce1 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046e6:	20c7      	movs	r0, #199	; 0xc7
 80046e8:	f7fd fcfa 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046ec:	2090      	movs	r0, #144	; 0x90
 80046ee:	f7fd fcdb 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046f2:	2036      	movs	r0, #54	; 0x36
 80046f4:	f7fd fcf4 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80046f8:	20c8      	movs	r0, #200	; 0xc8
 80046fa:	f7fd fcd5 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80046fe:	20f2      	movs	r0, #242	; 0xf2
 8004700:	f7fd fcee 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004704:	2000      	movs	r0, #0
 8004706:	f7fd fccf 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800470a:	20b0      	movs	r0, #176	; 0xb0
 800470c:	f7fd fce8 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004710:	20c2      	movs	r0, #194	; 0xc2
 8004712:	f7fd fcc9 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004716:	20b6      	movs	r0, #182	; 0xb6
 8004718:	f7fd fce2 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800471c:	200a      	movs	r0, #10
 800471e:	f7fd fcc3 	bl	80020a8 <LCD_IO_WriteData>
 8004722:	20a7      	movs	r0, #167	; 0xa7
 8004724:	f7fd fcc0 	bl	80020a8 <LCD_IO_WriteData>
 8004728:	2027      	movs	r0, #39	; 0x27
 800472a:	f7fd fcbd 	bl	80020a8 <LCD_IO_WriteData>
 800472e:	2004      	movs	r0, #4
 8004730:	f7fd fcba 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004734:	202a      	movs	r0, #42	; 0x2a
 8004736:	f7fd fcd3 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800473a:	2000      	movs	r0, #0
 800473c:	f7fd fcb4 	bl	80020a8 <LCD_IO_WriteData>
 8004740:	2000      	movs	r0, #0
 8004742:	f7fd fcb1 	bl	80020a8 <LCD_IO_WriteData>
 8004746:	2000      	movs	r0, #0
 8004748:	f7fd fcae 	bl	80020a8 <LCD_IO_WriteData>
 800474c:	20ef      	movs	r0, #239	; 0xef
 800474e:	f7fd fcab 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004752:	202b      	movs	r0, #43	; 0x2b
 8004754:	f7fd fcc4 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004758:	2000      	movs	r0, #0
 800475a:	f7fd fca5 	bl	80020a8 <LCD_IO_WriteData>
 800475e:	2000      	movs	r0, #0
 8004760:	f7fd fca2 	bl	80020a8 <LCD_IO_WriteData>
 8004764:	2001      	movs	r0, #1
 8004766:	f7fd fc9f 	bl	80020a8 <LCD_IO_WriteData>
 800476a:	203f      	movs	r0, #63	; 0x3f
 800476c:	f7fd fc9c 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004770:	20f6      	movs	r0, #246	; 0xf6
 8004772:	f7fd fcb5 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004776:	2001      	movs	r0, #1
 8004778:	f7fd fc96 	bl	80020a8 <LCD_IO_WriteData>
 800477c:	2000      	movs	r0, #0
 800477e:	f7fd fc93 	bl	80020a8 <LCD_IO_WriteData>
 8004782:	2006      	movs	r0, #6
 8004784:	f7fd fc90 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004788:	202c      	movs	r0, #44	; 0x2c
 800478a:	f7fd fca9 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800478e:	20c8      	movs	r0, #200	; 0xc8
 8004790:	f7fd fcf4 	bl	800217c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004794:	2026      	movs	r0, #38	; 0x26
 8004796:	f7fd fca3 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800479a:	2001      	movs	r0, #1
 800479c:	f7fd fc84 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047a0:	20e0      	movs	r0, #224	; 0xe0
 80047a2:	f7fd fc9d 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047a6:	200f      	movs	r0, #15
 80047a8:	f7fd fc7e 	bl	80020a8 <LCD_IO_WriteData>
 80047ac:	2029      	movs	r0, #41	; 0x29
 80047ae:	f7fd fc7b 	bl	80020a8 <LCD_IO_WriteData>
 80047b2:	2024      	movs	r0, #36	; 0x24
 80047b4:	f7fd fc78 	bl	80020a8 <LCD_IO_WriteData>
 80047b8:	200c      	movs	r0, #12
 80047ba:	f7fd fc75 	bl	80020a8 <LCD_IO_WriteData>
 80047be:	200e      	movs	r0, #14
 80047c0:	f7fd fc72 	bl	80020a8 <LCD_IO_WriteData>
 80047c4:	2009      	movs	r0, #9
 80047c6:	f7fd fc6f 	bl	80020a8 <LCD_IO_WriteData>
 80047ca:	204e      	movs	r0, #78	; 0x4e
 80047cc:	f7fd fc6c 	bl	80020a8 <LCD_IO_WriteData>
 80047d0:	2078      	movs	r0, #120	; 0x78
 80047d2:	f7fd fc69 	bl	80020a8 <LCD_IO_WriteData>
 80047d6:	203c      	movs	r0, #60	; 0x3c
 80047d8:	f7fd fc66 	bl	80020a8 <LCD_IO_WriteData>
 80047dc:	2009      	movs	r0, #9
 80047de:	f7fd fc63 	bl	80020a8 <LCD_IO_WriteData>
 80047e2:	2013      	movs	r0, #19
 80047e4:	f7fd fc60 	bl	80020a8 <LCD_IO_WriteData>
 80047e8:	2005      	movs	r0, #5
 80047ea:	f7fd fc5d 	bl	80020a8 <LCD_IO_WriteData>
 80047ee:	2017      	movs	r0, #23
 80047f0:	f7fd fc5a 	bl	80020a8 <LCD_IO_WriteData>
 80047f4:	2011      	movs	r0, #17
 80047f6:	f7fd fc57 	bl	80020a8 <LCD_IO_WriteData>
 80047fa:	2000      	movs	r0, #0
 80047fc:	f7fd fc54 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004800:	20e1      	movs	r0, #225	; 0xe1
 8004802:	f7fd fc6d 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004806:	2000      	movs	r0, #0
 8004808:	f7fd fc4e 	bl	80020a8 <LCD_IO_WriteData>
 800480c:	2016      	movs	r0, #22
 800480e:	f7fd fc4b 	bl	80020a8 <LCD_IO_WriteData>
 8004812:	201b      	movs	r0, #27
 8004814:	f7fd fc48 	bl	80020a8 <LCD_IO_WriteData>
 8004818:	2004      	movs	r0, #4
 800481a:	f7fd fc45 	bl	80020a8 <LCD_IO_WriteData>
 800481e:	2011      	movs	r0, #17
 8004820:	f7fd fc42 	bl	80020a8 <LCD_IO_WriteData>
 8004824:	2007      	movs	r0, #7
 8004826:	f7fd fc3f 	bl	80020a8 <LCD_IO_WriteData>
 800482a:	2031      	movs	r0, #49	; 0x31
 800482c:	f7fd fc3c 	bl	80020a8 <LCD_IO_WriteData>
 8004830:	2033      	movs	r0, #51	; 0x33
 8004832:	f7fd fc39 	bl	80020a8 <LCD_IO_WriteData>
 8004836:	2042      	movs	r0, #66	; 0x42
 8004838:	f7fd fc36 	bl	80020a8 <LCD_IO_WriteData>
 800483c:	2005      	movs	r0, #5
 800483e:	f7fd fc33 	bl	80020a8 <LCD_IO_WriteData>
 8004842:	200c      	movs	r0, #12
 8004844:	f7fd fc30 	bl	80020a8 <LCD_IO_WriteData>
 8004848:	200a      	movs	r0, #10
 800484a:	f7fd fc2d 	bl	80020a8 <LCD_IO_WriteData>
 800484e:	2028      	movs	r0, #40	; 0x28
 8004850:	f7fd fc2a 	bl	80020a8 <LCD_IO_WriteData>
 8004854:	202f      	movs	r0, #47	; 0x2f
 8004856:	f7fd fc27 	bl	80020a8 <LCD_IO_WriteData>
 800485a:	200f      	movs	r0, #15
 800485c:	f7fd fc24 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004860:	2011      	movs	r0, #17
 8004862:	f7fd fc3d 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004866:	20c8      	movs	r0, #200	; 0xc8
 8004868:	f7fd fc88 	bl	800217c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800486c:	2029      	movs	r0, #41	; 0x29
 800486e:	f7fd fc37 	bl	80020e0 <LCD_IO_WriteReg>
 8004872:	202c      	movs	r0, #44	; 0x2c
}
 8004874:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8004878:	f7fd bc32 	b.w	80020e0 <LCD_IO_WriteReg>

0800487c <ili9341_ReadID>:
{
 800487c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800487e:	f7fd fc03 	bl	8002088 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8004882:	2103      	movs	r1, #3
 8004884:	20d3      	movs	r0, #211	; 0xd3
 8004886:	f7fd fc47 	bl	8002118 <LCD_IO_ReadData>
}
 800488a:	b280      	uxth	r0, r0
 800488c:	bd08      	pop	{r3, pc}

0800488e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800488e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004890:	b2c4      	uxtb	r4, r0
 8004892:	2202      	movs	r2, #2
 8004894:	2103      	movs	r1, #3
 8004896:	4620      	mov	r0, r4
 8004898:	f7fd fbae 	bl	8001ff8 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800489c:	200a      	movs	r0, #10
 800489e:	f7fd fbf1 	bl	8002084 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80048a2:	4620      	mov	r0, r4
 80048a4:	2200      	movs	r2, #0
 80048a6:	2103      	movs	r1, #3
 80048a8:	f7fd fba6 	bl	8001ff8 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 80048ac:	2002      	movs	r0, #2
}
 80048ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80048b2:	f7fd bbe7 	b.w	8002084 <IOE_Delay>

080048b6 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80048b6:	b538      	push	{r3, r4, r5, lr}
 80048b8:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80048ba:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80048bc:	f7fd fb9a 	bl	8001ff4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80048c0:	2100      	movs	r1, #0
 80048c2:	4620      	mov	r0, r4
 80048c4:	f7fd fbae 	bl	8002024 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80048c8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80048ca:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80048cc:	4620      	mov	r0, r4
 80048ce:	f7fd fba9 	bl	8002024 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80048d2:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80048d6:	b280      	uxth	r0, r0
 80048d8:	bd38      	pop	{r3, r4, r5, pc}

080048da <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80048da:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80048dc:	b2c4      	uxtb	r4, r0
 80048de:	2140      	movs	r1, #64	; 0x40
 80048e0:	4620      	mov	r0, r4
 80048e2:	f7fd fb9f 	bl	8002024 <IOE_Read>
  
  if(state > 0)
 80048e6:	0603      	lsls	r3, r0, #24
 80048e8:	d507      	bpl.n	80048fa <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80048ea:	214c      	movs	r1, #76	; 0x4c
 80048ec:	4620      	mov	r0, r4
 80048ee:	f7fd fb99 	bl	8002024 <IOE_Read>
    {
      ret = 1;
 80048f2:	3000      	adds	r0, #0
 80048f4:	bf18      	it	ne
 80048f6:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80048f8:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80048fa:	2201      	movs	r2, #1
 80048fc:	214b      	movs	r1, #75	; 0x4b
 80048fe:	4620      	mov	r0, r4
 8004900:	f7fd fb7a 	bl	8001ff8 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004904:	4620      	mov	r0, r4
 8004906:	2200      	movs	r2, #0
 8004908:	214b      	movs	r1, #75	; 0x4b
 800490a:	f7fd fb75 	bl	8001ff8 <IOE_Write>
  uint8_t ret = 0;
 800490e:	2000      	movs	r0, #0
 8004910:	e7f2      	b.n	80048f8 <stmpe811_TS_DetectTouch+0x1e>

08004912 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8004912:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004914:	2304      	movs	r3, #4
 8004916:	b2c4      	uxtb	r4, r0
{
 8004918:	460e      	mov	r6, r1
 800491a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800491c:	21d7      	movs	r1, #215	; 0xd7
 800491e:	eb0d 0203 	add.w	r2, sp, r3
 8004922:	4620      	mov	r0, r4
 8004924:	f7fd fb98 	bl	8002058 <IOE_ReadMultiple>
 8004928:	9b01      	ldr	r3, [sp, #4]
 800492a:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800492c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800492e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004932:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004934:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004936:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004938:	2201      	movs	r2, #1
 800493a:	214b      	movs	r1, #75	; 0x4b
 800493c:	f7fd fb5c 	bl	8001ff8 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004940:	2200      	movs	r2, #0
 8004942:	214b      	movs	r1, #75	; 0x4b
 8004944:	4620      	mov	r0, r4
 8004946:	f7fd fb57 	bl	8001ff8 <IOE_Write>
}
 800494a:	b002      	add	sp, #8
 800494c:	bd70      	pop	{r4, r5, r6, pc}
	...

08004950 <stmpe811_Init>:
{
 8004950:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004952:	4a0a      	ldr	r2, [pc, #40]	; (800497c <stmpe811_Init+0x2c>)
 8004954:	7813      	ldrb	r3, [r2, #0]
 8004956:	4298      	cmp	r0, r3
{
 8004958:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800495a:	d00d      	beq.n	8004978 <stmpe811_Init+0x28>
 800495c:	7851      	ldrb	r1, [r2, #1]
 800495e:	4288      	cmp	r0, r1
 8004960:	d00a      	beq.n	8004978 <stmpe811_Init+0x28>
 8004962:	b10b      	cbz	r3, 8004968 <stmpe811_Init+0x18>
 8004964:	b941      	cbnz	r1, 8004978 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8004966:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8004968:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800496a:	f7fd fb43 	bl	8001ff4 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800496e:	4620      	mov	r0, r4
}
 8004970:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8004974:	f7ff bf8b 	b.w	800488e <stmpe811_Reset>
}
 8004978:	bd10      	pop	{r4, pc}
 800497a:	bf00      	nop
 800497c:	200016a1 	.word	0x200016a1

08004980 <stmpe811_EnableGlobalIT>:
{
 8004980:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004982:	b2c4      	uxtb	r4, r0
 8004984:	2109      	movs	r1, #9
 8004986:	4620      	mov	r0, r4
 8004988:	f7fd fb4c 	bl	8002024 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800498c:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004990:	b2d2      	uxtb	r2, r2
 8004992:	4620      	mov	r0, r4
 8004994:	2109      	movs	r1, #9
}
 8004996:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800499a:	f7fd bb2d 	b.w	8001ff8 <IOE_Write>

0800499e <stmpe811_DisableGlobalIT>:
{
 800499e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80049a0:	b2c4      	uxtb	r4, r0
 80049a2:	2109      	movs	r1, #9
 80049a4:	4620      	mov	r0, r4
 80049a6:	f7fd fb3d 	bl	8002024 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80049aa:	2109      	movs	r1, #9
 80049ac:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80049b0:	4620      	mov	r0, r4
}
 80049b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80049b6:	f7fd bb1f 	b.w	8001ff8 <IOE_Write>

080049ba <stmpe811_EnableITSource>:
{
 80049ba:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80049bc:	b2c5      	uxtb	r5, r0
{
 80049be:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80049c0:	4628      	mov	r0, r5
 80049c2:	210a      	movs	r1, #10
 80049c4:	f7fd fb2e 	bl	8002024 <IOE_Read>
  tmp |= Source; 
 80049c8:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80049cc:	b2d2      	uxtb	r2, r2
 80049ce:	4628      	mov	r0, r5
 80049d0:	210a      	movs	r1, #10
}
 80049d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80049d6:	f7fd bb0f 	b.w	8001ff8 <IOE_Write>

080049da <stmpe811_TS_EnableIT>:
{
 80049da:	b510      	push	{r4, lr}
 80049dc:	4604      	mov	r4, r0
  IOE_ITConfig();
 80049de:	f7fd fb0a 	bl	8001ff6 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80049e2:	4620      	mov	r0, r4
 80049e4:	211f      	movs	r1, #31
 80049e6:	f7ff ffe8 	bl	80049ba <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80049ea:	4620      	mov	r0, r4
}
 80049ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80049f0:	f7ff bfc6 	b.w	8004980 <stmpe811_EnableGlobalIT>

080049f4 <stmpe811_DisableITSource>:
{
 80049f4:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80049f6:	b2c5      	uxtb	r5, r0
{
 80049f8:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80049fa:	4628      	mov	r0, r5
 80049fc:	210a      	movs	r1, #10
 80049fe:	f7fd fb11 	bl	8002024 <IOE_Read>
  tmp &= ~Source; 
 8004a02:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004a06:	b2d2      	uxtb	r2, r2
 8004a08:	4628      	mov	r0, r5
 8004a0a:	210a      	movs	r1, #10
}
 8004a0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004a10:	f7fd baf2 	b.w	8001ff8 <IOE_Write>

08004a14 <stmpe811_TS_DisableIT>:
{
 8004a14:	b510      	push	{r4, lr}
 8004a16:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8004a18:	f7ff ffc1 	bl	800499e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004a1c:	4620      	mov	r0, r4
 8004a1e:	211f      	movs	r1, #31
}
 8004a20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004a24:	f7ff bfe6 	b.w	80049f4 <stmpe811_DisableITSource>

08004a28 <stmpe811_ReadGITStatus>:
{
 8004a28:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004a2a:	b2c0      	uxtb	r0, r0
{
 8004a2c:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004a2e:	210b      	movs	r1, #11
 8004a30:	f7fd faf8 	bl	8002024 <IOE_Read>
}
 8004a34:	4020      	ands	r0, r4
 8004a36:	bd10      	pop	{r4, pc}

08004a38 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8004a38:	211f      	movs	r1, #31
 8004a3a:	f7ff bff5 	b.w	8004a28 <stmpe811_ReadGITStatus>

08004a3e <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8004a3e:	460a      	mov	r2, r1
 8004a40:	b2c0      	uxtb	r0, r0
 8004a42:	210b      	movs	r1, #11
 8004a44:	f7fd bad8 	b.w	8001ff8 <IOE_Write>

08004a48 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8004a48:	211f      	movs	r1, #31
 8004a4a:	f7ff bff8 	b.w	8004a3e <stmpe811_ClearGlobalIT>

08004a4e <stmpe811_IO_EnableAF>:
{
 8004a4e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004a50:	b2c5      	uxtb	r5, r0
{
 8004a52:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004a54:	4628      	mov	r0, r5
 8004a56:	2117      	movs	r1, #23
 8004a58:	f7fd fae4 	bl	8002024 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8004a5c:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004a60:	b2d2      	uxtb	r2, r2
 8004a62:	4628      	mov	r0, r5
 8004a64:	2117      	movs	r1, #23
}
 8004a66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004a6a:	f7fd bac5 	b.w	8001ff8 <IOE_Write>

08004a6e <stmpe811_TS_Start>:
{
 8004a6e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004a70:	b2c4      	uxtb	r4, r0
{
 8004a72:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004a74:	2104      	movs	r1, #4
 8004a76:	4620      	mov	r0, r4
 8004a78:	f7fd fad4 	bl	8002024 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004a7c:	2104      	movs	r1, #4
 8004a7e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004a82:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004a84:	4620      	mov	r0, r4
 8004a86:	f7fd fab7 	bl	8001ff8 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8004a8a:	4630      	mov	r0, r6
 8004a8c:	21f0      	movs	r1, #240	; 0xf0
 8004a8e:	f7ff ffde 	bl	8004a4e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004a92:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8004a96:	4620      	mov	r0, r4
 8004a98:	2104      	movs	r1, #4
 8004a9a:	f7fd faad 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8004a9e:	2249      	movs	r2, #73	; 0x49
 8004aa0:	2120      	movs	r1, #32
 8004aa2:	4620      	mov	r0, r4
 8004aa4:	f7fd faa8 	bl	8001ff8 <IOE_Write>
  IOE_Delay(2); 
 8004aa8:	2002      	movs	r0, #2
 8004aaa:	f7fd faeb 	bl	8002084 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8004aae:	4620      	mov	r0, r4
 8004ab0:	2201      	movs	r2, #1
 8004ab2:	2121      	movs	r1, #33	; 0x21
 8004ab4:	f7fd faa0 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8004ab8:	4620      	mov	r0, r4
 8004aba:	229a      	movs	r2, #154	; 0x9a
 8004abc:	2141      	movs	r1, #65	; 0x41
 8004abe:	f7fd fa9b 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8004ac2:	4620      	mov	r0, r4
 8004ac4:	2201      	movs	r2, #1
 8004ac6:	214a      	movs	r1, #74	; 0x4a
 8004ac8:	f7fd fa96 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004acc:	4620      	mov	r0, r4
 8004ace:	2201      	movs	r2, #1
 8004ad0:	214b      	movs	r1, #75	; 0x4b
 8004ad2:	f7fd fa91 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004ad6:	4620      	mov	r0, r4
 8004ad8:	2200      	movs	r2, #0
 8004ada:	214b      	movs	r1, #75	; 0x4b
 8004adc:	f7fd fa8c 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004ae0:	4620      	mov	r0, r4
 8004ae2:	2201      	movs	r2, #1
 8004ae4:	2156      	movs	r1, #86	; 0x56
 8004ae6:	f7fd fa87 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004aea:	4620      	mov	r0, r4
 8004aec:	2201      	movs	r2, #1
 8004aee:	2158      	movs	r1, #88	; 0x58
 8004af0:	f7fd fa82 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8004af4:	4620      	mov	r0, r4
 8004af6:	2201      	movs	r2, #1
 8004af8:	2140      	movs	r1, #64	; 0x40
 8004afa:	f7fd fa7d 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004afe:	4620      	mov	r0, r4
 8004b00:	22ff      	movs	r2, #255	; 0xff
 8004b02:	210b      	movs	r1, #11
 8004b04:	f7fd fa78 	bl	8001ff8 <IOE_Write>
  IOE_Delay(2); 
 8004b08:	2002      	movs	r0, #2
}
 8004b0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004b0e:	f7fd bab9 	b.w	8002084 <IOE_Delay>
	...

08004b14 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004b14:	4b05      	ldr	r3, [pc, #20]	; (8004b2c <SystemInit+0x18>)
 8004b16:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8004b1a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8004b1e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004b22:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004b26:	609a      	str	r2, [r3, #8]
#endif
}
 8004b28:	4770      	bx	lr
 8004b2a:	bf00      	nop
 8004b2c:	e000ed00 	.word	0xe000ed00

08004b30 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004b30:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004b32:	4b0b      	ldr	r3, [pc, #44]	; (8004b60 <HAL_Init+0x30>)
 8004b34:	681a      	ldr	r2, [r3, #0]
 8004b36:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004b3a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004b3c:	681a      	ldr	r2, [r3, #0]
 8004b3e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004b42:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004b44:	681a      	ldr	r2, [r3, #0]
 8004b46:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004b4a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004b4c:	2003      	movs	r0, #3
 8004b4e:	f000 f82f 	bl	8004bb0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004b52:	2000      	movs	r0, #0
 8004b54:	f7fd fe92 	bl	800287c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004b58:	f7fd fb1e 	bl	8002198 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004b5c:	2000      	movs	r0, #0
 8004b5e:	bd08      	pop	{r3, pc}
 8004b60:	40023c00 	.word	0x40023c00

08004b64 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004b64:	4a03      	ldr	r2, [pc, #12]	; (8004b74 <HAL_IncTick+0x10>)
 8004b66:	4b04      	ldr	r3, [pc, #16]	; (8004b78 <HAL_IncTick+0x14>)
 8004b68:	6811      	ldr	r1, [r2, #0]
 8004b6a:	781b      	ldrb	r3, [r3, #0]
 8004b6c:	440b      	add	r3, r1
 8004b6e:	6013      	str	r3, [r2, #0]
}
 8004b70:	4770      	bx	lr
 8004b72:	bf00      	nop
 8004b74:	20012b6c 	.word	0x20012b6c
 8004b78:	20000088 	.word	0x20000088

08004b7c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004b7c:	4b01      	ldr	r3, [pc, #4]	; (8004b84 <HAL_GetTick+0x8>)
 8004b7e:	6818      	ldr	r0, [r3, #0]
}
 8004b80:	4770      	bx	lr
 8004b82:	bf00      	nop
 8004b84:	20012b6c 	.word	0x20012b6c

08004b88 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004b88:	b538      	push	{r3, r4, r5, lr}
 8004b8a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004b8c:	f7ff fff6 	bl	8004b7c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004b90:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004b92:	bf1c      	itt	ne
 8004b94:	4b05      	ldrne	r3, [pc, #20]	; (8004bac <HAL_Delay+0x24>)
 8004b96:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004b98:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8004b9a:	bf18      	it	ne
 8004b9c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004b9e:	f7ff ffed 	bl	8004b7c <HAL_GetTick>
 8004ba2:	1b40      	subs	r0, r0, r5
 8004ba4:	42a0      	cmp	r0, r4
 8004ba6:	d3fa      	bcc.n	8004b9e <HAL_Delay+0x16>
  {
  }
}
 8004ba8:	bd38      	pop	{r3, r4, r5, pc}
 8004baa:	bf00      	nop
 8004bac:	20000088 	.word	0x20000088

08004bb0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004bb0:	4a07      	ldr	r2, [pc, #28]	; (8004bd0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004bb2:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004bb4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004bb8:	041b      	lsls	r3, r3, #16
 8004bba:	0c1b      	lsrs	r3, r3, #16
 8004bbc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004bc0:	0200      	lsls	r0, r0, #8
 8004bc2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004bc6:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8004bca:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8004bcc:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004bce:	4770      	bx	lr
 8004bd0:	e000ed00 	.word	0xe000ed00

08004bd4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004bd4:	4b17      	ldr	r3, [pc, #92]	; (8004c34 <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004bd6:	b570      	push	{r4, r5, r6, lr}
 8004bd8:	68dc      	ldr	r4, [r3, #12]
 8004bda:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004bde:	f1c4 0507 	rsb	r5, r4, #7
 8004be2:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004be4:	f104 0304 	add.w	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004be8:	bf28      	it	cs
 8004bea:	2504      	movcs	r5, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004bec:	f04f 36ff 	mov.w	r6, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004bf0:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004bf2:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004bf6:	bf8c      	ite	hi
 8004bf8:	3c03      	subhi	r4, #3
 8004bfa:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004bfc:	ea21 0303 	bic.w	r3, r1, r3
 8004c00:	40a3      	lsls	r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004c02:	fa06 f404 	lsl.w	r4, r6, r4
 8004c06:	ea22 0404 	bic.w	r4, r2, r4
  if ((int32_t)(IRQn) >= 0)
 8004c0a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c0c:	ea43 0304 	orr.w	r3, r3, r4
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c10:	bfa8      	it	ge
 8004c12:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 8004c16:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c1a:	bfbc      	itt	lt
 8004c1c:	f000 000f 	andlt.w	r0, r0, #15
 8004c20:	4a05      	ldrlt	r2, [pc, #20]	; (8004c38 <HAL_NVIC_SetPriority+0x64>)
 8004c22:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c24:	bfaa      	itet	ge
 8004c26:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c2a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c2c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004c30:	bd70      	pop	{r4, r5, r6, pc}
 8004c32:	bf00      	nop
 8004c34:	e000ed00 	.word	0xe000ed00
 8004c38:	e000ed14 	.word	0xe000ed14

08004c3c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004c3c:	2800      	cmp	r0, #0
 8004c3e:	db08      	blt.n	8004c52 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004c40:	0942      	lsrs	r2, r0, #5
 8004c42:	2301      	movs	r3, #1
 8004c44:	f000 001f 	and.w	r0, r0, #31
 8004c48:	fa03 f000 	lsl.w	r0, r3, r0
 8004c4c:	4b01      	ldr	r3, [pc, #4]	; (8004c54 <HAL_NVIC_EnableIRQ+0x18>)
 8004c4e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004c52:	4770      	bx	lr
 8004c54:	e000e100 	.word	0xe000e100

08004c58 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004c58:	2800      	cmp	r0, #0
 8004c5a:	db0d      	blt.n	8004c78 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004c5c:	0943      	lsrs	r3, r0, #5
 8004c5e:	2201      	movs	r2, #1
 8004c60:	f000 001f 	and.w	r0, r0, #31
 8004c64:	fa02 f000 	lsl.w	r0, r2, r0
 8004c68:	3320      	adds	r3, #32
 8004c6a:	4a04      	ldr	r2, [pc, #16]	; (8004c7c <HAL_NVIC_DisableIRQ+0x24>)
 8004c6c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004c70:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8004c74:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8004c78:	4770      	bx	lr
 8004c7a:	bf00      	nop
 8004c7c:	e000e100 	.word	0xe000e100

08004c80 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004c80:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004c82:	4604      	mov	r4, r0
 8004c84:	b150      	cbz	r0, 8004c9c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004c86:	7943      	ldrb	r3, [r0, #5]
 8004c88:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004c8c:	b913      	cbnz	r3, 8004c94 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004c8e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004c90:	f7fd faa2 	bl	80021d8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004c94:	2301      	movs	r3, #1
 8004c96:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004c98:	2000      	movs	r0, #0
}
 8004c9a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004c9c:	2001      	movs	r0, #1
 8004c9e:	e7fc      	b.n	8004c9a <HAL_CRC_Init+0x1a>

08004ca0 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8004ca0:	6803      	ldr	r3, [r0, #0]
 8004ca2:	b2da      	uxtb	r2, r3
 8004ca4:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8004ca8:	f023 0303 	bic.w	r3, r3, #3
 8004cac:	2118      	movs	r1, #24
 8004cae:	3a10      	subs	r2, #16
 8004cb0:	fbb2 f2f1 	udiv	r2, r2, r1
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004cb4:	4904      	ldr	r1, [pc, #16]	; (8004cc8 <DMA_CalcBaseAndBitshift+0x28>)
  
  if (stream_number > 3U)
 8004cb6:	2a03      	cmp	r2, #3
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8004cb8:	bf88      	it	hi
 8004cba:	3304      	addhi	r3, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004cbc:	5c89      	ldrb	r1, [r1, r2]
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8004cbe:	6583      	str	r3, [r0, #88]	; 0x58
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8004cc0:	65c1      	str	r1, [r0, #92]	; 0x5c
  }
  
  return hdma->StreamBaseAddress;
}
 8004cc2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8004cc4:	4770      	bx	lr
 8004cc6:	bf00      	nop
 8004cc8:	0801ca68 	.word	0x0801ca68

08004ccc <HAL_DMA_Init>:
{
 8004ccc:	b570      	push	{r4, r5, r6, lr}
 8004cce:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004cd0:	f7ff ff54 	bl	8004b7c <HAL_GetTick>
 8004cd4:	4605      	mov	r5, r0
  if(hdma == NULL)
 8004cd6:	2c00      	cmp	r4, #0
 8004cd8:	d071      	beq.n	8004dbe <HAL_DMA_Init+0xf2>
  __HAL_UNLOCK(hdma);
 8004cda:	2300      	movs	r3, #0
 8004cdc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8004ce0:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8004ce2:	2302      	movs	r3, #2
 8004ce4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8004ce8:	6813      	ldr	r3, [r2, #0]
 8004cea:	f023 0301 	bic.w	r3, r3, #1
 8004cee:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004cf0:	6821      	ldr	r1, [r4, #0]
 8004cf2:	680b      	ldr	r3, [r1, #0]
 8004cf4:	07d8      	lsls	r0, r3, #31
 8004cf6:	d43c      	bmi.n	8004d72 <HAL_DMA_Init+0xa6>
  tmp = hdma->Instance->CR;
 8004cf8:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8004cfa:	4d32      	ldr	r5, [pc, #200]	; (8004dc4 <HAL_DMA_Init+0xf8>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004cfc:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8004cfe:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004d00:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8004d04:	4313      	orrs	r3, r2
 8004d06:	68e2      	ldr	r2, [r4, #12]
 8004d08:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8004d0a:	6922      	ldr	r2, [r4, #16]
 8004d0c:	4313      	orrs	r3, r2
 8004d0e:	6962      	ldr	r2, [r4, #20]
 8004d10:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004d12:	69e2      	ldr	r2, [r4, #28]
 8004d14:	4303      	orrs	r3, r0
 8004d16:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8004d18:	6a22      	ldr	r2, [r4, #32]
 8004d1a:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004d1c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004d1e:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004d20:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8004d24:	bf02      	ittt	eq
 8004d26:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8004d2a:	4335      	orreq	r5, r6
 8004d2c:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8004d2e:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8004d30:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004d32:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004d34:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8004d38:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004d3c:	d10b      	bne.n	8004d56 <HAL_DMA_Init+0x8a>
    tmp |= hdma->Init.FIFOThreshold;
 8004d3e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004d40:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8004d42:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004d44:	b13d      	cbz	r5, 8004d56 <HAL_DMA_Init+0x8a>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8004d46:	b9f8      	cbnz	r0, 8004d88 <HAL_DMA_Init+0xbc>
  {
    switch (tmp)
 8004d48:	2a01      	cmp	r2, #1
 8004d4a:	d02d      	beq.n	8004da8 <HAL_DMA_Init+0xdc>
 8004d4c:	d301      	bcc.n	8004d52 <HAL_DMA_Init+0x86>
 8004d4e:	2a02      	cmp	r2, #2
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8004d50:	d101      	bne.n	8004d56 <HAL_DMA_Init+0x8a>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8004d52:	01ea      	lsls	r2, r5, #7
 8004d54:	d42b      	bmi.n	8004dae <HAL_DMA_Init+0xe2>
  hdma->Instance->FCR = tmp;
 8004d56:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004d58:	4620      	mov	r0, r4
 8004d5a:	f7ff ffa1 	bl	8004ca0 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004d5e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8004d60:	233f      	movs	r3, #63	; 0x3f
 8004d62:	4093      	lsls	r3, r2
 8004d64:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004d66:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8004d68:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004d6a:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8004d6c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8004d70:	e009      	b.n	8004d86 <HAL_DMA_Init+0xba>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004d72:	f7ff ff03 	bl	8004b7c <HAL_GetTick>
 8004d76:	1b40      	subs	r0, r0, r5
 8004d78:	2805      	cmp	r0, #5
 8004d7a:	d9b9      	bls.n	8004cf0 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004d7c:	2320      	movs	r3, #32
 8004d7e:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004d80:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8004d82:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8004d86:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8004d88:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8004d8c:	d113      	bne.n	8004db6 <HAL_DMA_Init+0xea>
    switch (tmp)
 8004d8e:	2a03      	cmp	r2, #3
 8004d90:	d8e1      	bhi.n	8004d56 <HAL_DMA_Init+0x8a>
 8004d92:	a001      	add	r0, pc, #4	; (adr r0, 8004d98 <HAL_DMA_Init+0xcc>)
 8004d94:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8004d98:	08004daf 	.word	0x08004daf
 8004d9c:	08004d53 	.word	0x08004d53
 8004da0:	08004daf 	.word	0x08004daf
 8004da4:	08004da9 	.word	0x08004da9
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004da8:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8004dac:	d1d3      	bne.n	8004d56 <HAL_DMA_Init+0x8a>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8004dae:	2340      	movs	r3, #64	; 0x40
 8004db0:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8004db2:	2001      	movs	r0, #1
 8004db4:	e7e5      	b.n	8004d82 <HAL_DMA_Init+0xb6>
    switch (tmp)
 8004db6:	2a02      	cmp	r2, #2
 8004db8:	d9f9      	bls.n	8004dae <HAL_DMA_Init+0xe2>
 8004dba:	2a03      	cmp	r2, #3
 8004dbc:	e7c8      	b.n	8004d50 <HAL_DMA_Init+0x84>
    return HAL_ERROR;
 8004dbe:	2001      	movs	r0, #1
 8004dc0:	e7e1      	b.n	8004d86 <HAL_DMA_Init+0xba>
 8004dc2:	bf00      	nop
 8004dc4:	f010803f 	.word	0xf010803f

08004dc8 <HAL_DMA_Start_IT>:
{
 8004dc8:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 8004dca:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8004dce:	2c01      	cmp	r4, #1
 8004dd0:	d032      	beq.n	8004e38 <HAL_DMA_Start_IT+0x70>
 8004dd2:	2401      	movs	r4, #1
 8004dd4:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 8004dd8:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004ddc:	6d86      	ldr	r6, [r0, #88]	; 0x58
  if(HAL_DMA_STATE_READY == hdma->State)
 8004dde:	2c01      	cmp	r4, #1
 8004de0:	f04f 0500 	mov.w	r5, #0
 8004de4:	f04f 0402 	mov.w	r4, #2
 8004de8:	d124      	bne.n	8004e34 <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 8004dea:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8004dee:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004df0:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8004df2:	6825      	ldr	r5, [r4, #0]
 8004df4:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 8004df8:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 8004dfa:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8004dfc:	6883      	ldr	r3, [r0, #8]
 8004dfe:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 8004e00:	bf0e      	itee	eq
 8004e02:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 8004e04:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 8004e06:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004e08:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 8004e0a:	bf08      	it	eq
 8004e0c:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004e0e:	233f      	movs	r3, #63	; 0x3f
 8004e10:	4093      	lsls	r3, r2
 8004e12:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8004e14:	6823      	ldr	r3, [r4, #0]
 8004e16:	f043 0316 	orr.w	r3, r3, #22
 8004e1a:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 8004e1c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8004e1e:	b11b      	cbz	r3, 8004e28 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 8004e20:	6823      	ldr	r3, [r4, #0]
 8004e22:	f043 0308 	orr.w	r3, r3, #8
 8004e26:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 8004e28:	6823      	ldr	r3, [r4, #0]
 8004e2a:	f043 0301 	orr.w	r3, r3, #1
 8004e2e:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8004e30:	2000      	movs	r0, #0
}
 8004e32:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 8004e34:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 8004e38:	2002      	movs	r0, #2
 8004e3a:	e7fa      	b.n	8004e32 <HAL_DMA_Start_IT+0x6a>

08004e3c <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8004e3c:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8004e3e:	6804      	ldr	r4, [r0, #0]
 8004e40:	9d04      	ldr	r5, [sp, #16]
 8004e42:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8004e44:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8004e48:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 8004e4c:	4333      	orrs	r3, r6
 8004e4e:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8004e50:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8004e52:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8004e54:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8004e58:	d130      	bne.n	8004ebc <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8004e5a:	6886      	ldr	r6, [r0, #8]
 8004e5c:	b11e      	cbz	r6, 8004e66 <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8004e5e:	2e01      	cmp	r6, #1
 8004e60:	d103      	bne.n	8004e6a <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8004e62:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8004e66:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8004e68:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8004e6a:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8004e6c:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8004e70:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8004e74:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8004e76:	d107      	bne.n	8004e88 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 8004e78:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10U);
 8004e7a:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8004e7c:	02c9      	lsls	r1, r1, #11
 8004e7e:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 8004e82:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 8004e86:	e7ee      	b.n	8004e66 <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8004e88:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8004e8a:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8004e8e:	d10a      	bne.n	8004ea6 <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 8004e90:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11U);
 8004e92:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8004e94:	029b      	lsls	r3, r3, #10
 8004e96:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 8004e9a:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 8004e9e:	0fd1      	lsrs	r1, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8004ea0:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 8004ea4:	e7df      	b.n	8004e66 <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 8004ea6:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 8004ea8:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8004eaa:	0209      	lsls	r1, r1, #8
 8004eac:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8004eb0:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 8004eb4:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8004eb6:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 8004eba:	e7d4      	b.n	8004e66 <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8004ebc:	60e1      	str	r1, [r4, #12]
}
 8004ebe:	e7d3      	b.n	8004e68 <DMA2D_SetConfig+0x2c>

08004ec0 <HAL_DMA2D_Init>:
{
 8004ec0:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 8004ec2:	4604      	mov	r4, r0
 8004ec4:	b330      	cbz	r0, 8004f14 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004ec6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004eca:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004ece:	b91b      	cbnz	r3, 8004ed8 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8004ed0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8004ed4:	f7fd f998 	bl	8002208 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004ed8:	6822      	ldr	r2, [r4, #0]
 8004eda:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004edc:	2302      	movs	r3, #2
 8004ede:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004ee2:	6813      	ldr	r3, [r2, #0]
 8004ee4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004ee8:	430b      	orrs	r3, r1
 8004eea:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004eec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004eee:	68a1      	ldr	r1, [r4, #8]
 8004ef0:	f023 0307 	bic.w	r3, r3, #7
 8004ef4:	430b      	orrs	r3, r1
 8004ef6:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004ef8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8004efa:	68e1      	ldr	r1, [r4, #12]
 8004efc:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004f00:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004f04:	430b      	orrs	r3, r1
 8004f06:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004f08:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004f0a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004f0c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004f0e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 8004f12:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8004f14:	2001      	movs	r0, #1
 8004f16:	e7fc      	b.n	8004f12 <HAL_DMA2D_Init+0x52>

08004f18 <HAL_DMA2D_Start_IT>:
{
 8004f18:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 8004f1a:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 8004f1e:	2c01      	cmp	r4, #1
{
 8004f20:	4605      	mov	r5, r0
 8004f22:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hdma2d);
 8004f26:	d013      	beq.n	8004f50 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004f28:	f880 4039 	strb.w	r4, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004f2c:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8004f2e:	9c06      	ldr	r4, [sp, #24]
  __HAL_LOCK(hdma2d);
 8004f30:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8004f34:	9400      	str	r4, [sp, #0]
 8004f36:	f7ff ff81 	bl	8004e3c <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004f3a:	682b      	ldr	r3, [r5, #0]
 8004f3c:	681a      	ldr	r2, [r3, #0]
 8004f3e:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8004f42:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8004f44:	681a      	ldr	r2, [r3, #0]
 8004f46:	4332      	orrs	r2, r6
 8004f48:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8004f4a:	2000      	movs	r0, #0
}
 8004f4c:	b002      	add	sp, #8
 8004f4e:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8004f50:	4620      	mov	r0, r4
 8004f52:	e7fb      	b.n	8004f4c <HAL_DMA2D_Start_IT+0x34>

08004f54 <HAL_DMA2D_BlendingStart_IT>:
{
 8004f54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004f56:	4615      	mov	r5, r2
 8004f58:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 8004f5a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004f5e:	2b01      	cmp	r3, #1
{
 8004f60:	4604      	mov	r4, r0
 8004f62:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 8004f66:	d016      	beq.n	8004f96 <HAL_DMA2D_BlendingStart_IT+0x42>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004f68:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004f6c:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(hdma2d);
 8004f6e:	2601      	movs	r6, #1
 8004f70:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004f74:	615d      	str	r5, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8004f76:	9b07      	ldr	r3, [sp, #28]
 8004f78:	9300      	str	r3, [sp, #0]
 8004f7a:	9b06      	ldr	r3, [sp, #24]
 8004f7c:	f7ff ff5e 	bl	8004e3c <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004f80:	6823      	ldr	r3, [r4, #0]
 8004f82:	681a      	ldr	r2, [r3, #0]
 8004f84:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8004f88:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8004f8a:	681a      	ldr	r2, [r3, #0]
 8004f8c:	4332      	orrs	r2, r6
 8004f8e:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8004f90:	2000      	movs	r0, #0
}
 8004f92:	b002      	add	sp, #8
 8004f94:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8004f96:	4618      	mov	r0, r3
 8004f98:	e7fb      	b.n	8004f92 <HAL_DMA2D_BlendingStart_IT+0x3e>

08004f9a <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8004f9a:	6802      	ldr	r2, [r0, #0]
{
 8004f9c:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8004f9e:	6813      	ldr	r3, [r2, #0]
 8004fa0:	f023 0305 	bic.w	r3, r3, #5
 8004fa4:	f043 0304 	orr.w	r3, r3, #4
 8004fa8:	6013      	str	r3, [r2, #0]
{
 8004faa:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 8004fac:	f7ff fde6 	bl	8004b7c <HAL_GetTick>
 8004fb0:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8004fb2:	6823      	ldr	r3, [r4, #0]
 8004fb4:	6818      	ldr	r0, [r3, #0]
 8004fb6:	f010 0001 	ands.w	r0, r0, #1
 8004fba:	d109      	bne.n	8004fd0 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004fbc:	681a      	ldr	r2, [r3, #0]
 8004fbe:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 8004fc2:	601a      	str	r2, [r3, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004fc4:	2301      	movs	r3, #1
 8004fc6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004fca:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8004fce:	e00f      	b.n	8004ff0 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8004fd0:	f7ff fdd4 	bl	8004b7c <HAL_GetTick>
 8004fd4:	1b40      	subs	r0, r0, r5
 8004fd6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004fda:	d9ea      	bls.n	8004fb2 <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8004fdc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004fde:	f043 0320 	orr.w	r3, r3, #32
 8004fe2:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004fe4:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 8004fe6:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004fe8:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004fec:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8004ff0:	bd38      	pop	{r3, r4, r5, pc}

08004ff2 <HAL_DMA2D_CLUTLoading_Abort>:
{
 8004ff2:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8004ff4:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8004ff6:	682a      	ldr	r2, [r5, #0]
 8004ff8:	f042 0204 	orr.w	r2, r2, #4
 8004ffc:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8004ffe:	2901      	cmp	r1, #1
{
 8005000:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8005002:	bf14      	ite	ne
 8005004:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 8005006:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 8005008:	f7ff fdb8 	bl	8004b7c <HAL_GetTick>
 800500c:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 800500e:	6828      	ldr	r0, [r5, #0]
 8005010:	f010 0020 	ands.w	r0, r0, #32
 8005014:	d10a      	bne.n	800502c <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8005016:	6822      	ldr	r2, [r4, #0]
 8005018:	6813      	ldr	r3, [r2, #0]
 800501a:	f423 5364 	bic.w	r3, r3, #14592	; 0x3900
 800501e:	6013      	str	r3, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005020:	2301      	movs	r3, #1
 8005022:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8005026:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 800502a:	e00f      	b.n	800504c <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 800502c:	f7ff fda6 	bl	8004b7c <HAL_GetTick>
 8005030:	1b80      	subs	r0, r0, r6
 8005032:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005036:	d9ea      	bls.n	800500e <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8005038:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800503a:	f043 0320 	orr.w	r3, r3, #32
 800503e:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8005040:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 8005042:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8005044:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8005048:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 800504c:	bd70      	pop	{r4, r5, r6, pc}
	...

08005050 <HAL_DMA2D_DeInit>:
{
 8005050:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 8005052:	4605      	mov	r5, r0
 8005054:	b908      	cbnz	r0, 800505a <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 8005056:	2001      	movs	r0, #1
}
 8005058:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 800505a:	4b16      	ldr	r3, [pc, #88]	; (80050b4 <HAL_DMA2D_DeInit+0x64>)
 800505c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800505e:	0219      	lsls	r1, r3, #8
 8005060:	d413      	bmi.n	800508a <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 8005062:	682b      	ldr	r3, [r5, #0]
 8005064:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 8005066:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 8005068:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 800506a:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 800506c:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 800506e:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8005070:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8005072:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8005074:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 8005076:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 8005078:	f7fd f8e8 	bl	800224c <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800507c:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 800507e:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8005082:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 8005086:	4620      	mov	r0, r4
 8005088:	e7e6      	b.n	8005058 <HAL_DMA2D_DeInit+0x8>
 800508a:	6803      	ldr	r3, [r0, #0]
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 800508c:	6819      	ldr	r1, [r3, #0]
 800508e:	f011 0101 	ands.w	r1, r1, #1
 8005092:	d004      	beq.n	800509e <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8005094:	f7ff ff81 	bl	8004f9a <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8005098:	2800      	cmp	r0, #0
 800509a:	d0e2      	beq.n	8005062 <HAL_DMA2D_DeInit+0x12>
 800509c:	e7db      	b.n	8005056 <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 800509e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80050a0:	0692      	lsls	r2, r2, #26
 80050a2:	d502      	bpl.n	80050aa <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80050a4:	f7ff ffa5 	bl	8004ff2 <HAL_DMA2D_CLUTLoading_Abort>
 80050a8:	e7f6      	b.n	8005098 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 80050aa:	69db      	ldr	r3, [r3, #28]
 80050ac:	069b      	lsls	r3, r3, #26
 80050ae:	d5d8      	bpl.n	8005062 <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80050b0:	2101      	movs	r1, #1
 80050b2:	e7f7      	b.n	80050a4 <HAL_DMA2D_DeInit+0x54>
 80050b4:	40023800 	.word	0x40023800

080050b8 <HAL_DMA2D_LineEventCallback>:
 80050b8:	4770      	bx	lr

080050ba <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80050ba:	4770      	bx	lr

080050bc <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80050bc:	6803      	ldr	r3, [r0, #0]
{
 80050be:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80050c0:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80050c2:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80050c4:	07f2      	lsls	r2, r6, #31
{
 80050c6:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80050c8:	d514      	bpl.n	80050f4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80050ca:	05e9      	lsls	r1, r5, #23
 80050cc:	d512      	bpl.n	80050f4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80050ce:	681a      	ldr	r2, [r3, #0]
 80050d0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80050d4:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80050d6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80050d8:	f042 0201 	orr.w	r2, r2, #1
 80050dc:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80050de:	2201      	movs	r2, #1
 80050e0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80050e2:	2304      	movs	r3, #4
 80050e4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80050e8:	2300      	movs	r3, #0
 80050ea:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80050ee:	6943      	ldr	r3, [r0, #20]
 80050f0:	b103      	cbz	r3, 80050f4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80050f2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80050f4:	06b2      	lsls	r2, r6, #26
 80050f6:	d516      	bpl.n	8005126 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80050f8:	04ab      	lsls	r3, r5, #18
 80050fa:	d514      	bpl.n	8005126 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80050fc:	6823      	ldr	r3, [r4, #0]
 80050fe:	681a      	ldr	r2, [r3, #0]
 8005100:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005104:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005106:	2220      	movs	r2, #32
 8005108:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800510a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800510c:	f043 0302 	orr.w	r3, r3, #2
 8005110:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005112:	2304      	movs	r3, #4
 8005114:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8005118:	2300      	movs	r3, #0
 800511a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 800511e:	6963      	ldr	r3, [r4, #20]
 8005120:	b10b      	cbz	r3, 8005126 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8005122:	4620      	mov	r0, r4
 8005124:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005126:	0730      	lsls	r0, r6, #28
 8005128:	d516      	bpl.n	8005158 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800512a:	0529      	lsls	r1, r5, #20
 800512c:	d514      	bpl.n	8005158 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800512e:	6823      	ldr	r3, [r4, #0]
 8005130:	681a      	ldr	r2, [r3, #0]
 8005132:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005136:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005138:	2208      	movs	r2, #8
 800513a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800513c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800513e:	f043 0304 	orr.w	r3, r3, #4
 8005142:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005144:	2304      	movs	r3, #4
 8005146:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800514a:	2300      	movs	r3, #0
 800514c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8005150:	6963      	ldr	r3, [r4, #20]
 8005152:	b10b      	cbz	r3, 8005158 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8005154:	4620      	mov	r0, r4
 8005156:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005158:	0772      	lsls	r2, r6, #29
 800515a:	d50b      	bpl.n	8005174 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800515c:	056b      	lsls	r3, r5, #21
 800515e:	d509      	bpl.n	8005174 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005160:	6823      	ldr	r3, [r4, #0]
 8005162:	681a      	ldr	r2, [r3, #0]
 8005164:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005168:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800516a:	2204      	movs	r2, #4
 800516c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800516e:	4620      	mov	r0, r4
 8005170:	f7ff ffa2 	bl	80050b8 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8005174:	07b0      	lsls	r0, r6, #30
 8005176:	d514      	bpl.n	80051a2 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005178:	05a9      	lsls	r1, r5, #22
 800517a:	d512      	bpl.n	80051a2 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800517c:	6823      	ldr	r3, [r4, #0]
 800517e:	681a      	ldr	r2, [r3, #0]
 8005180:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005184:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005186:	2202      	movs	r2, #2
 8005188:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800518a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800518c:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800518e:	2301      	movs	r3, #1
 8005190:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8005194:	2300      	movs	r3, #0
 8005196:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 800519a:	6923      	ldr	r3, [r4, #16]
 800519c:	b10b      	cbz	r3, 80051a2 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800519e:	4620      	mov	r0, r4
 80051a0:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80051a2:	06f2      	lsls	r2, r6, #27
 80051a4:	d513      	bpl.n	80051ce <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80051a6:	04eb      	lsls	r3, r5, #19
 80051a8:	d511      	bpl.n	80051ce <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80051aa:	6823      	ldr	r3, [r4, #0]
 80051ac:	681a      	ldr	r2, [r3, #0]
 80051ae:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80051b2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80051b4:	2210      	movs	r2, #16
 80051b6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80051b8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80051ba:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80051bc:	2301      	movs	r3, #1
 80051be:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80051c2:	2300      	movs	r3, #0
 80051c4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80051c8:	4620      	mov	r0, r4
 80051ca:	f7ff ff76 	bl	80050ba <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80051ce:	bd70      	pop	{r4, r5, r6, pc}

080051d0 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 80051d0:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80051d4:	2b01      	cmp	r3, #1
{
 80051d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80051d8:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 80051dc:	d036      	beq.n	800524c <HAL_DMA2D_ConfigLayer+0x7c>
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80051de:	010e      	lsls	r6, r1, #4
  __HAL_LOCK(hdma2d);
 80051e0:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80051e2:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80051e6:	1983      	adds	r3, r0, r6
  __HAL_LOCK(hdma2d);
 80051e8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80051ec:	e9d3 5207 	ldrd	r5, r2, [r3, #28]
 80051f0:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80051f4:	3d09      	subs	r5, #9
 80051f6:	2d01      	cmp	r5, #1
 80051f8:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 80051fa:	4f19      	ldr	r7, [pc, #100]	; (8005260 <HAL_DMA2D_ConfigLayer+0x90>)
 80051fc:	6803      	ldr	r3, [r0, #0]
 80051fe:	d80f      	bhi.n	8005220 <HAL_DMA2D_ConfigLayer+0x50>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8005200:	f004 4c7f 	and.w	ip, r4, #4278190080	; 0xff000000
 8005204:	ea4c 0202 	orr.w	r2, ip, r2
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005208:	b969      	cbnz	r1, 8005226 <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800520a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800520c:	4039      	ands	r1, r7
 800520e:	430a      	orrs	r2, r1
 8005210:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8005212:	6982      	ldr	r2, [r0, #24]
 8005214:	619a      	str	r2, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8005216:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005218:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800521c:	629a      	str	r2, [r3, #40]	; 0x28
 800521e:	e00f      	b.n	8005240 <HAL_DMA2D_ConfigLayer+0x70>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005220:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005224:	b1a1      	cbz	r1, 8005250 <HAL_DMA2D_ConfigLayer+0x80>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005226:	69d9      	ldr	r1, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005228:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800522a:	4039      	ands	r1, r7
 800522c:	430a      	orrs	r2, r1
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800522e:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005230:	61da      	str	r2, [r3, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8005232:	bf98      	it	ls
 8005234:	f024 447f 	bicls.w	r4, r4, #4278190080	; 0xff000000
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005238:	69b2      	ldr	r2, [r6, #24]
 800523a:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800523c:	bf98      	it	ls
 800523e:	621c      	strls	r4, [r3, #32]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005240:	2301      	movs	r3, #1
 8005242:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8005246:	2300      	movs	r3, #0
 8005248:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800524c:	4618      	mov	r0, r3
}
 800524e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005250:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8005252:	4039      	ands	r1, r7
 8005254:	430a      	orrs	r2, r1
 8005256:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8005258:	6982      	ldr	r2, [r0, #24]
 800525a:	619a      	str	r2, [r3, #24]
 800525c:	e7f0      	b.n	8005240 <HAL_DMA2D_ConfigLayer+0x70>
 800525e:	bf00      	nop
 8005260:	00fcfff0 	.word	0x00fcfff0

08005264 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005268:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800526a:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800526c:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8005434 <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005270:	4a6e      	ldr	r2, [pc, #440]	; (800542c <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005272:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8005438 <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005276:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005278:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 800527a:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800527c:	9d01      	ldr	r5, [sp, #4]
    ioposition = 0x01U << position;
 800527e:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005280:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 8005282:	42ac      	cmp	r4, r5
 8005284:	f040 80b8 	bne.w	80053f8 <HAL_GPIO_Init+0x194>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8005288:	684c      	ldr	r4, [r1, #4]
 800528a:	f024 0c10 	bic.w	ip, r4, #16
 800528e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8005292:	2603      	movs	r6, #3
 8005294:	f10c 37ff 	add.w	r7, ip, #4294967295
 8005298:	fa06 f60e 	lsl.w	r6, r6, lr
 800529c:	2f01      	cmp	r7, #1
 800529e:	ea6f 0606 	mvn.w	r6, r6
 80052a2:	d811      	bhi.n	80052c8 <HAL_GPIO_Init+0x64>
        temp = GPIOx->OSPEEDR; 
 80052a4:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80052a6:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 80052aa:	68cf      	ldr	r7, [r1, #12]
 80052ac:	fa07 f70e 	lsl.w	r7, r7, lr
 80052b0:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80052b4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80052b6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80052b8:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80052bc:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80052c0:	409f      	lsls	r7, r3
 80052c2:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80052c6:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80052c8:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80052ca:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80052ce:	688f      	ldr	r7, [r1, #8]
 80052d0:	fa07 f70e 	lsl.w	r7, r7, lr
 80052d4:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80052d8:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80052dc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80052de:	d116      	bne.n	800530e <HAL_GPIO_Init+0xaa>
        temp = GPIOx->AFR[position >> 3U];
 80052e0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80052e4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80052e8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80052ec:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80052f0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80052f4:	f04f 0c0f 	mov.w	ip, #15
 80052f8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80052fc:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005300:	690f      	ldr	r7, [r1, #16]
 8005302:	fa07 f70b 	lsl.w	r7, r7, fp
 8005306:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 800530a:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 800530e:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005310:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005312:	f004 0703 	and.w	r7, r4, #3
 8005316:	fa07 fe0e 	lsl.w	lr, r7, lr
 800531a:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 800531e:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8005320:	00e6      	lsls	r6, r4, #3
 8005322:	d569      	bpl.n	80053f8 <HAL_GPIO_Init+0x194>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005324:	f04f 0b00 	mov.w	fp, #0
 8005328:	f8cd b00c 	str.w	fp, [sp, #12]
 800532c:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005330:	4e3f      	ldr	r6, [pc, #252]	; (8005430 <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005332:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8005336:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 800533a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800533e:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8005342:	9703      	str	r7, [sp, #12]
 8005344:	9f03      	ldr	r7, [sp, #12]
 8005346:	f023 0703 	bic.w	r7, r3, #3
 800534a:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800534e:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005352:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005356:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800535a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800535e:	f04f 0c0f 	mov.w	ip, #15
 8005362:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005366:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005368:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800536c:	d04b      	beq.n	8005406 <HAL_GPIO_Init+0x1a2>
 800536e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005372:	42b0      	cmp	r0, r6
 8005374:	d049      	beq.n	800540a <HAL_GPIO_Init+0x1a6>
 8005376:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800537a:	42b0      	cmp	r0, r6
 800537c:	d047      	beq.n	800540e <HAL_GPIO_Init+0x1aa>
 800537e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8005382:	42b0      	cmp	r0, r6
 8005384:	d045      	beq.n	8005412 <HAL_GPIO_Init+0x1ae>
 8005386:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800538a:	42b0      	cmp	r0, r6
 800538c:	d043      	beq.n	8005416 <HAL_GPIO_Init+0x1b2>
 800538e:	4548      	cmp	r0, r9
 8005390:	d043      	beq.n	800541a <HAL_GPIO_Init+0x1b6>
 8005392:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 8005396:	42b0      	cmp	r0, r6
 8005398:	d041      	beq.n	800541e <HAL_GPIO_Init+0x1ba>
 800539a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800539e:	42b0      	cmp	r0, r6
 80053a0:	d03f      	beq.n	8005422 <HAL_GPIO_Init+0x1be>
 80053a2:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80053a6:	42b0      	cmp	r0, r6
 80053a8:	d03d      	beq.n	8005426 <HAL_GPIO_Init+0x1c2>
 80053aa:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80053ae:	42b0      	cmp	r0, r6
 80053b0:	bf14      	ite	ne
 80053b2:	260a      	movne	r6, #10
 80053b4:	2609      	moveq	r6, #9
 80053b6:	fa06 f60e 	lsl.w	r6, r6, lr
 80053ba:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80053be:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR;
 80053c0:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80053c2:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80053c4:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80053c8:	bf0c      	ite	eq
 80053ca:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80053cc:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;
 80053ce:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 80053d0:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80053d2:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80053d6:	bf0c      	ite	eq
 80053d8:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80053da:	432e      	orrne	r6, r5
        }
        EXTI->EMR = temp;
 80053dc:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80053de:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80053e0:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80053e4:	bf0c      	ite	eq
 80053e6:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80053e8:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;
 80053ea:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 80053ec:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80053ee:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80053f0:	bf54      	ite	pl
 80053f2:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 80053f4:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 80053f6:	60d6      	str	r6, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80053f8:	3301      	adds	r3, #1
 80053fa:	2b10      	cmp	r3, #16
 80053fc:	f47f af3d 	bne.w	800527a <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 8005400:	b005      	add	sp, #20
 8005402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005406:	465e      	mov	r6, fp
 8005408:	e7d5      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 800540a:	2601      	movs	r6, #1
 800540c:	e7d3      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 800540e:	2602      	movs	r6, #2
 8005410:	e7d1      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 8005412:	2603      	movs	r6, #3
 8005414:	e7cf      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 8005416:	2604      	movs	r6, #4
 8005418:	e7cd      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 800541a:	2605      	movs	r6, #5
 800541c:	e7cb      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 800541e:	2606      	movs	r6, #6
 8005420:	e7c9      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 8005422:	2607      	movs	r6, #7
 8005424:	e7c7      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 8005426:	2608      	movs	r6, #8
 8005428:	e7c5      	b.n	80053b6 <HAL_GPIO_Init+0x152>
 800542a:	bf00      	nop
 800542c:	40013c00 	.word	0x40013c00
 8005430:	40020000 	.word	0x40020000
 8005434:	40023800 	.word	0x40023800
 8005438:	40021400 	.word	0x40021400

0800543c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800543c:	b10a      	cbz	r2, 8005442 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800543e:	6181      	str	r1, [r0, #24]
  }
}
 8005440:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8005442:	0409      	lsls	r1, r1, #16
 8005444:	e7fb      	b.n	800543e <HAL_GPIO_WritePin+0x2>

08005446 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005446:	6801      	ldr	r1, [r0, #0]
 8005448:	694b      	ldr	r3, [r1, #20]
 800544a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800544e:	f04f 0200 	mov.w	r2, #0
 8005452:	d010      	beq.n	8005476 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005454:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005458:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800545a:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800545c:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800545e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005462:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005466:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005468:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800546c:	f043 0304 	orr.w	r3, r3, #4
 8005470:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8005472:	2001      	movs	r0, #1
 8005474:	4770      	bx	lr
  }
  return HAL_OK;
 8005476:	4618      	mov	r0, r3
}
 8005478:	4770      	bx	lr

0800547a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800547a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800547e:	4604      	mov	r4, r0
 8005480:	4616      	mov	r6, r2
 8005482:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005484:	b28f      	uxth	r7, r1
 8005486:	6825      	ldr	r5, [r4, #0]
 8005488:	6968      	ldr	r0, [r5, #20]
 800548a:	ea37 0000 	bics.w	r0, r7, r0
 800548e:	d017      	beq.n	80054c0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005490:	696b      	ldr	r3, [r5, #20]
 8005492:	055a      	lsls	r2, r3, #21
 8005494:	d516      	bpl.n	80054c4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005496:	682b      	ldr	r3, [r5, #0]
 8005498:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800549c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800549e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80054a2:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80054a4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80054a6:	2300      	movs	r3, #0
 80054a8:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80054aa:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054ae:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80054b2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80054b4:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054b8:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80054ba:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80054be:	2001      	movs	r0, #1
}
 80054c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80054c4:	1c73      	adds	r3, r6, #1
 80054c6:	d0df      	beq.n	8005488 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80054c8:	f7ff fb58 	bl	8004b7c <HAL_GetTick>
 80054cc:	eba0 0008 	sub.w	r0, r0, r8
 80054d0:	42b0      	cmp	r0, r6
 80054d2:	d801      	bhi.n	80054d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>
 80054d4:	2e00      	cmp	r6, #0
 80054d6:	d1d6      	bne.n	8005486 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80054d8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80054da:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80054dc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80054de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80054e8:	f042 0220 	orr.w	r2, r2, #32
 80054ec:	e7e4      	b.n	80054b8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x3e>

080054ee <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80054ee:	b570      	push	{r4, r5, r6, lr}
 80054f0:	4604      	mov	r4, r0
 80054f2:	460d      	mov	r5, r1
 80054f4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80054f6:	6823      	ldr	r3, [r4, #0]
 80054f8:	695b      	ldr	r3, [r3, #20]
 80054fa:	075b      	lsls	r3, r3, #29
 80054fc:	d501      	bpl.n	8005502 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80054fe:	2000      	movs	r0, #0
}
 8005500:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005502:	4620      	mov	r0, r4
 8005504:	f7ff ff9f 	bl	8005446 <I2C_IsAcknowledgeFailed>
 8005508:	b9a8      	cbnz	r0, 8005536 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800550a:	1c6a      	adds	r2, r5, #1
 800550c:	d0f3      	beq.n	80054f6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800550e:	f7ff fb35 	bl	8004b7c <HAL_GetTick>
 8005512:	1b80      	subs	r0, r0, r6
 8005514:	42a8      	cmp	r0, r5
 8005516:	d801      	bhi.n	800551c <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8005518:	2d00      	cmp	r5, #0
 800551a:	d1ec      	bne.n	80054f6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800551c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800551e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005520:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005522:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005526:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800552a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800552c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005530:	f042 0220 	orr.w	r2, r2, #32
 8005534:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005536:	2001      	movs	r0, #1
 8005538:	e7e2      	b.n	8005500 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800553a <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800553a:	b570      	push	{r4, r5, r6, lr}
 800553c:	4604      	mov	r4, r0
 800553e:	460d      	mov	r5, r1
 8005540:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005542:	6820      	ldr	r0, [r4, #0]
 8005544:	6943      	ldr	r3, [r0, #20]
 8005546:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800554a:	d001      	beq.n	8005550 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800554c:	2000      	movs	r0, #0
 800554e:	e010      	b.n	8005572 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005550:	6942      	ldr	r2, [r0, #20]
 8005552:	06d2      	lsls	r2, r2, #27
 8005554:	d50e      	bpl.n	8005574 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005556:	f06f 0210 	mvn.w	r2, #16
 800555a:	6142      	str	r2, [r0, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800555c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800555e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005560:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005564:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005568:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800556a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800556c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8005570:	2001      	movs	r0, #1
}
 8005572:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005574:	f7ff fb02 	bl	8004b7c <HAL_GetTick>
 8005578:	1b80      	subs	r0, r0, r6
 800557a:	42a8      	cmp	r0, r5
 800557c:	d801      	bhi.n	8005582 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800557e:	2d00      	cmp	r5, #0
 8005580:	d1df      	bne.n	8005542 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005582:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005584:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005586:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005588:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800558c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005590:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005592:	f042 0220 	orr.w	r2, r2, #32
 8005596:	e7e8      	b.n	800556a <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08005598 <I2C_WaitOnFlagUntilTimeout>:
{
 8005598:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800559c:	9e08      	ldr	r6, [sp, #32]
 800559e:	4604      	mov	r4, r0
 80055a0:	4690      	mov	r8, r2
 80055a2:	461f      	mov	r7, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80055a4:	ea4f 4911 	mov.w	r9, r1, lsr #16
 80055a8:	b28d      	uxth	r5, r1
 80055aa:	6821      	ldr	r1, [r4, #0]
 80055ac:	f1b9 0f01 	cmp.w	r9, #1
 80055b0:	bf0c      	ite	eq
 80055b2:	694b      	ldreq	r3, [r1, #20]
 80055b4:	698b      	ldrne	r3, [r1, #24]
 80055b6:	ea35 0303 	bics.w	r3, r5, r3
 80055ba:	bf0c      	ite	eq
 80055bc:	2301      	moveq	r3, #1
 80055be:	2300      	movne	r3, #0
 80055c0:	4598      	cmp	r8, r3
 80055c2:	d001      	beq.n	80055c8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80055c4:	2000      	movs	r0, #0
 80055c6:	e016      	b.n	80055f6 <I2C_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 80055c8:	1c7b      	adds	r3, r7, #1
 80055ca:	d0ef      	beq.n	80055ac <I2C_WaitOnFlagUntilTimeout+0x14>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80055cc:	f7ff fad6 	bl	8004b7c <HAL_GetTick>
 80055d0:	1b80      	subs	r0, r0, r6
 80055d2:	42b8      	cmp	r0, r7
 80055d4:	d801      	bhi.n	80055da <I2C_WaitOnFlagUntilTimeout+0x42>
 80055d6:	2f00      	cmp	r7, #0
 80055d8:	d1e7      	bne.n	80055aa <I2C_WaitOnFlagUntilTimeout+0x12>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80055da:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80055dc:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80055de:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80055e0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80055e4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80055e8:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80055ea:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80055ee:	f042 0220 	orr.w	r2, r2, #32
 80055f2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80055f4:	2001      	movs	r0, #1
}
 80055f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080055fa <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80055fa:	b570      	push	{r4, r5, r6, lr}
 80055fc:	4604      	mov	r4, r0
 80055fe:	460d      	mov	r5, r1
 8005600:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005602:	6823      	ldr	r3, [r4, #0]
 8005604:	695b      	ldr	r3, [r3, #20]
 8005606:	061b      	lsls	r3, r3, #24
 8005608:	d501      	bpl.n	800560e <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800560a:	2000      	movs	r0, #0
}
 800560c:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800560e:	4620      	mov	r0, r4
 8005610:	f7ff ff19 	bl	8005446 <I2C_IsAcknowledgeFailed>
 8005614:	b9a8      	cbnz	r0, 8005642 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005616:	1c6a      	adds	r2, r5, #1
 8005618:	d0f3      	beq.n	8005602 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800561a:	f7ff faaf 	bl	8004b7c <HAL_GetTick>
 800561e:	1b80      	subs	r0, r0, r6
 8005620:	42a8      	cmp	r0, r5
 8005622:	d801      	bhi.n	8005628 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005624:	2d00      	cmp	r5, #0
 8005626:	d1ec      	bne.n	8005602 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005628:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800562a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800562c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800562e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005632:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005636:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005638:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800563c:	f042 0220 	orr.w	r2, r2, #32
 8005640:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005642:	2001      	movs	r0, #1
 8005644:	e7e2      	b.n	800560c <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08005648 <I2C_RequestMemoryWrite>:
{
 8005648:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800564c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800564e:	6802      	ldr	r2, [r0, #0]
{
 8005650:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8005652:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005654:	6813      	ldr	r3, [r2, #0]
 8005656:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800565a:	6013      	str	r3, [r2, #0]
{
 800565c:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800565e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005660:	9600      	str	r6, [sp, #0]
 8005662:	2200      	movs	r2, #0
 8005664:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005668:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800566a:	f7ff ff95 	bl	8005598 <I2C_WaitOnFlagUntilTimeout>
 800566e:	6823      	ldr	r3, [r4, #0]
 8005670:	b138      	cbz	r0, 8005682 <I2C_RequestMemoryWrite+0x3a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	05db      	lsls	r3, r3, #23
 8005676:	d502      	bpl.n	800567e <I2C_RequestMemoryWrite+0x36>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005678:	f44f 7300 	mov.w	r3, #512	; 0x200
 800567c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800567e:	2003      	movs	r0, #3
 8005680:	e00a      	b.n	8005698 <I2C_RequestMemoryWrite+0x50>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005682:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 8005686:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005688:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800568a:	4919      	ldr	r1, [pc, #100]	; (80056f0 <I2C_RequestMemoryWrite+0xa8>)
 800568c:	4633      	mov	r3, r6
 800568e:	4620      	mov	r0, r4
 8005690:	f7ff fef3 	bl	800547a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005694:	b118      	cbz	r0, 800569e <I2C_RequestMemoryWrite+0x56>
      return HAL_ERROR;
 8005696:	2001      	movs	r0, #1
}
 8005698:	b004      	add	sp, #16
 800569a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800569e:	6823      	ldr	r3, [r4, #0]
 80056a0:	9003      	str	r0, [sp, #12]
 80056a2:	695a      	ldr	r2, [r3, #20]
 80056a4:	9203      	str	r2, [sp, #12]
 80056a6:	699b      	ldr	r3, [r3, #24]
 80056a8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056aa:	4632      	mov	r2, r6
 80056ac:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80056ae:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056b0:	4620      	mov	r0, r4
 80056b2:	f7ff ffa2 	bl	80055fa <I2C_WaitOnTXEFlagUntilTimeout>
 80056b6:	b140      	cbz	r0, 80056ca <I2C_RequestMemoryWrite+0x82>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80056b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80056ba:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056bc:	bf01      	itttt	eq
 80056be:	6822      	ldreq	r2, [r4, #0]
 80056c0:	6813      	ldreq	r3, [r2, #0]
 80056c2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80056c6:	6013      	streq	r3, [r2, #0]
 80056c8:	e7e5      	b.n	8005696 <I2C_RequestMemoryWrite+0x4e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80056ca:	f1b8 0f01 	cmp.w	r8, #1
 80056ce:	6823      	ldr	r3, [r4, #0]
 80056d0:	d102      	bne.n	80056d8 <I2C_RequestMemoryWrite+0x90>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80056d2:	b2ed      	uxtb	r5, r5
 80056d4:	611d      	str	r5, [r3, #16]
 80056d6:	e7df      	b.n	8005698 <I2C_RequestMemoryWrite+0x50>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80056d8:	0a2a      	lsrs	r2, r5, #8
 80056da:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80056dc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80056de:	4632      	mov	r2, r6
 80056e0:	4620      	mov	r0, r4
 80056e2:	f7ff ff8a 	bl	80055fa <I2C_WaitOnTXEFlagUntilTimeout>
 80056e6:	2800      	cmp	r0, #0
 80056e8:	d1e6      	bne.n	80056b8 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80056ea:	6823      	ldr	r3, [r4, #0]
 80056ec:	e7f1      	b.n	80056d2 <I2C_RequestMemoryWrite+0x8a>
 80056ee:	bf00      	nop
 80056f0:	00010002 	.word	0x00010002

080056f4 <I2C_RequestMemoryRead>:
{
 80056f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80056f8:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80056fa:	6803      	ldr	r3, [r0, #0]
{
 80056fc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80056fe:	4616      	mov	r6, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005700:	681a      	ldr	r2, [r3, #0]
 8005702:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005706:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005708:	681a      	ldr	r2, [r3, #0]
 800570a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800570e:	601a      	str	r2, [r3, #0]
{
 8005710:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005712:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005714:	9500      	str	r5, [sp, #0]
 8005716:	2200      	movs	r2, #0
 8005718:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800571c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800571e:	f7ff ff3b 	bl	8005598 <I2C_WaitOnFlagUntilTimeout>
 8005722:	6823      	ldr	r3, [r4, #0]
 8005724:	b148      	cbz	r0, 800573a <I2C_RequestMemoryRead+0x46>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005726:	681b      	ldr	r3, [r3, #0]
 8005728:	05db      	lsls	r3, r3, #23
 800572a:	d502      	bpl.n	8005732 <I2C_RequestMemoryRead+0x3e>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800572c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005730:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005732:	2003      	movs	r0, #3
}
 8005734:	b004      	add	sp, #16
 8005736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800573a:	b2ff      	uxtb	r7, r7
 800573c:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 8005740:	611a      	str	r2, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005742:	492a      	ldr	r1, [pc, #168]	; (80057ec <I2C_RequestMemoryRead+0xf8>)
 8005744:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005746:	462b      	mov	r3, r5
 8005748:	4620      	mov	r0, r4
 800574a:	f7ff fe96 	bl	800547a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800574e:	b108      	cbz	r0, 8005754 <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 8005750:	2001      	movs	r0, #1
 8005752:	e7ef      	b.n	8005734 <I2C_RequestMemoryRead+0x40>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005754:	6823      	ldr	r3, [r4, #0]
 8005756:	9003      	str	r0, [sp, #12]
 8005758:	695a      	ldr	r2, [r3, #20]
 800575a:	9203      	str	r2, [sp, #12]
 800575c:	699b      	ldr	r3, [r3, #24]
 800575e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005760:	462a      	mov	r2, r5
 8005762:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005764:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005766:	4620      	mov	r0, r4
 8005768:	f7ff ff47 	bl	80055fa <I2C_WaitOnTXEFlagUntilTimeout>
 800576c:	b140      	cbz	r0, 8005780 <I2C_RequestMemoryRead+0x8c>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800576e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005770:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005772:	bf01      	itttt	eq
 8005774:	6822      	ldreq	r2, [r4, #0]
 8005776:	6813      	ldreq	r3, [r2, #0]
 8005778:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800577c:	6013      	streq	r3, [r2, #0]
 800577e:	e7e7      	b.n	8005750 <I2C_RequestMemoryRead+0x5c>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005780:	f1b8 0f01 	cmp.w	r8, #1
 8005784:	6823      	ldr	r3, [r4, #0]
 8005786:	d125      	bne.n	80057d4 <I2C_RequestMemoryRead+0xe0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005788:	b2f6      	uxtb	r6, r6
 800578a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800578c:	462a      	mov	r2, r5
 800578e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005790:	4620      	mov	r0, r4
 8005792:	f7ff ff32 	bl	80055fa <I2C_WaitOnTXEFlagUntilTimeout>
 8005796:	4602      	mov	r2, r0
 8005798:	2800      	cmp	r0, #0
 800579a:	d1e8      	bne.n	800576e <I2C_RequestMemoryRead+0x7a>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800579c:	6821      	ldr	r1, [r4, #0]
 800579e:	680b      	ldr	r3, [r1, #0]
 80057a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80057a4:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80057a6:	4620      	mov	r0, r4
 80057a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80057aa:	9500      	str	r5, [sp, #0]
 80057ac:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80057b0:	f7ff fef2 	bl	8005598 <I2C_WaitOnFlagUntilTimeout>
 80057b4:	6823      	ldr	r3, [r4, #0]
 80057b6:	2800      	cmp	r0, #0
 80057b8:	d1b5      	bne.n	8005726 <I2C_RequestMemoryRead+0x32>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80057ba:	f047 0701 	orr.w	r7, r7, #1
 80057be:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80057c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80057c2:	490a      	ldr	r1, [pc, #40]	; (80057ec <I2C_RequestMemoryRead+0xf8>)
 80057c4:	462b      	mov	r3, r5
 80057c6:	4620      	mov	r0, r4
 80057c8:	f7ff fe57 	bl	800547a <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80057cc:	3000      	adds	r0, #0
 80057ce:	bf18      	it	ne
 80057d0:	2001      	movne	r0, #1
 80057d2:	e7af      	b.n	8005734 <I2C_RequestMemoryRead+0x40>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80057d4:	0a32      	lsrs	r2, r6, #8
 80057d6:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80057d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80057da:	462a      	mov	r2, r5
 80057dc:	4620      	mov	r0, r4
 80057de:	f7ff ff0c 	bl	80055fa <I2C_WaitOnTXEFlagUntilTimeout>
 80057e2:	2800      	cmp	r0, #0
 80057e4:	d1c3      	bne.n	800576e <I2C_RequestMemoryRead+0x7a>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80057e6:	6823      	ldr	r3, [r4, #0]
 80057e8:	e7ce      	b.n	8005788 <I2C_RequestMemoryRead+0x94>
 80057ea:	bf00      	nop
 80057ec:	00010002 	.word	0x00010002

080057f0 <HAL_I2C_Init>:
{
 80057f0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80057f2:	4604      	mov	r4, r0
 80057f4:	b908      	cbnz	r0, 80057fa <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80057f6:	2001      	movs	r0, #1
}
 80057f8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80057fa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80057fe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005802:	b91b      	cbnz	r3, 800580c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005804:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005808:	f7fc fd32 	bl	8002270 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800580c:	2324      	movs	r3, #36	; 0x24
 800580e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005812:	6823      	ldr	r3, [r4, #0]
 8005814:	681a      	ldr	r2, [r3, #0]
 8005816:	f022 0201 	bic.w	r2, r2, #1
 800581a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800581c:	681a      	ldr	r2, [r3, #0]
 800581e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005822:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005824:	681a      	ldr	r2, [r3, #0]
 8005826:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800582a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800582c:	f000 fe6c 	bl	8006508 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005830:	6863      	ldr	r3, [r4, #4]
 8005832:	4a41      	ldr	r2, [pc, #260]	; (8005938 <HAL_I2C_Init+0x148>)
 8005834:	4293      	cmp	r3, r2
 8005836:	d84d      	bhi.n	80058d4 <HAL_I2C_Init+0xe4>
 8005838:	4a40      	ldr	r2, [pc, #256]	; (800593c <HAL_I2C_Init+0x14c>)
 800583a:	4290      	cmp	r0, r2
 800583c:	d9db      	bls.n	80057f6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800583e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8005840:	493f      	ldr	r1, [pc, #252]	; (8005940 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005842:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005844:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005848:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800584c:	430d      	orrs	r5, r1
 800584e:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005850:	6a15      	ldr	r5, [r2, #32]
 8005852:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8005856:	3101      	adds	r1, #1
 8005858:	4329      	orrs	r1, r5
 800585a:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800585c:	69d1      	ldr	r1, [r2, #28]
 800585e:	4d36      	ldr	r5, [pc, #216]	; (8005938 <HAL_I2C_Init+0x148>)
 8005860:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005864:	42ab      	cmp	r3, r5
 8005866:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800586a:	f100 30ff 	add.w	r0, r0, #4294967295
 800586e:	d848      	bhi.n	8005902 <HAL_I2C_Init+0x112>
 8005870:	005b      	lsls	r3, r3, #1
 8005872:	fbb0 f0f3 	udiv	r0, r0, r3
 8005876:	1c43      	adds	r3, r0, #1
 8005878:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800587c:	2b04      	cmp	r3, #4
 800587e:	bf38      	it	cc
 8005880:	2304      	movcc	r3, #4
 8005882:	430b      	orrs	r3, r1
 8005884:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005886:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800588a:	6811      	ldr	r1, [r2, #0]
 800588c:	4303      	orrs	r3, r0
 800588e:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005892:	430b      	orrs	r3, r1
 8005894:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005896:	6891      	ldr	r1, [r2, #8]
 8005898:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800589c:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80058a0:	4303      	orrs	r3, r0
 80058a2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80058a6:	430b      	orrs	r3, r1
 80058a8:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80058aa:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80058ae:	68d1      	ldr	r1, [r2, #12]
 80058b0:	4303      	orrs	r3, r0
 80058b2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80058b6:	430b      	orrs	r3, r1
 80058b8:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80058ba:	6813      	ldr	r3, [r2, #0]
 80058bc:	f043 0301 	orr.w	r3, r3, #1
 80058c0:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80058c2:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80058c4:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80058c6:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80058c8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80058cc:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80058ce:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80058d2:	e791      	b.n	80057f8 <HAL_I2C_Init+0x8>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80058d4:	4a1b      	ldr	r2, [pc, #108]	; (8005944 <HAL_I2C_Init+0x154>)
 80058d6:	4290      	cmp	r0, r2
 80058d8:	d98d      	bls.n	80057f6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80058da:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 80058dc:	4e18      	ldr	r6, [pc, #96]	; (8005940 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80058de:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80058e0:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80058e4:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80058e8:	4335      	orrs	r5, r6
 80058ea:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80058ec:	6a15      	ldr	r5, [r2, #32]
 80058ee:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80058f2:	4371      	muls	r1, r6
 80058f4:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80058f8:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 80058fc:	fbb1 f1f6 	udiv	r1, r1, r6
 8005900:	e7a9      	b.n	8005856 <HAL_I2C_Init+0x66>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005902:	68a5      	ldr	r5, [r4, #8]
 8005904:	b955      	cbnz	r5, 800591c <HAL_I2C_Init+0x12c>
 8005906:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800590a:	fbb0 f0f3 	udiv	r0, r0, r3
 800590e:	1c43      	adds	r3, r0, #1
 8005910:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005914:	b16b      	cbz	r3, 8005932 <HAL_I2C_Init+0x142>
 8005916:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800591a:	e7b2      	b.n	8005882 <HAL_I2C_Init+0x92>
 800591c:	2519      	movs	r5, #25
 800591e:	436b      	muls	r3, r5
 8005920:	fbb0 f0f3 	udiv	r0, r0, r3
 8005924:	1c43      	adds	r3, r0, #1
 8005926:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800592a:	b113      	cbz	r3, 8005932 <HAL_I2C_Init+0x142>
 800592c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005930:	e7a7      	b.n	8005882 <HAL_I2C_Init+0x92>
 8005932:	2301      	movs	r3, #1
 8005934:	e7a5      	b.n	8005882 <HAL_I2C_Init+0x92>
 8005936:	bf00      	nop
 8005938:	000186a0 	.word	0x000186a0
 800593c:	001e847f 	.word	0x001e847f
 8005940:	000f4240 	.word	0x000f4240
 8005944:	003d08ff 	.word	0x003d08ff

08005948 <HAL_I2C_Mem_Write>:
{
 8005948:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800594c:	4604      	mov	r4, r0
 800594e:	4699      	mov	r9, r3
 8005950:	460f      	mov	r7, r1
 8005952:	4690      	mov	r8, r2
 8005954:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  uint32_t tickstart = HAL_GetTick();
 8005956:	f7ff f911 	bl	8004b7c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800595a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800595e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005960:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005962:	d003      	beq.n	800596c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8005964:	2002      	movs	r0, #2
}
 8005966:	b003      	add	sp, #12
 8005968:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800596c:	9000      	str	r0, [sp, #0]
 800596e:	2319      	movs	r3, #25
 8005970:	2201      	movs	r2, #1
 8005972:	493b      	ldr	r1, [pc, #236]	; (8005a60 <HAL_I2C_Mem_Write+0x118>)
 8005974:	4620      	mov	r0, r4
 8005976:	f7ff fe0f 	bl	8005598 <I2C_WaitOnFlagUntilTimeout>
 800597a:	2800      	cmp	r0, #0
 800597c:	d1f2      	bne.n	8005964 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800597e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005982:	2b01      	cmp	r3, #1
 8005984:	d0ee      	beq.n	8005964 <HAL_I2C_Mem_Write+0x1c>
 8005986:	2301      	movs	r3, #1
 8005988:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800598c:	6823      	ldr	r3, [r4, #0]
 800598e:	681a      	ldr	r2, [r3, #0]
 8005990:	07d1      	lsls	r1, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8005992:	bf5e      	ittt	pl
 8005994:	681a      	ldrpl	r2, [r3, #0]
 8005996:	f042 0201 	orrpl.w	r2, r2, #1
 800599a:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800599c:	681a      	ldr	r2, [r3, #0]
 800599e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80059a2:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80059a4:	2321      	movs	r3, #33	; 0x21
 80059a6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80059aa:	2340      	movs	r3, #64	; 0x40
 80059ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80059b0:	2300      	movs	r3, #0
 80059b2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80059b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80059b6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80059b8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80059bc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80059be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80059c0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80059c2:	4b28      	ldr	r3, [pc, #160]	; (8005a64 <HAL_I2C_Mem_Write+0x11c>)
 80059c4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80059c6:	e9cd 6500 	strd	r6, r5, [sp]
 80059ca:	464b      	mov	r3, r9
 80059cc:	4642      	mov	r2, r8
 80059ce:	4639      	mov	r1, r7
 80059d0:	4620      	mov	r0, r4
 80059d2:	f7ff fe39 	bl	8005648 <I2C_RequestMemoryWrite>
 80059d6:	2800      	cmp	r0, #0
 80059d8:	d02a      	beq.n	8005a30 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80059da:	2001      	movs	r0, #1
 80059dc:	e7c3      	b.n	8005966 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80059de:	f7ff fe0c 	bl	80055fa <I2C_WaitOnTXEFlagUntilTimeout>
 80059e2:	b140      	cbz	r0, 80059f6 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80059e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80059e6:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059e8:	bf01      	itttt	eq
 80059ea:	6822      	ldreq	r2, [r4, #0]
 80059ec:	6813      	ldreq	r3, [r2, #0]
 80059ee:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80059f2:	6013      	streq	r3, [r2, #0]
 80059f4:	e7f1      	b.n	80059da <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80059f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80059f8:	6827      	ldr	r7, [r4, #0]
 80059fa:	461a      	mov	r2, r3
 80059fc:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005a00:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005a02:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005a04:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005a06:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005a08:	3a01      	subs	r2, #1
 8005a0a:	b292      	uxth	r2, r2
 8005a0c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a0e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005a10:	1e48      	subs	r0, r1, #1
 8005a12:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a14:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005a16:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005a18:	d50a      	bpl.n	8005a30 <HAL_I2C_Mem_Write+0xe8>
 8005a1a:	b148      	cbz	r0, 8005a30 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005a1c:	785a      	ldrb	r2, [r3, #1]
 8005a1e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005a20:	3302      	adds	r3, #2
 8005a22:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005a24:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005a26:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005a28:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005a2a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005a2c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005a2e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005a30:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a32:	462a      	mov	r2, r5
 8005a34:	4631      	mov	r1, r6
 8005a36:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005a38:	2b00      	cmp	r3, #0
 8005a3a:	d1d0      	bne.n	80059de <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005a3c:	f7ff fd57 	bl	80054ee <I2C_WaitOnBTFFlagUntilTimeout>
 8005a40:	2800      	cmp	r0, #0
 8005a42:	d1cf      	bne.n	80059e4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a44:	6822      	ldr	r2, [r4, #0]
 8005a46:	6813      	ldr	r3, [r2, #0]
 8005a48:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005a4c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005a4e:	2320      	movs	r3, #32
 8005a50:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005a54:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005a58:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005a5c:	e783      	b.n	8005966 <HAL_I2C_Mem_Write+0x1e>
 8005a5e:	bf00      	nop
 8005a60:	00100002 	.word	0x00100002
 8005a64:	ffff0000 	.word	0xffff0000

08005a68 <HAL_I2C_Mem_Read>:
{
 8005a68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005a6c:	4604      	mov	r4, r0
 8005a6e:	b087      	sub	sp, #28
 8005a70:	4699      	mov	r9, r3
 8005a72:	460d      	mov	r5, r1
 8005a74:	4690      	mov	r8, r2
 8005a76:	9f10      	ldr	r7, [sp, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8005a78:	f7ff f880 	bl	8004b7c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005a7c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005a80:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005a82:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005a84:	d004      	beq.n	8005a90 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8005a86:	2502      	movs	r5, #2
}
 8005a88:	4628      	mov	r0, r5
 8005a8a:	b007      	add	sp, #28
 8005a8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005a90:	9000      	str	r0, [sp, #0]
 8005a92:	2319      	movs	r3, #25
 8005a94:	2201      	movs	r2, #1
 8005a96:	4977      	ldr	r1, [pc, #476]	; (8005c74 <HAL_I2C_Mem_Read+0x20c>)
 8005a98:	4620      	mov	r0, r4
 8005a9a:	f7ff fd7d 	bl	8005598 <I2C_WaitOnFlagUntilTimeout>
 8005a9e:	2800      	cmp	r0, #0
 8005aa0:	d1f1      	bne.n	8005a86 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005aa2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005aa6:	2b01      	cmp	r3, #1
 8005aa8:	d0ed      	beq.n	8005a86 <HAL_I2C_Mem_Read+0x1e>
 8005aaa:	2301      	movs	r3, #1
 8005aac:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005ab0:	6823      	ldr	r3, [r4, #0]
 8005ab2:	681a      	ldr	r2, [r3, #0]
 8005ab4:	07d0      	lsls	r0, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8005ab6:	bf5e      	ittt	pl
 8005ab8:	681a      	ldrpl	r2, [r3, #0]
 8005aba:	f042 0201 	orrpl.w	r2, r2, #1
 8005abe:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005ac0:	681a      	ldr	r2, [r3, #0]
 8005ac2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005ac6:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005ac8:	2322      	movs	r3, #34	; 0x22
 8005aca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005ace:	2340      	movs	r3, #64	; 0x40
 8005ad0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005ad4:	2300      	movs	r3, #0
 8005ad6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005ad8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ada:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005adc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005ae0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005ae2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005ae4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005ae6:	4b64      	ldr	r3, [pc, #400]	; (8005c78 <HAL_I2C_Mem_Read+0x210>)
 8005ae8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005aea:	4629      	mov	r1, r5
 8005aec:	e9cd 7600 	strd	r7, r6, [sp]
 8005af0:	464b      	mov	r3, r9
 8005af2:	4642      	mov	r2, r8
 8005af4:	4620      	mov	r0, r4
 8005af6:	f7ff fdfd 	bl	80056f4 <I2C_RequestMemoryRead>
 8005afa:	4605      	mov	r5, r0
 8005afc:	b108      	cbz	r0, 8005b02 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005afe:	2501      	movs	r5, #1
 8005b00:	e7c2      	b.n	8005a88 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005b02:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8005b04:	6823      	ldr	r3, [r4, #0]
 8005b06:	b992      	cbnz	r2, 8005b2e <HAL_I2C_Mem_Read+0xc6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b08:	9002      	str	r0, [sp, #8]
 8005b0a:	695a      	ldr	r2, [r3, #20]
 8005b0c:	9202      	str	r2, [sp, #8]
 8005b0e:	699a      	ldr	r2, [r3, #24]
 8005b10:	9202      	str	r2, [sp, #8]
 8005b12:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b14:	681a      	ldr	r2, [r3, #0]
 8005b16:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005b1a:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005b1c:	2320      	movs	r3, #32
 8005b1e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005b22:	2300      	movs	r3, #0
 8005b24:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 8005b28:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 8005b2c:	e7ac      	b.n	8005a88 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005b2e:	2a01      	cmp	r2, #1
 8005b30:	d12c      	bne.n	8005b8c <HAL_I2C_Mem_Read+0x124>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b32:	681a      	ldr	r2, [r3, #0]
 8005b34:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b38:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005b3a:	9003      	str	r0, [sp, #12]
 8005b3c:	695a      	ldr	r2, [r3, #20]
 8005b3e:	9203      	str	r2, [sp, #12]
 8005b40:	699a      	ldr	r2, [r3, #24]
 8005b42:	9203      	str	r2, [sp, #12]
 8005b44:	9a03      	ldr	r2, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b46:	681a      	ldr	r2, [r3, #0]
 8005b48:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005b4c:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005b4e:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8005c7c <HAL_I2C_Mem_Read+0x214>
    while (hi2c->XferSize > 0U)
 8005b52:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b54:	2b00      	cmp	r3, #0
 8005b56:	d0e1      	beq.n	8005b1c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005b58:	2b03      	cmp	r3, #3
 8005b5a:	d86e      	bhi.n	8005c3a <HAL_I2C_Mem_Read+0x1d2>
        if (hi2c->XferSize == 1U)
 8005b5c:	2b01      	cmp	r3, #1
 8005b5e:	d12d      	bne.n	8005bbc <HAL_I2C_Mem_Read+0x154>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005b60:	4632      	mov	r2, r6
 8005b62:	4639      	mov	r1, r7
 8005b64:	4620      	mov	r0, r4
 8005b66:	f7ff fce8 	bl	800553a <I2C_WaitOnRXNEFlagUntilTimeout>
 8005b6a:	2800      	cmp	r0, #0
 8005b6c:	d1c7      	bne.n	8005afe <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005b6e:	6823      	ldr	r3, [r4, #0]
 8005b70:	691a      	ldr	r2, [r3, #16]
 8005b72:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b74:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005b76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b78:	3301      	adds	r3, #1
 8005b7a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005b7c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005b7e:	3b01      	subs	r3, #1
 8005b80:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005b82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005b84:	3b01      	subs	r3, #1
 8005b86:	b29b      	uxth	r3, r3
 8005b88:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005b8a:	e7e2      	b.n	8005b52 <HAL_I2C_Mem_Read+0xea>
    else if (hi2c->XferSize == 2U)
 8005b8c:	2a02      	cmp	r2, #2
 8005b8e:	d10e      	bne.n	8005bae <HAL_I2C_Mem_Read+0x146>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005b90:	681a      	ldr	r2, [r3, #0]
 8005b92:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005b96:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005b98:	681a      	ldr	r2, [r3, #0]
 8005b9a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005b9e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ba0:	9004      	str	r0, [sp, #16]
 8005ba2:	695a      	ldr	r2, [r3, #20]
 8005ba4:	9204      	str	r2, [sp, #16]
 8005ba6:	699b      	ldr	r3, [r3, #24]
 8005ba8:	9304      	str	r3, [sp, #16]
 8005baa:	9b04      	ldr	r3, [sp, #16]
 8005bac:	e7cf      	b.n	8005b4e <HAL_I2C_Mem_Read+0xe6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005bae:	9005      	str	r0, [sp, #20]
 8005bb0:	695a      	ldr	r2, [r3, #20]
 8005bb2:	9205      	str	r2, [sp, #20]
 8005bb4:	699b      	ldr	r3, [r3, #24]
 8005bb6:	9305      	str	r3, [sp, #20]
 8005bb8:	9b05      	ldr	r3, [sp, #20]
 8005bba:	e7c8      	b.n	8005b4e <HAL_I2C_Mem_Read+0xe6>
        else if (hi2c->XferSize == 2U)
 8005bbc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005bbe:	9600      	str	r6, [sp, #0]
 8005bc0:	463b      	mov	r3, r7
 8005bc2:	f04f 0200 	mov.w	r2, #0
 8005bc6:	4641      	mov	r1, r8
 8005bc8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005bca:	d119      	bne.n	8005c00 <HAL_I2C_Mem_Read+0x198>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005bcc:	f7ff fce4 	bl	8005598 <I2C_WaitOnFlagUntilTimeout>
 8005bd0:	2800      	cmp	r0, #0
 8005bd2:	d194      	bne.n	8005afe <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005bd4:	6823      	ldr	r3, [r4, #0]
 8005bd6:	681a      	ldr	r2, [r3, #0]
 8005bd8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005bdc:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005bde:	691a      	ldr	r2, [r3, #16]
 8005be0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005be2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005be4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005be6:	1c53      	adds	r3, r2, #1
 8005be8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005bea:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005bec:	3b01      	subs	r3, #1
 8005bee:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005bf0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005bf2:	3b01      	subs	r3, #1
 8005bf4:	b29b      	uxth	r3, r3
 8005bf6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005bf8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005bfa:	691b      	ldr	r3, [r3, #16]
 8005bfc:	7053      	strb	r3, [r2, #1]
 8005bfe:	e7ba      	b.n	8005b76 <HAL_I2C_Mem_Read+0x10e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c00:	f7ff fcca 	bl	8005598 <I2C_WaitOnFlagUntilTimeout>
 8005c04:	4602      	mov	r2, r0
 8005c06:	2800      	cmp	r0, #0
 8005c08:	f47f af79 	bne.w	8005afe <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005c0c:	6823      	ldr	r3, [r4, #0]
 8005c0e:	6819      	ldr	r1, [r3, #0]
 8005c10:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8005c14:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c16:	6919      	ldr	r1, [r3, #16]
 8005c18:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c1a:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8005c1c:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c1e:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005c20:	3301      	adds	r3, #1
 8005c22:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005c24:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005c26:	3b01      	subs	r3, #1
 8005c28:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005c2a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c2c:	3b01      	subs	r3, #1
 8005c2e:	b29b      	uxth	r3, r3
 8005c30:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005c32:	4641      	mov	r1, r8
 8005c34:	463b      	mov	r3, r7
 8005c36:	4620      	mov	r0, r4
 8005c38:	e7c8      	b.n	8005bcc <HAL_I2C_Mem_Read+0x164>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c3a:	4632      	mov	r2, r6
 8005c3c:	4639      	mov	r1, r7
 8005c3e:	4620      	mov	r0, r4
 8005c40:	f7ff fc7b 	bl	800553a <I2C_WaitOnRXNEFlagUntilTimeout>
 8005c44:	2800      	cmp	r0, #0
 8005c46:	f47f af5a 	bne.w	8005afe <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005c4a:	6823      	ldr	r3, [r4, #0]
 8005c4c:	691a      	ldr	r2, [r3, #16]
 8005c4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c50:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005c52:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005c54:	1c53      	adds	r3, r2, #1
 8005c56:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005c58:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005c5a:	3b01      	subs	r3, #1
 8005c5c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005c5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c60:	3b01      	subs	r3, #1
 8005c62:	b29b      	uxth	r3, r3
 8005c64:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005c66:	6823      	ldr	r3, [r4, #0]
 8005c68:	6959      	ldr	r1, [r3, #20]
 8005c6a:	0749      	lsls	r1, r1, #29
 8005c6c:	f57f af71 	bpl.w	8005b52 <HAL_I2C_Mem_Read+0xea>
 8005c70:	e7c3      	b.n	8005bfa <HAL_I2C_Mem_Read+0x192>
 8005c72:	bf00      	nop
 8005c74:	00100002 	.word	0x00100002
 8005c78:	ffff0000 	.word	0xffff0000
 8005c7c:	00010004 	.word	0x00010004

08005c80 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005c80:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8005c84:	b2d2      	uxtb	r2, r2
 8005c86:	2a20      	cmp	r2, #32
{
 8005c88:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005c8a:	d116      	bne.n	8005cba <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005c8c:	2324      	movs	r3, #36	; 0x24
 8005c8e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005c92:	6803      	ldr	r3, [r0, #0]
 8005c94:	681c      	ldr	r4, [r3, #0]
 8005c96:	f024 0401 	bic.w	r4, r4, #1
 8005c9a:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8005c9c:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8005c9e:	f024 0410 	bic.w	r4, r4, #16
 8005ca2:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8005ca4:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8005ca6:	4321      	orrs	r1, r4
 8005ca8:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005caa:	6819      	ldr	r1, [r3, #0]
 8005cac:	f041 0101 	orr.w	r1, r1, #1
 8005cb0:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005cb2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 8005cb6:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005cb8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005cba:	2002      	movs	r0, #2
 8005cbc:	e7fc      	b.n	8005cb8 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08005cbe <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005cbe:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005cc0:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 8005cc4:	b2e4      	uxtb	r4, r4
 8005cc6:	2c20      	cmp	r4, #32
 8005cc8:	d116      	bne.n	8005cf8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005cca:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005ccc:	2324      	movs	r3, #36	; 0x24
 8005cce:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8005cd2:	6815      	ldr	r5, [r2, #0]
 8005cd4:	f025 0501 	bic.w	r5, r5, #1
 8005cd8:	6015      	str	r5, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8005cda:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8005cdc:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8005ce0:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8005ce2:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8005ce4:	b29b      	uxth	r3, r3
 8005ce6:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005ce8:	6813      	ldr	r3, [r2, #0]
 8005cea:	f043 0301 	orr.w	r3, r3, #1
 8005cee:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005cf0:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8005cf4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005cf6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005cf8:	2002      	movs	r0, #2
 8005cfa:	e7fc      	b.n	8005cf6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005cfc <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8005cfc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d00:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d02:	6804      	ldr	r4, [r0, #0]
 8005d04:	684f      	ldr	r7, [r1, #4]
 8005d06:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d08:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005d0c:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d10:	3284      	adds	r2, #132	; 0x84
 8005d12:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d14:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005d18:	6858      	ldr	r0, [r3, #4]
 8005d1a:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005d1e:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d20:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d22:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d26:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8005d2a:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005d2c:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005d2e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005d32:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005d34:	68e0      	ldr	r0, [r4, #12]
 8005d36:	68cd      	ldr	r5, [r1, #12]
 8005d38:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8005d3c:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005d3e:	6898      	ldr	r0, [r3, #8]
 8005d40:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005d44:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005d46:	68e6      	ldr	r6, [r4, #12]
 8005d48:	6888      	ldr	r0, [r1, #8]
 8005d4a:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005d4e:	3001      	adds	r0, #1
 8005d50:	4430      	add	r0, r6
 8005d52:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005d56:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005d58:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005d5a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005d5c:	f020 0007 	bic.w	r0, r0, #7
 8005d60:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005d62:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005d66:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005d68:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005d6a:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005d6e:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005d72:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005d76:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005d7a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005d7e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005d82:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8005d86:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005d88:	6958      	ldr	r0, [r3, #20]
 8005d8a:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8005d8e:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005d90:	6948      	ldr	r0, [r1, #20]
 8005d92:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005d94:	69d8      	ldr	r0, [r3, #28]
 8005d96:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8005d9a:	f020 0007 	bic.w	r0, r0, #7
 8005d9e:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005da0:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8005da4:	4305      	orrs	r5, r0
 8005da6:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005da8:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005daa:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005dac:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005db0:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005db2:	b31e      	cbz	r6, 8005dfc <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005db4:	2e01      	cmp	r6, #1
 8005db6:	d023      	beq.n	8005e00 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005db8:	1eb0      	subs	r0, r6, #2
 8005dba:	2802      	cmp	r0, #2
 8005dbc:	d922      	bls.n	8005e04 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8005dbe:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005dc0:	bf0c      	ite	eq
 8005dc2:	2002      	moveq	r0, #2
 8005dc4:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005dc6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8005dc8:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 8005dcc:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005dce:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005dd0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005dd2:	eba7 070c 	sub.w	r7, r7, ip
 8005dd6:	4345      	muls	r5, r0
 8005dd8:	4378      	muls	r0, r7
 8005dda:	3003      	adds	r0, #3
 8005ddc:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005de0:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005de2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8005de4:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8005de8:	f020 0007 	bic.w	r0, r0, #7
 8005dec:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005dee:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005df0:	58a3      	ldr	r3, [r4, r2]
 8005df2:	f043 0301 	orr.w	r3, r3, #1
 8005df6:	50a3      	str	r3, [r4, r2]
}
 8005df8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005dfc:	2004      	movs	r0, #4
 8005dfe:	e7e2      	b.n	8005dc6 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005e00:	2003      	movs	r0, #3
 8005e02:	e7e0      	b.n	8005dc6 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005e04:	2002      	movs	r0, #2
 8005e06:	e7de      	b.n	8005dc6 <LTDC_SetConfig+0xca>

08005e08 <HAL_LTDC_Init>:
{
 8005e08:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005e0a:	4604      	mov	r4, r0
 8005e0c:	2800      	cmp	r0, #0
 8005e0e:	d063      	beq.n	8005ed8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005e10:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005e14:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005e18:	b91b      	cbnz	r3, 8005e22 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005e1a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005e1e:	f7fc fa83 	bl	8002328 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005e22:	2302      	movs	r3, #2
 8005e24:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005e28:	6823      	ldr	r3, [r4, #0]
 8005e2a:	699a      	ldr	r2, [r3, #24]
 8005e2c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005e30:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e32:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005e36:	4302      	orrs	r2, r0
 8005e38:	68e0      	ldr	r0, [r4, #12]
 8005e3a:	6999      	ldr	r1, [r3, #24]
 8005e3c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005e3e:	6920      	ldr	r0, [r4, #16]
 8005e40:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005e42:	430a      	orrs	r2, r1
 8005e44:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005e46:	689a      	ldr	r2, [r3, #8]
 8005e48:	4924      	ldr	r1, [pc, #144]	; (8005edc <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005e4a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005e4c:	400a      	ands	r2, r1
 8005e4e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005e50:	689a      	ldr	r2, [r3, #8]
 8005e52:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005e56:	69a0      	ldr	r0, [r4, #24]
 8005e58:	4302      	orrs	r2, r0
 8005e5a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005e5c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005e5e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005e60:	400a      	ands	r2, r1
 8005e62:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005e64:	68da      	ldr	r2, [r3, #12]
 8005e66:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005e6a:	6a20      	ldr	r0, [r4, #32]
 8005e6c:	4302      	orrs	r2, r0
 8005e6e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005e70:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005e72:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005e74:	400a      	ands	r2, r1
 8005e76:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005e78:	691a      	ldr	r2, [r3, #16]
 8005e7a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005e7e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005e80:	4302      	orrs	r2, r0
 8005e82:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005e84:	695a      	ldr	r2, [r3, #20]
 8005e86:	4011      	ands	r1, r2
 8005e88:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005e8a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005e8c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005e8e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005e92:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005e94:	430a      	orrs	r2, r1
 8005e96:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005e98:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005e9a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005e9e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005ea2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005ea6:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005ea8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005eaa:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005eae:	430a      	orrs	r2, r1
 8005eb0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005eb4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005eb8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005eba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005ebc:	f042 0206 	orr.w	r2, r2, #6
 8005ec0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005ec2:	699a      	ldr	r2, [r3, #24]
 8005ec4:	f042 0201 	orr.w	r2, r2, #1
 8005ec8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005eca:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005ecc:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005ece:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005ed2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005ed6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005ed8:	2001      	movs	r0, #1
 8005eda:	e7fc      	b.n	8005ed6 <HAL_LTDC_Init+0xce>
 8005edc:	f000f800 	.word	0xf000f800

08005ee0 <HAL_LTDC_ErrorCallback>:
 8005ee0:	4770      	bx	lr

08005ee2 <HAL_LTDC_ReloadEventCallback>:
 8005ee2:	4770      	bx	lr

08005ee4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005ee4:	6803      	ldr	r3, [r0, #0]
{
 8005ee6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005ee8:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005eea:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005eec:	0772      	lsls	r2, r6, #29
{
 8005eee:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005ef0:	d514      	bpl.n	8005f1c <HAL_LTDC_IRQHandler+0x38>
 8005ef2:	0769      	lsls	r1, r5, #29
 8005ef4:	d512      	bpl.n	8005f1c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005ef6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005ef8:	f022 0204 	bic.w	r2, r2, #4
 8005efc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005efe:	2204      	movs	r2, #4
 8005f00:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005f02:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005f06:	f043 0301 	orr.w	r3, r3, #1
 8005f0a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005f0e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005f10:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005f14:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005f18:	f7ff ffe2 	bl	8005ee0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005f1c:	07b2      	lsls	r2, r6, #30
 8005f1e:	d516      	bpl.n	8005f4e <HAL_LTDC_IRQHandler+0x6a>
 8005f20:	07ab      	lsls	r3, r5, #30
 8005f22:	d514      	bpl.n	8005f4e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005f24:	6823      	ldr	r3, [r4, #0]
 8005f26:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f28:	f022 0202 	bic.w	r2, r2, #2
 8005f2c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005f2e:	2202      	movs	r2, #2
 8005f30:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005f32:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005f36:	4313      	orrs	r3, r2
 8005f38:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005f3c:	2304      	movs	r3, #4
 8005f3e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005f42:	2300      	movs	r3, #0
 8005f44:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005f48:	4620      	mov	r0, r4
 8005f4a:	f7ff ffc9 	bl	8005ee0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005f4e:	07f0      	lsls	r0, r6, #31
 8005f50:	d510      	bpl.n	8005f74 <HAL_LTDC_IRQHandler+0x90>
 8005f52:	07e9      	lsls	r1, r5, #31
 8005f54:	d50e      	bpl.n	8005f74 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005f56:	6823      	ldr	r3, [r4, #0]
 8005f58:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f5a:	f022 0201 	bic.w	r2, r2, #1
 8005f5e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005f60:	2201      	movs	r2, #1
 8005f62:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005f64:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005f66:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005f6a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005f6e:	4620      	mov	r0, r4
 8005f70:	f7fb fd16 	bl	80019a0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005f74:	0732      	lsls	r2, r6, #28
 8005f76:	d511      	bpl.n	8005f9c <HAL_LTDC_IRQHandler+0xb8>
 8005f78:	072b      	lsls	r3, r5, #28
 8005f7a:	d50f      	bpl.n	8005f9c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005f7c:	6823      	ldr	r3, [r4, #0]
 8005f7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f80:	f022 0208 	bic.w	r2, r2, #8
 8005f84:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005f86:	2208      	movs	r2, #8
 8005f88:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005f8a:	2301      	movs	r3, #1
 8005f8c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005f90:	2300      	movs	r3, #0
 8005f92:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005f96:	4620      	mov	r0, r4
 8005f98:	f7ff ffa3 	bl	8005ee2 <HAL_LTDC_ReloadEventCallback>
}
 8005f9c:	bd70      	pop	{r4, r5, r6, pc}

08005f9e <HAL_LTDC_ConfigLayer>:
{
 8005f9e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 8005fa0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005fa4:	2b01      	cmp	r3, #1
{
 8005fa6:	4606      	mov	r6, r0
 8005fa8:	468c      	mov	ip, r1
 8005faa:	4696      	mov	lr, r2
 8005fac:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005fb0:	d01d      	beq.n	8005fee <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005fb2:	2434      	movs	r4, #52	; 0x34
 8005fb4:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005fb6:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005fba:	fb04 6402 	mla	r4, r4, r2, r6
 8005fbe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 8005fc0:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005fc2:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 8005fc4:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005fc8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005fca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005fcc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005fce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005fd0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005fd2:	682b      	ldr	r3, [r5, #0]
 8005fd4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005fd6:	4630      	mov	r0, r6
 8005fd8:	4672      	mov	r2, lr
 8005fda:	4661      	mov	r1, ip
 8005fdc:	f7ff fe8e 	bl	8005cfc <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005fe0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005fe2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005fe4:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005fe6:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005fea:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005fee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005ff0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005ff0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005ff4:	2b01      	cmp	r3, #1
 8005ff6:	f04f 0302 	mov.w	r3, #2
 8005ffa:	d012      	beq.n	8006022 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ffc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006000:	6803      	ldr	r3, [r0, #0]
 8006002:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006004:	f022 0201 	bic.w	r2, r2, #1
 8006008:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800600a:	4a07      	ldr	r2, [pc, #28]	; (8006028 <HAL_LTDC_ProgramLineEvent+0x38>)
 800600c:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800600e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006010:	f042 0201 	orr.w	r2, r2, #1
 8006014:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006016:	2301      	movs	r3, #1
 8006018:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800601c:	2300      	movs	r3, #0
 800601e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8006022:	4618      	mov	r0, r3
}
 8006024:	4770      	bx	lr
 8006026:	bf00      	nop
 8006028:	40016800 	.word	0x40016800

0800602c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800602c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006030:	4604      	mov	r4, r0
 8006032:	b908      	cbnz	r0, 8006038 <HAL_RCC_OscConfig+0xc>
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
      {
        return HAL_ERROR;
 8006034:	2001      	movs	r0, #1
 8006036:	e03f      	b.n	80060b8 <HAL_RCC_OscConfig+0x8c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006038:	6803      	ldr	r3, [r0, #0]
 800603a:	07dd      	lsls	r5, r3, #31
 800603c:	d410      	bmi.n	8006060 <HAL_RCC_OscConfig+0x34>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800603e:	6823      	ldr	r3, [r4, #0]
 8006040:	0798      	lsls	r0, r3, #30
 8006042:	d45a      	bmi.n	80060fa <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006044:	6823      	ldr	r3, [r4, #0]
 8006046:	071a      	lsls	r2, r3, #28
 8006048:	f100 809c 	bmi.w	8006184 <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800604c:	6823      	ldr	r3, [r4, #0]
 800604e:	075b      	lsls	r3, r3, #29
 8006050:	f100 80ba 	bmi.w	80061c8 <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006054:	69a0      	ldr	r0, [r4, #24]
 8006056:	2800      	cmp	r0, #0
 8006058:	f040 811b 	bne.w	8006292 <HAL_RCC_OscConfig+0x266>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800605c:	2000      	movs	r0, #0
 800605e:	e02b      	b.n	80060b8 <HAL_RCC_OscConfig+0x8c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006060:	4ba7      	ldr	r3, [pc, #668]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 8006062:	689a      	ldr	r2, [r3, #8]
 8006064:	f002 020c 	and.w	r2, r2, #12
 8006068:	2a04      	cmp	r2, #4
 800606a:	d007      	beq.n	800607c <HAL_RCC_OscConfig+0x50>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800606c:	689a      	ldr	r2, [r3, #8]
 800606e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006072:	2a08      	cmp	r2, #8
 8006074:	d10a      	bne.n	800608c <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006076:	685b      	ldr	r3, [r3, #4]
 8006078:	0259      	lsls	r1, r3, #9
 800607a:	d507      	bpl.n	800608c <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800607c:	4ba0      	ldr	r3, [pc, #640]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	039a      	lsls	r2, r3, #14
 8006082:	d5dc      	bpl.n	800603e <HAL_RCC_OscConfig+0x12>
 8006084:	6863      	ldr	r3, [r4, #4]
 8006086:	2b00      	cmp	r3, #0
 8006088:	d1d9      	bne.n	800603e <HAL_RCC_OscConfig+0x12>
 800608a:	e7d3      	b.n	8006034 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800608c:	6863      	ldr	r3, [r4, #4]
 800608e:	4d9c      	ldr	r5, [pc, #624]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 8006090:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006094:	d113      	bne.n	80060be <HAL_RCC_OscConfig+0x92>
 8006096:	682b      	ldr	r3, [r5, #0]
 8006098:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800609c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800609e:	f7fe fd6d 	bl	8004b7c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060a2:	4d97      	ldr	r5, [pc, #604]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80060a4:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80060a6:	682b      	ldr	r3, [r5, #0]
 80060a8:	039b      	lsls	r3, r3, #14
 80060aa:	d4c8      	bmi.n	800603e <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80060ac:	f7fe fd66 	bl	8004b7c <HAL_GetTick>
 80060b0:	1b80      	subs	r0, r0, r6
 80060b2:	2864      	cmp	r0, #100	; 0x64
 80060b4:	d9f7      	bls.n	80060a6 <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 80060b6:	2003      	movs	r0, #3
}
 80060b8:	b002      	add	sp, #8
 80060ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80060be:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80060c2:	d104      	bne.n	80060ce <HAL_RCC_OscConfig+0xa2>
 80060c4:	682b      	ldr	r3, [r5, #0]
 80060c6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80060ca:	602b      	str	r3, [r5, #0]
 80060cc:	e7e3      	b.n	8006096 <HAL_RCC_OscConfig+0x6a>
 80060ce:	682a      	ldr	r2, [r5, #0]
 80060d0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80060d4:	602a      	str	r2, [r5, #0]
 80060d6:	682a      	ldr	r2, [r5, #0]
 80060d8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80060dc:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80060de:	2b00      	cmp	r3, #0
 80060e0:	d1dd      	bne.n	800609e <HAL_RCC_OscConfig+0x72>
        tickstart = HAL_GetTick();
 80060e2:	f7fe fd4b 	bl	8004b7c <HAL_GetTick>
 80060e6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80060e8:	682b      	ldr	r3, [r5, #0]
 80060ea:	039f      	lsls	r7, r3, #14
 80060ec:	d5a7      	bpl.n	800603e <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80060ee:	f7fe fd45 	bl	8004b7c <HAL_GetTick>
 80060f2:	1b80      	subs	r0, r0, r6
 80060f4:	2864      	cmp	r0, #100	; 0x64
 80060f6:	d9f7      	bls.n	80060e8 <HAL_RCC_OscConfig+0xbc>
 80060f8:	e7dd      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80060fa:	4b81      	ldr	r3, [pc, #516]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 80060fc:	689a      	ldr	r2, [r3, #8]
 80060fe:	f012 0f0c 	tst.w	r2, #12
 8006102:	d007      	beq.n	8006114 <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006104:	689a      	ldr	r2, [r3, #8]
 8006106:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800610a:	2a08      	cmp	r2, #8
 800610c:	d111      	bne.n	8006132 <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800610e:	685b      	ldr	r3, [r3, #4]
 8006110:	025e      	lsls	r6, r3, #9
 8006112:	d40e      	bmi.n	8006132 <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006114:	4b7a      	ldr	r3, [pc, #488]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 8006116:	681a      	ldr	r2, [r3, #0]
 8006118:	0795      	lsls	r5, r2, #30
 800611a:	d502      	bpl.n	8006122 <HAL_RCC_OscConfig+0xf6>
 800611c:	68e2      	ldr	r2, [r4, #12]
 800611e:	2a01      	cmp	r2, #1
 8006120:	d188      	bne.n	8006034 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006122:	681a      	ldr	r2, [r3, #0]
 8006124:	6921      	ldr	r1, [r4, #16]
 8006126:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800612a:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800612e:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006130:	e788      	b.n	8006044 <HAL_RCC_OscConfig+0x18>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006132:	68e2      	ldr	r2, [r4, #12]
 8006134:	4b73      	ldr	r3, [pc, #460]	; (8006304 <HAL_RCC_OscConfig+0x2d8>)
 8006136:	b1b2      	cbz	r2, 8006166 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 8006138:	2201      	movs	r2, #1
 800613a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800613c:	f7fe fd1e 	bl	8004b7c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006140:	4d6f      	ldr	r5, [pc, #444]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8006142:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006144:	682b      	ldr	r3, [r5, #0]
 8006146:	0798      	lsls	r0, r3, #30
 8006148:	d507      	bpl.n	800615a <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800614a:	682b      	ldr	r3, [r5, #0]
 800614c:	6922      	ldr	r2, [r4, #16]
 800614e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006152:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006156:	602b      	str	r3, [r5, #0]
 8006158:	e774      	b.n	8006044 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800615a:	f7fe fd0f 	bl	8004b7c <HAL_GetTick>
 800615e:	1b80      	subs	r0, r0, r6
 8006160:	2802      	cmp	r0, #2
 8006162:	d9ef      	bls.n	8006144 <HAL_RCC_OscConfig+0x118>
 8006164:	e7a7      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 8006166:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006168:	f7fe fd08 	bl	8004b7c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800616c:	4d64      	ldr	r5, [pc, #400]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 800616e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006170:	682b      	ldr	r3, [r5, #0]
 8006172:	0799      	lsls	r1, r3, #30
 8006174:	f57f af66 	bpl.w	8006044 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006178:	f7fe fd00 	bl	8004b7c <HAL_GetTick>
 800617c:	1b80      	subs	r0, r0, r6
 800617e:	2802      	cmp	r0, #2
 8006180:	d9f6      	bls.n	8006170 <HAL_RCC_OscConfig+0x144>
 8006182:	e798      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006184:	6962      	ldr	r2, [r4, #20]
 8006186:	4b60      	ldr	r3, [pc, #384]	; (8006308 <HAL_RCC_OscConfig+0x2dc>)
 8006188:	b17a      	cbz	r2, 80061aa <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800618a:	2201      	movs	r2, #1
 800618c:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800618e:	f7fe fcf5 	bl	8004b7c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006192:	4d5b      	ldr	r5, [pc, #364]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8006194:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006196:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006198:	079f      	lsls	r7, r3, #30
 800619a:	f53f af57 	bmi.w	800604c <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800619e:	f7fe fced 	bl	8004b7c <HAL_GetTick>
 80061a2:	1b80      	subs	r0, r0, r6
 80061a4:	2802      	cmp	r0, #2
 80061a6:	d9f6      	bls.n	8006196 <HAL_RCC_OscConfig+0x16a>
 80061a8:	e785      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 80061aa:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80061ac:	f7fe fce6 	bl	8004b7c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80061b0:	4d53      	ldr	r5, [pc, #332]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 80061b2:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80061b4:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80061b6:	0798      	lsls	r0, r3, #30
 80061b8:	f57f af48 	bpl.w	800604c <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80061bc:	f7fe fcde 	bl	8004b7c <HAL_GetTick>
 80061c0:	1b80      	subs	r0, r0, r6
 80061c2:	2802      	cmp	r0, #2
 80061c4:	d9f6      	bls.n	80061b4 <HAL_RCC_OscConfig+0x188>
 80061c6:	e776      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80061c8:	4b4d      	ldr	r3, [pc, #308]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 80061ca:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80061cc:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80061d0:	d128      	bne.n	8006224 <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 80061d2:	9201      	str	r2, [sp, #4]
 80061d4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80061d6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80061da:	641a      	str	r2, [r3, #64]	; 0x40
 80061dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061de:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80061e2:	9301      	str	r3, [sp, #4]
 80061e4:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80061e6:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80061e8:	4d48      	ldr	r5, [pc, #288]	; (800630c <HAL_RCC_OscConfig+0x2e0>)
 80061ea:	682b      	ldr	r3, [r5, #0]
 80061ec:	05d9      	lsls	r1, r3, #23
 80061ee:	d51b      	bpl.n	8006228 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80061f0:	68a3      	ldr	r3, [r4, #8]
 80061f2:	4d43      	ldr	r5, [pc, #268]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 80061f4:	2b01      	cmp	r3, #1
 80061f6:	d127      	bne.n	8006248 <HAL_RCC_OscConfig+0x21c>
 80061f8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80061fa:	f043 0301 	orr.w	r3, r3, #1
 80061fe:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006200:	f7fe fcbc 	bl	8004b7c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006204:	4d3e      	ldr	r5, [pc, #248]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8006206:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006208:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800620c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800620e:	079b      	lsls	r3, r3, #30
 8006210:	d539      	bpl.n	8006286 <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 8006212:	2e00      	cmp	r6, #0
 8006214:	f43f af1e 	beq.w	8006054 <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006218:	4a39      	ldr	r2, [pc, #228]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 800621a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800621c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006220:	6413      	str	r3, [r2, #64]	; 0x40
 8006222:	e717      	b.n	8006054 <HAL_RCC_OscConfig+0x28>
    FlagStatus       pwrclkchanged = RESET;
 8006224:	2600      	movs	r6, #0
 8006226:	e7df      	b.n	80061e8 <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006228:	682b      	ldr	r3, [r5, #0]
 800622a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800622e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006230:	f7fe fca4 	bl	8004b7c <HAL_GetTick>
 8006234:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006236:	682b      	ldr	r3, [r5, #0]
 8006238:	05da      	lsls	r2, r3, #23
 800623a:	d4d9      	bmi.n	80061f0 <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800623c:	f7fe fc9e 	bl	8004b7c <HAL_GetTick>
 8006240:	1bc0      	subs	r0, r0, r7
 8006242:	2802      	cmp	r0, #2
 8006244:	d9f7      	bls.n	8006236 <HAL_RCC_OscConfig+0x20a>
 8006246:	e736      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006248:	2b05      	cmp	r3, #5
 800624a:	d104      	bne.n	8006256 <HAL_RCC_OscConfig+0x22a>
 800624c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800624e:	f043 0304 	orr.w	r3, r3, #4
 8006252:	672b      	str	r3, [r5, #112]	; 0x70
 8006254:	e7d0      	b.n	80061f8 <HAL_RCC_OscConfig+0x1cc>
 8006256:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006258:	f022 0201 	bic.w	r2, r2, #1
 800625c:	672a      	str	r2, [r5, #112]	; 0x70
 800625e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006260:	f022 0204 	bic.w	r2, r2, #4
 8006264:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006266:	2b00      	cmp	r3, #0
 8006268:	d1ca      	bne.n	8006200 <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 800626a:	f7fe fc87 	bl	8004b7c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800626e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006272:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006274:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006276:	0798      	lsls	r0, r3, #30
 8006278:	d5cb      	bpl.n	8006212 <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800627a:	f7fe fc7f 	bl	8004b7c <HAL_GetTick>
 800627e:	1bc0      	subs	r0, r0, r7
 8006280:	4540      	cmp	r0, r8
 8006282:	d9f7      	bls.n	8006274 <HAL_RCC_OscConfig+0x248>
 8006284:	e717      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006286:	f7fe fc79 	bl	8004b7c <HAL_GetTick>
 800628a:	1bc0      	subs	r0, r0, r7
 800628c:	4540      	cmp	r0, r8
 800628e:	d9bd      	bls.n	800620c <HAL_RCC_OscConfig+0x1e0>
 8006290:	e711      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006292:	4d1b      	ldr	r5, [pc, #108]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
 8006294:	68ab      	ldr	r3, [r5, #8]
 8006296:	f003 030c 	and.w	r3, r3, #12
 800629a:	2b08      	cmp	r3, #8
 800629c:	d047      	beq.n	800632e <HAL_RCC_OscConfig+0x302>
 800629e:	4e1c      	ldr	r6, [pc, #112]	; (8006310 <HAL_RCC_OscConfig+0x2e4>)
 80062a0:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80062a2:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80062a4:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80062a6:	d135      	bne.n	8006314 <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 80062a8:	f7fe fc68 	bl	8004b7c <HAL_GetTick>
 80062ac:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80062ae:	682b      	ldr	r3, [r5, #0]
 80062b0:	0199      	lsls	r1, r3, #6
 80062b2:	d41e      	bmi.n	80062f2 <HAL_RCC_OscConfig+0x2c6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80062b4:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80062b8:	4313      	orrs	r3, r2
 80062ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80062bc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80062c0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80062c2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80062c6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80062c8:	4c0d      	ldr	r4, [pc, #52]	; (8006300 <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80062ca:	0852      	lsrs	r2, r2, #1
 80062cc:	3a01      	subs	r2, #1
 80062ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80062d2:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80062d4:	2301      	movs	r3, #1
 80062d6:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 80062d8:	f7fe fc50 	bl	8004b7c <HAL_GetTick>
 80062dc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80062de:	6823      	ldr	r3, [r4, #0]
 80062e0:	019a      	lsls	r2, r3, #6
 80062e2:	f53f aebb 	bmi.w	800605c <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80062e6:	f7fe fc49 	bl	8004b7c <HAL_GetTick>
 80062ea:	1b40      	subs	r0, r0, r5
 80062ec:	2802      	cmp	r0, #2
 80062ee:	d9f6      	bls.n	80062de <HAL_RCC_OscConfig+0x2b2>
 80062f0:	e6e1      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80062f2:	f7fe fc43 	bl	8004b7c <HAL_GetTick>
 80062f6:	1bc0      	subs	r0, r0, r7
 80062f8:	2802      	cmp	r0, #2
 80062fa:	d9d8      	bls.n	80062ae <HAL_RCC_OscConfig+0x282>
 80062fc:	e6db      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
 80062fe:	bf00      	nop
 8006300:	40023800 	.word	0x40023800
 8006304:	42470000 	.word	0x42470000
 8006308:	42470e80 	.word	0x42470e80
 800630c:	40007000 	.word	0x40007000
 8006310:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 8006314:	f7fe fc32 	bl	8004b7c <HAL_GetTick>
 8006318:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800631a:	682b      	ldr	r3, [r5, #0]
 800631c:	019b      	lsls	r3, r3, #6
 800631e:	f57f ae9d 	bpl.w	800605c <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006322:	f7fe fc2b 	bl	8004b7c <HAL_GetTick>
 8006326:	1b00      	subs	r0, r0, r4
 8006328:	2802      	cmp	r0, #2
 800632a:	d9f6      	bls.n	800631a <HAL_RCC_OscConfig+0x2ee>
 800632c:	e6c3      	b.n	80060b6 <HAL_RCC_OscConfig+0x8a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800632e:	2801      	cmp	r0, #1
 8006330:	f43f aec2 	beq.w	80060b8 <HAL_RCC_OscConfig+0x8c>
        pll_config = RCC->PLLCFGR;
 8006334:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006336:	69e3      	ldr	r3, [r4, #28]
 8006338:	f400 0280 	and.w	r2, r0, #4194304	; 0x400000
 800633c:	429a      	cmp	r2, r3
 800633e:	f47f ae79 	bne.w	8006034 <HAL_RCC_OscConfig+0x8>
 8006342:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006344:	f000 033f 	and.w	r3, r0, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006348:	4293      	cmp	r3, r2
 800634a:	f47f ae73 	bne.w	8006034 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800634e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006350:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8006354:	4003      	ands	r3, r0
 8006356:	4293      	cmp	r3, r2
 8006358:	f47f ae6c 	bne.w	8006034 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800635c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800635e:	f400 3340 	and.w	r3, r0, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8006362:	4293      	cmp	r3, r2
 8006364:	f47f ae66 	bne.w	8006034 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006368:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800636a:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
    return HAL_ERROR;
 800636e:	1ac0      	subs	r0, r0, r3
 8006370:	bf18      	it	ne
 8006372:	2001      	movne	r0, #1
 8006374:	e6a0      	b.n	80060b8 <HAL_RCC_OscConfig+0x8c>
 8006376:	bf00      	nop

08006378 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006378:	4913      	ldr	r1, [pc, #76]	; (80063c8 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800637a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800637c:	688b      	ldr	r3, [r1, #8]
 800637e:	f003 030c 	and.w	r3, r3, #12
 8006382:	2b04      	cmp	r3, #4
 8006384:	d003      	beq.n	800638e <HAL_RCC_GetSysClockFreq+0x16>
 8006386:	2b08      	cmp	r3, #8
 8006388:	d003      	beq.n	8006392 <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800638a:	4810      	ldr	r0, [pc, #64]	; (80063cc <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 800638c:	e000      	b.n	8006390 <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 800638e:	4810      	ldr	r0, [pc, #64]	; (80063d0 <HAL_RCC_GetSysClockFreq+0x58>)
}
 8006390:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006392:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006394:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006396:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006398:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800639c:	bf14      	ite	ne
 800639e:	480c      	ldrne	r0, [pc, #48]	; (80063d0 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063a0:	480a      	ldreq	r0, [pc, #40]	; (80063cc <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063a2:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80063a6:	bf18      	it	ne
 80063a8:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80063aa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063ae:	fba1 0100 	umull	r0, r1, r1, r0
 80063b2:	f7fa fb63 	bl	8000a7c <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80063b6:	4b04      	ldr	r3, [pc, #16]	; (80063c8 <HAL_RCC_GetSysClockFreq+0x50>)
 80063b8:	685b      	ldr	r3, [r3, #4]
 80063ba:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80063be:	3301      	adds	r3, #1
 80063c0:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 80063c2:	fbb0 f0f3 	udiv	r0, r0, r3
 80063c6:	e7e3      	b.n	8006390 <HAL_RCC_GetSysClockFreq+0x18>
 80063c8:	40023800 	.word	0x40023800
 80063cc:	00f42400 	.word	0x00f42400
 80063d0:	007a1200 	.word	0x007a1200

080063d4 <HAL_RCC_ClockConfig>:
{
 80063d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80063d8:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80063da:	4604      	mov	r4, r0
 80063dc:	b910      	cbnz	r0, 80063e4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80063de:	2001      	movs	r0, #1
}
 80063e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80063e4:	4b43      	ldr	r3, [pc, #268]	; (80064f4 <HAL_RCC_ClockConfig+0x120>)
 80063e6:	681a      	ldr	r2, [r3, #0]
 80063e8:	f002 020f 	and.w	r2, r2, #15
 80063ec:	428a      	cmp	r2, r1
 80063ee:	d328      	bcc.n	8006442 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80063f0:	6821      	ldr	r1, [r4, #0]
 80063f2:	078f      	lsls	r7, r1, #30
 80063f4:	d42d      	bmi.n	8006452 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80063f6:	07c8      	lsls	r0, r1, #31
 80063f8:	d440      	bmi.n	800647c <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80063fa:	4b3e      	ldr	r3, [pc, #248]	; (80064f4 <HAL_RCC_ClockConfig+0x120>)
 80063fc:	681a      	ldr	r2, [r3, #0]
 80063fe:	f002 020f 	and.w	r2, r2, #15
 8006402:	42aa      	cmp	r2, r5
 8006404:	d865      	bhi.n	80064d2 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006406:	6822      	ldr	r2, [r4, #0]
 8006408:	0751      	lsls	r1, r2, #29
 800640a:	d46b      	bmi.n	80064e4 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800640c:	0713      	lsls	r3, r2, #28
 800640e:	d507      	bpl.n	8006420 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006410:	4a39      	ldr	r2, [pc, #228]	; (80064f8 <HAL_RCC_ClockConfig+0x124>)
 8006412:	6921      	ldr	r1, [r4, #16]
 8006414:	6893      	ldr	r3, [r2, #8]
 8006416:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800641a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800641e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006420:	f7ff ffaa 	bl	8006378 <HAL_RCC_GetSysClockFreq>
 8006424:	4b34      	ldr	r3, [pc, #208]	; (80064f8 <HAL_RCC_ClockConfig+0x124>)
 8006426:	4a35      	ldr	r2, [pc, #212]	; (80064fc <HAL_RCC_ClockConfig+0x128>)
 8006428:	689b      	ldr	r3, [r3, #8]
 800642a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800642e:	5cd3      	ldrb	r3, [r2, r3]
 8006430:	40d8      	lsrs	r0, r3
 8006432:	4b33      	ldr	r3, [pc, #204]	; (8006500 <HAL_RCC_ClockConfig+0x12c>)
 8006434:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006436:	4b33      	ldr	r3, [pc, #204]	; (8006504 <HAL_RCC_ClockConfig+0x130>)
 8006438:	6818      	ldr	r0, [r3, #0]
 800643a:	f7fc fa1f 	bl	800287c <HAL_InitTick>
  return HAL_OK;
 800643e:	2000      	movs	r0, #0
 8006440:	e7ce      	b.n	80063e0 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006442:	b2ca      	uxtb	r2, r1
 8006444:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	f003 030f 	and.w	r3, r3, #15
 800644c:	428b      	cmp	r3, r1
 800644e:	d1c6      	bne.n	80063de <HAL_RCC_ClockConfig+0xa>
 8006450:	e7ce      	b.n	80063f0 <HAL_RCC_ClockConfig+0x1c>
 8006452:	4b29      	ldr	r3, [pc, #164]	; (80064f8 <HAL_RCC_ClockConfig+0x124>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006454:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006458:	bf1e      	ittt	ne
 800645a:	689a      	ldrne	r2, [r3, #8]
 800645c:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 8006460:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006462:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006464:	bf42      	ittt	mi
 8006466:	689a      	ldrmi	r2, [r3, #8]
 8006468:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 800646c:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800646e:	689a      	ldr	r2, [r3, #8]
 8006470:	68a0      	ldr	r0, [r4, #8]
 8006472:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8006476:	4302      	orrs	r2, r0
 8006478:	609a      	str	r2, [r3, #8]
 800647a:	e7bc      	b.n	80063f6 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800647c:	6862      	ldr	r2, [r4, #4]
 800647e:	4b1e      	ldr	r3, [pc, #120]	; (80064f8 <HAL_RCC_ClockConfig+0x124>)
 8006480:	2a01      	cmp	r2, #1
 8006482:	d11c      	bne.n	80064be <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006484:	681b      	ldr	r3, [r3, #0]
 8006486:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800648a:	d0a8      	beq.n	80063de <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800648c:	4e1a      	ldr	r6, [pc, #104]	; (80064f8 <HAL_RCC_ClockConfig+0x124>)
 800648e:	68b3      	ldr	r3, [r6, #8]
 8006490:	f023 0303 	bic.w	r3, r3, #3
 8006494:	4313      	orrs	r3, r2
 8006496:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006498:	f7fe fb70 	bl	8004b7c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800649c:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80064a0:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80064a2:	68b3      	ldr	r3, [r6, #8]
 80064a4:	6862      	ldr	r2, [r4, #4]
 80064a6:	f003 030c 	and.w	r3, r3, #12
 80064aa:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80064ae:	d0a4      	beq.n	80063fa <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80064b0:	f7fe fb64 	bl	8004b7c <HAL_GetTick>
 80064b4:	1bc0      	subs	r0, r0, r7
 80064b6:	4540      	cmp	r0, r8
 80064b8:	d9f3      	bls.n	80064a2 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 80064ba:	2003      	movs	r0, #3
 80064bc:	e790      	b.n	80063e0 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80064be:	1e91      	subs	r1, r2, #2
 80064c0:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80064c2:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80064c4:	d802      	bhi.n	80064cc <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80064c6:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80064ca:	e7de      	b.n	800648a <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80064cc:	f013 0f02 	tst.w	r3, #2
 80064d0:	e7db      	b.n	800648a <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80064d2:	b2ea      	uxtb	r2, r5
 80064d4:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80064d6:	681b      	ldr	r3, [r3, #0]
 80064d8:	f003 030f 	and.w	r3, r3, #15
 80064dc:	42ab      	cmp	r3, r5
 80064de:	f47f af7e 	bne.w	80063de <HAL_RCC_ClockConfig+0xa>
 80064e2:	e790      	b.n	8006406 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80064e4:	4904      	ldr	r1, [pc, #16]	; (80064f8 <HAL_RCC_ClockConfig+0x124>)
 80064e6:	68e0      	ldr	r0, [r4, #12]
 80064e8:	688b      	ldr	r3, [r1, #8]
 80064ea:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80064ee:	4303      	orrs	r3, r0
 80064f0:	608b      	str	r3, [r1, #8]
 80064f2:	e78b      	b.n	800640c <HAL_RCC_ClockConfig+0x38>
 80064f4:	40023c00 	.word	0x40023c00
 80064f8:	40023800 	.word	0x40023800
 80064fc:	0801ca50 	.word	0x0801ca50
 8006500:	20000084 	.word	0x20000084
 8006504:	2000008c 	.word	0x2000008c

08006508 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006508:	4b04      	ldr	r3, [pc, #16]	; (800651c <HAL_RCC_GetPCLK1Freq+0x14>)
 800650a:	4a05      	ldr	r2, [pc, #20]	; (8006520 <HAL_RCC_GetPCLK1Freq+0x18>)
 800650c:	689b      	ldr	r3, [r3, #8]
 800650e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006512:	5cd3      	ldrb	r3, [r2, r3]
 8006514:	4a03      	ldr	r2, [pc, #12]	; (8006524 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006516:	6810      	ldr	r0, [r2, #0]
}
 8006518:	40d8      	lsrs	r0, r3
 800651a:	4770      	bx	lr
 800651c:	40023800 	.word	0x40023800
 8006520:	0801ca60 	.word	0x0801ca60
 8006524:	20000084 	.word	0x20000084

08006528 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006528:	230f      	movs	r3, #15
 800652a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800652c:	4b0b      	ldr	r3, [pc, #44]	; (800655c <HAL_RCC_GetClockConfig+0x34>)
 800652e:	689a      	ldr	r2, [r3, #8]
 8006530:	f002 0203 	and.w	r2, r2, #3
 8006534:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006536:	689a      	ldr	r2, [r3, #8]
 8006538:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800653c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800653e:	689a      	ldr	r2, [r3, #8]
 8006540:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006544:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006546:	689b      	ldr	r3, [r3, #8]
 8006548:	08db      	lsrs	r3, r3, #3
 800654a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800654e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006550:	4b03      	ldr	r3, [pc, #12]	; (8006560 <HAL_RCC_GetClockConfig+0x38>)
 8006552:	681b      	ldr	r3, [r3, #0]
 8006554:	f003 030f 	and.w	r3, r3, #15
 8006558:	600b      	str	r3, [r1, #0]
}
 800655a:	4770      	bx	lr
 800655c:	40023800 	.word	0x40023800
 8006560:	40023c00 	.word	0x40023c00

08006564 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006564:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006566:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800656a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800656c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800656e:	f040 808a 	bne.w	8006686 <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006572:	6823      	ldr	r3, [r4, #0]
 8006574:	f013 0f0c 	tst.w	r3, #12
 8006578:	d044      	beq.n	8006604 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800657a:	4d89      	ldr	r5, [pc, #548]	; (80067a0 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800657c:	4e89      	ldr	r6, [pc, #548]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 800657e:	2300      	movs	r3, #0
 8006580:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006582:	f7fe fafb 	bl	8004b7c <HAL_GetTick>
 8006586:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006588:	6833      	ldr	r3, [r6, #0]
 800658a:	009b      	lsls	r3, r3, #2
 800658c:	f100 80cc 	bmi.w	8006728 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006590:	6821      	ldr	r1, [r4, #0]
 8006592:	074f      	lsls	r7, r1, #29
 8006594:	d515      	bpl.n	80065c2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006596:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800659a:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800659e:	061b      	lsls	r3, r3, #24
 80065a0:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80065a4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80065a8:	4313      	orrs	r3, r2
 80065aa:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80065ae:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 80065b2:	6a22      	ldr	r2, [r4, #32]
 80065b4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80065b8:	3a01      	subs	r2, #1
 80065ba:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80065be:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80065c2:	070e      	lsls	r6, r1, #28
 80065c4:	d514      	bpl.n	80065f0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80065c6:	4a77      	ldr	r2, [pc, #476]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80065c8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80065ca:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80065ce:	6920      	ldr	r0, [r4, #16]
 80065d0:	071b      	lsls	r3, r3, #28
 80065d2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80065d6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80065da:	430b      	orrs	r3, r1
 80065dc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80065e0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80065e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80065e6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80065ea:	430b      	orrs	r3, r1
 80065ec:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80065f0:	2301      	movs	r3, #1
 80065f2:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80065f4:	f7fe fac2 	bl	8004b7c <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80065f8:	4d6a      	ldr	r5, [pc, #424]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80065fa:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80065fc:	682b      	ldr	r3, [r5, #0]
 80065fe:	0098      	lsls	r0, r3, #2
 8006600:	f140 8099 	bpl.w	8006736 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006604:	6823      	ldr	r3, [r4, #0]
 8006606:	069a      	lsls	r2, r3, #26
 8006608:	d533      	bpl.n	8006672 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800660a:	2300      	movs	r3, #0
 800660c:	9301      	str	r3, [sp, #4]
 800660e:	4b65      	ldr	r3, [pc, #404]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006610:	4d65      	ldr	r5, [pc, #404]	; (80067a8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006612:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006614:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006618:	641a      	str	r2, [r3, #64]	; 0x40
 800661a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800661c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006620:	9301      	str	r3, [sp, #4]
 8006622:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006624:	682b      	ldr	r3, [r5, #0]
 8006626:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800662a:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800662c:	f7fe faa6 	bl	8004b7c <HAL_GetTick>
 8006630:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006632:	682b      	ldr	r3, [r5, #0]
 8006634:	05d9      	lsls	r1, r3, #23
 8006636:	f140 8085 	bpl.w	8006744 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800663a:	4d5a      	ldr	r5, [pc, #360]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800663c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800663e:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006642:	f040 8086 	bne.w	8006752 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006646:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006648:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800664c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006650:	4a54      	ldr	r2, [pc, #336]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8006652:	f040 80a0 	bne.w	8006796 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8006656:	6891      	ldr	r1, [r2, #8]
 8006658:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800665c:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006660:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8006664:	4301      	orrs	r1, r0
 8006666:	6091      	str	r1, [r2, #8]
 8006668:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800666a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800666e:	430b      	orrs	r3, r1
 8006670:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006672:	6820      	ldr	r0, [r4, #0]
 8006674:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006678:	bf1f      	itttt	ne
 800667a:	4b4c      	ldrne	r3, [pc, #304]	; (80067ac <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800667c:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8006680:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 8006682:	2000      	movne	r0, #0
 8006684:	e04e      	b.n	8006724 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 8006686:	4d4a      	ldr	r5, [pc, #296]	; (80067b0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006688:	4e46      	ldr	r6, [pc, #280]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 800668a:	2300      	movs	r3, #0
 800668c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800668e:	f7fe fa75 	bl	8004b7c <HAL_GetTick>
 8006692:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006694:	6833      	ldr	r3, [r6, #0]
 8006696:	011b      	lsls	r3, r3, #4
 8006698:	d43e      	bmi.n	8006718 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800669a:	6821      	ldr	r1, [r4, #0]
 800669c:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800669e:	bf41      	itttt	mi
 80066a0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80066a4:	071b      	lslmi	r3, r3, #28
 80066a6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80066aa:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80066ae:	078e      	lsls	r6, r1, #30
 80066b0:	d515      	bpl.n	80066de <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80066b2:	4a3c      	ldr	r2, [pc, #240]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80066b4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80066b6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80066ba:	6866      	ldr	r6, [r4, #4]
 80066bc:	061b      	lsls	r3, r3, #24
 80066be:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80066c2:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80066c6:	4303      	orrs	r3, r0
 80066c8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80066cc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80066d0:	69e3      	ldr	r3, [r4, #28]
 80066d2:	f020 001f 	bic.w	r0, r0, #31
 80066d6:	3b01      	subs	r3, #1
 80066d8:	4303      	orrs	r3, r0
 80066da:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80066de:	0648      	lsls	r0, r1, #25
 80066e0:	d50a      	bpl.n	80066f8 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80066e2:	68e3      	ldr	r3, [r4, #12]
 80066e4:	6862      	ldr	r2, [r4, #4]
 80066e6:	061b      	lsls	r3, r3, #24
 80066e8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80066ec:	68a2      	ldr	r2, [r4, #8]
 80066ee:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80066f2:	4a2c      	ldr	r2, [pc, #176]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80066f4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80066f8:	2301      	movs	r3, #1
 80066fa:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80066fc:	f7fe fa3e 	bl	8004b7c <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006700:	4d28      	ldr	r5, [pc, #160]	; (80067a4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 8006702:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006704:	682b      	ldr	r3, [r5, #0]
 8006706:	0119      	lsls	r1, r3, #4
 8006708:	f53f af33 	bmi.w	8006572 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800670c:	f7fe fa36 	bl	8004b7c <HAL_GetTick>
 8006710:	1b80      	subs	r0, r0, r6
 8006712:	2802      	cmp	r0, #2
 8006714:	d9f6      	bls.n	8006704 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8006716:	e004      	b.n	8006722 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006718:	f7fe fa30 	bl	8004b7c <HAL_GetTick>
 800671c:	1bc0      	subs	r0, r0, r7
 800671e:	2802      	cmp	r0, #2
 8006720:	d9b8      	bls.n	8006694 <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 8006722:	2003      	movs	r0, #3
}
 8006724:	b003      	add	sp, #12
 8006726:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006728:	f7fe fa28 	bl	8004b7c <HAL_GetTick>
 800672c:	1bc0      	subs	r0, r0, r7
 800672e:	2802      	cmp	r0, #2
 8006730:	f67f af2a 	bls.w	8006588 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8006734:	e7f5      	b.n	8006722 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006736:	f7fe fa21 	bl	8004b7c <HAL_GetTick>
 800673a:	1b80      	subs	r0, r0, r6
 800673c:	2802      	cmp	r0, #2
 800673e:	f67f af5d 	bls.w	80065fc <HAL_RCCEx_PeriphCLKConfig+0x98>
 8006742:	e7ee      	b.n	8006722 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006744:	f7fe fa1a 	bl	8004b7c <HAL_GetTick>
 8006748:	1b80      	subs	r0, r0, r6
 800674a:	2802      	cmp	r0, #2
 800674c:	f67f af71 	bls.w	8006632 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8006750:	e7e7      	b.n	8006722 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006752:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006754:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006758:	4293      	cmp	r3, r2
 800675a:	f43f af74 	beq.w	8006646 <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800675e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006760:	4a14      	ldr	r2, [pc, #80]	; (80067b4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8006762:	2101      	movs	r1, #1
 8006764:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006766:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800676a:	2100      	movs	r1, #0
 800676c:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800676e:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006770:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006772:	07da      	lsls	r2, r3, #31
 8006774:	f57f af67 	bpl.w	8006646 <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 8006778:	f7fe fa00 	bl	8004b7c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800677c:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006780:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006782:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006784:	079b      	lsls	r3, r3, #30
 8006786:	f53f af5e 	bmi.w	8006646 <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800678a:	f7fe f9f7 	bl	8004b7c <HAL_GetTick>
 800678e:	1b80      	subs	r0, r0, r6
 8006790:	42b8      	cmp	r0, r7
 8006792:	d9f6      	bls.n	8006782 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8006794:	e7c5      	b.n	8006722 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006796:	6891      	ldr	r1, [r2, #8]
 8006798:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800679c:	e763      	b.n	8006666 <HAL_RCCEx_PeriphCLKConfig+0x102>
 800679e:	bf00      	nop
 80067a0:	42470070 	.word	0x42470070
 80067a4:	40023800 	.word	0x40023800
 80067a8:	40007000 	.word	0x40007000
 80067ac:	424711e0 	.word	0x424711e0
 80067b0:	42470068 	.word	0x42470068
 80067b4:	42470e40 	.word	0x42470e40

080067b8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80067b8:	b538      	push	{r3, r4, r5, lr}
 80067ba:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80067bc:	4604      	mov	r4, r0
 80067be:	b1c8      	cbz	r0, 80067f4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80067c0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80067c4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80067c8:	b91b      	cbnz	r3, 80067d2 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80067ca:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80067ce:	f7fb fea7 	bl	8002520 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80067d2:	2302      	movs	r3, #2
 80067d4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80067d8:	1d21      	adds	r1, r4, #4
 80067da:	6820      	ldr	r0, [r4, #0]
 80067dc:	f000 ff6a 	bl	80076b4 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80067e0:	6862      	ldr	r2, [r4, #4]
 80067e2:	6820      	ldr	r0, [r4, #0]
 80067e4:	4629      	mov	r1, r5
 80067e6:	f000 ff9b 	bl	8007720 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80067ea:	2301      	movs	r3, #1
 80067ec:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80067f0:	2000      	movs	r0, #0
}
 80067f2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80067f4:	2001      	movs	r0, #1
 80067f6:	e7fc      	b.n	80067f2 <HAL_SDRAM_Init+0x3a>

080067f8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80067f8:	b538      	push	{r3, r4, r5, lr}
 80067fa:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80067fc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8006800:	b2c0      	uxtb	r0, r0
 8006802:	2802      	cmp	r0, #2
{
 8006804:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006806:	d00d      	beq.n	8006824 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006808:	2302      	movs	r3, #2
 800680a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800680e:	6820      	ldr	r0, [r4, #0]
 8006810:	f000 ffc3 	bl	800779a <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006814:	682b      	ldr	r3, [r5, #0]
 8006816:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006818:	bf0c      	ite	eq
 800681a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800681c:	2301      	movne	r3, #1
 800681e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006822:	2000      	movs	r0, #0
}
 8006824:	bd38      	pop	{r3, r4, r5, pc}

08006826 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006826:	b510      	push	{r4, lr}
 8006828:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800682a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800682e:	b2c0      	uxtb	r0, r0
 8006830:	2802      	cmp	r0, #2
 8006832:	d009      	beq.n	8006848 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006834:	2302      	movs	r3, #2
 8006836:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800683a:	6820      	ldr	r0, [r4, #0]
 800683c:	f000 ffd2 	bl	80077e4 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006840:	2301      	movs	r3, #1
 8006842:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8006846:	2000      	movs	r0, #0
}
 8006848:	bd10      	pop	{r4, pc}

0800684a <SPI_WaitFlagStateUntilTimeout.constprop.7>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800684a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800684c:	4604      	mov	r4, r0
 800684e:	460e      	mov	r6, r1
 8006850:	4615      	mov	r5, r2
 8006852:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006854:	6821      	ldr	r1, [r4, #0]
 8006856:	688a      	ldr	r2, [r1, #8]
 8006858:	ea36 0302 	bics.w	r3, r6, r2
 800685c:	d001      	beq.n	8006862 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800685e:	2000      	movs	r0, #0
 8006860:	e02d      	b.n	80068be <SPI_WaitFlagStateUntilTimeout.constprop.7+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8006862:	1c6b      	adds	r3, r5, #1
 8006864:	d0f7      	beq.n	8006856 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8006866:	f7fe f989 	bl	8004b7c <HAL_GetTick>
 800686a:	1bc0      	subs	r0, r0, r7
 800686c:	4285      	cmp	r5, r0
 800686e:	d8f1      	bhi.n	8006854 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006870:	6823      	ldr	r3, [r4, #0]
 8006872:	685a      	ldr	r2, [r3, #4]
 8006874:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006878:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800687a:	6862      	ldr	r2, [r4, #4]
 800687c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006880:	d10a      	bne.n	8006898 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
 8006882:	68a2      	ldr	r2, [r4, #8]
 8006884:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006888:	d002      	beq.n	8006890 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800688a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800688e:	d103      	bne.n	8006898 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8006890:	681a      	ldr	r2, [r3, #0]
 8006892:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006896:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006898:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800689a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800689e:	d107      	bne.n	80068b0 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x66>
          SPI_RESET_CRC(hspi);
 80068a0:	681a      	ldr	r2, [r3, #0]
 80068a2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80068a6:	601a      	str	r2, [r3, #0]
 80068a8:	681a      	ldr	r2, [r3, #0]
 80068aa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80068ae:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80068b0:	2301      	movs	r3, #1
 80068b2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 80068b6:	2300      	movs	r3, #0
 80068b8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80068bc:	2003      	movs	r0, #3
}
 80068be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080068c0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80068c0:	b538      	push	{r3, r4, r5, lr}
 80068c2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80068c4:	6842      	ldr	r2, [r0, #4]
 80068c6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80068ca:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80068cc:	d11f      	bne.n	800690e <SPI_EndRxTransaction+0x4e>
 80068ce:	6882      	ldr	r2, [r0, #8]
 80068d0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80068d4:	d002      	beq.n	80068dc <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80068d6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80068da:	d107      	bne.n	80068ec <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80068dc:	6825      	ldr	r5, [r4, #0]
 80068de:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80068e0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80068e4:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80068e8:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80068ea:	d007      	beq.n	80068fc <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80068ec:	460a      	mov	r2, r1
 80068ee:	2180      	movs	r1, #128	; 0x80
 80068f0:	4620      	mov	r0, r4
 80068f2:	f7ff ffaa 	bl	800684a <SPI_WaitFlagStateUntilTimeout.constprop.7>
 80068f6:	b920      	cbnz	r0, 8006902 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80068f8:	2000      	movs	r0, #0
}
 80068fa:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80068fc:	460a      	mov	r2, r1
 80068fe:	2101      	movs	r1, #1
 8006900:	e7f6      	b.n	80068f0 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006902:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006904:	f043 0320 	orr.w	r3, r3, #32
 8006908:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800690a:	2003      	movs	r0, #3
 800690c:	e7f5      	b.n	80068fa <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800690e:	460a      	mov	r2, r1
 8006910:	2101      	movs	r1, #1
 8006912:	e7ee      	b.n	80068f2 <SPI_EndRxTransaction+0x32>

08006914 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006914:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006916:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006918:	4a12      	ldr	r2, [pc, #72]	; (8006964 <SPI_EndRxTxTransaction+0x50>)
 800691a:	4e13      	ldr	r6, [pc, #76]	; (8006968 <SPI_EndRxTxTransaction+0x54>)
 800691c:	6815      	ldr	r5, [r2, #0]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800691e:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006920:	fbb5 f6f6 	udiv	r6, r5, r6
 8006924:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8006928:	4375      	muls	r5, r6
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800692a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800692e:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006930:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006932:	d10b      	bne.n	800694c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006934:	460a      	mov	r2, r1
 8006936:	2180      	movs	r1, #128	; 0x80
 8006938:	f7ff ff87 	bl	800684a <SPI_WaitFlagStateUntilTimeout.constprop.7>
 800693c:	b178      	cbz	r0, 800695e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800693e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006940:	f043 0320 	orr.w	r3, r3, #32
 8006944:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8006946:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006948:	b002      	add	sp, #8
 800694a:	bd70      	pop	{r4, r5, r6, pc}
      if (count == 0U)
 800694c:	9b01      	ldr	r3, [sp, #4]
 800694e:	b133      	cbz	r3, 800695e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8006950:	9b01      	ldr	r3, [sp, #4]
 8006952:	3b01      	subs	r3, #1
 8006954:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006956:	6823      	ldr	r3, [r4, #0]
 8006958:	689b      	ldr	r3, [r3, #8]
 800695a:	061b      	lsls	r3, r3, #24
 800695c:	d4f6      	bmi.n	800694c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800695e:	2000      	movs	r0, #0
 8006960:	e7f2      	b.n	8006948 <SPI_EndRxTxTransaction+0x34>
 8006962:	bf00      	nop
 8006964:	20000084 	.word	0x20000084
 8006968:	016e3600 	.word	0x016e3600

0800696c <HAL_SPI_Init>:
{
 800696c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800696e:	4604      	mov	r4, r0
 8006970:	2800      	cmp	r0, #0
 8006972:	d036      	beq.n	80069e2 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006974:	2300      	movs	r3, #0
 8006976:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006978:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 800697c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006980:	b91b      	cbnz	r3, 800698a <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8006982:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8006986:	f7fb fd95 	bl	80024b4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800698a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800698c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800698e:	2302      	movs	r3, #2
 8006990:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8006994:	680b      	ldr	r3, [r1, #0]
 8006996:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800699a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800699c:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 80069a0:	4303      	orrs	r3, r0
 80069a2:	68e0      	ldr	r0, [r4, #12]
 80069a4:	4303      	orrs	r3, r0
 80069a6:	6920      	ldr	r0, [r4, #16]
 80069a8:	4303      	orrs	r3, r0
 80069aa:	6960      	ldr	r0, [r4, #20]
 80069ac:	4303      	orrs	r3, r0
 80069ae:	69e0      	ldr	r0, [r4, #28]
 80069b0:	4303      	orrs	r3, r0
 80069b2:	6a20      	ldr	r0, [r4, #32]
 80069b4:	4303      	orrs	r3, r0
 80069b6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80069b8:	4303      	orrs	r3, r0
 80069ba:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80069be:	4303      	orrs	r3, r0
 80069c0:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80069c2:	0c12      	lsrs	r2, r2, #16
 80069c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80069c6:	f002 0204 	and.w	r2, r2, #4
 80069ca:	431a      	orrs	r2, r3
 80069cc:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80069ce:	69cb      	ldr	r3, [r1, #28]
 80069d0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80069d4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80069d6:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80069d8:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80069da:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80069dc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80069e0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80069e2:	2001      	movs	r0, #1
 80069e4:	e7fc      	b.n	80069e0 <HAL_SPI_Init+0x74>

080069e6 <HAL_SPI_Transmit>:
{
 80069e6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80069ea:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80069ec:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80069f0:	2b01      	cmp	r3, #1
{
 80069f2:	4604      	mov	r4, r0
 80069f4:	460d      	mov	r5, r1
 80069f6:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 80069f8:	f000 809b 	beq.w	8006b32 <HAL_SPI_Transmit+0x14c>
 80069fc:	2301      	movs	r3, #1
 80069fe:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006a02:	f7fe f8bb 	bl	8004b7c <HAL_GetTick>
 8006a06:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006a08:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8006a0c:	b2c0      	uxtb	r0, r0
 8006a0e:	2801      	cmp	r0, #1
 8006a10:	f040 808d 	bne.w	8006b2e <HAL_SPI_Transmit+0x148>
  if ((pData == NULL) || (Size == 0U))
 8006a14:	2d00      	cmp	r5, #0
 8006a16:	d05d      	beq.n	8006ad4 <HAL_SPI_Transmit+0xee>
 8006a18:	f1b8 0f00 	cmp.w	r8, #0
 8006a1c:	d05a      	beq.n	8006ad4 <HAL_SPI_Transmit+0xee>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006a1e:	2303      	movs	r3, #3
 8006a20:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a24:	2000      	movs	r0, #0
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a26:	68a3      	ldr	r3, [r4, #8]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006a28:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006a2a:	63a0      	str	r0, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 8006a2c:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8006a30:	87a0      	strh	r0, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8006a32:	87e0      	strh	r0, [r4, #62]	; 0x3e
  hspi->RxISR       = NULL;
 8006a34:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 8006a38:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8006a3a:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006a3c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8006a40:	bf08      	it	eq
 8006a42:	6803      	ldreq	r3, [r0, #0]
  hspi->TxXferSize  = Size;
 8006a44:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 8006a48:	bf04      	itt	eq
 8006a4a:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 8006a4e:	6003      	streq	r3, [r0, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a50:	6803      	ldr	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006a52:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006a54:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8006a56:	bf5e      	ittt	pl
 8006a58:	6803      	ldrpl	r3, [r0, #0]
 8006a5a:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 8006a5e:	6003      	strpl	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006a60:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8006a64:	6863      	ldr	r3, [r4, #4]
 8006a66:	d13e      	bne.n	8006ae6 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006a68:	b113      	cbz	r3, 8006a70 <HAL_SPI_Transmit+0x8a>
 8006a6a:	f1b8 0f01 	cmp.w	r8, #1
 8006a6e:	d107      	bne.n	8006a80 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006a70:	f835 3b02 	ldrh.w	r3, [r5], #2
 8006a74:	60c3      	str	r3, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006a76:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006a78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006a7a:	3b01      	subs	r3, #1
 8006a7c:	b29b      	uxth	r3, r3
 8006a7e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006a80:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006a82:	b29b      	uxth	r3, r3
 8006a84:	b9a3      	cbnz	r3, 8006ab0 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006a86:	463a      	mov	r2, r7
 8006a88:	4631      	mov	r1, r6
 8006a8a:	4620      	mov	r0, r4
 8006a8c:	f7ff ff42 	bl	8006914 <SPI_EndRxTxTransaction>
 8006a90:	2800      	cmp	r0, #0
 8006a92:	d149      	bne.n	8006b28 <HAL_SPI_Transmit+0x142>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006a94:	68a3      	ldr	r3, [r4, #8]
 8006a96:	b933      	cbnz	r3, 8006aa6 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006a98:	9301      	str	r3, [sp, #4]
 8006a9a:	6823      	ldr	r3, [r4, #0]
 8006a9c:	68da      	ldr	r2, [r3, #12]
 8006a9e:	9201      	str	r2, [sp, #4]
 8006aa0:	689b      	ldr	r3, [r3, #8]
 8006aa2:	9301      	str	r3, [sp, #4]
 8006aa4:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006aa6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006aa8:	3000      	adds	r0, #0
 8006aaa:	bf18      	it	ne
 8006aac:	2001      	movne	r0, #1
error:
 8006aae:	e011      	b.n	8006ad4 <HAL_SPI_Transmit+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006ab0:	6822      	ldr	r2, [r4, #0]
 8006ab2:	6893      	ldr	r3, [r2, #8]
 8006ab4:	0798      	lsls	r0, r3, #30
 8006ab6:	d505      	bpl.n	8006ac4 <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006ab8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006aba:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006abe:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006ac0:	6323      	str	r3, [r4, #48]	; 0x30
 8006ac2:	e7d9      	b.n	8006a78 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006ac4:	f7fe f85a 	bl	8004b7c <HAL_GetTick>
 8006ac8:	1bc0      	subs	r0, r0, r7
 8006aca:	42b0      	cmp	r0, r6
 8006acc:	d3d8      	bcc.n	8006a80 <HAL_SPI_Transmit+0x9a>
 8006ace:	1c71      	adds	r1, r6, #1
 8006ad0:	d0d6      	beq.n	8006a80 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 8006ad2:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006ad4:	2301      	movs	r3, #1
 8006ad6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006ada:	2300      	movs	r3, #0
 8006adc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006ae0:	b002      	add	sp, #8
 8006ae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006ae6:	b113      	cbz	r3, 8006aee <HAL_SPI_Transmit+0x108>
 8006ae8:	f1b8 0f01 	cmp.w	r8, #1
 8006aec:	d108      	bne.n	8006b00 <HAL_SPI_Transmit+0x11a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006aee:	782b      	ldrb	r3, [r5, #0]
 8006af0:	7303      	strb	r3, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006af2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006af4:	3301      	adds	r3, #1
 8006af6:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006af8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006afa:	3b01      	subs	r3, #1
 8006afc:	b29b      	uxth	r3, r3
 8006afe:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006b00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006b02:	b29b      	uxth	r3, r3
 8006b04:	2b00      	cmp	r3, #0
 8006b06:	d0be      	beq.n	8006a86 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006b08:	6823      	ldr	r3, [r4, #0]
 8006b0a:	689a      	ldr	r2, [r3, #8]
 8006b0c:	0792      	lsls	r2, r2, #30
 8006b0e:	d503      	bpl.n	8006b18 <HAL_SPI_Transmit+0x132>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006b10:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006b12:	7812      	ldrb	r2, [r2, #0]
 8006b14:	731a      	strb	r2, [r3, #12]
 8006b16:	e7ec      	b.n	8006af2 <HAL_SPI_Transmit+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006b18:	f7fe f830 	bl	8004b7c <HAL_GetTick>
 8006b1c:	1bc0      	subs	r0, r0, r7
 8006b1e:	42b0      	cmp	r0, r6
 8006b20:	d3ee      	bcc.n	8006b00 <HAL_SPI_Transmit+0x11a>
 8006b22:	1c73      	adds	r3, r6, #1
 8006b24:	d0ec      	beq.n	8006b00 <HAL_SPI_Transmit+0x11a>
 8006b26:	e7d4      	b.n	8006ad2 <HAL_SPI_Transmit+0xec>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006b28:	2320      	movs	r3, #32
 8006b2a:	6563      	str	r3, [r4, #84]	; 0x54
 8006b2c:	e7b2      	b.n	8006a94 <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8006b2e:	2002      	movs	r0, #2
 8006b30:	e7d0      	b.n	8006ad4 <HAL_SPI_Transmit+0xee>
  __HAL_LOCK(hspi);
 8006b32:	2002      	movs	r0, #2
 8006b34:	e7d4      	b.n	8006ae0 <HAL_SPI_Transmit+0xfa>

08006b36 <HAL_SPI_TransmitReceive>:
{
 8006b36:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b3a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006b3c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8006b40:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8006b42:	2b01      	cmp	r3, #1
{
 8006b44:	4604      	mov	r4, r0
 8006b46:	460d      	mov	r5, r1
 8006b48:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8006b4a:	f000 80e2 	beq.w	8006d12 <HAL_SPI_TransmitReceive+0x1dc>
 8006b4e:	2301      	movs	r3, #1
 8006b50:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006b54:	f7fe f812 	bl	8004b7c <HAL_GetTick>
  tmp_state           = hspi->State;
 8006b58:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8006b5c:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 8006b5e:	b2db      	uxtb	r3, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006b60:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006b62:	4680      	mov	r8, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006b64:	d00a      	beq.n	8006b7c <HAL_SPI_TransmitReceive+0x46>
 8006b66:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8006b6a:	f040 80d0 	bne.w	8006d0e <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006b6e:	68a0      	ldr	r0, [r4, #8]
 8006b70:	2800      	cmp	r0, #0
 8006b72:	f040 80cc 	bne.w	8006d0e <HAL_SPI_TransmitReceive+0x1d8>
 8006b76:	2b04      	cmp	r3, #4
 8006b78:	f040 80c9 	bne.w	8006d0e <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006b7c:	2d00      	cmp	r5, #0
 8006b7e:	f000 80c4 	beq.w	8006d0a <HAL_SPI_TransmitReceive+0x1d4>
 8006b82:	f1b9 0f00 	cmp.w	r9, #0
 8006b86:	f000 80c0 	beq.w	8006d0a <HAL_SPI_TransmitReceive+0x1d4>
 8006b8a:	2e00      	cmp	r6, #0
 8006b8c:	f000 80bd 	beq.w	8006d0a <HAL_SPI_TransmitReceive+0x1d4>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006b90:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006b94:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006b98:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006b9a:	bf1c      	itt	ne
 8006b9c:	2305      	movne	r3, #5
 8006b9e:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006ba2:	2300      	movs	r3, #0
 8006ba4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8006ba6:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006baa:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006bac:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8006bae:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006bb0:	681a      	ldr	r2, [r3, #0]
  hspi->RxXferSize  = Size;
 8006bb2:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006bb4:	0650      	lsls	r0, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006bb6:	bf58      	it	pl
 8006bb8:	681a      	ldrpl	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006bba:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8006bbc:	bf58      	it	pl
 8006bbe:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
  hspi->TxXferSize  = Size;
 8006bc2:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8006bc4:	bf58      	it	pl
 8006bc6:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006bc8:	68e2      	ldr	r2, [r4, #12]
 8006bca:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8006bce:	d158      	bne.n	8006c82 <HAL_SPI_TransmitReceive+0x14c>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006bd0:	b109      	cbz	r1, 8006bd6 <HAL_SPI_TransmitReceive+0xa0>
 8006bd2:	2e01      	cmp	r6, #1
 8006bd4:	d107      	bne.n	8006be6 <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006bd6:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006bda:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006bdc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006bde:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006be0:	3b01      	subs	r3, #1
 8006be2:	b29b      	uxth	r3, r3
 8006be4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006be6:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006be8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006bea:	b29b      	uxth	r3, r3
 8006bec:	b9ab      	cbnz	r3, 8006c1a <HAL_SPI_TransmitReceive+0xe4>
 8006bee:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006bf0:	b29b      	uxth	r3, r3
 8006bf2:	b993      	cbnz	r3, 8006c1a <HAL_SPI_TransmitReceive+0xe4>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006bf4:	4642      	mov	r2, r8
 8006bf6:	4639      	mov	r1, r7
 8006bf8:	4620      	mov	r0, r4
 8006bfa:	f7ff fe8b 	bl	8006914 <SPI_EndRxTxTransaction>
 8006bfe:	2800      	cmp	r0, #0
 8006c00:	f040 8081 	bne.w	8006d06 <HAL_SPI_TransmitReceive+0x1d0>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006c04:	68a3      	ldr	r3, [r4, #8]
 8006c06:	2b00      	cmp	r3, #0
 8006c08:	d132      	bne.n	8006c70 <HAL_SPI_TransmitReceive+0x13a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006c0a:	6823      	ldr	r3, [r4, #0]
 8006c0c:	9001      	str	r0, [sp, #4]
 8006c0e:	68da      	ldr	r2, [r3, #12]
 8006c10:	9201      	str	r2, [sp, #4]
 8006c12:	689b      	ldr	r3, [r3, #8]
 8006c14:	9301      	str	r3, [sp, #4]
 8006c16:	9b01      	ldr	r3, [sp, #4]
 8006c18:	e02a      	b.n	8006c70 <HAL_SPI_TransmitReceive+0x13a>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006c1a:	6822      	ldr	r2, [r4, #0]
 8006c1c:	6893      	ldr	r3, [r2, #8]
 8006c1e:	0799      	lsls	r1, r3, #30
 8006c20:	d50d      	bpl.n	8006c3e <HAL_SPI_TransmitReceive+0x108>
 8006c22:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c24:	b29b      	uxth	r3, r3
 8006c26:	b153      	cbz	r3, 8006c3e <HAL_SPI_TransmitReceive+0x108>
 8006c28:	b14d      	cbz	r5, 8006c3e <HAL_SPI_TransmitReceive+0x108>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006c2a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006c2c:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006c30:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006c32:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006c34:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c36:	3b01      	subs	r3, #1
 8006c38:	b29b      	uxth	r3, r3
 8006c3a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006c3c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006c3e:	6893      	ldr	r3, [r2, #8]
 8006c40:	07db      	lsls	r3, r3, #31
 8006c42:	d50c      	bpl.n	8006c5e <HAL_SPI_TransmitReceive+0x128>
 8006c44:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006c46:	b29b      	uxth	r3, r3
 8006c48:	b14b      	cbz	r3, 8006c5e <HAL_SPI_TransmitReceive+0x128>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006c4a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006c4c:	68d2      	ldr	r2, [r2, #12]
 8006c4e:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006c52:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006c54:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006c56:	3b01      	subs	r3, #1
 8006c58:	b29b      	uxth	r3, r3
 8006c5a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006c5c:	2501      	movs	r5, #1
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006c5e:	f7fd ff8d 	bl	8004b7c <HAL_GetTick>
 8006c62:	eba0 0008 	sub.w	r0, r0, r8
 8006c66:	4287      	cmp	r7, r0
 8006c68:	d8be      	bhi.n	8006be8 <HAL_SPI_TransmitReceive+0xb2>
 8006c6a:	1c7e      	adds	r6, r7, #1
 8006c6c:	d0bc      	beq.n	8006be8 <HAL_SPI_TransmitReceive+0xb2>
        errorcode = HAL_TIMEOUT;
 8006c6e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006c70:	2301      	movs	r3, #1
 8006c72:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006c76:	2300      	movs	r3, #0
 8006c78:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006c7c:	b003      	add	sp, #12
 8006c7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006c82:	b109      	cbz	r1, 8006c88 <HAL_SPI_TransmitReceive+0x152>
 8006c84:	2e01      	cmp	r6, #1
 8006c86:	d108      	bne.n	8006c9a <HAL_SPI_TransmitReceive+0x164>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006c88:	782a      	ldrb	r2, [r5, #0]
 8006c8a:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006c8c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006c8e:	3301      	adds	r3, #1
 8006c90:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006c92:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c94:	3b01      	subs	r3, #1
 8006c96:	b29b      	uxth	r3, r3
 8006c98:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006c9a:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006c9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006c9e:	b29b      	uxth	r3, r3
 8006ca0:	b91b      	cbnz	r3, 8006caa <HAL_SPI_TransmitReceive+0x174>
 8006ca2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006ca4:	b29b      	uxth	r3, r3
 8006ca6:	2b00      	cmp	r3, #0
 8006ca8:	d0a4      	beq.n	8006bf4 <HAL_SPI_TransmitReceive+0xbe>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006caa:	6822      	ldr	r2, [r4, #0]
 8006cac:	6893      	ldr	r3, [r2, #8]
 8006cae:	0798      	lsls	r0, r3, #30
 8006cb0:	d50e      	bpl.n	8006cd0 <HAL_SPI_TransmitReceive+0x19a>
 8006cb2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006cb4:	b29b      	uxth	r3, r3
 8006cb6:	b15b      	cbz	r3, 8006cd0 <HAL_SPI_TransmitReceive+0x19a>
 8006cb8:	b155      	cbz	r5, 8006cd0 <HAL_SPI_TransmitReceive+0x19a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006cba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006cbc:	781b      	ldrb	r3, [r3, #0]
 8006cbe:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006cc0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006cc2:	3301      	adds	r3, #1
 8006cc4:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006cc6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006cc8:	3b01      	subs	r3, #1
 8006cca:	b29b      	uxth	r3, r3
 8006ccc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006cce:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006cd0:	6822      	ldr	r2, [r4, #0]
 8006cd2:	6893      	ldr	r3, [r2, #8]
 8006cd4:	07d9      	lsls	r1, r3, #31
 8006cd6:	d50d      	bpl.n	8006cf4 <HAL_SPI_TransmitReceive+0x1be>
 8006cd8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006cda:	b29b      	uxth	r3, r3
 8006cdc:	b153      	cbz	r3, 8006cf4 <HAL_SPI_TransmitReceive+0x1be>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006cde:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006ce0:	68d2      	ldr	r2, [r2, #12]
 8006ce2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006ce4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006ce6:	3301      	adds	r3, #1
 8006ce8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006cea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006cec:	3b01      	subs	r3, #1
 8006cee:	b29b      	uxth	r3, r3
 8006cf0:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006cf2:	2501      	movs	r5, #1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006cf4:	f7fd ff42 	bl	8004b7c <HAL_GetTick>
 8006cf8:	eba0 0008 	sub.w	r0, r0, r8
 8006cfc:	4287      	cmp	r7, r0
 8006cfe:	d8cd      	bhi.n	8006c9c <HAL_SPI_TransmitReceive+0x166>
 8006d00:	1c7b      	adds	r3, r7, #1
 8006d02:	d0cb      	beq.n	8006c9c <HAL_SPI_TransmitReceive+0x166>
 8006d04:	e7b3      	b.n	8006c6e <HAL_SPI_TransmitReceive+0x138>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006d06:	2320      	movs	r3, #32
 8006d08:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8006d0a:	2001      	movs	r0, #1
 8006d0c:	e7b0      	b.n	8006c70 <HAL_SPI_TransmitReceive+0x13a>
    errorcode = HAL_BUSY;
 8006d0e:	2002      	movs	r0, #2
 8006d10:	e7ae      	b.n	8006c70 <HAL_SPI_TransmitReceive+0x13a>
  __HAL_LOCK(hspi);
 8006d12:	2002      	movs	r0, #2
 8006d14:	e7b2      	b.n	8006c7c <HAL_SPI_TransmitReceive+0x146>

08006d16 <HAL_SPI_Receive>:
{
 8006d16:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006d1a:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006d1c:	6843      	ldr	r3, [r0, #4]
 8006d1e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8006d22:	4604      	mov	r4, r0
 8006d24:	4688      	mov	r8, r1
 8006d26:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006d28:	d10c      	bne.n	8006d44 <HAL_SPI_Receive+0x2e>
 8006d2a:	6883      	ldr	r3, [r0, #8]
 8006d2c:	b953      	cbnz	r3, 8006d44 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006d2e:	2304      	movs	r3, #4
 8006d30:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006d34:	4613      	mov	r3, r2
 8006d36:	9500      	str	r5, [sp, #0]
 8006d38:	460a      	mov	r2, r1
 8006d3a:	f7ff fefc 	bl	8006b36 <HAL_SPI_TransmitReceive>
}
 8006d3e:	b002      	add	sp, #8
 8006d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 8006d44:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8006d48:	2b01      	cmp	r3, #1
 8006d4a:	d079      	beq.n	8006e40 <HAL_SPI_Receive+0x12a>
 8006d4c:	2301      	movs	r3, #1
 8006d4e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006d52:	f7fd ff13 	bl	8004b7c <HAL_GetTick>
 8006d56:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006d58:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8006d5c:	b2c0      	uxtb	r0, r0
 8006d5e:	2801      	cmp	r0, #1
 8006d60:	d16c      	bne.n	8006e3c <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 8006d62:	f1b8 0f00 	cmp.w	r8, #0
 8006d66:	d057      	beq.n	8006e18 <HAL_SPI_Receive+0x102>
 8006d68:	2f00      	cmp	r7, #0
 8006d6a:	d055      	beq.n	8006e18 <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006d6c:	2304      	movs	r3, #4
 8006d6e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006d72:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 8006d74:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006d76:	2300      	movs	r3, #0
 8006d78:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006d7a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->RxXferCount = Size;
 8006d7c:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferSize  = 0U;
 8006d7e:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8006d80:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxISR       = NULL;
 8006d82:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 8006d86:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006d88:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006d8c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 8006d90:	bf02      	ittt	eq
 8006d92:	681a      	ldreq	r2, [r3, #0]
 8006d94:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 8006d98:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006d9a:	681a      	ldr	r2, [r3, #0]
 8006d9c:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006d9e:	bf5e      	ittt	pl
 8006da0:	681a      	ldrpl	r2, [r3, #0]
 8006da2:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006da6:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006da8:	68e3      	ldr	r3, [r4, #12]
 8006daa:	b1f3      	cbz	r3, 8006dea <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 8006dac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006dae:	b29b      	uxth	r3, r3
 8006db0:	b1fb      	cbz	r3, 8006df2 <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006db2:	6823      	ldr	r3, [r4, #0]
 8006db4:	689a      	ldr	r2, [r3, #8]
 8006db6:	07d2      	lsls	r2, r2, #31
 8006db8:	d535      	bpl.n	8006e26 <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006dba:	68da      	ldr	r2, [r3, #12]
 8006dbc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006dbe:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006dc2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006dc4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006dc6:	3b01      	subs	r3, #1
 8006dc8:	b29b      	uxth	r3, r3
 8006dca:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8006dcc:	e7ee      	b.n	8006dac <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006dce:	6823      	ldr	r3, [r4, #0]
 8006dd0:	689a      	ldr	r2, [r3, #8]
 8006dd2:	07d0      	lsls	r0, r2, #31
 8006dd4:	d518      	bpl.n	8006e08 <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006dd6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006dd8:	7b1b      	ldrb	r3, [r3, #12]
 8006dda:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006ddc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006dde:	3301      	adds	r3, #1
 8006de0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006de2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006de4:	3b01      	subs	r3, #1
 8006de6:	b29b      	uxth	r3, r3
 8006de8:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8006dea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006dec:	b29b      	uxth	r3, r3
 8006dee:	2b00      	cmp	r3, #0
 8006df0:	d1ed      	bne.n	8006dce <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006df2:	4632      	mov	r2, r6
 8006df4:	4629      	mov	r1, r5
 8006df6:	4620      	mov	r0, r4
 8006df8:	f7ff fd62 	bl	80068c0 <SPI_EndRxTransaction>
 8006dfc:	b9d8      	cbnz	r0, 8006e36 <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006dfe:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006e00:	3000      	adds	r0, #0
 8006e02:	bf18      	it	ne
 8006e04:	2001      	movne	r0, #1
error :
 8006e06:	e007      	b.n	8006e18 <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006e08:	f7fd feb8 	bl	8004b7c <HAL_GetTick>
 8006e0c:	1b80      	subs	r0, r0, r6
 8006e0e:	42a8      	cmp	r0, r5
 8006e10:	d3eb      	bcc.n	8006dea <HAL_SPI_Receive+0xd4>
 8006e12:	1c69      	adds	r1, r5, #1
 8006e14:	d0e9      	beq.n	8006dea <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 8006e16:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006e18:	2301      	movs	r3, #1
 8006e1a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006e1e:	2300      	movs	r3, #0
 8006e20:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8006e24:	e78b      	b.n	8006d3e <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006e26:	f7fd fea9 	bl	8004b7c <HAL_GetTick>
 8006e2a:	1b80      	subs	r0, r0, r6
 8006e2c:	42a8      	cmp	r0, r5
 8006e2e:	d3bd      	bcc.n	8006dac <HAL_SPI_Receive+0x96>
 8006e30:	1c6b      	adds	r3, r5, #1
 8006e32:	d0bb      	beq.n	8006dac <HAL_SPI_Receive+0x96>
 8006e34:	e7ef      	b.n	8006e16 <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006e36:	2320      	movs	r3, #32
 8006e38:	6563      	str	r3, [r4, #84]	; 0x54
 8006e3a:	e7e0      	b.n	8006dfe <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 8006e3c:	2002      	movs	r0, #2
 8006e3e:	e7eb      	b.n	8006e18 <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 8006e40:	2002      	movs	r0, #2
 8006e42:	e77c      	b.n	8006d3e <HAL_SPI_Receive+0x28>

08006e44 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8006e44:	6a03      	ldr	r3, [r0, #32]
 8006e46:	f023 0301 	bic.w	r3, r3, #1
 8006e4a:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006e4c:	6a03      	ldr	r3, [r0, #32]
{
 8006e4e:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006e50:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8006e52:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006e54:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8006e56:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8006e5a:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8006e5c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8006e5e:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 8006e62:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8006e64:	4d0e      	ldr	r5, [pc, #56]	; (8006ea0 <TIM_OC1_SetConfig+0x5c>)
 8006e66:	42a8      	cmp	r0, r5
 8006e68:	d002      	beq.n	8006e70 <TIM_OC1_SetConfig+0x2c>
 8006e6a:	4e0e      	ldr	r6, [pc, #56]	; (8006ea4 <TIM_OC1_SetConfig+0x60>)
 8006e6c:	42b0      	cmp	r0, r6
 8006e6e:	d110      	bne.n	8006e92 <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8006e70:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 8006e72:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8006e76:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006e78:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 8006e7a:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006e7e:	d002      	beq.n	8006e86 <TIM_OC1_SetConfig+0x42>
 8006e80:	4d08      	ldr	r5, [pc, #32]	; (8006ea4 <TIM_OC1_SetConfig+0x60>)
 8006e82:	42a8      	cmp	r0, r5
 8006e84:	d105      	bne.n	8006e92 <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8006e86:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8006e8a:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 8006e8e:	4335      	orrs	r5, r6
 8006e90:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006e92:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8006e94:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8006e96:	684a      	ldr	r2, [r1, #4]
 8006e98:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006e9a:	6203      	str	r3, [r0, #32]
}
 8006e9c:	bd70      	pop	{r4, r5, r6, pc}
 8006e9e:	bf00      	nop
 8006ea0:	40010000 	.word	0x40010000
 8006ea4:	40010400 	.word	0x40010400

08006ea8 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8006ea8:	6a03      	ldr	r3, [r0, #32]
 8006eaa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006eae:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006eb0:	6a03      	ldr	r3, [r0, #32]
{
 8006eb2:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006eb4:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8006eb6:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006eb8:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8006eba:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8006ebe:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8006ec0:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 8006ec2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8006ec6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8006eca:	4d11      	ldr	r5, [pc, #68]	; (8006f10 <TIM_OC3_SetConfig+0x68>)
 8006ecc:	42a8      	cmp	r0, r5
 8006ece:	d003      	beq.n	8006ed8 <TIM_OC3_SetConfig+0x30>
 8006ed0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006ed4:	42a8      	cmp	r0, r5
 8006ed6:	d114      	bne.n	8006f02 <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8006ed8:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8006eda:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8006ede:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006ee2:	4d0b      	ldr	r5, [pc, #44]	; (8006f10 <TIM_OC3_SetConfig+0x68>)
 8006ee4:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 8006ee6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006eea:	d003      	beq.n	8006ef4 <TIM_OC3_SetConfig+0x4c>
 8006eec:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006ef0:	42a8      	cmp	r0, r5
 8006ef2:	d106      	bne.n	8006f02 <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8006ef4:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8006ef8:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8006efc:	4335      	orrs	r5, r6
 8006efe:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006f02:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006f04:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8006f06:	684a      	ldr	r2, [r1, #4]
 8006f08:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006f0a:	6203      	str	r3, [r0, #32]
}
 8006f0c:	bd70      	pop	{r4, r5, r6, pc}
 8006f0e:	bf00      	nop
 8006f10:	40010000 	.word	0x40010000

08006f14 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8006f14:	6a03      	ldr	r3, [r0, #32]
 8006f16:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006f1a:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006f1c:	6a03      	ldr	r3, [r0, #32]
{
 8006f1e:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006f20:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8006f22:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006f24:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8006f26:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006f2a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8006f2e:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8006f30:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8006f34:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006f38:	4d08      	ldr	r5, [pc, #32]	; (8006f5c <TIM_OC4_SetConfig+0x48>)
 8006f3a:	42a8      	cmp	r0, r5
 8006f3c:	d003      	beq.n	8006f46 <TIM_OC4_SetConfig+0x32>
 8006f3e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006f42:	42a8      	cmp	r0, r5
 8006f44:	d104      	bne.n	8006f50 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8006f46:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8006f48:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8006f4c:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006f50:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006f52:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8006f54:	684a      	ldr	r2, [r1, #4]
 8006f56:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006f58:	6203      	str	r3, [r0, #32]
}
 8006f5a:	bd30      	pop	{r4, r5, pc}
 8006f5c:	40010000 	.word	0x40010000

08006f60 <HAL_TIM_Base_Start_IT>:
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006f60:	6803      	ldr	r3, [r0, #0]
 8006f62:	68da      	ldr	r2, [r3, #12]
 8006f64:	f042 0201 	orr.w	r2, r2, #1
 8006f68:	60da      	str	r2, [r3, #12]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006f6a:	689a      	ldr	r2, [r3, #8]
 8006f6c:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006f70:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 8006f72:	bf1e      	ittt	ne
 8006f74:	681a      	ldrne	r2, [r3, #0]
 8006f76:	f042 0201 	orrne.w	r2, r2, #1
 8006f7a:	601a      	strne	r2, [r3, #0]
}
 8006f7c:	2000      	movs	r0, #0
 8006f7e:	4770      	bx	lr

08006f80 <HAL_TIM_PWM_MspInit>:
 8006f80:	4770      	bx	lr

08006f82 <HAL_TIM_OC_DelayElapsedCallback>:
 8006f82:	4770      	bx	lr

08006f84 <HAL_TIM_IC_CaptureCallback>:
 8006f84:	4770      	bx	lr

08006f86 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006f86:	4770      	bx	lr

08006f88 <TIM_DMADelayPulseCplt>:
{
 8006f88:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006f8a:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006f8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 8006f8e:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006f90:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 8006f92:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006f96:	d106      	bne.n	8006fa6 <TIM_DMADelayPulseCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006f98:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006f9a:	4620      	mov	r0, r4
 8006f9c:	f7ff fff3 	bl	8006f86 <HAL_TIM_PWM_PulseFinishedCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006fa0:	2300      	movs	r3, #0
 8006fa2:	7723      	strb	r3, [r4, #28]
}
 8006fa4:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 8006fa6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006fa8:	4283      	cmp	r3, r0
 8006faa:	d101      	bne.n	8006fb0 <TIM_DMADelayPulseCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006fac:	2302      	movs	r3, #2
 8006fae:	e7f3      	b.n	8006f98 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 8006fb0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006fb2:	4283      	cmp	r3, r0
 8006fb4:	d101      	bne.n	8006fba <TIM_DMADelayPulseCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006fb6:	2304      	movs	r3, #4
 8006fb8:	e7ee      	b.n	8006f98 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8006fba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006fbc:	4283      	cmp	r3, r0
 8006fbe:	d1ec      	bne.n	8006f9a <TIM_DMADelayPulseCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006fc0:	2308      	movs	r3, #8
 8006fc2:	e7e9      	b.n	8006f98 <TIM_DMADelayPulseCplt+0x10>

08006fc4 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 8006fc4:	4770      	bx	lr

08006fc6 <TIM_DMADelayPulseHalfCplt>:
{
 8006fc6:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006fc8:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006fca:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 8006fcc:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006fce:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 8006fd0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006fd4:	d106      	bne.n	8006fe4 <TIM_DMADelayPulseHalfCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006fd6:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
 8006fd8:	4620      	mov	r0, r4
 8006fda:	f7ff fff3 	bl	8006fc4 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006fde:	2300      	movs	r3, #0
 8006fe0:	7723      	strb	r3, [r4, #28]
}
 8006fe2:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 8006fe4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006fe6:	4283      	cmp	r3, r0
 8006fe8:	d101      	bne.n	8006fee <TIM_DMADelayPulseHalfCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006fea:	2302      	movs	r3, #2
 8006fec:	e7f3      	b.n	8006fd6 <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 8006fee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006ff0:	4283      	cmp	r3, r0
 8006ff2:	d101      	bne.n	8006ff8 <TIM_DMADelayPulseHalfCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006ff4:	2304      	movs	r3, #4
 8006ff6:	e7ee      	b.n	8006fd6 <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8006ff8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006ffa:	4283      	cmp	r3, r0
 8006ffc:	d1ec      	bne.n	8006fd8 <TIM_DMADelayPulseHalfCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006ffe:	2308      	movs	r3, #8
 8007000:	e7e9      	b.n	8006fd6 <TIM_DMADelayPulseHalfCplt+0x10>

08007002 <HAL_TIM_TriggerCallback>:
 8007002:	4770      	bx	lr

08007004 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007004:	6803      	ldr	r3, [r0, #0]
 8007006:	691a      	ldr	r2, [r3, #16]
 8007008:	0791      	lsls	r1, r2, #30
{
 800700a:	b510      	push	{r4, lr}
 800700c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800700e:	d50e      	bpl.n	800702e <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007010:	68da      	ldr	r2, [r3, #12]
 8007012:	0792      	lsls	r2, r2, #30
 8007014:	d50b      	bpl.n	800702e <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8007016:	f06f 0202 	mvn.w	r2, #2
 800701a:	611a      	str	r2, [r3, #16]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800701c:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800701e:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007020:	079b      	lsls	r3, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007022:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007024:	d077      	beq.n	8007116 <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 8007026:	f7ff ffad 	bl	8006f84 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800702a:	2300      	movs	r3, #0
 800702c:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800702e:	6823      	ldr	r3, [r4, #0]
 8007030:	691a      	ldr	r2, [r3, #16]
 8007032:	0750      	lsls	r0, r2, #29
 8007034:	d510      	bpl.n	8007058 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8007036:	68da      	ldr	r2, [r3, #12]
 8007038:	0751      	lsls	r1, r2, #29
 800703a:	d50d      	bpl.n	8007058 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800703c:	f06f 0204 	mvn.w	r2, #4
 8007040:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007042:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007044:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007046:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800704a:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 800704c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800704e:	d068      	beq.n	8007122 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007050:	f7ff ff98 	bl	8006f84 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007054:	2300      	movs	r3, #0
 8007056:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007058:	6823      	ldr	r3, [r4, #0]
 800705a:	691a      	ldr	r2, [r3, #16]
 800705c:	0712      	lsls	r2, r2, #28
 800705e:	d50f      	bpl.n	8007080 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007060:	68da      	ldr	r2, [r3, #12]
 8007062:	0710      	lsls	r0, r2, #28
 8007064:	d50c      	bpl.n	8007080 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007066:	f06f 0208 	mvn.w	r2, #8
 800706a:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800706c:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800706e:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007070:	0799      	lsls	r1, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007072:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8007074:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007076:	d05a      	beq.n	800712e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007078:	f7ff ff84 	bl	8006f84 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800707c:	2300      	movs	r3, #0
 800707e:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007080:	6823      	ldr	r3, [r4, #0]
 8007082:	691a      	ldr	r2, [r3, #16]
 8007084:	06d2      	lsls	r2, r2, #27
 8007086:	d510      	bpl.n	80070aa <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8007088:	68da      	ldr	r2, [r3, #12]
 800708a:	06d0      	lsls	r0, r2, #27
 800708c:	d50d      	bpl.n	80070aa <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800708e:	f06f 0210 	mvn.w	r2, #16
 8007092:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007094:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007096:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007098:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800709c:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 800709e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80070a0:	d04b      	beq.n	800713a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80070a2:	f7ff ff6f 	bl	8006f84 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80070a6:	2300      	movs	r3, #0
 80070a8:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80070aa:	6823      	ldr	r3, [r4, #0]
 80070ac:	691a      	ldr	r2, [r3, #16]
 80070ae:	07d1      	lsls	r1, r2, #31
 80070b0:	d508      	bpl.n	80070c4 <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80070b2:	68da      	ldr	r2, [r3, #12]
 80070b4:	07d2      	lsls	r2, r2, #31
 80070b6:	d505      	bpl.n	80070c4 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80070b8:	f06f 0201 	mvn.w	r2, #1
 80070bc:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80070be:	4620      	mov	r0, r4
 80070c0:	f7fb f85e 	bl	8002180 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80070c4:	6823      	ldr	r3, [r4, #0]
 80070c6:	691a      	ldr	r2, [r3, #16]
 80070c8:	0610      	lsls	r0, r2, #24
 80070ca:	d508      	bpl.n	80070de <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80070cc:	68da      	ldr	r2, [r3, #12]
 80070ce:	0611      	lsls	r1, r2, #24
 80070d0:	d505      	bpl.n	80070de <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80070d2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80070d6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 80070d8:	4620      	mov	r0, r4
 80070da:	f000 faea 	bl	80076b2 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80070de:	6823      	ldr	r3, [r4, #0]
 80070e0:	691a      	ldr	r2, [r3, #16]
 80070e2:	0652      	lsls	r2, r2, #25
 80070e4:	d508      	bpl.n	80070f8 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80070e6:	68da      	ldr	r2, [r3, #12]
 80070e8:	0650      	lsls	r0, r2, #25
 80070ea:	d505      	bpl.n	80070f8 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80070ec:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80070f0:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 80070f2:	4620      	mov	r0, r4
 80070f4:	f7ff ff85 	bl	8007002 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80070f8:	6823      	ldr	r3, [r4, #0]
 80070fa:	691a      	ldr	r2, [r3, #16]
 80070fc:	0691      	lsls	r1, r2, #26
 80070fe:	d522      	bpl.n	8007146 <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007100:	68da      	ldr	r2, [r3, #12]
 8007102:	0692      	lsls	r2, r2, #26
 8007104:	d51f      	bpl.n	8007146 <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007106:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800710a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800710c:	611a      	str	r2, [r3, #16]
}
 800710e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007112:	f000 bacd 	b.w	80076b0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007116:	f7ff ff34 	bl	8006f82 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800711a:	4620      	mov	r0, r4
 800711c:	f7ff ff33 	bl	8006f86 <HAL_TIM_PWM_PulseFinishedCallback>
 8007120:	e783      	b.n	800702a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007122:	f7ff ff2e 	bl	8006f82 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007126:	4620      	mov	r0, r4
 8007128:	f7ff ff2d 	bl	8006f86 <HAL_TIM_PWM_PulseFinishedCallback>
 800712c:	e792      	b.n	8007054 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800712e:	f7ff ff28 	bl	8006f82 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007132:	4620      	mov	r0, r4
 8007134:	f7ff ff27 	bl	8006f86 <HAL_TIM_PWM_PulseFinishedCallback>
 8007138:	e7a0      	b.n	800707c <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800713a:	f7ff ff22 	bl	8006f82 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800713e:	4620      	mov	r0, r4
 8007140:	f7ff ff21 	bl	8006f86 <HAL_TIM_PWM_PulseFinishedCallback>
 8007144:	e7af      	b.n	80070a6 <HAL_TIM_IRQHandler+0xa2>
}
 8007146:	bd10      	pop	{r4, pc}

08007148 <HAL_TIM_ErrorCallback>:
 8007148:	4770      	bx	lr

0800714a <TIM_DMAError>:
{
 800714a:	b508      	push	{r3, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800714c:	6b80      	ldr	r0, [r0, #56]	; 0x38
  htim->State = HAL_TIM_STATE_READY;
 800714e:	2301      	movs	r3, #1
 8007150:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  HAL_TIM_ErrorCallback(htim);
 8007154:	f7ff fff8 	bl	8007148 <HAL_TIM_ErrorCallback>
}
 8007158:	bd08      	pop	{r3, pc}
	...

0800715c <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800715c:	4a30      	ldr	r2, [pc, #192]	; (8007220 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800715e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007160:	4290      	cmp	r0, r2
 8007162:	d012      	beq.n	800718a <TIM_Base_SetConfig+0x2e>
 8007164:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007168:	d00f      	beq.n	800718a <TIM_Base_SetConfig+0x2e>
 800716a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800716e:	4290      	cmp	r0, r2
 8007170:	d00b      	beq.n	800718a <TIM_Base_SetConfig+0x2e>
 8007172:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007176:	4290      	cmp	r0, r2
 8007178:	d007      	beq.n	800718a <TIM_Base_SetConfig+0x2e>
 800717a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800717e:	4290      	cmp	r0, r2
 8007180:	d003      	beq.n	800718a <TIM_Base_SetConfig+0x2e>
 8007182:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007186:	4290      	cmp	r0, r2
 8007188:	d119      	bne.n	80071be <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 800718a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800718c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007190:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007192:	4a23      	ldr	r2, [pc, #140]	; (8007220 <TIM_Base_SetConfig+0xc4>)
 8007194:	4290      	cmp	r0, r2
 8007196:	d029      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 8007198:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800719c:	d026      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 800719e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80071a2:	4290      	cmp	r0, r2
 80071a4:	d022      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071a6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071aa:	4290      	cmp	r0, r2
 80071ac:	d01e      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071ae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071b2:	4290      	cmp	r0, r2
 80071b4:	d01a      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071b6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80071ba:	4290      	cmp	r0, r2
 80071bc:	d016      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071be:	4a19      	ldr	r2, [pc, #100]	; (8007224 <TIM_Base_SetConfig+0xc8>)
 80071c0:	4290      	cmp	r0, r2
 80071c2:	d013      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071c4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071c8:	4290      	cmp	r0, r2
 80071ca:	d00f      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071d0:	4290      	cmp	r0, r2
 80071d2:	d00b      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071d4:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80071d8:	4290      	cmp	r0, r2
 80071da:	d007      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071dc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071e0:	4290      	cmp	r0, r2
 80071e2:	d003      	beq.n	80071ec <TIM_Base_SetConfig+0x90>
 80071e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80071e8:	4290      	cmp	r0, r2
 80071ea:	d103      	bne.n	80071f4 <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80071ec:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80071ee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80071f2:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80071f4:	694a      	ldr	r2, [r1, #20]
 80071f6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80071fa:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 80071fc:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 80071fe:	688b      	ldr	r3, [r1, #8]
 8007200:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8007202:	680b      	ldr	r3, [r1, #0]
 8007204:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007206:	4b06      	ldr	r3, [pc, #24]	; (8007220 <TIM_Base_SetConfig+0xc4>)
 8007208:	4298      	cmp	r0, r3
 800720a:	d003      	beq.n	8007214 <TIM_Base_SetConfig+0xb8>
 800720c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007210:	4298      	cmp	r0, r3
 8007212:	d101      	bne.n	8007218 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 8007214:	690b      	ldr	r3, [r1, #16]
 8007216:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8007218:	2301      	movs	r3, #1
 800721a:	6143      	str	r3, [r0, #20]
}
 800721c:	4770      	bx	lr
 800721e:	bf00      	nop
 8007220:	40010000 	.word	0x40010000
 8007224:	40014000 	.word	0x40014000

08007228 <HAL_TIM_Base_Init>:
{
 8007228:	b510      	push	{r4, lr}
  if (htim == NULL)
 800722a:	4604      	mov	r4, r0
 800722c:	b1a0      	cbz	r0, 8007258 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800722e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007232:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007236:	b91b      	cbnz	r3, 8007240 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007238:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800723c:	f7fb f9e0 	bl	8002600 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007240:	2302      	movs	r3, #2
 8007242:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007246:	6820      	ldr	r0, [r4, #0]
 8007248:	1d21      	adds	r1, r4, #4
 800724a:	f7ff ff87 	bl	800715c <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800724e:	2301      	movs	r3, #1
 8007250:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8007254:	2000      	movs	r0, #0
}
 8007256:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007258:	2001      	movs	r0, #1
 800725a:	e7fc      	b.n	8007256 <HAL_TIM_Base_Init+0x2e>

0800725c <HAL_TIM_PWM_Init>:
{
 800725c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800725e:	4604      	mov	r4, r0
 8007260:	b1a0      	cbz	r0, 800728c <HAL_TIM_PWM_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007262:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007266:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800726a:	b91b      	cbnz	r3, 8007274 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800726c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 8007270:	f7ff fe86 	bl	8006f80 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007274:	2302      	movs	r3, #2
 8007276:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800727a:	6820      	ldr	r0, [r4, #0]
 800727c:	1d21      	adds	r1, r4, #4
 800727e:	f7ff ff6d 	bl	800715c <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8007282:	2301      	movs	r3, #1
 8007284:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8007288:	2000      	movs	r0, #0
}
 800728a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800728c:	2001      	movs	r0, #1
 800728e:	e7fc      	b.n	800728a <HAL_TIM_PWM_Init+0x2e>

08007290 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007290:	6a03      	ldr	r3, [r0, #32]
 8007292:	f023 0310 	bic.w	r3, r3, #16
 8007296:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8007298:	6a03      	ldr	r3, [r0, #32]
{
 800729a:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 800729c:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 800729e:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80072a0:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80072a2:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80072a6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80072aa:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 80072ac:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80072b0:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 80072b4:	4d10      	ldr	r5, [pc, #64]	; (80072f8 <TIM_OC2_SetConfig+0x68>)
 80072b6:	42a8      	cmp	r0, r5
 80072b8:	d003      	beq.n	80072c2 <TIM_OC2_SetConfig+0x32>
 80072ba:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80072be:	42a8      	cmp	r0, r5
 80072c0:	d114      	bne.n	80072ec <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80072c2:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 80072c4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80072c8:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80072cc:	4d0a      	ldr	r5, [pc, #40]	; (80072f8 <TIM_OC2_SetConfig+0x68>)
 80072ce:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 80072d0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80072d4:	d003      	beq.n	80072de <TIM_OC2_SetConfig+0x4e>
 80072d6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80072da:	42a8      	cmp	r0, r5
 80072dc:	d106      	bne.n	80072ec <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80072de:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80072e2:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80072e6:	4335      	orrs	r5, r6
 80072e8:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 80072ec:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 80072ee:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 80072f0:	684a      	ldr	r2, [r1, #4]
 80072f2:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 80072f4:	6203      	str	r3, [r0, #32]
}
 80072f6:	bd70      	pop	{r4, r5, r6, pc}
 80072f8:	40010000 	.word	0x40010000

080072fc <HAL_TIM_PWM_ConfigChannel>:
{
 80072fc:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 80072fe:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007302:	2b01      	cmp	r3, #1
{
 8007304:	4604      	mov	r4, r0
 8007306:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800730a:	d025      	beq.n	8007358 <HAL_TIM_PWM_ConfigChannel+0x5c>
 800730c:	2301      	movs	r3, #1
 800730e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 8007312:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 8007316:	2a0c      	cmp	r2, #12
 8007318:	d818      	bhi.n	800734c <HAL_TIM_PWM_ConfigChannel+0x50>
 800731a:	e8df f002 	tbb	[pc, r2]
 800731e:	1707      	.short	0x1707
 8007320:	171e1717 	.word	0x171e1717
 8007324:	172f1717 	.word	0x172f1717
 8007328:	1717      	.short	0x1717
 800732a:	40          	.byte	0x40
 800732b:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800732c:	6820      	ldr	r0, [r4, #0]
 800732e:	f7ff fd89 	bl	8006e44 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8007332:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8007334:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8007336:	699a      	ldr	r2, [r3, #24]
 8007338:	f042 0208 	orr.w	r2, r2, #8
 800733c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800733e:	699a      	ldr	r2, [r3, #24]
 8007340:	f022 0204 	bic.w	r2, r2, #4
 8007344:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8007346:	699a      	ldr	r2, [r3, #24]
 8007348:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800734a:	619a      	str	r2, [r3, #24]
  htim->State = HAL_TIM_STATE_READY;
 800734c:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800734e:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8007350:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8007354:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 8007358:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800735a:	6820      	ldr	r0, [r4, #0]
 800735c:	f7ff ff98 	bl	8007290 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8007360:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8007362:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8007364:	699a      	ldr	r2, [r3, #24]
 8007366:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800736a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800736c:	699a      	ldr	r2, [r3, #24]
 800736e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007372:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8007374:	699a      	ldr	r2, [r3, #24]
 8007376:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800737a:	e7e6      	b.n	800734a <HAL_TIM_PWM_ConfigChannel+0x4e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800737c:	6820      	ldr	r0, [r4, #0]
 800737e:	f7ff fd93 	bl	8006ea8 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8007382:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8007384:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8007386:	69da      	ldr	r2, [r3, #28]
 8007388:	f042 0208 	orr.w	r2, r2, #8
 800738c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800738e:	69da      	ldr	r2, [r3, #28]
 8007390:	f022 0204 	bic.w	r2, r2, #4
 8007394:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8007396:	69da      	ldr	r2, [r3, #28]
 8007398:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800739a:	61da      	str	r2, [r3, #28]
      break;
 800739c:	e7d6      	b.n	800734c <HAL_TIM_PWM_ConfigChannel+0x50>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800739e:	6820      	ldr	r0, [r4, #0]
 80073a0:	f7ff fdb8 	bl	8006f14 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80073a4:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80073a6:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80073a8:	69da      	ldr	r2, [r3, #28]
 80073aa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80073ae:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80073b0:	69da      	ldr	r2, [r3, #28]
 80073b2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80073b6:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80073b8:	69da      	ldr	r2, [r3, #28]
 80073ba:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80073be:	e7ec      	b.n	800739a <HAL_TIM_PWM_ConfigChannel+0x9e>

080073c0 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 80073c0:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 80073c2:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80073c4:	430a      	orrs	r2, r1
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80073c6:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80073ca:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 80073ce:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80073d0:	6083      	str	r3, [r0, #8]
}
 80073d2:	bd10      	pop	{r4, pc}

080073d4 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 80073d4:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80073d8:	2b01      	cmp	r3, #1
{
 80073da:	b570      	push	{r4, r5, r6, lr}
 80073dc:	4604      	mov	r4, r0
 80073de:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 80073e2:	d019      	beq.n	8007418 <HAL_TIM_ConfigClockSource+0x44>
  htim->State = HAL_TIM_STATE_BUSY;
 80073e4:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  tmpsmcr = htim->Instance->SMCR;
 80073e8:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(htim);
 80073ea:	2301      	movs	r3, #1
 80073ec:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 80073f0:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80073f2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80073f6:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 80073fa:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 80073fc:	680b      	ldr	r3, [r1, #0]
 80073fe:	2b40      	cmp	r3, #64	; 0x40
 8007400:	d065      	beq.n	80074ce <HAL_TIM_ConfigClockSource+0xfa>
 8007402:	d815      	bhi.n	8007430 <HAL_TIM_ConfigClockSource+0x5c>
 8007404:	2b10      	cmp	r3, #16
 8007406:	d00c      	beq.n	8007422 <HAL_TIM_ConfigClockSource+0x4e>
 8007408:	d807      	bhi.n	800741a <HAL_TIM_ConfigClockSource+0x46>
 800740a:	b153      	cbz	r3, 8007422 <HAL_TIM_ConfigClockSource+0x4e>
  htim->State = HAL_TIM_STATE_READY;
 800740c:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800740e:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8007410:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8007414:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 8007418:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 800741a:	2b20      	cmp	r3, #32
 800741c:	d001      	beq.n	8007422 <HAL_TIM_ConfigClockSource+0x4e>
 800741e:	2b30      	cmp	r3, #48	; 0x30
 8007420:	d1f4      	bne.n	800740c <HAL_TIM_ConfigClockSource+0x38>
  tmpsmcr = TIMx->SMCR;
 8007422:	6882      	ldr	r2, [r0, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007424:	f043 0307 	orr.w	r3, r3, #7
  tmpsmcr &= ~TIM_SMCR_TS;
 8007428:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800742c:	4313      	orrs	r3, r2
 800742e:	e01a      	b.n	8007466 <HAL_TIM_ConfigClockSource+0x92>
  switch (sClockSourceConfig->ClockSource)
 8007430:	2b60      	cmp	r3, #96	; 0x60
 8007432:	d034      	beq.n	800749e <HAL_TIM_ConfigClockSource+0xca>
 8007434:	d819      	bhi.n	800746a <HAL_TIM_ConfigClockSource+0x96>
 8007436:	2b50      	cmp	r3, #80	; 0x50
 8007438:	d1e8      	bne.n	800740c <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800743a:	684a      	ldr	r2, [r1, #4]
 800743c:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 800743e:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007440:	6a05      	ldr	r5, [r0, #32]
 8007442:	f025 0501 	bic.w	r5, r5, #1
 8007446:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007448:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800744a:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800744e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007452:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8007456:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8007458:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 800745a:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800745c:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800745e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007462:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 8007466:	6083      	str	r3, [r0, #8]
 8007468:	e7d0      	b.n	800740c <HAL_TIM_ConfigClockSource+0x38>
  switch (sClockSourceConfig->ClockSource)
 800746a:	2b70      	cmp	r3, #112	; 0x70
 800746c:	d00c      	beq.n	8007488 <HAL_TIM_ConfigClockSource+0xb4>
 800746e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007472:	d1cb      	bne.n	800740c <HAL_TIM_ConfigClockSource+0x38>
      TIM_ETR_SetConfig(htim->Instance,
 8007474:	68cb      	ldr	r3, [r1, #12]
 8007476:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800747a:	f7ff ffa1 	bl	80073c0 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800747e:	6822      	ldr	r2, [r4, #0]
 8007480:	6893      	ldr	r3, [r2, #8]
 8007482:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007486:	e008      	b.n	800749a <HAL_TIM_ConfigClockSource+0xc6>
      TIM_ETR_SetConfig(htim->Instance,
 8007488:	68cb      	ldr	r3, [r1, #12]
 800748a:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800748e:	f7ff ff97 	bl	80073c0 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 8007492:	6822      	ldr	r2, [r4, #0]
 8007494:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8007496:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800749a:	6093      	str	r3, [r2, #8]
      break;
 800749c:	e7b6      	b.n	800740c <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI2_ConfigInputStage(htim->Instance,
 800749e:	684d      	ldr	r5, [r1, #4]
 80074a0:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80074a2:	6a01      	ldr	r1, [r0, #32]
 80074a4:	f021 0110 	bic.w	r1, r1, #16
 80074a8:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 80074aa:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 80074ac:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80074ae:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80074b2:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 80074b6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80074ba:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 80074be:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 80074c0:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 80074c2:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80074c4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80074c8:	f043 0367 	orr.w	r3, r3, #103	; 0x67
 80074cc:	e7cb      	b.n	8007466 <HAL_TIM_ConfigClockSource+0x92>
      TIM_TI1_ConfigInputStage(htim->Instance,
 80074ce:	684a      	ldr	r2, [r1, #4]
 80074d0:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 80074d2:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80074d4:	6a05      	ldr	r5, [r0, #32]
 80074d6:	f025 0501 	bic.w	r5, r5, #1
 80074da:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 80074dc:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80074de:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80074e2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80074e6:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 80074ea:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 80074ec:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 80074ee:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 80074f0:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80074f2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80074f6:	f043 0347 	orr.w	r3, r3, #71	; 0x47
 80074fa:	e7b4      	b.n	8007466 <HAL_TIM_ConfigClockSource+0x92>

080074fc <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 80074fc:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 80074fe:	f001 011f 	and.w	r1, r1, #31
{
 8007502:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007504:	2401      	movs	r4, #1
 8007506:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 8007508:	ea23 0304 	bic.w	r3, r3, r4
 800750c:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800750e:	6a03      	ldr	r3, [r0, #32]
 8007510:	408a      	lsls	r2, r1
 8007512:	431a      	orrs	r2, r3
 8007514:	6202      	str	r2, [r0, #32]
}
 8007516:	bd10      	pop	{r4, pc}

08007518 <HAL_TIM_OC_Start_DMA>:
{
 8007518:	b570      	push	{r4, r5, r6, lr}
 800751a:	4604      	mov	r4, r0
  if (htim->State == HAL_TIM_STATE_BUSY)
 800751c:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
 8007520:	b2c0      	uxtb	r0, r0
 8007522:	2802      	cmp	r0, #2
{
 8007524:	460d      	mov	r5, r1
 8007526:	4611      	mov	r1, r2
  if (htim->State == HAL_TIM_STATE_BUSY)
 8007528:	d006      	beq.n	8007538 <HAL_TIM_OC_Start_DMA+0x20>
  else if (htim->State == HAL_TIM_STATE_READY)
 800752a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800752e:	2a01      	cmp	r2, #1
 8007530:	d106      	bne.n	8007540 <HAL_TIM_OC_Start_DMA+0x28>
    if ((pData == NULL) && (Length > 0U))
 8007532:	b911      	cbnz	r1, 800753a <HAL_TIM_OC_Start_DMA+0x22>
 8007534:	b10b      	cbz	r3, 800753a <HAL_TIM_OC_Start_DMA+0x22>
      return HAL_ERROR;
 8007536:	2001      	movs	r0, #1
}
 8007538:	bd70      	pop	{r4, r5, r6, pc}
      htim->State = HAL_TIM_STATE_BUSY;
 800753a:	2202      	movs	r2, #2
 800753c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8007540:	6822      	ldr	r2, [r4, #0]
  switch (Channel)
 8007542:	2d0c      	cmp	r5, #12
 8007544:	d819      	bhi.n	800757a <HAL_TIM_OC_Start_DMA+0x62>
 8007546:	e8df f005 	tbb	[pc, r5]
 800754a:	1807      	.short	0x1807
 800754c:	18341818 	.word	0x18341818
 8007550:	18451818 	.word	0x18451818
 8007554:	1818      	.short	0x1818
 8007556:	56          	.byte	0x56
 8007557:	00          	.byte	0x00
      htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8007558:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800755a:	4e2f      	ldr	r6, [pc, #188]	; (8007618 <HAL_TIM_OC_Start_DMA+0x100>)
 800755c:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 800755e:	4e2f      	ldr	r6, [pc, #188]	; (800761c <HAL_TIM_OC_Start_DMA+0x104>)
 8007560:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 8007562:	4e2f      	ldr	r6, [pc, #188]	; (8007620 <HAL_TIM_OC_Start_DMA+0x108>)
 8007564:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1, Length) != HAL_OK)
 8007566:	3234      	adds	r2, #52	; 0x34
 8007568:	f7fd fc2e 	bl	8004dc8 <HAL_DMA_Start_IT>
 800756c:	2800      	cmp	r0, #0
 800756e:	d1e2      	bne.n	8007536 <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 8007570:	6822      	ldr	r2, [r4, #0]
 8007572:	68d3      	ldr	r3, [r2, #12]
 8007574:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8007578:	60d3      	str	r3, [r2, #12]
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800757a:	2201      	movs	r2, #1
 800757c:	4629      	mov	r1, r5
 800757e:	6820      	ldr	r0, [r4, #0]
 8007580:	f7ff ffbc 	bl	80074fc <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007584:	6823      	ldr	r3, [r4, #0]
 8007586:	4a27      	ldr	r2, [pc, #156]	; (8007624 <HAL_TIM_OC_Start_DMA+0x10c>)
 8007588:	4293      	cmp	r3, r2
 800758a:	d003      	beq.n	8007594 <HAL_TIM_OC_Start_DMA+0x7c>
 800758c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007590:	4293      	cmp	r3, r2
 8007592:	d103      	bne.n	800759c <HAL_TIM_OC_Start_DMA+0x84>
    __HAL_TIM_MOE_ENABLE(htim);
 8007594:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8007596:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800759a:	645a      	str	r2, [r3, #68]	; 0x44
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800759c:	689a      	ldr	r2, [r3, #8]
 800759e:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80075a2:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 80075a4:	bf1e      	ittt	ne
 80075a6:	681a      	ldrne	r2, [r3, #0]
 80075a8:	f042 0201 	orrne.w	r2, r2, #1
 80075ac:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 80075ae:	2000      	movs	r0, #0
 80075b0:	e7c2      	b.n	8007538 <HAL_TIM_OC_Start_DMA+0x20>
      htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 80075b2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80075b4:	4e18      	ldr	r6, [pc, #96]	; (8007618 <HAL_TIM_OC_Start_DMA+0x100>)
 80075b6:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 80075b8:	4e18      	ldr	r6, [pc, #96]	; (800761c <HAL_TIM_OC_Start_DMA+0x104>)
 80075ba:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 80075bc:	4e18      	ldr	r6, [pc, #96]	; (8007620 <HAL_TIM_OC_Start_DMA+0x108>)
 80075be:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2, Length) != HAL_OK)
 80075c0:	3238      	adds	r2, #56	; 0x38
 80075c2:	f7fd fc01 	bl	8004dc8 <HAL_DMA_Start_IT>
 80075c6:	2800      	cmp	r0, #0
 80075c8:	d1b5      	bne.n	8007536 <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 80075ca:	6822      	ldr	r2, [r4, #0]
 80075cc:	68d3      	ldr	r3, [r2, #12]
 80075ce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80075d2:	e7d1      	b.n	8007578 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 80075d4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80075d6:	4e10      	ldr	r6, [pc, #64]	; (8007618 <HAL_TIM_OC_Start_DMA+0x100>)
 80075d8:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 80075da:	4e10      	ldr	r6, [pc, #64]	; (800761c <HAL_TIM_OC_Start_DMA+0x104>)
 80075dc:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 80075de:	4e10      	ldr	r6, [pc, #64]	; (8007620 <HAL_TIM_OC_Start_DMA+0x108>)
 80075e0:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3, Length) != HAL_OK)
 80075e2:	323c      	adds	r2, #60	; 0x3c
 80075e4:	f7fd fbf0 	bl	8004dc8 <HAL_DMA_Start_IT>
 80075e8:	2800      	cmp	r0, #0
 80075ea:	d1a4      	bne.n	8007536 <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 80075ec:	6822      	ldr	r2, [r4, #0]
 80075ee:	68d3      	ldr	r3, [r2, #12]
 80075f0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80075f4:	e7c0      	b.n	8007578 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 80075f6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80075f8:	4e07      	ldr	r6, [pc, #28]	; (8007618 <HAL_TIM_OC_Start_DMA+0x100>)
 80075fa:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 80075fc:	4e07      	ldr	r6, [pc, #28]	; (800761c <HAL_TIM_OC_Start_DMA+0x104>)
 80075fe:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 8007600:	4e07      	ldr	r6, [pc, #28]	; (8007620 <HAL_TIM_OC_Start_DMA+0x108>)
 8007602:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4, Length) != HAL_OK)
 8007604:	3240      	adds	r2, #64	; 0x40
 8007606:	f7fd fbdf 	bl	8004dc8 <HAL_DMA_Start_IT>
 800760a:	2800      	cmp	r0, #0
 800760c:	d193      	bne.n	8007536 <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 800760e:	6822      	ldr	r2, [r4, #0]
 8007610:	68d3      	ldr	r3, [r2, #12]
 8007612:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8007616:	e7af      	b.n	8007578 <HAL_TIM_OC_Start_DMA+0x60>
 8007618:	08006f89 	.word	0x08006f89
 800761c:	08006fc7 	.word	0x08006fc7
 8007620:	0800714b 	.word	0x0800714b
 8007624:	40010000 	.word	0x40010000

08007628 <HAL_TIM_PWM_Start_DMA>:
 8007628:	f7ff bf76 	b.w	8007518 <HAL_TIM_OC_Start_DMA>

0800762c <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800762c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007630:	2b01      	cmp	r3, #1
{
 8007632:	b530      	push	{r4, r5, lr}
 8007634:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 8007638:	d035      	beq.n	80076a6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800763a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800763e:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007640:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8007642:	685c      	ldr	r4, [r3, #4]
  tmpcr2 &= ~TIM_CR2_MMS;
 8007644:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  __HAL_LOCK(htim);
 8007648:	2201      	movs	r2, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800764a:	432c      	orrs	r4, r5
  __HAL_LOCK(htim);
 800764c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 8007650:	689a      	ldr	r2, [r3, #8]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007652:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007654:	4c15      	ldr	r4, [pc, #84]	; (80076ac <HAL_TIMEx_MasterConfigSynchronization+0x80>)
 8007656:	42a3      	cmp	r3, r4
 8007658:	d01a      	beq.n	8007690 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 800765a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800765e:	d017      	beq.n	8007690 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007660:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8007664:	42a3      	cmp	r3, r4
 8007666:	d013      	beq.n	8007690 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007668:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800766c:	42a3      	cmp	r3, r4
 800766e:	d00f      	beq.n	8007690 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007670:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007674:	42a3      	cmp	r3, r4
 8007676:	d00b      	beq.n	8007690 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007678:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800767c:	42a3      	cmp	r3, r4
 800767e:	d007      	beq.n	8007690 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007680:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8007684:	42a3      	cmp	r3, r4
 8007686:	d003      	beq.n	8007690 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8007688:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800768c:	42a3      	cmp	r3, r4
 800768e:	d104      	bne.n	800769a <HAL_TIMEx_MasterConfigSynchronization+0x6e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007690:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007692:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007696:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007698:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800769a:	2301      	movs	r3, #1
 800769c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80076a0:	2300      	movs	r3, #0
 80076a2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 80076a6:	4618      	mov	r0, r3

  return HAL_OK;
}
 80076a8:	bd30      	pop	{r4, r5, pc}
 80076aa:	bf00      	nop
 80076ac:	40010000 	.word	0x40010000

080076b0 <HAL_TIMEx_CommutCallback>:
 80076b0:	4770      	bx	lr

080076b2 <HAL_TIMEx_BreakCallback>:
 80076b2:	4770      	bx	lr

080076b4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80076b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076b8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80076ba:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 80076be:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 80076c2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 80076c6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80076ca:	6809      	ldr	r1, [r1, #0]
 80076cc:	2901      	cmp	r1, #1
 80076ce:	ea43 0304 	orr.w	r3, r3, r4
 80076d2:	4912      	ldr	r1, [pc, #72]	; (800771c <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80076d4:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80076d6:	d00f      	beq.n	80076f8 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80076d8:	431a      	orrs	r2, r3
 80076da:	432a      	orrs	r2, r5
 80076dc:	ea42 0308 	orr.w	r3, r2, r8
 80076e0:	ea43 030e 	orr.w	r3, r3, lr
 80076e4:	ea43 030c 	orr.w	r3, r3, ip
 80076e8:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80076ea:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80076ec:	4333      	orrs	r3, r6
 80076ee:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80076f0:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80076f2:	2000      	movs	r0, #0
 80076f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80076f8:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80076fa:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80076fc:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80076fe:	ea45 0208 	orr.w	r2, r5, r8
 8007702:	ea42 020e 	orr.w	r2, r2, lr
 8007706:	ea42 020c 	orr.w	r2, r2, ip
 800770a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800770c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007710:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007712:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007714:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007716:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007718:	6042      	str	r2, [r0, #4]
 800771a:	e7ea      	b.n	80076f2 <FMC_SDRAM_Init+0x3e>
 800771c:	ffff8000 	.word	0xffff8000

08007720 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8007720:	68cb      	ldr	r3, [r1, #12]
 8007722:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007724:	680c      	ldr	r4, [r1, #0]
 8007726:	688e      	ldr	r6, [r1, #8]
 8007728:	690d      	ldr	r5, [r1, #16]
 800772a:	1e5f      	subs	r7, r3, #1
 800772c:	694b      	ldr	r3, [r1, #20]
 800772e:	f104 3cff 	add.w	ip, r4, #4294967295
 8007732:	684c      	ldr	r4, [r1, #4]
 8007734:	6989      	ldr	r1, [r1, #24]
 8007736:	3b01      	subs	r3, #1
 8007738:	051b      	lsls	r3, r3, #20
 800773a:	3c01      	subs	r4, #1
 800773c:	3e01      	subs	r6, #1
 800773e:	3d01      	subs	r5, #1
 8007740:	3901      	subs	r1, #1
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8007742:	2a01      	cmp	r2, #1
 8007744:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8007748:	ea4f 2606 	mov.w	r6, r6, lsl #8
 800774c:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8007750:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8007754:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8007758:	d00c      	beq.n	8007774 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800775a:	ea43 030c 	orr.w	r3, r3, ip
 800775e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007760:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007762:	4333      	orrs	r3, r6
 8007764:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007766:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800776a:	430b      	orrs	r3, r1
 800776c:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800776e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8007770:	2000      	movs	r0, #0
 8007772:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007774:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007776:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800777a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800777e:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007782:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007784:	ea42 020c 	orr.w	r2, r2, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007788:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800778a:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800778c:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800778e:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007792:	430a      	orrs	r2, r1
 8007794:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007796:	60c2      	str	r2, [r0, #12]
 8007798:	e7ea      	b.n	8007770 <FMC_SDRAM_Timing_Init+0x50>

0800779a <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800779a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800779c:	2300      	movs	r3, #0
 800779e:	9301      	str	r3, [sp, #4]
{
 80077a0:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80077a2:	e9d1 3200 	ldrd	r3, r2, [r1]
 80077a6:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 80077a8:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80077aa:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 80077ae:	688a      	ldr	r2, [r1, #8]
 80077b0:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80077b2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80077b6:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 80077b8:	9b01      	ldr	r3, [sp, #4]
 80077ba:	6103      	str	r3, [r0, #16]
{
 80077bc:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80077be:	f7fd f9dd 	bl	8004b7c <HAL_GetTick>
 80077c2:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80077c4:	69a0      	ldr	r0, [r4, #24]
 80077c6:	f010 0020 	ands.w	r0, r0, #32
 80077ca:	d003      	beq.n	80077d4 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 80077cc:	1c6b      	adds	r3, r5, #1
 80077ce:	d0f9      	beq.n	80077c4 <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80077d0:	b915      	cbnz	r5, 80077d8 <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 80077d2:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 80077d4:	b002      	add	sp, #8
 80077d6:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80077d8:	f7fd f9d0 	bl	8004b7c <HAL_GetTick>
 80077dc:	1b80      	subs	r0, r0, r6
 80077de:	42a8      	cmp	r0, r5
 80077e0:	d9f0      	bls.n	80077c4 <FMC_SDRAM_SendCommand+0x2a>
 80077e2:	e7f6      	b.n	80077d2 <FMC_SDRAM_SendCommand+0x38>

080077e4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80077e4:	6943      	ldr	r3, [r0, #20]
 80077e6:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80077ea:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80077ec:	2000      	movs	r0, #0
 80077ee:	4770      	bx	lr

080077f0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80077f0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80077f4:	b113      	cbz	r3, 80077fc <osKernelInitialize+0xc>
    stat = osErrorISR;
 80077f6:	f06f 0005 	mvn.w	r0, #5
 80077fa:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80077fc:	f3ef 8210 	mrs	r2, PRIMASK
 8007800:	4b07      	ldr	r3, [pc, #28]	; (8007820 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8007802:	b912      	cbnz	r2, 800780a <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007804:	f3ef 8211 	mrs	r2, BASEPRI
 8007808:	b112      	cbz	r2, 8007810 <osKernelInitialize+0x20>
 800780a:	681a      	ldr	r2, [r3, #0]
 800780c:	2a02      	cmp	r2, #2
 800780e:	d0f2      	beq.n	80077f6 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007810:	6818      	ldr	r0, [r3, #0]
 8007812:	b910      	cbnz	r0, 800781a <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007814:	2201      	movs	r2, #1
 8007816:	601a      	str	r2, [r3, #0]
 8007818:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 800781a:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800781e:	4770      	bx	lr
 8007820:	20001904 	.word	0x20001904

08007824 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007824:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007826:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800782a:	b113      	cbz	r3, 8007832 <osKernelStart+0xe>
    stat = osErrorISR;
 800782c:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007830:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007832:	f3ef 8210 	mrs	r2, PRIMASK
 8007836:	4b0a      	ldr	r3, [pc, #40]	; (8007860 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007838:	b912      	cbnz	r2, 8007840 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800783a:	f3ef 8211 	mrs	r2, BASEPRI
 800783e:	b112      	cbz	r2, 8007846 <osKernelStart+0x22>
 8007840:	681a      	ldr	r2, [r3, #0]
 8007842:	2a02      	cmp	r2, #2
 8007844:	d0f2      	beq.n	800782c <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8007846:	681a      	ldr	r2, [r3, #0]
 8007848:	2a01      	cmp	r2, #1
 800784a:	d105      	bne.n	8007858 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 800784c:	2202      	movs	r2, #2
 800784e:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8007850:	f001 fbae 	bl	8008fb0 <vTaskStartScheduler>
      stat = osOK;
 8007854:	2000      	movs	r0, #0
 8007856:	e7eb      	b.n	8007830 <osKernelStart+0xc>
      stat = osError;
 8007858:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800785c:	e7e8      	b.n	8007830 <osKernelStart+0xc>
 800785e:	bf00      	nop
 8007860:	20001904 	.word	0x20001904

08007864 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007864:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007866:	b087      	sub	sp, #28
 8007868:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800786a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800786c:	460b      	mov	r3, r1
  hTask = NULL;
 800786e:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007870:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007874:	bb32      	cbnz	r2, 80078c4 <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007876:	f3ef 8210 	mrs	r2, PRIMASK
 800787a:	b912      	cbnz	r2, 8007882 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800787c:	f3ef 8211 	mrs	r2, BASEPRI
 8007880:	b11a      	cbz	r2, 800788a <osThreadNew+0x26>
 8007882:	4a22      	ldr	r2, [pc, #136]	; (800790c <osThreadNew+0xa8>)
 8007884:	6812      	ldr	r2, [r2, #0]
 8007886:	2a02      	cmp	r2, #2
 8007888:	d01c      	beq.n	80078c4 <osThreadNew+0x60>
 800788a:	b1d8      	cbz	r0, 80078c4 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800788c:	2c00      	cmp	r4, #0
 800788e:	d036      	beq.n	80078fe <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007890:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 8007892:	6821      	ldr	r1, [r4, #0]
 8007894:	2d00      	cmp	r5, #0
 8007896:	bf08      	it	eq
 8007898:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800789a:	1e6a      	subs	r2, r5, #1
 800789c:	2a37      	cmp	r2, #55	; 0x37
 800789e:	462f      	mov	r7, r5
 80078a0:	d831      	bhi.n	8007906 <osThreadNew+0xa2>
 80078a2:	6862      	ldr	r2, [r4, #4]
 80078a4:	07d2      	lsls	r2, r2, #31
 80078a6:	d42e      	bmi.n	8007906 <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80078a8:	6966      	ldr	r6, [r4, #20]
 80078aa:	b176      	cbz	r6, 80078ca <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80078ac:	08b2      	lsrs	r2, r6, #2
 80078ae:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80078b2:	f1bc 0f00 	cmp.w	ip, #0
 80078b6:	d00a      	beq.n	80078ce <osThreadNew+0x6a>
 80078b8:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80078bc:	d902      	bls.n	80078c4 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80078be:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80078c0:	b104      	cbz	r4, 80078c4 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80078c2:	b9ae      	cbnz	r6, 80078f0 <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 80078c4:	9805      	ldr	r0, [sp, #20]
}
 80078c6:	b007      	add	sp, #28
 80078c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80078ca:	2280      	movs	r2, #128	; 0x80
 80078cc:	e7ef      	b.n	80078ae <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80078ce:	f1be 0f00 	cmp.w	lr, #0
 80078d2:	d1f7      	bne.n	80078c4 <osThreadNew+0x60>
      if (mem == 0) {
 80078d4:	6924      	ldr	r4, [r4, #16]
 80078d6:	2c00      	cmp	r4, #0
 80078d8:	d1f4      	bne.n	80078c4 <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80078da:	ac05      	add	r4, sp, #20
 80078dc:	e9cd 7400 	strd	r7, r4, [sp]
 80078e0:	b292      	uxth	r2, r2
 80078e2:	f001 fb37 	bl	8008f54 <xTaskCreate>
 80078e6:	2801      	cmp	r0, #1
          hTask = NULL;
 80078e8:	bf1c      	itt	ne
 80078ea:	2300      	movne	r3, #0
 80078ec:	9305      	strne	r3, [sp, #20]
 80078ee:	e7e9      	b.n	80078c4 <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80078f0:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 80078f4:	9500      	str	r5, [sp, #0]
 80078f6:	f001 faf5 	bl	8008ee4 <xTaskCreateStatic>
 80078fa:	9005      	str	r0, [sp, #20]
 80078fc:	e7e2      	b.n	80078c4 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 80078fe:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 8007900:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 8007902:	4621      	mov	r1, r4
 8007904:	e7e9      	b.n	80078da <osThreadNew+0x76>
        return (NULL);
 8007906:	2000      	movs	r0, #0
 8007908:	e7dd      	b.n	80078c6 <osThreadNew+0x62>
 800790a:	bf00      	nop
 800790c:	20001904 	.word	0x20001904

08007910 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007910:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007912:	460e      	mov	r6, r1
 8007914:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007916:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800791a:	b11b      	cbz	r3, 8007924 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800791c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800791e:	4620      	mov	r0, r4
 8007920:	b002      	add	sp, #8
 8007922:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007924:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007928:	b913      	cbnz	r3, 8007930 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800792a:	f3ef 8311 	mrs	r3, BASEPRI
 800792e:	b11b      	cbz	r3, 8007938 <osSemaphoreNew+0x28>
 8007930:	4b21      	ldr	r3, [pc, #132]	; (80079b8 <osSemaphoreNew+0xa8>)
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	2b02      	cmp	r3, #2
 8007936:	d0f1      	beq.n	800791c <osSemaphoreNew+0xc>
 8007938:	2800      	cmp	r0, #0
 800793a:	d0ef      	beq.n	800791c <osSemaphoreNew+0xc>
 800793c:	42b0      	cmp	r0, r6
 800793e:	d3ed      	bcc.n	800791c <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8007940:	b1ed      	cbz	r5, 800797e <osSemaphoreNew+0x6e>
 8007942:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8007946:	b1c3      	cbz	r3, 800797a <osSemaphoreNew+0x6a>
 8007948:	2a4f      	cmp	r2, #79	; 0x4f
 800794a:	d9e7      	bls.n	800791c <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800794c:	2801      	cmp	r0, #1
 800794e:	d126      	bne.n	800799e <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007950:	2203      	movs	r2, #3
 8007952:	9200      	str	r2, [sp, #0]
 8007954:	2200      	movs	r2, #0
 8007956:	4611      	mov	r1, r2
 8007958:	f000 fd2c 	bl	80083b4 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 800795c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800795e:	2800      	cmp	r0, #0
 8007960:	d0dc      	beq.n	800791c <osSemaphoreNew+0xc>
 8007962:	b1ce      	cbz	r6, 8007998 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007964:	2300      	movs	r3, #0
 8007966:	461a      	mov	r2, r3
 8007968:	4619      	mov	r1, r3
 800796a:	f000 fdd9 	bl	8008520 <xQueueGenericSend>
 800796e:	2801      	cmp	r0, #1
 8007970:	d012      	beq.n	8007998 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8007972:	4620      	mov	r0, r4
 8007974:	f001 f914 	bl	8008ba0 <vQueueDelete>
 8007978:	e7d0      	b.n	800791c <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800797a:	2a00      	cmp	r2, #0
 800797c:	d1ce      	bne.n	800791c <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800797e:	2801      	cmp	r0, #1
 8007980:	d104      	bne.n	800798c <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8007982:	2203      	movs	r2, #3
 8007984:	2100      	movs	r1, #0
 8007986:	f000 fd63 	bl	8008450 <xQueueGenericCreate>
 800798a:	e7e7      	b.n	800795c <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800798c:	4631      	mov	r1, r6
 800798e:	f000 fda8 	bl	80084e2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007992:	4604      	mov	r4, r0
 8007994:	2800      	cmp	r0, #0
 8007996:	d0c1      	beq.n	800791c <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8007998:	b945      	cbnz	r5, 80079ac <osSemaphoreNew+0x9c>
          name = NULL;
 800799a:	4629      	mov	r1, r5
 800799c:	e007      	b.n	80079ae <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800799e:	461a      	mov	r2, r3
 80079a0:	4631      	mov	r1, r6
 80079a2:	f000 fd7c 	bl	800849e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80079a6:	4604      	mov	r4, r0
 80079a8:	2800      	cmp	r0, #0
 80079aa:	d0b7      	beq.n	800791c <osSemaphoreNew+0xc>
          name = attr->name;
 80079ac:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 80079ae:	4620      	mov	r0, r4
 80079b0:	f001 f8d0 	bl	8008b54 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80079b4:	e7b3      	b.n	800791e <osSemaphoreNew+0xe>
 80079b6:	bf00      	nop
 80079b8:	20001904 	.word	0x20001904

080079bc <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80079bc:	b513      	push	{r0, r1, r4, lr}
 80079be:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80079c0:	b918      	cbnz	r0, 80079ca <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 80079c2:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80079c6:	b002      	add	sp, #8
 80079c8:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80079ca:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 80079ce:	b16b      	cbz	r3, 80079ec <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 80079d0:	2c00      	cmp	r4, #0
 80079d2:	d1f6      	bne.n	80079c2 <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 80079d4:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80079d6:	4621      	mov	r1, r4
      yield = pdFALSE;
 80079d8:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80079dc:	f001 f86a 	bl	8008ab4 <xQueueReceiveFromISR>
 80079e0:	2801      	cmp	r0, #1
 80079e2:	d113      	bne.n	8007a0c <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 80079e4:	9b01      	ldr	r3, [sp, #4]
 80079e6:	b9a3      	cbnz	r3, 8007a12 <osSemaphoreAcquire+0x56>
  stat = osOK;
 80079e8:	2000      	movs	r0, #0
 80079ea:	e7ec      	b.n	80079c6 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80079ec:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80079f0:	b913      	cbnz	r3, 80079f8 <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80079f2:	f3ef 8311 	mrs	r3, BASEPRI
 80079f6:	b11b      	cbz	r3, 8007a00 <osSemaphoreAcquire+0x44>
 80079f8:	4b0c      	ldr	r3, [pc, #48]	; (8007a2c <osSemaphoreAcquire+0x70>)
 80079fa:	681b      	ldr	r3, [r3, #0]
 80079fc:	2b02      	cmp	r3, #2
 80079fe:	d0e7      	beq.n	80079d0 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007a00:	4621      	mov	r1, r4
 8007a02:	f000 ff95 	bl	8008930 <xQueueSemaphoreTake>
 8007a06:	2801      	cmp	r0, #1
 8007a08:	d0ee      	beq.n	80079e8 <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 8007a0a:	b95c      	cbnz	r4, 8007a24 <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 8007a0c:	f06f 0002 	mvn.w	r0, #2
 8007a10:	e7d9      	b.n	80079c6 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007a12:	4b07      	ldr	r3, [pc, #28]	; (8007a30 <osSemaphoreAcquire+0x74>)
 8007a14:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a18:	601a      	str	r2, [r3, #0]
 8007a1a:	f3bf 8f4f 	dsb	sy
 8007a1e:	f3bf 8f6f 	isb	sy
 8007a22:	e7e1      	b.n	80079e8 <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 8007a24:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007a28:	e7cd      	b.n	80079c6 <osSemaphoreAcquire+0xa>
 8007a2a:	bf00      	nop
 8007a2c:	20001904 	.word	0x20001904
 8007a30:	e000ed04 	.word	0xe000ed04

08007a34 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007a34:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007a36:	b368      	cbz	r0, 8007a94 <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007a38:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007a3c:	b153      	cbz	r3, 8007a54 <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 8007a3e:	a902      	add	r1, sp, #8
 8007a40:	2400      	movs	r4, #0
 8007a42:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007a46:	f000 fe7e 	bl	8008746 <xQueueGiveFromISR>
 8007a4a:	2801      	cmp	r0, #1
 8007a4c:	d014      	beq.n	8007a78 <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007a4e:	f06f 0002 	mvn.w	r0, #2
 8007a52:	e014      	b.n	8007a7e <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007a54:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007a58:	b913      	cbnz	r3, 8007a60 <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007a5a:	f3ef 8311 	mrs	r3, BASEPRI
 8007a5e:	b11b      	cbz	r3, 8007a68 <osSemaphoreRelease+0x34>
 8007a60:	4b0e      	ldr	r3, [pc, #56]	; (8007a9c <osSemaphoreRelease+0x68>)
 8007a62:	681b      	ldr	r3, [r3, #0]
 8007a64:	2b02      	cmp	r3, #2
 8007a66:	d0ea      	beq.n	8007a3e <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007a68:	2300      	movs	r3, #0
 8007a6a:	461a      	mov	r2, r3
 8007a6c:	4619      	mov	r1, r3
 8007a6e:	f000 fd57 	bl	8008520 <xQueueGenericSend>
 8007a72:	2801      	cmp	r0, #1
 8007a74:	d002      	beq.n	8007a7c <osSemaphoreRelease+0x48>
 8007a76:	e7ea      	b.n	8007a4e <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 8007a78:	9b01      	ldr	r3, [sp, #4]
 8007a7a:	b913      	cbnz	r3, 8007a82 <osSemaphoreRelease+0x4e>
  stat = osOK;
 8007a7c:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007a7e:	b002      	add	sp, #8
 8007a80:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007a82:	4b07      	ldr	r3, [pc, #28]	; (8007aa0 <osSemaphoreRelease+0x6c>)
 8007a84:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a88:	601a      	str	r2, [r3, #0]
 8007a8a:	f3bf 8f4f 	dsb	sy
 8007a8e:	f3bf 8f6f 	isb	sy
 8007a92:	e7f3      	b.n	8007a7c <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 8007a94:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007a98:	e7f1      	b.n	8007a7e <osSemaphoreRelease+0x4a>
 8007a9a:	bf00      	nop
 8007a9c:	20001904 	.word	0x20001904
 8007aa0:	e000ed04 	.word	0xe000ed04

08007aa4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007aa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007aa6:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007aa8:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007aac:	b11b      	cbz	r3, 8007ab6 <osMessageQueueNew+0x12>
  hQueue = NULL;
 8007aae:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007ab0:	4628      	mov	r0, r5
 8007ab2:	b002      	add	sp, #8
 8007ab4:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007ab6:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007aba:	b913      	cbnz	r3, 8007ac2 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007abc:	f3ef 8311 	mrs	r3, BASEPRI
 8007ac0:	b11b      	cbz	r3, 8007aca <osMessageQueueNew+0x26>
 8007ac2:	4b1a      	ldr	r3, [pc, #104]	; (8007b2c <osMessageQueueNew+0x88>)
 8007ac4:	681b      	ldr	r3, [r3, #0]
 8007ac6:	2b02      	cmp	r3, #2
 8007ac8:	d0f1      	beq.n	8007aae <osMessageQueueNew+0xa>
 8007aca:	2800      	cmp	r0, #0
 8007acc:	d0ef      	beq.n	8007aae <osMessageQueueNew+0xa>
 8007ace:	2900      	cmp	r1, #0
 8007ad0:	d0ed      	beq.n	8007aae <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8007ad2:	b304      	cbz	r4, 8007b16 <osMessageQueueNew+0x72>
 8007ad4:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007ad8:	b1ab      	cbz	r3, 8007b06 <osMessageQueueNew+0x62>
 8007ada:	2a4f      	cmp	r2, #79	; 0x4f
 8007adc:	d9e7      	bls.n	8007aae <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007ade:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007ae0:	2a00      	cmp	r2, #0
 8007ae2:	d0e4      	beq.n	8007aae <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007ae4:	6966      	ldr	r6, [r4, #20]
 8007ae6:	fb01 f500 	mul.w	r5, r1, r0
 8007aea:	42ae      	cmp	r6, r5
 8007aec:	d3df      	bcc.n	8007aae <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007aee:	2500      	movs	r5, #0
 8007af0:	9500      	str	r5, [sp, #0]
 8007af2:	f000 fc5f 	bl	80083b4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007af6:	4605      	mov	r5, r0
 8007af8:	2800      	cmp	r0, #0
 8007afa:	d0d8      	beq.n	8007aae <osMessageQueueNew+0xa>
        name = attr->name;
 8007afc:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 8007afe:	4628      	mov	r0, r5
 8007b00:	f001 f828 	bl	8008b54 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007b04:	e7d4      	b.n	8007ab0 <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007b06:	2a00      	cmp	r2, #0
 8007b08:	d1d1      	bne.n	8007aae <osMessageQueueNew+0xa>
 8007b0a:	6923      	ldr	r3, [r4, #16]
 8007b0c:	2b00      	cmp	r3, #0
 8007b0e:	d1ce      	bne.n	8007aae <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007b10:	6963      	ldr	r3, [r4, #20]
 8007b12:	2b00      	cmp	r3, #0
 8007b14:	d1cb      	bne.n	8007aae <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8007b16:	2200      	movs	r2, #0
 8007b18:	f000 fc9a 	bl	8008450 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007b1c:	4605      	mov	r5, r0
 8007b1e:	2800      	cmp	r0, #0
 8007b20:	d0c5      	beq.n	8007aae <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8007b22:	2c00      	cmp	r4, #0
 8007b24:	d1ea      	bne.n	8007afc <osMessageQueueNew+0x58>
        name = NULL;
 8007b26:	4621      	mov	r1, r4
 8007b28:	e7e9      	b.n	8007afe <osMessageQueueNew+0x5a>
 8007b2a:	bf00      	nop
 8007b2c:	20001904 	.word	0x20001904

08007b30 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007b30:	b513      	push	{r0, r1, r4, lr}
 8007b32:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007b34:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007b38:	b123      	cbz	r3, 8007b44 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007b3a:	b9d8      	cbnz	r0, 8007b74 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8007b3c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007b40:	b002      	add	sp, #8
 8007b42:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007b44:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007b48:	b913      	cbnz	r3, 8007b50 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007b4a:	f3ef 8311 	mrs	r3, BASEPRI
 8007b4e:	b11b      	cbz	r3, 8007b58 <osMessageQueuePut+0x28>
 8007b50:	4b16      	ldr	r3, [pc, #88]	; (8007bac <osMessageQueuePut+0x7c>)
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	2b02      	cmp	r3, #2
 8007b56:	d0f0      	beq.n	8007b3a <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007b58:	2800      	cmp	r0, #0
 8007b5a:	d0ef      	beq.n	8007b3c <osMessageQueuePut+0xc>
 8007b5c:	2900      	cmp	r1, #0
 8007b5e:	d0ed      	beq.n	8007b3c <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007b60:	2300      	movs	r3, #0
 8007b62:	4622      	mov	r2, r4
 8007b64:	f000 fcdc 	bl	8008520 <xQueueGenericSend>
 8007b68:	2801      	cmp	r0, #1
 8007b6a:	d011      	beq.n	8007b90 <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 8007b6c:	b9dc      	cbnz	r4, 8007ba6 <osMessageQueuePut+0x76>
          stat = osErrorResource;
 8007b6e:	f06f 0002 	mvn.w	r0, #2
 8007b72:	e7e5      	b.n	8007b40 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007b74:	2900      	cmp	r1, #0
 8007b76:	d0e1      	beq.n	8007b3c <osMessageQueuePut+0xc>
 8007b78:	2c00      	cmp	r4, #0
 8007b7a:	d1df      	bne.n	8007b3c <osMessageQueuePut+0xc>
      yield = pdFALSE;
 8007b7c:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007b7e:	4623      	mov	r3, r4
      yield = pdFALSE;
 8007b80:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007b84:	f000 fd7e 	bl	8008684 <xQueueGenericSendFromISR>
 8007b88:	2801      	cmp	r0, #1
 8007b8a:	d1f0      	bne.n	8007b6e <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8007b8c:	9b01      	ldr	r3, [sp, #4]
 8007b8e:	b90b      	cbnz	r3, 8007b94 <osMessageQueuePut+0x64>
  stat = osOK;
 8007b90:	2000      	movs	r0, #0
 8007b92:	e7d5      	b.n	8007b40 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8007b94:	4b06      	ldr	r3, [pc, #24]	; (8007bb0 <osMessageQueuePut+0x80>)
 8007b96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b9a:	601a      	str	r2, [r3, #0]
 8007b9c:	f3bf 8f4f 	dsb	sy
 8007ba0:	f3bf 8f6f 	isb	sy
 8007ba4:	e7f4      	b.n	8007b90 <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 8007ba6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007baa:	e7c9      	b.n	8007b40 <osMessageQueuePut+0x10>
 8007bac:	20001904 	.word	0x20001904
 8007bb0:	e000ed04 	.word	0xe000ed04

08007bb4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007bb4:	b513      	push	{r0, r1, r4, lr}
 8007bb6:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007bb8:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007bbc:	b123      	cbz	r3, 8007bc8 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007bbe:	b9d0      	cbnz	r0, 8007bf6 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8007bc0:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007bc4:	b002      	add	sp, #8
 8007bc6:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007bc8:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007bcc:	b913      	cbnz	r3, 8007bd4 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007bce:	f3ef 8311 	mrs	r3, BASEPRI
 8007bd2:	b11b      	cbz	r3, 8007bdc <osMessageQueueGet+0x28>
 8007bd4:	4b15      	ldr	r3, [pc, #84]	; (8007c2c <osMessageQueueGet+0x78>)
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	2b02      	cmp	r3, #2
 8007bda:	d0f0      	beq.n	8007bbe <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007bdc:	2800      	cmp	r0, #0
 8007bde:	d0ef      	beq.n	8007bc0 <osMessageQueueGet+0xc>
 8007be0:	2900      	cmp	r1, #0
 8007be2:	d0ed      	beq.n	8007bc0 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007be4:	4622      	mov	r2, r4
 8007be6:	f000 fe03 	bl	80087f0 <xQueueReceive>
 8007bea:	2801      	cmp	r0, #1
 8007bec:	d010      	beq.n	8007c10 <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 8007bee:	b9d4      	cbnz	r4, 8007c26 <osMessageQueueGet+0x72>
          stat = osErrorResource;
 8007bf0:	f06f 0002 	mvn.w	r0, #2
 8007bf4:	e7e6      	b.n	8007bc4 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007bf6:	2900      	cmp	r1, #0
 8007bf8:	d0e2      	beq.n	8007bc0 <osMessageQueueGet+0xc>
 8007bfa:	2c00      	cmp	r4, #0
 8007bfc:	d1e0      	bne.n	8007bc0 <osMessageQueueGet+0xc>
      yield = pdFALSE;
 8007bfe:	aa02      	add	r2, sp, #8
 8007c00:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007c04:	f000 ff56 	bl	8008ab4 <xQueueReceiveFromISR>
 8007c08:	2801      	cmp	r0, #1
 8007c0a:	d1f1      	bne.n	8007bf0 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8007c0c:	9b01      	ldr	r3, [sp, #4]
 8007c0e:	b90b      	cbnz	r3, 8007c14 <osMessageQueueGet+0x60>
  stat = osOK;
 8007c10:	2000      	movs	r0, #0
 8007c12:	e7d7      	b.n	8007bc4 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007c14:	4b06      	ldr	r3, [pc, #24]	; (8007c30 <osMessageQueueGet+0x7c>)
 8007c16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007c1a:	601a      	str	r2, [r3, #0]
 8007c1c:	f3bf 8f4f 	dsb	sy
 8007c20:	f3bf 8f6f 	isb	sy
 8007c24:	e7f4      	b.n	8007c10 <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 8007c26:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007c2a:	e7cb      	b.n	8007bc4 <osMessageQueueGet+0x10>
 8007c2c:	20001904 	.word	0x20001904
 8007c30:	e000ed04 	.word	0xe000ed04

08007c34 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007c34:	4b03      	ldr	r3, [pc, #12]	; (8007c44 <vApplicationGetIdleTaskMemory+0x10>)
 8007c36:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007c38:	4b03      	ldr	r3, [pc, #12]	; (8007c48 <vApplicationGetIdleTaskMemory+0x14>)
 8007c3a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007c3c:	2380      	movs	r3, #128	; 0x80
 8007c3e:	6013      	str	r3, [r2, #0]
}
 8007c40:	4770      	bx	lr
 8007c42:	bf00      	nop
 8007c44:	200018a4 	.word	0x200018a4
 8007c48:	200016a4 	.word	0x200016a4

08007c4c <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007c4c:	4b03      	ldr	r3, [pc, #12]	; (8007c5c <vApplicationGetTimerTaskMemory+0x10>)
 8007c4e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007c50:	4b03      	ldr	r3, [pc, #12]	; (8007c60 <vApplicationGetTimerTaskMemory+0x14>)
 8007c52:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007c54:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007c58:	6013      	str	r3, [r2, #0]
}
 8007c5a:	4770      	bx	lr
 8007c5c:	20001d08 	.word	0x20001d08
 8007c60:	20001908 	.word	0x20001908

08007c64 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007c64:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007c66:	4b0f      	ldr	r3, [pc, #60]	; (8007ca4 <prvInsertBlockIntoFreeList+0x40>)
 8007c68:	681a      	ldr	r2, [r3, #0]
 8007c6a:	4282      	cmp	r2, r0
 8007c6c:	d318      	bcc.n	8007ca0 <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007c6e:	685c      	ldr	r4, [r3, #4]
 8007c70:	1919      	adds	r1, r3, r4
 8007c72:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007c74:	bf01      	itttt	eq
 8007c76:	6841      	ldreq	r1, [r0, #4]
 8007c78:	4618      	moveq	r0, r3
 8007c7a:	1909      	addeq	r1, r1, r4
 8007c7c:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007c7e:	6844      	ldr	r4, [r0, #4]
 8007c80:	1901      	adds	r1, r0, r4
 8007c82:	428a      	cmp	r2, r1
 8007c84:	d107      	bne.n	8007c96 <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007c86:	4908      	ldr	r1, [pc, #32]	; (8007ca8 <prvInsertBlockIntoFreeList+0x44>)
 8007c88:	6809      	ldr	r1, [r1, #0]
 8007c8a:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007c8c:	bf1f      	itttt	ne
 8007c8e:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007c90:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007c92:	1909      	addne	r1, r1, r4
 8007c94:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007c96:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8007c98:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007c9a:	bf18      	it	ne
 8007c9c:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007c9e:	bd10      	pop	{r4, pc}
 8007ca0:	4613      	mov	r3, r2
 8007ca2:	e7e1      	b.n	8007c68 <prvInsertBlockIntoFreeList+0x4>
 8007ca4:	20011d78 	.word	0x20011d78
 8007ca8:	20001d68 	.word	0x20001d68

08007cac <pvPortMalloc>:
{
 8007cac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007cb0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007cb2:	f001 f9c1 	bl	8009038 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007cb6:	493d      	ldr	r1, [pc, #244]	; (8007dac <pvPortMalloc+0x100>)
 8007cb8:	4d3d      	ldr	r5, [pc, #244]	; (8007db0 <pvPortMalloc+0x104>)
 8007cba:	680b      	ldr	r3, [r1, #0]
 8007cbc:	b9fb      	cbnz	r3, 8007cfe <pvPortMalloc+0x52>
	uxAddress = ( size_t ) ucHeap;
 8007cbe:	4a3d      	ldr	r2, [pc, #244]	; (8007db4 <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007cc0:	0756      	lsls	r6, r2, #29
 8007cc2:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007cc6:	bf1d      	ittte	ne
 8007cc8:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007cca:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007cce:	1a9b      	subne	r3, r3, r2
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007cd0:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007cd4:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007cd6:	4e38      	ldr	r6, [pc, #224]	; (8007db8 <pvPortMalloc+0x10c>)
	uxAddress -= xHeapStructSize;
 8007cd8:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007cda:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007cde:	2000      	movs	r0, #0
 8007ce0:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007ce2:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007ce4:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007ce8:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8007cea:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007cec:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007cf0:	4b32      	ldr	r3, [pc, #200]	; (8007dbc <pvPortMalloc+0x110>)
 8007cf2:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007cf4:	4b32      	ldr	r3, [pc, #200]	; (8007dc0 <pvPortMalloc+0x114>)
 8007cf6:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007cf8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007cfc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007cfe:	682f      	ldr	r7, [r5, #0]
 8007d00:	4227      	tst	r7, r4
 8007d02:	d14e      	bne.n	8007da2 <pvPortMalloc+0xf6>
			if( xWantedSize > 0 )
 8007d04:	2c00      	cmp	r4, #0
 8007d06:	d03f      	beq.n	8007d88 <pvPortMalloc+0xdc>
				xWantedSize += xHeapStructSize;
 8007d08:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007d0c:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007d0e:	bf1c      	itt	ne
 8007d10:	f023 0307 	bicne.w	r3, r3, #7
 8007d14:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007d16:	2b00      	cmp	r3, #0
 8007d18:	d043      	beq.n	8007da2 <pvPortMalloc+0xf6>
 8007d1a:	4a29      	ldr	r2, [pc, #164]	; (8007dc0 <pvPortMalloc+0x114>)
 8007d1c:	6816      	ldr	r6, [r2, #0]
 8007d1e:	429e      	cmp	r6, r3
 8007d20:	4690      	mov	r8, r2
 8007d22:	d33e      	bcc.n	8007da2 <pvPortMalloc+0xf6>
				pxBlock = xStart.pxNextFreeBlock;
 8007d24:	4a24      	ldr	r2, [pc, #144]	; (8007db8 <pvPortMalloc+0x10c>)
 8007d26:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007d28:	6868      	ldr	r0, [r5, #4]
 8007d2a:	4298      	cmp	r0, r3
 8007d2c:	d201      	bcs.n	8007d32 <pvPortMalloc+0x86>
 8007d2e:	682c      	ldr	r4, [r5, #0]
 8007d30:	b9a4      	cbnz	r4, 8007d5c <pvPortMalloc+0xb0>
				if( pxBlock != pxEnd )
 8007d32:	6809      	ldr	r1, [r1, #0]
 8007d34:	42a9      	cmp	r1, r5
 8007d36:	d034      	beq.n	8007da2 <pvPortMalloc+0xf6>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007d38:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007d3a:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007d3c:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007d3e:	1ac2      	subs	r2, r0, r3
 8007d40:	2a10      	cmp	r2, #16
 8007d42:	d912      	bls.n	8007d6a <pvPortMalloc+0xbe>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007d44:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007d46:	0741      	lsls	r1, r0, #29
 8007d48:	d00b      	beq.n	8007d62 <pvPortMalloc+0xb6>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007d4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d4e:	f383 8811 	msr	BASEPRI, r3
 8007d52:	f3bf 8f6f 	isb	sy
 8007d56:	f3bf 8f4f 	dsb	sy
 8007d5a:	e7fe      	b.n	8007d5a <pvPortMalloc+0xae>
 8007d5c:	462a      	mov	r2, r5
 8007d5e:	4625      	mov	r5, r4
 8007d60:	e7e2      	b.n	8007d28 <pvPortMalloc+0x7c>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007d62:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007d64:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007d66:	f7ff ff7d 	bl	8007c64 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007d6a:	4914      	ldr	r1, [pc, #80]	; (8007dbc <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007d6c:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007d6e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007d70:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007d72:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007d74:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8007d76:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007d7a:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007d7e:	bf38      	it	cc
 8007d80:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007d82:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007d84:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007d86:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8007d88:	f001 f9f4 	bl	8009174 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007d8c:	0763      	lsls	r3, r4, #29
 8007d8e:	d00a      	beq.n	8007da6 <pvPortMalloc+0xfa>
 8007d90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d94:	f383 8811 	msr	BASEPRI, r3
 8007d98:	f3bf 8f6f 	isb	sy
 8007d9c:	f3bf 8f4f 	dsb	sy
 8007da0:	e7fe      	b.n	8007da0 <pvPortMalloc+0xf4>
void *pvReturn = NULL;
 8007da2:	2400      	movs	r4, #0
 8007da4:	e7f0      	b.n	8007d88 <pvPortMalloc+0xdc>
}
 8007da6:	4620      	mov	r0, r4
 8007da8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007dac:	20001d68 	.word	0x20001d68
 8007db0:	20011d6c 	.word	0x20011d6c
 8007db4:	20001d6c 	.word	0x20001d6c
 8007db8:	20011d78 	.word	0x20011d78
 8007dbc:	20011d74 	.word	0x20011d74
 8007dc0:	20011d70 	.word	0x20011d70

08007dc4 <vPortFree>:
{
 8007dc4:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007dc6:	4604      	mov	r4, r0
 8007dc8:	b370      	cbz	r0, 8007e28 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007dca:	4a18      	ldr	r2, [pc, #96]	; (8007e2c <vPortFree+0x68>)
 8007dcc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007dd0:	6812      	ldr	r2, [r2, #0]
 8007dd2:	4213      	tst	r3, r2
 8007dd4:	d108      	bne.n	8007de8 <vPortFree+0x24>
 8007dd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dda:	f383 8811 	msr	BASEPRI, r3
 8007dde:	f3bf 8f6f 	isb	sy
 8007de2:	f3bf 8f4f 	dsb	sy
 8007de6:	e7fe      	b.n	8007de6 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007de8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007dec:	b141      	cbz	r1, 8007e00 <vPortFree+0x3c>
 8007dee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007df2:	f383 8811 	msr	BASEPRI, r3
 8007df6:	f3bf 8f6f 	isb	sy
 8007dfa:	f3bf 8f4f 	dsb	sy
 8007dfe:	e7fe      	b.n	8007dfe <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007e00:	ea23 0302 	bic.w	r3, r3, r2
 8007e04:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007e08:	f001 f916 	bl	8009038 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007e0c:	4a08      	ldr	r2, [pc, #32]	; (8007e30 <vPortFree+0x6c>)
 8007e0e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007e12:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007e14:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007e18:	440b      	add	r3, r1
 8007e1a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007e1c:	f7ff ff22 	bl	8007c64 <prvInsertBlockIntoFreeList>
}
 8007e20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8007e24:	f001 b9a6 	b.w	8009174 <xTaskResumeAll>
}
 8007e28:	bd10      	pop	{r4, pc}
 8007e2a:	bf00      	nop
 8007e2c:	20011d6c 	.word	0x20011d6c
 8007e30:	20011d70 	.word	0x20011d70

08007e34 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007e34:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007e38:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007e3c:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007e3e:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007e42:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007e44:	2300      	movs	r3, #0
 8007e46:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007e48:	4770      	bx	lr

08007e4a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007e4a:	2300      	movs	r3, #0
 8007e4c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007e4e:	4770      	bx	lr

08007e50 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007e50:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007e52:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007e54:	689a      	ldr	r2, [r3, #8]
 8007e56:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007e58:	689a      	ldr	r2, [r3, #8]
 8007e5a:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007e5c:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007e5e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007e60:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007e62:	3301      	adds	r3, #1
 8007e64:	6003      	str	r3, [r0, #0]
}
 8007e66:	4770      	bx	lr

08007e68 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007e68:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007e6a:	1c53      	adds	r3, r2, #1
{
 8007e6c:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 8007e6e:	d10a      	bne.n	8007e86 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007e70:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007e72:	685a      	ldr	r2, [r3, #4]
 8007e74:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007e76:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007e78:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007e7a:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007e7c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007e7e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007e80:	3301      	adds	r3, #1
 8007e82:	6003      	str	r3, [r0, #0]
}
 8007e84:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007e86:	f100 0308 	add.w	r3, r0, #8
 8007e8a:	685c      	ldr	r4, [r3, #4]
 8007e8c:	6825      	ldr	r5, [r4, #0]
 8007e8e:	4295      	cmp	r5, r2
 8007e90:	d8ef      	bhi.n	8007e72 <vListInsert+0xa>
 8007e92:	4623      	mov	r3, r4
 8007e94:	e7f9      	b.n	8007e8a <vListInsert+0x22>

08007e96 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007e96:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007e9a:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007e9c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007e9e:	6882      	ldr	r2, [r0, #8]
 8007ea0:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007ea2:	6859      	ldr	r1, [r3, #4]
 8007ea4:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007ea6:	bf08      	it	eq
 8007ea8:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007eaa:	2200      	movs	r2, #0
 8007eac:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007eae:	681a      	ldr	r2, [r3, #0]
 8007eb0:	3a01      	subs	r2, #1
 8007eb2:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007eb4:	6818      	ldr	r0, [r3, #0]
}
 8007eb6:	4770      	bx	lr

08007eb8 <prvTaskExitError>:
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 8007eb8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007eba:	2300      	movs	r3, #0
 8007ebc:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 8007ebe:	4b0d      	ldr	r3, [pc, #52]	; (8007ef4 <prvTaskExitError+0x3c>)
 8007ec0:	681b      	ldr	r3, [r3, #0]
 8007ec2:	3301      	adds	r3, #1
 8007ec4:	d008      	beq.n	8007ed8 <prvTaskExitError+0x20>
 8007ec6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007eca:	f383 8811 	msr	BASEPRI, r3
 8007ece:	f3bf 8f6f 	isb	sy
 8007ed2:	f3bf 8f4f 	dsb	sy
 8007ed6:	e7fe      	b.n	8007ed6 <prvTaskExitError+0x1e>
 8007ed8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007edc:	f383 8811 	msr	BASEPRI, r3
 8007ee0:	f3bf 8f6f 	isb	sy
 8007ee4:	f3bf 8f4f 	dsb	sy
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 8007ee8:	9b01      	ldr	r3, [sp, #4]
 8007eea:	2b00      	cmp	r3, #0
 8007eec:	d0fc      	beq.n	8007ee8 <prvTaskExitError+0x30>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 8007eee:	b002      	add	sp, #8
 8007ef0:	4770      	bx	lr
 8007ef2:	bf00      	nop
 8007ef4:	20000090 	.word	0x20000090

08007ef8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007ef8:	4808      	ldr	r0, [pc, #32]	; (8007f1c <prvPortStartFirstTask+0x24>)
 8007efa:	6800      	ldr	r0, [r0, #0]
 8007efc:	6800      	ldr	r0, [r0, #0]
 8007efe:	f380 8808 	msr	MSP, r0
 8007f02:	f04f 0000 	mov.w	r0, #0
 8007f06:	f380 8814 	msr	CONTROL, r0
 8007f0a:	b662      	cpsie	i
 8007f0c:	b661      	cpsie	f
 8007f0e:	f3bf 8f4f 	dsb	sy
 8007f12:	f3bf 8f6f 	isb	sy
 8007f16:	df00      	svc	0
 8007f18:	bf00      	nop
 8007f1a:	0000      	.short	0x0000
 8007f1c:	e000ed08 	.word	0xe000ed08

08007f20 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007f20:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007f30 <vPortEnableVFP+0x10>
 8007f24:	6801      	ldr	r1, [r0, #0]
 8007f26:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007f2a:	6001      	str	r1, [r0, #0]
 8007f2c:	4770      	bx	lr
 8007f2e:	0000      	.short	0x0000
 8007f30:	e000ed88 	.word	0xe000ed88

08007f34 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007f34:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007f38:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007f3c:	4b07      	ldr	r3, [pc, #28]	; (8007f5c <pxPortInitialiseStack+0x28>)
 8007f3e:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007f42:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007f46:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007f4a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007f4e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007f52:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007f56:	3844      	subs	r0, #68	; 0x44
 8007f58:	4770      	bx	lr
 8007f5a:	bf00      	nop
 8007f5c:	08007eb9 	.word	0x08007eb9

08007f60 <SVC_Handler>:
	__asm volatile (
 8007f60:	4b07      	ldr	r3, [pc, #28]	; (8007f80 <pxCurrentTCBConst2>)
 8007f62:	6819      	ldr	r1, [r3, #0]
 8007f64:	6808      	ldr	r0, [r1, #0]
 8007f66:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f6a:	f380 8809 	msr	PSP, r0
 8007f6e:	f3bf 8f6f 	isb	sy
 8007f72:	f04f 0000 	mov.w	r0, #0
 8007f76:	f380 8811 	msr	BASEPRI, r0
 8007f7a:	4770      	bx	lr
 8007f7c:	f3af 8000 	nop.w

08007f80 <pxCurrentTCBConst2>:
 8007f80:	20011d88 	.word	0x20011d88

08007f84 <vPortEnterCritical>:
 8007f84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f88:	f383 8811 	msr	BASEPRI, r3
 8007f8c:	f3bf 8f6f 	isb	sy
 8007f90:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007f94:	4a0a      	ldr	r2, [pc, #40]	; (8007fc0 <vPortEnterCritical+0x3c>)
 8007f96:	6813      	ldr	r3, [r2, #0]
 8007f98:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007f9a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007f9c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007f9e:	d10d      	bne.n	8007fbc <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007fa0:	4b08      	ldr	r3, [pc, #32]	; (8007fc4 <vPortEnterCritical+0x40>)
 8007fa2:	681b      	ldr	r3, [r3, #0]
 8007fa4:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007fa8:	d008      	beq.n	8007fbc <vPortEnterCritical+0x38>
 8007faa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fae:	f383 8811 	msr	BASEPRI, r3
 8007fb2:	f3bf 8f6f 	isb	sy
 8007fb6:	f3bf 8f4f 	dsb	sy
 8007fba:	e7fe      	b.n	8007fba <vPortEnterCritical+0x36>
}
 8007fbc:	4770      	bx	lr
 8007fbe:	bf00      	nop
 8007fc0:	20000090 	.word	0x20000090
 8007fc4:	e000ed04 	.word	0xe000ed04

08007fc8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007fc8:	4a08      	ldr	r2, [pc, #32]	; (8007fec <vPortExitCritical+0x24>)
 8007fca:	6813      	ldr	r3, [r2, #0]
 8007fcc:	b943      	cbnz	r3, 8007fe0 <vPortExitCritical+0x18>
 8007fce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fd2:	f383 8811 	msr	BASEPRI, r3
 8007fd6:	f3bf 8f6f 	isb	sy
 8007fda:	f3bf 8f4f 	dsb	sy
 8007fde:	e7fe      	b.n	8007fde <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007fe0:	3b01      	subs	r3, #1
 8007fe2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007fe4:	b90b      	cbnz	r3, 8007fea <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007fe6:	f383 8811 	msr	BASEPRI, r3
}
 8007fea:	4770      	bx	lr
 8007fec:	20000090 	.word	0x20000090

08007ff0 <PendSV_Handler>:
	__asm volatile
 8007ff0:	f3ef 8009 	mrs	r0, PSP
 8007ff4:	f3bf 8f6f 	isb	sy
 8007ff8:	4b15      	ldr	r3, [pc, #84]	; (8008050 <pxCurrentTCBConst>)
 8007ffa:	681a      	ldr	r2, [r3, #0]
 8007ffc:	f01e 0f10 	tst.w	lr, #16
 8008000:	bf08      	it	eq
 8008002:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008006:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800800a:	6010      	str	r0, [r2, #0]
 800800c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008010:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008014:	f380 8811 	msr	BASEPRI, r0
 8008018:	f3bf 8f4f 	dsb	sy
 800801c:	f3bf 8f6f 	isb	sy
 8008020:	f001 f91c 	bl	800925c <vTaskSwitchContext>
 8008024:	f04f 0000 	mov.w	r0, #0
 8008028:	f380 8811 	msr	BASEPRI, r0
 800802c:	bc09      	pop	{r0, r3}
 800802e:	6819      	ldr	r1, [r3, #0]
 8008030:	6808      	ldr	r0, [r1, #0]
 8008032:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008036:	f01e 0f10 	tst.w	lr, #16
 800803a:	bf08      	it	eq
 800803c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008040:	f380 8809 	msr	PSP, r0
 8008044:	f3bf 8f6f 	isb	sy
 8008048:	4770      	bx	lr
 800804a:	bf00      	nop
 800804c:	f3af 8000 	nop.w

08008050 <pxCurrentTCBConst>:
 8008050:	20011d88 	.word	0x20011d88

08008054 <SysTick_Handler>:
{
 8008054:	b508      	push	{r3, lr}
	__asm volatile
 8008056:	f04f 0350 	mov.w	r3, #80	; 0x50
 800805a:	f383 8811 	msr	BASEPRI, r3
 800805e:	f3bf 8f6f 	isb	sy
 8008062:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008066:	f000 fff5 	bl	8009054 <xTaskIncrementTick>
 800806a:	b118      	cbz	r0, 8008074 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800806c:	4b03      	ldr	r3, [pc, #12]	; (800807c <SysTick_Handler+0x28>)
 800806e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008072:	601a      	str	r2, [r3, #0]
	__asm volatile
 8008074:	2300      	movs	r3, #0
 8008076:	f383 8811 	msr	BASEPRI, r3
}
 800807a:	bd08      	pop	{r3, pc}
 800807c:	e000ed04 	.word	0xe000ed04

08008080 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008080:	4a08      	ldr	r2, [pc, #32]	; (80080a4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008082:	4909      	ldr	r1, [pc, #36]	; (80080a8 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008084:	2300      	movs	r3, #0
 8008086:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008088:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800808a:	4b08      	ldr	r3, [pc, #32]	; (80080ac <vPortSetupTimerInterrupt+0x2c>)
 800808c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008090:	681b      	ldr	r3, [r3, #0]
 8008092:	fbb3 f3f1 	udiv	r3, r3, r1
 8008096:	4906      	ldr	r1, [pc, #24]	; (80080b0 <vPortSetupTimerInterrupt+0x30>)
 8008098:	3b01      	subs	r3, #1
 800809a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800809c:	2307      	movs	r3, #7
 800809e:	6013      	str	r3, [r2, #0]
}
 80080a0:	4770      	bx	lr
 80080a2:	bf00      	nop
 80080a4:	e000e010 	.word	0xe000e010
 80080a8:	e000e018 	.word	0xe000e018
 80080ac:	20000084 	.word	0x20000084
 80080b0:	e000e014 	.word	0xe000e014

080080b4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80080b4:	4b39      	ldr	r3, [pc, #228]	; (800819c <xPortStartScheduler+0xe8>)
 80080b6:	4a3a      	ldr	r2, [pc, #232]	; (80081a0 <xPortStartScheduler+0xec>)
{
 80080b8:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80080ba:	6819      	ldr	r1, [r3, #0]
 80080bc:	4291      	cmp	r1, r2
 80080be:	d108      	bne.n	80080d2 <xPortStartScheduler+0x1e>
	__asm volatile
 80080c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080c4:	f383 8811 	msr	BASEPRI, r3
 80080c8:	f3bf 8f6f 	isb	sy
 80080cc:	f3bf 8f4f 	dsb	sy
 80080d0:	e7fe      	b.n	80080d0 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80080d2:	681a      	ldr	r2, [r3, #0]
 80080d4:	4b33      	ldr	r3, [pc, #204]	; (80081a4 <xPortStartScheduler+0xf0>)
 80080d6:	429a      	cmp	r2, r3
 80080d8:	d108      	bne.n	80080ec <xPortStartScheduler+0x38>
 80080da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080de:	f383 8811 	msr	BASEPRI, r3
 80080e2:	f3bf 8f6f 	isb	sy
 80080e6:	f3bf 8f4f 	dsb	sy
 80080ea:	e7fe      	b.n	80080ea <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80080ec:	4b2e      	ldr	r3, [pc, #184]	; (80081a8 <xPortStartScheduler+0xf4>)
 80080ee:	781a      	ldrb	r2, [r3, #0]
 80080f0:	b2d2      	uxtb	r2, r2
 80080f2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80080f4:	22ff      	movs	r2, #255	; 0xff
 80080f6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80080f8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80080fa:	4a2c      	ldr	r2, [pc, #176]	; (80081ac <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80080fc:	b2db      	uxtb	r3, r3
 80080fe:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008102:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008106:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800810a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800810c:	4b28      	ldr	r3, [pc, #160]	; (80081b0 <xPortStartScheduler+0xfc>)
 800810e:	2207      	movs	r2, #7
 8008110:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008112:	2100      	movs	r1, #0
 8008114:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008118:	0600      	lsls	r0, r0, #24
 800811a:	f102 34ff 	add.w	r4, r2, #4294967295
 800811e:	d40d      	bmi.n	800813c <xPortStartScheduler+0x88>
 8008120:	b101      	cbz	r1, 8008124 <xPortStartScheduler+0x70>
 8008122:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008124:	681a      	ldr	r2, [r3, #0]
 8008126:	2a03      	cmp	r2, #3
 8008128:	d011      	beq.n	800814e <xPortStartScheduler+0x9a>
 800812a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800812e:	f383 8811 	msr	BASEPRI, r3
 8008132:	f3bf 8f6f 	isb	sy
 8008136:	f3bf 8f4f 	dsb	sy
 800813a:	e7fe      	b.n	800813a <xPortStartScheduler+0x86>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800813c:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8008140:	0052      	lsls	r2, r2, #1
 8008142:	b2d2      	uxtb	r2, r2
 8008144:	f88d 2003 	strb.w	r2, [sp, #3]
 8008148:	2101      	movs	r1, #1
 800814a:	4622      	mov	r2, r4
 800814c:	e7e2      	b.n	8008114 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 800814e:	0212      	lsls	r2, r2, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008150:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8008154:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008156:	9b01      	ldr	r3, [sp, #4]
 8008158:	4a13      	ldr	r2, [pc, #76]	; (80081a8 <xPortStartScheduler+0xf4>)
 800815a:	b2db      	uxtb	r3, r3
 800815c:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800815e:	4b15      	ldr	r3, [pc, #84]	; (80081b4 <xPortStartScheduler+0x100>)
 8008160:	681a      	ldr	r2, [r3, #0]
 8008162:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008166:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008168:	681a      	ldr	r2, [r3, #0]
 800816a:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800816e:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 8008170:	f7ff ff86 	bl	8008080 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008174:	4b10      	ldr	r3, [pc, #64]	; (80081b8 <xPortStartScheduler+0x104>)
 8008176:	2400      	movs	r4, #0
 8008178:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 800817a:	f7ff fed1 	bl	8007f20 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800817e:	4a0f      	ldr	r2, [pc, #60]	; (80081bc <xPortStartScheduler+0x108>)
 8008180:	6813      	ldr	r3, [r2, #0]
 8008182:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008186:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8008188:	f7ff feb6 	bl	8007ef8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800818c:	f001 f866 	bl	800925c <vTaskSwitchContext>
	prvTaskExitError();
 8008190:	f7ff fe92 	bl	8007eb8 <prvTaskExitError>
}
 8008194:	4620      	mov	r0, r4
 8008196:	b002      	add	sp, #8
 8008198:	bd10      	pop	{r4, pc}
 800819a:	bf00      	nop
 800819c:	e000ed00 	.word	0xe000ed00
 80081a0:	410fc271 	.word	0x410fc271
 80081a4:	410fc270 	.word	0x410fc270
 80081a8:	e000e400 	.word	0xe000e400
 80081ac:	20011d80 	.word	0x20011d80
 80081b0:	20011d84 	.word	0x20011d84
 80081b4:	e000ed20 	.word	0xe000ed20
 80081b8:	20000090 	.word	0x20000090
 80081bc:	e000ef34 	.word	0xe000ef34

080081c0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80081c0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80081c4:	2b0f      	cmp	r3, #15
 80081c6:	d90e      	bls.n	80081e6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80081c8:	4a10      	ldr	r2, [pc, #64]	; (800820c <vPortValidateInterruptPriority+0x4c>)
 80081ca:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80081cc:	4a10      	ldr	r2, [pc, #64]	; (8008210 <vPortValidateInterruptPriority+0x50>)
 80081ce:	7812      	ldrb	r2, [r2, #0]
 80081d0:	429a      	cmp	r2, r3
 80081d2:	d908      	bls.n	80081e6 <vPortValidateInterruptPriority+0x26>
 80081d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081d8:	f383 8811 	msr	BASEPRI, r3
 80081dc:	f3bf 8f6f 	isb	sy
 80081e0:	f3bf 8f4f 	dsb	sy
 80081e4:	e7fe      	b.n	80081e4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80081e6:	4b0b      	ldr	r3, [pc, #44]	; (8008214 <vPortValidateInterruptPriority+0x54>)
 80081e8:	4a0b      	ldr	r2, [pc, #44]	; (8008218 <vPortValidateInterruptPriority+0x58>)
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	6812      	ldr	r2, [r2, #0]
 80081ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80081f2:	4293      	cmp	r3, r2
 80081f4:	d908      	bls.n	8008208 <vPortValidateInterruptPriority+0x48>
 80081f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081fa:	f383 8811 	msr	BASEPRI, r3
 80081fe:	f3bf 8f6f 	isb	sy
 8008202:	f3bf 8f4f 	dsb	sy
 8008206:	e7fe      	b.n	8008206 <vPortValidateInterruptPriority+0x46>
	}
 8008208:	4770      	bx	lr
 800820a:	bf00      	nop
 800820c:	e000e3f0 	.word	0xe000e3f0
 8008210:	20011d80 	.word	0x20011d80
 8008214:	e000ed0c 	.word	0xe000ed0c
 8008218:	20011d84 	.word	0x20011d84

0800821c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800821c:	b510      	push	{r4, lr}
 800821e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008220:	f7ff feb0 	bl	8007f84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008224:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008226:	f7ff fecf 	bl	8007fc8 <vPortExitCritical>

	return xReturn;
}
 800822a:	fab4 f084 	clz	r0, r4
 800822e:	0940      	lsrs	r0, r0, #5
 8008230:	bd10      	pop	{r4, pc}

08008232 <prvCopyDataToQueue>:
{
 8008232:	b570      	push	{r4, r5, r6, lr}
 8008234:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008236:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008238:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800823a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800823c:	b942      	cbnz	r2, 8008250 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800823e:	6805      	ldr	r5, [r0, #0]
 8008240:	b99d      	cbnz	r5, 800826a <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008242:	6880      	ldr	r0, [r0, #8]
 8008244:	f001 f95c 	bl	8009500 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008248:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800824a:	3601      	adds	r6, #1
 800824c:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800824e:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008250:	b96d      	cbnz	r5, 800826e <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008252:	6840      	ldr	r0, [r0, #4]
 8008254:	f012 fb46 	bl	801a8e4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008258:	6863      	ldr	r3, [r4, #4]
 800825a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800825c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800825e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008260:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008262:	4293      	cmp	r3, r2
 8008264:	d301      	bcc.n	800826a <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008266:	6823      	ldr	r3, [r4, #0]
 8008268:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800826a:	2000      	movs	r0, #0
 800826c:	e7ed      	b.n	800824a <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800826e:	68c0      	ldr	r0, [r0, #12]
 8008270:	f012 fb38 	bl	801a8e4 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008274:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008276:	68e2      	ldr	r2, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008278:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800827a:	425b      	negs	r3, r3
 800827c:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800827e:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008280:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008282:	bf3e      	ittt	cc
 8008284:	68a2      	ldrcc	r2, [r4, #8]
 8008286:	189b      	addcc	r3, r3, r2
 8008288:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800828a:	2d02      	cmp	r5, #2
 800828c:	d1ed      	bne.n	800826a <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800828e:	b10e      	cbz	r6, 8008294 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8008290:	3e01      	subs	r6, #1
 8008292:	e7ea      	b.n	800826a <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8008294:	4630      	mov	r0, r6
 8008296:	e7d8      	b.n	800824a <prvCopyDataToQueue+0x18>

08008298 <prvCopyDataFromQueue>:
{
 8008298:	4603      	mov	r3, r0
 800829a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800829c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800829e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80082a0:	b162      	cbz	r2, 80082bc <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80082a2:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80082a4:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80082a6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80082a8:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80082aa:	60d9      	str	r1, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80082ac:	bf24      	itt	cs
 80082ae:	6819      	ldrcs	r1, [r3, #0]
 80082b0:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80082b2:	68d9      	ldr	r1, [r3, #12]
}
 80082b4:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80082b8:	f012 bb14 	b.w	801a8e4 <memcpy>
}
 80082bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80082c0:	4770      	bx	lr

080082c2 <prvUnlockQueue>:
{
 80082c2:	b570      	push	{r4, r5, r6, lr}
 80082c4:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80082c6:	f7ff fe5d 	bl	8007f84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80082ca:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80082ce:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80082d2:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80082d4:	2d00      	cmp	r5, #0
 80082d6:	dc14      	bgt.n	8008302 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80082d8:	23ff      	movs	r3, #255	; 0xff
 80082da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80082de:	f7ff fe73 	bl	8007fc8 <vPortExitCritical>
	taskENTER_CRITICAL();
 80082e2:	f7ff fe4f 	bl	8007f84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80082e6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80082ea:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80082ee:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80082f0:	2d00      	cmp	r5, #0
 80082f2:	dc12      	bgt.n	800831a <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80082f4:	23ff      	movs	r3, #255	; 0xff
 80082f6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80082fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80082fe:	f7ff be63 	b.w	8007fc8 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008302:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008304:	2b00      	cmp	r3, #0
 8008306:	d0e7      	beq.n	80082d8 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008308:	4630      	mov	r0, r6
 800830a:	f001 f81b 	bl	8009344 <xTaskRemoveFromEventList>
 800830e:	b108      	cbz	r0, 8008314 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008310:	f001 f8a0 	bl	8009454 <vTaskMissedYield>
 8008314:	3d01      	subs	r5, #1
 8008316:	b26d      	sxtb	r5, r5
 8008318:	e7dc      	b.n	80082d4 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800831a:	6923      	ldr	r3, [r4, #16]
 800831c:	2b00      	cmp	r3, #0
 800831e:	d0e9      	beq.n	80082f4 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008320:	4630      	mov	r0, r6
 8008322:	f001 f80f 	bl	8009344 <xTaskRemoveFromEventList>
 8008326:	b108      	cbz	r0, 800832c <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008328:	f001 f894 	bl	8009454 <vTaskMissedYield>
 800832c:	3d01      	subs	r5, #1
 800832e:	b26d      	sxtb	r5, r5
 8008330:	e7de      	b.n	80082f0 <prvUnlockQueue+0x2e>
	...

08008334 <xQueueGenericReset>:
{
 8008334:	b538      	push	{r3, r4, r5, lr}
 8008336:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008338:	4604      	mov	r4, r0
 800833a:	b940      	cbnz	r0, 800834e <xQueueGenericReset+0x1a>
 800833c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008340:	f383 8811 	msr	BASEPRI, r3
 8008344:	f3bf 8f6f 	isb	sy
 8008348:	f3bf 8f4f 	dsb	sy
 800834c:	e7fe      	b.n	800834c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800834e:	f7ff fe19 	bl	8007f84 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008352:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
 8008356:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008358:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800835a:	4343      	muls	r3, r0
 800835c:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800835e:	1a1b      	subs	r3, r3, r0
 8008360:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008362:	60a1      	str	r1, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008364:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008366:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008368:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800836a:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800836c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008370:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008374:	b995      	cbnz	r5, 800839c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008376:	6923      	ldr	r3, [r4, #16]
 8008378:	b163      	cbz	r3, 8008394 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800837a:	f104 0010 	add.w	r0, r4, #16
 800837e:	f000 ffe1 	bl	8009344 <xTaskRemoveFromEventList>
 8008382:	b138      	cbz	r0, 8008394 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8008384:	4b0a      	ldr	r3, [pc, #40]	; (80083b0 <xQueueGenericReset+0x7c>)
 8008386:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800838a:	601a      	str	r2, [r3, #0]
 800838c:	f3bf 8f4f 	dsb	sy
 8008390:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008394:	f7ff fe18 	bl	8007fc8 <vPortExitCritical>
}
 8008398:	2001      	movs	r0, #1
 800839a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800839c:	f104 0010 	add.w	r0, r4, #16
 80083a0:	f7ff fd48 	bl	8007e34 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80083a4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80083a8:	f7ff fd44 	bl	8007e34 <vListInitialise>
 80083ac:	e7f2      	b.n	8008394 <xQueueGenericReset+0x60>
 80083ae:	bf00      	nop
 80083b0:	e000ed04 	.word	0xe000ed04

080083b4 <xQueueGenericCreateStatic>:
	{
 80083b4:	b513      	push	{r0, r1, r4, lr}
 80083b6:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80083b8:	b940      	cbnz	r0, 80083cc <xQueueGenericCreateStatic+0x18>
 80083ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083be:	f383 8811 	msr	BASEPRI, r3
 80083c2:	f3bf 8f6f 	isb	sy
 80083c6:	f3bf 8f4f 	dsb	sy
 80083ca:	e7fe      	b.n	80083ca <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80083cc:	b943      	cbnz	r3, 80083e0 <xQueueGenericCreateStatic+0x2c>
 80083ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083d2:	f383 8811 	msr	BASEPRI, r3
 80083d6:	f3bf 8f6f 	isb	sy
 80083da:	f3bf 8f4f 	dsb	sy
 80083de:	e7fe      	b.n	80083de <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80083e0:	b14a      	cbz	r2, 80083f6 <xQueueGenericCreateStatic+0x42>
 80083e2:	b991      	cbnz	r1, 800840a <xQueueGenericCreateStatic+0x56>
 80083e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083e8:	f383 8811 	msr	BASEPRI, r3
 80083ec:	f3bf 8f6f 	isb	sy
 80083f0:	f3bf 8f4f 	dsb	sy
 80083f4:	e7fe      	b.n	80083f4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80083f6:	b141      	cbz	r1, 800840a <xQueueGenericCreateStatic+0x56>
 80083f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083fc:	f383 8811 	msr	BASEPRI, r3
 8008400:	f3bf 8f6f 	isb	sy
 8008404:	f3bf 8f4f 	dsb	sy
 8008408:	e7fe      	b.n	8008408 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800840a:	2350      	movs	r3, #80	; 0x50
 800840c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800840e:	9b01      	ldr	r3, [sp, #4]
 8008410:	2b50      	cmp	r3, #80	; 0x50
 8008412:	d008      	beq.n	8008426 <xQueueGenericCreateStatic+0x72>
 8008414:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008418:	f383 8811 	msr	BASEPRI, r3
 800841c:	f3bf 8f6f 	isb	sy
 8008420:	f3bf 8f4f 	dsb	sy
 8008424:	e7fe      	b.n	8008424 <xQueueGenericCreateStatic+0x70>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008426:	2900      	cmp	r1, #0
 8008428:	bf08      	it	eq
 800842a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800842c:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800842e:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008430:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008432:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008436:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800843a:	4619      	mov	r1, r3
 800843c:	4620      	mov	r0, r4
 800843e:	f7ff ff79 	bl	8008334 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008442:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008446:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800844a:	4620      	mov	r0, r4
 800844c:	b002      	add	sp, #8
 800844e:	bd10      	pop	{r4, pc}

08008450 <xQueueGenericCreate>:
	{
 8008450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008452:	460d      	mov	r5, r1
 8008454:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008456:	4606      	mov	r6, r0
 8008458:	b940      	cbnz	r0, 800846c <xQueueGenericCreate+0x1c>
 800845a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800845e:	f383 8811 	msr	BASEPRI, r3
 8008462:	f3bf 8f6f 	isb	sy
 8008466:	f3bf 8f4f 	dsb	sy
 800846a:	e7fe      	b.n	800846a <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800846c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800846e:	3050      	adds	r0, #80	; 0x50
 8008470:	f7ff fc1c 	bl	8007cac <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008474:	4604      	mov	r4, r0
 8008476:	b160      	cbz	r0, 8008492 <xQueueGenericCreate+0x42>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008478:	2300      	movs	r3, #0
 800847a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800847e:	b955      	cbnz	r5, 8008496 <xQueueGenericCreate+0x46>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8008480:	6020      	str	r0, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8008482:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008486:	2101      	movs	r1, #1
 8008488:	4620      	mov	r0, r4
 800848a:	f7ff ff53 	bl	8008334 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800848e:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008492:	4620      	mov	r0, r4
 8008494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008496:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800849a:	6003      	str	r3, [r0, #0]
 800849c:	e7f1      	b.n	8008482 <xQueueGenericCreate+0x32>

0800849e <xQueueCreateCountingSemaphoreStatic>:
	{
 800849e:	b513      	push	{r0, r1, r4, lr}
 80084a0:	4613      	mov	r3, r2
 80084a2:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80084a4:	b940      	cbnz	r0, 80084b8 <xQueueCreateCountingSemaphoreStatic+0x1a>
 80084a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084aa:	f383 8811 	msr	BASEPRI, r3
 80084ae:	f3bf 8f6f 	isb	sy
 80084b2:	f3bf 8f4f 	dsb	sy
 80084b6:	e7fe      	b.n	80084b6 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80084b8:	4288      	cmp	r0, r1
 80084ba:	d208      	bcs.n	80084ce <xQueueCreateCountingSemaphoreStatic+0x30>
 80084bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084c0:	f383 8811 	msr	BASEPRI, r3
 80084c4:	f3bf 8f6f 	isb	sy
 80084c8:	f3bf 8f4f 	dsb	sy
 80084cc:	e7fe      	b.n	80084cc <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80084ce:	2202      	movs	r2, #2
 80084d0:	9200      	str	r2, [sp, #0]
 80084d2:	2200      	movs	r2, #0
 80084d4:	4611      	mov	r1, r2
 80084d6:	f7ff ff6d 	bl	80083b4 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80084da:	b100      	cbz	r0, 80084de <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80084dc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80084de:	b002      	add	sp, #8
 80084e0:	bd10      	pop	{r4, pc}

080084e2 <xQueueCreateCountingSemaphore>:
	{
 80084e2:	b510      	push	{r4, lr}
 80084e4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80084e6:	b940      	cbnz	r0, 80084fa <xQueueCreateCountingSemaphore+0x18>
 80084e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084ec:	f383 8811 	msr	BASEPRI, r3
 80084f0:	f3bf 8f6f 	isb	sy
 80084f4:	f3bf 8f4f 	dsb	sy
 80084f8:	e7fe      	b.n	80084f8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80084fa:	4288      	cmp	r0, r1
 80084fc:	d208      	bcs.n	8008510 <xQueueCreateCountingSemaphore+0x2e>
 80084fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008502:	f383 8811 	msr	BASEPRI, r3
 8008506:	f3bf 8f6f 	isb	sy
 800850a:	f3bf 8f4f 	dsb	sy
 800850e:	e7fe      	b.n	800850e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008510:	2202      	movs	r2, #2
 8008512:	2100      	movs	r1, #0
 8008514:	f7ff ff9c 	bl	8008450 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008518:	b100      	cbz	r0, 800851c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800851a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800851c:	bd10      	pop	{r4, pc}
	...

08008520 <xQueueGenericSend>:
{
 8008520:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008524:	4688      	mov	r8, r1
 8008526:	9201      	str	r2, [sp, #4]
 8008528:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800852a:	4604      	mov	r4, r0
 800852c:	b940      	cbnz	r0, 8008540 <xQueueGenericSend+0x20>
 800852e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008532:	f383 8811 	msr	BASEPRI, r3
 8008536:	f3bf 8f6f 	isb	sy
 800853a:	f3bf 8f4f 	dsb	sy
 800853e:	e7fe      	b.n	800853e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008540:	b951      	cbnz	r1, 8008558 <xQueueGenericSend+0x38>
 8008542:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008544:	b143      	cbz	r3, 8008558 <xQueueGenericSend+0x38>
 8008546:	f04f 0350 	mov.w	r3, #80	; 0x50
 800854a:	f383 8811 	msr	BASEPRI, r3
 800854e:	f3bf 8f6f 	isb	sy
 8008552:	f3bf 8f4f 	dsb	sy
 8008556:	e7fe      	b.n	8008556 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008558:	2f02      	cmp	r7, #2
 800855a:	d10b      	bne.n	8008574 <xQueueGenericSend+0x54>
 800855c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800855e:	2b01      	cmp	r3, #1
 8008560:	d008      	beq.n	8008574 <xQueueGenericSend+0x54>
 8008562:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008566:	f383 8811 	msr	BASEPRI, r3
 800856a:	f3bf 8f6f 	isb	sy
 800856e:	f3bf 8f4f 	dsb	sy
 8008572:	e7fe      	b.n	8008572 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008574:	f000 ff74 	bl	8009460 <xTaskGetSchedulerState>
 8008578:	b950      	cbnz	r0, 8008590 <xQueueGenericSend+0x70>
 800857a:	9e01      	ldr	r6, [sp, #4]
 800857c:	b14e      	cbz	r6, 8008592 <xQueueGenericSend+0x72>
 800857e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008582:	f383 8811 	msr	BASEPRI, r3
 8008586:	f3bf 8f6f 	isb	sy
 800858a:	f3bf 8f4f 	dsb	sy
 800858e:	e7fe      	b.n	800858e <xQueueGenericSend+0x6e>
 8008590:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008592:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8008596:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8008680 <xQueueGenericSend+0x160>
 800859a:	e037      	b.n	800860c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800859c:	9d01      	ldr	r5, [sp, #4]
 800859e:	b91d      	cbnz	r5, 80085a8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 80085a0:	f7ff fd12 	bl	8007fc8 <vPortExitCritical>
			return errQUEUE_FULL;
 80085a4:	2000      	movs	r0, #0
 80085a6:	e050      	b.n	800864a <xQueueGenericSend+0x12a>
				else if( xEntryTimeSet == pdFALSE )
 80085a8:	b916      	cbnz	r6, 80085b0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80085aa:	a802      	add	r0, sp, #8
 80085ac:	f000 ff0a 	bl	80093c4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80085b0:	f7ff fd0a 	bl	8007fc8 <vPortExitCritical>
		vTaskSuspendAll();
 80085b4:	f000 fd40 	bl	8009038 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80085b8:	f7ff fce4 	bl	8007f84 <vPortEnterCritical>
 80085bc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80085c0:	2bff      	cmp	r3, #255	; 0xff
 80085c2:	bf08      	it	eq
 80085c4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80085c8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80085cc:	2bff      	cmp	r3, #255	; 0xff
 80085ce:	bf08      	it	eq
 80085d0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80085d4:	f7ff fcf8 	bl	8007fc8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80085d8:	a901      	add	r1, sp, #4
 80085da:	a802      	add	r0, sp, #8
 80085dc:	f000 fefe 	bl	80093dc <xTaskCheckForTimeOut>
 80085e0:	2800      	cmp	r0, #0
 80085e2:	d146      	bne.n	8008672 <xQueueGenericSend+0x152>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80085e4:	f7ff fcce 	bl	8007f84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80085e8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80085ea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80085ec:	429a      	cmp	r2, r3
 80085ee:	d12f      	bne.n	8008650 <xQueueGenericSend+0x130>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80085f0:	f7ff fcea 	bl	8007fc8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80085f4:	9901      	ldr	r1, [sp, #4]
 80085f6:	f104 0010 	add.w	r0, r4, #16
 80085fa:	f000 fe6b 	bl	80092d4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80085fe:	4620      	mov	r0, r4
 8008600:	f7ff fe5f 	bl	80082c2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008604:	f000 fdb6 	bl	8009174 <xTaskResumeAll>
 8008608:	b350      	cbz	r0, 8008660 <xQueueGenericSend+0x140>
 800860a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800860c:	f7ff fcba 	bl	8007f84 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008610:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008612:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008614:	429a      	cmp	r2, r3
 8008616:	d301      	bcc.n	800861c <xQueueGenericSend+0xfc>
 8008618:	2f02      	cmp	r7, #2
 800861a:	d1bf      	bne.n	800859c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800861c:	463a      	mov	r2, r7
 800861e:	4641      	mov	r1, r8
 8008620:	4620      	mov	r0, r4
 8008622:	f7ff fe06 	bl	8008232 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008626:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008628:	b11b      	cbz	r3, 8008632 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800862a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800862e:	f000 fe89 	bl	8009344 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008632:	b138      	cbz	r0, 8008644 <xQueueGenericSend+0x124>
						queueYIELD_IF_USING_PREEMPTION();
 8008634:	4b12      	ldr	r3, [pc, #72]	; (8008680 <xQueueGenericSend+0x160>)
 8008636:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800863a:	601a      	str	r2, [r3, #0]
 800863c:	f3bf 8f4f 	dsb	sy
 8008640:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008644:	f7ff fcc0 	bl	8007fc8 <vPortExitCritical>
				return pdPASS;
 8008648:	2001      	movs	r0, #1
}
 800864a:	b004      	add	sp, #16
 800864c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8008650:	f7ff fcba 	bl	8007fc8 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008654:	4620      	mov	r0, r4
 8008656:	f7ff fe34 	bl	80082c2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800865a:	f000 fd8b 	bl	8009174 <xTaskResumeAll>
 800865e:	e7d4      	b.n	800860a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008660:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008664:	f8ca 3000 	str.w	r3, [sl]
 8008668:	f3bf 8f4f 	dsb	sy
 800866c:	f3bf 8f6f 	isb	sy
 8008670:	e7cb      	b.n	800860a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8008672:	4620      	mov	r0, r4
 8008674:	f7ff fe25 	bl	80082c2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008678:	f000 fd7c 	bl	8009174 <xTaskResumeAll>
 800867c:	e792      	b.n	80085a4 <xQueueGenericSend+0x84>
 800867e:	bf00      	nop
 8008680:	e000ed04 	.word	0xe000ed04

08008684 <xQueueGenericSendFromISR>:
{
 8008684:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008688:	4689      	mov	r9, r1
 800868a:	4690      	mov	r8, r2
 800868c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800868e:	4604      	mov	r4, r0
 8008690:	b940      	cbnz	r0, 80086a4 <xQueueGenericSendFromISR+0x20>
 8008692:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008696:	f383 8811 	msr	BASEPRI, r3
 800869a:	f3bf 8f6f 	isb	sy
 800869e:	f3bf 8f4f 	dsb	sy
 80086a2:	e7fe      	b.n	80086a2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80086a4:	b951      	cbnz	r1, 80086bc <xQueueGenericSendFromISR+0x38>
 80086a6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80086a8:	b143      	cbz	r3, 80086bc <xQueueGenericSendFromISR+0x38>
 80086aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086ae:	f383 8811 	msr	BASEPRI, r3
 80086b2:	f3bf 8f6f 	isb	sy
 80086b6:	f3bf 8f4f 	dsb	sy
 80086ba:	e7fe      	b.n	80086ba <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80086bc:	2f02      	cmp	r7, #2
 80086be:	d10b      	bne.n	80086d8 <xQueueGenericSendFromISR+0x54>
 80086c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80086c2:	2b01      	cmp	r3, #1
 80086c4:	d008      	beq.n	80086d8 <xQueueGenericSendFromISR+0x54>
 80086c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086ca:	f383 8811 	msr	BASEPRI, r3
 80086ce:	f3bf 8f6f 	isb	sy
 80086d2:	f3bf 8f4f 	dsb	sy
 80086d6:	e7fe      	b.n	80086d6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80086d8:	f7ff fd72 	bl	80081c0 <vPortValidateInterruptPriority>
	__asm volatile
 80086dc:	f3ef 8611 	mrs	r6, BASEPRI
 80086e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086e4:	f383 8811 	msr	BASEPRI, r3
 80086e8:	f3bf 8f6f 	isb	sy
 80086ec:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80086f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80086f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80086f4:	429a      	cmp	r2, r3
 80086f6:	d301      	bcc.n	80086fc <xQueueGenericSendFromISR+0x78>
 80086f8:	2f02      	cmp	r7, #2
 80086fa:	d122      	bne.n	8008742 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80086fc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008700:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8008702:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008704:	4649      	mov	r1, r9
 8008706:	4620      	mov	r0, r4
 8008708:	f7ff fd93 	bl	8008232 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800870c:	1c6b      	adds	r3, r5, #1
 800870e:	d113      	bne.n	8008738 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008710:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008712:	b90b      	cbnz	r3, 8008718 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8008714:	2001      	movs	r0, #1
 8008716:	e00b      	b.n	8008730 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008718:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800871c:	f000 fe12 	bl	8009344 <xTaskRemoveFromEventList>
 8008720:	2800      	cmp	r0, #0
 8008722:	d0f7      	beq.n	8008714 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8008724:	f1b8 0f00 	cmp.w	r8, #0
 8008728:	d0f4      	beq.n	8008714 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800872a:	2001      	movs	r0, #1
 800872c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008730:	f386 8811 	msr	BASEPRI, r6
}
 8008734:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008738:	3501      	adds	r5, #1
 800873a:	b26d      	sxtb	r5, r5
 800873c:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008740:	e7e8      	b.n	8008714 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8008742:	2000      	movs	r0, #0
 8008744:	e7f4      	b.n	8008730 <xQueueGenericSendFromISR+0xac>

08008746 <xQueueGiveFromISR>:
{
 8008746:	b570      	push	{r4, r5, r6, lr}
 8008748:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800874a:	4604      	mov	r4, r0
 800874c:	b940      	cbnz	r0, 8008760 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800874e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008752:	f383 8811 	msr	BASEPRI, r3
 8008756:	f3bf 8f6f 	isb	sy
 800875a:	f3bf 8f4f 	dsb	sy
 800875e:	e7fe      	b.n	800875e <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008760:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008762:	b143      	cbz	r3, 8008776 <xQueueGiveFromISR+0x30>
 8008764:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008768:	f383 8811 	msr	BASEPRI, r3
 800876c:	f3bf 8f6f 	isb	sy
 8008770:	f3bf 8f4f 	dsb	sy
 8008774:	e7fe      	b.n	8008774 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008776:	6803      	ldr	r3, [r0, #0]
 8008778:	b953      	cbnz	r3, 8008790 <xQueueGiveFromISR+0x4a>
 800877a:	6883      	ldr	r3, [r0, #8]
 800877c:	b143      	cbz	r3, 8008790 <xQueueGiveFromISR+0x4a>
 800877e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008782:	f383 8811 	msr	BASEPRI, r3
 8008786:	f3bf 8f6f 	isb	sy
 800878a:	f3bf 8f4f 	dsb	sy
 800878e:	e7fe      	b.n	800878e <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008790:	f7ff fd16 	bl	80081c0 <vPortValidateInterruptPriority>
	__asm volatile
 8008794:	f3ef 8611 	mrs	r6, BASEPRI
 8008798:	f04f 0350 	mov.w	r3, #80	; 0x50
 800879c:	f383 8811 	msr	BASEPRI, r3
 80087a0:	f3bf 8f6f 	isb	sy
 80087a4:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80087a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80087aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80087ac:	4293      	cmp	r3, r2
 80087ae:	d91c      	bls.n	80087ea <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80087b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80087b4:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 80087b6:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80087b8:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80087ba:	1c5a      	adds	r2, r3, #1
 80087bc:	d110      	bne.n	80087e0 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80087be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80087c0:	b90b      	cbnz	r3, 80087c6 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80087c2:	2001      	movs	r0, #1
 80087c4:	e009      	b.n	80087da <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80087c6:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80087ca:	f000 fdbb 	bl	8009344 <xTaskRemoveFromEventList>
 80087ce:	2800      	cmp	r0, #0
 80087d0:	d0f7      	beq.n	80087c2 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80087d2:	2d00      	cmp	r5, #0
 80087d4:	d0f5      	beq.n	80087c2 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80087d6:	2001      	movs	r0, #1
 80087d8:	6028      	str	r0, [r5, #0]
	__asm volatile
 80087da:	f386 8811 	msr	BASEPRI, r6
}
 80087de:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80087e0:	3301      	adds	r3, #1
 80087e2:	b25b      	sxtb	r3, r3
 80087e4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80087e8:	e7eb      	b.n	80087c2 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80087ea:	2000      	movs	r0, #0
 80087ec:	e7f5      	b.n	80087da <xQueueGiveFromISR+0x94>
	...

080087f0 <xQueueReceive>:
{
 80087f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80087f4:	b085      	sub	sp, #20
 80087f6:	460f      	mov	r7, r1
 80087f8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80087fa:	4604      	mov	r4, r0
 80087fc:	b940      	cbnz	r0, 8008810 <xQueueReceive+0x20>
	__asm volatile
 80087fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008802:	f383 8811 	msr	BASEPRI, r3
 8008806:	f3bf 8f6f 	isb	sy
 800880a:	f3bf 8f4f 	dsb	sy
 800880e:	e7fe      	b.n	800880e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008810:	b951      	cbnz	r1, 8008828 <xQueueReceive+0x38>
 8008812:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008814:	b143      	cbz	r3, 8008828 <xQueueReceive+0x38>
 8008816:	f04f 0350 	mov.w	r3, #80	; 0x50
 800881a:	f383 8811 	msr	BASEPRI, r3
 800881e:	f3bf 8f6f 	isb	sy
 8008822:	f3bf 8f4f 	dsb	sy
 8008826:	e7fe      	b.n	8008826 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008828:	f000 fe1a 	bl	8009460 <xTaskGetSchedulerState>
 800882c:	b950      	cbnz	r0, 8008844 <xQueueReceive+0x54>
 800882e:	9e01      	ldr	r6, [sp, #4]
 8008830:	b14e      	cbz	r6, 8008846 <xQueueReceive+0x56>
 8008832:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008836:	f383 8811 	msr	BASEPRI, r3
 800883a:	f3bf 8f6f 	isb	sy
 800883e:	f3bf 8f4f 	dsb	sy
 8008842:	e7fe      	b.n	8008842 <xQueueReceive+0x52>
 8008844:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008846:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 800884a:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 800892c <xQueueReceive+0x13c>
 800884e:	e03b      	b.n	80088c8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008850:	9d01      	ldr	r5, [sp, #4]
 8008852:	b91d      	cbnz	r5, 800885c <xQueueReceive+0x6c>
					taskEXIT_CRITICAL();
 8008854:	f7ff fbb8 	bl	8007fc8 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008858:	2000      	movs	r0, #0
 800885a:	e052      	b.n	8008902 <xQueueReceive+0x112>
				else if( xEntryTimeSet == pdFALSE )
 800885c:	b916      	cbnz	r6, 8008864 <xQueueReceive+0x74>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800885e:	a802      	add	r0, sp, #8
 8008860:	f000 fdb0 	bl	80093c4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008864:	f7ff fbb0 	bl	8007fc8 <vPortExitCritical>
		vTaskSuspendAll();
 8008868:	f000 fbe6 	bl	8009038 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800886c:	f7ff fb8a 	bl	8007f84 <vPortEnterCritical>
 8008870:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008874:	2bff      	cmp	r3, #255	; 0xff
 8008876:	bf08      	it	eq
 8008878:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800887c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008880:	2bff      	cmp	r3, #255	; 0xff
 8008882:	bf08      	it	eq
 8008884:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8008888:	f7ff fb9e 	bl	8007fc8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800888c:	a901      	add	r1, sp, #4
 800888e:	a802      	add	r0, sp, #8
 8008890:	f000 fda4 	bl	80093dc <xTaskCheckForTimeOut>
 8008894:	2800      	cmp	r0, #0
 8008896:	d13d      	bne.n	8008914 <xQueueReceive+0x124>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008898:	4620      	mov	r0, r4
 800889a:	f7ff fcbf 	bl	800821c <prvIsQueueEmpty>
 800889e:	b398      	cbz	r0, 8008908 <xQueueReceive+0x118>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80088a0:	9901      	ldr	r1, [sp, #4]
 80088a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80088a6:	f000 fd15 	bl	80092d4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80088aa:	4620      	mov	r0, r4
 80088ac:	f7ff fd09 	bl	80082c2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80088b0:	f000 fc60 	bl	8009174 <xTaskResumeAll>
 80088b4:	b938      	cbnz	r0, 80088c6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80088b6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80088ba:	f8c9 3000 	str.w	r3, [r9]
 80088be:	f3bf 8f4f 	dsb	sy
 80088c2:	f3bf 8f6f 	isb	sy
 80088c6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80088c8:	f7ff fb5c 	bl	8007f84 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80088cc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80088ce:	2d00      	cmp	r5, #0
 80088d0:	d0be      	beq.n	8008850 <xQueueReceive+0x60>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80088d2:	4639      	mov	r1, r7
 80088d4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80088d6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80088d8:	f7ff fcde 	bl	8008298 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80088dc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80088de:	6923      	ldr	r3, [r4, #16]
 80088e0:	b163      	cbz	r3, 80088fc <xQueueReceive+0x10c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80088e2:	f104 0010 	add.w	r0, r4, #16
 80088e6:	f000 fd2d 	bl	8009344 <xTaskRemoveFromEventList>
 80088ea:	b138      	cbz	r0, 80088fc <xQueueReceive+0x10c>
						queueYIELD_IF_USING_PREEMPTION();
 80088ec:	4b0f      	ldr	r3, [pc, #60]	; (800892c <xQueueReceive+0x13c>)
 80088ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088f2:	601a      	str	r2, [r3, #0]
 80088f4:	f3bf 8f4f 	dsb	sy
 80088f8:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80088fc:	f7ff fb64 	bl	8007fc8 <vPortExitCritical>
				return pdPASS;
 8008900:	2001      	movs	r0, #1
}
 8008902:	b005      	add	sp, #20
 8008904:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8008908:	4620      	mov	r0, r4
 800890a:	f7ff fcda 	bl	80082c2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800890e:	f000 fc31 	bl	8009174 <xTaskResumeAll>
 8008912:	e7d8      	b.n	80088c6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8008914:	4620      	mov	r0, r4
 8008916:	f7ff fcd4 	bl	80082c2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800891a:	f000 fc2b 	bl	8009174 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800891e:	4620      	mov	r0, r4
 8008920:	f7ff fc7c 	bl	800821c <prvIsQueueEmpty>
 8008924:	2800      	cmp	r0, #0
 8008926:	d0ce      	beq.n	80088c6 <xQueueReceive+0xd6>
 8008928:	e796      	b.n	8008858 <xQueueReceive+0x68>
 800892a:	bf00      	nop
 800892c:	e000ed04 	.word	0xe000ed04

08008930 <xQueueSemaphoreTake>:
{
 8008930:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8008934:	4604      	mov	r4, r0
{
 8008936:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008938:	b940      	cbnz	r0, 800894c <xQueueSemaphoreTake+0x1c>
 800893a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800893e:	f383 8811 	msr	BASEPRI, r3
 8008942:	f3bf 8f6f 	isb	sy
 8008946:	f3bf 8f4f 	dsb	sy
 800894a:	e7fe      	b.n	800894a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800894c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800894e:	b145      	cbz	r5, 8008962 <xQueueSemaphoreTake+0x32>
 8008950:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008954:	f383 8811 	msr	BASEPRI, r3
 8008958:	f3bf 8f6f 	isb	sy
 800895c:	f3bf 8f4f 	dsb	sy
 8008960:	e7fe      	b.n	8008960 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008962:	f000 fd7d 	bl	8009460 <xTaskGetSchedulerState>
 8008966:	b950      	cbnz	r0, 800897e <xQueueSemaphoreTake+0x4e>
 8008968:	9d01      	ldr	r5, [sp, #4]
 800896a:	b145      	cbz	r5, 800897e <xQueueSemaphoreTake+0x4e>
 800896c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008970:	f383 8811 	msr	BASEPRI, r3
 8008974:	f3bf 8f6f 	isb	sy
 8008978:	f3bf 8f4f 	dsb	sy
 800897c:	e7fe      	b.n	800897c <xQueueSemaphoreTake+0x4c>
 800897e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008980:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 8008982:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8008ab0 <xQueueSemaphoreTake+0x180>
 8008986:	e04f      	b.n	8008a28 <xQueueSemaphoreTake+0xf8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008988:	9b01      	ldr	r3, [sp, #4]
 800898a:	b963      	cbnz	r3, 80089a6 <xQueueSemaphoreTake+0x76>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800898c:	b145      	cbz	r5, 80089a0 <xQueueSemaphoreTake+0x70>
 800898e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008992:	f383 8811 	msr	BASEPRI, r3
 8008996:	f3bf 8f6f 	isb	sy
 800899a:	f3bf 8f4f 	dsb	sy
 800899e:	e7fe      	b.n	800899e <xQueueSemaphoreTake+0x6e>
					taskEXIT_CRITICAL();
 80089a0:	f7ff fb12 	bl	8007fc8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80089a4:	e05e      	b.n	8008a64 <xQueueSemaphoreTake+0x134>
				else if( xEntryTimeSet == pdFALSE )
 80089a6:	b916      	cbnz	r6, 80089ae <xQueueSemaphoreTake+0x7e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80089a8:	a802      	add	r0, sp, #8
 80089aa:	f000 fd0b 	bl	80093c4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80089ae:	f7ff fb0b 	bl	8007fc8 <vPortExitCritical>
		vTaskSuspendAll();
 80089b2:	f000 fb41 	bl	8009038 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80089b6:	f7ff fae5 	bl	8007f84 <vPortEnterCritical>
 80089ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80089be:	2bff      	cmp	r3, #255	; 0xff
 80089c0:	bf08      	it	eq
 80089c2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80089c6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80089ca:	2bff      	cmp	r3, #255	; 0xff
 80089cc:	bf08      	it	eq
 80089ce:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80089d2:	f7ff faf9 	bl	8007fc8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80089d6:	a901      	add	r1, sp, #4
 80089d8:	a802      	add	r0, sp, #8
 80089da:	f000 fcff 	bl	80093dc <xTaskCheckForTimeOut>
 80089de:	2800      	cmp	r0, #0
 80089e0:	d14a      	bne.n	8008a78 <xQueueSemaphoreTake+0x148>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80089e2:	4620      	mov	r0, r4
 80089e4:	f7ff fc1a 	bl	800821c <prvIsQueueEmpty>
 80089e8:	2800      	cmp	r0, #0
 80089ea:	d03f      	beq.n	8008a6c <xQueueSemaphoreTake+0x13c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80089ec:	6823      	ldr	r3, [r4, #0]
 80089ee:	b93b      	cbnz	r3, 8008a00 <xQueueSemaphoreTake+0xd0>
						taskENTER_CRITICAL();
 80089f0:	f7ff fac8 	bl	8007f84 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80089f4:	68a0      	ldr	r0, [r4, #8]
 80089f6:	f000 fd43 	bl	8009480 <xTaskPriorityInherit>
 80089fa:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80089fc:	f7ff fae4 	bl	8007fc8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008a00:	9901      	ldr	r1, [sp, #4]
 8008a02:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008a06:	f000 fc65 	bl	80092d4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008a0a:	4620      	mov	r0, r4
 8008a0c:	f7ff fc59 	bl	80082c2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008a10:	f000 fbb0 	bl	8009174 <xTaskResumeAll>
 8008a14:	b938      	cbnz	r0, 8008a26 <xQueueSemaphoreTake+0xf6>
					portYIELD_WITHIN_API();
 8008a16:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008a1a:	f8c8 3000 	str.w	r3, [r8]
 8008a1e:	f3bf 8f4f 	dsb	sy
 8008a22:	f3bf 8f6f 	isb	sy
 8008a26:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008a28:	f7ff faac 	bl	8007f84 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008a2c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008a2e:	2b00      	cmp	r3, #0
 8008a30:	d0aa      	beq.n	8008988 <xQueueSemaphoreTake+0x58>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008a32:	3b01      	subs	r3, #1
 8008a34:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008a36:	6823      	ldr	r3, [r4, #0]
 8008a38:	b913      	cbnz	r3, 8008a40 <xQueueSemaphoreTake+0x110>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8008a3a:	f000 fdf1 	bl	8009620 <pvTaskIncrementMutexHeldCount>
 8008a3e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008a40:	6923      	ldr	r3, [r4, #16]
 8008a42:	b163      	cbz	r3, 8008a5e <xQueueSemaphoreTake+0x12e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008a44:	f104 0010 	add.w	r0, r4, #16
 8008a48:	f000 fc7c 	bl	8009344 <xTaskRemoveFromEventList>
 8008a4c:	b138      	cbz	r0, 8008a5e <xQueueSemaphoreTake+0x12e>
						queueYIELD_IF_USING_PREEMPTION();
 8008a4e:	4b18      	ldr	r3, [pc, #96]	; (8008ab0 <xQueueSemaphoreTake+0x180>)
 8008a50:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a54:	601a      	str	r2, [r3, #0]
 8008a56:	f3bf 8f4f 	dsb	sy
 8008a5a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008a5e:	f7ff fab3 	bl	8007fc8 <vPortExitCritical>
				return pdPASS;
 8008a62:	2501      	movs	r5, #1
}
 8008a64:	4628      	mov	r0, r5
 8008a66:	b004      	add	sp, #16
 8008a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008a6c:	4620      	mov	r0, r4
 8008a6e:	f7ff fc28 	bl	80082c2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008a72:	f000 fb7f 	bl	8009174 <xTaskResumeAll>
 8008a76:	e7d6      	b.n	8008a26 <xQueueSemaphoreTake+0xf6>
			prvUnlockQueue( pxQueue );
 8008a78:	4620      	mov	r0, r4
 8008a7a:	f7ff fc22 	bl	80082c2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008a7e:	f000 fb79 	bl	8009174 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008a82:	4620      	mov	r0, r4
 8008a84:	f7ff fbca 	bl	800821c <prvIsQueueEmpty>
 8008a88:	2800      	cmp	r0, #0
 8008a8a:	d0cc      	beq.n	8008a26 <xQueueSemaphoreTake+0xf6>
					if( xInheritanceOccurred != pdFALSE )
 8008a8c:	2d00      	cmp	r5, #0
 8008a8e:	d0e9      	beq.n	8008a64 <xQueueSemaphoreTake+0x134>
						taskENTER_CRITICAL();
 8008a90:	f7ff fa78 	bl	8007f84 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8008a94:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8008a96:	b119      	cbz	r1, 8008aa0 <xQueueSemaphoreTake+0x170>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008a98:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008a9a:	6819      	ldr	r1, [r3, #0]
 8008a9c:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008aa0:	68a0      	ldr	r0, [r4, #8]
 8008aa2:	f000 fd6f 	bl	8009584 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8008aa6:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8008aa8:	f7ff fa8e 	bl	8007fc8 <vPortExitCritical>
 8008aac:	e7da      	b.n	8008a64 <xQueueSemaphoreTake+0x134>
 8008aae:	bf00      	nop
 8008ab0:	e000ed04 	.word	0xe000ed04

08008ab4 <xQueueReceiveFromISR>:
{
 8008ab4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008ab8:	4689      	mov	r9, r1
 8008aba:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008abc:	4605      	mov	r5, r0
 8008abe:	b940      	cbnz	r0, 8008ad2 <xQueueReceiveFromISR+0x1e>
 8008ac0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ac4:	f383 8811 	msr	BASEPRI, r3
 8008ac8:	f3bf 8f6f 	isb	sy
 8008acc:	f3bf 8f4f 	dsb	sy
 8008ad0:	e7fe      	b.n	8008ad0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008ad2:	b951      	cbnz	r1, 8008aea <xQueueReceiveFromISR+0x36>
 8008ad4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008ad6:	b143      	cbz	r3, 8008aea <xQueueReceiveFromISR+0x36>
 8008ad8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008adc:	f383 8811 	msr	BASEPRI, r3
 8008ae0:	f3bf 8f6f 	isb	sy
 8008ae4:	f3bf 8f4f 	dsb	sy
 8008ae8:	e7fe      	b.n	8008ae8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008aea:	f7ff fb69 	bl	80081c0 <vPortValidateInterruptPriority>
	__asm volatile
 8008aee:	f3ef 8711 	mrs	r7, BASEPRI
 8008af2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008af6:	f383 8811 	msr	BASEPRI, r3
 8008afa:	f3bf 8f6f 	isb	sy
 8008afe:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008b02:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008b04:	b31c      	cbz	r4, 8008b4e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008b06:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008b0a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8008b0c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008b0e:	4628      	mov	r0, r5
 8008b10:	f7ff fbc2 	bl	8008298 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008b14:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8008b16:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008b18:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8008b1a:	d113      	bne.n	8008b44 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008b1c:	692b      	ldr	r3, [r5, #16]
 8008b1e:	b90b      	cbnz	r3, 8008b24 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008b20:	2001      	movs	r0, #1
 8008b22:	e00b      	b.n	8008b3c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008b24:	f105 0010 	add.w	r0, r5, #16
 8008b28:	f000 fc0c 	bl	8009344 <xTaskRemoveFromEventList>
 8008b2c:	2800      	cmp	r0, #0
 8008b2e:	d0f7      	beq.n	8008b20 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008b30:	f1b8 0f00 	cmp.w	r8, #0
 8008b34:	d0f4      	beq.n	8008b20 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008b36:	2001      	movs	r0, #1
 8008b38:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008b3c:	f387 8811 	msr	BASEPRI, r7
}
 8008b40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008b44:	3601      	adds	r6, #1
 8008b46:	b276      	sxtb	r6, r6
 8008b48:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8008b4c:	e7e8      	b.n	8008b20 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008b4e:	4620      	mov	r0, r4
 8008b50:	e7f4      	b.n	8008b3c <xQueueReceiveFromISR+0x88>
	...

08008b54 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008b54:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008b56:	4a07      	ldr	r2, [pc, #28]	; (8008b74 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008b58:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008b5a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8008b5e:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8008b62:	b91d      	cbnz	r5, 8008b6c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008b64:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008b68:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008b6a:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008b6c:	3301      	adds	r3, #1
 8008b6e:	2b08      	cmp	r3, #8
 8008b70:	d1f3      	bne.n	8008b5a <vQueueAddToRegistry+0x6>
 8008b72:	e7fa      	b.n	8008b6a <vQueueAddToRegistry+0x16>
 8008b74:	20012b70 	.word	0x20012b70

08008b78 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008b78:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008b7a:	4a08      	ldr	r2, [pc, #32]	; (8008b9c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008b7c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008b7e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008b82:	684c      	ldr	r4, [r1, #4]
 8008b84:	4284      	cmp	r4, r0
 8008b86:	d104      	bne.n	8008b92 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008b88:	2000      	movs	r0, #0
 8008b8a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008b8e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008b90:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008b92:	3301      	adds	r3, #1
 8008b94:	2b08      	cmp	r3, #8
 8008b96:	d1f2      	bne.n	8008b7e <vQueueUnregisterQueue+0x6>
 8008b98:	e7fa      	b.n	8008b90 <vQueueUnregisterQueue+0x18>
 8008b9a:	bf00      	nop
 8008b9c:	20012b70 	.word	0x20012b70

08008ba0 <vQueueDelete>:
{
 8008ba0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008ba2:	4604      	mov	r4, r0
 8008ba4:	b940      	cbnz	r0, 8008bb8 <vQueueDelete+0x18>
	__asm volatile
 8008ba6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008baa:	f383 8811 	msr	BASEPRI, r3
 8008bae:	f3bf 8f6f 	isb	sy
 8008bb2:	f3bf 8f4f 	dsb	sy
 8008bb6:	e7fe      	b.n	8008bb6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8008bb8:	f7ff ffde 	bl	8008b78 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008bbc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008bc0:	b923      	cbnz	r3, 8008bcc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8008bc2:	4620      	mov	r0, r4
}
 8008bc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008bc8:	f7ff b8fc 	b.w	8007dc4 <vPortFree>
}
 8008bcc:	bd10      	pop	{r4, pc}

08008bce <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008bce:	b570      	push	{r4, r5, r6, lr}
 8008bd0:	4604      	mov	r4, r0
 8008bd2:	460d      	mov	r5, r1
 8008bd4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008bd6:	f7ff f9d5 	bl	8007f84 <vPortEnterCritical>
 8008bda:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008bde:	2bff      	cmp	r3, #255	; 0xff
 8008be0:	bf04      	itt	eq
 8008be2:	2300      	moveq	r3, #0
 8008be4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008be8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008bec:	2bff      	cmp	r3, #255	; 0xff
 8008bee:	bf04      	itt	eq
 8008bf0:	2300      	moveq	r3, #0
 8008bf2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8008bf6:	f7ff f9e7 	bl	8007fc8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008bfa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008bfc:	b92b      	cbnz	r3, 8008c0a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008bfe:	4632      	mov	r2, r6
 8008c00:	4629      	mov	r1, r5
 8008c02:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008c06:	f000 fb7f 	bl	8009308 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8008c0a:	4620      	mov	r0, r4
	}
 8008c0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008c10:	f7ff bb57 	b.w	80082c2 <prvUnlockQueue>

08008c14 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008c14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008c18:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8008c1a:	f7ff f9b3 	bl	8007f84 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008c1e:	4b2f      	ldr	r3, [pc, #188]	; (8008cdc <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8008c20:	4d2f      	ldr	r5, [pc, #188]	; (8008ce0 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8008c22:	681a      	ldr	r2, [r3, #0]
 8008c24:	4f2f      	ldr	r7, [pc, #188]	; (8008ce4 <prvAddNewTaskToReadyList+0xd0>)
 8008c26:	3201      	adds	r2, #1
 8008c28:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8008c2a:	682e      	ldr	r6, [r5, #0]
 8008c2c:	2e00      	cmp	r6, #0
 8008c2e:	d149      	bne.n	8008cc4 <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008c30:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008c32:	681b      	ldr	r3, [r3, #0]
 8008c34:	2b01      	cmp	r3, #1
 8008c36:	d11f      	bne.n	8008c78 <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008c38:	f04f 0814 	mov.w	r8, #20
 8008c3c:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008c40:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008c42:	f7ff f8f7 	bl	8007e34 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008c46:	2e38      	cmp	r6, #56	; 0x38
 8008c48:	d1f8      	bne.n	8008c3c <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008c4a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008d10 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8008c4e:	4e26      	ldr	r6, [pc, #152]	; (8008ce8 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8008c50:	4640      	mov	r0, r8
 8008c52:	f7ff f8ef 	bl	8007e34 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008c56:	4630      	mov	r0, r6
 8008c58:	f7ff f8ec 	bl	8007e34 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008c5c:	4823      	ldr	r0, [pc, #140]	; (8008cec <prvAddNewTaskToReadyList+0xd8>)
 8008c5e:	f7ff f8e9 	bl	8007e34 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008c62:	4823      	ldr	r0, [pc, #140]	; (8008cf0 <prvAddNewTaskToReadyList+0xdc>)
 8008c64:	f7ff f8e6 	bl	8007e34 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008c68:	4822      	ldr	r0, [pc, #136]	; (8008cf4 <prvAddNewTaskToReadyList+0xe0>)
 8008c6a:	f7ff f8e3 	bl	8007e34 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008c6e:	4b22      	ldr	r3, [pc, #136]	; (8008cf8 <prvAddNewTaskToReadyList+0xe4>)
 8008c70:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008c74:	4b21      	ldr	r3, [pc, #132]	; (8008cfc <prvAddNewTaskToReadyList+0xe8>)
 8008c76:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8008c78:	4a21      	ldr	r2, [pc, #132]	; (8008d00 <prvAddNewTaskToReadyList+0xec>)
 8008c7a:	6813      	ldr	r3, [r2, #0]
 8008c7c:	3301      	adds	r3, #1
 8008c7e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008c80:	4a20      	ldr	r2, [pc, #128]	; (8008d04 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008c82:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008c84:	6811      	ldr	r1, [r2, #0]
 8008c86:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008c88:	2014      	movs	r0, #20
 8008c8a:	428b      	cmp	r3, r1
 8008c8c:	fb00 7003 	mla	r0, r0, r3, r7
 8008c90:	f104 0104 	add.w	r1, r4, #4
 8008c94:	bf88      	it	hi
 8008c96:	6013      	strhi	r3, [r2, #0]
 8008c98:	f7ff f8da 	bl	8007e50 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008c9c:	f7ff f994 	bl	8007fc8 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008ca0:	4b19      	ldr	r3, [pc, #100]	; (8008d08 <prvAddNewTaskToReadyList+0xf4>)
 8008ca2:	681b      	ldr	r3, [r3, #0]
 8008ca4:	b163      	cbz	r3, 8008cc0 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008ca6:	682b      	ldr	r3, [r5, #0]
 8008ca8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008caa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008cac:	429a      	cmp	r2, r3
 8008cae:	d207      	bcs.n	8008cc0 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8008cb0:	4b16      	ldr	r3, [pc, #88]	; (8008d0c <prvAddNewTaskToReadyList+0xf8>)
 8008cb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008cb6:	601a      	str	r2, [r3, #0]
 8008cb8:	f3bf 8f4f 	dsb	sy
 8008cbc:	f3bf 8f6f 	isb	sy
}
 8008cc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008cc4:	4b10      	ldr	r3, [pc, #64]	; (8008d08 <prvAddNewTaskToReadyList+0xf4>)
 8008cc6:	681b      	ldr	r3, [r3, #0]
 8008cc8:	2b00      	cmp	r3, #0
 8008cca:	d1d5      	bne.n	8008c78 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008ccc:	682b      	ldr	r3, [r5, #0]
 8008cce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008cd0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008cd2:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008cd4:	bf98      	it	ls
 8008cd6:	602c      	strls	r4, [r5, #0]
 8008cd8:	e7ce      	b.n	8008c78 <prvAddNewTaskToReadyList+0x64>
 8008cda:	bf00      	nop
 8008cdc:	200121f4 	.word	0x200121f4
 8008ce0:	20011d88 	.word	0x20011d88
 8008ce4:	20011d94 	.word	0x20011d94
 8008ce8:	20012220 	.word	0x20012220
 8008cec:	2001223c 	.word	0x2001223c
 8008cf0:	20012268 	.word	0x20012268
 8008cf4:	20012254 	.word	0x20012254
 8008cf8:	20011d8c 	.word	0x20011d8c
 8008cfc:	20011d90 	.word	0x20011d90
 8008d00:	20012204 	.word	0x20012204
 8008d04:	20012208 	.word	0x20012208
 8008d08:	20012250 	.word	0x20012250
 8008d0c:	e000ed04 	.word	0xe000ed04
 8008d10:	2001220c 	.word	0x2001220c

08008d14 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 8008d14:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008d16:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8008d1a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008d1c:	b93b      	cbnz	r3, 8008d2e <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 8008d1e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8008d20:	f7ff f850 	bl	8007dc4 <vPortFree>
				vPortFree( pxTCB );
 8008d24:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 8008d26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008d2a:	f7ff b84b 	b.w	8007dc4 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008d2e:	2b01      	cmp	r3, #1
 8008d30:	d0f9      	beq.n	8008d26 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008d32:	2b02      	cmp	r3, #2
 8008d34:	d008      	beq.n	8008d48 <prvDeleteTCB+0x34>
 8008d36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d3a:	f383 8811 	msr	BASEPRI, r3
 8008d3e:	f3bf 8f6f 	isb	sy
 8008d42:	f3bf 8f4f 	dsb	sy
 8008d46:	e7fe      	b.n	8008d46 <prvDeleteTCB+0x32>
	}
 8008d48:	bd10      	pop	{r4, pc}
	...

08008d4c <prvIdleTask>:
{
 8008d4c:	b580      	push	{r7, lr}
				taskYIELD();
 8008d4e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8008dac <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d52:	4f12      	ldr	r7, [pc, #72]	; (8008d9c <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008d54:	4c12      	ldr	r4, [pc, #72]	; (8008da0 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008d56:	4d13      	ldr	r5, [pc, #76]	; (8008da4 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008d58:	6823      	ldr	r3, [r4, #0]
 8008d5a:	b963      	cbnz	r3, 8008d76 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008d5c:	4b12      	ldr	r3, [pc, #72]	; (8008da8 <prvIdleTask+0x5c>)
 8008d5e:	681b      	ldr	r3, [r3, #0]
 8008d60:	2b01      	cmp	r3, #1
 8008d62:	d9f8      	bls.n	8008d56 <prvIdleTask+0xa>
				taskYIELD();
 8008d64:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008d68:	f8c8 3000 	str.w	r3, [r8]
 8008d6c:	f3bf 8f4f 	dsb	sy
 8008d70:	f3bf 8f6f 	isb	sy
 8008d74:	e7ee      	b.n	8008d54 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 8008d76:	f7ff f905 	bl	8007f84 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d7a:	68fb      	ldr	r3, [r7, #12]
 8008d7c:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008d7e:	1d30      	adds	r0, r6, #4
 8008d80:	f7ff f889 	bl	8007e96 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008d84:	682b      	ldr	r3, [r5, #0]
 8008d86:	3b01      	subs	r3, #1
 8008d88:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008d8a:	6823      	ldr	r3, [r4, #0]
 8008d8c:	3b01      	subs	r3, #1
 8008d8e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008d90:	f7ff f91a 	bl	8007fc8 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008d94:	4630      	mov	r0, r6
 8008d96:	f7ff ffbd 	bl	8008d14 <prvDeleteTCB>
 8008d9a:	e7dd      	b.n	8008d58 <prvIdleTask+0xc>
 8008d9c:	20012268 	.word	0x20012268
 8008da0:	200121f8 	.word	0x200121f8
 8008da4:	200121f4 	.word	0x200121f4
 8008da8:	20011d94 	.word	0x20011d94
 8008dac:	e000ed04 	.word	0xe000ed04

08008db0 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008db0:	4a06      	ldr	r2, [pc, #24]	; (8008dcc <prvResetNextTaskUnblockTime+0x1c>)
 8008db2:	6813      	ldr	r3, [r2, #0]
 8008db4:	6819      	ldr	r1, [r3, #0]
 8008db6:	4b06      	ldr	r3, [pc, #24]	; (8008dd0 <prvResetNextTaskUnblockTime+0x20>)
 8008db8:	b919      	cbnz	r1, 8008dc2 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8008dba:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008dbe:	601a      	str	r2, [r3, #0]
	}
}
 8008dc0:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008dc2:	6812      	ldr	r2, [r2, #0]
 8008dc4:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008dc6:	68d2      	ldr	r2, [r2, #12]
 8008dc8:	6852      	ldr	r2, [r2, #4]
 8008dca:	e7f8      	b.n	8008dbe <prvResetNextTaskUnblockTime+0xe>
 8008dcc:	20011d8c 	.word	0x20011d8c
 8008dd0:	20012234 	.word	0x20012234

08008dd4 <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008dd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008dd8:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008ddc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8008de0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008de2:	4607      	mov	r7, r0
 8008de4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008de6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008de8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008dea:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008dec:	f011 fd85 	bl	801a8fa <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008df0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008df2:	f1a9 0904 	sub.w	r9, r9, #4
 8008df6:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008df8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008dfc:	b3a5      	cbz	r5, 8008e68 <prvInitialiseNewTask.isra.2+0x94>
 8008dfe:	1e6b      	subs	r3, r5, #1
 8008e00:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008e04:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008e06:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008e0a:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8008e0e:	7819      	ldrb	r1, [r3, #0]
 8008e10:	b109      	cbz	r1, 8008e16 <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008e12:	42ab      	cmp	r3, r5
 8008e14:	d1f7      	bne.n	8008e06 <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008e16:	2300      	movs	r3, #0
 8008e18:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008e1c:	9d08      	ldr	r5, [sp, #32]
 8008e1e:	2d37      	cmp	r5, #55	; 0x37
 8008e20:	bf28      	it	cs
 8008e22:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008e24:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008e28:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008e2a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008e2c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008e2e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008e32:	f7ff f80a 	bl	8007e4a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e36:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008e3a:	f104 0018 	add.w	r0, r4, #24
 8008e3e:	f7ff f804 	bl	8007e4a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008e42:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008e46:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e48:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008e4a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008e4c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008e50:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008e54:	4642      	mov	r2, r8
 8008e56:	4639      	mov	r1, r7
 8008e58:	4648      	mov	r0, r9
 8008e5a:	f7ff f86b 	bl	8007f34 <pxPortInitialiseStack>
 8008e5e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008e60:	b106      	cbz	r6, 8008e64 <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008e62:	6034      	str	r4, [r6, #0]
}
 8008e64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008e68:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008e6c:	e7d6      	b.n	8008e1c <prvInitialiseNewTask.isra.2+0x48>
	...

08008e70 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008e72:	4b16      	ldr	r3, [pc, #88]	; (8008ecc <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008e74:	4e16      	ldr	r6, [pc, #88]	; (8008ed0 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8008e76:	681c      	ldr	r4, [r3, #0]
{
 8008e78:	4605      	mov	r5, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008e7a:	6830      	ldr	r0, [r6, #0]
 8008e7c:	3004      	adds	r0, #4
{
 8008e7e:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008e80:	f7ff f809 	bl	8007e96 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008e84:	1c6b      	adds	r3, r5, #1
 8008e86:	4633      	mov	r3, r6
 8008e88:	d107      	bne.n	8008e9a <prvAddCurrentTaskToDelayedList+0x2a>
 8008e8a:	b137      	cbz	r7, 8008e9a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008e8c:	6831      	ldr	r1, [r6, #0]
 8008e8e:	4811      	ldr	r0, [pc, #68]	; (8008ed4 <prvAddCurrentTaskToDelayedList+0x64>)
 8008e90:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008e92:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008e96:	f7fe bfdb 	b.w	8007e50 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008e9a:	681a      	ldr	r2, [r3, #0]
 8008e9c:	1964      	adds	r4, r4, r5
 8008e9e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8008ea0:	d307      	bcc.n	8008eb2 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008ea2:	4a0d      	ldr	r2, [pc, #52]	; (8008ed8 <prvAddCurrentTaskToDelayedList+0x68>)
 8008ea4:	6810      	ldr	r0, [r2, #0]
 8008ea6:	6819      	ldr	r1, [r3, #0]
}
 8008ea8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008eac:	3104      	adds	r1, #4
 8008eae:	f7fe bfdb 	b.w	8007e68 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008eb2:	4a0a      	ldr	r2, [pc, #40]	; (8008edc <prvAddCurrentTaskToDelayedList+0x6c>)
 8008eb4:	6810      	ldr	r0, [r2, #0]
 8008eb6:	6819      	ldr	r1, [r3, #0]
 8008eb8:	3104      	adds	r1, #4
 8008eba:	f7fe ffd5 	bl	8007e68 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008ebe:	4b08      	ldr	r3, [pc, #32]	; (8008ee0 <prvAddCurrentTaskToDelayedList+0x70>)
 8008ec0:	681a      	ldr	r2, [r3, #0]
 8008ec2:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008ec4:	bf88      	it	hi
 8008ec6:	601c      	strhi	r4, [r3, #0]
}
 8008ec8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008eca:	bf00      	nop
 8008ecc:	2001227c 	.word	0x2001227c
 8008ed0:	20011d88 	.word	0x20011d88
 8008ed4:	20012254 	.word	0x20012254
 8008ed8:	20011d90 	.word	0x20011d90
 8008edc:	20011d8c 	.word	0x20011d8c
 8008ee0:	20012234 	.word	0x20012234

08008ee4 <xTaskCreateStatic>:
	{
 8008ee4:	b570      	push	{r4, r5, r6, lr}
 8008ee6:	b086      	sub	sp, #24
 8008ee8:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008eec:	b945      	cbnz	r5, 8008f00 <xTaskCreateStatic+0x1c>
 8008eee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ef2:	f383 8811 	msr	BASEPRI, r3
 8008ef6:	f3bf 8f6f 	isb	sy
 8008efa:	f3bf 8f4f 	dsb	sy
 8008efe:	e7fe      	b.n	8008efe <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008f00:	b944      	cbnz	r4, 8008f14 <xTaskCreateStatic+0x30>
 8008f02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f06:	f383 8811 	msr	BASEPRI, r3
 8008f0a:	f3bf 8f6f 	isb	sy
 8008f0e:	f3bf 8f4f 	dsb	sy
 8008f12:	e7fe      	b.n	8008f12 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008f14:	2660      	movs	r6, #96	; 0x60
 8008f16:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008f18:	9e05      	ldr	r6, [sp, #20]
 8008f1a:	2e60      	cmp	r6, #96	; 0x60
 8008f1c:	d008      	beq.n	8008f30 <xTaskCreateStatic+0x4c>
 8008f1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f22:	f383 8811 	msr	BASEPRI, r3
 8008f26:	f3bf 8f6f 	isb	sy
 8008f2a:	f3bf 8f4f 	dsb	sy
 8008f2e:	e7fe      	b.n	8008f2e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008f30:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008f32:	2502      	movs	r5, #2
 8008f34:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008f38:	ad04      	add	r5, sp, #16
 8008f3a:	9501      	str	r5, [sp, #4]
 8008f3c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008f3e:	9402      	str	r4, [sp, #8]
 8008f40:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008f42:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008f44:	f7ff ff46 	bl	8008dd4 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008f48:	4620      	mov	r0, r4
 8008f4a:	f7ff fe63 	bl	8008c14 <prvAddNewTaskToReadyList>
	}
 8008f4e:	9804      	ldr	r0, [sp, #16]
 8008f50:	b006      	add	sp, #24
 8008f52:	bd70      	pop	{r4, r5, r6, pc}

08008f54 <xTaskCreate>:
	{
 8008f54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008f58:	4607      	mov	r7, r0
 8008f5a:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008f5c:	0090      	lsls	r0, r2, #2
	{
 8008f5e:	4688      	mov	r8, r1
 8008f60:	4616      	mov	r6, r2
 8008f62:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008f64:	f7fe fea2 	bl	8007cac <pvPortMalloc>
			if( pxStack != NULL )
 8008f68:	4605      	mov	r5, r0
 8008f6a:	b1e8      	cbz	r0, 8008fa8 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008f6c:	2060      	movs	r0, #96	; 0x60
 8008f6e:	f7fe fe9d 	bl	8007cac <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008f72:	4604      	mov	r4, r0
 8008f74:	b1a8      	cbz	r0, 8008fa2 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008f76:	2300      	movs	r3, #0
 8008f78:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008f7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8008f7e:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008f80:	9301      	str	r3, [sp, #4]
 8008f82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008f84:	9002      	str	r0, [sp, #8]
 8008f86:	9300      	str	r3, [sp, #0]
 8008f88:	4632      	mov	r2, r6
 8008f8a:	464b      	mov	r3, r9
 8008f8c:	4641      	mov	r1, r8
 8008f8e:	4638      	mov	r0, r7
 8008f90:	f7ff ff20 	bl	8008dd4 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008f94:	4620      	mov	r0, r4
 8008f96:	f7ff fe3d 	bl	8008c14 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008f9a:	2001      	movs	r0, #1
	}
 8008f9c:	b005      	add	sp, #20
 8008f9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008fa2:	4628      	mov	r0, r5
 8008fa4:	f7fe ff0e 	bl	8007dc4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008fa8:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8008fac:	e7f6      	b.n	8008f9c <xTaskCreate+0x48>
	...

08008fb0 <vTaskStartScheduler>:
{
 8008fb0:	b510      	push	{r4, lr}
 8008fb2:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008fb4:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008fb6:	aa07      	add	r2, sp, #28
 8008fb8:	a906      	add	r1, sp, #24
 8008fba:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008fbc:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008fc0:	f7fe fe38 	bl	8007c34 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008fc4:	9b05      	ldr	r3, [sp, #20]
 8008fc6:	9302      	str	r3, [sp, #8]
 8008fc8:	9b06      	ldr	r3, [sp, #24]
 8008fca:	9a07      	ldr	r2, [sp, #28]
 8008fcc:	4915      	ldr	r1, [pc, #84]	; (8009024 <vTaskStartScheduler+0x74>)
 8008fce:	4816      	ldr	r0, [pc, #88]	; (8009028 <vTaskStartScheduler+0x78>)
 8008fd0:	e9cd 4300 	strd	r4, r3, [sp]
 8008fd4:	4623      	mov	r3, r4
 8008fd6:	f7ff ff85 	bl	8008ee4 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008fda:	b1a8      	cbz	r0, 8009008 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 8008fdc:	f000 fb7e 	bl	80096dc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008fe0:	2801      	cmp	r0, #1
 8008fe2:	d113      	bne.n	800900c <vTaskStartScheduler+0x5c>
 8008fe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fe8:	f383 8811 	msr	BASEPRI, r3
 8008fec:	f3bf 8f6f 	isb	sy
 8008ff0:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008ff4:	4b0d      	ldr	r3, [pc, #52]	; (800902c <vTaskStartScheduler+0x7c>)
 8008ff6:	f04f 32ff 	mov.w	r2, #4294967295
 8008ffa:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008ffc:	4b0c      	ldr	r3, [pc, #48]	; (8009030 <vTaskStartScheduler+0x80>)
 8008ffe:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009000:	4b0c      	ldr	r3, [pc, #48]	; (8009034 <vTaskStartScheduler+0x84>)
 8009002:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 8009004:	f7ff f856 	bl	80080b4 <xPortStartScheduler>
}
 8009008:	b008      	add	sp, #32
 800900a:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800900c:	3001      	adds	r0, #1
 800900e:	d1fb      	bne.n	8009008 <vTaskStartScheduler+0x58>
 8009010:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009014:	f383 8811 	msr	BASEPRI, r3
 8009018:	f3bf 8f6f 	isb	sy
 800901c:	f3bf 8f4f 	dsb	sy
 8009020:	e7fe      	b.n	8009020 <vTaskStartScheduler+0x70>
 8009022:	bf00      	nop
 8009024:	0801ca70 	.word	0x0801ca70
 8009028:	08008d4d 	.word	0x08008d4d
 800902c:	20012234 	.word	0x20012234
 8009030:	20012250 	.word	0x20012250
 8009034:	2001227c 	.word	0x2001227c

08009038 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009038:	4a02      	ldr	r2, [pc, #8]	; (8009044 <vTaskSuspendAll+0xc>)
 800903a:	6813      	ldr	r3, [r2, #0]
 800903c:	3301      	adds	r3, #1
 800903e:	6013      	str	r3, [r2, #0]
}
 8009040:	4770      	bx	lr
 8009042:	bf00      	nop
 8009044:	20012200 	.word	0x20012200

08009048 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009048:	4b01      	ldr	r3, [pc, #4]	; (8009050 <xTaskGetTickCount+0x8>)
 800904a:	6818      	ldr	r0, [r3, #0]
}
 800904c:	4770      	bx	lr
 800904e:	bf00      	nop
 8009050:	2001227c 	.word	0x2001227c

08009054 <xTaskIncrementTick>:
{
 8009054:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009058:	4b3b      	ldr	r3, [pc, #236]	; (8009148 <xTaskIncrementTick+0xf4>)
 800905a:	681b      	ldr	r3, [r3, #0]
 800905c:	2b00      	cmp	r3, #0
 800905e:	d16c      	bne.n	800913a <xTaskIncrementTick+0xe6>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009060:	4b3a      	ldr	r3, [pc, #232]	; (800914c <xTaskIncrementTick+0xf8>)
 8009062:	681c      	ldr	r4, [r3, #0]
 8009064:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8009066:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009068:	b9bc      	cbnz	r4, 800909a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800906a:	4b39      	ldr	r3, [pc, #228]	; (8009150 <xTaskIncrementTick+0xfc>)
 800906c:	681a      	ldr	r2, [r3, #0]
 800906e:	6812      	ldr	r2, [r2, #0]
 8009070:	b142      	cbz	r2, 8009084 <xTaskIncrementTick+0x30>
 8009072:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009076:	f383 8811 	msr	BASEPRI, r3
 800907a:	f3bf 8f6f 	isb	sy
 800907e:	f3bf 8f4f 	dsb	sy
 8009082:	e7fe      	b.n	8009082 <xTaskIncrementTick+0x2e>
 8009084:	4a33      	ldr	r2, [pc, #204]	; (8009154 <xTaskIncrementTick+0x100>)
 8009086:	6819      	ldr	r1, [r3, #0]
 8009088:	6810      	ldr	r0, [r2, #0]
 800908a:	6018      	str	r0, [r3, #0]
 800908c:	6011      	str	r1, [r2, #0]
 800908e:	4a32      	ldr	r2, [pc, #200]	; (8009158 <xTaskIncrementTick+0x104>)
 8009090:	6813      	ldr	r3, [r2, #0]
 8009092:	3301      	adds	r3, #1
 8009094:	6013      	str	r3, [r2, #0]
 8009096:	f7ff fe8b 	bl	8008db0 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800909a:	4d30      	ldr	r5, [pc, #192]	; (800915c <xTaskIncrementTick+0x108>)
 800909c:	4f30      	ldr	r7, [pc, #192]	; (8009160 <xTaskIncrementTick+0x10c>)
 800909e:	682b      	ldr	r3, [r5, #0]
 80090a0:	42a3      	cmp	r3, r4
BaseType_t xSwitchRequired = pdFALSE;
 80090a2:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80090a6:	d911      	bls.n	80090cc <xTaskIncrementTick+0x78>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80090a8:	683a      	ldr	r2, [r7, #0]
 80090aa:	4b2e      	ldr	r3, [pc, #184]	; (8009164 <xTaskIncrementTick+0x110>)
 80090ac:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80090ae:	2214      	movs	r2, #20
 80090b0:	434a      	muls	r2, r1
 80090b2:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 80090b4:	2a02      	cmp	r2, #2
 80090b6:	bf28      	it	cs
 80090b8:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 80090bc:	4a2a      	ldr	r2, [pc, #168]	; (8009168 <xTaskIncrementTick+0x114>)
 80090be:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 80090c0:	2a00      	cmp	r2, #0
}
 80090c2:	bf0c      	ite	eq
 80090c4:	4658      	moveq	r0, fp
 80090c6:	2001      	movne	r0, #1
 80090c8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80090cc:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8009150 <xTaskIncrementTick+0xfc>
					prvAddTaskToReadyList( pxTCB );
 80090d0:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8009170 <xTaskIncrementTick+0x11c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80090d4:	f8d9 2000 	ldr.w	r2, [r9]
 80090d8:	6812      	ldr	r2, [r2, #0]
 80090da:	b91a      	cbnz	r2, 80090e4 <xTaskIncrementTick+0x90>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80090dc:	f04f 32ff 	mov.w	r2, #4294967295
 80090e0:	602a      	str	r2, [r5, #0]
					break;
 80090e2:	e7e1      	b.n	80090a8 <xTaskIncrementTick+0x54>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80090e4:	f8d9 2000 	ldr.w	r2, [r9]
 80090e8:	68d2      	ldr	r2, [r2, #12]
 80090ea:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80090ec:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 80090ee:	428c      	cmp	r4, r1
 80090f0:	d201      	bcs.n	80090f6 <xTaskIncrementTick+0xa2>
						xNextTaskUnblockTime = xItemValue;
 80090f2:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80090f4:	e7d8      	b.n	80090a8 <xTaskIncrementTick+0x54>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80090f6:	f106 0804 	add.w	r8, r6, #4
 80090fa:	4640      	mov	r0, r8
 80090fc:	f7fe fecb 	bl	8007e96 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009100:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 8009102:	b119      	cbz	r1, 800910c <xTaskIncrementTick+0xb8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009104:	f106 0018 	add.w	r0, r6, #24
 8009108:	f7fe fec5 	bl	8007e96 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800910c:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 800910e:	f8da 1000 	ldr.w	r1, [sl]
 8009112:	4b14      	ldr	r3, [pc, #80]	; (8009164 <xTaskIncrementTick+0x110>)
 8009114:	4288      	cmp	r0, r1
 8009116:	f04f 0214 	mov.w	r2, #20
 800911a:	bf88      	it	hi
 800911c:	f8ca 0000 	strhi.w	r0, [sl]
 8009120:	4641      	mov	r1, r8
 8009122:	fb02 3000 	mla	r0, r2, r0, r3
 8009126:	f7fe fe93 	bl	8007e50 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800912a:	6838      	ldr	r0, [r7, #0]
 800912c:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 800912e:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009130:	4291      	cmp	r1, r2
 8009132:	bf28      	it	cs
 8009134:	f04f 0b01 	movcs.w	fp, #1
 8009138:	e7cc      	b.n	80090d4 <xTaskIncrementTick+0x80>
		++uxPendedTicks;
 800913a:	4a0c      	ldr	r2, [pc, #48]	; (800916c <xTaskIncrementTick+0x118>)
 800913c:	6813      	ldr	r3, [r2, #0]
 800913e:	3301      	adds	r3, #1
 8009140:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009142:	f04f 0b00 	mov.w	fp, #0
 8009146:	e7b9      	b.n	80090bc <xTaskIncrementTick+0x68>
 8009148:	20012200 	.word	0x20012200
 800914c:	2001227c 	.word	0x2001227c
 8009150:	20011d8c 	.word	0x20011d8c
 8009154:	20011d90 	.word	0x20011d90
 8009158:	20012238 	.word	0x20012238
 800915c:	20012234 	.word	0x20012234
 8009160:	20011d88 	.word	0x20011d88
 8009164:	20011d94 	.word	0x20011d94
 8009168:	20012280 	.word	0x20012280
 800916c:	200121fc 	.word	0x200121fc
 8009170:	20012208 	.word	0x20012208

08009174 <xTaskResumeAll>:
{
 8009174:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8009178:	4c2f      	ldr	r4, [pc, #188]	; (8009238 <xTaskResumeAll+0xc4>)
 800917a:	6823      	ldr	r3, [r4, #0]
 800917c:	b943      	cbnz	r3, 8009190 <xTaskResumeAll+0x1c>
 800917e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009182:	f383 8811 	msr	BASEPRI, r3
 8009186:	f3bf 8f6f 	isb	sy
 800918a:	f3bf 8f4f 	dsb	sy
 800918e:	e7fe      	b.n	800918e <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8009190:	f7fe fef8 	bl	8007f84 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009194:	6823      	ldr	r3, [r4, #0]
 8009196:	3b01      	subs	r3, #1
 8009198:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800919a:	6824      	ldr	r4, [r4, #0]
 800919c:	b12c      	cbz	r4, 80091aa <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800919e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80091a0:	f7fe ff12 	bl	8007fc8 <vPortExitCritical>
}
 80091a4:	4620      	mov	r0, r4
 80091a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80091aa:	4b24      	ldr	r3, [pc, #144]	; (800923c <xTaskResumeAll+0xc8>)
 80091ac:	681b      	ldr	r3, [r3, #0]
 80091ae:	2b00      	cmp	r3, #0
 80091b0:	d0f5      	beq.n	800919e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80091b2:	4d23      	ldr	r5, [pc, #140]	; (8009240 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 80091b4:	4e23      	ldr	r6, [pc, #140]	; (8009244 <xTaskResumeAll+0xd0>)
 80091b6:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009258 <xTaskResumeAll+0xe4>
 80091ba:	e01d      	b.n	80091f8 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80091bc:	68eb      	ldr	r3, [r5, #12]
 80091be:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80091c0:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80091c2:	f104 0018 	add.w	r0, r4, #24
 80091c6:	f7fe fe66 	bl	8007e96 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80091ca:	4638      	mov	r0, r7
 80091cc:	f7fe fe63 	bl	8007e96 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80091d0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80091d2:	6832      	ldr	r2, [r6, #0]
 80091d4:	2014      	movs	r0, #20
 80091d6:	4293      	cmp	r3, r2
 80091d8:	fb00 8003 	mla	r0, r0, r3, r8
 80091dc:	4639      	mov	r1, r7
 80091de:	bf88      	it	hi
 80091e0:	6033      	strhi	r3, [r6, #0]
 80091e2:	f7fe fe35 	bl	8007e50 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80091e6:	4b18      	ldr	r3, [pc, #96]	; (8009248 <xTaskResumeAll+0xd4>)
 80091e8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80091ea:	681b      	ldr	r3, [r3, #0]
 80091ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80091ee:	429a      	cmp	r2, r3
 80091f0:	d302      	bcc.n	80091f8 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 80091f2:	4b16      	ldr	r3, [pc, #88]	; (800924c <xTaskResumeAll+0xd8>)
 80091f4:	2201      	movs	r2, #1
 80091f6:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80091f8:	682b      	ldr	r3, [r5, #0]
 80091fa:	2b00      	cmp	r3, #0
 80091fc:	d1de      	bne.n	80091bc <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 80091fe:	b10c      	cbz	r4, 8009204 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8009200:	f7ff fdd6 	bl	8008db0 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009204:	4d12      	ldr	r5, [pc, #72]	; (8009250 <xTaskResumeAll+0xdc>)
 8009206:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009208:	b144      	cbz	r4, 800921c <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800920a:	4e10      	ldr	r6, [pc, #64]	; (800924c <xTaskResumeAll+0xd8>)
 800920c:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800920e:	f7ff ff21 	bl	8009054 <xTaskIncrementTick>
 8009212:	b100      	cbz	r0, 8009216 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8009214:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009216:	3c01      	subs	r4, #1
 8009218:	d1f9      	bne.n	800920e <xTaskResumeAll+0x9a>
						uxPendedTicks = 0;
 800921a:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800921c:	4b0b      	ldr	r3, [pc, #44]	; (800924c <xTaskResumeAll+0xd8>)
 800921e:	681b      	ldr	r3, [r3, #0]
 8009220:	2b00      	cmp	r3, #0
 8009222:	d0bc      	beq.n	800919e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8009224:	4b0b      	ldr	r3, [pc, #44]	; (8009254 <xTaskResumeAll+0xe0>)
 8009226:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800922a:	601a      	str	r2, [r3, #0]
 800922c:	f3bf 8f4f 	dsb	sy
 8009230:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009234:	2401      	movs	r4, #1
 8009236:	e7b3      	b.n	80091a0 <xTaskResumeAll+0x2c>
 8009238:	20012200 	.word	0x20012200
 800923c:	200121f4 	.word	0x200121f4
 8009240:	2001223c 	.word	0x2001223c
 8009244:	20012208 	.word	0x20012208
 8009248:	20011d88 	.word	0x20011d88
 800924c:	20012280 	.word	0x20012280
 8009250:	200121fc 	.word	0x200121fc
 8009254:	e000ed04 	.word	0xe000ed04
 8009258:	20011d94 	.word	0x20011d94

0800925c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800925c:	4b18      	ldr	r3, [pc, #96]	; (80092c0 <vTaskSwitchContext+0x64>)
 800925e:	681a      	ldr	r2, [r3, #0]
 8009260:	4b18      	ldr	r3, [pc, #96]	; (80092c4 <vTaskSwitchContext+0x68>)
{
 8009262:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009264:	b112      	cbz	r2, 800926c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009266:	2201      	movs	r2, #1
 8009268:	601a      	str	r2, [r3, #0]
}
 800926a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800926c:	4d16      	ldr	r5, [pc, #88]	; (80092c8 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 800926e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009270:	4a16      	ldr	r2, [pc, #88]	; (80092cc <vTaskSwitchContext+0x70>)
 8009272:	682b      	ldr	r3, [r5, #0]
 8009274:	2714      	movs	r7, #20
 8009276:	4616      	mov	r6, r2
 8009278:	fb07 f103 	mul.w	r1, r7, r3
 800927c:	1850      	adds	r0, r2, r1
 800927e:	5854      	ldr	r4, [r2, r1]
 8009280:	b18c      	cbz	r4, 80092a6 <vTaskSwitchContext+0x4a>
 8009282:	6844      	ldr	r4, [r0, #4]
 8009284:	3108      	adds	r1, #8
 8009286:	6864      	ldr	r4, [r4, #4]
 8009288:	6044      	str	r4, [r0, #4]
 800928a:	440a      	add	r2, r1
 800928c:	4294      	cmp	r4, r2
 800928e:	bf04      	itt	eq
 8009290:	6862      	ldreq	r2, [r4, #4]
 8009292:	6042      	streq	r2, [r0, #4]
 8009294:	2214      	movs	r2, #20
 8009296:	fb02 6203 	mla	r2, r2, r3, r6
 800929a:	6852      	ldr	r2, [r2, #4]
 800929c:	68d1      	ldr	r1, [r2, #12]
 800929e:	4a0c      	ldr	r2, [pc, #48]	; (80092d0 <vTaskSwitchContext+0x74>)
 80092a0:	6011      	str	r1, [r2, #0]
 80092a2:	602b      	str	r3, [r5, #0]
}
 80092a4:	e7e1      	b.n	800926a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80092a6:	b943      	cbnz	r3, 80092ba <vTaskSwitchContext+0x5e>
 80092a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092ac:	f383 8811 	msr	BASEPRI, r3
 80092b0:	f3bf 8f6f 	isb	sy
 80092b4:	f3bf 8f4f 	dsb	sy
 80092b8:	e7fe      	b.n	80092b8 <vTaskSwitchContext+0x5c>
 80092ba:	3b01      	subs	r3, #1
 80092bc:	e7dc      	b.n	8009278 <vTaskSwitchContext+0x1c>
 80092be:	bf00      	nop
 80092c0:	20012200 	.word	0x20012200
 80092c4:	20012280 	.word	0x20012280
 80092c8:	20012208 	.word	0x20012208
 80092cc:	20011d94 	.word	0x20011d94
 80092d0:	20011d88 	.word	0x20011d88

080092d4 <vTaskPlaceOnEventList>:
{
 80092d4:	b510      	push	{r4, lr}
 80092d6:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80092d8:	b940      	cbnz	r0, 80092ec <vTaskPlaceOnEventList+0x18>
 80092da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092de:	f383 8811 	msr	BASEPRI, r3
 80092e2:	f3bf 8f6f 	isb	sy
 80092e6:	f3bf 8f4f 	dsb	sy
 80092ea:	e7fe      	b.n	80092ea <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80092ec:	4b05      	ldr	r3, [pc, #20]	; (8009304 <vTaskPlaceOnEventList+0x30>)
 80092ee:	6819      	ldr	r1, [r3, #0]
 80092f0:	3118      	adds	r1, #24
 80092f2:	f7fe fdb9 	bl	8007e68 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80092f6:	4620      	mov	r0, r4
 80092f8:	2101      	movs	r1, #1
}
 80092fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80092fe:	f7ff bdb7 	b.w	8008e70 <prvAddCurrentTaskToDelayedList>
 8009302:	bf00      	nop
 8009304:	20011d88 	.word	0x20011d88

08009308 <vTaskPlaceOnEventListRestricted>:
	{
 8009308:	b538      	push	{r3, r4, r5, lr}
 800930a:	460d      	mov	r5, r1
 800930c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800930e:	b940      	cbnz	r0, 8009322 <vTaskPlaceOnEventListRestricted+0x1a>
 8009310:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009314:	f383 8811 	msr	BASEPRI, r3
 8009318:	f3bf 8f6f 	isb	sy
 800931c:	f3bf 8f4f 	dsb	sy
 8009320:	e7fe      	b.n	8009320 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009322:	4b07      	ldr	r3, [pc, #28]	; (8009340 <vTaskPlaceOnEventListRestricted+0x38>)
 8009324:	6819      	ldr	r1, [r3, #0]
 8009326:	3118      	adds	r1, #24
 8009328:	f7fe fd92 	bl	8007e50 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800932c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800932e:	4621      	mov	r1, r4
 8009330:	bf0c      	ite	eq
 8009332:	4628      	moveq	r0, r5
 8009334:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009338:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800933c:	f7ff bd98 	b.w	8008e70 <prvAddCurrentTaskToDelayedList>
 8009340:	20011d88 	.word	0x20011d88

08009344 <xTaskRemoveFromEventList>:
{
 8009344:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009346:	68c3      	ldr	r3, [r0, #12]
 8009348:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800934a:	b944      	cbnz	r4, 800935e <xTaskRemoveFromEventList+0x1a>
 800934c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009350:	f383 8811 	msr	BASEPRI, r3
 8009354:	f3bf 8f6f 	isb	sy
 8009358:	f3bf 8f4f 	dsb	sy
 800935c:	e7fe      	b.n	800935c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800935e:	f104 0518 	add.w	r5, r4, #24
 8009362:	4628      	mov	r0, r5
 8009364:	f7fe fd97 	bl	8007e96 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009368:	4b10      	ldr	r3, [pc, #64]	; (80093ac <xTaskRemoveFromEventList+0x68>)
 800936a:	681b      	ldr	r3, [r3, #0]
 800936c:	b9db      	cbnz	r3, 80093a6 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800936e:	1d25      	adds	r5, r4, #4
 8009370:	4628      	mov	r0, r5
 8009372:	f7fe fd90 	bl	8007e96 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009376:	4a0e      	ldr	r2, [pc, #56]	; (80093b0 <xTaskRemoveFromEventList+0x6c>)
 8009378:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800937a:	6811      	ldr	r1, [r2, #0]
 800937c:	428b      	cmp	r3, r1
 800937e:	bf88      	it	hi
 8009380:	6013      	strhi	r3, [r2, #0]
 8009382:	4a0c      	ldr	r2, [pc, #48]	; (80093b4 <xTaskRemoveFromEventList+0x70>)
 8009384:	2014      	movs	r0, #20
 8009386:	4629      	mov	r1, r5
 8009388:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800938c:	f7fe fd60 	bl	8007e50 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009390:	4b09      	ldr	r3, [pc, #36]	; (80093b8 <xTaskRemoveFromEventList+0x74>)
 8009392:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009394:	681b      	ldr	r3, [r3, #0]
 8009396:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009398:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800939a:	bf83      	ittte	hi
 800939c:	4b07      	ldrhi	r3, [pc, #28]	; (80093bc <xTaskRemoveFromEventList+0x78>)
 800939e:	2001      	movhi	r0, #1
 80093a0:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 80093a2:	2000      	movls	r0, #0
}
 80093a4:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80093a6:	4629      	mov	r1, r5
 80093a8:	4805      	ldr	r0, [pc, #20]	; (80093c0 <xTaskRemoveFromEventList+0x7c>)
 80093aa:	e7ef      	b.n	800938c <xTaskRemoveFromEventList+0x48>
 80093ac:	20012200 	.word	0x20012200
 80093b0:	20012208 	.word	0x20012208
 80093b4:	20011d94 	.word	0x20011d94
 80093b8:	20011d88 	.word	0x20011d88
 80093bc:	20012280 	.word	0x20012280
 80093c0:	2001223c 	.word	0x2001223c

080093c4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80093c4:	4b03      	ldr	r3, [pc, #12]	; (80093d4 <vTaskInternalSetTimeOutState+0x10>)
 80093c6:	681b      	ldr	r3, [r3, #0]
 80093c8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80093ca:	4b03      	ldr	r3, [pc, #12]	; (80093d8 <vTaskInternalSetTimeOutState+0x14>)
 80093cc:	681b      	ldr	r3, [r3, #0]
 80093ce:	6043      	str	r3, [r0, #4]
}
 80093d0:	4770      	bx	lr
 80093d2:	bf00      	nop
 80093d4:	20012238 	.word	0x20012238
 80093d8:	2001227c 	.word	0x2001227c

080093dc <xTaskCheckForTimeOut>:
{
 80093dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80093de:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80093e0:	4605      	mov	r5, r0
 80093e2:	b940      	cbnz	r0, 80093f6 <xTaskCheckForTimeOut+0x1a>
 80093e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093e8:	f383 8811 	msr	BASEPRI, r3
 80093ec:	f3bf 8f6f 	isb	sy
 80093f0:	f3bf 8f4f 	dsb	sy
 80093f4:	e7fe      	b.n	80093f4 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80093f6:	b941      	cbnz	r1, 800940a <xTaskCheckForTimeOut+0x2e>
 80093f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093fc:	f383 8811 	msr	BASEPRI, r3
 8009400:	f3bf 8f6f 	isb	sy
 8009404:	f3bf 8f4f 	dsb	sy
 8009408:	e7fe      	b.n	8009408 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800940a:	f7fe fdbb 	bl	8007f84 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800940e:	4b0f      	ldr	r3, [pc, #60]	; (800944c <xTaskCheckForTimeOut+0x70>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009410:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 8009412:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009414:	6823      	ldr	r3, [r4, #0]
 8009416:	1c5e      	adds	r6, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009418:	eba1 0200 	sub.w	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 800941c:	d00d      	beq.n	800943a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800941e:	4e0c      	ldr	r6, [pc, #48]	; (8009450 <xTaskCheckForTimeOut+0x74>)
 8009420:	682f      	ldr	r7, [r5, #0]
 8009422:	6836      	ldr	r6, [r6, #0]
 8009424:	42b7      	cmp	r7, r6
 8009426:	d001      	beq.n	800942c <xTaskCheckForTimeOut+0x50>
 8009428:	4288      	cmp	r0, r1
 800942a:	d90d      	bls.n	8009448 <xTaskCheckForTimeOut+0x6c>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800942c:	4293      	cmp	r3, r2
 800942e:	d909      	bls.n	8009444 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009430:	1a9b      	subs	r3, r3, r2
 8009432:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009434:	4628      	mov	r0, r5
 8009436:	f7ff ffc5 	bl	80093c4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800943a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800943c:	f7fe fdc4 	bl	8007fc8 <vPortExitCritical>
}
 8009440:	4620      	mov	r0, r4
 8009442:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 8009444:	2300      	movs	r3, #0
 8009446:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009448:	2401      	movs	r4, #1
 800944a:	e7f7      	b.n	800943c <xTaskCheckForTimeOut+0x60>
 800944c:	2001227c 	.word	0x2001227c
 8009450:	20012238 	.word	0x20012238

08009454 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009454:	4b01      	ldr	r3, [pc, #4]	; (800945c <vTaskMissedYield+0x8>)
 8009456:	2201      	movs	r2, #1
 8009458:	601a      	str	r2, [r3, #0]
}
 800945a:	4770      	bx	lr
 800945c:	20012280 	.word	0x20012280

08009460 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009460:	4b05      	ldr	r3, [pc, #20]	; (8009478 <xTaskGetSchedulerState+0x18>)
 8009462:	681b      	ldr	r3, [r3, #0]
 8009464:	b133      	cbz	r3, 8009474 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009466:	4b05      	ldr	r3, [pc, #20]	; (800947c <xTaskGetSchedulerState+0x1c>)
 8009468:	681b      	ldr	r3, [r3, #0]
 800946a:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 800946c:	bf0c      	ite	eq
 800946e:	2002      	moveq	r0, #2
 8009470:	2000      	movne	r0, #0
 8009472:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009474:	2001      	movs	r0, #1
	}
 8009476:	4770      	bx	lr
 8009478:	20012250 	.word	0x20012250
 800947c:	20012200 	.word	0x20012200

08009480 <xTaskPriorityInherit>:
	{
 8009480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8009482:	4604      	mov	r4, r0
 8009484:	b340      	cbz	r0, 80094d8 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009486:	4a1b      	ldr	r2, [pc, #108]	; (80094f4 <xTaskPriorityInherit+0x74>)
 8009488:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800948a:	6811      	ldr	r1, [r2, #0]
 800948c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800948e:	428b      	cmp	r3, r1
 8009490:	4616      	mov	r6, r2
 8009492:	d226      	bcs.n	80094e2 <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009494:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009496:	4d18      	ldr	r5, [pc, #96]	; (80094f8 <xTaskPriorityInherit+0x78>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009498:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800949a:	bfa1      	itttt	ge
 800949c:	6832      	ldrge	r2, [r6, #0]
 800949e:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 80094a0:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 80094a4:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80094a6:	2214      	movs	r2, #20
 80094a8:	fb02 5303 	mla	r3, r2, r3, r5
 80094ac:	6942      	ldr	r2, [r0, #20]
 80094ae:	429a      	cmp	r2, r3
 80094b0:	d113      	bne.n	80094da <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094b2:	1d07      	adds	r7, r0, #4
 80094b4:	4638      	mov	r0, r7
 80094b6:	f7fe fcee 	bl	8007e96 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80094ba:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80094bc:	4a0f      	ldr	r2, [pc, #60]	; (80094fc <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80094be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80094c0:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80094c2:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80094c4:	2014      	movs	r0, #20
 80094c6:	428b      	cmp	r3, r1
 80094c8:	fb00 5003 	mla	r0, r0, r3, r5
 80094cc:	4639      	mov	r1, r7
 80094ce:	bf88      	it	hi
 80094d0:	6013      	strhi	r3, [r2, #0]
 80094d2:	f7fe fcbd 	bl	8007e50 <vListInsertEnd>
				xReturn = pdTRUE;
 80094d6:	2001      	movs	r0, #1
	}
 80094d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80094da:	6833      	ldr	r3, [r6, #0]
 80094dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80094de:	62c3      	str	r3, [r0, #44]	; 0x2c
 80094e0:	e7f9      	b.n	80094d6 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80094e2:	6813      	ldr	r3, [r2, #0]
 80094e4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80094e6:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 80094e8:	42a0      	cmp	r0, r4
 80094ea:	bf2c      	ite	cs
 80094ec:	2000      	movcs	r0, #0
 80094ee:	2001      	movcc	r0, #1
 80094f0:	e7f2      	b.n	80094d8 <xTaskPriorityInherit+0x58>
 80094f2:	bf00      	nop
 80094f4:	20011d88 	.word	0x20011d88
 80094f8:	20011d94 	.word	0x20011d94
 80094fc:	20012208 	.word	0x20012208

08009500 <xTaskPriorityDisinherit>:
	{
 8009500:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009502:	b908      	cbnz	r0, 8009508 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8009504:	2000      	movs	r0, #0
	}
 8009506:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009508:	4b1b      	ldr	r3, [pc, #108]	; (8009578 <xTaskPriorityDisinherit+0x78>)
 800950a:	681c      	ldr	r4, [r3, #0]
 800950c:	4284      	cmp	r4, r0
 800950e:	d008      	beq.n	8009522 <xTaskPriorityDisinherit+0x22>
 8009510:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009514:	f383 8811 	msr	BASEPRI, r3
 8009518:	f3bf 8f6f 	isb	sy
 800951c:	f3bf 8f4f 	dsb	sy
 8009520:	e7fe      	b.n	8009520 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8009522:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009524:	b943      	cbnz	r3, 8009538 <xTaskPriorityDisinherit+0x38>
 8009526:	f04f 0350 	mov.w	r3, #80	; 0x50
 800952a:	f383 8811 	msr	BASEPRI, r3
 800952e:	f3bf 8f6f 	isb	sy
 8009532:	f3bf 8f4f 	dsb	sy
 8009536:	e7fe      	b.n	8009536 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009538:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800953a:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800953c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800953e:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009540:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009542:	d0df      	beq.n	8009504 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009544:	2b00      	cmp	r3, #0
 8009546:	d1dd      	bne.n	8009504 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009548:	1d25      	adds	r5, r4, #4
 800954a:	4628      	mov	r0, r5
 800954c:	f7fe fca3 	bl	8007e96 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009550:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009552:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009554:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8009558:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800955a:	4a08      	ldr	r2, [pc, #32]	; (800957c <xTaskPriorityDisinherit+0x7c>)
 800955c:	6811      	ldr	r1, [r2, #0]
 800955e:	428b      	cmp	r3, r1
 8009560:	bf88      	it	hi
 8009562:	6013      	strhi	r3, [r2, #0]
 8009564:	4a06      	ldr	r2, [pc, #24]	; (8009580 <xTaskPriorityDisinherit+0x80>)
 8009566:	2014      	movs	r0, #20
 8009568:	fb00 2003 	mla	r0, r0, r3, r2
 800956c:	4629      	mov	r1, r5
 800956e:	f7fe fc6f 	bl	8007e50 <vListInsertEnd>
					xReturn = pdTRUE;
 8009572:	2001      	movs	r0, #1
		return xReturn;
 8009574:	e7c7      	b.n	8009506 <xTaskPriorityDisinherit+0x6>
 8009576:	bf00      	nop
 8009578:	20011d88 	.word	0x20011d88
 800957c:	20012208 	.word	0x20012208
 8009580:	20011d94 	.word	0x20011d94

08009584 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009584:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009586:	4604      	mov	r4, r0
 8009588:	2800      	cmp	r0, #0
 800958a:	d041      	beq.n	8009610 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800958c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800958e:	b942      	cbnz	r2, 80095a2 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009590:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009594:	f383 8811 	msr	BASEPRI, r3
 8009598:	f3bf 8f6f 	isb	sy
 800959c:	f3bf 8f4f 	dsb	sy
 80095a0:	e7fe      	b.n	80095a0 <vTaskPriorityDisinheritAfterTimeout+0x1c>
 80095a2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80095a4:	4299      	cmp	r1, r3
 80095a6:	bf38      	it	cc
 80095a8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 80095aa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80095ac:	428b      	cmp	r3, r1
 80095ae:	d02f      	beq.n	8009610 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80095b0:	2a01      	cmp	r2, #1
 80095b2:	d12d      	bne.n	8009610 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 80095b4:	4a17      	ldr	r2, [pc, #92]	; (8009614 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 80095b6:	6812      	ldr	r2, [r2, #0]
 80095b8:	4282      	cmp	r2, r0
 80095ba:	d108      	bne.n	80095ce <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80095bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095c0:	f383 8811 	msr	BASEPRI, r3
 80095c4:	f3bf 8f6f 	isb	sy
 80095c8:	f3bf 8f4f 	dsb	sy
 80095cc:	e7fe      	b.n	80095cc <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80095ce:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80095d0:	4d11      	ldr	r5, [pc, #68]	; (8009618 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 80095d2:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80095d4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80095d6:	f04f 0214 	mov.w	r2, #20
 80095da:	fb02 5303 	mla	r3, r2, r3, r5
 80095de:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80095e0:	bfa4      	itt	ge
 80095e2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 80095e6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80095e8:	429a      	cmp	r2, r3
 80095ea:	d111      	bne.n	8009610 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80095ec:	1d06      	adds	r6, r0, #4
 80095ee:	4630      	mov	r0, r6
 80095f0:	f7fe fc51 	bl	8007e96 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80095f4:	4a09      	ldr	r2, [pc, #36]	; (800961c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80095f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80095f8:	6811      	ldr	r1, [r2, #0]
 80095fa:	2014      	movs	r0, #20
 80095fc:	428b      	cmp	r3, r1
 80095fe:	fb00 5003 	mla	r0, r0, r3, r5
 8009602:	4631      	mov	r1, r6
	}
 8009604:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8009608:	bf88      	it	hi
 800960a:	6013      	strhi	r3, [r2, #0]
 800960c:	f7fe bc20 	b.w	8007e50 <vListInsertEnd>
	}
 8009610:	bd70      	pop	{r4, r5, r6, pc}
 8009612:	bf00      	nop
 8009614:	20011d88 	.word	0x20011d88
 8009618:	20011d94 	.word	0x20011d94
 800961c:	20012208 	.word	0x20012208

08009620 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009620:	4b04      	ldr	r3, [pc, #16]	; (8009634 <pvTaskIncrementMutexHeldCount+0x14>)
 8009622:	681a      	ldr	r2, [r3, #0]
 8009624:	b11a      	cbz	r2, 800962e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009626:	6819      	ldr	r1, [r3, #0]
 8009628:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800962a:	3201      	adds	r2, #1
 800962c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800962e:	6818      	ldr	r0, [r3, #0]
	}
 8009630:	4770      	bx	lr
 8009632:	bf00      	nop
 8009634:	20011d88 	.word	0x20011d88

08009638 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009638:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800963a:	4c11      	ldr	r4, [pc, #68]	; (8009680 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800963c:	f7fe fca2 	bl	8007f84 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009640:	6825      	ldr	r5, [r4, #0]
 8009642:	b9bd      	cbnz	r5, 8009674 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009644:	4f0f      	ldr	r7, [pc, #60]	; (8009684 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009646:	4e10      	ldr	r6, [pc, #64]	; (8009688 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009648:	4638      	mov	r0, r7
 800964a:	f7fe fbf3 	bl	8007e34 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800964e:	4630      	mov	r0, r6
 8009650:	f7fe fbf0 	bl	8007e34 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009654:	4b0d      	ldr	r3, [pc, #52]	; (800968c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009656:	4a0e      	ldr	r2, [pc, #56]	; (8009690 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009658:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800965a:	4b0e      	ldr	r3, [pc, #56]	; (8009694 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800965c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800965e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009660:	200a      	movs	r0, #10
 8009662:	9500      	str	r5, [sp, #0]
 8009664:	4b0c      	ldr	r3, [pc, #48]	; (8009698 <prvCheckForValidListAndQueue+0x60>)
 8009666:	f7fe fea5 	bl	80083b4 <xQueueGenericCreateStatic>
 800966a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800966c:	b110      	cbz	r0, 8009674 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800966e:	490b      	ldr	r1, [pc, #44]	; (800969c <prvCheckForValidListAndQueue+0x64>)
 8009670:	f7ff fa70 	bl	8008b54 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009674:	b003      	add	sp, #12
 8009676:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800967a:	f7fe bca5 	b.w	8007fc8 <vPortExitCritical>
 800967e:	bf00      	nop
 8009680:	200123a8 	.word	0x200123a8
 8009684:	2001232c 	.word	0x2001232c
 8009688:	20012340 	.word	0x20012340
 800968c:	20012284 	.word	0x20012284
 8009690:	2001228c 	.word	0x2001228c
 8009694:	20012288 	.word	0x20012288
 8009698:	20012358 	.word	0x20012358
 800969c:	0801ca75 	.word	0x0801ca75

080096a0 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 80096a0:	4291      	cmp	r1, r2
{
 80096a2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80096a4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80096a6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 80096a8:	d80a      	bhi.n	80096c0 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80096aa:	1ad2      	subs	r2, r2, r3
 80096ac:	6983      	ldr	r3, [r0, #24]
 80096ae:	429a      	cmp	r2, r3
 80096b0:	d20d      	bcs.n	80096ce <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80096b2:	4b08      	ldr	r3, [pc, #32]	; (80096d4 <prvInsertTimerInActiveList+0x34>)
 80096b4:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80096b6:	6818      	ldr	r0, [r3, #0]
 80096b8:	f7fe fbd6 	bl	8007e68 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80096bc:	2000      	movs	r0, #0
}
 80096be:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80096c0:	429a      	cmp	r2, r3
 80096c2:	d201      	bcs.n	80096c8 <prvInsertTimerInActiveList+0x28>
 80096c4:	4299      	cmp	r1, r3
 80096c6:	d202      	bcs.n	80096ce <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80096c8:	1d01      	adds	r1, r0, #4
 80096ca:	4b03      	ldr	r3, [pc, #12]	; (80096d8 <prvInsertTimerInActiveList+0x38>)
 80096cc:	e7f3      	b.n	80096b6 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80096ce:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80096d0:	e7f5      	b.n	80096be <prvInsertTimerInActiveList+0x1e>
 80096d2:	bf00      	nop
 80096d4:	20012288 	.word	0x20012288
 80096d8:	20012284 	.word	0x20012284

080096dc <xTimerCreateTimerTask>:
{
 80096dc:	b510      	push	{r4, lr}
 80096de:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80096e0:	f7ff ffaa 	bl	8009638 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80096e4:	4b12      	ldr	r3, [pc, #72]	; (8009730 <xTimerCreateTimerTask+0x54>)
 80096e6:	681b      	ldr	r3, [r3, #0]
 80096e8:	b1b3      	cbz	r3, 8009718 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80096ea:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80096ec:	aa07      	add	r2, sp, #28
 80096ee:	a906      	add	r1, sp, #24
 80096f0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80096f2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80096f6:	f7fe faa9 	bl	8007c4c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80096fa:	9b05      	ldr	r3, [sp, #20]
 80096fc:	9302      	str	r3, [sp, #8]
 80096fe:	9b06      	ldr	r3, [sp, #24]
 8009700:	9301      	str	r3, [sp, #4]
 8009702:	2302      	movs	r3, #2
 8009704:	9300      	str	r3, [sp, #0]
 8009706:	9a07      	ldr	r2, [sp, #28]
 8009708:	490a      	ldr	r1, [pc, #40]	; (8009734 <xTimerCreateTimerTask+0x58>)
 800970a:	480b      	ldr	r0, [pc, #44]	; (8009738 <xTimerCreateTimerTask+0x5c>)
 800970c:	4623      	mov	r3, r4
 800970e:	f7ff fbe9 	bl	8008ee4 <xTaskCreateStatic>
 8009712:	4b0a      	ldr	r3, [pc, #40]	; (800973c <xTimerCreateTimerTask+0x60>)
 8009714:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009716:	b940      	cbnz	r0, 800972a <xTimerCreateTimerTask+0x4e>
 8009718:	f04f 0350 	mov.w	r3, #80	; 0x50
 800971c:	f383 8811 	msr	BASEPRI, r3
 8009720:	f3bf 8f6f 	isb	sy
 8009724:	f3bf 8f4f 	dsb	sy
 8009728:	e7fe      	b.n	8009728 <xTimerCreateTimerTask+0x4c>
}
 800972a:	2001      	movs	r0, #1
 800972c:	b008      	add	sp, #32
 800972e:	bd10      	pop	{r4, pc}
 8009730:	200123a8 	.word	0x200123a8
 8009734:	0801ca7a 	.word	0x0801ca7a
 8009738:	08009819 	.word	0x08009819
 800973c:	200123ac 	.word	0x200123ac

08009740 <xTimerGenericCommand>:
{
 8009740:	b530      	push	{r4, r5, lr}
 8009742:	4615      	mov	r5, r2
 8009744:	b085      	sub	sp, #20
 8009746:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009748:	4603      	mov	r3, r0
 800974a:	b940      	cbnz	r0, 800975e <xTimerGenericCommand+0x1e>
 800974c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009750:	f383 8811 	msr	BASEPRI, r3
 8009754:	f3bf 8f6f 	isb	sy
 8009758:	f3bf 8f4f 	dsb	sy
 800975c:	e7fe      	b.n	800975c <xTimerGenericCommand+0x1c>
	if( xTimerQueue != NULL )
 800975e:	4c0d      	ldr	r4, [pc, #52]	; (8009794 <xTimerGenericCommand+0x54>)
 8009760:	6820      	ldr	r0, [r4, #0]
 8009762:	b180      	cbz	r0, 8009786 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009764:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009766:	e9cd 1500 	strd	r1, r5, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800976a:	9302      	str	r3, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800976c:	dc0d      	bgt.n	800978a <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800976e:	f7ff fe77 	bl	8009460 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009772:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009774:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009776:	bf08      	it	eq
 8009778:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800977a:	6820      	ldr	r0, [r4, #0]
 800977c:	bf18      	it	ne
 800977e:	461a      	movne	r2, r3
 8009780:	4669      	mov	r1, sp
 8009782:	f7fe fecd 	bl	8008520 <xQueueGenericSend>
}
 8009786:	b005      	add	sp, #20
 8009788:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800978a:	2300      	movs	r3, #0
 800978c:	4669      	mov	r1, sp
 800978e:	f7fe ff79 	bl	8008684 <xQueueGenericSendFromISR>
 8009792:	e7f8      	b.n	8009786 <xTimerGenericCommand+0x46>
 8009794:	200123a8 	.word	0x200123a8

08009798 <prvSwitchTimerLists>:
{
 8009798:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800979c:	4d1c      	ldr	r5, [pc, #112]	; (8009810 <prvSwitchTimerLists+0x78>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800979e:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80097a2:	682b      	ldr	r3, [r5, #0]
 80097a4:	681a      	ldr	r2, [r3, #0]
 80097a6:	b932      	cbnz	r2, 80097b6 <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 80097a8:	4a1a      	ldr	r2, [pc, #104]	; (8009814 <prvSwitchTimerLists+0x7c>)
 80097aa:	6811      	ldr	r1, [r2, #0]
 80097ac:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 80097ae:	6013      	str	r3, [r2, #0]
}
 80097b0:	b002      	add	sp, #8
 80097b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80097b6:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097b8:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80097ba:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80097bc:	1d27      	adds	r7, r4, #4
 80097be:	4638      	mov	r0, r7
 80097c0:	f7fe fb69 	bl	8007e96 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80097c4:	6a23      	ldr	r3, [r4, #32]
 80097c6:	4620      	mov	r0, r4
 80097c8:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80097ca:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80097ce:	075b      	lsls	r3, r3, #29
 80097d0:	d5e7      	bpl.n	80097a2 <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80097d2:	69a3      	ldr	r3, [r4, #24]
 80097d4:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 80097d6:	429e      	cmp	r6, r3
 80097d8:	d206      	bcs.n	80097e8 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80097da:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80097dc:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80097de:	4639      	mov	r1, r7
 80097e0:	6828      	ldr	r0, [r5, #0]
 80097e2:	f7fe fb41 	bl	8007e68 <vListInsert>
 80097e6:	e7dc      	b.n	80097a2 <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80097e8:	2300      	movs	r3, #0
 80097ea:	f8cd 8000 	str.w	r8, [sp]
 80097ee:	4632      	mov	r2, r6
 80097f0:	4619      	mov	r1, r3
 80097f2:	4620      	mov	r0, r4
 80097f4:	f7ff ffa4 	bl	8009740 <xTimerGenericCommand>
				configASSERT( xResult );
 80097f8:	2800      	cmp	r0, #0
 80097fa:	d1d2      	bne.n	80097a2 <prvSwitchTimerLists+0xa>
 80097fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009800:	f383 8811 	msr	BASEPRI, r3
 8009804:	f3bf 8f6f 	isb	sy
 8009808:	f3bf 8f4f 	dsb	sy
 800980c:	e7fe      	b.n	800980c <prvSwitchTimerLists+0x74>
 800980e:	bf00      	nop
 8009810:	20012284 	.word	0x20012284
 8009814:	20012288 	.word	0x20012288

08009818 <prvTimerTask>:
{
 8009818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800981c:	4d81      	ldr	r5, [pc, #516]	; (8009a24 <prvTimerTask+0x20c>)
					portYIELD_WITHIN_API();
 800981e:	f8df 8210 	ldr.w	r8, [pc, #528]	; 8009a30 <prvTimerTask+0x218>
{
 8009822:	b087      	sub	sp, #28
 8009824:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009826:	682a      	ldr	r2, [r5, #0]
 8009828:	6813      	ldr	r3, [r2, #0]
 800982a:	b353      	cbz	r3, 8009882 <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800982c:	68d3      	ldr	r3, [r2, #12]
 800982e:	f8d3 9000 	ldr.w	r9, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009832:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 8009834:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8009a34 <prvTimerTask+0x21c>
	vTaskSuspendAll();
 8009838:	f7ff fbfe 	bl	8009038 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800983c:	f7ff fc04 	bl	8009048 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009840:	f8db 3000 	ldr.w	r3, [fp]
 8009844:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8009846:	4682      	mov	sl, r0
 8009848:	465e      	mov	r6, fp
	if( xTimeNow < xLastTime )
 800984a:	d31d      	bcc.n	8009888 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800984c:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009850:	b32c      	cbz	r4, 800989e <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009852:	4b75      	ldr	r3, [pc, #468]	; (8009a28 <prvTimerTask+0x210>)
 8009854:	681b      	ldr	r3, [r3, #0]
 8009856:	681a      	ldr	r2, [r3, #0]
 8009858:	fab2 f282 	clz	r2, r2
 800985c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800985e:	4b73      	ldr	r3, [pc, #460]	; (8009a2c <prvTimerTask+0x214>)
 8009860:	eba9 010a 	sub.w	r1, r9, sl
 8009864:	6818      	ldr	r0, [r3, #0]
 8009866:	f7ff f9b2 	bl	8008bce <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800986a:	f7ff fc83 	bl	8009174 <xTaskResumeAll>
 800986e:	b988      	cbnz	r0, 8009894 <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 8009870:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009874:	f8c8 3000 	str.w	r3, [r8]
 8009878:	f3bf 8f4f 	dsb	sy
 800987c:	f3bf 8f6f 	isb	sy
 8009880:	e008      	b.n	8009894 <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009882:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 8009884:	4699      	mov	r9, r3
 8009886:	e7d5      	b.n	8009834 <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 8009888:	f7ff ff86 	bl	8009798 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800988c:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 8009890:	f7ff fc70 	bl	8009174 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009894:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8009a2c <prvTimerTask+0x214>
 8009898:	f04f 0a00 	mov.w	sl, #0
 800989c:	e07d      	b.n	800999a <prvTimerTask+0x182>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800989e:	4581      	cmp	r9, r0
 80098a0:	d830      	bhi.n	8009904 <prvTimerTask+0xec>
				( void ) xTaskResumeAll();
 80098a2:	f7ff fc67 	bl	8009174 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80098a6:	683b      	ldr	r3, [r7, #0]
 80098a8:	68db      	ldr	r3, [r3, #12]
 80098aa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80098ae:	f10b 0004 	add.w	r0, fp, #4
 80098b2:	f7fe faf0 	bl	8007e96 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80098b6:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 80098ba:	0758      	lsls	r0, r3, #29
 80098bc:	d519      	bpl.n	80098f2 <prvTimerTask+0xda>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80098be:	f8db 1018 	ldr.w	r1, [fp, #24]
 80098c2:	464b      	mov	r3, r9
 80098c4:	4652      	mov	r2, sl
 80098c6:	4449      	add	r1, r9
 80098c8:	4658      	mov	r0, fp
 80098ca:	f7ff fee9 	bl	80096a0 <prvInsertTimerInActiveList>
 80098ce:	b1a0      	cbz	r0, 80098fa <prvTimerTask+0xe2>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80098d0:	9400      	str	r4, [sp, #0]
 80098d2:	4623      	mov	r3, r4
 80098d4:	464a      	mov	r2, r9
 80098d6:	4621      	mov	r1, r4
 80098d8:	4658      	mov	r0, fp
 80098da:	f7ff ff31 	bl	8009740 <xTimerGenericCommand>
			configASSERT( xResult );
 80098de:	b960      	cbnz	r0, 80098fa <prvTimerTask+0xe2>
 80098e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098e4:	f383 8811 	msr	BASEPRI, r3
 80098e8:	f3bf 8f6f 	isb	sy
 80098ec:	f3bf 8f4f 	dsb	sy
 80098f0:	e7fe      	b.n	80098f0 <prvTimerTask+0xd8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80098f2:	f023 0301 	bic.w	r3, r3, #1
 80098f6:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80098fa:	f8db 3020 	ldr.w	r3, [fp, #32]
 80098fe:	4658      	mov	r0, fp
 8009900:	4798      	blx	r3
 8009902:	e7c7      	b.n	8009894 <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009904:	4622      	mov	r2, r4
 8009906:	e7aa      	b.n	800985e <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009908:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800990c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800990e:	f043 0301 	orr.w	r3, r3, #1
 8009912:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009916:	9b03      	ldr	r3, [sp, #12]
 8009918:	465a      	mov	r2, fp
 800991a:	4419      	add	r1, r3
 800991c:	4620      	mov	r0, r4
 800991e:	f7ff febf 	bl	80096a0 <prvInsertTimerInActiveList>
 8009922:	2800      	cmp	r0, #0
 8009924:	d039      	beq.n	800999a <prvTimerTask+0x182>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009926:	6a23      	ldr	r3, [r4, #32]
 8009928:	4620      	mov	r0, r4
 800992a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800992c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009930:	0759      	lsls	r1, r3, #29
 8009932:	d532      	bpl.n	800999a <prvTimerTask+0x182>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009934:	69a2      	ldr	r2, [r4, #24]
 8009936:	9903      	ldr	r1, [sp, #12]
 8009938:	f8cd a000 	str.w	sl, [sp]
 800993c:	2300      	movs	r3, #0
 800993e:	440a      	add	r2, r1
 8009940:	4620      	mov	r0, r4
 8009942:	4619      	mov	r1, r3
 8009944:	f7ff fefc 	bl	8009740 <xTimerGenericCommand>
							configASSERT( xResult );
 8009948:	bb38      	cbnz	r0, 800999a <prvTimerTask+0x182>
 800994a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800994e:	f383 8811 	msr	BASEPRI, r3
 8009952:	f3bf 8f6f 	isb	sy
 8009956:	f3bf 8f4f 	dsb	sy
 800995a:	e7fe      	b.n	800995a <prvTimerTask+0x142>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800995c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009960:	f023 0301 	bic.w	r3, r3, #1
 8009964:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009968:	e017      	b.n	800999a <prvTimerTask+0x182>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800996a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800996e:	9903      	ldr	r1, [sp, #12]
 8009970:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009972:	f043 0301 	orr.w	r3, r3, #1
 8009976:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800997a:	b941      	cbnz	r1, 800998e <prvTimerTask+0x176>
 800997c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009980:	f383 8811 	msr	BASEPRI, r3
 8009984:	f3bf 8f6f 	isb	sy
 8009988:	f3bf 8f4f 	dsb	sy
 800998c:	e7fe      	b.n	800998c <prvTimerTask+0x174>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800998e:	465b      	mov	r3, fp
 8009990:	465a      	mov	r2, fp
 8009992:	4459      	add	r1, fp
 8009994:	4620      	mov	r0, r4
 8009996:	f7ff fe83 	bl	80096a0 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800999a:	2200      	movs	r2, #0
 800999c:	a902      	add	r1, sp, #8
 800999e:	f8d9 0000 	ldr.w	r0, [r9]
 80099a2:	f7fe ff25 	bl	80087f0 <xQueueReceive>
 80099a6:	2800      	cmp	r0, #0
 80099a8:	f43f af3d 	beq.w	8009826 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80099ac:	9b02      	ldr	r3, [sp, #8]
 80099ae:	2b00      	cmp	r3, #0
 80099b0:	da03      	bge.n	80099ba <prvTimerTask+0x1a2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80099b2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80099b6:	9b03      	ldr	r3, [sp, #12]
 80099b8:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80099ba:	9b02      	ldr	r3, [sp, #8]
 80099bc:	2b00      	cmp	r3, #0
 80099be:	dbec      	blt.n	800999a <prvTimerTask+0x182>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80099c0:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80099c2:	6963      	ldr	r3, [r4, #20]
 80099c4:	b113      	cbz	r3, 80099cc <prvTimerTask+0x1b4>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80099c6:	1d20      	adds	r0, r4, #4
 80099c8:	f7fe fa65 	bl	8007e96 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 80099cc:	f7ff fb3c 	bl	8009048 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80099d0:	6833      	ldr	r3, [r6, #0]
 80099d2:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80099d4:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 80099d6:	d201      	bcs.n	80099dc <prvTimerTask+0x1c4>
		prvSwitchTimerLists();
 80099d8:	f7ff fede 	bl	8009798 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 80099dc:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 80099de:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 80099e2:	2b09      	cmp	r3, #9
 80099e4:	d8d9      	bhi.n	800999a <prvTimerTask+0x182>
 80099e6:	a201      	add	r2, pc, #4	; (adr r2, 80099ec <prvTimerTask+0x1d4>)
 80099e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80099ec:	08009909 	.word	0x08009909
 80099f0:	08009909 	.word	0x08009909
 80099f4:	08009909 	.word	0x08009909
 80099f8:	0800995d 	.word	0x0800995d
 80099fc:	0800996b 	.word	0x0800996b
 8009a00:	08009a15 	.word	0x08009a15
 8009a04:	08009909 	.word	0x08009909
 8009a08:	08009909 	.word	0x08009909
 8009a0c:	0800995d 	.word	0x0800995d
 8009a10:	0800996b 	.word	0x0800996b
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009a14:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009a18:	079a      	lsls	r2, r3, #30
 8009a1a:	d4a1      	bmi.n	8009960 <prvTimerTask+0x148>
							vPortFree( pxTimer );
 8009a1c:	4620      	mov	r0, r4
 8009a1e:	f7fe f9d1 	bl	8007dc4 <vPortFree>
 8009a22:	e7ba      	b.n	800999a <prvTimerTask+0x182>
 8009a24:	20012284 	.word	0x20012284
 8009a28:	20012288 	.word	0x20012288
 8009a2c:	200123a8 	.word	0x200123a8
 8009a30:	e000ed04 	.word	0xe000ed04
 8009a34:	20012354 	.word	0x20012354

08009a38 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009a38:	8880      	ldrh	r0, [r0, #4]
 8009a3a:	4770      	bx	lr

08009a3c <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009a3c:	2300      	movs	r3, #0
 8009a3e:	8083      	strh	r3, [r0, #4]
 8009a40:	4770      	bx	lr
	...

08009a44 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009a46:	6803      	ldr	r3, [r0, #0]
 8009a48:	4605      	mov	r5, r0
 8009a4a:	460e      	mov	r6, r1
 8009a4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a4e:	2100      	movs	r1, #0
 8009a50:	4798      	blx	r3
 8009a52:	682b      	ldr	r3, [r5, #0]
 8009a54:	4604      	mov	r4, r0
 8009a56:	6a1b      	ldr	r3, [r3, #32]
 8009a58:	4628      	mov	r0, r5
 8009a5a:	4798      	blx	r3
 8009a5c:	88ab      	ldrh	r3, [r5, #4]
 8009a5e:	1b34      	subs	r4, r6, r4
 8009a60:	b2a4      	uxth	r4, r4
 8009a62:	fbb4 f4f0 	udiv	r4, r4, r0
 8009a66:	42a3      	cmp	r3, r4
 8009a68:	d805      	bhi.n	8009a76 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8009a6a:	4b0e      	ldr	r3, [pc, #56]	; (8009aa4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009a6c:	4a0e      	ldr	r2, [pc, #56]	; (8009aa8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009a6e:	2120      	movs	r1, #32
 8009a70:	480e      	ldr	r0, [pc, #56]	; (8009aac <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8009a72:	f010 feb9 	bl	801a7e8 <__assert_func>
 8009a76:	682b      	ldr	r3, [r5, #0]
 8009a78:	2100      	movs	r1, #0
 8009a7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a7c:	4628      	mov	r0, r5
 8009a7e:	4798      	blx	r3
 8009a80:	682b      	ldr	r3, [r5, #0]
 8009a82:	4607      	mov	r7, r0
 8009a84:	6a1b      	ldr	r3, [r3, #32]
 8009a86:	4628      	mov	r0, r5
 8009a88:	4798      	blx	r3
 8009a8a:	1bf3      	subs	r3, r6, r7
 8009a8c:	b29b      	uxth	r3, r3
 8009a8e:	fbb3 f2f0 	udiv	r2, r3, r0
 8009a92:	fb02 3010 	mls	r0, r2, r0, r3
 8009a96:	b118      	cbz	r0, 8009aa0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8009a98:	4b05      	ldr	r3, [pc, #20]	; (8009ab0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8009a9a:	4a03      	ldr	r2, [pc, #12]	; (8009aa8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009a9c:	2121      	movs	r1, #33	; 0x21
 8009a9e:	e7e7      	b.n	8009a70 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8009aa0:	4620      	mov	r0, r4
 8009aa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009aa4:	0801ca82 	.word	0x0801ca82
 8009aa8:	0801cbee 	.word	0x0801cbee
 8009aac:	0801ca97 	.word	0x0801ca97
 8009ab0:	0801cac5 	.word	0x0801cac5

08009ab4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009ab4:	b538      	push	{r3, r4, r5, lr}
 8009ab6:	6803      	ldr	r3, [r0, #0]
 8009ab8:	6a1b      	ldr	r3, [r3, #32]
 8009aba:	460d      	mov	r5, r1
 8009abc:	4604      	mov	r4, r0
 8009abe:	4798      	blx	r3
 8009ac0:	4285      	cmp	r5, r0
 8009ac2:	d905      	bls.n	8009ad0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8009ac4:	4b0c      	ldr	r3, [pc, #48]	; (8009af8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8009ac6:	4a0d      	ldr	r2, [pc, #52]	; (8009afc <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009ac8:	2132      	movs	r1, #50	; 0x32
 8009aca:	480d      	ldr	r0, [pc, #52]	; (8009b00 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8009acc:	f010 fe8c 	bl	801a7e8 <__assert_func>
 8009ad0:	6823      	ldr	r3, [r4, #0]
 8009ad2:	88a5      	ldrh	r5, [r4, #4]
 8009ad4:	69db      	ldr	r3, [r3, #28]
 8009ad6:	4620      	mov	r0, r4
 8009ad8:	4798      	blx	r3
 8009ada:	4285      	cmp	r5, r0
 8009adc:	d303      	bcc.n	8009ae6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8009ade:	4b09      	ldr	r3, [pc, #36]	; (8009b04 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8009ae0:	4a06      	ldr	r2, [pc, #24]	; (8009afc <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009ae2:	2133      	movs	r1, #51	; 0x33
 8009ae4:	e7f1      	b.n	8009aca <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8009ae6:	6823      	ldr	r3, [r4, #0]
 8009ae8:	88a1      	ldrh	r1, [r4, #4]
 8009aea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009aec:	4620      	mov	r0, r4
 8009aee:	4798      	blx	r3
 8009af0:	88a3      	ldrh	r3, [r4, #4]
 8009af2:	3301      	adds	r3, #1
 8009af4:	80a3      	strh	r3, [r4, #4]
 8009af6:	bd38      	pop	{r3, r4, r5, pc}
 8009af8:	0801cb3f 	.word	0x0801cb3f
 8009afc:	0801cc31 	.word	0x0801cc31
 8009b00:	0801ca97 	.word	0x0801ca97
 8009b04:	0801cb56 	.word	0x0801cb56

08009b08 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009b08:	b570      	push	{r4, r5, r6, lr}
 8009b0a:	6803      	ldr	r3, [r0, #0]
 8009b0c:	6a1b      	ldr	r3, [r3, #32]
 8009b0e:	4616      	mov	r6, r2
 8009b10:	4604      	mov	r4, r0
 8009b12:	460d      	mov	r5, r1
 8009b14:	4798      	blx	r3
 8009b16:	4286      	cmp	r6, r0
 8009b18:	d905      	bls.n	8009b26 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8009b1a:	4b06      	ldr	r3, [pc, #24]	; (8009b34 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8009b1c:	4a06      	ldr	r2, [pc, #24]	; (8009b38 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8009b1e:	4807      	ldr	r0, [pc, #28]	; (8009b3c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8009b20:	213c      	movs	r1, #60	; 0x3c
 8009b22:	f010 fe61 	bl	801a7e8 <__assert_func>
 8009b26:	6823      	ldr	r3, [r4, #0]
 8009b28:	4629      	mov	r1, r5
 8009b2a:	4620      	mov	r0, r4
 8009b2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009b32:	4718      	bx	r3
 8009b34:	0801cb3f 	.word	0x0801cb3f
 8009b38:	0801cba4 	.word	0x0801cba4
 8009b3c:	0801ca97 	.word	0x0801ca97

08009b40 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009b40:	4770      	bx	lr
	...

08009b44 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009b44:	4a02      	ldr	r2, [pc, #8]	; (8009b50 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009b46:	6002      	str	r2, [r0, #0]
 8009b48:	2200      	movs	r2, #0
 8009b4a:	8082      	strh	r2, [r0, #4]
 8009b4c:	4770      	bx	lr
 8009b4e:	bf00      	nop
 8009b50:	0801cb78 	.word	0x0801cb78

08009b54 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009b54:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009b56:	2000      	movs	r0, #0
 8009b58:	b12b      	cbz	r3, 8009b66 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009b5a:	b920      	cbnz	r0, 8009b66 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009b5c:	1a5a      	subs	r2, r3, r1
 8009b5e:	4250      	negs	r0, r2
 8009b60:	4150      	adcs	r0, r2
 8009b62:	699b      	ldr	r3, [r3, #24]
 8009b64:	e7f8      	b.n	8009b58 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009b66:	4770      	bx	lr

08009b68 <_ZN8touchgfx9Container9removeAllEv>:
 8009b68:	2200      	movs	r2, #0
 8009b6a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009b6c:	b123      	cbz	r3, 8009b78 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009b6e:	6999      	ldr	r1, [r3, #24]
 8009b70:	6281      	str	r1, [r0, #40]	; 0x28
 8009b72:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009b76:	e7f8      	b.n	8009b6a <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009b78:	4770      	bx	lr

08009b7a <_ZN8touchgfx9Container6unlinkEv>:
 8009b7a:	2300      	movs	r3, #0
 8009b7c:	6283      	str	r3, [r0, #40]	; 0x28
 8009b7e:	4770      	bx	lr

08009b80 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009b80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b84:	461f      	mov	r7, r3
 8009b86:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009b8a:	460d      	mov	r5, r1
 8009b8c:	4616      	mov	r6, r2
 8009b8e:	b103      	cbz	r3, 8009b92 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009b90:	6038      	str	r0, [r7, #0]
 8009b92:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009b94:	b314      	cbz	r4, 8009bdc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009b96:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009b9a:	b1eb      	cbz	r3, 8009bd8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009b9c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009ba0:	428d      	cmp	r5, r1
 8009ba2:	db19      	blt.n	8009bd8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009ba4:	8923      	ldrh	r3, [r4, #8]
 8009ba6:	b289      	uxth	r1, r1
 8009ba8:	440b      	add	r3, r1
 8009baa:	b21b      	sxth	r3, r3
 8009bac:	429d      	cmp	r5, r3
 8009bae:	da13      	bge.n	8009bd8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009bb0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009bb4:	4296      	cmp	r6, r2
 8009bb6:	db0f      	blt.n	8009bd8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009bb8:	8963      	ldrh	r3, [r4, #10]
 8009bba:	b292      	uxth	r2, r2
 8009bbc:	4413      	add	r3, r2
 8009bbe:	b21b      	sxth	r3, r3
 8009bc0:	429e      	cmp	r6, r3
 8009bc2:	da09      	bge.n	8009bd8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009bc4:	6823      	ldr	r3, [r4, #0]
 8009bc6:	1ab2      	subs	r2, r6, r2
 8009bc8:	1a69      	subs	r1, r5, r1
 8009bca:	f8d3 801c 	ldr.w	r8, [r3, #28]
 8009bce:	b212      	sxth	r2, r2
 8009bd0:	463b      	mov	r3, r7
 8009bd2:	b209      	sxth	r1, r1
 8009bd4:	4620      	mov	r0, r4
 8009bd6:	47c0      	blx	r8
 8009bd8:	69a4      	ldr	r4, [r4, #24]
 8009bda:	e7db      	b.n	8009b94 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009bdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009be0 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009be0:	2200      	movs	r2, #0
 8009be2:	8002      	strh	r2, [r0, #0]
 8009be4:	8042      	strh	r2, [r0, #2]
 8009be6:	8082      	strh	r2, [r0, #4]
 8009be8:	80c2      	strh	r2, [r0, #6]
 8009bea:	4770      	bx	lr

08009bec <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009bec:	b570      	push	{r4, r5, r6, lr}
 8009bee:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009bf0:	460d      	mov	r5, r1
 8009bf2:	4616      	mov	r6, r2
 8009bf4:	b13c      	cbz	r4, 8009c06 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009bf6:	6823      	ldr	r3, [r4, #0]
 8009bf8:	4620      	mov	r0, r4
 8009bfa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009bfc:	4632      	mov	r2, r6
 8009bfe:	4629      	mov	r1, r5
 8009c00:	4798      	blx	r3
 8009c02:	69a4      	ldr	r4, [r4, #24]
 8009c04:	e7f6      	b.n	8009bf4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009c06:	bd70      	pop	{r4, r5, r6, pc}

08009c08 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009c08:	b538      	push	{r3, r4, r5, lr}
 8009c0a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009c0c:	460d      	mov	r5, r1
 8009c0e:	b134      	cbz	r4, 8009c1e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009c10:	682b      	ldr	r3, [r5, #0]
 8009c12:	4621      	mov	r1, r4
 8009c14:	689b      	ldr	r3, [r3, #8]
 8009c16:	4628      	mov	r0, r5
 8009c18:	4798      	blx	r3
 8009c1a:	69a4      	ldr	r4, [r4, #24]
 8009c1c:	e7f7      	b.n	8009c0e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009c1e:	bd38      	pop	{r3, r4, r5, pc}

08009c20 <_ZN8touchgfx9ContainerD1Ev>:
 8009c20:	4770      	bx	lr

08009c22 <_ZN8touchgfx9ContainerD0Ev>:
 8009c22:	b510      	push	{r4, lr}
 8009c24:	212c      	movs	r1, #44	; 0x2c
 8009c26:	4604      	mov	r4, r0
 8009c28:	f010 fdb2 	bl	801a790 <_ZdlPvj>
 8009c2c:	4620      	mov	r0, r4
 8009c2e:	bd10      	pop	{r4, pc}

08009c30 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009c30:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009c32:	b19b      	cbz	r3, 8009c5c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009c34:	428b      	cmp	r3, r1
 8009c36:	d109      	bne.n	8009c4c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8009c38:	699a      	ldr	r2, [r3, #24]
 8009c3a:	2100      	movs	r1, #0
 8009c3c:	6159      	str	r1, [r3, #20]
 8009c3e:	6282      	str	r2, [r0, #40]	; 0x28
 8009c40:	b902      	cbnz	r2, 8009c44 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009c42:	4770      	bx	lr
 8009c44:	6199      	str	r1, [r3, #24]
 8009c46:	4770      	bx	lr
 8009c48:	4613      	mov	r3, r2
 8009c4a:	b13a      	cbz	r2, 8009c5c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009c4c:	699a      	ldr	r2, [r3, #24]
 8009c4e:	428a      	cmp	r2, r1
 8009c50:	d1fa      	bne.n	8009c48 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009c52:	698a      	ldr	r2, [r1, #24]
 8009c54:	619a      	str	r2, [r3, #24]
 8009c56:	2300      	movs	r3, #0
 8009c58:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009c5c:	4770      	bx	lr

08009c5e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009c5e:	b410      	push	{r4}
 8009c60:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009c62:	4604      	mov	r4, r0
 8009c64:	b92b      	cbnz	r3, 8009c72 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009c66:	6803      	ldr	r3, [r0, #0]
 8009c68:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009c6c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009c6e:	4611      	mov	r1, r2
 8009c70:	4718      	bx	r3
 8009c72:	b941      	cbnz	r1, 8009c86 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009c74:	6193      	str	r3, [r2, #24]
 8009c76:	6282      	str	r2, [r0, #40]	; 0x28
 8009c78:	6154      	str	r4, [r2, #20]
 8009c7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009c7e:	4770      	bx	lr
 8009c80:	4603      	mov	r3, r0
 8009c82:	2800      	cmp	r0, #0
 8009c84:	d0f9      	beq.n	8009c7a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009c86:	4299      	cmp	r1, r3
 8009c88:	6998      	ldr	r0, [r3, #24]
 8009c8a:	d1f9      	bne.n	8009c80 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009c8c:	6190      	str	r0, [r2, #24]
 8009c8e:	618a      	str	r2, [r1, #24]
 8009c90:	e7f2      	b.n	8009c78 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009c94:	4288      	cmp	r0, r1
 8009c96:	b508      	push	{r3, lr}
 8009c98:	d105      	bne.n	8009ca6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8009c9a:	4b11      	ldr	r3, [pc, #68]	; (8009ce0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009c9c:	4a11      	ldr	r2, [pc, #68]	; (8009ce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009c9e:	2123      	movs	r1, #35	; 0x23
 8009ca0:	4811      	ldr	r0, [pc, #68]	; (8009ce8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8009ca2:	f010 fda1 	bl	801a7e8 <__assert_func>
 8009ca6:	694b      	ldr	r3, [r1, #20]
 8009ca8:	b11b      	cbz	r3, 8009cb2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8009caa:	4b10      	ldr	r3, [pc, #64]	; (8009cec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009cac:	4a0d      	ldr	r2, [pc, #52]	; (8009ce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009cae:	2124      	movs	r1, #36	; 0x24
 8009cb0:	e7f6      	b.n	8009ca0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009cb2:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8009cb6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009cb8:	b913      	cbnz	r3, 8009cc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8009cba:	6281      	str	r1, [r0, #40]	; 0x28
 8009cbc:	bd08      	pop	{r3, pc}
 8009cbe:	4613      	mov	r3, r2
 8009cc0:	699a      	ldr	r2, [r3, #24]
 8009cc2:	b12a      	cbz	r2, 8009cd0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8009cc4:	428b      	cmp	r3, r1
 8009cc6:	d1fa      	bne.n	8009cbe <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8009cc8:	4b09      	ldr	r3, [pc, #36]	; (8009cf0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009cca:	4a06      	ldr	r2, [pc, #24]	; (8009ce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009ccc:	2135      	movs	r1, #53	; 0x35
 8009cce:	e7e7      	b.n	8009ca0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009cd0:	428b      	cmp	r3, r1
 8009cd2:	d103      	bne.n	8009cdc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8009cd4:	4b06      	ldr	r3, [pc, #24]	; (8009cf0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009cd6:	4a03      	ldr	r2, [pc, #12]	; (8009ce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009cd8:	2138      	movs	r1, #56	; 0x38
 8009cda:	e7e1      	b.n	8009ca0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009cdc:	6199      	str	r1, [r3, #24]
 8009cde:	e7ed      	b.n	8009cbc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8009ce0:	0801cc6f 	.word	0x0801cc6f
 8009ce4:	0801cdc4 	.word	0x0801cdc4
 8009ce8:	0801cc9b 	.word	0x0801cc9b
 8009cec:	0801ccce 	.word	0x0801ccce
 8009cf0:	0801cd04 	.word	0x0801cd04

08009cf4 <_ZN8touchgfx4RectaNERKS0_>:
 8009cf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009cf8:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009cfc:	888c      	ldrh	r4, [r1, #4]
 8009cfe:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009d02:	443c      	add	r4, r7
 8009d04:	b2a4      	uxth	r4, r4
 8009d06:	fa0f f884 	sxth.w	r8, r4
 8009d0a:	45c1      	cmp	r9, r8
 8009d0c:	da2f      	bge.n	8009d6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009d0e:	8882      	ldrh	r2, [r0, #4]
 8009d10:	444a      	add	r2, r9
 8009d12:	b292      	uxth	r2, r2
 8009d14:	fa0f fe82 	sxth.w	lr, r2
 8009d18:	4577      	cmp	r7, lr
 8009d1a:	da28      	bge.n	8009d6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009d1c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009d20:	88cb      	ldrh	r3, [r1, #6]
 8009d22:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009d26:	442b      	add	r3, r5
 8009d28:	b21b      	sxth	r3, r3
 8009d2a:	429e      	cmp	r6, r3
 8009d2c:	da1f      	bge.n	8009d6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009d2e:	88c3      	ldrh	r3, [r0, #6]
 8009d30:	4433      	add	r3, r6
 8009d32:	b29b      	uxth	r3, r3
 8009d34:	fa0f fc83 	sxth.w	ip, r3
 8009d38:	4565      	cmp	r5, ip
 8009d3a:	da18      	bge.n	8009d6e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009d3c:	454f      	cmp	r7, r9
 8009d3e:	bfb8      	it	lt
 8009d40:	464f      	movlt	r7, r9
 8009d42:	42b5      	cmp	r5, r6
 8009d44:	bfb8      	it	lt
 8009d46:	4635      	movlt	r5, r6
 8009d48:	45f0      	cmp	r8, lr
 8009d4a:	bfd8      	it	le
 8009d4c:	4622      	movle	r2, r4
 8009d4e:	1bd2      	subs	r2, r2, r7
 8009d50:	8082      	strh	r2, [r0, #4]
 8009d52:	884a      	ldrh	r2, [r1, #2]
 8009d54:	88c9      	ldrh	r1, [r1, #6]
 8009d56:	8007      	strh	r7, [r0, #0]
 8009d58:	440a      	add	r2, r1
 8009d5a:	b292      	uxth	r2, r2
 8009d5c:	b211      	sxth	r1, r2
 8009d5e:	458c      	cmp	ip, r1
 8009d60:	bfa8      	it	ge
 8009d62:	4613      	movge	r3, r2
 8009d64:	1b5b      	subs	r3, r3, r5
 8009d66:	80c3      	strh	r3, [r0, #6]
 8009d68:	8045      	strh	r5, [r0, #2]
 8009d6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009d6e:	2300      	movs	r3, #0
 8009d70:	8003      	strh	r3, [r0, #0]
 8009d72:	8043      	strh	r3, [r0, #2]
 8009d74:	8083      	strh	r3, [r0, #4]
 8009d76:	80c3      	strh	r3, [r0, #6]
 8009d78:	e7f7      	b.n	8009d6a <_ZN8touchgfx4RectaNERKS0_+0x76>

08009d7a <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009d7a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009d7e:	2b00      	cmp	r3, #0
 8009d80:	dd06      	ble.n	8009d90 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009d82:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009d86:	2800      	cmp	r0, #0
 8009d88:	bfcc      	ite	gt
 8009d8a:	2000      	movgt	r0, #0
 8009d8c:	2001      	movle	r0, #1
 8009d8e:	4770      	bx	lr
 8009d90:	2001      	movs	r0, #1
 8009d92:	4770      	bx	lr

08009d94 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009d94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d98:	2300      	movs	r3, #0
 8009d9a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009d9c:	8003      	strh	r3, [r0, #0]
 8009d9e:	4604      	mov	r4, r0
 8009da0:	8043      	strh	r3, [r0, #2]
 8009da2:	8083      	strh	r3, [r0, #4]
 8009da4:	80c3      	strh	r3, [r0, #6]
 8009da6:	2d00      	cmp	r5, #0
 8009da8:	d040      	beq.n	8009e2c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009daa:	1d28      	adds	r0, r5, #4
 8009dac:	f7ff ffe5 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8009db0:	b988      	cbnz	r0, 8009dd6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009db2:	4620      	mov	r0, r4
 8009db4:	f7ff ffe1 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8009db8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009dbc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009dc0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009dc4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009dc8:	b138      	cbz	r0, 8009dda <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009dca:	8022      	strh	r2, [r4, #0]
 8009dcc:	8063      	strh	r3, [r4, #2]
 8009dce:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009dd2:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009dd6:	69ad      	ldr	r5, [r5, #24]
 8009dd8:	e7e5      	b.n	8009da6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009dda:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009dde:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009de2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009de6:	4290      	cmp	r0, r2
 8009de8:	4607      	mov	r7, r0
 8009dea:	bfa8      	it	ge
 8009dec:	4617      	movge	r7, r2
 8009dee:	4472      	add	r2, lr
 8009df0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009df4:	8027      	strh	r7, [r4, #0]
 8009df6:	4299      	cmp	r1, r3
 8009df8:	460e      	mov	r6, r1
 8009dfa:	4440      	add	r0, r8
 8009dfc:	bfa8      	it	ge
 8009dfe:	461e      	movge	r6, r3
 8009e00:	4471      	add	r1, lr
 8009e02:	4463      	add	r3, ip
 8009e04:	b200      	sxth	r0, r0
 8009e06:	b212      	sxth	r2, r2
 8009e08:	b209      	sxth	r1, r1
 8009e0a:	b21b      	sxth	r3, r3
 8009e0c:	4290      	cmp	r0, r2
 8009e0e:	bfac      	ite	ge
 8009e10:	ebc7 0200 	rsbge	r2, r7, r0
 8009e14:	ebc7 0202 	rsblt	r2, r7, r2
 8009e18:	4299      	cmp	r1, r3
 8009e1a:	bfac      	ite	ge
 8009e1c:	ebc6 0301 	rsbge	r3, r6, r1
 8009e20:	ebc6 0303 	rsblt	r3, r6, r3
 8009e24:	8066      	strh	r6, [r4, #2]
 8009e26:	80a2      	strh	r2, [r4, #4]
 8009e28:	80e3      	strh	r3, [r4, #6]
 8009e2a:	e7d4      	b.n	8009dd6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009e2c:	4620      	mov	r0, r4
 8009e2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009e32 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009e32:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009e36:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009e3a:	b383      	cbz	r3, 8009e9e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009e3c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009e3e:	b374      	cbz	r4, 8009e9e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009e40:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009e44:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009e48:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009e4c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009e50:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009e54:	b303      	cbz	r3, 8009e98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009e56:	4668      	mov	r0, sp
 8009e58:	1d21      	adds	r1, r4, #4
 8009e5a:	f8ad 5000 	strh.w	r5, [sp]
 8009e5e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009e62:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009e66:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009e6a:	f7ff ff43 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 8009e6e:	4668      	mov	r0, sp
 8009e70:	f7ff ff83 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8009e74:	b980      	cbnz	r0, 8009e98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009e76:	f8bd 3000 	ldrh.w	r3, [sp]
 8009e7a:	88a2      	ldrh	r2, [r4, #4]
 8009e7c:	1a9b      	subs	r3, r3, r2
 8009e7e:	f8ad 3000 	strh.w	r3, [sp]
 8009e82:	88e2      	ldrh	r2, [r4, #6]
 8009e84:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009e88:	1a9b      	subs	r3, r3, r2
 8009e8a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009e8e:	6823      	ldr	r3, [r4, #0]
 8009e90:	4669      	mov	r1, sp
 8009e92:	689b      	ldr	r3, [r3, #8]
 8009e94:	4620      	mov	r0, r4
 8009e96:	4798      	blx	r3
 8009e98:	69a4      	ldr	r4, [r4, #24]
 8009e9a:	2c00      	cmp	r4, #0
 8009e9c:	d1d8      	bne.n	8009e50 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009e9e:	b002      	add	sp, #8
 8009ea0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009ea4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009ea4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009ea6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009eaa:	460d      	mov	r5, r1
 8009eac:	4616      	mov	r6, r2
 8009eae:	b323      	cbz	r3, 8009efa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009eb0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009eb2:	b314      	cbz	r4, 8009efa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009eb4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009eb8:	b1eb      	cbz	r3, 8009ef6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009eba:	6828      	ldr	r0, [r5, #0]
 8009ebc:	6869      	ldr	r1, [r5, #4]
 8009ebe:	466b      	mov	r3, sp
 8009ec0:	c303      	stmia	r3!, {r0, r1}
 8009ec2:	4668      	mov	r0, sp
 8009ec4:	1d21      	adds	r1, r4, #4
 8009ec6:	f7ff ff15 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 8009eca:	4668      	mov	r0, sp
 8009ecc:	f7ff ff55 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8009ed0:	b988      	cbnz	r0, 8009ef6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009ed2:	f8bd 3000 	ldrh.w	r3, [sp]
 8009ed6:	88a2      	ldrh	r2, [r4, #4]
 8009ed8:	1a9b      	subs	r3, r3, r2
 8009eda:	f8ad 3000 	strh.w	r3, [sp]
 8009ede:	88e2      	ldrh	r2, [r4, #6]
 8009ee0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009ee4:	1a9b      	subs	r3, r3, r2
 8009ee6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009eea:	6823      	ldr	r3, [r4, #0]
 8009eec:	4632      	mov	r2, r6
 8009eee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009ef0:	4669      	mov	r1, sp
 8009ef2:	4620      	mov	r0, r4
 8009ef4:	4798      	blx	r3
 8009ef6:	69a4      	ldr	r4, [r4, #24]
 8009ef8:	e7db      	b.n	8009eb2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009efa:	b002      	add	sp, #8
 8009efc:	bd70      	pop	{r4, r5, r6, pc}

08009efe <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 8009efe:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8009f02:	4770      	bx	lr

08009f04 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 8009f04:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8009f08:	4770      	bx	lr

08009f0a <_ZNK8touchgfx6Slider11getMinValueEv>:
 8009f0a:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 8009f0c:	4770      	bx	lr

08009f0e <_ZNK8touchgfx6Slider11getMaxValueEv>:
 8009f0e:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 8009f10:	4770      	bx	lr

08009f12 <_ZN8touchgfx6Slider8setValueEi>:
 8009f12:	b570      	push	{r4, r5, r6, lr}
 8009f14:	6803      	ldr	r3, [r0, #0]
 8009f16:	e9d3 532a 	ldrd	r5, r3, [r3, #168]	; 0xa8
 8009f1a:	4604      	mov	r4, r0
 8009f1c:	4798      	blx	r3
 8009f1e:	462b      	mov	r3, r5
 8009f20:	4601      	mov	r1, r0
 8009f22:	4620      	mov	r0, r4
 8009f24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f28:	4718      	bx	r3

08009f2a <_ZNK8touchgfx6Slider15valueToPositionEi>:
 8009f2a:	b538      	push	{r3, r4, r5, lr}
 8009f2c:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 8009f30:	428c      	cmp	r4, r1
 8009f32:	bfa8      	it	ge
 8009f34:	460c      	movge	r4, r1
 8009f36:	429c      	cmp	r4, r3
 8009f38:	bfac      	ite	ge
 8009f3a:	ebc3 0404 	rsbge	r4, r3, r4
 8009f3e:	ebc3 0403 	rsblt	r4, r3, r3
 8009f42:	6803      	ldr	r3, [r0, #0]
 8009f44:	4605      	mov	r5, r0
 8009f46:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8009f4a:	4798      	blx	r3
 8009f4c:	682b      	ldr	r3, [r5, #0]
 8009f4e:	fb00 4404 	mla	r4, r0, r4, r4
 8009f52:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009f56:	4628      	mov	r0, r5
 8009f58:	4798      	blx	r3
 8009f5a:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 8009f5e:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 8009f62:	fb94 f0f0 	sdiv	r0, r4, r0
 8009f66:	2a01      	cmp	r2, #1
 8009f68:	bf08      	it	eq
 8009f6a:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 8009f6e:	4418      	add	r0, r3
 8009f70:	bf04      	itt	eq
 8009f72:	1a10      	subeq	r0, r2, r0
 8009f74:	18c0      	addeq	r0, r0, r3
 8009f76:	b200      	sxth	r0, r0
 8009f78:	bd38      	pop	{r3, r4, r5, pc}

08009f7a <_ZNK8touchgfx6Slider15positionToValueEs>:
 8009f7a:	b570      	push	{r4, r5, r6, lr}
 8009f7c:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 8009f80:	428b      	cmp	r3, r1
 8009f82:	4605      	mov	r5, r0
 8009f84:	460c      	mov	r4, r1
 8009f86:	d109      	bne.n	8009f9c <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 8009f88:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8009f8a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8009f8e:	2b01      	cmp	r3, #1
 8009f90:	bf01      	itttt	eq
 8009f92:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 8009f94:	1a18      	subeq	r0, r3, r0
 8009f96:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 8009f98:	18c0      	addeq	r0, r0, r3
 8009f9a:	bd70      	pop	{r4, r5, r6, pc}
 8009f9c:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 8009fa0:	428b      	cmp	r3, r1
 8009fa2:	d101      	bne.n	8009fa8 <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 8009fa4:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8009fa6:	e7f0      	b.n	8009f8a <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 8009fa8:	6803      	ldr	r3, [r0, #0]
 8009faa:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8009fae:	4798      	blx	r3
 8009fb0:	682b      	ldr	r3, [r5, #0]
 8009fb2:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 8009fb6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009fba:	4606      	mov	r6, r0
 8009fbc:	4628      	mov	r0, r5
 8009fbe:	1a64      	subs	r4, r4, r1
 8009fc0:	4798      	blx	r3
 8009fc2:	682b      	ldr	r3, [r5, #0]
 8009fc4:	2102      	movs	r1, #2
 8009fc6:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8009fca:	fb96 f6f1 	sdiv	r6, r6, r1
 8009fce:	fb00 6404 	mla	r4, r0, r4, r6
 8009fd2:	4628      	mov	r0, r5
 8009fd4:	4798      	blx	r3
 8009fd6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8009fd8:	fb94 f0f0 	sdiv	r0, r4, r0
 8009fdc:	4418      	add	r0, r3
 8009fde:	e7d4      	b.n	8009f8a <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

08009fe0 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 8009fe0:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8009fe4:	2302      	movs	r3, #2
 8009fe6:	b92a      	cbnz	r2, 8009ff4 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 8009fe8:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 8009fec:	fb90 f0f3 	sdiv	r0, r0, r3
 8009ff0:	b280      	uxth	r0, r0
 8009ff2:	4770      	bx	lr
 8009ff4:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 8009ff8:	e7f8      	b.n	8009fec <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

08009ffa <_ZN8touchgfx6Slider13setValueRangeEii>:
 8009ffa:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8009ffc:	428b      	cmp	r3, r1
 8009ffe:	b410      	push	{r4}
 800a000:	db09      	blt.n	800a016 <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 800a002:	4293      	cmp	r3, r2
 800a004:	bfa8      	it	ge
 800a006:	4613      	movge	r3, r2
 800a008:	6804      	ldr	r4, [r0, #0]
 800a00a:	f8d4 4094 	ldr.w	r4, [r4, #148]	; 0x94
 800a00e:	46a4      	mov	ip, r4
 800a010:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a014:	4760      	bx	ip
 800a016:	460b      	mov	r3, r1
 800a018:	e7f6      	b.n	800a008 <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

0800a01a <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 800a01a:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 800a01e:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 800a022:	1a10      	subs	r0, r2, r0
 800a024:	4770      	bx	lr

0800a026 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 800a026:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 800a02a:	1a10      	subs	r0, r2, r0
 800a02c:	4770      	bx	lr

0800a02e <_ZN8touchgfx6SliderD1Ev>:
 800a02e:	4770      	bx	lr

0800a030 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 800a030:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a034:	f9b0 60ec 	ldrsh.w	r6, [r0, #236]	; 0xec
 800a038:	428e      	cmp	r6, r1
 800a03a:	4604      	mov	r4, r0
 800a03c:	bfb8      	it	lt
 800a03e:	460e      	movlt	r6, r1
 800a040:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 800a044:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800a048:	428e      	cmp	r6, r1
 800a04a:	bfa8      	it	ge
 800a04c:	460e      	movge	r6, r1
 800a04e:	3094      	adds	r0, #148	; 0x94
 800a050:	f104 07c0 	add.w	r7, r4, #192	; 0xc0
 800a054:	fa1f f886 	uxth.w	r8, r6
 800a058:	2b00      	cmp	r3, #0
 800a05a:	d132      	bne.n	800a0c2 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x92>
 800a05c:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800a060:	4631      	mov	r1, r6
 800a062:	f7f9 fc77 	bl	8003954 <_ZN8touchgfx8Drawable6moveToEss>
 800a066:	4638      	mov	r0, r7
 800a068:	f003 fbb3 	bl	800d7d2 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a06c:	6823      	ldr	r3, [r4, #0]
 800a06e:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 800a072:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a076:	4620      	mov	r0, r4
 800a078:	eba8 0802 	sub.w	r8, r8, r2
 800a07c:	4798      	blx	r3
 800a07e:	fa1f f888 	uxth.w	r8, r8
 800a082:	4480      	add	r8, r0
 800a084:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 800a088:	4638      	mov	r0, r7
 800a08a:	f003 fba2 	bl	800d7d2 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a08e:	6823      	ldr	r3, [r4, #0]
 800a090:	4631      	mov	r1, r6
 800a092:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a096:	4620      	mov	r0, r4
 800a098:	4798      	blx	r3
 800a09a:	6320      	str	r0, [r4, #48]	; 0x30
 800a09c:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 800a0a0:	2800      	cmp	r0, #0
 800a0a2:	d03c      	beq.n	800a11e <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 800a0a4:	6803      	ldr	r3, [r0, #0]
 800a0a6:	68db      	ldr	r3, [r3, #12]
 800a0a8:	4798      	blx	r3
 800a0aa:	2800      	cmp	r0, #0
 800a0ac:	d037      	beq.n	800a11e <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 800a0ae:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 800a0b2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a0b4:	6803      	ldr	r3, [r0, #0]
 800a0b6:	689b      	ldr	r3, [r3, #8]
 800a0b8:	4621      	mov	r1, r4
 800a0ba:	b003      	add	sp, #12
 800a0bc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a0c0:	4718      	bx	r3
 800a0c2:	4632      	mov	r2, r6
 800a0c4:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 800a0c8:	f7f9 fc44 	bl	8003954 <_ZN8touchgfx8Drawable6moveToEss>
 800a0cc:	4638      	mov	r0, r7
 800a0ce:	f003 fb80 	bl	800d7d2 <_ZNK8touchgfx8Drawable10invalidateEv>
 800a0d2:	f8b4 0042 	ldrh.w	r0, [r4, #66]	; 0x42
 800a0d6:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 800a0da:	6823      	ldr	r3, [r4, #0]
 800a0dc:	4405      	add	r5, r0
 800a0de:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a0e2:	4620      	mov	r0, r4
 800a0e4:	4798      	blx	r3
 800a0e6:	b2ad      	uxth	r5, r5
 800a0e8:	6823      	ldr	r3, [r4, #0]
 800a0ea:	f9b4 90c4 	ldrsh.w	r9, [r4, #196]	; 0xc4
 800a0ee:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a0f2:	eba5 0508 	sub.w	r5, r5, r8
 800a0f6:	1a2d      	subs	r5, r5, r0
 800a0f8:	4620      	mov	r0, r4
 800a0fa:	4798      	blx	r3
 800a0fc:	b2ad      	uxth	r5, r5
 800a0fe:	b22a      	sxth	r2, r5
 800a100:	4440      	add	r0, r8
 800a102:	9200      	str	r2, [sp, #0]
 800a104:	f9b4 30c8 	ldrsh.w	r3, [r4, #200]	; 0xc8
 800a108:	b202      	sxth	r2, r0
 800a10a:	4649      	mov	r1, r9
 800a10c:	4638      	mov	r0, r7
 800a10e:	f7f9 fbf3 	bl	80038f8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a112:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 800a116:	1a2d      	subs	r5, r5, r0
 800a118:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 800a11c:	e7b4      	b.n	800a088 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x58>
 800a11e:	b003      	add	sp, #12
 800a120:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a124 <_ZN8touchgfx6SliderD0Ev>:
 800a124:	b510      	push	{r4, lr}
 800a126:	21fc      	movs	r1, #252	; 0xfc
 800a128:	4604      	mov	r4, r0
 800a12a:	f010 fb31 	bl	801a790 <_ZdlPvj>
 800a12e:	4620      	mov	r0, r4
 800a130:	bd10      	pop	{r4, pc}
	...

0800a134 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 800a134:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a138:	f8bd 8030 	ldrh.w	r8, [sp, #48]	; 0x30
 800a13c:	f8bd 7034 	ldrh.w	r7, [sp, #52]	; 0x34
 800a140:	45b8      	cmp	r8, r7
 800a142:	4604      	mov	r4, r0
 800a144:	4689      	mov	r9, r1
 800a146:	4616      	mov	r6, r2
 800a148:	461d      	mov	r5, r3
 800a14a:	d305      	bcc.n	800a158 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0x24>
 800a14c:	4b28      	ldr	r3, [pc, #160]	; (800a1f0 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xbc>)
 800a14e:	4a29      	ldr	r2, [pc, #164]	; (800a1f4 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc0>)
 800a150:	4829      	ldr	r0, [pc, #164]	; (800a1f8 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc4>)
 800a152:	2143      	movs	r1, #67	; 0x43
 800a154:	f010 fb48 	bl	801a7e8 <__assert_func>
 800a158:	f04f 0a00 	mov.w	sl, #0
 800a15c:	b213      	sxth	r3, r2
 800a15e:	fa0f fb81 	sxth.w	fp, r1
 800a162:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 800a166:	461a      	mov	r2, r3
 800a168:	4659      	mov	r1, fp
 800a16a:	303c      	adds	r0, #60	; 0x3c
 800a16c:	9301      	str	r3, [sp, #4]
 800a16e:	f7f9 fbdb 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800a172:	9b01      	ldr	r3, [sp, #4]
 800a174:	4659      	mov	r1, fp
 800a176:	461a      	mov	r2, r3
 800a178:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800a17c:	f7f9 fbd4 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800a180:	4652      	mov	r2, sl
 800a182:	4651      	mov	r1, sl
 800a184:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800a188:	f7f9 fbce 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800a18c:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 800a190:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 800a194:	4449      	add	r1, r9
 800a196:	b28b      	uxth	r3, r1
 800a198:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800a19c:	f8a4 80ec 	strh.w	r8, [r4, #236]	; 0xec
 800a1a0:	4439      	add	r1, r7
 800a1a2:	b289      	uxth	r1, r1
 800a1a4:	428b      	cmp	r3, r1
 800a1a6:	bf88      	it	hi
 800a1a8:	b219      	sxthhi	r1, r3
 800a1aa:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 800a1ae:	f8a4 70ee 	strh.w	r7, [r4, #238]	; 0xee
 800a1b2:	441e      	add	r6, r3
 800a1b4:	f8b4 309e 	ldrh.w	r3, [r4, #158]	; 0x9e
 800a1b8:	441d      	add	r5, r3
 800a1ba:	6823      	ldr	r3, [r4, #0]
 800a1bc:	b2ad      	uxth	r5, r5
 800a1be:	b2b6      	uxth	r6, r6
 800a1c0:	bf98      	it	ls
 800a1c2:	b209      	sxthls	r1, r1
 800a1c4:	4620      	mov	r0, r4
 800a1c6:	42ae      	cmp	r6, r5
 800a1c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a1ca:	bf8c      	ite	hi
 800a1cc:	b235      	sxthhi	r5, r6
 800a1ce:	b22d      	sxthls	r5, r5
 800a1d0:	4798      	blx	r3
 800a1d2:	6823      	ldr	r3, [r4, #0]
 800a1d4:	4629      	mov	r1, r5
 800a1d6:	4620      	mov	r0, r4
 800a1d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a1da:	4798      	blx	r3
 800a1dc:	6823      	ldr	r3, [r4, #0]
 800a1de:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a1e0:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800a1e4:	4620      	mov	r0, r4
 800a1e6:	b003      	add	sp, #12
 800a1e8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1ec:	4718      	bx	r3
 800a1ee:	bf00      	nop
 800a1f0:	0801cfa8 	.word	0x0801cfa8
 800a1f4:	0801d222 	.word	0x0801d222
 800a1f8:	0801d01c 	.word	0x0801d01c

0800a1fc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 800a1fc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a200:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 800a204:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 800a208:	42b7      	cmp	r7, r6
 800a20a:	4604      	mov	r4, r0
 800a20c:	4689      	mov	r9, r1
 800a20e:	4690      	mov	r8, r2
 800a210:	461d      	mov	r5, r3
 800a212:	d305      	bcc.n	800a220 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0x24>
 800a214:	4b25      	ldr	r3, [pc, #148]	; (800a2ac <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb0>)
 800a216:	4a26      	ldr	r2, [pc, #152]	; (800a2b0 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb4>)
 800a218:	4826      	ldr	r0, [pc, #152]	; (800a2b4 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb8>)
 800a21a:	215f      	movs	r1, #95	; 0x5f
 800a21c:	f010 fae4 	bl	801a7e8 <__assert_func>
 800a220:	2301      	movs	r3, #1
 800a222:	fa0f fa81 	sxth.w	sl, r1
 800a226:	fa0f fb82 	sxth.w	fp, r2
 800a22a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800a22e:	465a      	mov	r2, fp
 800a230:	4651      	mov	r1, sl
 800a232:	303c      	adds	r0, #60	; 0x3c
 800a234:	f7f9 fb78 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800a238:	465a      	mov	r2, fp
 800a23a:	4651      	mov	r1, sl
 800a23c:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800a240:	f7f9 fb72 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800a244:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 800a248:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 800a24c:	4489      	add	r9, r1
 800a24e:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800a252:	6823      	ldr	r3, [r4, #0]
 800a254:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 800a258:	4429      	add	r1, r5
 800a25a:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 800a25e:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 800a262:	44a8      	add	r8, r5
 800a264:	f8b4 509e 	ldrh.w	r5, [r4, #158]	; 0x9e
 800a268:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a26a:	b289      	uxth	r1, r1
 800a26c:	fa1f f989 	uxth.w	r9, r9
 800a270:	4435      	add	r5, r6
 800a272:	4589      	cmp	r9, r1
 800a274:	b2ad      	uxth	r5, r5
 800a276:	fa1f f888 	uxth.w	r8, r8
 800a27a:	bf8c      	ite	hi
 800a27c:	fa0f f189 	sxthhi.w	r1, r9
 800a280:	b209      	sxthls	r1, r1
 800a282:	4620      	mov	r0, r4
 800a284:	45a8      	cmp	r8, r5
 800a286:	bf8c      	ite	hi
 800a288:	fa0f f588 	sxthhi.w	r5, r8
 800a28c:	b22d      	sxthls	r5, r5
 800a28e:	4798      	blx	r3
 800a290:	6823      	ldr	r3, [r4, #0]
 800a292:	4629      	mov	r1, r5
 800a294:	4620      	mov	r0, r4
 800a296:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a298:	4798      	blx	r3
 800a29a:	6823      	ldr	r3, [r4, #0]
 800a29c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a29e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800a2a2:	4620      	mov	r0, r4
 800a2a4:	b001      	add	sp, #4
 800a2a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2aa:	4718      	bx	r3
 800a2ac:	0801cf36 	.word	0x0801cf36
 800a2b0:	0801d1bd 	.word	0x0801d1bd
 800a2b4:	0801d01c 	.word	0x0801d01c

0800a2b8 <_ZN8touchgfx6Slider13setValueRangeEiii>:
 800a2b8:	4291      	cmp	r1, r2
 800a2ba:	b510      	push	{r4, lr}
 800a2bc:	db06      	blt.n	800a2cc <_ZN8touchgfx6Slider13setValueRangeEiii+0x14>
 800a2be:	4b08      	ldr	r3, [pc, #32]	; (800a2e0 <_ZN8touchgfx6Slider13setValueRangeEiii+0x28>)
 800a2c0:	4a08      	ldr	r2, [pc, #32]	; (800a2e4 <_ZN8touchgfx6Slider13setValueRangeEiii+0x2c>)
 800a2c2:	4809      	ldr	r0, [pc, #36]	; (800a2e8 <_ZN8touchgfx6Slider13setValueRangeEiii+0x30>)
 800a2c4:	f240 1107 	movw	r1, #263	; 0x107
 800a2c8:	f010 fa8e 	bl	801a7e8 <__assert_func>
 800a2cc:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 800a2d0:	6802      	ldr	r2, [r0, #0]
 800a2d2:	4619      	mov	r1, r3
 800a2d4:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 800a2d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a2dc:	4710      	bx	r2
 800a2de:	bf00      	nop
 800a2e0:	0801cede 	.word	0x0801cede
 800a2e4:	0801d181 	.word	0x0801d181
 800a2e8:	0801d01c 	.word	0x0801d01c

0800a2ec <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 800a2ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2f0:	790b      	ldrb	r3, [r1, #4]
 800a2f2:	4604      	mov	r4, r0
 800a2f4:	460d      	mov	r5, r1
 800a2f6:	b323      	cbz	r3, 800a342 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 800a2f8:	2b01      	cmp	r3, #1
 800a2fa:	d135      	bne.n	800a368 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800a2fc:	6823      	ldr	r3, [r4, #0]
 800a2fe:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800a302:	f8d3 70a8 	ldr.w	r7, [r3, #168]	; 0xa8
 800a306:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a30a:	2a00      	cmp	r2, #0
 800a30c:	d12a      	bne.n	800a364 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 800a30e:	88ee      	ldrh	r6, [r5, #6]
 800a310:	4620      	mov	r0, r4
 800a312:	4798      	blx	r3
 800a314:	1a31      	subs	r1, r6, r0
 800a316:	b209      	sxth	r1, r1
 800a318:	4620      	mov	r0, r4
 800a31a:	47b8      	blx	r7
 800a31c:	792b      	ldrb	r3, [r5, #4]
 800a31e:	2b01      	cmp	r3, #1
 800a320:	d122      	bne.n	800a368 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800a322:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 800a326:	b1f8      	cbz	r0, 800a368 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800a328:	6803      	ldr	r3, [r0, #0]
 800a32a:	68db      	ldr	r3, [r3, #12]
 800a32c:	4798      	blx	r3
 800a32e:	b1d8      	cbz	r0, 800a368 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800a330:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 800a334:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a336:	6803      	ldr	r3, [r0, #0]
 800a338:	4621      	mov	r1, r4
 800a33a:	689b      	ldr	r3, [r3, #8]
 800a33c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a340:	4718      	bx	r3
 800a342:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 800a346:	2800      	cmp	r0, #0
 800a348:	d0d8      	beq.n	800a2fc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a34a:	6803      	ldr	r3, [r0, #0]
 800a34c:	68db      	ldr	r3, [r3, #12]
 800a34e:	4798      	blx	r3
 800a350:	2800      	cmp	r0, #0
 800a352:	d0d3      	beq.n	800a2fc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a354:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 800a358:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a35a:	6803      	ldr	r3, [r0, #0]
 800a35c:	4621      	mov	r1, r4
 800a35e:	689b      	ldr	r3, [r3, #8]
 800a360:	4798      	blx	r3
 800a362:	e7cb      	b.n	800a2fc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800a364:	892e      	ldrh	r6, [r5, #8]
 800a366:	e7d3      	b.n	800a310 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 800a368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a36c <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 800a36c:	b570      	push	{r4, r5, r6, lr}
 800a36e:	6803      	ldr	r3, [r0, #0]
 800a370:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 800a374:	f8d3 60a8 	ldr.w	r6, [r3, #168]	; 0xa8
 800a378:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a37c:	4604      	mov	r4, r0
 800a37e:	b942      	cbnz	r2, 800a392 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 800a380:	894d      	ldrh	r5, [r1, #10]
 800a382:	4798      	blx	r3
 800a384:	1a29      	subs	r1, r5, r0
 800a386:	4633      	mov	r3, r6
 800a388:	4620      	mov	r0, r4
 800a38a:	b209      	sxth	r1, r1
 800a38c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a390:	4718      	bx	r3
 800a392:	898d      	ldrh	r5, [r1, #12]
 800a394:	e7f5      	b.n	800a382 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>
	...

0800a398 <_ZN8touchgfx9ContainerC1Ev>:
 800a398:	2101      	movs	r1, #1
 800a39a:	2200      	movs	r2, #0
 800a39c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800a3a0:	4908      	ldr	r1, [pc, #32]	; (800a3c4 <_ZN8touchgfx9ContainerC1Ev+0x2c>)
 800a3a2:	8082      	strh	r2, [r0, #4]
 800a3a4:	80c2      	strh	r2, [r0, #6]
 800a3a6:	8102      	strh	r2, [r0, #8]
 800a3a8:	8142      	strh	r2, [r0, #10]
 800a3aa:	8182      	strh	r2, [r0, #12]
 800a3ac:	81c2      	strh	r2, [r0, #14]
 800a3ae:	8202      	strh	r2, [r0, #16]
 800a3b0:	8242      	strh	r2, [r0, #18]
 800a3b2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a3b6:	61c2      	str	r2, [r0, #28]
 800a3b8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a3bc:	6001      	str	r1, [r0, #0]
 800a3be:	6282      	str	r2, [r0, #40]	; 0x28
 800a3c0:	4770      	bx	lr
 800a3c2:	bf00      	nop
 800a3c4:	0801cd40 	.word	0x0801cd40

0800a3c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 800a3c8:	b510      	push	{r4, lr}
 800a3ca:	2300      	movs	r3, #0
 800a3cc:	8083      	strh	r3, [r0, #4]
 800a3ce:	80c3      	strh	r3, [r0, #6]
 800a3d0:	8103      	strh	r3, [r0, #8]
 800a3d2:	8143      	strh	r3, [r0, #10]
 800a3d4:	8183      	strh	r3, [r0, #12]
 800a3d6:	81c3      	strh	r3, [r0, #14]
 800a3d8:	8203      	strh	r3, [r0, #16]
 800a3da:	8243      	strh	r3, [r0, #18]
 800a3dc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800a3e0:	61c3      	str	r3, [r0, #28]
 800a3e2:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800a3e6:	2301      	movs	r3, #1
 800a3e8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 800a3ec:	4b05      	ldr	r3, [pc, #20]	; (800a404 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x3c>)
 800a3ee:	6003      	str	r3, [r0, #0]
 800a3f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a3f4:	4604      	mov	r4, r0
 800a3f6:	84c3      	strh	r3, [r0, #38]	; 0x26
 800a3f8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800a3fc:	f001 fcc1 	bl	800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a400:	4620      	mov	r0, r4
 800a402:	bd10      	pop	{r4, pc}
 800a404:	0801dd74 	.word	0x0801dd74

0800a408 <_ZN8touchgfx6SliderC1Ev>:
 800a408:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a40c:	ae02      	add	r6, sp, #8
 800a40e:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800a412:	4604      	mov	r4, r0
 800a414:	f7ff ffc0 	bl	800a398 <_ZN8touchgfx9ContainerC1Ev>
 800a418:	f826 7d04 	strh.w	r7, [r6, #-4]!
 800a41c:	4b23      	ldr	r3, [pc, #140]	; (800a4ac <_ZN8touchgfx6SliderC1Ev+0xa4>)
 800a41e:	6023      	str	r3, [r4, #0]
 800a420:	2500      	movs	r5, #0
 800a422:	f04f 0b01 	mov.w	fp, #1
 800a426:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 800a42a:	4631      	mov	r1, r6
 800a42c:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 800a430:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 800a434:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 800a438:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 800a43c:	4648      	mov	r0, r9
 800a43e:	f7ff ffc3 	bl	800a3c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a442:	f104 0894 	add.w	r8, r4, #148	; 0x94
 800a446:	4631      	mov	r1, r6
 800a448:	4650      	mov	r0, sl
 800a44a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a44e:	f7ff ffbb 	bl	800a3c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a452:	4631      	mov	r1, r6
 800a454:	4640      	mov	r0, r8
 800a456:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 800a45a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a45e:	f7ff ffb3 	bl	800a3c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800a462:	4630      	mov	r0, r6
 800a464:	f7ff ff98 	bl	800a398 <_ZN8touchgfx9ContainerC1Ev>
 800a468:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800a46c:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 800a470:	4651      	mov	r1, sl
 800a472:	4630      	mov	r0, r6
 800a474:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 800a478:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 800a47c:	f7ff fc0a 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a480:	4649      	mov	r1, r9
 800a482:	4620      	mov	r0, r4
 800a484:	f7ff fc06 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a488:	4631      	mov	r1, r6
 800a48a:	4620      	mov	r0, r4
 800a48c:	f7ff fc02 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a490:	4641      	mov	r1, r8
 800a492:	4620      	mov	r0, r4
 800a494:	f7ff fbfe 	bl	8009c94 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a498:	4620      	mov	r0, r4
 800a49a:	2264      	movs	r2, #100	; 0x64
 800a49c:	4629      	mov	r1, r5
 800a49e:	f7ff fdac 	bl	8009ffa <_ZN8touchgfx6Slider13setValueRangeEii>
 800a4a2:	4620      	mov	r0, r4
 800a4a4:	b003      	add	sp, #12
 800a4a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4aa:	bf00      	nop
 800a4ac:	0801d054 	.word	0x0801d054

0800a4b0 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 800a4b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a4b4:	4604      	mov	r4, r0
 800a4b6:	4608      	mov	r0, r1
 800a4b8:	4615      	mov	r5, r2
 800a4ba:	460e      	mov	r6, r1
 800a4bc:	461f      	mov	r7, r3
 800a4be:	f004 fcc5 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a4c2:	4680      	mov	r8, r0
 800a4c4:	4628      	mov	r0, r5
 800a4c6:	f004 fcc1 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a4ca:	4580      	cmp	r8, r0
 800a4cc:	d005      	beq.n	800a4da <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x2a>
 800a4ce:	4b14      	ldr	r3, [pc, #80]	; (800a520 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x70>)
 800a4d0:	4a14      	ldr	r2, [pc, #80]	; (800a524 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x74>)
 800a4d2:	4815      	ldr	r0, [pc, #84]	; (800a528 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x78>)
 800a4d4:	2133      	movs	r1, #51	; 0x33
 800a4d6:	f010 f987 	bl	801a7e8 <__assert_func>
 800a4da:	4630      	mov	r0, r6
 800a4dc:	f004 fcf0 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a4e0:	4680      	mov	r8, r0
 800a4e2:	4628      	mov	r0, r5
 800a4e4:	f004 fcec 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a4e8:	4580      	cmp	r8, r0
 800a4ea:	d1f0      	bne.n	800a4ce <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x1e>
 800a4ec:	4631      	mov	r1, r6
 800a4ee:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 800a4f2:	f001 fc46 	bl	800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a4f6:	4629      	mov	r1, r5
 800a4f8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800a4fc:	f001 fc41 	bl	800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a500:	4639      	mov	r1, r7
 800a502:	f104 0094 	add.w	r0, r4, #148	; 0x94
 800a506:	f001 fc3c 	bl	800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a50a:	f8b4 3070 	ldrh.w	r3, [r4, #112]	; 0x70
 800a50e:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800a512:	f8b4 3072 	ldrh.w	r3, [r4, #114]	; 0x72
 800a516:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800a51a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a51e:	bf00      	nop
 800a520:	0801cdff 	.word	0x0801cdff
 800a524:	0801d114 	.word	0x0801d114
 800a528:	0801d01c 	.word	0x0801d01c

0800a52c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a52c:	b513      	push	{r0, r1, r4, lr}
 800a52e:	6803      	ldr	r3, [r0, #0]
 800a530:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 800a534:	2300      	movs	r3, #0
 800a536:	e9cd 3300 	strd	r3, r3, [sp]
 800a53a:	466b      	mov	r3, sp
 800a53c:	47a0      	blx	r4
 800a53e:	b002      	add	sp, #8
 800a540:	bd10      	pop	{r4, pc}

0800a542 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a542:	2301      	movs	r3, #1
 800a544:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a548:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a54c:	4770      	bx	lr

0800a54e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a54e:	2301      	movs	r3, #1
 800a550:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a554:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a558:	4770      	bx	lr

0800a55a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a55a:	6843      	ldr	r3, [r0, #4]
 800a55c:	2201      	movs	r2, #1
 800a55e:	725a      	strb	r2, [r3, #9]
 800a560:	6840      	ldr	r0, [r0, #4]
 800a562:	6803      	ldr	r3, [r0, #0]
 800a564:	691b      	ldr	r3, [r3, #16]
 800a566:	4718      	bx	r3

0800a568 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a568:	6840      	ldr	r0, [r0, #4]
 800a56a:	6803      	ldr	r3, [r0, #0]
 800a56c:	689b      	ldr	r3, [r3, #8]
 800a56e:	4718      	bx	r3

0800a570 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a570:	4b04      	ldr	r3, [pc, #16]	; (800a584 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a572:	781b      	ldrb	r3, [r3, #0]
 800a574:	b123      	cbz	r3, 800a580 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a576:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800a57a:	f080 0001 	eor.w	r0, r0, #1
 800a57e:	4770      	bx	lr
 800a580:	2001      	movs	r0, #1
 800a582:	4770      	bx	lr
 800a584:	200123ba 	.word	0x200123ba

0800a588 <_ZN8touchgfx3HAL8endFrameEv>:
 800a588:	b510      	push	{r4, lr}
 800a58a:	4604      	mov	r4, r0
 800a58c:	6840      	ldr	r0, [r0, #4]
 800a58e:	6803      	ldr	r3, [r0, #0]
 800a590:	689b      	ldr	r3, [r3, #8]
 800a592:	4798      	blx	r3
 800a594:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800a598:	b113      	cbz	r3, 800a5a0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a59a:	2301      	movs	r3, #1
 800a59c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a5a0:	bd10      	pop	{r4, pc}
	...

0800a5a4 <_ZN8touchgfx3HAL4tickEv>:
 800a5a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a5a6:	6803      	ldr	r3, [r0, #0]
 800a5a8:	4d5c      	ldr	r5, [pc, #368]	; (800a71c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a5aa:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800a5ae:	4604      	mov	r4, r0
 800a5b0:	4798      	blx	r3
 800a5b2:	2800      	cmp	r0, #0
 800a5b4:	f000 8097 	beq.w	800a6e6 <_ZN8touchgfx3HAL4tickEv+0x142>
 800a5b8:	2001      	movs	r0, #1
 800a5ba:	f7f6 fcb3 	bl	8000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a5be:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800a5c2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a5c6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800a5ca:	2600      	movs	r6, #0
 800a5cc:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800a5d0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800a5d4:	b133      	cbz	r3, 800a5e4 <_ZN8touchgfx3HAL4tickEv+0x40>
 800a5d6:	6823      	ldr	r3, [r4, #0]
 800a5d8:	4620      	mov	r0, r4
 800a5da:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800a5de:	4798      	blx	r3
 800a5e0:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800a5e4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800a5e8:	6862      	ldr	r2, [r4, #4]
 800a5ea:	f083 0301 	eor.w	r3, r3, #1
 800a5ee:	7253      	strb	r3, [r2, #9]
 800a5f0:	2601      	movs	r6, #1
 800a5f2:	702e      	strb	r6, [r5, #0]
 800a5f4:	f002 fc1e 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 800a5f8:	6803      	ldr	r3, [r0, #0]
 800a5fa:	4631      	mov	r1, r6
 800a5fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a5fe:	4798      	blx	r3
 800a600:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a604:	b90b      	cbnz	r3, 800a60a <_ZN8touchgfx3HAL4tickEv+0x66>
 800a606:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800a60a:	f002 fc13 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 800a60e:	6803      	ldr	r3, [r0, #0]
 800a610:	695b      	ldr	r3, [r3, #20]
 800a612:	4798      	blx	r3
 800a614:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a616:	6803      	ldr	r3, [r0, #0]
 800a618:	691b      	ldr	r3, [r3, #16]
 800a61a:	4798      	blx	r3
 800a61c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a620:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800a624:	3b01      	subs	r3, #1
 800a626:	b2db      	uxtb	r3, r3
 800a628:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a62c:	b10a      	cbz	r2, 800a632 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800a62e:	2b00      	cmp	r3, #0
 800a630:	d1eb      	bne.n	800a60a <_ZN8touchgfx3HAL4tickEv+0x66>
 800a632:	4a3b      	ldr	r2, [pc, #236]	; (800a720 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800a634:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800a638:	7813      	ldrb	r3, [r2, #0]
 800a63a:	3301      	adds	r3, #1
 800a63c:	b25b      	sxtb	r3, r3
 800a63e:	4299      	cmp	r1, r3
 800a640:	7013      	strb	r3, [r2, #0]
 800a642:	dc10      	bgt.n	800a666 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800a644:	68e0      	ldr	r0, [r4, #12]
 800a646:	2300      	movs	r3, #0
 800a648:	7013      	strb	r3, [r2, #0]
 800a64a:	6803      	ldr	r3, [r0, #0]
 800a64c:	aa03      	add	r2, sp, #12
 800a64e:	68db      	ldr	r3, [r3, #12]
 800a650:	a902      	add	r1, sp, #8
 800a652:	4798      	blx	r3
 800a654:	6823      	ldr	r3, [r4, #0]
 800a656:	2800      	cmp	r0, #0
 800a658:	d051      	beq.n	800a6fe <_ZN8touchgfx3HAL4tickEv+0x15a>
 800a65a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800a65e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a662:	4620      	mov	r0, r4
 800a664:	4798      	blx	r3
 800a666:	6960      	ldr	r0, [r4, #20]
 800a668:	2300      	movs	r3, #0
 800a66a:	f88d 3007 	strb.w	r3, [sp, #7]
 800a66e:	b158      	cbz	r0, 800a688 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800a670:	6803      	ldr	r3, [r0, #0]
 800a672:	f10d 0107 	add.w	r1, sp, #7
 800a676:	68db      	ldr	r3, [r3, #12]
 800a678:	4798      	blx	r3
 800a67a:	b128      	cbz	r0, 800a688 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800a67c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a67e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a682:	6803      	ldr	r3, [r0, #0]
 800a684:	68db      	ldr	r3, [r3, #12]
 800a686:	4798      	blx	r3
 800a688:	f104 001c 	add.w	r0, r4, #28
 800a68c:	f00f ff9e 	bl	801a5cc <_ZN8touchgfx8Gestures4tickEv>
 800a690:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800a694:	b30b      	cbz	r3, 800a6da <_ZN8touchgfx3HAL4tickEv+0x136>
 800a696:	6920      	ldr	r0, [r4, #16]
 800a698:	6803      	ldr	r3, [r0, #0]
 800a69a:	691b      	ldr	r3, [r3, #16]
 800a69c:	4798      	blx	r3
 800a69e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a6a0:	4606      	mov	r6, r0
 800a6a2:	b903      	cbnz	r3, 800a6a6 <_ZN8touchgfx3HAL4tickEv+0x102>
 800a6a4:	6720      	str	r0, [r4, #112]	; 0x70
 800a6a6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a6a8:	4a1e      	ldr	r2, [pc, #120]	; (800a724 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800a6aa:	1af3      	subs	r3, r6, r3
 800a6ac:	4293      	cmp	r3, r2
 800a6ae:	d914      	bls.n	800a6da <_ZN8touchgfx3HAL4tickEv+0x136>
 800a6b0:	6920      	ldr	r0, [r4, #16]
 800a6b2:	6803      	ldr	r3, [r0, #0]
 800a6b4:	699b      	ldr	r3, [r3, #24]
 800a6b6:	4798      	blx	r3
 800a6b8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a6ba:	2264      	movs	r2, #100	; 0x64
 800a6bc:	1af3      	subs	r3, r6, r3
 800a6be:	fbb3 f3f2 	udiv	r3, r3, r2
 800a6c2:	fbb0 f0f3 	udiv	r0, r0, r3
 800a6c6:	2800      	cmp	r0, #0
 800a6c8:	dc1e      	bgt.n	800a708 <_ZN8touchgfx3HAL4tickEv+0x164>
 800a6ca:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800a6ce:	6920      	ldr	r0, [r4, #16]
 800a6d0:	6803      	ldr	r3, [r0, #0]
 800a6d2:	2100      	movs	r1, #0
 800a6d4:	69db      	ldr	r3, [r3, #28]
 800a6d6:	4798      	blx	r3
 800a6d8:	6726      	str	r6, [r4, #112]	; 0x70
 800a6da:	f002 fbab 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 800a6de:	6803      	ldr	r3, [r0, #0]
 800a6e0:	2100      	movs	r1, #0
 800a6e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a6e4:	4798      	blx	r3
 800a6e6:	6823      	ldr	r3, [r4, #0]
 800a6e8:	4620      	mov	r0, r4
 800a6ea:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a6ee:	4798      	blx	r3
 800a6f0:	2001      	movs	r0, #1
 800a6f2:	f7f6 fc18 	bl	8000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a6f6:	2300      	movs	r3, #0
 800a6f8:	702b      	strb	r3, [r5, #0]
 800a6fa:	b004      	add	sp, #16
 800a6fc:	bd70      	pop	{r4, r5, r6, pc}
 800a6fe:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800a702:	4620      	mov	r0, r4
 800a704:	4798      	blx	r3
 800a706:	e7ae      	b.n	800a666 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800a708:	2863      	cmp	r0, #99	; 0x63
 800a70a:	bfcb      	itete	gt
 800a70c:	2300      	movgt	r3, #0
 800a70e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800a712:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800a716:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800a71a:	e7d8      	b.n	800a6ce <_ZN8touchgfx3HAL4tickEv+0x12a>
 800a71c:	200123c0 	.word	0x200123c0
 800a720:	200123c1 	.word	0x200123c1
 800a724:	05f5e100 	.word	0x05f5e100

0800a728 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a728:	f7f6 bd26 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a72c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a72c:	6581      	str	r1, [r0, #88]	; 0x58
 800a72e:	301c      	adds	r0, #28
 800a730:	f00f bf4a 	b.w	801a5c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a734 <_ZN8touchgfx3HAL5touchEll>:
 800a734:	b530      	push	{r4, r5, lr}
 800a736:	b087      	sub	sp, #28
 800a738:	4604      	mov	r4, r0
 800a73a:	a804      	add	r0, sp, #16
 800a73c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a740:	f002 f928 	bl	800c994 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a744:	9b04      	ldr	r3, [sp, #16]
 800a746:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a74a:	a906      	add	r1, sp, #24
 800a74c:	9b05      	ldr	r3, [sp, #20]
 800a74e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a752:	a803      	add	r0, sp, #12
 800a754:	f002 f96c 	bl	800ca30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a758:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a75c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a760:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a764:	f104 001c 	add.w	r0, r4, #28
 800a768:	b189      	cbz	r1, 800a78e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a76a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a76e:	9300      	str	r3, [sp, #0]
 800a770:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a774:	4613      	mov	r3, r2
 800a776:	462a      	mov	r2, r5
 800a778:	f00f ff36 	bl	801a5e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a77c:	b128      	cbz	r0, 800a78a <_ZN8touchgfx3HAL5touchEll+0x56>
 800a77e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a782:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a784:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a788:	6623      	str	r3, [r4, #96]	; 0x60
 800a78a:	b007      	add	sp, #28
 800a78c:	bd30      	pop	{r4, r5, pc}
 800a78e:	f00f ff6f 	bl	801a670 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a792:	2301      	movs	r3, #1
 800a794:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a798:	e7f1      	b.n	800a77e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a79a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a79a:	b570      	push	{r4, r5, r6, lr}
 800a79c:	2b00      	cmp	r3, #0
 800a79e:	d050      	beq.n	800a842 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a7a0:	ea81 0002 	eor.w	r0, r1, r2
 800a7a4:	07c6      	lsls	r6, r0, #31
 800a7a6:	d508      	bpl.n	800a7ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a7a8:	3a01      	subs	r2, #1
 800a7aa:	18cc      	adds	r4, r1, r3
 800a7ac:	42a1      	cmp	r1, r4
 800a7ae:	d048      	beq.n	800a842 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a7b0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a7b4:	f801 0b01 	strb.w	r0, [r1], #1
 800a7b8:	e7f8      	b.n	800a7ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a7ba:	07d5      	lsls	r5, r2, #31
 800a7bc:	bf42      	ittt	mi
 800a7be:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a7c2:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a7c6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a7ca:	2b01      	cmp	r3, #1
 800a7cc:	d915      	bls.n	800a7fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a7ce:	ea82 0001 	eor.w	r0, r2, r1
 800a7d2:	0784      	lsls	r4, r0, #30
 800a7d4:	d02d      	beq.n	800a832 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800a7d6:	1e94      	subs	r4, r2, #2
 800a7d8:	4608      	mov	r0, r1
 800a7da:	18ce      	adds	r6, r1, r3
 800a7dc:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800a7e0:	f820 5b02 	strh.w	r5, [r0], #2
 800a7e4:	1a35      	subs	r5, r6, r0
 800a7e6:	2d01      	cmp	r5, #1
 800a7e8:	d8f8      	bhi.n	800a7dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800a7ea:	1e98      	subs	r0, r3, #2
 800a7ec:	f020 0001 	bic.w	r0, r0, #1
 800a7f0:	3002      	adds	r0, #2
 800a7f2:	4401      	add	r1, r0
 800a7f4:	4402      	add	r2, r0
 800a7f6:	f003 0301 	and.w	r3, r3, #1
 800a7fa:	1f14      	subs	r4, r2, #4
 800a7fc:	4608      	mov	r0, r1
 800a7fe:	18ce      	adds	r6, r1, r3
 800a800:	1a35      	subs	r5, r6, r0
 800a802:	2d03      	cmp	r5, #3
 800a804:	d810      	bhi.n	800a828 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800a806:	089c      	lsrs	r4, r3, #2
 800a808:	00a0      	lsls	r0, r4, #2
 800a80a:	4401      	add	r1, r0
 800a80c:	3801      	subs	r0, #1
 800a80e:	4402      	add	r2, r0
 800a810:	f06f 0003 	mvn.w	r0, #3
 800a814:	fb00 3404 	mla	r4, r0, r4, r3
 800a818:	440c      	add	r4, r1
 800a81a:	42a1      	cmp	r1, r4
 800a81c:	d011      	beq.n	800a842 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a81e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a822:	f801 3b01 	strb.w	r3, [r1], #1
 800a826:	e7f8      	b.n	800a81a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800a828:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800a82c:	f840 5b04 	str.w	r5, [r0], #4
 800a830:	e7e6      	b.n	800a800 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800a832:	0790      	lsls	r0, r2, #30
 800a834:	d0e1      	beq.n	800a7fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a836:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a83a:	f821 0b02 	strh.w	r0, [r1], #2
 800a83e:	3b02      	subs	r3, #2
 800a840:	e7db      	b.n	800a7fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a842:	2001      	movs	r0, #1
 800a844:	bd70      	pop	{r4, r5, r6, pc}

0800a846 <_ZN8touchgfx3HAL7noTouchEv>:
 800a846:	b510      	push	{r4, lr}
 800a848:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800a84c:	4604      	mov	r4, r0
 800a84e:	b153      	cbz	r3, 800a866 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a850:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800a854:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800a858:	2101      	movs	r1, #1
 800a85a:	301c      	adds	r0, #28
 800a85c:	f00f ff08 	bl	801a670 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a860:	2300      	movs	r3, #0
 800a862:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a866:	bd10      	pop	{r4, pc}

0800a868 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a86c:	4605      	mov	r5, r0
 800a86e:	6980      	ldr	r0, [r0, #24]
 800a870:	b085      	sub	sp, #20
 800a872:	460f      	mov	r7, r1
 800a874:	4690      	mov	r8, r2
 800a876:	4699      	mov	r9, r3
 800a878:	b930      	cbnz	r0, 800a888 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800a87a:	4b1f      	ldr	r3, [pc, #124]	; (800a8f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800a87c:	4a1f      	ldr	r2, [pc, #124]	; (800a8fc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800a87e:	f240 112f 	movw	r1, #303	; 0x12f
 800a882:	481f      	ldr	r0, [pc, #124]	; (800a900 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800a884:	f00f ffb0 	bl	801a7e8 <__assert_func>
 800a888:	ac04      	add	r4, sp, #16
 800a88a:	2600      	movs	r6, #0
 800a88c:	f844 6d04 	str.w	r6, [r4, #-4]!
 800a890:	6806      	ldr	r6, [r0, #0]
 800a892:	9401      	str	r4, [sp, #4]
 800a894:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800a898:	9400      	str	r4, [sp, #0]
 800a89a:	6834      	ldr	r4, [r6, #0]
 800a89c:	47a0      	blx	r4
 800a89e:	4c19      	ldr	r4, [pc, #100]	; (800a904 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800a8a0:	4606      	mov	r6, r0
 800a8a2:	f8a4 9000 	strh.w	r9, [r4]
 800a8a6:	f7f6 fd2d 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a8aa:	6803      	ldr	r3, [r0, #0]
 800a8ac:	6a1b      	ldr	r3, [r3, #32]
 800a8ae:	4798      	blx	r3
 800a8b0:	280c      	cmp	r0, #12
 800a8b2:	d80f      	bhi.n	800a8d4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800a8b4:	e8df f000 	tbb	[pc, r0]
 800a8b8:	1b1b1207 	.word	0x1b1b1207
 800a8bc:	1b1b1b1b 	.word	0x1b1b1b1b
 800a8c0:	1b1b1b1b 	.word	0x1b1b1b1b
 800a8c4:	1b          	.byte	0x1b
 800a8c5:	00          	.byte	0x00
 800a8c6:	8823      	ldrh	r3, [r4, #0]
 800a8c8:	fb08 7203 	mla	r2, r8, r3, r7
 800a8cc:	9b03      	ldr	r3, [sp, #12]
 800a8ce:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a8d2:	63eb      	str	r3, [r5, #60]	; 0x3c
 800a8d4:	4630      	mov	r0, r6
 800a8d6:	b005      	add	sp, #20
 800a8d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a8dc:	8822      	ldrh	r2, [r4, #0]
 800a8de:	9b03      	ldr	r3, [sp, #12]
 800a8e0:	fb08 7202 	mla	r2, r8, r2, r7
 800a8e4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a8e8:	1a9a      	subs	r2, r3, r2
 800a8ea:	63ea      	str	r2, [r5, #60]	; 0x3c
 800a8ec:	e7f2      	b.n	800a8d4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800a8ee:	4b06      	ldr	r3, [pc, #24]	; (800a908 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800a8f0:	4a02      	ldr	r2, [pc, #8]	; (800a8fc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800a8f2:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 800a8f6:	e7c4      	b.n	800a882 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800a8f8:	0801d2f7 	.word	0x0801d2f7
 800a8fc:	0801d551 	.word	0x0801d551
 800a900:	0801d33c 	.word	0x0801d33c
 800a904:	200123b6 	.word	0x200123b6
 800a908:	0801d362 	.word	0x0801d362

0800a90c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800a90c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a910:	4698      	mov	r8, r3
 800a912:	6803      	ldr	r3, [r0, #0]
 800a914:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800a916:	4b0f      	ldr	r3, [pc, #60]	; (800a954 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800a918:	b087      	sub	sp, #28
 800a91a:	f8b3 9000 	ldrh.w	r9, [r3]
 800a91e:	460e      	mov	r6, r1
 800a920:	4617      	mov	r7, r2
 800a922:	4604      	mov	r4, r0
 800a924:	f7f6 fcee 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a928:	6803      	ldr	r3, [r0, #0]
 800a92a:	6a1b      	ldr	r3, [r3, #32]
 800a92c:	4798      	blx	r3
 800a92e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800a932:	9302      	str	r3, [sp, #8]
 800a934:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800a938:	9301      	str	r3, [sp, #4]
 800a93a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800a93e:	9300      	str	r3, [sp, #0]
 800a940:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800a944:	4643      	mov	r3, r8
 800a946:	463a      	mov	r2, r7
 800a948:	4631      	mov	r1, r6
 800a94a:	4620      	mov	r0, r4
 800a94c:	47a8      	blx	r5
 800a94e:	b007      	add	sp, #28
 800a950:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a954:	200123b6 	.word	0x200123b6

0800a958 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800a958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a95c:	4606      	mov	r6, r0
 800a95e:	b089      	sub	sp, #36	; 0x24
 800a960:	4610      	mov	r0, r2
 800a962:	460c      	mov	r4, r1
 800a964:	4691      	mov	r9, r2
 800a966:	4698      	mov	r8, r3
 800a968:	f004 f9ac 	bl	800ecc4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a96c:	2800      	cmp	r0, #0
 800a96e:	f000 8093 	beq.w	800aa98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x140>
 800a972:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800aab0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800a976:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800aab4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800a97a:	f8da 0000 	ldr.w	r0, [sl]
 800a97e:	4f4b      	ldr	r7, [pc, #300]	; (800aaac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800a980:	6802      	ldr	r2, [r0, #0]
 800a982:	6a12      	ldr	r2, [r2, #32]
 800a984:	4790      	blx	r2
 800a986:	f8da 0000 	ldr.w	r0, [sl]
 800a98a:	6802      	ldr	r2, [r0, #0]
 800a98c:	ad08      	add	r5, sp, #32
 800a98e:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800a990:	4790      	blx	r2
 800a992:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800a996:	f8bb 3000 	ldrh.w	r3, [fp]
 800a99a:	9300      	str	r3, [sp, #0]
 800a99c:	4628      	mov	r0, r5
 800a99e:	883b      	ldrh	r3, [r7, #0]
 800a9a0:	9301      	str	r3, [sp, #4]
 800a9a2:	f004 fa53 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a9a6:	f8ab 0000 	strh.w	r0, [fp]
 800a9aa:	4628      	mov	r0, r5
 800a9ac:	f004 fa88 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a9b0:	f8da b000 	ldr.w	fp, [sl]
 800a9b4:	8038      	strh	r0, [r7, #0]
 800a9b6:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800a9ba:	9302      	str	r3, [sp, #8]
 800a9bc:	4648      	mov	r0, r9
 800a9be:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800a9c2:	f004 f97f 	bl	800ecc4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a9c6:	f8da 2000 	ldr.w	r2, [sl]
 800a9ca:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800a9ce:	63d0      	str	r0, [r2, #60]	; 0x3c
 800a9d0:	6822      	ldr	r2, [r4, #0]
 800a9d2:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800a9d6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800a9d8:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800a9dc:	2200      	movs	r2, #0
 800a9de:	4611      	mov	r1, r2
 800a9e0:	4620      	mov	r0, r4
 800a9e2:	4798      	blx	r3
 800a9e4:	2201      	movs	r2, #1
 800a9e6:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800a9ea:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800a9ee:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800a9f2:	2a00      	cmp	r2, #0
 800a9f4:	f104 0204 	add.w	r2, r4, #4
 800a9f8:	dd51      	ble.n	800aa9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 800a9fa:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800a9fe:	2900      	cmp	r1, #0
 800aa00:	dd4d      	ble.n	800aa9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 800aa02:	6810      	ldr	r0, [r2, #0]
 800aa04:	6851      	ldr	r1, [r2, #4]
 800aa06:	f10d 0c18 	add.w	ip, sp, #24
 800aa0a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800aa0e:	4641      	mov	r1, r8
 800aa10:	a806      	add	r0, sp, #24
 800aa12:	f7ff f96f 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800aa16:	4628      	mov	r0, r5
 800aa18:	f004 fba4 	bl	800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800aa1c:	4680      	mov	r8, r0
 800aa1e:	f7f6 fc71 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800aa22:	6802      	ldr	r2, [r0, #0]
 800aa24:	6a12      	ldr	r2, [r2, #32]
 800aa26:	4790      	blx	r2
 800aa28:	4580      	cmp	r8, r0
 800aa2a:	d03d      	beq.n	800aaa8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x150>
 800aa2c:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800aa2e:	b150      	cbz	r0, 800aa46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 800aa30:	4628      	mov	r0, r5
 800aa32:	f004 fb97 	bl	800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800aa36:	4605      	mov	r5, r0
 800aa38:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800aa3a:	6803      	ldr	r3, [r0, #0]
 800aa3c:	6a1b      	ldr	r3, [r3, #32]
 800aa3e:	4798      	blx	r3
 800aa40:	1a2b      	subs	r3, r5, r0
 800aa42:	4258      	negs	r0, r3
 800aa44:	4158      	adcs	r0, r3
 800aa46:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800aa4a:	6822      	ldr	r2, [r4, #0]
 800aa4c:	6963      	ldr	r3, [r4, #20]
 800aa4e:	9303      	str	r3, [sp, #12]
 800aa50:	2500      	movs	r5, #0
 800aa52:	6165      	str	r5, [r4, #20]
 800aa54:	4620      	mov	r0, r4
 800aa56:	6892      	ldr	r2, [r2, #8]
 800aa58:	a906      	add	r1, sp, #24
 800aa5a:	4790      	blx	r2
 800aa5c:	9b03      	ldr	r3, [sp, #12]
 800aa5e:	6163      	str	r3, [r4, #20]
 800aa60:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800aa64:	6823      	ldr	r3, [r4, #0]
 800aa66:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800aa6a:	4620      	mov	r0, r4
 800aa6c:	4c10      	ldr	r4, [pc, #64]	; (800aab0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800aa6e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aa70:	4652      	mov	r2, sl
 800aa72:	4649      	mov	r1, r9
 800aa74:	4798      	blx	r3
 800aa76:	6820      	ldr	r0, [r4, #0]
 800aa78:	9b02      	ldr	r3, [sp, #8]
 800aa7a:	9a00      	ldr	r2, [sp, #0]
 800aa7c:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800aa80:	4b0c      	ldr	r3, [pc, #48]	; (800aab4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800aa82:	801a      	strh	r2, [r3, #0]
 800aa84:	4b09      	ldr	r3, [pc, #36]	; (800aaac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800aa86:	9a01      	ldr	r2, [sp, #4]
 800aa88:	801a      	strh	r2, [r3, #0]
 800aa8a:	6803      	ldr	r3, [r0, #0]
 800aa8c:	6a1b      	ldr	r3, [r3, #32]
 800aa8e:	4798      	blx	r3
 800aa90:	6820      	ldr	r0, [r4, #0]
 800aa92:	6803      	ldr	r3, [r0, #0]
 800aa94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa96:	4798      	blx	r3
 800aa98:	b009      	add	sp, #36	; 0x24
 800aa9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa9e:	6810      	ldr	r0, [r2, #0]
 800aaa0:	6851      	ldr	r1, [r2, #4]
 800aaa2:	ab06      	add	r3, sp, #24
 800aaa4:	c303      	stmia	r3!, {r0, r1}
 800aaa6:	e7b6      	b.n	800aa16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbe>
 800aaa8:	2000      	movs	r0, #0
 800aaaa:	e7cc      	b.n	800aa46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 800aaac:	200123b8 	.word	0x200123b8
 800aab0:	200123bc 	.word	0x200123bc
 800aab4:	200123b6 	.word	0x200123b6

0800aab8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800aab8:	b510      	push	{r4, lr}
 800aaba:	4b07      	ldr	r3, [pc, #28]	; (800aad8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800aabc:	781b      	ldrb	r3, [r3, #0]
 800aabe:	4604      	mov	r4, r0
 800aac0:	b13b      	cbz	r3, 800aad2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800aac2:	6803      	ldr	r3, [r0, #0]
 800aac4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800aac6:	4798      	blx	r3
 800aac8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800aaca:	4283      	cmp	r3, r0
 800aacc:	d101      	bne.n	800aad2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800aace:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800aad0:	bd10      	pop	{r4, pc}
 800aad2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800aad4:	e7fc      	b.n	800aad0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800aad6:	bf00      	nop
 800aad8:	200123ba 	.word	0x200123ba

0800aadc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800aadc:	b510      	push	{r4, lr}
 800aade:	4b0b      	ldr	r3, [pc, #44]	; (800ab0c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800aae0:	781b      	ldrb	r3, [r3, #0]
 800aae2:	4604      	mov	r4, r0
 800aae4:	b95b      	cbnz	r3, 800aafe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800aae6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800aaea:	2b02      	cmp	r3, #2
 800aaec:	d007      	beq.n	800aafe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800aaee:	6840      	ldr	r0, [r0, #4]
 800aaf0:	f000 fbce 	bl	800b290 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800aaf4:	b118      	cbz	r0, 800aafe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800aaf6:	6862      	ldr	r2, [r4, #4]
 800aaf8:	7a53      	ldrb	r3, [r2, #9]
 800aafa:	2b00      	cmp	r3, #0
 800aafc:	d0fc      	beq.n	800aaf8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800aafe:	f7f6 fb23 	bl	8001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ab02:	4620      	mov	r0, r4
 800ab04:	f7ff ffd8 	bl	800aab8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ab08:	bd10      	pop	{r4, pc}
 800ab0a:	bf00      	nop
 800ab0c:	200123ba 	.word	0x200123ba

0800ab10 <_ZN8touchgfx3HAL10initializeEv>:
 800ab10:	b510      	push	{r4, lr}
 800ab12:	4604      	mov	r4, r0
 800ab14:	f7f6 fb00 	bl	8001118 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ab18:	6860      	ldr	r0, [r4, #4]
 800ab1a:	6803      	ldr	r3, [r0, #0]
 800ab1c:	68db      	ldr	r3, [r3, #12]
 800ab1e:	4798      	blx	r3
 800ab20:	68e0      	ldr	r0, [r4, #12]
 800ab22:	6803      	ldr	r3, [r0, #0]
 800ab24:	689b      	ldr	r3, [r3, #8]
 800ab26:	4798      	blx	r3
 800ab28:	6823      	ldr	r3, [r4, #0]
 800ab2a:	4620      	mov	r0, r4
 800ab2c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ab2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ab32:	4718      	bx	r3

0800ab34 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800ab34:	b508      	push	{r3, lr}
 800ab36:	290c      	cmp	r1, #12
 800ab38:	d817      	bhi.n	800ab6a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800ab3a:	e8df f001 	tbb	[pc, r1]
 800ab3e:	090b      	.short	0x090b
 800ab40:	0d0d0d07 	.word	0x0d0d0d07
 800ab44:	1414140d 	.word	0x1414140d
 800ab48:	1414      	.short	0x1414
 800ab4a:	0d          	.byte	0x0d
 800ab4b:	00          	.byte	0x00
 800ab4c:	2020      	movs	r0, #32
 800ab4e:	bd08      	pop	{r3, pc}
 800ab50:	2018      	movs	r0, #24
 800ab52:	e7fc      	b.n	800ab4e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ab54:	2010      	movs	r0, #16
 800ab56:	e7fa      	b.n	800ab4e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ab58:	4b05      	ldr	r3, [pc, #20]	; (800ab70 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800ab5a:	4a06      	ldr	r2, [pc, #24]	; (800ab74 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800ab5c:	4806      	ldr	r0, [pc, #24]	; (800ab78 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800ab5e:	f240 212f 	movw	r1, #559	; 0x22f
 800ab62:	f00f fe41 	bl	801a7e8 <__assert_func>
 800ab66:	2008      	movs	r0, #8
 800ab68:	e7f1      	b.n	800ab4e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ab6a:	2000      	movs	r0, #0
 800ab6c:	e7ef      	b.n	800ab4e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ab6e:	bf00      	nop
 800ab70:	0801d435 	.word	0x0801d435
 800ab74:	0801d713 	.word	0x0801d713
 800ab78:	0801d33c 	.word	0x0801d33c

0800ab7c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800ab7c:	b570      	push	{r4, r5, r6, lr}
 800ab7e:	460d      	mov	r5, r1
 800ab80:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800ab84:	4616      	mov	r6, r2
 800ab86:	461c      	mov	r4, r3
 800ab88:	f7ff ffd4 	bl	800ab34 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800ab8c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800ab90:	10c0      	asrs	r0, r0, #3
 800ab92:	fb06 5101 	mla	r1, r6, r1, r5
 800ab96:	fb00 4001 	mla	r0, r0, r1, r4
 800ab9a:	bd70      	pop	{r4, r5, r6, pc}

0800ab9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800ab9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aba0:	b08a      	sub	sp, #40	; 0x28
 800aba2:	f04f 0c00 	mov.w	ip, #0
 800aba6:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800abaa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800abae:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800abb2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800abb6:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800abba:	f8cd c020 	str.w	ip, [sp, #32]
 800abbe:	f1b8 0f02 	cmp.w	r8, #2
 800abc2:	4604      	mov	r4, r0
 800abc4:	469a      	mov	sl, r3
 800abc6:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800abca:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800abce:	d030      	beq.n	800ac32 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800abd0:	2bff      	cmp	r3, #255	; 0xff
 800abd2:	d12c      	bne.n	800ac2e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800abd4:	4560      	cmp	r0, ip
 800abd6:	bf14      	ite	ne
 800abd8:	2004      	movne	r0, #4
 800abda:	2001      	moveq	r0, #1
 800abdc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800abe0:	9204      	str	r2, [sp, #16]
 800abe2:	4620      	mov	r0, r4
 800abe4:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800abe8:	f8ad 201c 	strh.w	r2, [sp, #28]
 800abec:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800abf0:	f8ad 6018 	strh.w	r6, [sp, #24]
 800abf4:	f8ad 501a 	strh.w	r5, [sp, #26]
 800abf8:	f7ff ff5e 	bl	800aab8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800abfc:	e9cd 9700 	strd	r9, r7, [sp]
 800ac00:	4603      	mov	r3, r0
 800ac02:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800ac06:	4651      	mov	r1, sl
 800ac08:	4620      	mov	r0, r4
 800ac0a:	f7ff ffb7 	bl	800ab7c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800ac0e:	f8ad 901e 	strh.w	r9, [sp, #30]
 800ac12:	9005      	str	r0, [sp, #20]
 800ac14:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800ac18:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800ac1c:	b106      	cbz	r6, 800ac20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800ac1e:	b98d      	cbnz	r5, 800ac44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800ac20:	4b12      	ldr	r3, [pc, #72]	; (800ac6c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800ac22:	4a13      	ldr	r2, [pc, #76]	; (800ac70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ac24:	f240 11af 	movw	r1, #431	; 0x1af
 800ac28:	4812      	ldr	r0, [pc, #72]	; (800ac74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800ac2a:	f00f fddd 	bl	801a7e8 <__assert_func>
 800ac2e:	2004      	movs	r0, #4
 800ac30:	e7d4      	b.n	800abdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ac32:	2bff      	cmp	r3, #255	; 0xff
 800ac34:	d104      	bne.n	800ac40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800ac36:	2800      	cmp	r0, #0
 800ac38:	bf14      	ite	ne
 800ac3a:	2040      	movne	r0, #64	; 0x40
 800ac3c:	2020      	moveq	r0, #32
 800ac3e:	e7cd      	b.n	800abdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ac40:	2040      	movs	r0, #64	; 0x40
 800ac42:	e7cb      	b.n	800abdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ac44:	6823      	ldr	r3, [r4, #0]
 800ac46:	9d02      	ldr	r5, [sp, #8]
 800ac48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ac4a:	4620      	mov	r0, r4
 800ac4c:	4798      	blx	r3
 800ac4e:	4228      	tst	r0, r5
 800ac50:	d104      	bne.n	800ac5c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800ac52:	4b09      	ldr	r3, [pc, #36]	; (800ac78 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800ac54:	4a06      	ldr	r2, [pc, #24]	; (800ac70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ac56:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800ac5a:	e7e5      	b.n	800ac28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800ac5c:	6860      	ldr	r0, [r4, #4]
 800ac5e:	6803      	ldr	r3, [r0, #0]
 800ac60:	a902      	add	r1, sp, #8
 800ac62:	685b      	ldr	r3, [r3, #4]
 800ac64:	4798      	blx	r3
 800ac66:	b00a      	add	sp, #40	; 0x28
 800ac68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ac6c:	0801d3b8 	.word	0x0801d3b8
 800ac70:	0801d5b5 	.word	0x0801d5b5
 800ac74:	0801d33c 	.word	0x0801d33c
 800ac78:	0801d3f0 	.word	0x0801d3f0

0800ac7c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800ac7c:	b510      	push	{r4, lr}
 800ac7e:	b08a      	sub	sp, #40	; 0x28
 800ac80:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800ac84:	9408      	str	r4, [sp, #32]
 800ac86:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800ac8a:	9407      	str	r4, [sp, #28]
 800ac8c:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800ac90:	9406      	str	r4, [sp, #24]
 800ac92:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800ac96:	9405      	str	r4, [sp, #20]
 800ac98:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800ac9c:	9404      	str	r4, [sp, #16]
 800ac9e:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800aca2:	9403      	str	r4, [sp, #12]
 800aca4:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800aca8:	9402      	str	r4, [sp, #8]
 800acaa:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800acae:	e9cd 3400 	strd	r3, r4, [sp]
 800acb2:	4613      	mov	r3, r2
 800acb4:	2200      	movs	r2, #0
 800acb6:	f7ff ff71 	bl	800ab9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800acba:	b00a      	add	sp, #40	; 0x28
 800acbc:	bd10      	pop	{r4, pc}
	...

0800acc0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800acc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800acc2:	b08b      	sub	sp, #44	; 0x2c
 800acc4:	4616      	mov	r6, r2
 800acc6:	460d      	mov	r5, r1
 800acc8:	461f      	mov	r7, r3
 800acca:	4604      	mov	r4, r0
 800accc:	f7f6 fb1a 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800acd0:	6803      	ldr	r3, [r0, #0]
 800acd2:	6a1b      	ldr	r3, [r3, #32]
 800acd4:	4798      	blx	r3
 800acd6:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800acda:	4b0d      	ldr	r3, [pc, #52]	; (800ad10 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800acdc:	881b      	ldrh	r3, [r3, #0]
 800acde:	9306      	str	r3, [sp, #24]
 800ace0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800ace4:	9305      	str	r3, [sp, #20]
 800ace6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800acea:	9304      	str	r3, [sp, #16]
 800acec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800acf0:	9303      	str	r3, [sp, #12]
 800acf2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800acf6:	9302      	str	r3, [sp, #8]
 800acf8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800acfc:	2200      	movs	r2, #0
 800acfe:	e9cd 7300 	strd	r7, r3, [sp]
 800ad02:	4629      	mov	r1, r5
 800ad04:	4633      	mov	r3, r6
 800ad06:	4620      	mov	r0, r4
 800ad08:	f7ff ff48 	bl	800ab9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800ad0c:	b00b      	add	sp, #44	; 0x2c
 800ad0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad10:	200123b6 	.word	0x200123b6

0800ad14 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800ad14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad18:	461f      	mov	r7, r3
 800ad1a:	4b14      	ldr	r3, [pc, #80]	; (800ad6c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800ad1c:	b08a      	sub	sp, #40	; 0x28
 800ad1e:	4616      	mov	r6, r2
 800ad20:	f8b3 8000 	ldrh.w	r8, [r3]
 800ad24:	460d      	mov	r5, r1
 800ad26:	4604      	mov	r4, r0
 800ad28:	f7f6 faec 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800ad2c:	6803      	ldr	r3, [r0, #0]
 800ad2e:	6a1b      	ldr	r3, [r3, #32]
 800ad30:	4798      	blx	r3
 800ad32:	2302      	movs	r3, #2
 800ad34:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800ad38:	2301      	movs	r3, #1
 800ad3a:	9305      	str	r3, [sp, #20]
 800ad3c:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800ad40:	9304      	str	r3, [sp, #16]
 800ad42:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ad46:	9303      	str	r3, [sp, #12]
 800ad48:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ad4c:	9302      	str	r3, [sp, #8]
 800ad4e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ad52:	9008      	str	r0, [sp, #32]
 800ad54:	e9cd 7300 	strd	r7, r3, [sp]
 800ad58:	2200      	movs	r2, #0
 800ad5a:	4633      	mov	r3, r6
 800ad5c:	4629      	mov	r1, r5
 800ad5e:	4620      	mov	r0, r4
 800ad60:	f7ff ff1c 	bl	800ab9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800ad64:	b00a      	add	sp, #40	; 0x28
 800ad66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ad6a:	bf00      	nop
 800ad6c:	200123b6 	.word	0x200123b6

0800ad70 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800ad70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad74:	b08b      	sub	sp, #44	; 0x2c
 800ad76:	469b      	mov	fp, r3
 800ad78:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800ad7c:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800ad80:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800ad84:	2fff      	cmp	r7, #255	; 0xff
 800ad86:	bf14      	ite	ne
 800ad88:	2308      	movne	r3, #8
 800ad8a:	2302      	moveq	r3, #2
 800ad8c:	2600      	movs	r6, #0
 800ad8e:	4604      	mov	r4, r0
 800ad90:	4689      	mov	r9, r1
 800ad92:	4692      	mov	sl, r2
 800ad94:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800ad98:	9608      	str	r6, [sp, #32]
 800ad9a:	f7ff fe8d 	bl	800aab8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad9e:	e9cd 8500 	strd	r8, r5, [sp]
 800ada2:	4603      	mov	r3, r0
 800ada4:	465a      	mov	r2, fp
 800ada6:	4651      	mov	r1, sl
 800ada8:	4620      	mov	r0, r4
 800adaa:	f7ff fee7 	bl	800ab7c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800adae:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800adb2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800adb6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800adba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800adbe:	6823      	ldr	r3, [r4, #0]
 800adc0:	9005      	str	r0, [sp, #20]
 800adc2:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800adc6:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800adca:	f8ad 601c 	strh.w	r6, [sp, #28]
 800adce:	f8ad 801e 	strh.w	r8, [sp, #30]
 800add2:	f8cd 9020 	str.w	r9, [sp, #32]
 800add6:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800adda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800addc:	9d02      	ldr	r5, [sp, #8]
 800adde:	4620      	mov	r0, r4
 800ade0:	4798      	blx	r3
 800ade2:	4228      	tst	r0, r5
 800ade4:	d106      	bne.n	800adf4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800ade6:	4b07      	ldr	r3, [pc, #28]	; (800ae04 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800ade8:	4a07      	ldr	r2, [pc, #28]	; (800ae08 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800adea:	4808      	ldr	r0, [pc, #32]	; (800ae0c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800adec:	f240 11e7 	movw	r1, #487	; 0x1e7
 800adf0:	f00f fcfa 	bl	801a7e8 <__assert_func>
 800adf4:	6860      	ldr	r0, [r4, #4]
 800adf6:	6803      	ldr	r3, [r0, #0]
 800adf8:	a902      	add	r1, sp, #8
 800adfa:	685b      	ldr	r3, [r3, #4]
 800adfc:	4798      	blx	r3
 800adfe:	b00b      	add	sp, #44	; 0x2c
 800ae00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae04:	0801d3f0 	.word	0x0801d3f0
 800ae08:	0801d67e 	.word	0x0801d67e
 800ae0c:	0801d33c 	.word	0x0801d33c

0800ae10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ae10:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ae14:	461f      	mov	r7, r3
 800ae16:	4b0b      	ldr	r3, [pc, #44]	; (800ae44 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ae18:	460d      	mov	r5, r1
 800ae1a:	f8b3 8000 	ldrh.w	r8, [r3]
 800ae1e:	4616      	mov	r6, r2
 800ae20:	4604      	mov	r4, r0
 800ae22:	f7f6 fa6f 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800ae26:	6803      	ldr	r3, [r0, #0]
 800ae28:	6a1b      	ldr	r3, [r3, #32]
 800ae2a:	4798      	blx	r3
 800ae2c:	463b      	mov	r3, r7
 800ae2e:	e9cd 8000 	strd	r8, r0, [sp]
 800ae32:	4632      	mov	r2, r6
 800ae34:	4629      	mov	r1, r5
 800ae36:	4620      	mov	r0, r4
 800ae38:	f7ff fea0 	bl	800ab7c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800ae3c:	b002      	add	sp, #8
 800ae3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae42:	bf00      	nop
 800ae44:	200123b6 	.word	0x200123b6

0800ae48 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800ae48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae4c:	b088      	sub	sp, #32
 800ae4e:	4698      	mov	r8, r3
 800ae50:	2300      	movs	r3, #0
 800ae52:	9306      	str	r3, [sp, #24]
 800ae54:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ae58:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800ae5c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800ae60:	f8ad 6010 	strh.w	r6, [sp, #16]
 800ae64:	e9cd 3100 	strd	r3, r1, [sp]
 800ae68:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ae6c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ae70:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800ae74:	f88d 301c 	strb.w	r3, [sp, #28]
 800ae78:	4617      	mov	r7, r2
 800ae7a:	4604      	mov	r4, r0
 800ae7c:	f8ad 5012 	strh.w	r5, [sp, #18]
 800ae80:	f7ff fe1a 	bl	800aab8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ae84:	4642      	mov	r2, r8
 800ae86:	4603      	mov	r3, r0
 800ae88:	4639      	mov	r1, r7
 800ae8a:	4620      	mov	r0, r4
 800ae8c:	f7ff ffc0 	bl	800ae10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ae90:	4b16      	ldr	r3, [pc, #88]	; (800aeec <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800ae92:	9003      	str	r0, [sp, #12]
 800ae94:	881b      	ldrh	r3, [r3, #0]
 800ae96:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ae9a:	f7f6 fa33 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800ae9e:	6803      	ldr	r3, [r0, #0]
 800aea0:	6a1b      	ldr	r3, [r3, #32]
 800aea2:	4798      	blx	r3
 800aea4:	f88d 001e 	strb.w	r0, [sp, #30]
 800aea8:	f88d 001d 	strb.w	r0, [sp, #29]
 800aeac:	b106      	cbz	r6, 800aeb0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800aeae:	b935      	cbnz	r5, 800aebe <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800aeb0:	4b0f      	ldr	r3, [pc, #60]	; (800aef0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800aeb2:	4a10      	ldr	r2, [pc, #64]	; (800aef4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800aeb4:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 800aeb8:	480f      	ldr	r0, [pc, #60]	; (800aef8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800aeba:	f00f fc95 	bl	801a7e8 <__assert_func>
 800aebe:	6823      	ldr	r3, [r4, #0]
 800aec0:	9d00      	ldr	r5, [sp, #0]
 800aec2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aec4:	4620      	mov	r0, r4
 800aec6:	4798      	blx	r3
 800aec8:	4228      	tst	r0, r5
 800aeca:	d104      	bne.n	800aed6 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800aecc:	4b0b      	ldr	r3, [pc, #44]	; (800aefc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800aece:	4a09      	ldr	r2, [pc, #36]	; (800aef4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800aed0:	f240 11cd 	movw	r1, #461	; 0x1cd
 800aed4:	e7f0      	b.n	800aeb8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800aed6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800aed8:	6860      	ldr	r0, [r4, #4]
 800aeda:	9306      	str	r3, [sp, #24]
 800aedc:	6803      	ldr	r3, [r0, #0]
 800aede:	4669      	mov	r1, sp
 800aee0:	685b      	ldr	r3, [r3, #4]
 800aee2:	4798      	blx	r3
 800aee4:	b008      	add	sp, #32
 800aee6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aeea:	bf00      	nop
 800aeec:	200123b6 	.word	0x200123b6
 800aef0:	0801d3b8 	.word	0x0801d3b8
 800aef4:	0801d467 	.word	0x0801d467
 800aef8:	0801d33c 	.word	0x0801d33c
 800aefc:	0801d3f0 	.word	0x0801d3f0

0800af00 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800af00:	b570      	push	{r4, r5, r6, lr}
 800af02:	b08a      	sub	sp, #40	; 0x28
 800af04:	466b      	mov	r3, sp
 800af06:	e883 0006 	stmia.w	r3, {r1, r2}
 800af0a:	4b20      	ldr	r3, [pc, #128]	; (800af8c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800af0c:	781b      	ldrb	r3, [r3, #0]
 800af0e:	4604      	mov	r4, r0
 800af10:	b933      	cbnz	r3, 800af20 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800af12:	4b1f      	ldr	r3, [pc, #124]	; (800af90 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800af14:	4a1f      	ldr	r2, [pc, #124]	; (800af94 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800af16:	4820      	ldr	r0, [pc, #128]	; (800af98 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800af18:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 800af1c:	f00f fc64 	bl	801a7e8 <__assert_func>
 800af20:	2300      	movs	r3, #0
 800af22:	9308      	str	r3, [sp, #32]
 800af24:	2301      	movs	r3, #1
 800af26:	9302      	str	r3, [sp, #8]
 800af28:	6803      	ldr	r3, [r0, #0]
 800af2a:	f8bd 5000 	ldrh.w	r5, [sp]
 800af2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800af30:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800af34:	4798      	blx	r3
 800af36:	4632      	mov	r2, r6
 800af38:	4629      	mov	r1, r5
 800af3a:	4603      	mov	r3, r0
 800af3c:	4620      	mov	r0, r4
 800af3e:	f7ff ff67 	bl	800ae10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800af42:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800af44:	9305      	str	r3, [sp, #20]
 800af46:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800af4a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800af4e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800af52:	f8ad 301a 	strh.w	r3, [sp, #26]
 800af56:	4b11      	ldr	r3, [pc, #68]	; (800af9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800af58:	9003      	str	r0, [sp, #12]
 800af5a:	881b      	ldrh	r3, [r3, #0]
 800af5c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800af60:	f8ad 301e 	strh.w	r3, [sp, #30]
 800af64:	f7f6 f9ce 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800af68:	6803      	ldr	r3, [r0, #0]
 800af6a:	6a1b      	ldr	r3, [r3, #32]
 800af6c:	4798      	blx	r3
 800af6e:	23ff      	movs	r3, #255	; 0xff
 800af70:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800af74:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800af78:	6860      	ldr	r0, [r4, #4]
 800af7a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800af7e:	6803      	ldr	r3, [r0, #0]
 800af80:	a902      	add	r1, sp, #8
 800af82:	685b      	ldr	r3, [r3, #4]
 800af84:	4798      	blx	r3
 800af86:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800af88:	b00a      	add	sp, #40	; 0x28
 800af8a:	bd70      	pop	{r4, r5, r6, pc}
 800af8c:	200123bb 	.word	0x200123bb
 800af90:	0801d289 	.word	0x0801d289
 800af94:	0801d50b 	.word	0x0801d50b
 800af98:	0801d33c 	.word	0x0801d33c
 800af9c:	200123b6 	.word	0x200123b6

0800afa0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800afa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800afa2:	b08b      	sub	sp, #44	; 0x2c
 800afa4:	466d      	mov	r5, sp
 800afa6:	e885 0006 	stmia.w	r5, {r1, r2}
 800afaa:	461d      	mov	r5, r3
 800afac:	2300      	movs	r3, #0
 800afae:	9308      	str	r3, [sp, #32]
 800afb0:	2301      	movs	r3, #1
 800afb2:	9302      	str	r3, [sp, #8]
 800afb4:	6803      	ldr	r3, [r0, #0]
 800afb6:	f8bd 6000 	ldrh.w	r6, [sp]
 800afba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800afbc:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800afc0:	4604      	mov	r4, r0
 800afc2:	4798      	blx	r3
 800afc4:	463a      	mov	r2, r7
 800afc6:	4631      	mov	r1, r6
 800afc8:	4603      	mov	r3, r0
 800afca:	4620      	mov	r0, r4
 800afcc:	f7ff ff20 	bl	800ae10 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800afd0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800afd4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800afd8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800afdc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800afe0:	4b0e      	ldr	r3, [pc, #56]	; (800b01c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800afe2:	9003      	str	r0, [sp, #12]
 800afe4:	881b      	ldrh	r3, [r3, #0]
 800afe6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800afea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800afec:	f8ad 301e 	strh.w	r3, [sp, #30]
 800aff0:	9505      	str	r5, [sp, #20]
 800aff2:	f7f6 f987 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800aff6:	6803      	ldr	r3, [r0, #0]
 800aff8:	6a1b      	ldr	r3, [r3, #32]
 800affa:	4798      	blx	r3
 800affc:	23ff      	movs	r3, #255	; 0xff
 800affe:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b002:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b006:	6860      	ldr	r0, [r4, #4]
 800b008:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b00c:	6803      	ldr	r3, [r0, #0]
 800b00e:	a902      	add	r1, sp, #8
 800b010:	685b      	ldr	r3, [r3, #4]
 800b012:	4798      	blx	r3
 800b014:	4628      	mov	r0, r5
 800b016:	b00b      	add	sp, #44	; 0x2c
 800b018:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b01a:	bf00      	nop
 800b01c:	200123b6 	.word	0x200123b6

0800b020 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b020:	b570      	push	{r4, r5, r6, lr}
 800b022:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b026:	4604      	mov	r4, r0
 800b028:	b19b      	cbz	r3, 800b052 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b02a:	2002      	movs	r0, #2
 800b02c:	f7f5 ff7c 	bl	8000f28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b030:	2300      	movs	r3, #0
 800b032:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b036:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b03a:	6823      	ldr	r3, [r4, #0]
 800b03c:	4620      	mov	r0, r4
 800b03e:	f8d3 50a0 	ldr.w	r5, [r3, #160]	; 0xa0
 800b042:	f7ff fd39 	bl	800aab8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b046:	462b      	mov	r3, r5
 800b048:	4601      	mov	r1, r0
 800b04a:	4620      	mov	r0, r4
 800b04c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b050:	4718      	bx	r3
 800b052:	bd70      	pop	{r4, r5, r6, pc}

0800b054 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b054:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b058:	1a13      	subs	r3, r2, r0
 800b05a:	4258      	negs	r0, r3
 800b05c:	4158      	adcs	r0, r3
 800b05e:	4770      	bx	lr

0800b060 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b060:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b064:	1a9b      	subs	r3, r3, r2
 800b066:	2b00      	cmp	r3, #0
 800b068:	bfdc      	itt	le
 800b06a:	6882      	ldrle	r2, [r0, #8]
 800b06c:	189b      	addle	r3, r3, r2
 800b06e:	2b01      	cmp	r3, #1
 800b070:	bfcc      	ite	gt
 800b072:	2000      	movgt	r0, #0
 800b074:	2001      	movle	r0, #1
 800b076:	4770      	bx	lr

0800b078 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b078:	6902      	ldr	r2, [r0, #16]
 800b07a:	6840      	ldr	r0, [r0, #4]
 800b07c:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800b080:	4770      	bx	lr

0800b082 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b082:	6803      	ldr	r3, [r0, #0]
 800b084:	691b      	ldr	r3, [r3, #16]
 800b086:	4718      	bx	r3

0800b088 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b088:	4770      	bx	lr

0800b08a <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b08a:	4770      	bx	lr

0800b08c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b08c:	4770      	bx	lr
	...

0800b090 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b090:	b570      	push	{r4, r5, r6, lr}
 800b092:	2301      	movs	r3, #1
 800b094:	7203      	strb	r3, [r0, #8]
 800b096:	4604      	mov	r4, r0
 800b098:	6840      	ldr	r0, [r0, #4]
 800b09a:	6803      	ldr	r3, [r0, #0]
 800b09c:	699b      	ldr	r3, [r3, #24]
 800b09e:	4798      	blx	r3
 800b0a0:	6803      	ldr	r3, [r0, #0]
 800b0a2:	2b08      	cmp	r3, #8
 800b0a4:	4605      	mov	r5, r0
 800b0a6:	d01e      	beq.n	800b0e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800b0a8:	d80b      	bhi.n	800b0c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b0aa:	2b02      	cmp	r3, #2
 800b0ac:	d027      	beq.n	800b0fe <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800b0ae:	2b04      	cmp	r3, #4
 800b0b0:	d011      	beq.n	800b0d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800b0b2:	2b01      	cmp	r3, #1
 800b0b4:	d028      	beq.n	800b108 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b0b6:	4b17      	ldr	r3, [pc, #92]	; (800b114 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800b0b8:	4a17      	ldr	r2, [pc, #92]	; (800b118 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800b0ba:	4818      	ldr	r0, [pc, #96]	; (800b11c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800b0bc:	218b      	movs	r1, #139	; 0x8b
 800b0be:	f00f fb93 	bl	801a7e8 <__assert_func>
 800b0c2:	2b40      	cmp	r3, #64	; 0x40
 800b0c4:	d020      	beq.n	800b108 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b0c6:	d801      	bhi.n	800b0cc <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b0c8:	2b20      	cmp	r3, #32
 800b0ca:	e7f3      	b.n	800b0b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800b0cc:	2b80      	cmp	r3, #128	; 0x80
 800b0ce:	d01b      	beq.n	800b108 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b0d0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b0d4:	e7ee      	b.n	800b0b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800b0d6:	6823      	ldr	r3, [r4, #0]
 800b0d8:	7f01      	ldrb	r1, [r0, #28]
 800b0da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0dc:	4620      	mov	r0, r4
 800b0de:	4798      	blx	r3
 800b0e0:	6823      	ldr	r3, [r4, #0]
 800b0e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b0e4:	e006      	b.n	800b0f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b0e6:	6823      	ldr	r3, [r4, #0]
 800b0e8:	7f01      	ldrb	r1, [r0, #28]
 800b0ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0ec:	4620      	mov	r0, r4
 800b0ee:	4798      	blx	r3
 800b0f0:	6823      	ldr	r3, [r4, #0]
 800b0f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b0f4:	4629      	mov	r1, r5
 800b0f6:	4620      	mov	r0, r4
 800b0f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b0fc:	4718      	bx	r3
 800b0fe:	6823      	ldr	r3, [r4, #0]
 800b100:	4620      	mov	r0, r4
 800b102:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b104:	4798      	blx	r3
 800b106:	e7f3      	b.n	800b0f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800b108:	6823      	ldr	r3, [r4, #0]
 800b10a:	4620      	mov	r0, r4
 800b10c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b10e:	4798      	blx	r3
 800b110:	e7e6      	b.n	800b0e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800b112:	bf00      	nop
 800b114:	0801d75c 	.word	0x0801d75c
 800b118:	0801d81c 	.word	0x0801d81c
 800b11c:	0801d781 	.word	0x0801d781

0800b120 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b120:	b570      	push	{r4, r5, r6, lr}
 800b122:	4604      	mov	r4, r0
 800b124:	460e      	mov	r6, r1
 800b126:	6860      	ldr	r0, [r4, #4]
 800b128:	6803      	ldr	r3, [r0, #0]
 800b12a:	685b      	ldr	r3, [r3, #4]
 800b12c:	4798      	blx	r3
 800b12e:	2800      	cmp	r0, #0
 800b130:	d1f9      	bne.n	800b126 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b132:	4d0b      	ldr	r5, [pc, #44]	; (800b160 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800b134:	6828      	ldr	r0, [r5, #0]
 800b136:	6803      	ldr	r3, [r0, #0]
 800b138:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b13a:	4798      	blx	r3
 800b13c:	f7f6 f832 	bl	80011a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b140:	6860      	ldr	r0, [r4, #4]
 800b142:	6803      	ldr	r3, [r0, #0]
 800b144:	4631      	mov	r1, r6
 800b146:	689b      	ldr	r3, [r3, #8]
 800b148:	4798      	blx	r3
 800b14a:	6823      	ldr	r3, [r4, #0]
 800b14c:	4620      	mov	r0, r4
 800b14e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b150:	4798      	blx	r3
 800b152:	6828      	ldr	r0, [r5, #0]
 800b154:	6803      	ldr	r3, [r0, #0]
 800b156:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b15a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800b15c:	4718      	bx	r3
 800b15e:	bf00      	nop
 800b160:	200123bc 	.word	0x200123bc

0800b164 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b164:	b508      	push	{r3, lr}
 800b166:	f7f5 ffef 	bl	8001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b16a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b16e:	f7f6 b803 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b172 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b172:	b510      	push	{r4, lr}
 800b174:	2114      	movs	r1, #20
 800b176:	4604      	mov	r4, r0
 800b178:	f00f fb0a 	bl	801a790 <_ZdlPvj>
 800b17c:	4620      	mov	r0, r4
 800b17e:	bd10      	pop	{r4, pc}

0800b180 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b180:	b510      	push	{r4, lr}
 800b182:	4604      	mov	r4, r0
 800b184:	6840      	ldr	r0, [r0, #4]
 800b186:	6803      	ldr	r3, [r0, #0]
 800b188:	681b      	ldr	r3, [r3, #0]
 800b18a:	4798      	blx	r3
 800b18c:	b948      	cbnz	r0, 800b1a2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b18e:	7a63      	ldrb	r3, [r4, #9]
 800b190:	b13b      	cbz	r3, 800b1a2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b192:	7a23      	ldrb	r3, [r4, #8]
 800b194:	b92b      	cbnz	r3, 800b1a2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b196:	6823      	ldr	r3, [r4, #0]
 800b198:	4620      	mov	r0, r4
 800b19a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b19c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b1a0:	4718      	bx	r3
 800b1a2:	bd10      	pop	{r4, pc}

0800b1a4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b1a4:	b510      	push	{r4, lr}
 800b1a6:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800b1aa:	1b12      	subs	r2, r2, r4
 800b1ac:	2a00      	cmp	r2, #0
 800b1ae:	bfdc      	itt	le
 800b1b0:	6883      	ldrle	r3, [r0, #8]
 800b1b2:	18d2      	addle	r2, r2, r3
 800b1b4:	2a01      	cmp	r2, #1
 800b1b6:	dd18      	ble.n	800b1ea <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800b1b8:	6843      	ldr	r3, [r0, #4]
 800b1ba:	f101 021c 	add.w	r2, r1, #28
 800b1be:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800b1c2:	f851 4b04 	ldr.w	r4, [r1], #4
 800b1c6:	f843 4b04 	str.w	r4, [r3], #4
 800b1ca:	4291      	cmp	r1, r2
 800b1cc:	d1f9      	bne.n	800b1c2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800b1ce:	880a      	ldrh	r2, [r1, #0]
 800b1d0:	801a      	strh	r2, [r3, #0]
 800b1d2:	788a      	ldrb	r2, [r1, #2]
 800b1d4:	709a      	strb	r2, [r3, #2]
 800b1d6:	68c3      	ldr	r3, [r0, #12]
 800b1d8:	6882      	ldr	r2, [r0, #8]
 800b1da:	f3bf 8f5b 	dmb	ish
 800b1de:	3301      	adds	r3, #1
 800b1e0:	429a      	cmp	r2, r3
 800b1e2:	bfd8      	it	le
 800b1e4:	1a9b      	suble	r3, r3, r2
 800b1e6:	60c3      	str	r3, [r0, #12]
 800b1e8:	bd10      	pop	{r4, pc}
 800b1ea:	4b03      	ldr	r3, [pc, #12]	; (800b1f8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800b1ec:	4a03      	ldr	r2, [pc, #12]	; (800b1fc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800b1ee:	4804      	ldr	r0, [pc, #16]	; (800b200 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800b1f0:	2139      	movs	r1, #57	; 0x39
 800b1f2:	f00f faf9 	bl	801a7e8 <__assert_func>
 800b1f6:	bf00      	nop
 800b1f8:	0801d7a7 	.word	0x0801d7a7
 800b1fc:	0801d84c 	.word	0x0801d84c
 800b200:	0801d781 	.word	0x0801d781

0800b204 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b204:	b510      	push	{r4, lr}
 800b206:	6803      	ldr	r3, [r0, #0]
 800b208:	681b      	ldr	r3, [r3, #0]
 800b20a:	4604      	mov	r4, r0
 800b20c:	4798      	blx	r3
 800b20e:	b128      	cbz	r0, 800b21c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800b210:	4b07      	ldr	r3, [pc, #28]	; (800b230 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800b212:	4a08      	ldr	r2, [pc, #32]	; (800b234 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800b214:	4808      	ldr	r0, [pc, #32]	; (800b238 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800b216:	213f      	movs	r1, #63	; 0x3f
 800b218:	f00f fae6 	bl	801a7e8 <__assert_func>
 800b21c:	6923      	ldr	r3, [r4, #16]
 800b21e:	68a2      	ldr	r2, [r4, #8]
 800b220:	f3bf 8f5b 	dmb	ish
 800b224:	3301      	adds	r3, #1
 800b226:	429a      	cmp	r2, r3
 800b228:	bfd8      	it	le
 800b22a:	1a9b      	suble	r3, r3, r2
 800b22c:	6123      	str	r3, [r4, #16]
 800b22e:	bd10      	pop	{r4, pc}
 800b230:	0801d7ca 	.word	0x0801d7ca
 800b234:	0801d89a 	.word	0x0801d89a
 800b238:	0801d781 	.word	0x0801d781

0800b23c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b23c:	b570      	push	{r4, r5, r6, lr}
 800b23e:	4604      	mov	r4, r0
 800b240:	6840      	ldr	r0, [r0, #4]
 800b242:	6803      	ldr	r3, [r0, #0]
 800b244:	681b      	ldr	r3, [r3, #0]
 800b246:	4798      	blx	r3
 800b248:	4605      	mov	r5, r0
 800b24a:	b930      	cbnz	r0, 800b25a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b24c:	7a23      	ldrb	r3, [r4, #8]
 800b24e:	b123      	cbz	r3, 800b25a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b250:	6860      	ldr	r0, [r4, #4]
 800b252:	6803      	ldr	r3, [r0, #0]
 800b254:	695b      	ldr	r3, [r3, #20]
 800b256:	4798      	blx	r3
 800b258:	7225      	strb	r5, [r4, #8]
 800b25a:	6860      	ldr	r0, [r4, #4]
 800b25c:	6803      	ldr	r3, [r0, #0]
 800b25e:	681b      	ldr	r3, [r3, #0]
 800b260:	4798      	blx	r3
 800b262:	b928      	cbnz	r0, 800b270 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b264:	6823      	ldr	r3, [r4, #0]
 800b266:	4620      	mov	r0, r4
 800b268:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b26a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b26e:	4718      	bx	r3
 800b270:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b274:	f7f5 bfae 	b.w	80011d4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b278 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b278:	b510      	push	{r4, lr}
 800b27a:	4c04      	ldr	r4, [pc, #16]	; (800b28c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b27c:	6082      	str	r2, [r0, #8]
 800b27e:	2200      	movs	r2, #0
 800b280:	e9c0 4100 	strd	r4, r1, [r0]
 800b284:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b288:	bd10      	pop	{r4, pc}
 800b28a:	bf00      	nop
 800b28c:	0801d800 	.word	0x0801d800

0800b290 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b290:	6840      	ldr	r0, [r0, #4]
 800b292:	6803      	ldr	r3, [r0, #0]
 800b294:	681b      	ldr	r3, [r3, #0]
 800b296:	4718      	bx	r3

0800b298 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800b298:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800b29c:	4770      	bx	lr

0800b29e <_ZN8touchgfx12ToggleButtonD1Ev>:
 800b29e:	4770      	bx	lr

0800b2a0 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800b2a0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b2a4:	b133      	cbz	r3, 800b2b4 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800b2a6:	790b      	ldrb	r3, [r1, #4]
 800b2a8:	2b01      	cmp	r3, #1
 800b2aa:	bf01      	itttt	eq
 800b2ac:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800b2ae:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800b2b0:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800b2b2:	8603      	strheq	r3, [r0, #48]	; 0x30
 800b2b4:	f00f ba3e 	b.w	801a734 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800b2b8 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800b2b8:	8813      	ldrh	r3, [r2, #0]
 800b2ba:	8683      	strh	r3, [r0, #52]	; 0x34
 800b2bc:	f000 bada 	b.w	800b874 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800b2c0 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800b2c0:	b510      	push	{r4, lr}
 800b2c2:	2138      	movs	r1, #56	; 0x38
 800b2c4:	4604      	mov	r4, r0
 800b2c6:	f00f fa63 	bl	801a790 <_ZdlPvj>
 800b2ca:	4620      	mov	r0, r4
 800b2cc:	bd10      	pop	{r4, pc}

0800b2ce <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800b2ce:	6803      	ldr	r3, [r0, #0]
 800b2d0:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800b2d4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b2d6:	4718      	bx	r3

0800b2d8 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800b2d8:	4770      	bx	lr

0800b2da <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800b2da:	b510      	push	{r4, lr}
 800b2dc:	212c      	movs	r1, #44	; 0x2c
 800b2de:	4604      	mov	r4, r0
 800b2e0:	f00f fa56 	bl	801a790 <_ZdlPvj>
 800b2e4:	4620      	mov	r0, r4
 800b2e6:	bd10      	pop	{r4, pc}

0800b2e8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800b2e8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b2ec:	2bff      	cmp	r3, #255	; 0xff
 800b2ee:	b510      	push	{r4, lr}
 800b2f0:	d104      	bne.n	800b2fc <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800b2f2:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800b2f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b2f8:	429a      	cmp	r2, r3
 800b2fa:	d105      	bne.n	800b308 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800b2fc:	2300      	movs	r3, #0
 800b2fe:	8003      	strh	r3, [r0, #0]
 800b300:	8043      	strh	r3, [r0, #2]
 800b302:	8083      	strh	r3, [r0, #4]
 800b304:	80c3      	strh	r3, [r0, #6]
 800b306:	bd10      	pop	{r4, pc}
 800b308:	2300      	movs	r3, #0
 800b30a:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800b30e:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800b312:	8003      	strh	r3, [r0, #0]
 800b314:	8043      	strh	r3, [r0, #2]
 800b316:	8084      	strh	r4, [r0, #4]
 800b318:	80c2      	strh	r2, [r0, #6]
 800b31a:	e7f4      	b.n	800b306 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800b31c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800b31c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b320:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800b324:	b087      	sub	sp, #28
 800b326:	4604      	mov	r4, r0
 800b328:	4689      	mov	r9, r1
 800b32a:	b363      	cbz	r3, 800b386 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800b32c:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800b32e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b332:	429a      	cmp	r2, r3
 800b334:	d027      	beq.n	800b386 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800b336:	ad06      	add	r5, sp, #24
 800b338:	2700      	movs	r7, #0
 800b33a:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800b33e:	4628      	mov	r0, r5
 800b340:	f003 fd84 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b344:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b348:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b34c:	6823      	ldr	r3, [r4, #0]
 800b34e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800b352:	a904      	add	r1, sp, #16
 800b354:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b356:	9704      	str	r7, [sp, #16]
 800b358:	4620      	mov	r0, r4
 800b35a:	4798      	blx	r3
 800b35c:	f7f5 ffd2 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800b360:	6803      	ldr	r3, [r0, #0]
 800b362:	4606      	mov	r6, r0
 800b364:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800b368:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b36a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b36e:	4628      	mov	r0, r5
 800b370:	f003 fe74 	bl	800f05c <_ZNK8touchgfx6Bitmap7getDataEv>
 800b374:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b378:	9300      	str	r3, [sp, #0]
 800b37a:	4601      	mov	r1, r0
 800b37c:	9701      	str	r7, [sp, #4]
 800b37e:	464b      	mov	r3, r9
 800b380:	aa04      	add	r2, sp, #16
 800b382:	4630      	mov	r0, r6
 800b384:	47c0      	blx	r8
 800b386:	b007      	add	sp, #28
 800b388:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b38c <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800b38c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b38e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800b392:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b396:	6803      	ldr	r3, [r0, #0]
 800b398:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b39c:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b3a0:	460d      	mov	r5, r1
 800b3a2:	2100      	movs	r1, #0
 800b3a4:	4604      	mov	r4, r0
 800b3a6:	6a1b      	ldr	r3, [r3, #32]
 800b3a8:	9100      	str	r1, [sp, #0]
 800b3aa:	4669      	mov	r1, sp
 800b3ac:	4798      	blx	r3
 800b3ae:	4621      	mov	r1, r4
 800b3b0:	a802      	add	r0, sp, #8
 800b3b2:	f002 fab7 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b3b6:	f7f5 ffa5 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800b3ba:	6803      	ldr	r3, [r0, #0]
 800b3bc:	aa02      	add	r2, sp, #8
 800b3be:	695e      	ldr	r6, [r3, #20]
 800b3c0:	4669      	mov	r1, sp
 800b3c2:	462b      	mov	r3, r5
 800b3c4:	47b0      	blx	r6
 800b3c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b3ca:	2800      	cmp	r0, #0
 800b3cc:	bf08      	it	eq
 800b3ce:	461d      	moveq	r5, r3
 800b3d0:	84e5      	strh	r5, [r4, #38]	; 0x26
 800b3d2:	b004      	add	sp, #16
 800b3d4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b3d8 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800b3d8:	2200      	movs	r2, #0
 800b3da:	8082      	strh	r2, [r0, #4]
 800b3dc:	80c2      	strh	r2, [r0, #6]
 800b3de:	8102      	strh	r2, [r0, #8]
 800b3e0:	8142      	strh	r2, [r0, #10]
 800b3e2:	8182      	strh	r2, [r0, #12]
 800b3e4:	81c2      	strh	r2, [r0, #14]
 800b3e6:	8202      	strh	r2, [r0, #16]
 800b3e8:	8242      	strh	r2, [r0, #18]
 800b3ea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b3ee:	61c2      	str	r2, [r0, #28]
 800b3f0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b3f4:	2201      	movs	r2, #1
 800b3f6:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800b3fa:	4a04      	ldr	r2, [pc, #16]	; (800b40c <_ZN8touchgfx14SnapshotWidgetC1Ev+0x34>)
 800b3fc:	6002      	str	r2, [r0, #0]
 800b3fe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b402:	84c2      	strh	r2, [r0, #38]	; 0x26
 800b404:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800b408:	4770      	bx	lr
 800b40a:	bf00      	nop
 800b40c:	0801d944 	.word	0x0801d944

0800b410 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800b410:	2200      	movs	r2, #0
 800b412:	8002      	strh	r2, [r0, #0]
 800b414:	8042      	strh	r2, [r0, #2]
 800b416:	8082      	strh	r2, [r0, #4]
 800b418:	80c2      	strh	r2, [r0, #6]
 800b41a:	4770      	bx	lr

0800b41c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800b41c:	b570      	push	{r4, r5, r6, lr}
 800b41e:	6803      	ldr	r3, [r0, #0]
 800b420:	4604      	mov	r4, r0
 800b422:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b424:	4615      	mov	r5, r2
 800b426:	4798      	blx	r3
 800b428:	6823      	ldr	r3, [r4, #0]
 800b42a:	4629      	mov	r1, r5
 800b42c:	4620      	mov	r0, r4
 800b42e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800b430:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b434:	4718      	bx	r3

0800b436 <_ZN8touchgfx8TextAreaD1Ev>:
 800b436:	4770      	bx	lr

0800b438 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800b438:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b43a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800b43c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b440:	4299      	cmp	r1, r3
 800b442:	d029      	beq.n	800b498 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800b444:	4b15      	ldr	r3, [pc, #84]	; (800b49c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800b446:	681b      	ldr	r3, [r3, #0]
 800b448:	b92b      	cbnz	r3, 800b456 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800b44a:	4b15      	ldr	r3, [pc, #84]	; (800b4a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800b44c:	4a15      	ldr	r2, [pc, #84]	; (800b4a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800b44e:	21b1      	movs	r1, #177	; 0xb1
 800b450:	4815      	ldr	r0, [pc, #84]	; (800b4a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800b452:	f00f f9c9 	bl	801a7e8 <__assert_func>
 800b456:	4a15      	ldr	r2, [pc, #84]	; (800b4ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800b458:	8812      	ldrh	r2, [r2, #0]
 800b45a:	428a      	cmp	r2, r1
 800b45c:	d803      	bhi.n	800b466 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800b45e:	4b14      	ldr	r3, [pc, #80]	; (800b4b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800b460:	4a10      	ldr	r2, [pc, #64]	; (800b4a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800b462:	21b2      	movs	r1, #178	; 0xb2
 800b464:	e7f4      	b.n	800b450 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800b466:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800b46a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800b46e:	4b11      	ldr	r3, [pc, #68]	; (800b4b4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800b470:	7854      	ldrb	r4, [r2, #1]
 800b472:	681b      	ldr	r3, [r3, #0]
 800b474:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800b478:	682b      	ldr	r3, [r5, #0]
 800b47a:	69de      	ldr	r6, [r3, #28]
 800b47c:	4b0e      	ldr	r3, [pc, #56]	; (800b4b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800b47e:	6818      	ldr	r0, [r3, #0]
 800b480:	f7f8 fa18 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800b484:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800b488:	2300      	movs	r3, #0
 800b48a:	4602      	mov	r2, r0
 800b48c:	9300      	str	r3, [sp, #0]
 800b48e:	4621      	mov	r1, r4
 800b490:	4628      	mov	r0, r5
 800b492:	47b0      	blx	r6
 800b494:	b002      	add	sp, #8
 800b496:	bd70      	pop	{r4, r5, r6, pc}
 800b498:	2000      	movs	r0, #0
 800b49a:	e7fb      	b.n	800b494 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800b49c:	2001242c 	.word	0x2001242c
 800b4a0:	0801d9ac 	.word	0x0801d9ac
 800b4a4:	0801dae8 	.word	0x0801dae8
 800b4a8:	0801d9ee 	.word	0x0801d9ee
 800b4ac:	20012430 	.word	0x20012430
 800b4b0:	0801da17 	.word	0x0801da17
 800b4b4:	20012434 	.word	0x20012434
 800b4b8:	20012438 	.word	0x20012438

0800b4bc <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800b4bc:	b570      	push	{r4, r5, r6, lr}
 800b4be:	6803      	ldr	r3, [r0, #0]
 800b4c0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800b4c2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800b4c4:	4b11      	ldr	r3, [pc, #68]	; (800b50c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800b4c6:	681b      	ldr	r3, [r3, #0]
 800b4c8:	4604      	mov	r4, r0
 800b4ca:	b28d      	uxth	r5, r1
 800b4cc:	b92b      	cbnz	r3, 800b4da <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800b4ce:	4b10      	ldr	r3, [pc, #64]	; (800b510 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800b4d0:	4a10      	ldr	r2, [pc, #64]	; (800b514 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800b4d2:	21b1      	movs	r1, #177	; 0xb1
 800b4d4:	4810      	ldr	r0, [pc, #64]	; (800b518 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800b4d6:	f00f f987 	bl	801a7e8 <__assert_func>
 800b4da:	4910      	ldr	r1, [pc, #64]	; (800b51c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800b4dc:	8809      	ldrh	r1, [r1, #0]
 800b4de:	4291      	cmp	r1, r2
 800b4e0:	d803      	bhi.n	800b4ea <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800b4e2:	4b0f      	ldr	r3, [pc, #60]	; (800b520 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800b4e4:	4a0b      	ldr	r2, [pc, #44]	; (800b514 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800b4e6:	21b2      	movs	r1, #178	; 0xb2
 800b4e8:	e7f4      	b.n	800b4d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800b4ea:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800b4ee:	4b0d      	ldr	r3, [pc, #52]	; (800b524 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800b4f0:	681b      	ldr	r3, [r3, #0]
 800b4f2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800b4f6:	6803      	ldr	r3, [r0, #0]
 800b4f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4fa:	4798      	blx	r3
 800b4fc:	1a29      	subs	r1, r5, r0
 800b4fe:	4633      	mov	r3, r6
 800b500:	4620      	mov	r0, r4
 800b502:	b209      	sxth	r1, r1
 800b504:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b508:	4718      	bx	r3
 800b50a:	bf00      	nop
 800b50c:	2001242c 	.word	0x2001242c
 800b510:	0801d9ac 	.word	0x0801d9ac
 800b514:	0801dae8 	.word	0x0801dae8
 800b518:	0801d9ee 	.word	0x0801d9ee
 800b51c:	20012430 	.word	0x20012430
 800b520:	0801da17 	.word	0x0801da17
 800b524:	20012434 	.word	0x20012434

0800b528 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800b528:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b52c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800b52e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b532:	4293      	cmp	r3, r2
 800b534:	b08c      	sub	sp, #48	; 0x30
 800b536:	4604      	mov	r4, r0
 800b538:	4688      	mov	r8, r1
 800b53a:	d05f      	beq.n	800b5fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800b53c:	4e31      	ldr	r6, [pc, #196]	; (800b604 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800b53e:	6832      	ldr	r2, [r6, #0]
 800b540:	b92a      	cbnz	r2, 800b54e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800b542:	4b31      	ldr	r3, [pc, #196]	; (800b608 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800b544:	4a31      	ldr	r2, [pc, #196]	; (800b60c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800b546:	21b1      	movs	r1, #177	; 0xb1
 800b548:	4831      	ldr	r0, [pc, #196]	; (800b610 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800b54a:	f00f f94d 	bl	801a7e8 <__assert_func>
 800b54e:	4d31      	ldr	r5, [pc, #196]	; (800b614 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800b550:	8829      	ldrh	r1, [r5, #0]
 800b552:	4299      	cmp	r1, r3
 800b554:	d803      	bhi.n	800b55e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800b556:	4b30      	ldr	r3, [pc, #192]	; (800b618 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800b558:	4a2c      	ldr	r2, [pc, #176]	; (800b60c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800b55a:	21b2      	movs	r1, #178	; 0xb2
 800b55c:	e7f4      	b.n	800b548 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800b55e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800b562:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b566:	4b2d      	ldr	r3, [pc, #180]	; (800b61c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800b568:	681b      	ldr	r3, [r3, #0]
 800b56a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800b56e:	2a00      	cmp	r2, #0
 800b570:	d044      	beq.n	800b5fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800b572:	784b      	ldrb	r3, [r1, #1]
 800b574:	9207      	str	r2, [sp, #28]
 800b576:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800b57a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b57e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800b582:	4b27      	ldr	r3, [pc, #156]	; (800b620 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800b584:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800b588:	681b      	ldr	r3, [r3, #0]
 800b58a:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800b58e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b592:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800b596:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800b59a:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800b59e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800b5a0:	9009      	str	r0, [sp, #36]	; 0x24
 800b5a2:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800b5a6:	f88d 9020 	strb.w	r9, [sp, #32]
 800b5aa:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800b5ae:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800b5b2:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800b5b6:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800b5ba:	b10a      	cbz	r2, 800b5c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800b5bc:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800b5be:	b907      	cbnz	r7, 800b5c2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800b5c0:	689f      	ldr	r7, [r3, #8]
 800b5c2:	f10d 0914 	add.w	r9, sp, #20
 800b5c6:	4621      	mov	r1, r4
 800b5c8:	4648      	mov	r0, r9
 800b5ca:	f002 f9ab 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b5ce:	6833      	ldr	r3, [r6, #0]
 800b5d0:	2b00      	cmp	r3, #0
 800b5d2:	d0b6      	beq.n	800b542 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800b5d4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800b5d6:	882b      	ldrh	r3, [r5, #0]
 800b5d8:	428b      	cmp	r3, r1
 800b5da:	d9bc      	bls.n	800b556 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800b5dc:	4b11      	ldr	r3, [pc, #68]	; (800b624 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800b5de:	6818      	ldr	r0, [r3, #0]
 800b5e0:	f7f8 f968 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800b5e4:	2300      	movs	r3, #0
 800b5e6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800b5ea:	ab07      	add	r3, sp, #28
 800b5ec:	9001      	str	r0, [sp, #4]
 800b5ee:	9300      	str	r3, [sp, #0]
 800b5f0:	e899 0006 	ldmia.w	r9, {r1, r2}
 800b5f4:	4643      	mov	r3, r8
 800b5f6:	4638      	mov	r0, r7
 800b5f8:	f7f8 f910 	bl	800381c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b5fc:	b00c      	add	sp, #48	; 0x30
 800b5fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b602:	bf00      	nop
 800b604:	2001242c 	.word	0x2001242c
 800b608:	0801d9ac 	.word	0x0801d9ac
 800b60c:	0801dae8 	.word	0x0801dae8
 800b610:	0801d9ee 	.word	0x0801d9ee
 800b614:	20012430 	.word	0x20012430
 800b618:	0801da17 	.word	0x0801da17
 800b61c:	20012434 	.word	0x20012434
 800b620:	200123bc 	.word	0x200123bc
 800b624:	20012438 	.word	0x20012438

0800b628 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800b628:	b40e      	push	{r1, r2, r3}
 800b62a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b62e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800b630:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b634:	4293      	cmp	r3, r2
 800b636:	b09b      	sub	sp, #108	; 0x6c
 800b638:	4604      	mov	r4, r0
 800b63a:	d061      	beq.n	800b700 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800b63c:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800b714 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800b640:	aa24      	add	r2, sp, #144	; 0x90
 800b642:	9203      	str	r2, [sp, #12]
 800b644:	f8da 2000 	ldr.w	r2, [sl]
 800b648:	b92a      	cbnz	r2, 800b656 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800b64a:	4b2e      	ldr	r3, [pc, #184]	; (800b704 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800b64c:	4a2e      	ldr	r2, [pc, #184]	; (800b708 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800b64e:	21b1      	movs	r1, #177	; 0xb1
 800b650:	482e      	ldr	r0, [pc, #184]	; (800b70c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800b652:	f00f f8c9 	bl	801a7e8 <__assert_func>
 800b656:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800b718 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800b65a:	f8b8 1000 	ldrh.w	r1, [r8]
 800b65e:	4299      	cmp	r1, r3
 800b660:	d803      	bhi.n	800b66a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800b662:	4b2b      	ldr	r3, [pc, #172]	; (800b710 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800b664:	4a28      	ldr	r2, [pc, #160]	; (800b708 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800b666:	21b2      	movs	r1, #178	; 0xb2
 800b668:	e7f2      	b.n	800b650 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800b66a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800b71c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800b66e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b672:	f8d9 3000 	ldr.w	r3, [r9]
 800b676:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800b67a:	683b      	ldr	r3, [r7, #0]
 800b67c:	4638      	mov	r0, r7
 800b67e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b680:	4798      	blx	r3
 800b682:	4606      	mov	r6, r0
 800b684:	b205      	sxth	r5, r0
 800b686:	a804      	add	r0, sp, #16
 800b688:	f002 fd95 	bl	800e1b6 <_ZN8touchgfx12TextProviderC1Ev>
 800b68c:	683b      	ldr	r3, [r7, #0]
 800b68e:	4638      	mov	r0, r7
 800b690:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b692:	4798      	blx	r3
 800b694:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800b696:	9a03      	ldr	r2, [sp, #12]
 800b698:	4603      	mov	r3, r0
 800b69a:	a804      	add	r0, sp, #16
 800b69c:	f002 fdd0 	bl	800e240 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b6a0:	f8da 3000 	ldr.w	r3, [sl]
 800b6a4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800b6a8:	2b00      	cmp	r3, #0
 800b6aa:	d0ce      	beq.n	800b64a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800b6ac:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800b6ae:	f8b8 0000 	ldrh.w	r0, [r8]
 800b6b2:	4290      	cmp	r0, r2
 800b6b4:	d9d5      	bls.n	800b662 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800b6b6:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800b6ba:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800b6be:	787a      	ldrb	r2, [r7, #1]
 800b6c0:	f8d9 3000 	ldr.w	r3, [r9]
 800b6c4:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800b6c8:	9700      	str	r7, [sp, #0]
 800b6ca:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800b6ce:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800b6d2:	a804      	add	r0, sp, #16
 800b6d4:	f000 ff98 	bl	800c608 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800b6d8:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800b6dc:	18a9      	adds	r1, r5, r2
 800b6de:	2900      	cmp	r1, #0
 800b6e0:	b203      	sxth	r3, r0
 800b6e2:	dd0b      	ble.n	800b6fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800b6e4:	3b01      	subs	r3, #1
 800b6e6:	fb13 f302 	smulbb	r3, r3, r2
 800b6ea:	fb16 3300 	smlabb	r3, r6, r0, r3
 800b6ee:	b21d      	sxth	r5, r3
 800b6f0:	4628      	mov	r0, r5
 800b6f2:	b01b      	add	sp, #108	; 0x6c
 800b6f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b6f8:	b003      	add	sp, #12
 800b6fa:	4770      	bx	lr
 800b6fc:	2b00      	cmp	r3, #0
 800b6fe:	dcf7      	bgt.n	800b6f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800b700:	2500      	movs	r5, #0
 800b702:	e7f5      	b.n	800b6f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800b704:	0801d9ac 	.word	0x0801d9ac
 800b708:	0801dae8 	.word	0x0801dae8
 800b70c:	0801d9ee 	.word	0x0801d9ee
 800b710:	0801da17 	.word	0x0801da17
 800b714:	2001242c 	.word	0x2001242c
 800b718:	20012430 	.word	0x20012430
 800b71c:	20012434 	.word	0x20012434

0800b720 <_ZN8touchgfx8TextAreaD0Ev>:
 800b720:	b510      	push	{r4, lr}
 800b722:	213c      	movs	r1, #60	; 0x3c
 800b724:	4604      	mov	r4, r0
 800b726:	f00f f833 	bl	801a790 <_ZdlPvj>
 800b72a:	4620      	mov	r0, r4
 800b72c:	bd10      	pop	{r4, pc}
	...

0800b730 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800b730:	b570      	push	{r4, r5, r6, lr}
 800b732:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800b734:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b738:	4299      	cmp	r1, r3
 800b73a:	4604      	mov	r4, r0
 800b73c:	d01e      	beq.n	800b77c <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800b73e:	6803      	ldr	r3, [r0, #0]
 800b740:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800b742:	4b0f      	ldr	r3, [pc, #60]	; (800b780 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800b744:	681b      	ldr	r3, [r3, #0]
 800b746:	b92b      	cbnz	r3, 800b754 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800b748:	4b0e      	ldr	r3, [pc, #56]	; (800b784 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800b74a:	4a0f      	ldr	r2, [pc, #60]	; (800b788 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800b74c:	21b1      	movs	r1, #177	; 0xb1
 800b74e:	480f      	ldr	r0, [pc, #60]	; (800b78c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800b750:	f00f f84a 	bl	801a7e8 <__assert_func>
 800b754:	4b0e      	ldr	r3, [pc, #56]	; (800b790 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800b756:	881b      	ldrh	r3, [r3, #0]
 800b758:	428b      	cmp	r3, r1
 800b75a:	d803      	bhi.n	800b764 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800b75c:	4b0d      	ldr	r3, [pc, #52]	; (800b794 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800b75e:	4a0a      	ldr	r2, [pc, #40]	; (800b788 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800b760:	21b2      	movs	r1, #178	; 0xb2
 800b762:	e7f4      	b.n	800b74e <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800b764:	4b0c      	ldr	r3, [pc, #48]	; (800b798 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800b766:	6818      	ldr	r0, [r3, #0]
 800b768:	f7f8 f8a4 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800b76c:	2300      	movs	r3, #0
 800b76e:	4601      	mov	r1, r0
 800b770:	46ac      	mov	ip, r5
 800b772:	4620      	mov	r0, r4
 800b774:	461a      	mov	r2, r3
 800b776:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b77a:	4760      	bx	ip
 800b77c:	2000      	movs	r0, #0
 800b77e:	bd70      	pop	{r4, r5, r6, pc}
 800b780:	2001242c 	.word	0x2001242c
 800b784:	0801d9ac 	.word	0x0801d9ac
 800b788:	0801dae8 	.word	0x0801dae8
 800b78c:	0801d9ee 	.word	0x0801d9ee
 800b790:	20012430 	.word	0x20012430
 800b794:	0801da17 	.word	0x0801da17
 800b798:	20012438 	.word	0x20012438

0800b79c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800b79c:	b570      	push	{r4, r5, r6, lr}
 800b79e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800b7a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b7a4:	429a      	cmp	r2, r3
 800b7a6:	4604      	mov	r4, r0
 800b7a8:	d021      	beq.n	800b7ee <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800b7aa:	6803      	ldr	r3, [r0, #0]
 800b7ac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b7ae:	4798      	blx	r3
 800b7b0:	6823      	ldr	r3, [r4, #0]
 800b7b2:	4605      	mov	r5, r0
 800b7b4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800b7b6:	4620      	mov	r0, r4
 800b7b8:	4798      	blx	r3
 800b7ba:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800b7be:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800b7c2:	6823      	ldr	r3, [r4, #0]
 800b7c4:	4606      	mov	r6, r0
 800b7c6:	b22d      	sxth	r5, r5
 800b7c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b7ca:	d109      	bne.n	800b7e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800b7cc:	4629      	mov	r1, r5
 800b7ce:	4620      	mov	r0, r4
 800b7d0:	4798      	blx	r3
 800b7d2:	6823      	ldr	r3, [r4, #0]
 800b7d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b7d6:	4631      	mov	r1, r6
 800b7d8:	4620      	mov	r0, r4
 800b7da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7de:	4718      	bx	r3
 800b7e0:	4601      	mov	r1, r0
 800b7e2:	4620      	mov	r0, r4
 800b7e4:	4798      	blx	r3
 800b7e6:	6823      	ldr	r3, [r4, #0]
 800b7e8:	4629      	mov	r1, r5
 800b7ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b7ec:	e7f4      	b.n	800b7d8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800b7ee:	bd70      	pop	{r4, r5, r6, pc}

0800b7f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800b7f0:	888a      	ldrh	r2, [r1, #4]
 800b7f2:	8582      	strh	r2, [r0, #44]	; 0x2c
 800b7f4:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b7f8:	b922      	cbnz	r2, 800b804 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800b7fa:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800b7fe:	b90b      	cbnz	r3, 800b804 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800b800:	f7ff bfcc 	b.w	800b79c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800b804:	4770      	bx	lr

0800b806 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800b806:	2300      	movs	r3, #0
 800b808:	8003      	strh	r3, [r0, #0]
 800b80a:	8043      	strh	r3, [r0, #2]
 800b80c:	8083      	strh	r3, [r0, #4]
 800b80e:	80c3      	strh	r3, [r0, #6]
 800b810:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800b814:	b91b      	cbnz	r3, 800b81e <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800b816:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800b81a:	2bff      	cmp	r3, #255	; 0xff
 800b81c:	d103      	bne.n	800b826 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800b81e:	890b      	ldrh	r3, [r1, #8]
 800b820:	8083      	strh	r3, [r0, #4]
 800b822:	894b      	ldrh	r3, [r1, #10]
 800b824:	80c3      	strh	r3, [r0, #6]
 800b826:	4770      	bx	lr

0800b828 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800b828:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b82a:	4604      	mov	r4, r0
 800b82c:	6808      	ldr	r0, [r1, #0]
 800b82e:	6849      	ldr	r1, [r1, #4]
 800b830:	466b      	mov	r3, sp
 800b832:	c303      	stmia	r3!, {r0, r1}
 800b834:	6823      	ldr	r3, [r4, #0]
 800b836:	4669      	mov	r1, sp
 800b838:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b83a:	4620      	mov	r0, r4
 800b83c:	4798      	blx	r3
 800b83e:	4b08      	ldr	r3, [pc, #32]	; (800b860 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800b840:	681b      	ldr	r3, [r3, #0]
 800b842:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b846:	b10a      	cbz	r2, 800b84c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800b848:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b84a:	b900      	cbnz	r0, 800b84e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800b84c:	6898      	ldr	r0, [r3, #8]
 800b84e:	6803      	ldr	r3, [r0, #0]
 800b850:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b852:	699d      	ldr	r5, [r3, #24]
 800b854:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800b858:	4669      	mov	r1, sp
 800b85a:	47a8      	blx	r5
 800b85c:	b003      	add	sp, #12
 800b85e:	bd30      	pop	{r4, r5, pc}
 800b860:	200123bc 	.word	0x200123bc

0800b864 <_ZN8touchgfx3BoxD1Ev>:
 800b864:	4770      	bx	lr

0800b866 <_ZN8touchgfx3BoxD0Ev>:
 800b866:	b510      	push	{r4, lr}
 800b868:	2130      	movs	r1, #48	; 0x30
 800b86a:	4604      	mov	r4, r0
 800b86c:	f00e ff90 	bl	801a790 <_ZdlPvj>
 800b870:	4620      	mov	r0, r4
 800b872:	bd10      	pop	{r4, pc}

0800b874 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800b874:	b538      	push	{r3, r4, r5, lr}
 800b876:	880b      	ldrh	r3, [r1, #0]
 800b878:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800b87a:	4605      	mov	r5, r0
 800b87c:	8813      	ldrh	r3, [r2, #0]
 800b87e:	f825 3f30 	strh.w	r3, [r5, #48]!
 800b882:	4604      	mov	r4, r0
 800b884:	4628      	mov	r0, r5
 800b886:	f003 fae1 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b88a:	8120      	strh	r0, [r4, #8]
 800b88c:	4628      	mov	r0, r5
 800b88e:	f003 fb17 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b892:	8160      	strh	r0, [r4, #10]
 800b894:	bd38      	pop	{r3, r4, r5, pc}

0800b896 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800b896:	b510      	push	{r4, lr}
 800b898:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800b89c:	2bff      	cmp	r3, #255	; 0xff
 800b89e:	4604      	mov	r4, r0
 800b8a0:	d006      	beq.n	800b8b0 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800b8a2:	2300      	movs	r3, #0
 800b8a4:	8003      	strh	r3, [r0, #0]
 800b8a6:	8043      	strh	r3, [r0, #2]
 800b8a8:	8083      	strh	r3, [r0, #4]
 800b8aa:	80c3      	strh	r3, [r0, #6]
 800b8ac:	4620      	mov	r0, r4
 800b8ae:	bd10      	pop	{r4, pc}
 800b8b0:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800b8b4:	b11b      	cbz	r3, 800b8be <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800b8b6:	3130      	adds	r1, #48	; 0x30
 800b8b8:	f003 fb3c 	bl	800ef34 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b8bc:	e7f6      	b.n	800b8ac <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800b8be:	312e      	adds	r1, #46	; 0x2e
 800b8c0:	e7fa      	b.n	800b8b8 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800b8c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800b8c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b8c8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b8cc:	b08a      	sub	sp, #40	; 0x28
 800b8ce:	4604      	mov	r4, r0
 800b8d0:	4688      	mov	r8, r1
 800b8d2:	2b00      	cmp	r3, #0
 800b8d4:	d044      	beq.n	800b960 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800b8d6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800b8d8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b8dc:	a805      	add	r0, sp, #20
 800b8de:	f003 fab5 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b8e2:	4605      	mov	r5, r0
 800b8e4:	b206      	sxth	r6, r0
 800b8e6:	a805      	add	r0, sp, #20
 800b8e8:	f003 faea 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b8ec:	f9b8 2000 	ldrsh.w	r2, [r8]
 800b8f0:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800b8f4:	4417      	add	r7, r2
 800b8f6:	b2bf      	uxth	r7, r7
 800b8f8:	2300      	movs	r3, #0
 800b8fa:	fa0f fe87 	sxth.w	lr, r7
 800b8fe:	459e      	cmp	lr, r3
 800b900:	fa0f fc80 	sxth.w	ip, r0
 800b904:	9306      	str	r3, [sp, #24]
 800b906:	dd2d      	ble.n	800b964 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b908:	4296      	cmp	r6, r2
 800b90a:	dd2b      	ble.n	800b964 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b90c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800b910:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800b914:	4419      	add	r1, r3
 800b916:	b289      	uxth	r1, r1
 800b918:	fa0f f881 	sxth.w	r8, r1
 800b91c:	f1b8 0f00 	cmp.w	r8, #0
 800b920:	dd20      	ble.n	800b964 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b922:	459c      	cmp	ip, r3
 800b924:	dd1e      	ble.n	800b964 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b926:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b92a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b92e:	4576      	cmp	r6, lr
 800b930:	bfa8      	it	ge
 800b932:	463d      	movge	r5, r7
 800b934:	45c4      	cmp	ip, r8
 800b936:	bfa8      	it	ge
 800b938:	4608      	movge	r0, r1
 800b93a:	1aad      	subs	r5, r5, r2
 800b93c:	1ac0      	subs	r0, r0, r3
 800b93e:	f8ad 501c 	strh.w	r5, [sp, #28]
 800b942:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b946:	f8ad 2018 	strh.w	r2, [sp, #24]
 800b94a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b94e:	4b1f      	ldr	r3, [pc, #124]	; (800b9cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800b950:	681b      	ldr	r3, [r3, #0]
 800b952:	b953      	cbnz	r3, 800b96a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800b954:	4b1e      	ldr	r3, [pc, #120]	; (800b9d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800b956:	4a1f      	ldr	r2, [pc, #124]	; (800b9d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800b958:	481f      	ldr	r0, [pc, #124]	; (800b9d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800b95a:	2189      	movs	r1, #137	; 0x89
 800b95c:	f00e ff44 	bl	801a7e8 <__assert_func>
 800b960:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800b962:	e7b9      	b.n	800b8d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800b964:	2300      	movs	r3, #0
 800b966:	9307      	str	r3, [sp, #28]
 800b968:	e7f1      	b.n	800b94e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800b96a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b96e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b972:	429a      	cmp	r2, r3
 800b974:	d026      	beq.n	800b9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b976:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b97a:	2b00      	cmp	r3, #0
 800b97c:	dd22      	ble.n	800b9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b97e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b982:	2b00      	cmp	r3, #0
 800b984:	dd1e      	ble.n	800b9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b986:	2300      	movs	r3, #0
 800b988:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800b98c:	6823      	ldr	r3, [r4, #0]
 800b98e:	a908      	add	r1, sp, #32
 800b990:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b992:	4620      	mov	r0, r4
 800b994:	4798      	blx	r3
 800b996:	4b11      	ldr	r3, [pc, #68]	; (800b9dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800b998:	681b      	ldr	r3, [r3, #0]
 800b99a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b99e:	b10a      	cbz	r2, 800b9a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800b9a0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b9a2:	b900      	cbnz	r0, 800b9a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800b9a4:	6898      	ldr	r0, [r3, #8]
 800b9a6:	6801      	ldr	r1, [r0, #0]
 800b9a8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800b9ac:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800b9b0:	2501      	movs	r5, #1
 800b9b2:	9502      	str	r5, [sp, #8]
 800b9b4:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800b9b8:	9401      	str	r4, [sp, #4]
 800b9ba:	ac06      	add	r4, sp, #24
 800b9bc:	9400      	str	r4, [sp, #0]
 800b9be:	688c      	ldr	r4, [r1, #8]
 800b9c0:	a905      	add	r1, sp, #20
 800b9c2:	47a0      	blx	r4
 800b9c4:	b00a      	add	sp, #40	; 0x28
 800b9c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9ca:	bf00      	nop
 800b9cc:	20012464 	.word	0x20012464
 800b9d0:	0801db80 	.word	0x0801db80
 800b9d4:	0801dbe2 	.word	0x0801dbe2
 800b9d8:	0801dbbc 	.word	0x0801dbbc
 800b9dc:	200123bc 	.word	0x200123bc

0800b9e0 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800b9e0:	4770      	bx	lr
	...

0800b9e4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800b9e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b9e6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800b9e8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b9ec:	4299      	cmp	r1, r3
 800b9ee:	4606      	mov	r6, r0
 800b9f0:	d02a      	beq.n	800ba48 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800b9f2:	4b16      	ldr	r3, [pc, #88]	; (800ba4c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800b9f4:	681b      	ldr	r3, [r3, #0]
 800b9f6:	b92b      	cbnz	r3, 800ba04 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800b9f8:	4b15      	ldr	r3, [pc, #84]	; (800ba50 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800b9fa:	4a16      	ldr	r2, [pc, #88]	; (800ba54 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800b9fc:	21b1      	movs	r1, #177	; 0xb1
 800b9fe:	4816      	ldr	r0, [pc, #88]	; (800ba58 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800ba00:	f00e fef2 	bl	801a7e8 <__assert_func>
 800ba04:	4a15      	ldr	r2, [pc, #84]	; (800ba5c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800ba06:	8812      	ldrh	r2, [r2, #0]
 800ba08:	428a      	cmp	r2, r1
 800ba0a:	d803      	bhi.n	800ba14 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800ba0c:	4b14      	ldr	r3, [pc, #80]	; (800ba60 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800ba0e:	4a11      	ldr	r2, [pc, #68]	; (800ba54 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800ba10:	21b2      	movs	r1, #178	; 0xb2
 800ba12:	e7f4      	b.n	800b9fe <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800ba14:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ba18:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ba1c:	4b11      	ldr	r3, [pc, #68]	; (800ba64 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800ba1e:	7854      	ldrb	r4, [r2, #1]
 800ba20:	681b      	ldr	r3, [r3, #0]
 800ba22:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800ba26:	682b      	ldr	r3, [r5, #0]
 800ba28:	69df      	ldr	r7, [r3, #28]
 800ba2a:	4b0f      	ldr	r3, [pc, #60]	; (800ba68 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800ba2c:	6818      	ldr	r0, [r3, #0]
 800ba2e:	f7f7 ff41 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800ba32:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800ba36:	2300      	movs	r3, #0
 800ba38:	9300      	str	r3, [sp, #0]
 800ba3a:	4602      	mov	r2, r0
 800ba3c:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800ba3e:	4621      	mov	r1, r4
 800ba40:	4628      	mov	r0, r5
 800ba42:	47b8      	blx	r7
 800ba44:	b003      	add	sp, #12
 800ba46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba48:	2000      	movs	r0, #0
 800ba4a:	e7fb      	b.n	800ba44 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800ba4c:	2001242c 	.word	0x2001242c
 800ba50:	0801d9ac 	.word	0x0801d9ac
 800ba54:	0801dc94 	.word	0x0801dc94
 800ba58:	0801d9ee 	.word	0x0801d9ee
 800ba5c:	20012430 	.word	0x20012430
 800ba60:	0801da17 	.word	0x0801da17
 800ba64:	20012434 	.word	0x20012434
 800ba68:	20012438 	.word	0x20012438

0800ba6c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800ba6c:	b570      	push	{r4, r5, r6, lr}
 800ba6e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ba70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ba74:	4299      	cmp	r1, r3
 800ba76:	4604      	mov	r4, r0
 800ba78:	d01e      	beq.n	800bab8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800ba7a:	6803      	ldr	r3, [r0, #0]
 800ba7c:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800ba7e:	4b0f      	ldr	r3, [pc, #60]	; (800babc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800ba80:	681b      	ldr	r3, [r3, #0]
 800ba82:	b92b      	cbnz	r3, 800ba90 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800ba84:	4b0e      	ldr	r3, [pc, #56]	; (800bac0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800ba86:	4a0f      	ldr	r2, [pc, #60]	; (800bac4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800ba88:	21b1      	movs	r1, #177	; 0xb1
 800ba8a:	480f      	ldr	r0, [pc, #60]	; (800bac8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800ba8c:	f00e feac 	bl	801a7e8 <__assert_func>
 800ba90:	4b0e      	ldr	r3, [pc, #56]	; (800bacc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800ba92:	881b      	ldrh	r3, [r3, #0]
 800ba94:	428b      	cmp	r3, r1
 800ba96:	d803      	bhi.n	800baa0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800ba98:	4b0d      	ldr	r3, [pc, #52]	; (800bad0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800ba9a:	4a0a      	ldr	r2, [pc, #40]	; (800bac4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800ba9c:	21b2      	movs	r1, #178	; 0xb2
 800ba9e:	e7f4      	b.n	800ba8a <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800baa0:	4b0c      	ldr	r3, [pc, #48]	; (800bad4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800baa2:	6818      	ldr	r0, [r3, #0]
 800baa4:	f7f7 ff06 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800baa8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800baaa:	4601      	mov	r1, r0
 800baac:	46ac      	mov	ip, r5
 800baae:	4620      	mov	r0, r4
 800bab0:	2300      	movs	r3, #0
 800bab2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bab6:	4760      	bx	ip
 800bab8:	2000      	movs	r0, #0
 800baba:	bd70      	pop	{r4, r5, r6, pc}
 800babc:	2001242c 	.word	0x2001242c
 800bac0:	0801d9ac 	.word	0x0801d9ac
 800bac4:	0801dc94 	.word	0x0801dc94
 800bac8:	0801d9ee 	.word	0x0801d9ee
 800bacc:	20012430 	.word	0x20012430
 800bad0:	0801da17 	.word	0x0801da17
 800bad4:	20012438 	.word	0x20012438

0800bad8 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800bad8:	b510      	push	{r4, lr}
 800bada:	2140      	movs	r1, #64	; 0x40
 800badc:	4604      	mov	r4, r0
 800bade:	f00e fe57 	bl	801a790 <_ZdlPvj>
 800bae2:	4620      	mov	r0, r4
 800bae4:	bd10      	pop	{r4, pc}
	...

0800bae8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800bae8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800baec:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800baee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800baf2:	4293      	cmp	r3, r2
 800baf4:	b08c      	sub	sp, #48	; 0x30
 800baf6:	4604      	mov	r4, r0
 800baf8:	460e      	mov	r6, r1
 800bafa:	d05d      	beq.n	800bbb8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800bafc:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800bbdc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800bb00:	f8d8 2000 	ldr.w	r2, [r8]
 800bb04:	b92a      	cbnz	r2, 800bb12 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800bb06:	4b2e      	ldr	r3, [pc, #184]	; (800bbc0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800bb08:	4a2e      	ldr	r2, [pc, #184]	; (800bbc4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800bb0a:	21b1      	movs	r1, #177	; 0xb1
 800bb0c:	482e      	ldr	r0, [pc, #184]	; (800bbc8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800bb0e:	f00e fe6b 	bl	801a7e8 <__assert_func>
 800bb12:	4f2e      	ldr	r7, [pc, #184]	; (800bbcc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800bb14:	8839      	ldrh	r1, [r7, #0]
 800bb16:	4299      	cmp	r1, r3
 800bb18:	d803      	bhi.n	800bb22 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800bb1a:	4b2d      	ldr	r3, [pc, #180]	; (800bbd0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800bb1c:	4a29      	ldr	r2, [pc, #164]	; (800bbc4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800bb1e:	21b2      	movs	r1, #178	; 0xb2
 800bb20:	e7f4      	b.n	800bb0c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800bb22:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800bb26:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800bb2a:	4b2a      	ldr	r3, [pc, #168]	; (800bbd4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800bb2c:	681b      	ldr	r3, [r3, #0]
 800bb2e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800bb32:	2a00      	cmp	r2, #0
 800bb34:	d040      	beq.n	800bbb8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800bb36:	784b      	ldrb	r3, [r1, #1]
 800bb38:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800bb3c:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800bb40:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800bb44:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800bb48:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800bb4c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bb4e:	9207      	str	r2, [sp, #28]
 800bb50:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800bb54:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bb58:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800bb5c:	f88d 9020 	strb.w	r9, [sp, #32]
 800bb60:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800bb64:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800bb68:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bb6c:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800bb70:	9009      	str	r0, [sp, #36]	; 0x24
 800bb72:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800bb76:	f7f5 fbc5 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800bb7a:	ad05      	add	r5, sp, #20
 800bb7c:	4681      	mov	r9, r0
 800bb7e:	4621      	mov	r1, r4
 800bb80:	4628      	mov	r0, r5
 800bb82:	f001 fecf 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bb86:	f8d8 3000 	ldr.w	r3, [r8]
 800bb8a:	2b00      	cmp	r3, #0
 800bb8c:	d0bb      	beq.n	800bb06 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800bb8e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800bb90:	883b      	ldrh	r3, [r7, #0]
 800bb92:	428b      	cmp	r3, r1
 800bb94:	d9c1      	bls.n	800bb1a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800bb96:	4b10      	ldr	r3, [pc, #64]	; (800bbd8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800bb98:	6818      	ldr	r0, [r3, #0]
 800bb9a:	f7f7 fe8b 	bl	80038b4 <_ZNK8touchgfx5Texts7getTextEt>
 800bb9e:	2300      	movs	r3, #0
 800bba0:	9303      	str	r3, [sp, #12]
 800bba2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800bba4:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800bba8:	ab07      	add	r3, sp, #28
 800bbaa:	9300      	str	r3, [sp, #0]
 800bbac:	e895 0006 	ldmia.w	r5, {r1, r2}
 800bbb0:	4633      	mov	r3, r6
 800bbb2:	4648      	mov	r0, r9
 800bbb4:	f7f7 fe32 	bl	800381c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800bbb8:	b00c      	add	sp, #48	; 0x30
 800bbba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bbbe:	bf00      	nop
 800bbc0:	0801d9ac 	.word	0x0801d9ac
 800bbc4:	0801dc94 	.word	0x0801dc94
 800bbc8:	0801d9ee 	.word	0x0801d9ee
 800bbcc:	20012430 	.word	0x20012430
 800bbd0:	0801da17 	.word	0x0801da17
 800bbd4:	20012434 	.word	0x20012434
 800bbd8:	20012438 	.word	0x20012438
 800bbdc:	2001242c 	.word	0x2001242c

0800bbe0 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800bbe0:	4770      	bx	lr

0800bbe2 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800bbe2:	b510      	push	{r4, lr}
 800bbe4:	213c      	movs	r1, #60	; 0x3c
 800bbe6:	4604      	mov	r4, r0
 800bbe8:	f00e fdd2 	bl	801a790 <_ZdlPvj>
 800bbec:	4620      	mov	r0, r4
 800bbee:	bd10      	pop	{r4, pc}

0800bbf0 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800bbf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbf4:	461c      	mov	r4, r3
 800bbf6:	4606      	mov	r6, r0
 800bbf8:	9f06      	ldr	r7, [sp, #24]
 800bbfa:	f7ff fe3b 	bl	800b874 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800bbfe:	8823      	ldrh	r3, [r4, #0]
 800bc00:	86b3      	strh	r3, [r6, #52]	; 0x34
 800bc02:	883b      	ldrh	r3, [r7, #0]
 800bc04:	86f3      	strh	r3, [r6, #54]	; 0x36
 800bc06:	4638      	mov	r0, r7
 800bc08:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800bc0c:	f003 f91e 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bc10:	f04f 0802 	mov.w	r8, #2
 800bc14:	fb95 f5f8 	sdiv	r5, r5, r8
 800bc18:	b2ad      	uxth	r5, r5
 800bc1a:	eba5 0050 	sub.w	r0, r5, r0, lsr #1
 800bc1e:	8730      	strh	r0, [r6, #56]	; 0x38
 800bc20:	4638      	mov	r0, r7
 800bc22:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800bc26:	fb94 f4f8 	sdiv	r4, r4, r8
 800bc2a:	f003 f949 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bc2e:	b2a4      	uxth	r4, r4
 800bc30:	eba4 0050 	sub.w	r0, r4, r0, lsr #1
 800bc34:	8770      	strh	r0, [r6, #58]	; 0x3a
 800bc36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800bc3c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800bc3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc40:	4604      	mov	r4, r0
 800bc42:	b08c      	sub	sp, #48	; 0x30
 800bc44:	460d      	mov	r5, r1
 800bc46:	f7ff fe3d 	bl	800b8c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800bc4a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800bc4e:	b33b      	cbz	r3, 800bca0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x64>
 800bc50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc52:	f8ad 3014 	strh.w	r3, [sp, #20]
 800bc56:	a805      	add	r0, sp, #20
 800bc58:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 800bc5c:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 800bc60:	f003 f8f4 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bc64:	4606      	mov	r6, r0
 800bc66:	a805      	add	r0, sp, #20
 800bc68:	f003 f92a 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bc6c:	6869      	ldr	r1, [r5, #4]
 800bc6e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800bc72:	6828      	ldr	r0, [r5, #0]
 800bc74:	f8ad 8018 	strh.w	r8, [sp, #24]
 800bc78:	ab08      	add	r3, sp, #32
 800bc7a:	ad08      	add	r5, sp, #32
 800bc7c:	c303      	stmia	r3!, {r0, r1}
 800bc7e:	a906      	add	r1, sp, #24
 800bc80:	4628      	mov	r0, r5
 800bc82:	f8ad 701a 	strh.w	r7, [sp, #26]
 800bc86:	f8ad 601c 	strh.w	r6, [sp, #28]
 800bc8a:	f7fe f833 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800bc8e:	4b25      	ldr	r3, [pc, #148]	; (800bd24 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe8>)
 800bc90:	681b      	ldr	r3, [r3, #0]
 800bc92:	b93b      	cbnz	r3, 800bca4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x68>
 800bc94:	4b24      	ldr	r3, [pc, #144]	; (800bd28 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xec>)
 800bc96:	4a25      	ldr	r2, [pc, #148]	; (800bd2c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf0>)
 800bc98:	4825      	ldr	r0, [pc, #148]	; (800bd30 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf4>)
 800bc9a:	2189      	movs	r1, #137	; 0x89
 800bc9c:	f00e fda4 	bl	801a7e8 <__assert_func>
 800bca0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800bca2:	e7d6      	b.n	800bc52 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x16>
 800bca4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800bca8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bcac:	429a      	cmp	r2, r3
 800bcae:	d035      	beq.n	800bd1c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800bcb0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800bcb4:	2b00      	cmp	r3, #0
 800bcb6:	dd31      	ble.n	800bd1c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800bcb8:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800bcbc:	2b00      	cmp	r3, #0
 800bcbe:	dd2d      	ble.n	800bd1c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800bcc0:	2300      	movs	r3, #0
 800bcc2:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800bcc6:	6823      	ldr	r3, [r4, #0]
 800bcc8:	a90a      	add	r1, sp, #40	; 0x28
 800bcca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bccc:	4620      	mov	r0, r4
 800bcce:	4798      	blx	r3
 800bcd0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800bcd4:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800bcd6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800bcda:	1a9b      	subs	r3, r3, r2
 800bcdc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bce0:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 800bce2:	1ac9      	subs	r1, r1, r3
 800bce4:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800bce8:	4912      	ldr	r1, [pc, #72]	; (800bd34 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf8>)
 800bcea:	6809      	ldr	r1, [r1, #0]
 800bcec:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 800bcf0:	b108      	cbz	r0, 800bcf6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xba>
 800bcf2:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800bcf4:	b900      	cbnz	r0, 800bcf8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xbc>
 800bcf6:	6888      	ldr	r0, [r1, #8]
 800bcf8:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 800bcfc:	440b      	add	r3, r1
 800bcfe:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800bd02:	2601      	movs	r6, #1
 800bd04:	440a      	add	r2, r1
 800bd06:	6801      	ldr	r1, [r0, #0]
 800bd08:	9602      	str	r6, [sp, #8]
 800bd0a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800bd0e:	e9cd 5400 	strd	r5, r4, [sp]
 800bd12:	b21b      	sxth	r3, r3
 800bd14:	688c      	ldr	r4, [r1, #8]
 800bd16:	b212      	sxth	r2, r2
 800bd18:	a905      	add	r1, sp, #20
 800bd1a:	47a0      	blx	r4
 800bd1c:	b00c      	add	sp, #48	; 0x30
 800bd1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd22:	bf00      	nop
 800bd24:	20012464 	.word	0x20012464
 800bd28:	0801db80 	.word	0x0801db80
 800bd2c:	0801dd38 	.word	0x0801dd38
 800bd30:	0801dbbc 	.word	0x0801dbbc
 800bd34:	200123bc 	.word	0x200123bc

0800bd38 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800bd38:	b510      	push	{r4, lr}
 800bd3a:	2101      	movs	r1, #1
 800bd3c:	2200      	movs	r2, #0
 800bd3e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bd42:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800bd46:	4c0d      	ldr	r4, [pc, #52]	; (800bd7c <_ZN8touchgfx14ButtonWithIconC1Ev+0x44>)
 800bd48:	8082      	strh	r2, [r0, #4]
 800bd4a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800bd4e:	80c2      	strh	r2, [r0, #6]
 800bd50:	8102      	strh	r2, [r0, #8]
 800bd52:	8142      	strh	r2, [r0, #10]
 800bd54:	8182      	strh	r2, [r0, #12]
 800bd56:	81c2      	strh	r2, [r0, #14]
 800bd58:	8202      	strh	r2, [r0, #16]
 800bd5a:	8242      	strh	r2, [r0, #18]
 800bd5c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bd60:	61c2      	str	r2, [r0, #28]
 800bd62:	6282      	str	r2, [r0, #40]	; 0x28
 800bd64:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800bd68:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800bd6a:	8601      	strh	r1, [r0, #48]	; 0x30
 800bd6c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800bd70:	6004      	str	r4, [r0, #0]
 800bd72:	8681      	strh	r1, [r0, #52]	; 0x34
 800bd74:	86c1      	strh	r1, [r0, #54]	; 0x36
 800bd76:	8702      	strh	r2, [r0, #56]	; 0x38
 800bd78:	8742      	strh	r2, [r0, #58]	; 0x3a
 800bd7a:	bd10      	pop	{r4, pc}
 800bd7c:	0801dccc 	.word	0x0801dccc

0800bd80 <_ZN8touchgfx5ImageD1Ev>:
 800bd80:	4770      	bx	lr

0800bd82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800bd82:	b570      	push	{r4, r5, r6, lr}
 800bd84:	4605      	mov	r5, r0
 800bd86:	880b      	ldrh	r3, [r1, #0]
 800bd88:	84c3      	strh	r3, [r0, #38]	; 0x26
 800bd8a:	f855 3b26 	ldr.w	r3, [r5], #38
 800bd8e:	4604      	mov	r4, r0
 800bd90:	4628      	mov	r0, r5
 800bd92:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800bd94:	f003 f85a 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bd98:	b201      	sxth	r1, r0
 800bd9a:	4620      	mov	r0, r4
 800bd9c:	47b0      	blx	r6
 800bd9e:	6823      	ldr	r3, [r4, #0]
 800bda0:	4628      	mov	r0, r5
 800bda2:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800bda4:	f003 f88c 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bda8:	4633      	mov	r3, r6
 800bdaa:	b201      	sxth	r1, r0
 800bdac:	4620      	mov	r0, r4
 800bdae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdb2:	4718      	bx	r3

0800bdb4 <_ZN8touchgfx5ImageD0Ev>:
 800bdb4:	b510      	push	{r4, lr}
 800bdb6:	212c      	movs	r1, #44	; 0x2c
 800bdb8:	4604      	mov	r4, r0
 800bdba:	f00e fce9 	bl	801a790 <_ZdlPvj>
 800bdbe:	4620      	mov	r0, r4
 800bdc0:	bd10      	pop	{r4, pc}

0800bdc2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800bdc2:	b510      	push	{r4, lr}
 800bdc4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800bdc8:	2bff      	cmp	r3, #255	; 0xff
 800bdca:	4604      	mov	r4, r0
 800bdcc:	d006      	beq.n	800bddc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800bdce:	2300      	movs	r3, #0
 800bdd0:	8003      	strh	r3, [r0, #0]
 800bdd2:	8043      	strh	r3, [r0, #2]
 800bdd4:	8083      	strh	r3, [r0, #4]
 800bdd6:	80c3      	strh	r3, [r0, #6]
 800bdd8:	4620      	mov	r0, r4
 800bdda:	bd10      	pop	{r4, pc}
 800bddc:	3126      	adds	r1, #38	; 0x26
 800bdde:	f003 f8a9 	bl	800ef34 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800bde2:	e7f9      	b.n	800bdd8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800bde4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800bde4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bde8:	4604      	mov	r4, r0
 800bdea:	b088      	sub	sp, #32
 800bdec:	f854 3b26 	ldr.w	r3, [r4], #38
 800bdf0:	2500      	movs	r5, #0
 800bdf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdf4:	460f      	mov	r7, r1
 800bdf6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800bdfa:	a904      	add	r1, sp, #16
 800bdfc:	4606      	mov	r6, r0
 800bdfe:	4798      	blx	r3
 800be00:	4620      	mov	r0, r4
 800be02:	f003 f823 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800be06:	4680      	mov	r8, r0
 800be08:	4620      	mov	r0, r4
 800be0a:	f003 f859 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800be0e:	9506      	str	r5, [sp, #24]
 800be10:	ad06      	add	r5, sp, #24
 800be12:	f8ad 001e 	strh.w	r0, [sp, #30]
 800be16:	4639      	mov	r1, r7
 800be18:	4628      	mov	r0, r5
 800be1a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800be1e:	f7fd ff69 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800be22:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800be26:	2b00      	cmp	r3, #0
 800be28:	dd19      	ble.n	800be5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800be2a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800be2e:	2b00      	cmp	r3, #0
 800be30:	dd15      	ble.n	800be5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800be32:	4b0c      	ldr	r3, [pc, #48]	; (800be64 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800be34:	681b      	ldr	r3, [r3, #0]
 800be36:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800be3a:	b10a      	cbz	r2, 800be40 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800be3c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800be3e:	b900      	cbnz	r0, 800be42 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800be40:	6898      	ldr	r0, [r3, #8]
 800be42:	6801      	ldr	r1, [r0, #0]
 800be44:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800be48:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800be4c:	2701      	movs	r7, #1
 800be4e:	9702      	str	r7, [sp, #8]
 800be50:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800be54:	e9cd 5600 	strd	r5, r6, [sp]
 800be58:	688d      	ldr	r5, [r1, #8]
 800be5a:	4621      	mov	r1, r4
 800be5c:	47a8      	blx	r5
 800be5e:	b008      	add	sp, #32
 800be60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be64:	200123bc 	.word	0x200123bc

0800be68 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800be68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be6c:	b091      	sub	sp, #68	; 0x44
 800be6e:	4699      	mov	r9, r3
 800be70:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800be74:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800be76:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800be7a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800be7e:	4680      	mov	r8, r0
 800be80:	4617      	mov	r7, r2
 800be82:	a80e      	add	r0, sp, #56	; 0x38
 800be84:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800be88:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800be8c:	2500      	movs	r5, #0
 800be8e:	910d      	str	r1, [sp, #52]	; 0x34
 800be90:	950e      	str	r5, [sp, #56]	; 0x38
 800be92:	f000 fe3b 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800be96:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800be98:	f8d9 6000 	ldr.w	r6, [r9]
 800be9c:	6818      	ldr	r0, [r3, #0]
 800be9e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800bea0:	f9b4 b000 	ldrsh.w	fp, [r4]
 800bea4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bea8:	eb02 0c06 	add.w	ip, r2, r6
 800beac:	1b80      	subs	r0, r0, r6
 800beae:	ebab 0e0c 	sub.w	lr, fp, ip
 800beb2:	4570      	cmp	r0, lr
 800beb4:	f340 80bd 	ble.w	800c032 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800beb8:	88a1      	ldrh	r1, [r4, #4]
 800beba:	4459      	add	r1, fp
 800bebc:	b209      	sxth	r1, r1
 800bebe:	458c      	cmp	ip, r1
 800bec0:	f300 80b7 	bgt.w	800c032 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800bec4:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800bec8:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800becc:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800bed0:	edd9 6a07 	vldr	s13, [r9, #28]
 800bed4:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800bed8:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800bedc:	4283      	cmp	r3, r0
 800bede:	bfa8      	it	ge
 800bee0:	4603      	movge	r3, r0
 800bee2:	ee07 3a90 	vmov	s15, r3
 800bee6:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800beea:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800beee:	ee25 4a04 	vmul.f32	s8, s10, s8
 800bef2:	ee65 4a24 	vmul.f32	s9, s10, s9
 800bef6:	ee25 5a27 	vmul.f32	s10, s10, s15
 800befa:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800befe:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800bf02:	45e3      	cmp	fp, ip
 800bf04:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800bf08:	ee32 1a05 	vadd.f32	s2, s4, s10
 800bf0c:	ee36 0a84 	vadd.f32	s0, s13, s8
 800bf10:	ee61 1a87 	vmul.f32	s3, s3, s14
 800bf14:	ee22 2a07 	vmul.f32	s4, s4, s14
 800bf18:	f340 808e 	ble.w	800c038 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800bf1c:	fb9e f5f3 	sdiv	r5, lr, r3
 800bf20:	ee07 5a10 	vmov	s14, r5
 800bf24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800bf28:	2d00      	cmp	r5, #0
 800bf2a:	fb03 e415 	mls	r4, r3, r5, lr
 800bf2e:	eea7 0a04 	vfma.f32	s0, s14, s8
 800bf32:	eee7 0a24 	vfma.f32	s1, s14, s9
 800bf36:	eea7 1a05 	vfma.f32	s2, s14, s10
 800bf3a:	dd13      	ble.n	800bf64 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800bf3c:	ee70 6a44 	vsub.f32	s13, s0, s8
 800bf40:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800bf44:	eef5 6a40 	vcmp.f32	s13, #0.0
 800bf48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf4c:	bf18      	it	ne
 800bf4e:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800bf52:	ee31 2a45 	vsub.f32	s4, s2, s10
 800bf56:	bf08      	it	eq
 800bf58:	eeb0 7a67 	vmoveq.f32	s14, s15
 800bf5c:	ee61 1a87 	vmul.f32	s3, s3, s14
 800bf60:	ee22 2a07 	vmul.f32	s4, s4, s14
 800bf64:	fb05 f703 	mul.w	r7, r5, r3
 800bf68:	1bc0      	subs	r0, r0, r7
 800bf6a:	443e      	add	r6, r7
 800bf6c:	1997      	adds	r7, r2, r6
 800bf6e:	4407      	add	r7, r0
 800bf70:	42b9      	cmp	r1, r7
 800bf72:	bfbc      	itt	lt
 800bf74:	1a88      	sublt	r0, r1, r2
 800bf76:	1b80      	sublt	r0, r0, r6
 800bf78:	2800      	cmp	r0, #0
 800bf7a:	dd5a      	ble.n	800c032 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800bf7c:	fb90 f1f3 	sdiv	r1, r0, r3
 800bf80:	fb03 0211 	mls	r2, r3, r1, r0
 800bf84:	b90a      	cbnz	r2, 800bf8a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800bf86:	3901      	subs	r1, #1
 800bf88:	461a      	mov	r2, r3
 800bf8a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800bf8e:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800bf92:	44a4      	add	ip, r4
 800bf94:	fb03 c505 	mla	r5, r3, r5, ip
 800bf98:	2900      	cmp	r1, #0
 800bf9a:	bfcc      	ite	gt
 800bf9c:	469e      	movgt	lr, r3
 800bf9e:	4696      	movle	lr, r2
 800bfa0:	eef0 6a42 	vmov.f32	s13, s4
 800bfa4:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800bfa8:	ee21 3a23 	vmul.f32	s6, s2, s7
 800bfac:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800bfb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800bfb4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800bfb8:	eeb0 7a61 	vmov.f32	s14, s3
 800bfbc:	ee17 0a90 	vmov	r0, s15
 800bfc0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800bfc4:	fb90 f6f3 	sdiv	r6, r0, r3
 800bfc8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800bfcc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800bfd0:	ee17 0a90 	vmov	r0, s15
 800bfd4:	fb90 f7f3 	sdiv	r7, r0, r3
 800bfd8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800bfdc:	900c      	str	r0, [sp, #48]	; 0x30
 800bfde:	f8d0 8000 	ldr.w	r8, [r0]
 800bfe2:	981c      	ldr	r0, [sp, #112]	; 0x70
 800bfe4:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800bfe8:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800bfec:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800bff0:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800bff4:	f8cd a020 	str.w	sl, [sp, #32]
 800bff8:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800bffc:	980d      	ldr	r0, [sp, #52]	; 0x34
 800bffe:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800c002:	9603      	str	r6, [sp, #12]
 800c004:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800c008:	ee16 0a90 	vmov	r0, s13
 800c00c:	fb07 0704 	mla	r7, r7, r4, r0
 800c010:	ee17 0a10 	vmov	r0, s14
 800c014:	fb06 0604 	mla	r6, r6, r4, r0
 800c018:	e9cd 3600 	strd	r3, r6, [sp]
 800c01c:	44ca      	add	sl, r9
 800c01e:	f8cd a01c 	str.w	sl, [sp, #28]
 800c022:	9506      	str	r5, [sp, #24]
 800c024:	9702      	str	r7, [sp, #8]
 800c026:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800c02a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c02c:	ebae 0304 	sub.w	r3, lr, r4
 800c030:	47a8      	blx	r5
 800c032:	b011      	add	sp, #68	; 0x44
 800c034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c038:	462c      	mov	r4, r5
 800c03a:	e797      	b.n	800bf6c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800c03c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800c03c:	b570      	push	{r4, r5, r6, lr}
 800c03e:	4604      	mov	r4, r0
 800c040:	2500      	movs	r5, #0
 800c042:	7223      	strb	r3, [r4, #8]
 800c044:	9804      	ldr	r0, [sp, #16]
 800c046:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c04a:	8025      	strh	r5, [r4, #0]
 800c04c:	6061      	str	r1, [r4, #4]
 800c04e:	7263      	strb	r3, [r4, #9]
 800c050:	60e0      	str	r0, [r4, #12]
 800c052:	8222      	strh	r2, [r4, #16]
 800c054:	8265      	strh	r5, [r4, #18]
 800c056:	82a5      	strh	r5, [r4, #20]
 800c058:	82e5      	strh	r5, [r4, #22]
 800c05a:	8325      	strh	r5, [r4, #24]
 800c05c:	8365      	strh	r5, [r4, #26]
 800c05e:	83a5      	strh	r5, [r4, #28]
 800c060:	77a5      	strb	r5, [r4, #30]
 800c062:	6803      	ldr	r3, [r0, #0]
 800c064:	695b      	ldr	r3, [r3, #20]
 800c066:	4798      	blx	r3
 800c068:	4606      	mov	r6, r0
 800c06a:	b1f8      	cbz	r0, 800c0ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800c06c:	68e0      	ldr	r0, [r4, #12]
 800c06e:	6803      	ldr	r3, [r0, #0]
 800c070:	4631      	mov	r1, r6
 800c072:	68db      	ldr	r3, [r3, #12]
 800c074:	4798      	blx	r3
 800c076:	7b43      	ldrb	r3, [r0, #13]
 800c078:	7a82      	ldrb	r2, [r0, #10]
 800c07a:	005b      	lsls	r3, r3, #1
 800c07c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c080:	4313      	orrs	r3, r2
 800c082:	83a3      	strh	r3, [r4, #28]
 800c084:	7a63      	ldrb	r3, [r4, #9]
 800c086:	2b04      	cmp	r3, #4
 800c088:	4605      	mov	r5, r0
 800c08a:	d10f      	bne.n	800c0ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800c08c:	68e0      	ldr	r0, [r4, #12]
 800c08e:	6803      	ldr	r3, [r0, #0]
 800c090:	462a      	mov	r2, r5
 800c092:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c094:	4631      	mov	r1, r6
 800c096:	4798      	blx	r3
 800c098:	7b6b      	ldrb	r3, [r5, #13]
 800c09a:	005b      	lsls	r3, r3, #1
 800c09c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c0a0:	7aab      	ldrb	r3, [r5, #10]
 800c0a2:	4313      	orrs	r3, r2
 800c0a4:	4418      	add	r0, r3
 800c0a6:	8ba3      	ldrh	r3, [r4, #28]
 800c0a8:	4418      	add	r0, r3
 800c0aa:	83a0      	strh	r0, [r4, #28]
 800c0ac:	4620      	mov	r0, r4
 800c0ae:	bd70      	pop	{r4, r5, r6, pc}

0800c0b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800c0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0b4:	2400      	movs	r4, #0
 800c0b6:	b085      	sub	sp, #20
 800c0b8:	4681      	mov	r9, r0
 800c0ba:	4688      	mov	r8, r1
 800c0bc:	4692      	mov	sl, r2
 800c0be:	469b      	mov	fp, r3
 800c0c0:	4627      	mov	r7, r4
 800c0c2:	4625      	mov	r5, r4
 800c0c4:	4626      	mov	r6, r4
 800c0c6:	4554      	cmp	r4, sl
 800c0c8:	da2a      	bge.n	800c120 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c0ca:	2300      	movs	r3, #0
 800c0cc:	9303      	str	r3, [sp, #12]
 800c0ce:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c0d2:	429d      	cmp	r5, r3
 800c0d4:	d004      	beq.n	800c0e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800c0d6:	f242 030b 	movw	r3, #8203	; 0x200b
 800c0da:	429d      	cmp	r5, r3
 800c0dc:	bf18      	it	ne
 800c0de:	462f      	movne	r7, r5
 800c0e0:	ab03      	add	r3, sp, #12
 800c0e2:	4642      	mov	r2, r8
 800c0e4:	4659      	mov	r1, fp
 800c0e6:	4648      	mov	r0, r9
 800c0e8:	f002 fba4 	bl	800e834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c0ec:	4605      	mov	r5, r0
 800c0ee:	b1b8      	cbz	r0, 800c120 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c0f0:	280a      	cmp	r0, #10
 800c0f2:	d015      	beq.n	800c120 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c0f4:	9a03      	ldr	r2, [sp, #12]
 800c0f6:	b18a      	cbz	r2, 800c11c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800c0f8:	7b50      	ldrb	r0, [r2, #13]
 800c0fa:	7a93      	ldrb	r3, [r2, #10]
 800c0fc:	8895      	ldrh	r5, [r2, #4]
 800c0fe:	0040      	lsls	r0, r0, #1
 800c100:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c104:	4303      	orrs	r3, r0
 800c106:	9301      	str	r3, [sp, #4]
 800c108:	f8d8 3000 	ldr.w	r3, [r8]
 800c10c:	4639      	mov	r1, r7
 800c10e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c110:	4640      	mov	r0, r8
 800c112:	4798      	blx	r3
 800c114:	9b01      	ldr	r3, [sp, #4]
 800c116:	4418      	add	r0, r3
 800c118:	4406      	add	r6, r0
 800c11a:	b2b6      	uxth	r6, r6
 800c11c:	3401      	adds	r4, #1
 800c11e:	e7d2      	b.n	800c0c6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800c120:	4630      	mov	r0, r6
 800c122:	b005      	add	sp, #20
 800c124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c128 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800c128:	2a02      	cmp	r2, #2
 800c12a:	b530      	push	{r4, r5, lr}
 800c12c:	d011      	beq.n	800c152 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800c12e:	2a03      	cmp	r2, #3
 800c130:	d01c      	beq.n	800c16c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800c132:	2a01      	cmp	r2, #1
 800c134:	d10c      	bne.n	800c150 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c136:	888b      	ldrh	r3, [r1, #4]
 800c138:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c13c:	8801      	ldrh	r1, [r0, #0]
 800c13e:	8844      	ldrh	r4, [r0, #2]
 800c140:	8004      	strh	r4, [r0, #0]
 800c142:	1a9b      	subs	r3, r3, r2
 800c144:	1a5b      	subs	r3, r3, r1
 800c146:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c14a:	8043      	strh	r3, [r0, #2]
 800c14c:	8081      	strh	r1, [r0, #4]
 800c14e:	80c2      	strh	r2, [r0, #6]
 800c150:	bd30      	pop	{r4, r5, pc}
 800c152:	88cb      	ldrh	r3, [r1, #6]
 800c154:	88c2      	ldrh	r2, [r0, #6]
 800c156:	1a9b      	subs	r3, r3, r2
 800c158:	8842      	ldrh	r2, [r0, #2]
 800c15a:	1a9b      	subs	r3, r3, r2
 800c15c:	888a      	ldrh	r2, [r1, #4]
 800c15e:	8881      	ldrh	r1, [r0, #4]
 800c160:	8043      	strh	r3, [r0, #2]
 800c162:	1a52      	subs	r2, r2, r1
 800c164:	8801      	ldrh	r1, [r0, #0]
 800c166:	1a52      	subs	r2, r2, r1
 800c168:	8002      	strh	r2, [r0, #0]
 800c16a:	e7f1      	b.n	800c150 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c16c:	88cb      	ldrh	r3, [r1, #6]
 800c16e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800c172:	8841      	ldrh	r1, [r0, #2]
 800c174:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c178:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800c17c:	8045      	strh	r5, [r0, #2]
 800c17e:	1a9b      	subs	r3, r3, r2
 800c180:	1a5b      	subs	r3, r3, r1
 800c182:	8003      	strh	r3, [r0, #0]
 800c184:	8082      	strh	r2, [r0, #4]
 800c186:	80c4      	strh	r4, [r0, #6]
 800c188:	e7e2      	b.n	800c150 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800c18a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800c18a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c18e:	b09f      	sub	sp, #124	; 0x7c
 800c190:	9116      	str	r1, [sp, #88]	; 0x58
 800c192:	9317      	str	r3, [sp, #92]	; 0x5c
 800c194:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c196:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c198:	8809      	ldrh	r1, [r1, #0]
 800c19a:	889b      	ldrh	r3, [r3, #4]
 800c19c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800c1a0:	9212      	str	r2, [sp, #72]	; 0x48
 800c1a2:	440b      	add	r3, r1
 800c1a4:	b21b      	sxth	r3, r3
 800c1a6:	9310      	str	r3, [sp, #64]	; 0x40
 800c1a8:	f8d8 3000 	ldr.w	r3, [r8]
 800c1ac:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800c1b0:	7a59      	ldrb	r1, [r3, #9]
 800c1b2:	7a1b      	ldrb	r3, [r3, #8]
 800c1b4:	9315      	str	r3, [sp, #84]	; 0x54
 800c1b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800c1b8:	9011      	str	r0, [sp, #68]	; 0x44
 800c1ba:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800c1be:	9114      	str	r1, [sp, #80]	; 0x50
 800c1c0:	f9b3 5000 	ldrsh.w	r5, [r3]
 800c1c4:	2a00      	cmp	r2, #0
 800c1c6:	d067      	beq.n	800c298 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800c1c8:	f898 3010 	ldrb.w	r3, [r8, #16]
 800c1cc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800c1ce:	2b04      	cmp	r3, #4
 800c1d0:	bf14      	ite	ne
 800c1d2:	2301      	movne	r3, #1
 800c1d4:	2302      	moveq	r3, #2
 800c1d6:	4413      	add	r3, r2
 800c1d8:	f04f 0900 	mov.w	r9, #0
 800c1dc:	930f      	str	r3, [sp, #60]	; 0x3c
 800c1de:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800c1e2:	464c      	mov	r4, r9
 800c1e4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800c1e8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800c1ec:	4293      	cmp	r3, r2
 800c1ee:	f280 808c 	bge.w	800c30a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800c1f2:	2300      	movs	r3, #0
 800c1f4:	931c      	str	r3, [sp, #112]	; 0x70
 800c1f6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c1fa:	429c      	cmp	r4, r3
 800c1fc:	d006      	beq.n	800c20c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800c1fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c200:	f242 020b 	movw	r2, #8203	; 0x200b
 800c204:	4294      	cmp	r4, r2
 800c206:	bf18      	it	ne
 800c208:	4623      	movne	r3, r4
 800c20a:	930d      	str	r3, [sp, #52]	; 0x34
 800c20c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c20e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800c210:	f8d8 2000 	ldr.w	r2, [r8]
 800c214:	428b      	cmp	r3, r1
 800c216:	db41      	blt.n	800c29c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800c218:	6813      	ldr	r3, [r2, #0]
 800c21a:	4610      	mov	r0, r2
 800c21c:	695b      	ldr	r3, [r3, #20]
 800c21e:	4798      	blx	r3
 800c220:	4604      	mov	r4, r0
 800c222:	f8d8 0000 	ldr.w	r0, [r8]
 800c226:	6803      	ldr	r3, [r0, #0]
 800c228:	aa1d      	add	r2, sp, #116	; 0x74
 800c22a:	689e      	ldr	r6, [r3, #8]
 800c22c:	4621      	mov	r1, r4
 800c22e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c232:	47b0      	blx	r6
 800c234:	901c      	str	r0, [sp, #112]	; 0x70
 800c236:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c23a:	429c      	cmp	r4, r3
 800c23c:	f000 80e9 	beq.w	800c412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c240:	f242 030b 	movw	r3, #8203	; 0x200b
 800c244:	429c      	cmp	r4, r3
 800c246:	f000 80e4 	beq.w	800c412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c24a:	2c00      	cmp	r4, #0
 800c24c:	f000 80f6 	beq.w	800c43c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800c250:	2c0a      	cmp	r4, #10
 800c252:	d060      	beq.n	800c316 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c254:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c256:	b36a      	cbz	r2, 800c2b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800c258:	8894      	ldrh	r4, [r2, #4]
 800c25a:	f1bb 0f00 	cmp.w	fp, #0
 800c25e:	d03b      	beq.n	800c2d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800c260:	f892 900d 	ldrb.w	r9, [r2, #13]
 800c264:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800c268:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800c26c:	f892 900a 	ldrb.w	r9, [r2, #10]
 800c270:	f1bb 0f01 	cmp.w	fp, #1
 800c274:	ea49 0903 	orr.w	r9, r9, r3
 800c278:	d134      	bne.n	800c2e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800c27a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c27c:	eba5 0509 	sub.w	r5, r5, r9
 800c280:	2b00      	cmp	r3, #0
 800c282:	d14f      	bne.n	800c324 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800c284:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c286:	eb09 0305 	add.w	r3, r9, r5
 800c28a:	4413      	add	r3, r2
 800c28c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800c28e:	f9b2 2000 	ldrsh.w	r2, [r2]
 800c292:	4293      	cmp	r3, r2
 800c294:	da51      	bge.n	800c33a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800c296:	e038      	b.n	800c30a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800c298:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c29a:	e79d      	b.n	800c1d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800c29c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c2a0:	9301      	str	r3, [sp, #4]
 800c2a2:	ab1d      	add	r3, sp, #116	; 0x74
 800c2a4:	9300      	str	r3, [sp, #0]
 800c2a6:	4659      	mov	r1, fp
 800c2a8:	ab1c      	add	r3, sp, #112	; 0x70
 800c2aa:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c2ac:	f002 fb1a 	bl	800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800c2b0:	4604      	mov	r4, r0
 800c2b2:	e7c0      	b.n	800c236 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800c2b4:	f8d8 0000 	ldr.w	r0, [r8]
 800c2b8:	6803      	ldr	r3, [r0, #0]
 800c2ba:	691b      	ldr	r3, [r3, #16]
 800c2bc:	4798      	blx	r3
 800c2be:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c2c2:	4298      	cmp	r0, r3
 800c2c4:	f000 80a5 	beq.w	800c412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c2c8:	f242 030b 	movw	r3, #8203	; 0x200b
 800c2cc:	4298      	cmp	r0, r3
 800c2ce:	f000 80a0 	beq.w	800c412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c2d2:	f1bb 0f00 	cmp.w	fp, #0
 800c2d6:	d100      	bne.n	800c2da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800c2d8:	444d      	add	r5, r9
 800c2da:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c2dc:	2a00      	cmp	r2, #0
 800c2de:	d1bf      	bne.n	800c260 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800c2e0:	4691      	mov	r9, r2
 800c2e2:	e096      	b.n	800c412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c2e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c2e6:	2b00      	cmp	r3, #0
 800c2e8:	f000 80aa 	beq.w	800c440 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800c2ec:	f1bb 0f00 	cmp.w	fp, #0
 800c2f0:	d118      	bne.n	800c324 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800c2f2:	f8d8 0000 	ldr.w	r0, [r8]
 800c2f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c2f8:	6803      	ldr	r3, [r0, #0]
 800c2fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c2fc:	4798      	blx	r3
 800c2fe:	4405      	add	r5, r0
 800c300:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800c302:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800c304:	1aeb      	subs	r3, r5, r3
 800c306:	4293      	cmp	r3, r2
 800c308:	dd17      	ble.n	800c33a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800c30a:	2c00      	cmp	r4, #0
 800c30c:	f000 8096 	beq.w	800c43c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800c310:	2c0a      	cmp	r4, #10
 800c312:	f040 8084 	bne.w	800c41e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800c316:	240a      	movs	r4, #10
 800c318:	fab4 f084 	clz	r0, r4
 800c31c:	0940      	lsrs	r0, r0, #5
 800c31e:	b01f      	add	sp, #124	; 0x7c
 800c320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c324:	f8d8 0000 	ldr.w	r0, [r8]
 800c328:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c32a:	6803      	ldr	r3, [r0, #0]
 800c32c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c32e:	4798      	blx	r3
 800c330:	f1bb 0f01 	cmp.w	fp, #1
 800c334:	eba5 0500 	sub.w	r5, r5, r0
 800c338:	d0a4      	beq.n	800c284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800c33a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c33c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c33e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c342:	f9b3 6000 	ldrsh.w	r6, [r3]
 800c346:	7b43      	ldrb	r3, [r0, #13]
 800c348:	015b      	lsls	r3, r3, #5
 800c34a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c34e:	7983      	ldrb	r3, [r0, #6]
 800c350:	4429      	add	r1, r5
 800c352:	4313      	orrs	r3, r2
 800c354:	440b      	add	r3, r1
 800c356:	42b3      	cmp	r3, r6
 800c358:	db5b      	blt.n	800c412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c35a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c35c:	4299      	cmp	r1, r3
 800c35e:	da58      	bge.n	800c412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c360:	f8d8 0000 	ldr.w	r0, [r8]
 800c364:	6803      	ldr	r3, [r0, #0]
 800c366:	42ae      	cmp	r6, r5
 800c368:	bfc8      	it	gt
 800c36a:	1b76      	subgt	r6, r6, r5
 800c36c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c36e:	bfcc      	ite	gt
 800c370:	b2b6      	uxthgt	r6, r6
 800c372:	2600      	movle	r6, #0
 800c374:	4798      	blx	r3
 800c376:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c378:	7b5a      	ldrb	r2, [r3, #13]
 800c37a:	00d1      	lsls	r1, r2, #3
 800c37c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800c380:	7a19      	ldrb	r1, [r3, #8]
 800c382:	4339      	orrs	r1, r7
 800c384:	0657      	lsls	r7, r2, #25
 800c386:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800c388:	bf44      	itt	mi
 800c38a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800c38e:	b209      	sxthmi	r1, r1
 800c390:	19c7      	adds	r7, r0, r7
 800c392:	1a7f      	subs	r7, r7, r1
 800c394:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c396:	b2bf      	uxth	r7, r7
 800c398:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c39c:	fa0f fa87 	sxth.w	sl, r7
 800c3a0:	4551      	cmp	r1, sl
 800c3a2:	dd3a      	ble.n	800c41a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c3a4:	0112      	lsls	r2, r2, #4
 800c3a6:	79d8      	ldrb	r0, [r3, #7]
 800c3a8:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c3ac:	4302      	orrs	r2, r0
 800c3ae:	4492      	add	sl, r2
 800c3b0:	4551      	cmp	r1, sl
 800c3b2:	dc2e      	bgt.n	800c412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800c3b4:	1bcf      	subs	r7, r1, r7
 800c3b6:	b2bf      	uxth	r7, r7
 800c3b8:	468a      	mov	sl, r1
 800c3ba:	9319      	str	r3, [sp, #100]	; 0x64
 800c3bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c3be:	f8d8 0000 	ldr.w	r0, [r8]
 800c3c2:	681a      	ldr	r2, [r3, #0]
 800c3c4:	6801      	ldr	r1, [r0, #0]
 800c3c6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c3c8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800c3ca:	9313      	str	r3, [sp, #76]	; 0x4c
 800c3cc:	9218      	str	r2, [sp, #96]	; 0x60
 800c3ce:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800c3d0:	4788      	blx	r1
 800c3d2:	f898 1006 	ldrb.w	r1, [r8, #6]
 800c3d6:	910b      	str	r1, [sp, #44]	; 0x2c
 800c3d8:	f898 100e 	ldrb.w	r1, [r8, #14]
 800c3dc:	910a      	str	r1, [sp, #40]	; 0x28
 800c3de:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800c3e2:	9109      	str	r1, [sp, #36]	; 0x24
 800c3e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c3e6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800c3ea:	9305      	str	r3, [sp, #20]
 800c3ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c3ee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c3f0:	9206      	str	r2, [sp, #24]
 800c3f2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c3f6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800c3fa:	e9cd a601 	strd	sl, r6, [sp, #4]
 800c3fe:	442e      	add	r6, r5
 800c400:	b236      	sxth	r6, r6
 800c402:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c404:	9600      	str	r6, [sp, #0]
 800c406:	681a      	ldr	r2, [r3, #0]
 800c408:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c40a:	685b      	ldr	r3, [r3, #4]
 800c40c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800c40e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800c410:	47b0      	blx	r6
 800c412:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c414:	3301      	adds	r3, #1
 800c416:	930e      	str	r3, [sp, #56]	; 0x38
 800c418:	e6e6      	b.n	800c1e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800c41a:	2700      	movs	r7, #0
 800c41c:	e7cd      	b.n	800c3ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800c41e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800c420:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c422:	3501      	adds	r5, #1
 800c424:	429d      	cmp	r5, r3
 800c426:	f6bf af77 	bge.w	800c318 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800c42a:	4659      	mov	r1, fp
 800c42c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c42e:	f7f7 f9b1 	bl	8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c432:	4604      	mov	r4, r0
 800c434:	b110      	cbz	r0, 800c43c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800c436:	280a      	cmp	r0, #10
 800c438:	d1f2      	bne.n	800c420 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800c43a:	e76c      	b.n	800c316 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c43c:	2400      	movs	r4, #0
 800c43e:	e76b      	b.n	800c318 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800c440:	f1bb 0f00 	cmp.w	fp, #0
 800c444:	f43f af5c 	beq.w	800c300 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800c448:	e777      	b.n	800c33a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800c44a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c44a:	b530      	push	{r4, r5, lr}
 800c44c:	8a44      	ldrh	r4, [r0, #18]
 800c44e:	8ac5      	ldrh	r5, [r0, #22]
 800c450:	82c3      	strh	r3, [r0, #22]
 800c452:	442c      	add	r4, r5
 800c454:	1ae4      	subs	r4, r4, r3
 800c456:	8244      	strh	r4, [r0, #18]
 800c458:	8b03      	ldrh	r3, [r0, #24]
 800c45a:	8a84      	ldrh	r4, [r0, #20]
 800c45c:	4422      	add	r2, r4
 800c45e:	440c      	add	r4, r1
 800c460:	1a59      	subs	r1, r3, r1
 800c462:	8342      	strh	r2, [r0, #26]
 800c464:	8284      	strh	r4, [r0, #20]
 800c466:	8301      	strh	r1, [r0, #24]
 800c468:	bd30      	pop	{r4, r5, pc}

0800c46a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800c46a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c46e:	7a43      	ldrb	r3, [r0, #9]
 800c470:	1eda      	subs	r2, r3, #3
 800c472:	b087      	sub	sp, #28
 800c474:	4604      	mov	r4, r0
 800c476:	b2d2      	uxtb	r2, r2
 800c478:	460f      	mov	r7, r1
 800c47a:	2900      	cmp	r1, #0
 800c47c:	d036      	beq.n	800c4ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800c47e:	2a01      	cmp	r2, #1
 800c480:	d932      	bls.n	800c4e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800c482:	1e58      	subs	r0, r3, #1
 800c484:	f1d0 0b00 	rsbs	fp, r0, #0
 800c488:	eb4b 0b00 	adc.w	fp, fp, r0
 800c48c:	1e99      	subs	r1, r3, #2
 800c48e:	424b      	negs	r3, r1
 800c490:	414b      	adcs	r3, r1
 800c492:	9303      	str	r3, [sp, #12]
 800c494:	2300      	movs	r3, #0
 800c496:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800c49a:	2500      	movs	r5, #0
 800c49c:	8265      	strh	r5, [r4, #18]
 800c49e:	82a5      	strh	r5, [r4, #20]
 800c4a0:	46a9      	mov	r9, r5
 800c4a2:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800c4a6:	2300      	movs	r3, #0
 800c4a8:	9305      	str	r3, [sp, #20]
 800c4aa:	8823      	ldrh	r3, [r4, #0]
 800c4ac:	2b20      	cmp	r3, #32
 800c4ae:	d02b      	beq.n	800c508 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800c4b0:	eba3 020a 	sub.w	r2, r3, sl
 800c4b4:	4256      	negs	r6, r2
 800c4b6:	4156      	adcs	r6, r2
 800c4b8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c4bc:	4293      	cmp	r3, r2
 800c4be:	d004      	beq.n	800c4ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c4c0:	4553      	cmp	r3, sl
 800c4c2:	bf16      	itet	ne
 800c4c4:	4699      	movne	r9, r3
 800c4c6:	2601      	moveq	r6, #1
 800c4c8:	2600      	movne	r6, #0
 800c4ca:	ab05      	add	r3, sp, #20
 800c4cc:	68e2      	ldr	r2, [r4, #12]
 800c4ce:	7a21      	ldrb	r1, [r4, #8]
 800c4d0:	6860      	ldr	r0, [r4, #4]
 800c4d2:	f002 f9af 	bl	800e834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c4d6:	8020      	strh	r0, [r4, #0]
 800c4d8:	b9c8      	cbnz	r0, 800c50e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800c4da:	8b22      	ldrh	r2, [r4, #24]
 800c4dc:	2300      	movs	r3, #0
 800c4de:	4611      	mov	r1, r2
 800c4e0:	4620      	mov	r0, r4
 800c4e2:	f7ff ffb2 	bl	800c44a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c4e6:	e066      	b.n	800c5b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c4e8:	468b      	mov	fp, r1
 800c4ea:	e7cf      	b.n	800c48c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800c4ec:	3b01      	subs	r3, #1
 800c4ee:	2a01      	cmp	r2, #1
 800c4f0:	bf8c      	ite	hi
 800c4f2:	2200      	movhi	r2, #0
 800c4f4:	2201      	movls	r2, #1
 800c4f6:	2b01      	cmp	r3, #1
 800c4f8:	bf8c      	ite	hi
 800c4fa:	2300      	movhi	r3, #0
 800c4fc:	2301      	movls	r3, #1
 800c4fe:	9202      	str	r2, [sp, #8]
 800c500:	9301      	str	r3, [sp, #4]
 800c502:	9103      	str	r1, [sp, #12]
 800c504:	468b      	mov	fp, r1
 800c506:	e7c8      	b.n	800c49a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800c508:	4699      	mov	r9, r3
 800c50a:	2601      	movs	r6, #1
 800c50c:	e7dd      	b.n	800c4ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c50e:	8ae3      	ldrh	r3, [r4, #22]
 800c510:	280a      	cmp	r0, #10
 800c512:	f103 0301 	add.w	r3, r3, #1
 800c516:	82e3      	strh	r3, [r4, #22]
 800c518:	d0df      	beq.n	800c4da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800c51a:	9a05      	ldr	r2, [sp, #20]
 800c51c:	bb42      	cbnz	r2, 800c570 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800c51e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c522:	4298      	cmp	r0, r3
 800c524:	d001      	beq.n	800c52a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c526:	4550      	cmp	r0, sl
 800c528:	d1bd      	bne.n	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c52a:	8823      	ldrh	r3, [r4, #0]
 800c52c:	8b21      	ldrh	r1, [r4, #24]
 800c52e:	2b20      	cmp	r3, #32
 800c530:	d001      	beq.n	800c536 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800c532:	4553      	cmp	r3, sl
 800c534:	d131      	bne.n	800c59a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800c536:	2e00      	cmp	r6, #0
 800c538:	bf0a      	itet	eq
 800c53a:	460d      	moveq	r5, r1
 800c53c:	4630      	movne	r0, r6
 800c53e:	2001      	moveq	r0, #1
 800c540:	440a      	add	r2, r1
 800c542:	8aa3      	ldrh	r3, [r4, #20]
 800c544:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c548:	b292      	uxth	r2, r2
 800c54a:	8322      	strh	r2, [r4, #24]
 800c54c:	4413      	add	r3, r2
 800c54e:	2f00      	cmp	r7, #0
 800c550:	d03a      	beq.n	800c5c8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800c552:	f1bb 0f00 	cmp.w	fp, #0
 800c556:	d102      	bne.n	800c55e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800c558:	9903      	ldr	r1, [sp, #12]
 800c55a:	b301      	cbz	r1, 800c59e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c55c:	b1f8      	cbz	r0, 800c59e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c55e:	8ba1      	ldrh	r1, [r4, #28]
 800c560:	4419      	add	r1, r3
 800c562:	458c      	cmp	ip, r1
 800c564:	da2a      	bge.n	800c5bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c566:	8a61      	ldrh	r1, [r4, #18]
 800c568:	b341      	cbz	r1, 800c5bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c56a:	4563      	cmp	r3, ip
 800c56c:	dd9b      	ble.n	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c56e:	e01c      	b.n	800c5aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800c570:	8893      	ldrh	r3, [r2, #4]
 800c572:	8023      	strh	r3, [r4, #0]
 800c574:	f892 800d 	ldrb.w	r8, [r2, #13]
 800c578:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800c57c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800c580:	f892 800a 	ldrb.w	r8, [r2, #10]
 800c584:	ea48 0800 	orr.w	r8, r8, r0
 800c588:	68e0      	ldr	r0, [r4, #12]
 800c58a:	6803      	ldr	r3, [r0, #0]
 800c58c:	4649      	mov	r1, r9
 800c58e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c590:	4798      	blx	r3
 800c592:	eb08 0200 	add.w	r2, r8, r0
 800c596:	b292      	uxth	r2, r2
 800c598:	e7c7      	b.n	800c52a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c59a:	2000      	movs	r0, #0
 800c59c:	e7d0      	b.n	800c540 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800c59e:	4563      	cmp	r3, ip
 800c5a0:	dd81      	ble.n	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c5a2:	8a63      	ldrh	r3, [r4, #18]
 800c5a4:	2b00      	cmp	r3, #0
 800c5a6:	f43f af7e 	beq.w	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c5aa:	2301      	movs	r3, #1
 800c5ac:	77a3      	strb	r3, [r4, #30]
 800c5ae:	8ba2      	ldrh	r2, [r4, #28]
 800c5b0:	8b63      	ldrh	r3, [r4, #26]
 800c5b2:	4413      	add	r3, r2
 800c5b4:	8363      	strh	r3, [r4, #26]
 800c5b6:	b007      	add	sp, #28
 800c5b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5bc:	2300      	movs	r3, #0
 800c5be:	4611      	mov	r1, r2
 800c5c0:	4620      	mov	r0, r4
 800c5c2:	f7ff ff42 	bl	800c44a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c5c6:	e76e      	b.n	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c5c8:	4563      	cmp	r3, ip
 800c5ca:	dd14      	ble.n	800c5f6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800c5cc:	9b02      	ldr	r3, [sp, #8]
 800c5ce:	b113      	cbz	r3, 800c5d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800c5d0:	2301      	movs	r3, #1
 800c5d2:	460a      	mov	r2, r1
 800c5d4:	e783      	b.n	800c4de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800c5d6:	9b01      	ldr	r3, [sp, #4]
 800c5d8:	2b00      	cmp	r3, #0
 800c5da:	f43f af64 	beq.w	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c5de:	2800      	cmp	r0, #0
 800c5e0:	f47f af61 	bne.w	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c5e4:	b116      	cbz	r6, 800c5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800c5e6:	2301      	movs	r3, #1
 800c5e8:	462a      	mov	r2, r5
 800c5ea:	e779      	b.n	800c4e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800c5ec:	8a63      	ldrh	r3, [r4, #18]
 800c5ee:	2b00      	cmp	r3, #0
 800c5f0:	f43f af59 	beq.w	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c5f4:	e7df      	b.n	800c5b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c5f6:	2800      	cmp	r0, #0
 800c5f8:	f47f af55 	bne.w	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c5fc:	2e00      	cmp	r6, #0
 800c5fe:	f43f af52 	beq.w	800c4a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c602:	2301      	movs	r3, #1
 800c604:	462a      	mov	r2, r5
 800c606:	e7db      	b.n	800c5c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800c608 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c608:	b530      	push	{r4, r5, lr}
 800c60a:	4605      	mov	r5, r0
 800c60c:	b08b      	sub	sp, #44	; 0x2c
 800c60e:	b191      	cbz	r1, 800c636 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800c610:	e9cd 3100 	strd	r3, r1, [sp]
 800c614:	4613      	mov	r3, r2
 800c616:	4601      	mov	r1, r0
 800c618:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800c61c:	a802      	add	r0, sp, #8
 800c61e:	f7ff fd0d 	bl	800c03c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c622:	2401      	movs	r4, #1
 800c624:	2100      	movs	r1, #0
 800c626:	a802      	add	r0, sp, #8
 800c628:	f7ff ff1f 	bl	800c46a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c62c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c630:	b163      	cbz	r3, 800c64c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c632:	3401      	adds	r4, #1
 800c634:	e7f6      	b.n	800c624 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800c636:	f002 f9f5 	bl	800ea24 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c63a:	2401      	movs	r4, #1
 800c63c:	280a      	cmp	r0, #10
 800c63e:	4628      	mov	r0, r5
 800c640:	bf08      	it	eq
 800c642:	3401      	addeq	r4, #1
 800c644:	f002 f9ee 	bl	800ea24 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c648:	2800      	cmp	r0, #0
 800c64a:	d1f7      	bne.n	800c63c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c64c:	b2a0      	uxth	r0, r4
 800c64e:	b00b      	add	sp, #44	; 0x2c
 800c650:	bd30      	pop	{r4, r5, pc}

0800c652 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c652:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c656:	b0db      	sub	sp, #364	; 0x16c
 800c658:	4689      	mov	r9, r1
 800c65a:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800c65e:	900a      	str	r0, [sp, #40]	; 0x28
 800c660:	461c      	mov	r4, r3
 800c662:	f1ba 0f00 	cmp.w	sl, #0
 800c666:	f000 80a5 	beq.w	800c7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c66a:	681b      	ldr	r3, [r3, #0]
 800c66c:	2b00      	cmp	r3, #0
 800c66e:	f000 80a1 	beq.w	800c7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c672:	7ba3      	ldrb	r3, [r4, #14]
 800c674:	2b00      	cmp	r3, #0
 800c676:	f000 809d 	beq.w	800c7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c67a:	6810      	ldr	r0, [r2, #0]
 800c67c:	6851      	ldr	r1, [r2, #4]
 800c67e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800c682:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800c686:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800c68a:	4643      	mov	r3, r8
 800c68c:	c303      	stmia	r3!, {r0, r1}
 800c68e:	2500      	movs	r5, #0
 800c690:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800c694:	79a2      	ldrb	r2, [r4, #6]
 800c696:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c69a:	a90e      	add	r1, sp, #56	; 0x38
 800c69c:	4640      	mov	r0, r8
 800c69e:	950e      	str	r5, [sp, #56]	; 0x38
 800c6a0:	f7ff fd42 	bl	800c128 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c6a4:	a90e      	add	r1, sp, #56	; 0x38
 800c6a6:	4608      	mov	r0, r1
 800c6a8:	79a2      	ldrb	r2, [r4, #6]
 800c6aa:	af18      	add	r7, sp, #96	; 0x60
 800c6ac:	f7ff fd3c 	bl	800c128 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c6b0:	4638      	mov	r0, r7
 800c6b2:	f001 fd80 	bl	800e1b6 <_ZN8touchgfx12TextProviderC1Ev>
 800c6b6:	6820      	ldr	r0, [r4, #0]
 800c6b8:	6803      	ldr	r3, [r0, #0]
 800c6ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c6bc:	4798      	blx	r3
 800c6be:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800c6c0:	4603      	mov	r3, r0
 800c6c2:	4651      	mov	r1, sl
 800c6c4:	4638      	mov	r0, r7
 800c6c6:	f001 fdbb 	bl	800e240 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c6ca:	6820      	ldr	r0, [r4, #0]
 800c6cc:	7923      	ldrb	r3, [r4, #4]
 800c6ce:	9308      	str	r3, [sp, #32]
 800c6d0:	6803      	ldr	r3, [r0, #0]
 800c6d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c6d4:	4798      	blx	r3
 800c6d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c6da:	181e      	adds	r6, r3, r0
 800c6dc:	42ae      	cmp	r6, r5
 800c6de:	dd06      	ble.n	800c6ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800c6e0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800c6e4:	4282      	cmp	r2, r0
 800c6e6:	bfa4      	itt	ge
 800c6e8:	189d      	addge	r5, r3, r2
 800c6ea:	fb95 f5f6 	sdivge	r5, r5, r6
 800c6ee:	a82e      	add	r0, sp, #184	; 0xb8
 800c6f0:	f001 fd61 	bl	800e1b6 <_ZN8touchgfx12TextProviderC1Ev>
 800c6f4:	7c23      	ldrb	r3, [r4, #16]
 800c6f6:	b14b      	cbz	r3, 800c70c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800c6f8:	6820      	ldr	r0, [r4, #0]
 800c6fa:	6803      	ldr	r3, [r0, #0]
 800c6fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c6fe:	4798      	blx	r3
 800c700:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800c702:	4603      	mov	r3, r0
 800c704:	4651      	mov	r1, sl
 800c706:	a82e      	add	r0, sp, #184	; 0xb8
 800c708:	f001 fd9a 	bl	800e240 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c70c:	7c21      	ldrb	r1, [r4, #16]
 800c70e:	9101      	str	r1, [sp, #4]
 800c710:	6821      	ldr	r1, [r4, #0]
 800c712:	7963      	ldrb	r3, [r4, #5]
 800c714:	9100      	str	r1, [sp, #0]
 800c716:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800c71a:	a92e      	add	r1, sp, #184	; 0xb8
 800c71c:	a810      	add	r0, sp, #64	; 0x40
 800c71e:	f7ff fc8d 	bl	800c03c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c722:	7c23      	ldrb	r3, [r4, #16]
 800c724:	b9bb      	cbnz	r3, 800c756 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800c726:	fa1f fa86 	uxth.w	sl, r6
 800c72a:	2d00      	cmp	r5, #0
 800c72c:	dd45      	ble.n	800c7ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800c72e:	4638      	mov	r0, r7
 800c730:	f002 f978 	bl	800ea24 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c734:	2800      	cmp	r0, #0
 800c736:	d03d      	beq.n	800c7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c738:	280a      	cmp	r0, #10
 800c73a:	d1f6      	bne.n	800c72a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800c73c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c740:	4453      	add	r3, sl
 800c742:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c746:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c74a:	eba3 030a 	sub.w	r3, r3, sl
 800c74e:	3d01      	subs	r5, #1
 800c750:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c754:	e7e9      	b.n	800c72a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800c756:	0073      	lsls	r3, r6, #1
 800c758:	9309      	str	r3, [sp, #36]	; 0x24
 800c75a:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800c75e:	fa1f fa86 	uxth.w	sl, r6
 800c762:	2d00      	cmp	r5, #0
 800c764:	dd29      	ble.n	800c7ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800c766:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800c76a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c76c:	428b      	cmp	r3, r1
 800c76e:	bfd4      	ite	le
 800c770:	2100      	movle	r1, #0
 800c772:	2101      	movgt	r1, #1
 800c774:	a810      	add	r0, sp, #64	; 0x40
 800c776:	f7ff fe78 	bl	800c46a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c77a:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800c77e:	3b01      	subs	r3, #1
 800c780:	b29b      	uxth	r3, r3
 800c782:	455b      	cmp	r3, fp
 800c784:	930b      	str	r3, [sp, #44]	; 0x2c
 800c786:	d005      	beq.n	800c794 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800c788:	7961      	ldrb	r1, [r4, #5]
 800c78a:	4638      	mov	r0, r7
 800c78c:	f7f7 f802 	bl	8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c790:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c792:	e7f4      	b.n	800c77e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800c794:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c798:	4453      	add	r3, sl
 800c79a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c79e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c7a2:	eba3 030a 	sub.w	r3, r3, sl
 800c7a6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c7aa:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c7ae:	3d01      	subs	r5, #1
 800c7b0:	2b00      	cmp	r3, #0
 800c7b2:	d1d6      	bne.n	800c762 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800c7b4:	b05b      	add	sp, #364	; 0x16c
 800c7b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c7ba:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800c7be:	ad44      	add	r5, sp, #272	; 0x110
 800c7c0:	f04f 0b00 	mov.w	fp, #0
 800c7c4:	7c23      	ldrb	r3, [r4, #16]
 800c7c6:	2b00      	cmp	r3, #0
 800c7c8:	d067      	beq.n	800c89a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800c7ca:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800c7ce:	458a      	cmp	sl, r1
 800c7d0:	bfd4      	ite	le
 800c7d2:	2100      	movle	r1, #0
 800c7d4:	2101      	movgt	r1, #1
 800c7d6:	a810      	add	r0, sp, #64	; 0x40
 800c7d8:	f7ff fe47 	bl	800c46a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c7dc:	9b08      	ldr	r3, [sp, #32]
 800c7de:	2b00      	cmp	r3, #0
 800c7e0:	d056      	beq.n	800c890 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c7e2:	7c23      	ldrb	r3, [r4, #16]
 800c7e4:	9309      	str	r3, [sp, #36]	; 0x24
 800c7e6:	2258      	movs	r2, #88	; 0x58
 800c7e8:	4639      	mov	r1, r7
 800c7ea:	4628      	mov	r0, r5
 800c7ec:	f00e f87a 	bl	801a8e4 <memcpy>
 800c7f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c7f2:	2b00      	cmp	r3, #0
 800c7f4:	d059      	beq.n	800c8aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800c7f6:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800c7fa:	7922      	ldrb	r2, [r4, #4]
 800c7fc:	2a01      	cmp	r2, #1
 800c7fe:	d13d      	bne.n	800c87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800c800:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800c804:	1ac0      	subs	r0, r0, r3
 800c806:	2302      	movs	r3, #2
 800c808:	fb90 f0f3 	sdiv	r0, r0, r3
 800c80c:	b200      	sxth	r0, r0
 800c80e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c812:	4418      	add	r0, r3
 800c814:	7c23      	ldrb	r3, [r4, #16]
 800c816:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800c81a:	2b00      	cmp	r3, #0
 800c81c:	d03a      	beq.n	800c894 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800c81e:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800c822:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800c826:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800c82a:	9500      	str	r5, [sp, #0]
 800c82c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c830:	e9cd b703 	strd	fp, r7, [sp, #12]
 800c834:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800c838:	464a      	mov	r2, r9
 800c83a:	2100      	movs	r1, #0
 800c83c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c83e:	f7ff fca4 	bl	800c18a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c842:	2800      	cmp	r0, #0
 800c844:	d1b6      	bne.n	800c7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c846:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800c84a:	b2b2      	uxth	r2, r6
 800c84c:	4611      	mov	r1, r2
 800c84e:	4413      	add	r3, r2
 800c850:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800c854:	1a52      	subs	r2, r2, r1
 800c856:	7c21      	ldrb	r1, [r4, #16]
 800c858:	b21b      	sxth	r3, r3
 800c85a:	b212      	sxth	r2, r2
 800c85c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800c860:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800c864:	b109      	cbz	r1, 800c86a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800c866:	42b2      	cmp	r2, r6
 800c868:	dba4      	blt.n	800c7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c86a:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800c86e:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800c872:	440a      	add	r2, r1
 800c874:	b212      	sxth	r2, r2
 800c876:	4293      	cmp	r3, r2
 800c878:	dda4      	ble.n	800c7c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800c87a:	e79b      	b.n	800c7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800c87c:	2a02      	cmp	r2, #2
 800c87e:	d105      	bne.n	800c88c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800c880:	7be2      	ldrb	r2, [r4, #15]
 800c882:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800c886:	1a80      	subs	r0, r0, r2
 800c888:	1ac0      	subs	r0, r0, r3
 800c88a:	e7bf      	b.n	800c80c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800c88c:	2000      	movs	r0, #0
 800c88e:	e7be      	b.n	800c80e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800c890:	7be0      	ldrb	r0, [r4, #15]
 800c892:	e7bc      	b.n	800c80e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800c894:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c898:	e7c3      	b.n	800c822 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800c89a:	9b08      	ldr	r3, [sp, #32]
 800c89c:	2b00      	cmp	r3, #0
 800c89e:	d0f7      	beq.n	800c890 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800c8a0:	2258      	movs	r2, #88	; 0x58
 800c8a2:	4639      	mov	r1, r7
 800c8a4:	4628      	mov	r0, r5
 800c8a6:	f00e f81d 	bl	801a8e4 <memcpy>
 800c8aa:	2300      	movs	r3, #0
 800c8ac:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c8b0:	6821      	ldr	r1, [r4, #0]
 800c8b2:	4628      	mov	r0, r5
 800c8b4:	f7ff fbfc 	bl	800c0b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c8b8:	b203      	sxth	r3, r0
 800c8ba:	e79e      	b.n	800c7fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800c8bc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c8bc:	b510      	push	{r4, lr}
 800c8be:	2b02      	cmp	r3, #2
 800c8c0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c8c4:	d00b      	beq.n	800c8de <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c8c6:	2b03      	cmp	r3, #3
 800c8c8:	d00e      	beq.n	800c8e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c8ca:	2b01      	cmp	r3, #1
 800c8cc:	d001      	beq.n	800c8d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c8ce:	1860      	adds	r0, r4, r1
 800c8d0:	bd10      	pop	{r4, pc}
 800c8d2:	8880      	ldrh	r0, [r0, #4]
 800c8d4:	4420      	add	r0, r4
 800c8d6:	b200      	sxth	r0, r0
 800c8d8:	1a80      	subs	r0, r0, r2
 800c8da:	3801      	subs	r0, #1
 800c8dc:	e7f8      	b.n	800c8d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c8de:	8880      	ldrh	r0, [r0, #4]
 800c8e0:	4420      	add	r0, r4
 800c8e2:	b200      	sxth	r0, r0
 800c8e4:	1a40      	subs	r0, r0, r1
 800c8e6:	e7f8      	b.n	800c8da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c8e8:	18a0      	adds	r0, r4, r2
 800c8ea:	e7f1      	b.n	800c8d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800c8ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c8ec:	b510      	push	{r4, lr}
 800c8ee:	2b02      	cmp	r3, #2
 800c8f0:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c8f4:	d006      	beq.n	800c904 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800c8f6:	2b03      	cmp	r3, #3
 800c8f8:	d00a      	beq.n	800c910 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c8fa:	2b01      	cmp	r3, #1
 800c8fc:	bf14      	ite	ne
 800c8fe:	18a0      	addne	r0, r4, r2
 800c900:	1860      	addeq	r0, r4, r1
 800c902:	bd10      	pop	{r4, pc}
 800c904:	88c0      	ldrh	r0, [r0, #6]
 800c906:	4420      	add	r0, r4
 800c908:	b200      	sxth	r0, r0
 800c90a:	1a80      	subs	r0, r0, r2
 800c90c:	3801      	subs	r0, #1
 800c90e:	e7f8      	b.n	800c902 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800c910:	88c0      	ldrh	r0, [r0, #6]
 800c912:	4420      	add	r0, r4
 800c914:	b200      	sxth	r0, r0
 800c916:	1a40      	subs	r0, r0, r1
 800c918:	e7f8      	b.n	800c90c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800c91c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c91c:	4b01      	ldr	r3, [pc, #4]	; (800c924 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c91e:	2200      	movs	r2, #0
 800c920:	601a      	str	r2, [r3, #0]
 800c922:	4770      	bx	lr
 800c924:	200123c4 	.word	0x200123c4

0800c928 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800c928:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c92a:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800c92e:	1e05      	subs	r5, r0, #0
 800c930:	bfba      	itte	lt
 800c932:	f04f 37ff 	movlt.w	r7, #4294967295
 800c936:	426d      	neglt	r5, r5
 800c938:	2701      	movge	r7, #1
 800c93a:	f1be 0f00 	cmp.w	lr, #0
 800c93e:	bfb8      	it	lt
 800c940:	f1ce 0e00 	rsblt	lr, lr, #0
 800c944:	f04f 0601 	mov.w	r6, #1
 800c948:	fa4e f001 	asr.w	r0, lr, r1
 800c94c:	fa06 f101 	lsl.w	r1, r6, r1
 800c950:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800c954:	f101 31ff 	add.w	r1, r1, #4294967295
 800c958:	ea01 010e 	and.w	r1, r1, lr
 800c95c:	bfb8      	it	lt
 800c95e:	427f      	neglt	r7, r7
 800c960:	434d      	muls	r5, r1
 800c962:	2c00      	cmp	r4, #0
 800c964:	f8dc 1000 	ldr.w	r1, [ip]
 800c968:	bfb8      	it	lt
 800c96a:	4264      	neglt	r4, r4
 800c96c:	fb03 1300 	mla	r3, r3, r0, r1
 800c970:	fb95 f1f4 	sdiv	r1, r5, r4
 800c974:	fb04 5511 	mls	r5, r4, r1, r5
 800c978:	441d      	add	r5, r3
 800c97a:	fb95 f3f4 	sdiv	r3, r5, r4
 800c97e:	fb04 5413 	mls	r4, r4, r3, r5
 800c982:	4419      	add	r1, r3
 800c984:	bfb8      	it	lt
 800c986:	427f      	neglt	r7, r7
 800c988:	fb02 1000 	mla	r0, r2, r0, r1
 800c98c:	f8cc 4000 	str.w	r4, [ip]
 800c990:	4378      	muls	r0, r7
 800c992:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c994 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c994:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c998:	4c24      	ldr	r4, [pc, #144]	; (800ca2c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800c99a:	6807      	ldr	r7, [r0, #0]
 800c99c:	69a3      	ldr	r3, [r4, #24]
 800c99e:	b086      	sub	sp, #24
 800c9a0:	4605      	mov	r5, r0
 800c9a2:	b92b      	cbnz	r3, 800c9b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800c9a4:	6840      	ldr	r0, [r0, #4]
 800c9a6:	e9c5 7000 	strd	r7, r0, [r5]
 800c9aa:	b006      	add	sp, #24
 800c9ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c9b0:	68a2      	ldr	r2, [r4, #8]
 800c9b2:	6820      	ldr	r0, [r4, #0]
 800c9b4:	ae06      	add	r6, sp, #24
 800c9b6:	f04f 0802 	mov.w	r8, #2
 800c9ba:	fb93 f1f8 	sdiv	r1, r3, r8
 800c9be:	440a      	add	r2, r1
 800c9c0:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c9c4:	69e1      	ldr	r1, [r4, #28]
 800c9c6:	9700      	str	r7, [sp, #0]
 800c9c8:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800c9cc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c9ce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c9d0:	f7ff ffaa 	bl	800c928 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800c9d4:	69a3      	ldr	r3, [r4, #24]
 800c9d6:	9301      	str	r3, [sp, #4]
 800c9d8:	686b      	ldr	r3, [r5, #4]
 800c9da:	9300      	str	r3, [sp, #0]
 800c9dc:	4607      	mov	r7, r0
 800c9de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c9e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9e2:	6a21      	ldr	r1, [r4, #32]
 800c9e4:	9602      	str	r6, [sp, #8]
 800c9e6:	6860      	ldr	r0, [r4, #4]
 800c9e8:	f7ff ff9e 	bl	800c928 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800c9ec:	6963      	ldr	r3, [r4, #20]
 800c9ee:	69a2      	ldr	r2, [r4, #24]
 800c9f0:	fb92 f8f8 	sdiv	r8, r2, r8
 800c9f4:	4443      	add	r3, r8
 800c9f6:	9305      	str	r3, [sp, #20]
 800c9f8:	682b      	ldr	r3, [r5, #0]
 800c9fa:	9300      	str	r3, [sp, #0]
 800c9fc:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800ca00:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ca02:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800ca04:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ca06:	4407      	add	r7, r0
 800ca08:	68e0      	ldr	r0, [r4, #12]
 800ca0a:	f7ff ff8d 	bl	800c928 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ca0e:	69a3      	ldr	r3, [r4, #24]
 800ca10:	9301      	str	r3, [sp, #4]
 800ca12:	686b      	ldr	r3, [r5, #4]
 800ca14:	9300      	str	r3, [sp, #0]
 800ca16:	4680      	mov	r8, r0
 800ca18:	9602      	str	r6, [sp, #8]
 800ca1a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800ca1c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ca1e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800ca20:	6920      	ldr	r0, [r4, #16]
 800ca22:	f7ff ff81 	bl	800c928 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ca26:	4440      	add	r0, r8
 800ca28:	e7bd      	b.n	800c9a6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800ca2a:	bf00      	nop
 800ca2c:	200123c8 	.word	0x200123c8

0800ca30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ca30:	b510      	push	{r4, lr}
 800ca32:	4b07      	ldr	r3, [pc, #28]	; (800ca50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ca34:	781b      	ldrb	r3, [r3, #0]
 800ca36:	2b01      	cmp	r3, #1
 800ca38:	d108      	bne.n	800ca4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ca3a:	4b06      	ldr	r3, [pc, #24]	; (800ca54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ca3c:	880c      	ldrh	r4, [r1, #0]
 800ca3e:	881b      	ldrh	r3, [r3, #0]
 800ca40:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ca44:	3b01      	subs	r3, #1
 800ca46:	1b1b      	subs	r3, r3, r4
 800ca48:	8003      	strh	r3, [r0, #0]
 800ca4a:	800a      	strh	r2, [r1, #0]
 800ca4c:	bd10      	pop	{r4, pc}
 800ca4e:	bf00      	nop
 800ca50:	200123b4 	.word	0x200123b4
 800ca54:	200123b8 	.word	0x200123b8

0800ca58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ca58:	b510      	push	{r4, lr}
 800ca5a:	4b0a      	ldr	r3, [pc, #40]	; (800ca84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ca5c:	781b      	ldrb	r3, [r3, #0]
 800ca5e:	2b01      	cmp	r3, #1
 800ca60:	d10e      	bne.n	800ca80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ca62:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ca66:	8843      	ldrh	r3, [r0, #2]
 800ca68:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ca6c:	8044      	strh	r4, [r0, #2]
 800ca6e:	18ca      	adds	r2, r1, r3
 800ca70:	4b05      	ldr	r3, [pc, #20]	; (800ca88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ca72:	881b      	ldrh	r3, [r3, #0]
 800ca74:	1a9b      	subs	r3, r3, r2
 800ca76:	8003      	strh	r3, [r0, #0]
 800ca78:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ca7c:	80c3      	strh	r3, [r0, #6]
 800ca7e:	8081      	strh	r1, [r0, #4]
 800ca80:	bd10      	pop	{r4, pc}
 800ca82:	bf00      	nop
 800ca84:	200123b4 	.word	0x200123b4
 800ca88:	200123b0 	.word	0x200123b0

0800ca8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ca8c:	b510      	push	{r4, lr}
 800ca8e:	4b07      	ldr	r3, [pc, #28]	; (800caac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800ca90:	781b      	ldrb	r3, [r3, #0]
 800ca92:	2b01      	cmp	r3, #1
 800ca94:	d108      	bne.n	800caa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800ca96:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ca9a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ca9e:	8003      	strh	r3, [r0, #0]
 800caa0:	8893      	ldrh	r3, [r2, #4]
 800caa2:	3b01      	subs	r3, #1
 800caa4:	1b1b      	subs	r3, r3, r4
 800caa6:	800b      	strh	r3, [r1, #0]
 800caa8:	bd10      	pop	{r4, pc}
 800caaa:	bf00      	nop
 800caac:	200123b4 	.word	0x200123b4

0800cab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cab0:	b513      	push	{r0, r1, r4, lr}
 800cab2:	4b08      	ldr	r3, [pc, #32]	; (800cad4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cab4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cab8:	4b07      	ldr	r3, [pc, #28]	; (800cad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800caba:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cabe:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cac2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cac6:	2400      	movs	r4, #0
 800cac8:	466a      	mov	r2, sp
 800caca:	9400      	str	r4, [sp, #0]
 800cacc:	f7ff ffde 	bl	800ca8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cad0:	b002      	add	sp, #8
 800cad2:	bd10      	pop	{r4, pc}
 800cad4:	200123b0 	.word	0x200123b0
 800cad8:	200123b2 	.word	0x200123b2

0800cadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cadc:	b510      	push	{r4, lr}
 800cade:	4b0a      	ldr	r3, [pc, #40]	; (800cb08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cae0:	781b      	ldrb	r3, [r3, #0]
 800cae2:	2b01      	cmp	r3, #1
 800cae4:	460a      	mov	r2, r1
 800cae6:	d10d      	bne.n	800cb04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cae8:	8881      	ldrh	r1, [r0, #4]
 800caea:	8803      	ldrh	r3, [r0, #0]
 800caec:	440b      	add	r3, r1
 800caee:	4601      	mov	r1, r0
 800caf0:	3b01      	subs	r3, #1
 800caf2:	f821 3b02 	strh.w	r3, [r1], #2
 800caf6:	f7ff ffc9 	bl	800ca8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cafa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cafe:	88c2      	ldrh	r2, [r0, #6]
 800cb00:	8082      	strh	r2, [r0, #4]
 800cb02:	80c3      	strh	r3, [r0, #6]
 800cb04:	bd10      	pop	{r4, pc}
 800cb06:	bf00      	nop
 800cb08:	200123b4 	.word	0x200123b4

0800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cb0c:	b507      	push	{r0, r1, r2, lr}
 800cb0e:	4b09      	ldr	r3, [pc, #36]	; (800cb34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cb10:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb14:	4b08      	ldr	r3, [pc, #32]	; (800cb38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800cb16:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cb1a:	2100      	movs	r1, #0
 800cb1c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cb20:	9100      	str	r1, [sp, #0]
 800cb22:	4669      	mov	r1, sp
 800cb24:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cb28:	f7ff ffd8 	bl	800cadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800cb2c:	b003      	add	sp, #12
 800cb2e:	f85d fb04 	ldr.w	pc, [sp], #4
 800cb32:	bf00      	nop
 800cb34:	200123b0 	.word	0x200123b0
 800cb38:	200123b2 	.word	0x200123b2

0800cb3c <_ZN8touchgfx11Application13requestRedrawEv>:
 800cb3c:	4b06      	ldr	r3, [pc, #24]	; (800cb58 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800cb3e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb42:	4b06      	ldr	r3, [pc, #24]	; (800cb5c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800cb44:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800cb48:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cb4c:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800cb50:	2100      	movs	r1, #0
 800cb52:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800cb56:	4770      	bx	lr
 800cb58:	200123b0 	.word	0x200123b0
 800cb5c:	200123b2 	.word	0x200123b2

0800cb60 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cb60:	4b03      	ldr	r3, [pc, #12]	; (800cb70 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cb62:	6818      	ldr	r0, [r3, #0]
 800cb64:	b110      	cbz	r0, 800cb6c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cb66:	6803      	ldr	r3, [r0, #0]
 800cb68:	699b      	ldr	r3, [r3, #24]
 800cb6a:	4718      	bx	r3
 800cb6c:	4770      	bx	lr
 800cb6e:	bf00      	nop
 800cb70:	20012418 	.word	0x20012418

0800cb74 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cb74:	4770      	bx	lr
	...

0800cb78 <_ZN8touchgfx11Application4drawEv>:
 800cb78:	b507      	push	{r0, r1, r2, lr}
 800cb7a:	4b09      	ldr	r3, [pc, #36]	; (800cba0 <_ZN8touchgfx11Application4drawEv+0x28>)
 800cb7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb80:	4b08      	ldr	r3, [pc, #32]	; (800cba4 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800cb82:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cb86:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cb8a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cb8e:	6803      	ldr	r3, [r0, #0]
 800cb90:	2100      	movs	r1, #0
 800cb92:	9100      	str	r1, [sp, #0]
 800cb94:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cb96:	4669      	mov	r1, sp
 800cb98:	4798      	blx	r3
 800cb9a:	b003      	add	sp, #12
 800cb9c:	f85d fb04 	ldr.w	pc, [sp], #4
 800cba0:	200123b0 	.word	0x200123b0
 800cba4:	200123b2 	.word	0x200123b2

0800cba8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800cba8:	4b03      	ldr	r3, [pc, #12]	; (800cbb8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800cbaa:	6818      	ldr	r0, [r3, #0]
 800cbac:	b110      	cbz	r0, 800cbb4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800cbae:	6803      	ldr	r3, [r0, #0]
 800cbb0:	69db      	ldr	r3, [r3, #28]
 800cbb2:	4718      	bx	r3
 800cbb4:	4770      	bx	lr
 800cbb6:	bf00      	nop
 800cbb8:	20012418 	.word	0x20012418

0800cbbc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800cbbc:	4b03      	ldr	r3, [pc, #12]	; (800cbcc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800cbbe:	6818      	ldr	r0, [r3, #0]
 800cbc0:	b110      	cbz	r0, 800cbc8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800cbc2:	6803      	ldr	r3, [r0, #0]
 800cbc4:	6a1b      	ldr	r3, [r3, #32]
 800cbc6:	4718      	bx	r3
 800cbc8:	4770      	bx	lr
 800cbca:	bf00      	nop
 800cbcc:	20012418 	.word	0x20012418

0800cbd0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800cbd0:	4b03      	ldr	r3, [pc, #12]	; (800cbe0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800cbd2:	6818      	ldr	r0, [r3, #0]
 800cbd4:	b110      	cbz	r0, 800cbdc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800cbd6:	6803      	ldr	r3, [r0, #0]
 800cbd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cbda:	4718      	bx	r3
 800cbdc:	4770      	bx	lr
 800cbde:	bf00      	nop
 800cbe0:	20012418 	.word	0x20012418

0800cbe4 <_ZN8touchgfx11Application15handleTickEventEv>:
 800cbe4:	b570      	push	{r4, r5, r6, lr}
 800cbe6:	4d34      	ldr	r5, [pc, #208]	; (800ccb8 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800cbe8:	4604      	mov	r4, r0
 800cbea:	6828      	ldr	r0, [r5, #0]
 800cbec:	b140      	cbz	r0, 800cc00 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cbee:	7a03      	ldrb	r3, [r0, #8]
 800cbf0:	b933      	cbnz	r3, 800cc00 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cbf2:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800cbf6:	6803      	ldr	r3, [r0, #0]
 800cbf8:	689b      	ldr	r3, [r3, #8]
 800cbfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cbfe:	4718      	bx	r3
 800cc00:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800cc04:	b97b      	cbnz	r3, 800cc26 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cc06:	b170      	cbz	r0, 800cc26 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cc08:	7a03      	ldrb	r3, [r0, #8]
 800cc0a:	b163      	cbz	r3, 800cc26 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cc0c:	4b2b      	ldr	r3, [pc, #172]	; (800ccbc <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800cc0e:	6818      	ldr	r0, [r3, #0]
 800cc10:	b110      	cbz	r0, 800cc18 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800cc12:	6803      	ldr	r3, [r0, #0]
 800cc14:	691b      	ldr	r3, [r3, #16]
 800cc16:	4798      	blx	r3
 800cc18:	6828      	ldr	r0, [r5, #0]
 800cc1a:	6803      	ldr	r3, [r0, #0]
 800cc1c:	68db      	ldr	r3, [r3, #12]
 800cc1e:	4798      	blx	r3
 800cc20:	2301      	movs	r3, #1
 800cc22:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800cc26:	2500      	movs	r5, #0
 800cc28:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800cc2c:	42a8      	cmp	r0, r5
 800cc2e:	dd0c      	ble.n	800cc4a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800cc30:	1963      	adds	r3, r4, r5
 800cc32:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800cc36:	b132      	cbz	r2, 800cc46 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800cc38:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800cc3c:	4413      	add	r3, r2
 800cc3e:	6858      	ldr	r0, [r3, #4]
 800cc40:	6803      	ldr	r3, [r0, #0]
 800cc42:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800cc44:	4798      	blx	r3
 800cc46:	3501      	adds	r5, #1
 800cc48:	e7ee      	b.n	800cc28 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800cc4a:	2300      	movs	r3, #0
 800cc4c:	461a      	mov	r2, r3
 800cc4e:	4298      	cmp	r0, r3
 800cc50:	d114      	bne.n	800cc7c <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800cc52:	1d25      	adds	r5, r4, #4
 800cc54:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800cc58:	1e48      	subs	r0, r1, #1
 800cc5a:	b280      	uxth	r0, r0
 800cc5c:	4291      	cmp	r1, r2
 800cc5e:	dd24      	ble.n	800ccaa <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800cc60:	4288      	cmp	r0, r1
 800cc62:	d2fb      	bcs.n	800cc5c <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800cc64:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800cc68:	3304      	adds	r3, #4
 800cc6a:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800cc6e:	428b      	cmp	r3, r1
 800cc70:	d018      	beq.n	800cca4 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800cc72:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800cc76:	f843 6c04 	str.w	r6, [r3, #-4]
 800cc7a:	e7f8      	b.n	800cc6e <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800cc7c:	18e1      	adds	r1, r4, r3
 800cc7e:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800cc82:	b16d      	cbz	r5, 800cca0 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800cc84:	429a      	cmp	r2, r3
 800cc86:	d00a      	beq.n	800cc9e <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800cc88:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800cc8c:	4431      	add	r1, r6
 800cc8e:	684e      	ldr	r6, [r1, #4]
 800cc90:	b291      	uxth	r1, r2
 800cc92:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800cc96:	604e      	str	r6, [r1, #4]
 800cc98:	18a1      	adds	r1, r4, r2
 800cc9a:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800cc9e:	3201      	adds	r2, #1
 800cca0:	3301      	adds	r3, #1
 800cca2:	e7d4      	b.n	800cc4e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800cca4:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800cca8:	e7d4      	b.n	800cc54 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800ccaa:	4b04      	ldr	r3, [pc, #16]	; (800ccbc <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800ccac:	6818      	ldr	r0, [r3, #0]
 800ccae:	b110      	cbz	r0, 800ccb6 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800ccb0:	6803      	ldr	r3, [r0, #0]
 800ccb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ccb4:	e7a1      	b.n	800cbfa <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800ccb6:	bd70      	pop	{r4, r5, r6, pc}
 800ccb8:	2001241c 	.word	0x2001241c
 800ccbc:	20012418 	.word	0x20012418

0800ccc0 <_ZN8touchgfx11ApplicationD1Ev>:
 800ccc0:	4770      	bx	lr

0800ccc2 <_ZN8touchgfx11ApplicationD0Ev>:
 800ccc2:	b510      	push	{r4, lr}
 800ccc4:	f44f 719c 	mov.w	r1, #312	; 0x138
 800ccc8:	4604      	mov	r4, r0
 800ccca:	f00d fd61 	bl	801a790 <_ZdlPvj>
 800ccce:	4620      	mov	r0, r4
 800ccd0:	bd10      	pop	{r4, pc}
	...

0800ccd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ccd4:	b570      	push	{r4, r5, r6, lr}
 800ccd6:	4606      	mov	r6, r0
 800ccd8:	460c      	mov	r4, r1
 800ccda:	b929      	cbnz	r1, 800cce8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800ccdc:	4b0c      	ldr	r3, [pc, #48]	; (800cd10 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800ccde:	4a0d      	ldr	r2, [pc, #52]	; (800cd14 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800cce0:	480d      	ldr	r0, [pc, #52]	; (800cd18 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800cce2:	2166      	movs	r1, #102	; 0x66
 800cce4:	f00d fd80 	bl	801a7e8 <__assert_func>
 800cce8:	4d0c      	ldr	r5, [pc, #48]	; (800cd1c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800ccea:	2300      	movs	r3, #0
 800ccec:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ccf0:	6828      	ldr	r0, [r5, #0]
 800ccf2:	b110      	cbz	r0, 800ccfa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800ccf4:	6803      	ldr	r3, [r0, #0]
 800ccf6:	695b      	ldr	r3, [r3, #20]
 800ccf8:	4798      	blx	r3
 800ccfa:	602c      	str	r4, [r5, #0]
 800ccfc:	6823      	ldr	r3, [r4, #0]
 800ccfe:	4620      	mov	r0, r4
 800cd00:	68db      	ldr	r3, [r3, #12]
 800cd02:	4798      	blx	r3
 800cd04:	6833      	ldr	r3, [r6, #0]
 800cd06:	4630      	mov	r0, r6
 800cd08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cd0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd0e:	4718      	bx	r3
 800cd10:	0801ddd8 	.word	0x0801ddd8
 800cd14:	0801dea8 	.word	0x0801dea8
 800cd18:	0801dde2 	.word	0x0801dde2
 800cd1c:	20012418 	.word	0x20012418

0800cd20 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800cd20:	b510      	push	{r4, lr}
 800cd22:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cd26:	888a      	ldrh	r2, [r1, #4]
 800cd28:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cd2c:	4422      	add	r2, r4
 800cd2e:	b212      	sxth	r2, r2
 800cd30:	4293      	cmp	r3, r2
 800cd32:	da15      	bge.n	800cd60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cd34:	8882      	ldrh	r2, [r0, #4]
 800cd36:	4413      	add	r3, r2
 800cd38:	b21b      	sxth	r3, r3
 800cd3a:	429c      	cmp	r4, r3
 800cd3c:	da10      	bge.n	800cd60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cd3e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cd42:	88c9      	ldrh	r1, [r1, #6]
 800cd44:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cd48:	4419      	add	r1, r3
 800cd4a:	b209      	sxth	r1, r1
 800cd4c:	428a      	cmp	r2, r1
 800cd4e:	da07      	bge.n	800cd60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cd50:	88c0      	ldrh	r0, [r0, #6]
 800cd52:	4410      	add	r0, r2
 800cd54:	b200      	sxth	r0, r0
 800cd56:	4283      	cmp	r3, r0
 800cd58:	bfac      	ite	ge
 800cd5a:	2000      	movge	r0, #0
 800cd5c:	2001      	movlt	r0, #1
 800cd5e:	bd10      	pop	{r4, pc}
 800cd60:	2000      	movs	r0, #0
 800cd62:	e7fc      	b.n	800cd5e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cd64 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cd64:	b570      	push	{r4, r5, r6, lr}
 800cd66:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cd6a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800cd6e:	42ac      	cmp	r4, r5
 800cd70:	db18      	blt.n	800cda4 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cd72:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800cd76:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cd7a:	429a      	cmp	r2, r3
 800cd7c:	db12      	blt.n	800cda4 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cd7e:	8886      	ldrh	r6, [r0, #4]
 800cd80:	4435      	add	r5, r6
 800cd82:	888e      	ldrh	r6, [r1, #4]
 800cd84:	4434      	add	r4, r6
 800cd86:	b22d      	sxth	r5, r5
 800cd88:	b224      	sxth	r4, r4
 800cd8a:	42a5      	cmp	r5, r4
 800cd8c:	db0a      	blt.n	800cda4 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cd8e:	88c0      	ldrh	r0, [r0, #6]
 800cd90:	4418      	add	r0, r3
 800cd92:	88cb      	ldrh	r3, [r1, #6]
 800cd94:	441a      	add	r2, r3
 800cd96:	b200      	sxth	r0, r0
 800cd98:	b212      	sxth	r2, r2
 800cd9a:	4290      	cmp	r0, r2
 800cd9c:	bfb4      	ite	lt
 800cd9e:	2000      	movlt	r0, #0
 800cda0:	2001      	movge	r0, #1
 800cda2:	bd70      	pop	{r4, r5, r6, pc}
 800cda4:	2000      	movs	r0, #0
 800cda6:	e7fc      	b.n	800cda2 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800cda8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cda8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cdaa:	4604      	mov	r4, r0
 800cdac:	4608      	mov	r0, r1
 800cdae:	460d      	mov	r5, r1
 800cdb0:	f7fc ffe3 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800cdb4:	b978      	cbnz	r0, 800cdd6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cdb6:	4620      	mov	r0, r4
 800cdb8:	f7fc ffdf 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800cdbc:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cdc0:	b150      	cbz	r0, 800cdd8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cdc2:	8026      	strh	r6, [r4, #0]
 800cdc4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cdc8:	8063      	strh	r3, [r4, #2]
 800cdca:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cdce:	80a3      	strh	r3, [r4, #4]
 800cdd0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cdd4:	80e3      	strh	r3, [r4, #6]
 800cdd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cdd8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cddc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cde0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cde4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cde8:	88ed      	ldrh	r5, [r5, #6]
 800cdea:	42b1      	cmp	r1, r6
 800cdec:	460f      	mov	r7, r1
 800cdee:	bfa8      	it	ge
 800cdf0:	4637      	movge	r7, r6
 800cdf2:	4293      	cmp	r3, r2
 800cdf4:	4618      	mov	r0, r3
 800cdf6:	4466      	add	r6, ip
 800cdf8:	bfa8      	it	ge
 800cdfa:	4610      	movge	r0, r2
 800cdfc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ce00:	8027      	strh	r7, [r4, #0]
 800ce02:	442a      	add	r2, r5
 800ce04:	88e5      	ldrh	r5, [r4, #6]
 800ce06:	8060      	strh	r0, [r4, #2]
 800ce08:	4461      	add	r1, ip
 800ce0a:	442b      	add	r3, r5
 800ce0c:	b236      	sxth	r6, r6
 800ce0e:	b209      	sxth	r1, r1
 800ce10:	b212      	sxth	r2, r2
 800ce12:	b21b      	sxth	r3, r3
 800ce14:	428e      	cmp	r6, r1
 800ce16:	bfac      	ite	ge
 800ce18:	ebc7 0106 	rsbge	r1, r7, r6
 800ce1c:	ebc7 0101 	rsblt	r1, r7, r1
 800ce20:	429a      	cmp	r2, r3
 800ce22:	bfac      	ite	ge
 800ce24:	ebc0 0202 	rsbge	r2, r0, r2
 800ce28:	ebc0 0203 	rsblt	r2, r0, r3
 800ce2c:	80a1      	strh	r1, [r4, #4]
 800ce2e:	80e2      	strh	r2, [r4, #6]
 800ce30:	e7d1      	b.n	800cdd6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ce34 <_ZN8touchgfx11Application11getInstanceEv>:
 800ce34:	4b01      	ldr	r3, [pc, #4]	; (800ce3c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ce36:	6818      	ldr	r0, [r3, #0]
 800ce38:	4770      	bx	lr
 800ce3a:	bf00      	nop
 800ce3c:	20012428 	.word	0x20012428

0800ce40 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800ce40:	2300      	movs	r3, #0
 800ce42:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ce46:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800ce4a:	30a8      	adds	r0, #168	; 0xa8
 800ce4c:	f802 3b01 	strb.w	r3, [r2], #1
 800ce50:	4282      	cmp	r2, r0
 800ce52:	d1fb      	bne.n	800ce4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800ce54:	4770      	bx	lr

0800ce56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ce56:	4603      	mov	r3, r0
 800ce58:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800ce5c:	2200      	movs	r2, #0
 800ce5e:	801a      	strh	r2, [r3, #0]
 800ce60:	805a      	strh	r2, [r3, #2]
 800ce62:	809a      	strh	r2, [r3, #4]
 800ce64:	80da      	strh	r2, [r3, #6]
 800ce66:	3308      	adds	r3, #8
 800ce68:	428b      	cmp	r3, r1
 800ce6a:	d1f8      	bne.n	800ce5e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ce6c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ce70:	4770      	bx	lr
	...

0800ce74 <_ZN8touchgfx11ApplicationC1Ev>:
 800ce74:	b570      	push	{r4, r5, r6, lr}
 800ce76:	4b1a      	ldr	r3, [pc, #104]	; (800cee0 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800ce78:	6003      	str	r3, [r0, #0]
 800ce7a:	2500      	movs	r5, #0
 800ce7c:	4604      	mov	r4, r0
 800ce7e:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800ce82:	30a8      	adds	r0, #168	; 0xa8
 800ce84:	f7ff ffe7 	bl	800ce56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ce88:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800ce8c:	f7ff ffe3 	bl	800ce56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ce90:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800ce94:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800ce98:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ce9c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800cea0:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800cea4:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800cea8:	490e      	ldr	r1, [pc, #56]	; (800cee4 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800ceaa:	480f      	ldr	r0, [pc, #60]	; (800cee8 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800ceac:	4e0f      	ldr	r6, [pc, #60]	; (800ceec <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ceae:	f00d fb3f 	bl	801a530 <CRC_Lock>
 800ceb2:	4b0f      	ldr	r3, [pc, #60]	; (800cef0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ceb4:	b158      	cbz	r0, 800cece <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800ceb6:	801d      	strh	r5, [r3, #0]
 800ceb8:	4a0e      	ldr	r2, [pc, #56]	; (800cef4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ceba:	2300      	movs	r3, #0
 800cebc:	6013      	str	r3, [r2, #0]
 800cebe:	4a0e      	ldr	r2, [pc, #56]	; (800cef8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800cec0:	6033      	str	r3, [r6, #0]
 800cec2:	4620      	mov	r0, r4
 800cec4:	6013      	str	r3, [r2, #0]
 800cec6:	f7ff ffbb 	bl	800ce40 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800ceca:	4620      	mov	r0, r4
 800cecc:	bd70      	pop	{r4, r5, r6, pc}
 800cece:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ced2:	2002      	movs	r0, #2
 800ced4:	801a      	strh	r2, [r3, #0]
 800ced6:	6030      	str	r0, [r6, #0]
 800ced8:	f000 fff0 	bl	800debc <_ZN8touchgfx6Screen4drawEv>
 800cedc:	e7ec      	b.n	800ceb8 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800cede:	bf00      	nop
 800cee0:	0801de6c 	.word	0x0801de6c
 800cee4:	b5e8b5cd 	.word	0xb5e8b5cd
 800cee8:	f407a5c2 	.word	0xf407a5c2
 800ceec:	20012418 	.word	0x20012418
 800cef0:	20000094 	.word	0x20000094
 800cef4:	20012428 	.word	0x20012428
 800cef8:	2001241c 	.word	0x2001241c

0800cefc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800cefc:	2300      	movs	r3, #0
 800cefe:	8003      	strh	r3, [r0, #0]
 800cf00:	8043      	strh	r3, [r0, #2]
 800cf02:	8083      	strh	r3, [r0, #4]
 800cf04:	80c3      	strh	r3, [r0, #6]
 800cf06:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800cf0a:	4293      	cmp	r3, r2
 800cf0c:	b530      	push	{r4, r5, lr}
 800cf0e:	d912      	bls.n	800cf36 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800cf10:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800cf14:	3b01      	subs	r3, #1
 800cf16:	6825      	ldr	r5, [r4, #0]
 800cf18:	6005      	str	r5, [r0, #0]
 800cf1a:	b29b      	uxth	r3, r3
 800cf1c:	6865      	ldr	r5, [r4, #4]
 800cf1e:	6045      	str	r5, [r0, #4]
 800cf20:	4293      	cmp	r3, r2
 800cf22:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800cf26:	d906      	bls.n	800cf36 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800cf28:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800cf2c:	681d      	ldr	r5, [r3, #0]
 800cf2e:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800cf32:	685d      	ldr	r5, [r3, #4]
 800cf34:	6065      	str	r5, [r4, #4]
 800cf36:	bd30      	pop	{r4, r5, pc}

0800cf38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800cf38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cf3a:	466b      	mov	r3, sp
 800cf3c:	e883 0006 	stmia.w	r3, {r1, r2}
 800cf40:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800cf44:	2a07      	cmp	r2, #7
 800cf46:	4604      	mov	r4, r0
 800cf48:	d906      	bls.n	800cf58 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800cf4a:	4b09      	ldr	r3, [pc, #36]	; (800cf70 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800cf4c:	4a09      	ldr	r2, [pc, #36]	; (800cf74 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800cf4e:	480a      	ldr	r0, [pc, #40]	; (800cf78 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800cf50:	f240 118f 	movw	r1, #399	; 0x18f
 800cf54:	f00d fc48 	bl	801a7e8 <__assert_func>
 800cf58:	1c51      	adds	r1, r2, #1
 800cf5a:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800cf5e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800cf62:	cb03      	ldmia	r3!, {r0, r1}
 800cf64:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800cf68:	6069      	str	r1, [r5, #4]
 800cf6a:	b003      	add	sp, #12
 800cf6c:	bd30      	pop	{r4, r5, pc}
 800cf6e:	bf00      	nop
 800cf70:	0801de0c 	.word	0x0801de0c
 800cf74:	0801deec 	.word	0x0801deec
 800cf78:	0801de3b 	.word	0x0801de3b

0800cf7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800cf7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cf80:	b089      	sub	sp, #36	; 0x24
 800cf82:	466c      	mov	r4, sp
 800cf84:	4606      	mov	r6, r0
 800cf86:	4620      	mov	r0, r4
 800cf88:	e884 0006 	stmia.w	r4, {r1, r2}
 800cf8c:	f7fc fef5 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf90:	bbb0      	cbnz	r0, 800d000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800cf92:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800cf96:	b1fd      	cbz	r5, 800cfd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800cf98:	3d01      	subs	r5, #1
 800cf9a:	af04      	add	r7, sp, #16
 800cf9c:	f04f 090a 	mov.w	r9, #10
 800cfa0:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800cfa4:	ab02      	add	r3, sp, #8
 800cfa6:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800cfaa:	6851      	ldr	r1, [r2, #4]
 800cfac:	c303      	stmia	r3!, {r0, r1}
 800cfae:	4621      	mov	r1, r4
 800cfb0:	a802      	add	r0, sp, #8
 800cfb2:	fa1f f885 	uxth.w	r8, r5
 800cfb6:	f7ff fed5 	bl	800cd64 <_ZNK8touchgfx4Rect8includesERKS0_>
 800cfba:	bb08      	cbnz	r0, 800d000 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800cfbc:	a902      	add	r1, sp, #8
 800cfbe:	4620      	mov	r0, r4
 800cfc0:	f7ff fed0 	bl	800cd64 <_ZNK8touchgfx4Rect8includesERKS0_>
 800cfc4:	b1f8      	cbz	r0, 800d006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800cfc6:	4642      	mov	r2, r8
 800cfc8:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800cfcc:	a806      	add	r0, sp, #24
 800cfce:	f7ff ff95 	bl	800cefc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cfd2:	f115 35ff 	adds.w	r5, r5, #4294967295
 800cfd6:	d2e3      	bcs.n	800cfa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800cfd8:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800cfdc:	2b08      	cmp	r3, #8
 800cfde:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800cfe2:	d108      	bne.n	800cff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800cfe4:	4629      	mov	r1, r5
 800cfe6:	a806      	add	r0, sp, #24
 800cfe8:	2207      	movs	r2, #7
 800cfea:	f7ff ff87 	bl	800cefc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cfee:	a906      	add	r1, sp, #24
 800cff0:	4620      	mov	r0, r4
 800cff2:	f7ff fed9 	bl	800cda8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cff6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800cffa:	4628      	mov	r0, r5
 800cffc:	f7ff ff9c 	bl	800cf38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d000:	b009      	add	sp, #36	; 0x24
 800d002:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d006:	4621      	mov	r1, r4
 800d008:	a802      	add	r0, sp, #8
 800d00a:	f7ff fe89 	bl	800cd20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d00e:	b150      	cbz	r0, 800d026 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800d010:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d014:	a806      	add	r0, sp, #24
 800d016:	4642      	mov	r2, r8
 800d018:	f7ff ff70 	bl	800cefc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d01c:	a902      	add	r1, sp, #8
 800d01e:	4620      	mov	r0, r4
 800d020:	f7ff fec2 	bl	800cda8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d024:	e7d5      	b.n	800cfd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d026:	e894 0003 	ldmia.w	r4, {r0, r1}
 800d02a:	e887 0003 	stmia.w	r7, {r0, r1}
 800d02e:	a902      	add	r1, sp, #8
 800d030:	4638      	mov	r0, r7
 800d032:	f7ff feb9 	bl	800cda8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d036:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d03a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d03e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800d042:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d046:	fb13 f302 	smulbb	r3, r3, r2
 800d04a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d04e:	fb11 f102 	smulbb	r1, r1, r2
 800d052:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d056:	fb12 1100 	smlabb	r1, r2, r0, r1
 800d05a:	220b      	movs	r2, #11
 800d05c:	fb09 f303 	mul.w	r3, r9, r3
 800d060:	434a      	muls	r2, r1
 800d062:	4293      	cmp	r3, r2
 800d064:	dab5      	bge.n	800cfd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d066:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d06a:	a806      	add	r0, sp, #24
 800d06c:	4642      	mov	r2, r8
 800d06e:	f7ff ff45 	bl	800cefc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d072:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d076:	e884 0003 	stmia.w	r4, {r0, r1}
 800d07a:	e7aa      	b.n	800cfd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800d07c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d07c:	b530      	push	{r4, r5, lr}
 800d07e:	4b1d      	ldr	r3, [pc, #116]	; (800d0f4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d080:	b085      	sub	sp, #20
 800d082:	460c      	mov	r4, r1
 800d084:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d088:	4b1b      	ldr	r3, [pc, #108]	; (800d0f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d08a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d08e:	2100      	movs	r1, #0
 800d090:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d094:	9100      	str	r1, [sp, #0]
 800d096:	4605      	mov	r5, r0
 800d098:	6861      	ldr	r1, [r4, #4]
 800d09a:	6820      	ldr	r0, [r4, #0]
 800d09c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d0a0:	ab02      	add	r3, sp, #8
 800d0a2:	c303      	stmia	r3!, {r0, r1}
 800d0a4:	4669      	mov	r1, sp
 800d0a6:	a802      	add	r0, sp, #8
 800d0a8:	f7fc fe24 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800d0ac:	ab02      	add	r3, sp, #8
 800d0ae:	cb03      	ldmia	r3!, {r0, r1}
 800d0b0:	4b12      	ldr	r3, [pc, #72]	; (800d0fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d0b2:	6020      	str	r0, [r4, #0]
 800d0b4:	6818      	ldr	r0, [r3, #0]
 800d0b6:	6061      	str	r1, [r4, #4]
 800d0b8:	b138      	cbz	r0, 800d0ca <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d0ba:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800d0be:	b133      	cbz	r3, 800d0ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d0c0:	6821      	ldr	r1, [r4, #0]
 800d0c2:	6862      	ldr	r2, [r4, #4]
 800d0c4:	4628      	mov	r0, r5
 800d0c6:	f7ff ff59 	bl	800cf7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d0ca:	b005      	add	sp, #20
 800d0cc:	bd30      	pop	{r4, r5, pc}
 800d0ce:	6803      	ldr	r3, [r0, #0]
 800d0d0:	4621      	mov	r1, r4
 800d0d2:	689b      	ldr	r3, [r3, #8]
 800d0d4:	4798      	blx	r3
 800d0d6:	4b0a      	ldr	r3, [pc, #40]	; (800d100 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d0d8:	6818      	ldr	r0, [r3, #0]
 800d0da:	b118      	cbz	r0, 800d0e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d0dc:	6803      	ldr	r3, [r0, #0]
 800d0de:	4621      	mov	r1, r4
 800d0e0:	689b      	ldr	r3, [r3, #8]
 800d0e2:	4798      	blx	r3
 800d0e4:	4b07      	ldr	r3, [pc, #28]	; (800d104 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d0e6:	6818      	ldr	r0, [r3, #0]
 800d0e8:	6803      	ldr	r3, [r0, #0]
 800d0ea:	4621      	mov	r1, r4
 800d0ec:	695b      	ldr	r3, [r3, #20]
 800d0ee:	4798      	blx	r3
 800d0f0:	e7eb      	b.n	800d0ca <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d0f2:	bf00      	nop
 800d0f4:	200123b0 	.word	0x200123b0
 800d0f8:	200123b2 	.word	0x200123b2
 800d0fc:	20012418 	.word	0x20012418
 800d100:	20012414 	.word	0x20012414
 800d104:	200123bc 	.word	0x200123bc

0800d108 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d10c:	4604      	mov	r4, r0
 800d10e:	b09b      	sub	sp, #108	; 0x6c
 800d110:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800d114:	b129      	cbz	r1, 800d122 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d116:	2300      	movs	r3, #0
 800d118:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d11c:	b01b      	add	sp, #108	; 0x6c
 800d11e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d122:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800d126:	4630      	mov	r0, r6
 800d128:	f7fc fe27 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d12c:	4605      	mov	r5, r0
 800d12e:	b940      	cbnz	r0, 800d142 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800d130:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d134:	4620      	mov	r0, r4
 800d136:	f7ff ff21 	bl	800cf7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d13a:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800d13e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d142:	4b92      	ldr	r3, [pc, #584]	; (800d38c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x284>)
 800d144:	681b      	ldr	r3, [r3, #0]
 800d146:	b33b      	cbz	r3, 800d198 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d148:	4d91      	ldr	r5, [pc, #580]	; (800d390 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x288>)
 800d14a:	4628      	mov	r0, r5
 800d14c:	f7fc fe15 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d150:	4606      	mov	r6, r0
 800d152:	bb08      	cbnz	r0, 800d198 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d154:	4628      	mov	r0, r5
 800d156:	f7ff fc7f 	bl	800ca58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d15a:	6829      	ldr	r1, [r5, #0]
 800d15c:	686a      	ldr	r2, [r5, #4]
 800d15e:	4620      	mov	r0, r4
 800d160:	f7ff ff0c 	bl	800cf7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d164:	802e      	strh	r6, [r5, #0]
 800d166:	806e      	strh	r6, [r5, #2]
 800d168:	80ae      	strh	r6, [r5, #4]
 800d16a:	80ee      	strh	r6, [r5, #6]
 800d16c:	4f89      	ldr	r7, [pc, #548]	; (800d394 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x28c>)
 800d16e:	a809      	add	r0, sp, #36	; 0x24
 800d170:	f7ff fe71 	bl	800ce56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d174:	883d      	ldrh	r5, [r7, #0]
 800d176:	462e      	mov	r6, r5
 800d178:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d17c:	42b3      	cmp	r3, r6
 800d17e:	d910      	bls.n	800d1a2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800d180:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d184:	a809      	add	r0, sp, #36	; 0x24
 800d186:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d18a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d18e:	3601      	adds	r6, #1
 800d190:	f7ff fed2 	bl	800cf38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d194:	b2b6      	uxth	r6, r6
 800d196:	e7ef      	b.n	800d178 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d198:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d19c:	2b00      	cmp	r3, #0
 800d19e:	d1e5      	bne.n	800d16c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800d1a0:	e7bc      	b.n	800d11c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d1a2:	462e      	mov	r6, r5
 800d1a4:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d1a8:	42b3      	cmp	r3, r6
 800d1aa:	d90b      	bls.n	800d1c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800d1ac:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d1b0:	4620      	mov	r0, r4
 800d1b2:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d1b6:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d1ba:	3601      	adds	r6, #1
 800d1bc:	f7ff fede 	bl	800cf7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d1c0:	b2b6      	uxth	r6, r6
 800d1c2:	e7ef      	b.n	800d1a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d1c4:	4a74      	ldr	r2, [pc, #464]	; (800d398 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x290>)
 800d1c6:	6813      	ldr	r3, [r2, #0]
 800d1c8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d1cc:	2b01      	cmp	r3, #1
 800d1ce:	4690      	mov	r8, r2
 800d1d0:	f040 8094 	bne.w	800d2fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800d1d4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d1d8:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d1dc:	33aa      	adds	r3, #170	; 0xaa
 800d1de:	f04f 0900 	mov.w	r9, #0
 800d1e2:	42a8      	cmp	r0, r5
 800d1e4:	f103 0308 	add.w	r3, r3, #8
 800d1e8:	dd0a      	ble.n	800d200 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800d1ea:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d1ee:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d1f2:	440a      	add	r2, r1
 800d1f4:	b212      	sxth	r2, r2
 800d1f6:	4591      	cmp	r9, r2
 800d1f8:	bfb8      	it	lt
 800d1fa:	4691      	movlt	r9, r2
 800d1fc:	3501      	adds	r5, #1
 800d1fe:	e7f0      	b.n	800d1e2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800d200:	4b66      	ldr	r3, [pc, #408]	; (800d39c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x294>)
 800d202:	4e67      	ldr	r6, [pc, #412]	; (800d3a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x298>)
 800d204:	881d      	ldrh	r5, [r3, #0]
 800d206:	2300      	movs	r3, #0
 800d208:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d20c:	2d0f      	cmp	r5, #15
 800d20e:	bf8c      	ite	hi
 800d210:	08ed      	lsrhi	r5, r5, #3
 800d212:	2501      	movls	r5, #1
 800d214:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d218:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d21c:	f8d8 0000 	ldr.w	r0, [r8]
 800d220:	440b      	add	r3, r1
 800d222:	b21b      	sxth	r3, r3
 800d224:	4599      	cmp	r9, r3
 800d226:	6802      	ldr	r2, [r0, #0]
 800d228:	dd4b      	ble.n	800d2c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800d22a:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800d22e:	4798      	blx	r3
 800d230:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d234:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d238:	4413      	add	r3, r2
 800d23a:	b21b      	sxth	r3, r3
 800d23c:	195a      	adds	r2, r3, r5
 800d23e:	4290      	cmp	r0, r2
 800d240:	da07      	bge.n	800d252 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d242:	4581      	cmp	r9, r0
 800d244:	dd05      	ble.n	800d252 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d246:	4298      	cmp	r0, r3
 800d248:	da33      	bge.n	800d2b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d24a:	2b00      	cmp	r3, #0
 800d24c:	dd31      	ble.n	800d2b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d24e:	4648      	mov	r0, r9
 800d250:	e004      	b.n	800d25c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800d252:	4298      	cmp	r0, r3
 800d254:	dbfb      	blt.n	800d24e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800d256:	4548      	cmp	r0, r9
 800d258:	bfa8      	it	ge
 800d25a:	4648      	movge	r0, r9
 800d25c:	f9b6 2000 	ldrsh.w	r2, [r6]
 800d260:	f8b7 a000 	ldrh.w	sl, [r7]
 800d264:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d268:	2100      	movs	r1, #0
 800d26a:	1ac0      	subs	r0, r0, r3
 800d26c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d270:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d274:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d278:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d27c:	4553      	cmp	r3, sl
 800d27e:	d9c9      	bls.n	800d214 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d280:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d284:	ab07      	add	r3, sp, #28
 800d286:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d28a:	6851      	ldr	r1, [r2, #4]
 800d28c:	c303      	stmia	r3!, {r0, r1}
 800d28e:	a807      	add	r0, sp, #28
 800d290:	a905      	add	r1, sp, #20
 800d292:	f7fc fd2f 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800d296:	a807      	add	r0, sp, #28
 800d298:	f7fc fd6f 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d29c:	b920      	cbnz	r0, 800d2a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800d29e:	6823      	ldr	r3, [r4, #0]
 800d2a0:	a907      	add	r1, sp, #28
 800d2a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d2a4:	4620      	mov	r0, r4
 800d2a6:	4798      	blx	r3
 800d2a8:	f10a 0a01 	add.w	sl, sl, #1
 800d2ac:	fa1f fa8a 	uxth.w	sl, sl
 800d2b0:	e7e2      	b.n	800d278 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800d2b2:	f8d8 0000 	ldr.w	r0, [r8]
 800d2b6:	6803      	ldr	r3, [r0, #0]
 800d2b8:	2101      	movs	r1, #1
 800d2ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d2be:	4798      	blx	r3
 800d2c0:	e7a8      	b.n	800d214 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d2c2:	69d3      	ldr	r3, [r2, #28]
 800d2c4:	4798      	blx	r3
 800d2c6:	4b37      	ldr	r3, [pc, #220]	; (800d3a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29c>)
 800d2c8:	781b      	ldrb	r3, [r3, #0]
 800d2ca:	2b00      	cmp	r3, #0
 800d2cc:	f43f af26 	beq.w	800d11c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d2d0:	2300      	movs	r3, #0
 800d2d2:	883d      	ldrh	r5, [r7, #0]
 800d2d4:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d2d8:	34ea      	adds	r4, #234	; 0xea
 800d2da:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d2de:	42ab      	cmp	r3, r5
 800d2e0:	f67f af1c 	bls.w	800d11c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d2e4:	ab1a      	add	r3, sp, #104	; 0x68
 800d2e6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d2ea:	3b44      	subs	r3, #68	; 0x44
 800d2ec:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d2f0:	4620      	mov	r0, r4
 800d2f2:	3501      	adds	r5, #1
 800d2f4:	f7ff fe20 	bl	800cf38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d2f8:	b2ad      	uxth	r5, r5
 800d2fa:	e7ee      	b.n	800d2da <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800d2fc:	2b02      	cmp	r3, #2
 800d2fe:	f040 813d 	bne.w	800d57c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>
 800d302:	4b29      	ldr	r3, [pc, #164]	; (800d3a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>)
 800d304:	781b      	ldrb	r3, [r3, #0]
 800d306:	2b01      	cmp	r3, #1
 800d308:	f000 809d 	beq.w	800d446 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800d30c:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800d310:	883a      	ldrh	r2, [r7, #0]
 800d312:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800d316:	3201      	adds	r2, #1
 800d318:	b292      	uxth	r2, r2
 800d31a:	2900      	cmp	r1, #0
 800d31c:	d0d3      	beq.n	800d2c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d31e:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800d322:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800d326:	441d      	add	r5, r3
 800d328:	b22d      	sxth	r5, r5
 800d32a:	4610      	mov	r0, r2
 800d32c:	f04f 0a00 	mov.w	sl, #0
 800d330:	b283      	uxth	r3, r0
 800d332:	4299      	cmp	r1, r3
 800d334:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800d338:	f240 80c3 	bls.w	800d4c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ba>
 800d33c:	4426      	add	r6, r4
 800d33e:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800d342:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800d346:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800d34a:	4573      	cmp	r3, lr
 800d34c:	4684      	mov	ip, r0
 800d34e:	f340 80a5 	ble.w	800d49c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x394>
 800d352:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800d356:	4475      	add	r5, lr
 800d358:	b22d      	sxth	r5, r5
 800d35a:	429d      	cmp	r5, r3
 800d35c:	bfa8      	it	ge
 800d35e:	461d      	movge	r5, r3
 800d360:	3001      	adds	r0, #1
 800d362:	46e2      	mov	sl, ip
 800d364:	e7e4      	b.n	800d330 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800d366:	d10b      	bne.n	800d380 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x278>
 800d368:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800d36c:	f9b9 10ae 	ldrsh.w	r1, [r9, #174]	; 0xae
 800d370:	458c      	cmp	ip, r1
 800d372:	bfb4      	ite	lt
 800d374:	469c      	movlt	ip, r3
 800d376:	46b4      	movge	ip, r6
 800d378:	4572      	cmp	r2, lr
 800d37a:	bfb8      	it	lt
 800d37c:	4672      	movlt	r2, lr
 800d37e:	e08a      	b.n	800d496 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800d380:	428a      	cmp	r2, r1
 800d382:	bfb8      	it	lt
 800d384:	460a      	movlt	r2, r1
 800d386:	46b4      	mov	ip, r6
 800d388:	e085      	b.n	800d496 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800d38a:	bf00      	nop
 800d38c:	20012414 	.word	0x20012414
 800d390:	20012420 	.word	0x20012420
 800d394:	20000094 	.word	0x20000094
 800d398:	200123bc 	.word	0x200123bc
 800d39c:	200123b2 	.word	0x200123b2
 800d3a0:	200123b0 	.word	0x200123b0
 800d3a4:	200123ba 	.word	0x200123ba
 800d3a8:	200123b4 	.word	0x200123b4
 800d3ac:	1961      	adds	r1, r4, r5
 800d3ae:	ab05      	add	r3, sp, #20
 800d3b0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800d3b4:	6849      	ldr	r1, [r1, #4]
 800d3b6:	c303      	stmia	r3!, {r0, r1}
 800d3b8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d3bc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800d3c0:	2b13      	cmp	r3, #19
 800d3c2:	bfd8      	it	le
 800d3c4:	f9bd 2014 	ldrshle.w	r2, [sp, #20]
 800d3c8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d3cc:	440b      	add	r3, r1
 800d3ce:	1a9b      	subs	r3, r3, r2
 800d3d0:	a805      	add	r0, sp, #20
 800d3d2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d3d6:	f7ff fb99 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d3da:	a805      	add	r0, sp, #20
 800d3dc:	f7fc fccd 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d3e0:	bb88      	cbnz	r0, 800d446 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800d3e2:	f9bd c01a 	ldrsh.w	ip, [sp, #26]
 800d3e6:	f8d8 0000 	ldr.w	r0, [r8]
 800d3ea:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d3ee:	f8d0 e000 	ldr.w	lr, [r0]
 800d3f2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d3f6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800d3fa:	f1bc 0f14 	cmp.w	ip, #20
 800d3fe:	bfa8      	it	ge
 800d400:	f04f 0c14 	movge.w	ip, #20
 800d404:	fa1f fc8c 	uxth.w	ip, ip
 800d408:	f8cd c000 	str.w	ip, [sp]
 800d40c:	f8de 9078 	ldr.w	r9, [lr, #120]	; 0x78
 800d410:	47c8      	blx	r9
 800d412:	4681      	mov	r9, r0
 800d414:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d418:	a805      	add	r0, sp, #20
 800d41a:	f7ff fb1d 	bl	800ca58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d41e:	6823      	ldr	r3, [r4, #0]
 800d420:	4425      	add	r5, r4
 800d422:	4620      	mov	r0, r4
 800d424:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d426:	a905      	add	r1, sp, #20
 800d428:	4798      	blx	r3
 800d42a:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d42e:	eba0 0009 	sub.w	r0, r0, r9
 800d432:	b200      	sxth	r0, r0
 800d434:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800d438:	b928      	cbnz	r0, 800d446 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800d43a:	b2b2      	uxth	r2, r6
 800d43c:	f104 01a8 	add.w	r1, r4, #168	; 0xa8
 800d440:	a807      	add	r0, sp, #28
 800d442:	f7ff fd5b 	bl	800cefc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d446:	f8b4 a0e8 	ldrh.w	sl, [r4, #232]	; 0xe8
 800d44a:	f1ba 0f00 	cmp.w	sl, #0
 800d44e:	f43f af3a 	beq.w	800d2c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d452:	883b      	ldrh	r3, [r7, #0]
 800d454:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800d458:	3301      	adds	r3, #1
 800d45a:	b29b      	uxth	r3, r3
 800d45c:	2600      	movs	r6, #0
 800d45e:	b299      	uxth	r1, r3
 800d460:	458a      	cmp	sl, r1
 800d462:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800d466:	d9a1      	bls.n	800d3ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a4>
 800d468:	4425      	add	r5, r4
 800d46a:	eb04 09c3 	add.w	r9, r4, r3, lsl #3
 800d46e:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800d472:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800d476:	f9b9 e0a8 	ldrsh.w	lr, [r9, #168]	; 0xa8
 800d47a:	4408      	add	r0, r1
 800d47c:	f8b9 10ac 	ldrh.w	r1, [r9, #172]	; 0xac
 800d480:	4471      	add	r1, lr
 800d482:	b200      	sxth	r0, r0
 800d484:	b209      	sxth	r1, r1
 800d486:	4288      	cmp	r0, r1
 800d488:	469c      	mov	ip, r3
 800d48a:	f6bf af6c 	bge.w	800d366 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800d48e:	4586      	cmp	lr, r0
 800d490:	4672      	mov	r2, lr
 800d492:	bfb8      	it	lt
 800d494:	4602      	movlt	r2, r0
 800d496:	3301      	adds	r3, #1
 800d498:	4666      	mov	r6, ip
 800d49a:	e7e0      	b.n	800d45e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x356>
 800d49c:	d10c      	bne.n	800d4b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b0>
 800d49e:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800d4a2:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800d4a6:	45b4      	cmp	ip, r6
 800d4a8:	bfb4      	ite	lt
 800d4aa:	4684      	movlt	ip, r0
 800d4ac:	46d4      	movge	ip, sl
 800d4ae:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800d4b2:	4433      	add	r3, r6
 800d4b4:	b21b      	sxth	r3, r3
 800d4b6:	e750      	b.n	800d35a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x252>
 800d4b8:	4575      	cmp	r5, lr
 800d4ba:	bfa8      	it	ge
 800d4bc:	4675      	movge	r5, lr
 800d4be:	46d4      	mov	ip, sl
 800d4c0:	e74e      	b.n	800d360 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x258>
 800d4c2:	eb0b 0006 	add.w	r0, fp, r6
 800d4c6:	4426      	add	r6, r4
 800d4c8:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800d4cc:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800d4d0:	f1b9 0f13 	cmp.w	r9, #19
 800d4d4:	bfde      	ittt	le
 800d4d6:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800d4da:	444d      	addle	r5, r9
 800d4dc:	b22d      	sxthle	r5, r5
 800d4de:	f7fc fc4c 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d4e2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d4e6:	2800      	cmp	r0, #0
 800d4e8:	f47f af17 	bne.w	800d31a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x212>
 800d4ec:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800d4f0:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d4f4:	eba5 050c 	sub.w	r5, r5, ip
 800d4f8:	fa1f f28c 	uxth.w	r2, ip
 800d4fc:	fa1f f989 	uxth.w	r9, r9
 800d500:	eb02 0009 	add.w	r0, r2, r9
 800d504:	2d14      	cmp	r5, #20
 800d506:	bfa8      	it	ge
 800d508:	2514      	movge	r5, #20
 800d50a:	b200      	sxth	r0, r0
 800d50c:	fa1f fe85 	uxth.w	lr, r5
 800d510:	eba0 000c 	sub.w	r0, r0, ip
 800d514:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800d518:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800d51c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d520:	4586      	cmp	lr, r0
 800d522:	f8d8 0000 	ldr.w	r0, [r8]
 800d526:	f8ad c016 	strh.w	ip, [sp, #22]
 800d52a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d52e:	bfb8      	it	lt
 800d530:	46f1      	movlt	r9, lr
 800d532:	6805      	ldr	r5, [r0, #0]
 800d534:	f8cd 9000 	str.w	r9, [sp]
 800d538:	b29b      	uxth	r3, r3
 800d53a:	b289      	uxth	r1, r1
 800d53c:	6fad      	ldr	r5, [r5, #120]	; 0x78
 800d53e:	47a8      	blx	r5
 800d540:	6823      	ldr	r3, [r4, #0]
 800d542:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d546:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d548:	a905      	add	r1, sp, #20
 800d54a:	4620      	mov	r0, r4
 800d54c:	4798      	blx	r3
 800d54e:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d552:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800d556:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800d55a:	1a5b      	subs	r3, r3, r1
 800d55c:	440a      	add	r2, r1
 800d55e:	b21b      	sxth	r3, r3
 800d560:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800d564:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800d568:	2b00      	cmp	r3, #0
 800d56a:	f47f aed1 	bne.w	800d310 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800d56e:	fa1f f28a 	uxth.w	r2, sl
 800d572:	4659      	mov	r1, fp
 800d574:	a807      	add	r0, sp, #28
 800d576:	f7ff fcc1 	bl	800cefc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d57a:	e6c9      	b.n	800d310 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800d57c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d580:	42ab      	cmp	r3, r5
 800d582:	f67f aea0 	bls.w	800d2c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d586:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d58a:	ab07      	add	r3, sp, #28
 800d58c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d590:	6851      	ldr	r1, [r2, #4]
 800d592:	c303      	stmia	r3!, {r0, r1}
 800d594:	a807      	add	r0, sp, #28
 800d596:	f7fc fbf0 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 800d59a:	b920      	cbnz	r0, 800d5a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49e>
 800d59c:	6823      	ldr	r3, [r4, #0]
 800d59e:	a907      	add	r1, sp, #28
 800d5a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d5a2:	4620      	mov	r0, r4
 800d5a4:	4798      	blx	r3
 800d5a6:	3501      	adds	r5, #1
 800d5a8:	b2ad      	uxth	r5, r5
 800d5aa:	e7e7      	b.n	800d57c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>

0800d5ac <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d5ac:	4b03      	ldr	r3, [pc, #12]	; (800d5bc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d5ae:	2200      	movs	r2, #0
 800d5b0:	801a      	strh	r2, [r3, #0]
 800d5b2:	805a      	strh	r2, [r3, #2]
 800d5b4:	809a      	strh	r2, [r3, #4]
 800d5b6:	80da      	strh	r2, [r3, #6]
 800d5b8:	4770      	bx	lr
 800d5ba:	bf00      	nop
 800d5bc:	20012420 	.word	0x20012420

0800d5c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5c4:	4607      	mov	r7, r0
 800d5c6:	b099      	sub	sp, #100	; 0x64
 800d5c8:	a802      	add	r0, sp, #8
 800d5ca:	4614      	mov	r4, r2
 800d5cc:	461d      	mov	r5, r3
 800d5ce:	468a      	mov	sl, r1
 800d5d0:	f000 fdf1 	bl	800e1b6 <_ZN8touchgfx12TextProviderC1Ev>
 800d5d4:	683b      	ldr	r3, [r7, #0]
 800d5d6:	4638      	mov	r0, r7
 800d5d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d5da:	4798      	blx	r3
 800d5dc:	462a      	mov	r2, r5
 800d5de:	4603      	mov	r3, r0
 800d5e0:	4621      	mov	r1, r4
 800d5e2:	a802      	add	r0, sp, #8
 800d5e4:	f000 fe2c 	bl	800e240 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d5e8:	2500      	movs	r5, #0
 800d5ea:	462c      	mov	r4, r5
 800d5ec:	46a9      	mov	r9, r5
 800d5ee:	46a8      	mov	r8, r5
 800d5f0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800d5f4:	2300      	movs	r3, #0
 800d5f6:	9301      	str	r3, [sp, #4]
 800d5f8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d5fc:	429c      	cmp	r4, r3
 800d5fe:	d002      	beq.n	800d606 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800d600:	455c      	cmp	r4, fp
 800d602:	bf18      	it	ne
 800d604:	4625      	movne	r5, r4
 800d606:	ab01      	add	r3, sp, #4
 800d608:	463a      	mov	r2, r7
 800d60a:	4651      	mov	r1, sl
 800d60c:	a802      	add	r0, sp, #8
 800d60e:	f001 f911 	bl	800e834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d612:	4604      	mov	r4, r0
 800d614:	b108      	cbz	r0, 800d61a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800d616:	280a      	cmp	r0, #10
 800d618:	d10a      	bne.n	800d630 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800d61a:	45c1      	cmp	r9, r8
 800d61c:	bf38      	it	cc
 800d61e:	46c1      	movcc	r9, r8
 800d620:	f04f 0800 	mov.w	r8, #0
 800d624:	2c00      	cmp	r4, #0
 800d626:	d1e5      	bne.n	800d5f4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800d628:	4648      	mov	r0, r9
 800d62a:	b019      	add	sp, #100	; 0x64
 800d62c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d630:	9a01      	ldr	r2, [sp, #4]
 800d632:	2a00      	cmp	r2, #0
 800d634:	d0de      	beq.n	800d5f4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800d636:	7b56      	ldrb	r6, [r2, #13]
 800d638:	683b      	ldr	r3, [r7, #0]
 800d63a:	8894      	ldrh	r4, [r2, #4]
 800d63c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d63e:	0076      	lsls	r6, r6, #1
 800d640:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800d644:	7a96      	ldrb	r6, [r2, #10]
 800d646:	4629      	mov	r1, r5
 800d648:	4306      	orrs	r6, r0
 800d64a:	4638      	mov	r0, r7
 800d64c:	4798      	blx	r3
 800d64e:	4430      	add	r0, r6
 800d650:	4480      	add	r8, r0
 800d652:	fa1f f888 	uxth.w	r8, r8
 800d656:	e7e5      	b.n	800d624 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800d658 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d658:	b508      	push	{r3, lr}
 800d65a:	6803      	ldr	r3, [r0, #0]
 800d65c:	68db      	ldr	r3, [r3, #12]
 800d65e:	4798      	blx	r3
 800d660:	b128      	cbz	r0, 800d66e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d662:	7b43      	ldrb	r3, [r0, #13]
 800d664:	7a80      	ldrb	r0, [r0, #10]
 800d666:	005b      	lsls	r3, r3, #1
 800d668:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d66c:	4318      	orrs	r0, r3
 800d66e:	bd08      	pop	{r3, pc}

0800d670 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d670:	b40e      	push	{r1, r2, r3}
 800d672:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d674:	b098      	sub	sp, #96	; 0x60
 800d676:	ab1d      	add	r3, sp, #116	; 0x74
 800d678:	4605      	mov	r5, r0
 800d67a:	f853 4b04 	ldr.w	r4, [r3], #4
 800d67e:	9300      	str	r3, [sp, #0]
 800d680:	a802      	add	r0, sp, #8
 800d682:	f000 fd98 	bl	800e1b6 <_ZN8touchgfx12TextProviderC1Ev>
 800d686:	682b      	ldr	r3, [r5, #0]
 800d688:	4628      	mov	r0, r5
 800d68a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d68c:	4798      	blx	r3
 800d68e:	ae18      	add	r6, sp, #96	; 0x60
 800d690:	4603      	mov	r3, r0
 800d692:	4621      	mov	r1, r4
 800d694:	9a00      	ldr	r2, [sp, #0]
 800d696:	2400      	movs	r4, #0
 800d698:	a802      	add	r0, sp, #8
 800d69a:	f000 fdd1 	bl	800e240 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d69e:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800d6a2:	462a      	mov	r2, r5
 800d6a4:	4633      	mov	r3, r6
 800d6a6:	4621      	mov	r1, r4
 800d6a8:	a802      	add	r0, sp, #8
 800d6aa:	f001 f8c3 	bl	800e834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d6ae:	b1f0      	cbz	r0, 800d6ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800d6b0:	280a      	cmp	r0, #10
 800d6b2:	d018      	beq.n	800d6e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800d6b4:	9f01      	ldr	r7, [sp, #4]
 800d6b6:	b1b7      	cbz	r7, 800d6e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800d6b8:	7b78      	ldrb	r0, [r7, #13]
 800d6ba:	7a3b      	ldrb	r3, [r7, #8]
 800d6bc:	88aa      	ldrh	r2, [r5, #4]
 800d6be:	00c1      	lsls	r1, r0, #3
 800d6c0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d6c4:	4319      	orrs	r1, r3
 800d6c6:	0643      	lsls	r3, r0, #25
 800d6c8:	bf44      	itt	mi
 800d6ca:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800d6ce:	b219      	sxthmi	r1, r3
 800d6d0:	0100      	lsls	r0, r0, #4
 800d6d2:	79fb      	ldrb	r3, [r7, #7]
 800d6d4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d6d8:	4303      	orrs	r3, r0
 800d6da:	4413      	add	r3, r2
 800d6dc:	1a5b      	subs	r3, r3, r1
 800d6de:	b29b      	uxth	r3, r3
 800d6e0:	42a3      	cmp	r3, r4
 800d6e2:	bfc8      	it	gt
 800d6e4:	b21c      	sxthgt	r4, r3
 800d6e6:	4633      	mov	r3, r6
 800d6e8:	462a      	mov	r2, r5
 800d6ea:	2100      	movs	r1, #0
 800d6ec:	e7dc      	b.n	800d6a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800d6ee:	b2a0      	uxth	r0, r4
 800d6f0:	b018      	add	sp, #96	; 0x60
 800d6f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d6f6:	b003      	add	sp, #12
 800d6f8:	4770      	bx	lr

0800d6fa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d6fa:	b40e      	push	{r1, r2, r3}
 800d6fc:	b530      	push	{r4, r5, lr}
 800d6fe:	b098      	sub	sp, #96	; 0x60
 800d700:	ab1b      	add	r3, sp, #108	; 0x6c
 800d702:	4604      	mov	r4, r0
 800d704:	f853 5b04 	ldr.w	r5, [r3], #4
 800d708:	9301      	str	r3, [sp, #4]
 800d70a:	a802      	add	r0, sp, #8
 800d70c:	f000 fd53 	bl	800e1b6 <_ZN8touchgfx12TextProviderC1Ev>
 800d710:	6823      	ldr	r3, [r4, #0]
 800d712:	4620      	mov	r0, r4
 800d714:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d716:	4798      	blx	r3
 800d718:	9a01      	ldr	r2, [sp, #4]
 800d71a:	4603      	mov	r3, r0
 800d71c:	4629      	mov	r1, r5
 800d71e:	a802      	add	r0, sp, #8
 800d720:	f000 fd8e 	bl	800e240 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d724:	a802      	add	r0, sp, #8
 800d726:	f001 f97d 	bl	800ea24 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d72a:	2401      	movs	r4, #1
 800d72c:	b2a3      	uxth	r3, r4
 800d72e:	b140      	cbz	r0, 800d742 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800d730:	280a      	cmp	r0, #10
 800d732:	bf08      	it	eq
 800d734:	3301      	addeq	r3, #1
 800d736:	a802      	add	r0, sp, #8
 800d738:	bf08      	it	eq
 800d73a:	b21c      	sxtheq	r4, r3
 800d73c:	f001 f972 	bl	800ea24 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d740:	e7f4      	b.n	800d72c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800d742:	4618      	mov	r0, r3
 800d744:	b018      	add	sp, #96	; 0x60
 800d746:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d74a:	b003      	add	sp, #12
 800d74c:	4770      	bx	lr

0800d74e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d74e:	b40e      	push	{r1, r2, r3}
 800d750:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d752:	b098      	sub	sp, #96	; 0x60
 800d754:	ab1d      	add	r3, sp, #116	; 0x74
 800d756:	4604      	mov	r4, r0
 800d758:	f853 5b04 	ldr.w	r5, [r3], #4
 800d75c:	9300      	str	r3, [sp, #0]
 800d75e:	a802      	add	r0, sp, #8
 800d760:	f000 fd29 	bl	800e1b6 <_ZN8touchgfx12TextProviderC1Ev>
 800d764:	6823      	ldr	r3, [r4, #0]
 800d766:	4620      	mov	r0, r4
 800d768:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d76a:	4798      	blx	r3
 800d76c:	4629      	mov	r1, r5
 800d76e:	4603      	mov	r3, r0
 800d770:	9a00      	ldr	r2, [sp, #0]
 800d772:	a802      	add	r0, sp, #8
 800d774:	ad18      	add	r5, sp, #96	; 0x60
 800d776:	f000 fd63 	bl	800e240 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d77a:	2100      	movs	r1, #0
 800d77c:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800d780:	4622      	mov	r2, r4
 800d782:	462b      	mov	r3, r5
 800d784:	a802      	add	r0, sp, #8
 800d786:	f001 f855 	bl	800e834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d78a:	26ff      	movs	r6, #255	; 0xff
 800d78c:	b1d8      	cbz	r0, 800d7c6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800d78e:	280a      	cmp	r0, #10
 800d790:	d012      	beq.n	800d7b8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800d792:	9801      	ldr	r0, [sp, #4]
 800d794:	b180      	cbz	r0, 800d7b8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800d796:	7b47      	ldrb	r7, [r0, #13]
 800d798:	7922      	ldrb	r2, [r4, #4]
 800d79a:	00fb      	lsls	r3, r7, #3
 800d79c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d7a0:	7a03      	ldrb	r3, [r0, #8]
 800d7a2:	430b      	orrs	r3, r1
 800d7a4:	0679      	lsls	r1, r7, #25
 800d7a6:	bf44      	itt	mi
 800d7a8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d7ac:	b21b      	sxthmi	r3, r3
 800d7ae:	1ad3      	subs	r3, r2, r3
 800d7b0:	b2db      	uxtb	r3, r3
 800d7b2:	429e      	cmp	r6, r3
 800d7b4:	bf28      	it	cs
 800d7b6:	461e      	movcs	r6, r3
 800d7b8:	462b      	mov	r3, r5
 800d7ba:	4622      	mov	r2, r4
 800d7bc:	2100      	movs	r1, #0
 800d7be:	a802      	add	r0, sp, #8
 800d7c0:	f001 f838 	bl	800e834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d7c4:	e7e2      	b.n	800d78c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800d7c6:	4630      	mov	r0, r6
 800d7c8:	b018      	add	sp, #96	; 0x60
 800d7ca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d7ce:	b003      	add	sp, #12
 800d7d0:	4770      	bx	lr

0800d7d2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d7d2:	b513      	push	{r0, r1, r4, lr}
 800d7d4:	1d01      	adds	r1, r0, #4
 800d7d6:	4603      	mov	r3, r0
 800d7d8:	c903      	ldmia	r1, {r0, r1}
 800d7da:	466a      	mov	r2, sp
 800d7dc:	e882 0003 	stmia.w	r2, {r0, r1}
 800d7e0:	2100      	movs	r1, #0
 800d7e2:	9100      	str	r1, [sp, #0]
 800d7e4:	6819      	ldr	r1, [r3, #0]
 800d7e6:	4618      	mov	r0, r3
 800d7e8:	690c      	ldr	r4, [r1, #16]
 800d7ea:	4611      	mov	r1, r2
 800d7ec:	47a0      	blx	r4
 800d7ee:	b002      	add	sp, #8
 800d7f0:	bd10      	pop	{r4, pc}

0800d7f2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d7f2:	b538      	push	{r3, r4, r5, lr}
 800d7f4:	680b      	ldr	r3, [r1, #0]
 800d7f6:	460c      	mov	r4, r1
 800d7f8:	68db      	ldr	r3, [r3, #12]
 800d7fa:	4605      	mov	r5, r0
 800d7fc:	4798      	blx	r3
 800d7fe:	6823      	ldr	r3, [r4, #0]
 800d800:	4620      	mov	r0, r4
 800d802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d804:	4629      	mov	r1, r5
 800d806:	4798      	blx	r3
 800d808:	4628      	mov	r0, r5
 800d80a:	bd38      	pop	{r3, r4, r5, pc}

0800d80c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d80c:	b410      	push	{r4}
 800d80e:	880a      	ldrh	r2, [r1, #0]
 800d810:	8884      	ldrh	r4, [r0, #4]
 800d812:	4422      	add	r2, r4
 800d814:	800a      	strh	r2, [r1, #0]
 800d816:	88c4      	ldrh	r4, [r0, #6]
 800d818:	884a      	ldrh	r2, [r1, #2]
 800d81a:	4422      	add	r2, r4
 800d81c:	804a      	strh	r2, [r1, #2]
 800d81e:	6940      	ldr	r0, [r0, #20]
 800d820:	b120      	cbz	r0, 800d82c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d822:	6803      	ldr	r3, [r0, #0]
 800d824:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d828:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d82a:	4718      	bx	r3
 800d82c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d830:	4770      	bx	lr

0800d832 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d832:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d834:	460b      	mov	r3, r1
 800d836:	b085      	sub	sp, #20
 800d838:	4604      	mov	r4, r0
 800d83a:	b901      	cbnz	r1, 800d83e <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d83c:	b1fa      	cbz	r2, 800d87e <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800d83e:	1d27      	adds	r7, r4, #4
 800d840:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d844:	466e      	mov	r6, sp
 800d846:	e886 0003 	stmia.w	r6, {r0, r1}
 800d84a:	88e1      	ldrh	r1, [r4, #6]
 800d84c:	440a      	add	r2, r1
 800d84e:	88a1      	ldrh	r1, [r4, #4]
 800d850:	4419      	add	r1, r3
 800d852:	6823      	ldr	r3, [r4, #0]
 800d854:	b209      	sxth	r1, r1
 800d856:	4620      	mov	r0, r4
 800d858:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d85a:	b212      	sxth	r2, r2
 800d85c:	4798      	blx	r3
 800d85e:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d862:	ad02      	add	r5, sp, #8
 800d864:	e885 0003 	stmia.w	r5, {r0, r1}
 800d868:	6960      	ldr	r0, [r4, #20]
 800d86a:	b150      	cbz	r0, 800d882 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800d86c:	6803      	ldr	r3, [r0, #0]
 800d86e:	4631      	mov	r1, r6
 800d870:	691b      	ldr	r3, [r3, #16]
 800d872:	4798      	blx	r3
 800d874:	6960      	ldr	r0, [r4, #20]
 800d876:	6803      	ldr	r3, [r0, #0]
 800d878:	691b      	ldr	r3, [r3, #16]
 800d87a:	4629      	mov	r1, r5
 800d87c:	4798      	blx	r3
 800d87e:	b005      	add	sp, #20
 800d880:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d882:	f7ff fad7 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 800d886:	6803      	ldr	r3, [r0, #0]
 800d888:	4631      	mov	r1, r6
 800d88a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d88c:	4798      	blx	r3
 800d88e:	f7ff fad1 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 800d892:	6803      	ldr	r3, [r0, #0]
 800d894:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d896:	e7f0      	b.n	800d87a <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800d898 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d898:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d89a:	8882      	ldrh	r2, [r0, #4]
 800d89c:	880b      	ldrh	r3, [r1, #0]
 800d89e:	4413      	add	r3, r2
 800d8a0:	800b      	strh	r3, [r1, #0]
 800d8a2:	88c2      	ldrh	r2, [r0, #6]
 800d8a4:	884b      	ldrh	r3, [r1, #2]
 800d8a6:	4413      	add	r3, r2
 800d8a8:	4602      	mov	r2, r0
 800d8aa:	804b      	strh	r3, [r1, #2]
 800d8ac:	4605      	mov	r5, r0
 800d8ae:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d8b2:	460c      	mov	r4, r1
 800d8b4:	6851      	ldr	r1, [r2, #4]
 800d8b6:	466b      	mov	r3, sp
 800d8b8:	c303      	stmia	r3!, {r0, r1}
 800d8ba:	4621      	mov	r1, r4
 800d8bc:	4668      	mov	r0, sp
 800d8be:	f7fc fa19 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800d8c2:	466b      	mov	r3, sp
 800d8c4:	cb03      	ldmia	r3!, {r0, r1}
 800d8c6:	6020      	str	r0, [r4, #0]
 800d8c8:	6061      	str	r1, [r4, #4]
 800d8ca:	6968      	ldr	r0, [r5, #20]
 800d8cc:	b128      	cbz	r0, 800d8da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800d8ce:	6803      	ldr	r3, [r0, #0]
 800d8d0:	691b      	ldr	r3, [r3, #16]
 800d8d2:	4621      	mov	r1, r4
 800d8d4:	4798      	blx	r3
 800d8d6:	b003      	add	sp, #12
 800d8d8:	bd30      	pop	{r4, r5, pc}
 800d8da:	f7ff faab 	bl	800ce34 <_ZN8touchgfx11Application11getInstanceEv>
 800d8de:	6803      	ldr	r3, [r0, #0]
 800d8e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d8e2:	e7f6      	b.n	800d8d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800d8e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d8e4:	b570      	push	{r4, r5, r6, lr}
 800d8e6:	8882      	ldrh	r2, [r0, #4]
 800d8e8:	880b      	ldrh	r3, [r1, #0]
 800d8ea:	4413      	add	r3, r2
 800d8ec:	800b      	strh	r3, [r1, #0]
 800d8ee:	88c2      	ldrh	r2, [r0, #6]
 800d8f0:	884b      	ldrh	r3, [r1, #2]
 800d8f2:	460c      	mov	r4, r1
 800d8f4:	4413      	add	r3, r2
 800d8f6:	804b      	strh	r3, [r1, #2]
 800d8f8:	4605      	mov	r5, r0
 800d8fa:	1d01      	adds	r1, r0, #4
 800d8fc:	4620      	mov	r0, r4
 800d8fe:	f7fc f9f9 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800d902:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d906:	2b00      	cmp	r3, #0
 800d908:	dd0b      	ble.n	800d922 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d90a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d90e:	2b00      	cmp	r3, #0
 800d910:	dd07      	ble.n	800d922 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d912:	6968      	ldr	r0, [r5, #20]
 800d914:	b128      	cbz	r0, 800d922 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d916:	6803      	ldr	r3, [r0, #0]
 800d918:	4621      	mov	r1, r4
 800d91a:	6a1b      	ldr	r3, [r3, #32]
 800d91c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d920:	4718      	bx	r3
 800d922:	bd70      	pop	{r4, r5, r6, pc}

0800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800d924:	b510      	push	{r4, lr}
 800d926:	4604      	mov	r4, r0
 800d928:	4608      	mov	r0, r1
 800d92a:	2300      	movs	r3, #0
 800d92c:	8023      	strh	r3, [r4, #0]
 800d92e:	8063      	strh	r3, [r4, #2]
 800d930:	6803      	ldr	r3, [r0, #0]
 800d932:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d936:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800d93a:	80a1      	strh	r1, [r4, #4]
 800d93c:	80e2      	strh	r2, [r4, #6]
 800d93e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d940:	4621      	mov	r1, r4
 800d942:	4798      	blx	r3
 800d944:	4620      	mov	r0, r4
 800d946:	bd10      	pop	{r4, pc}

0800d948 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800d948:	b530      	push	{r4, r5, lr}
 800d94a:	8083      	strh	r3, [r0, #4]
 800d94c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800d950:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800d954:	7183      	strb	r3, [r0, #6]
 800d956:	79c3      	ldrb	r3, [r0, #7]
 800d958:	6101      	str	r1, [r0, #16]
 800d95a:	f365 0306 	bfi	r3, r5, #0, #7
 800d95e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800d962:	8282      	strh	r2, [r0, #20]
 800d964:	f365 13c7 	bfi	r3, r5, #7, #1
 800d968:	71c3      	strb	r3, [r0, #7]
 800d96a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800d96e:	7203      	strb	r3, [r0, #8]
 800d970:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800d974:	7243      	strb	r3, [r0, #9]
 800d976:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d97a:	8143      	strh	r3, [r0, #10]
 800d97c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800d980:	8183      	strh	r3, [r0, #12]
 800d982:	4b01      	ldr	r3, [pc, #4]	; (800d988 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800d984:	6003      	str	r3, [r0, #0]
 800d986:	bd30      	pop	{r4, r5, pc}
 800d988:	0801dfc4 	.word	0x0801dfc4

0800d98c <_ZNK8touchgfx9ConstFont4findEt>:
 800d98c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d98e:	6904      	ldr	r4, [r0, #16]
 800d990:	8a82      	ldrh	r2, [r0, #20]
 800d992:	88a3      	ldrh	r3, [r4, #4]
 800d994:	1acb      	subs	r3, r1, r3
 800d996:	f102 32ff 	add.w	r2, r2, #4294967295
 800d99a:	d431      	bmi.n	800da00 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800d99c:	4293      	cmp	r3, r2
 800d99e:	dd0c      	ble.n	800d9ba <_ZNK8touchgfx9ConstFont4findEt+0x2e>
 800d9a0:	230e      	movs	r3, #14
 800d9a2:	fb03 4302 	mla	r3, r3, r2, r4
 800d9a6:	889b      	ldrh	r3, [r3, #4]
 800d9a8:	1a5b      	subs	r3, r3, r1
 800d9aa:	1ad3      	subs	r3, r2, r3
 800d9ac:	429a      	cmp	r2, r3
 800d9ae:	db27      	blt.n	800da00 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800d9b0:	2b00      	cmp	r3, #0
 800d9b2:	bfbc      	itt	lt
 800d9b4:	2302      	movlt	r3, #2
 800d9b6:	fb92 f3f3 	sdivlt	r3, r2, r3
 800d9ba:	2500      	movs	r5, #0
 800d9bc:	260e      	movs	r6, #14
 800d9be:	4295      	cmp	r5, r2
 800d9c0:	dc1e      	bgt.n	800da00 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800d9c2:	fb06 4003 	mla	r0, r6, r3, r4
 800d9c6:	8887      	ldrh	r7, [r0, #4]
 800d9c8:	42b9      	cmp	r1, r7
 800d9ca:	d01a      	beq.n	800da02 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d9cc:	d20d      	bcs.n	800d9ea <_ZNK8touchgfx9ConstFont4findEt+0x5e>
 800d9ce:	1e5a      	subs	r2, r3, #1
 800d9d0:	4295      	cmp	r5, r2
 800d9d2:	dc15      	bgt.n	800da00 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800d9d4:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800d9d8:	1a5b      	subs	r3, r3, r1
 800d9da:	1ad3      	subs	r3, r2, r3
 800d9dc:	429a      	cmp	r2, r3
 800d9de:	db0f      	blt.n	800da00 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800d9e0:	429d      	cmp	r5, r3
 800d9e2:	ddec      	ble.n	800d9be <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800d9e4:	1953      	adds	r3, r2, r5
 800d9e6:	105b      	asrs	r3, r3, #1
 800d9e8:	e7e9      	b.n	800d9be <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800d9ea:	1c5d      	adds	r5, r3, #1
 800d9ec:	42aa      	cmp	r2, r5
 800d9ee:	db07      	blt.n	800da00 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800d9f0:	8a43      	ldrh	r3, [r0, #18]
 800d9f2:	1acb      	subs	r3, r1, r3
 800d9f4:	442b      	add	r3, r5
 800d9f6:	429d      	cmp	r5, r3
 800d9f8:	dc02      	bgt.n	800da00 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800d9fa:	429a      	cmp	r2, r3
 800d9fc:	dadf      	bge.n	800d9be <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800d9fe:	e7f1      	b.n	800d9e4 <_ZNK8touchgfx9ConstFont4findEt+0x58>
 800da00:	2000      	movs	r0, #0
 800da02:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800da04 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800da04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800da06:	4604      	mov	r4, r0
 800da08:	4617      	mov	r7, r2
 800da0a:	461e      	mov	r6, r3
 800da0c:	b911      	cbnz	r1, 800da14 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800da0e:	2500      	movs	r5, #0
 800da10:	4628      	mov	r0, r5
 800da12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800da14:	290a      	cmp	r1, #10
 800da16:	d0fa      	beq.n	800da0e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800da18:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800da1c:	4291      	cmp	r1, r2
 800da1e:	d0f6      	beq.n	800da0e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800da20:	f242 020b 	movw	r2, #8203	; 0x200b
 800da24:	4291      	cmp	r1, r2
 800da26:	d0f2      	beq.n	800da0e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800da28:	f7ff ffb0 	bl	800d98c <_ZNK8touchgfx9ConstFont4findEt>
 800da2c:	4605      	mov	r5, r0
 800da2e:	b950      	cbnz	r0, 800da46 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800da30:	6823      	ldr	r3, [r4, #0]
 800da32:	4620      	mov	r0, r4
 800da34:	691b      	ldr	r3, [r3, #16]
 800da36:	4798      	blx	r3
 800da38:	4601      	mov	r1, r0
 800da3a:	4620      	mov	r0, r4
 800da3c:	f7ff ffa6 	bl	800d98c <_ZNK8touchgfx9ConstFont4findEt>
 800da40:	4605      	mov	r5, r0
 800da42:	2800      	cmp	r0, #0
 800da44:	d0e3      	beq.n	800da0e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800da46:	6823      	ldr	r3, [r4, #0]
 800da48:	4629      	mov	r1, r5
 800da4a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800da4c:	4620      	mov	r0, r4
 800da4e:	4798      	blx	r3
 800da50:	6038      	str	r0, [r7, #0]
 800da52:	6823      	ldr	r3, [r4, #0]
 800da54:	4620      	mov	r0, r4
 800da56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800da58:	4798      	blx	r3
 800da5a:	7030      	strb	r0, [r6, #0]
 800da5c:	e7d8      	b.n	800da10 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800da5e <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800da5e:	2000      	movs	r0, #0
 800da60:	4770      	bx	lr

0800da62 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800da62:	2001      	movs	r0, #1
 800da64:	4770      	bx	lr

0800da66 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800da66:	2002      	movs	r0, #2
 800da68:	4770      	bx	lr

0800da6a <_ZN8touchgfx6ScreenD1Ev>:
 800da6a:	4770      	bx	lr

0800da6c <_ZN8touchgfx12GestureEventD1Ev>:
 800da6c:	4770      	bx	lr

0800da6e <_ZN8touchgfx9DragEventD1Ev>:
 800da6e:	4770      	bx	lr

0800da70 <_ZN8touchgfx10ClickEventD1Ev>:
 800da70:	4770      	bx	lr

0800da72 <_ZN8touchgfx10ClickEventD0Ev>:
 800da72:	b510      	push	{r4, lr}
 800da74:	210c      	movs	r1, #12
 800da76:	4604      	mov	r4, r0
 800da78:	f00c fe8a 	bl	801a790 <_ZdlPvj>
 800da7c:	4620      	mov	r0, r4
 800da7e:	bd10      	pop	{r4, pc}

0800da80 <_ZN8touchgfx9DragEventD0Ev>:
 800da80:	b510      	push	{r4, lr}
 800da82:	2110      	movs	r1, #16
 800da84:	4604      	mov	r4, r0
 800da86:	f00c fe83 	bl	801a790 <_ZdlPvj>
 800da8a:	4620      	mov	r0, r4
 800da8c:	bd10      	pop	{r4, pc}

0800da8e <_ZN8touchgfx12GestureEventD0Ev>:
 800da8e:	b510      	push	{r4, lr}
 800da90:	210c      	movs	r1, #12
 800da92:	4604      	mov	r4, r0
 800da94:	f00c fe7c 	bl	801a790 <_ZdlPvj>
 800da98:	4620      	mov	r0, r4
 800da9a:	bd10      	pop	{r4, pc}

0800da9c <_ZN8touchgfx6ScreenD0Ev>:
 800da9c:	b510      	push	{r4, lr}
 800da9e:	213c      	movs	r1, #60	; 0x3c
 800daa0:	4604      	mov	r4, r0
 800daa2:	f00c fe75 	bl	801a790 <_ZdlPvj>
 800daa6:	4620      	mov	r0, r4
 800daa8:	bd10      	pop	{r4, pc}
	...

0800daac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800daac:	b530      	push	{r4, r5, lr}
 800daae:	460d      	mov	r5, r1
 800dab0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dab2:	b087      	sub	sp, #28
 800dab4:	4604      	mov	r4, r0
 800dab6:	b301      	cbz	r1, 800dafa <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800dab8:	a801      	add	r0, sp, #4
 800daba:	f7ff ff33 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dabe:	892a      	ldrh	r2, [r5, #8]
 800dac0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800dac4:	7928      	ldrb	r0, [r5, #4]
 800dac6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800daca:	f88d 0010 	strb.w	r0, [sp, #16]
 800dace:	1ad2      	subs	r2, r2, r3
 800dad0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dad2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dad4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800dad8:	441a      	add	r2, r3
 800dada:	896b      	ldrh	r3, [r5, #10]
 800dadc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800dae0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dae4:	1b5b      	subs	r3, r3, r5
 800dae6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800dae8:	442b      	add	r3, r5
 800daea:	4d05      	ldr	r5, [pc, #20]	; (800db00 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800daec:	9503      	str	r5, [sp, #12]
 800daee:	f8ad 3016 	strh.w	r3, [sp, #22]
 800daf2:	6803      	ldr	r3, [r0, #0]
 800daf4:	a903      	add	r1, sp, #12
 800daf6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800daf8:	4798      	blx	r3
 800dafa:	b007      	add	sp, #28
 800dafc:	bd30      	pop	{r4, r5, pc}
 800dafe:	bf00      	nop
 800db00:	0801e040 	.word	0x0801e040

0800db04 <_ZNK8touchgfx4Rect9intersectEss>:
 800db04:	b510      	push	{r4, lr}
 800db06:	f9b0 3000 	ldrsh.w	r3, [r0]
 800db0a:	428b      	cmp	r3, r1
 800db0c:	dc10      	bgt.n	800db30 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800db0e:	8884      	ldrh	r4, [r0, #4]
 800db10:	4423      	add	r3, r4
 800db12:	b21b      	sxth	r3, r3
 800db14:	4299      	cmp	r1, r3
 800db16:	da0b      	bge.n	800db30 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800db18:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800db1c:	4293      	cmp	r3, r2
 800db1e:	dc07      	bgt.n	800db30 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800db20:	88c0      	ldrh	r0, [r0, #6]
 800db22:	4418      	add	r0, r3
 800db24:	b200      	sxth	r0, r0
 800db26:	4282      	cmp	r2, r0
 800db28:	bfac      	ite	ge
 800db2a:	2000      	movge	r0, #0
 800db2c:	2001      	movlt	r0, #1
 800db2e:	bd10      	pop	{r4, pc}
 800db30:	2000      	movs	r0, #0
 800db32:	e7fc      	b.n	800db2e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800db34 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800db34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db36:	460c      	mov	r4, r1
 800db38:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800db3a:	b089      	sub	sp, #36	; 0x24
 800db3c:	4605      	mov	r5, r0
 800db3e:	2900      	cmp	r1, #0
 800db40:	d054      	beq.n	800dbec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800db42:	4668      	mov	r0, sp
 800db44:	f7ff feee 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db48:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800db4a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800db4c:	8922      	ldrh	r2, [r4, #8]
 800db4e:	88e1      	ldrh	r1, [r4, #6]
 800db50:	443a      	add	r2, r7
 800db52:	4431      	add	r1, r6
 800db54:	b212      	sxth	r2, r2
 800db56:	b209      	sxth	r1, r1
 800db58:	4668      	mov	r0, sp
 800db5a:	f7ff ffd3 	bl	800db04 <_ZNK8touchgfx4Rect9intersectEss>
 800db5e:	b1d0      	cbz	r0, 800db96 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800db60:	89a2      	ldrh	r2, [r4, #12]
 800db62:	8961      	ldrh	r1, [r4, #10]
 800db64:	443a      	add	r2, r7
 800db66:	4431      	add	r1, r6
 800db68:	b212      	sxth	r2, r2
 800db6a:	b209      	sxth	r1, r1
 800db6c:	4668      	mov	r0, sp
 800db6e:	f7ff ffc9 	bl	800db04 <_ZNK8touchgfx4Rect9intersectEss>
 800db72:	4603      	mov	r3, r0
 800db74:	b978      	cbnz	r0, 800db96 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800db76:	4a1e      	ldr	r2, [pc, #120]	; (800dbf0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800db78:	9204      	str	r2, [sp, #16]
 800db7a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800db7c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800db80:	2202      	movs	r2, #2
 800db82:	f88d 2014 	strb.w	r2, [sp, #20]
 800db86:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db8a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800db8e:	6803      	ldr	r3, [r0, #0]
 800db90:	a904      	add	r1, sp, #16
 800db92:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db94:	4798      	blx	r3
 800db96:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800db98:	a802      	add	r0, sp, #8
 800db9a:	f7ff fec3 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db9e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800dba2:	88e0      	ldrh	r0, [r4, #6]
 800dba4:	8961      	ldrh	r1, [r4, #10]
 800dba6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800dbaa:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800dbae:	8923      	ldrh	r3, [r4, #8]
 800dbb0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800dbb2:	7927      	ldrb	r7, [r4, #4]
 800dbb4:	f88d 7014 	strb.w	r7, [sp, #20]
 800dbb8:	1a80      	subs	r0, r0, r2
 800dbba:	1a89      	subs	r1, r1, r2
 800dbbc:	89a2      	ldrh	r2, [r4, #12]
 800dbbe:	4c0d      	ldr	r4, [pc, #52]	; (800dbf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800dbc0:	9404      	str	r4, [sp, #16]
 800dbc2:	4460      	add	r0, ip
 800dbc4:	eba3 030e 	sub.w	r3, r3, lr
 800dbc8:	eba2 020e 	sub.w	r2, r2, lr
 800dbcc:	f8ad 0016 	strh.w	r0, [sp, #22]
 800dbd0:	4433      	add	r3, r6
 800dbd2:	4461      	add	r1, ip
 800dbd4:	4432      	add	r2, r6
 800dbd6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800dbd8:	f8ad 101a 	strh.w	r1, [sp, #26]
 800dbdc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dbe0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dbe4:	6803      	ldr	r3, [r0, #0]
 800dbe6:	a904      	add	r1, sp, #16
 800dbe8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dbea:	4798      	blx	r3
 800dbec:	b009      	add	sp, #36	; 0x24
 800dbee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dbf0:	0801e018 	.word	0x0801e018
 800dbf4:	0801e02c 	.word	0x0801e02c

0800dbf8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800dbf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbfc:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800dc00:	790b      	ldrb	r3, [r1, #4]
 800dc02:	b0a1      	sub	sp, #132	; 0x84
 800dc04:	4604      	mov	r4, r0
 800dc06:	460d      	mov	r5, r1
 800dc08:	f1b9 0f00 	cmp.w	r9, #0
 800dc0c:	d00f      	beq.n	800dc2e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800dc0e:	2b00      	cmp	r3, #0
 800dc10:	f040 80a0 	bne.w	800dd54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800dc14:	b021      	add	sp, #132	; 0x84
 800dc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc1a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800dc1e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dc22:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dc26:	1d20      	adds	r0, r4, #4
 800dc28:	f7fb ffaa 	bl	8009b80 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dc2c:	e092      	b.n	800dd54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800dc2e:	2b00      	cmp	r3, #0
 800dc30:	d1f0      	bne.n	800dc14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dc32:	4b5e      	ldr	r3, [pc, #376]	; (800ddac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800dc34:	681b      	ldr	r3, [r3, #0]
 800dc36:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800dc3a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800dc3e:	f1ba 0f03 	cmp.w	sl, #3
 800dc42:	ddea      	ble.n	800dc1a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800dc44:	f1ba 0f0c 	cmp.w	sl, #12
 800dc48:	f04f 0303 	mov.w	r3, #3
 800dc4c:	bfdc      	itt	le
 800dc4e:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800dc52:	fb92 f3f3 	sdivle	r3, r2, r3
 800dc56:	9301      	str	r3, [sp, #4]
 800dc58:	4b55      	ldr	r3, [pc, #340]	; (800ddb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800dc5a:	4956      	ldr	r1, [pc, #344]	; (800ddb4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800dc5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dc60:	4b55      	ldr	r3, [pc, #340]	; (800ddb8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800dc62:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800dc66:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dc6a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800dc6e:	ab0e      	add	r3, sp, #56	; 0x38
 800dc70:	2248      	movs	r2, #72	; 0x48
 800dc72:	2600      	movs	r6, #0
 800dc74:	4618      	mov	r0, r3
 800dc76:	960a      	str	r6, [sp, #40]	; 0x28
 800dc78:	f00c fe34 	bl	801a8e4 <memcpy>
 800dc7c:	f04f 32ff 	mov.w	r2, #4294967295
 800dc80:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800dc84:	f8cd a008 	str.w	sl, [sp, #8]
 800dc88:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800dc8c:	fb93 f3f2 	sdiv	r3, r3, r2
 800dc90:	b29b      	uxth	r3, r3
 800dc92:	46b3      	mov	fp, r6
 800dc94:	9303      	str	r3, [sp, #12]
 800dc96:	2300      	movs	r3, #0
 800dc98:	9309      	str	r3, [sp, #36]	; 0x24
 800dc9a:	9b07      	ldr	r3, [sp, #28]
 800dc9c:	9a03      	ldr	r2, [sp, #12]
 800dc9e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800dca2:	88ef      	ldrh	r7, [r5, #6]
 800dca4:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800dca8:	fb13 f302 	smulbb	r3, r3, r2
 800dcac:	b29b      	uxth	r3, r3
 800dcae:	9304      	str	r3, [sp, #16]
 800dcb0:	9b07      	ldr	r3, [sp, #28]
 800dcb2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800dcb6:	a80a      	add	r0, sp, #40	; 0x28
 800dcb8:	685b      	ldr	r3, [r3, #4]
 800dcba:	fb13 f302 	smulbb	r3, r3, r2
 800dcbe:	b29b      	uxth	r3, r3
 800dcc0:	9305      	str	r3, [sp, #20]
 800dcc2:	9b04      	ldr	r3, [sp, #16]
 800dcc4:	441f      	add	r7, r3
 800dcc6:	9b05      	ldr	r3, [sp, #20]
 800dcc8:	4498      	add	r8, r3
 800dcca:	b23f      	sxth	r7, r7
 800dccc:	fa0f f888 	sxth.w	r8, r8
 800dcd0:	4642      	mov	r2, r8
 800dcd2:	4639      	mov	r1, r7
 800dcd4:	f7ff ff16 	bl	800db04 <_ZNK8touchgfx4Rect9intersectEss>
 800dcd8:	b380      	cbz	r0, 800dd3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dcda:	4639      	mov	r1, r7
 800dcdc:	ab09      	add	r3, sp, #36	; 0x24
 800dcde:	4642      	mov	r2, r8
 800dce0:	1d20      	adds	r0, r4, #4
 800dce2:	f7fb ff4d 	bl	8009b80 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dce6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800dce8:	b341      	cbz	r1, 800dd3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dcea:	4549      	cmp	r1, r9
 800dcec:	d026      	beq.n	800dd3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dcee:	a80c      	add	r0, sp, #48	; 0x30
 800dcf0:	f7ff fe18 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dcf4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800dcf8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dcfc:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800dd00:	2002      	movs	r0, #2
 800dd02:	fb92 f2f0 	sdiv	r2, r2, r0
 800dd06:	440a      	add	r2, r1
 800dd08:	1a99      	subs	r1, r3, r2
 800dd0a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800dd0e:	fb93 f3f0 	sdiv	r3, r3, r0
 800dd12:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800dd16:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dd1a:	4403      	add	r3, r0
 800dd1c:	1ad3      	subs	r3, r2, r3
 800dd1e:	435b      	muls	r3, r3
 800dd20:	9a06      	ldr	r2, [sp, #24]
 800dd22:	fb01 3301 	mla	r3, r1, r1, r3
 800dd26:	4293      	cmp	r3, r2
 800dd28:	d208      	bcs.n	800dd3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dd2a:	9a04      	ldr	r2, [sp, #16]
 800dd2c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800dd30:	86a2      	strh	r2, [r4, #52]	; 0x34
 800dd32:	9a05      	ldr	r2, [sp, #20]
 800dd34:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800dd38:	86e2      	strh	r2, [r4, #54]	; 0x36
 800dd3a:	9306      	str	r3, [sp, #24]
 800dd3c:	f10b 0b02 	add.w	fp, fp, #2
 800dd40:	f1bb 0f08 	cmp.w	fp, #8
 800dd44:	dda7      	ble.n	800dc96 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dd46:	9b02      	ldr	r3, [sp, #8]
 800dd48:	4453      	add	r3, sl
 800dd4a:	9302      	str	r3, [sp, #8]
 800dd4c:	9b01      	ldr	r3, [sp, #4]
 800dd4e:	3601      	adds	r6, #1
 800dd50:	42b3      	cmp	r3, r6
 800dd52:	d199      	bne.n	800dc88 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800dd54:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dd56:	2900      	cmp	r1, #0
 800dd58:	f43f af5c 	beq.w	800dc14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dd5c:	a80c      	add	r0, sp, #48	; 0x30
 800dd5e:	f7ff fde1 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd62:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800dd66:	88ea      	ldrh	r2, [r5, #6]
 800dd68:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800dd6c:	7929      	ldrb	r1, [r5, #4]
 800dd6e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800dd72:	1ad2      	subs	r2, r2, r3
 800dd74:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dd76:	441a      	add	r2, r3
 800dd78:	892b      	ldrh	r3, [r5, #8]
 800dd7a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800dd7e:	1a1b      	subs	r3, r3, r0
 800dd80:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800dd82:	4403      	add	r3, r0
 800dd84:	480d      	ldr	r0, [pc, #52]	; (800ddbc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800dd86:	900e      	str	r0, [sp, #56]	; 0x38
 800dd88:	2600      	movs	r6, #0
 800dd8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dd8c:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800dd90:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800dd94:	6803      	ldr	r3, [r0, #0]
 800dd96:	a90e      	add	r1, sp, #56	; 0x38
 800dd98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd9a:	4798      	blx	r3
 800dd9c:	792b      	ldrb	r3, [r5, #4]
 800dd9e:	2b00      	cmp	r3, #0
 800dda0:	f43f af38 	beq.w	800dc14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dda4:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800dda8:	e734      	b.n	800dc14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ddaa:	bf00      	nop
 800ddac:	200123bc 	.word	0x200123bc
 800ddb0:	200123b0 	.word	0x200123b0
 800ddb4:	0801b80c 	.word	0x0801b80c
 800ddb8:	200123b2 	.word	0x200123b2
 800ddbc:	0801e018 	.word	0x0801e018

0800ddc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800ddc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ddc2:	4604      	mov	r4, r0
 800ddc4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800ddc8:	3201      	adds	r2, #1
 800ddca:	d112      	bne.n	800ddf2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ddcc:	6803      	ldr	r3, [r0, #0]
 800ddce:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ddd2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ddd6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ddda:	2500      	movs	r5, #0
 800dddc:	9500      	str	r5, [sp, #0]
 800ddde:	466d      	mov	r5, sp
 800dde0:	4629      	mov	r1, r5
 800dde2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800dde6:	6a1b      	ldr	r3, [r3, #32]
 800dde8:	4798      	blx	r3
 800ddea:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ddee:	e884 0003 	stmia.w	r4, {r0, r1}
 800ddf2:	4620      	mov	r0, r4
 800ddf4:	b003      	add	sp, #12
 800ddf6:	bd30      	pop	{r4, r5, pc}

0800ddf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ddf8:	b513      	push	{r0, r1, r4, lr}
 800ddfa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ddfe:	3301      	adds	r3, #1
 800de00:	4604      	mov	r4, r0
 800de02:	d109      	bne.n	800de18 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800de04:	4601      	mov	r1, r0
 800de06:	4668      	mov	r0, sp
 800de08:	f7ff fd8c 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de0c:	f8bd 3000 	ldrh.w	r3, [sp]
 800de10:	8423      	strh	r3, [r4, #32]
 800de12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800de16:	8463      	strh	r3, [r4, #34]	; 0x22
 800de18:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800de1c:	b002      	add	sp, #8
 800de1e:	bd10      	pop	{r4, pc}

0800de20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800de20:	b513      	push	{r0, r1, r4, lr}
 800de22:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800de26:	3301      	adds	r3, #1
 800de28:	4604      	mov	r4, r0
 800de2a:	d109      	bne.n	800de40 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800de2c:	4601      	mov	r1, r0
 800de2e:	4668      	mov	r0, sp
 800de30:	f7ff fd78 	bl	800d924 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800de34:	f8bd 3000 	ldrh.w	r3, [sp]
 800de38:	8423      	strh	r3, [r4, #32]
 800de3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800de3e:	8463      	strh	r3, [r4, #34]	; 0x22
 800de40:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800de44:	b002      	add	sp, #8
 800de46:	bd10      	pop	{r4, pc}

0800de48 <_ZN8touchgfx6ScreenC1Ev>:
 800de48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de4a:	4605      	mov	r5, r0
 800de4c:	4b17      	ldr	r3, [pc, #92]	; (800deac <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800de4e:	f845 3b04 	str.w	r3, [r5], #4
 800de52:	2301      	movs	r3, #1
 800de54:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800de58:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800de5c:	4b14      	ldr	r3, [pc, #80]	; (800deb0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800de5e:	4915      	ldr	r1, [pc, #84]	; (800deb4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800de60:	f9b3 7000 	ldrsh.w	r7, [r3]
 800de64:	4b14      	ldr	r3, [pc, #80]	; (800deb8 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800de66:	6041      	str	r1, [r0, #4]
 800de68:	2200      	movs	r2, #0
 800de6a:	8102      	strh	r2, [r0, #8]
 800de6c:	8142      	strh	r2, [r0, #10]
 800de6e:	8182      	strh	r2, [r0, #12]
 800de70:	81c2      	strh	r2, [r0, #14]
 800de72:	8202      	strh	r2, [r0, #16]
 800de74:	8242      	strh	r2, [r0, #18]
 800de76:	8282      	strh	r2, [r0, #20]
 800de78:	82c2      	strh	r2, [r0, #22]
 800de7a:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800de7e:	6202      	str	r2, [r0, #32]
 800de80:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800de84:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800de88:	6342      	str	r2, [r0, #52]	; 0x34
 800de8a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800de8e:	4611      	mov	r1, r2
 800de90:	4604      	mov	r4, r0
 800de92:	4628      	mov	r0, r5
 800de94:	f7f5 fd48 	bl	8003928 <_ZN8touchgfx8Drawable5setXYEss>
 800de98:	4639      	mov	r1, r7
 800de9a:	4628      	mov	r0, r5
 800de9c:	f7f5 fd51 	bl	8003942 <_ZN8touchgfx8Drawable8setWidthEs>
 800dea0:	4628      	mov	r0, r5
 800dea2:	4631      	mov	r1, r6
 800dea4:	f7f5 fd4f 	bl	8003946 <_ZN8touchgfx8Drawable9setHeightEs>
 800dea8:	4620      	mov	r0, r4
 800deaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800deac:	0801e054 	.word	0x0801e054
 800deb0:	200123b0 	.word	0x200123b0
 800deb4:	0801cd40 	.word	0x0801cd40
 800deb8:	200123b2 	.word	0x200123b2

0800debc <_ZN8touchgfx6Screen4drawEv>:
 800debc:	b507      	push	{r0, r1, r2, lr}
 800debe:	4b09      	ldr	r3, [pc, #36]	; (800dee4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800dec0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dec4:	4b08      	ldr	r3, [pc, #32]	; (800dee8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800dec6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800deca:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dece:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ded2:	6803      	ldr	r3, [r0, #0]
 800ded4:	2100      	movs	r1, #0
 800ded6:	9100      	str	r1, [sp, #0]
 800ded8:	689b      	ldr	r3, [r3, #8]
 800deda:	4669      	mov	r1, sp
 800dedc:	4798      	blx	r3
 800dede:	b003      	add	sp, #12
 800dee0:	f85d fb04 	ldr.w	pc, [sp], #4
 800dee4:	200123b0 	.word	0x200123b0
 800dee8:	200123b2 	.word	0x200123b2

0800deec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800deec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800def0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800def4:	2b00      	cmp	r3, #0
 800def6:	b089      	sub	sp, #36	; 0x24
 800def8:	4680      	mov	r8, r0
 800defa:	460c      	mov	r4, r1
 800defc:	4615      	mov	r5, r2
 800defe:	dd0e      	ble.n	800df1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800df00:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800df04:	2b00      	cmp	r3, #0
 800df06:	dd0a      	ble.n	800df1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800df08:	4628      	mov	r0, r5
 800df0a:	f7ff ff59 	bl	800ddc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df0e:	4621      	mov	r1, r4
 800df10:	f7fe ff06 	bl	800cd20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800df14:	69eb      	ldr	r3, [r5, #28]
 800df16:	b928      	cbnz	r0, 800df24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800df18:	461d      	mov	r5, r3
 800df1a:	2b00      	cmp	r3, #0
 800df1c:	d1f4      	bne.n	800df08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800df1e:	b009      	add	sp, #36	; 0x24
 800df20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df24:	ae04      	add	r6, sp, #16
 800df26:	2b00      	cmp	r3, #0
 800df28:	d051      	beq.n	800dfce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800df2a:	682b      	ldr	r3, [r5, #0]
 800df2c:	4629      	mov	r1, r5
 800df2e:	68db      	ldr	r3, [r3, #12]
 800df30:	a802      	add	r0, sp, #8
 800df32:	4798      	blx	r3
 800df34:	4628      	mov	r0, r5
 800df36:	f7ff ff5f 	bl	800ddf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800df3a:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800df3e:	4407      	add	r7, r0
 800df40:	4628      	mov	r0, r5
 800df42:	f7ff ff6d 	bl	800de20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800df46:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800df4a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800df4e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800df52:	4418      	add	r0, r3
 800df54:	4621      	mov	r1, r4
 800df56:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800df5a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800df5e:	b23f      	sxth	r7, r7
 800df60:	4630      	mov	r0, r6
 800df62:	f8ad 3016 	strh.w	r3, [sp, #22]
 800df66:	f8ad 7010 	strh.w	r7, [sp, #16]
 800df6a:	f7fb fec3 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800df6e:	4628      	mov	r0, r5
 800df70:	f7ff ff26 	bl	800ddc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df74:	4602      	mov	r2, r0
 800df76:	e896 0003 	ldmia.w	r6, {r0, r1}
 800df7a:	ab06      	add	r3, sp, #24
 800df7c:	e883 0003 	stmia.w	r3, {r0, r1}
 800df80:	4611      	mov	r1, r2
 800df82:	4618      	mov	r0, r3
 800df84:	f7fb feb6 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800df88:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800df8c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800df90:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800df94:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800df98:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800df9c:	4299      	cmp	r1, r3
 800df9e:	d10b      	bne.n	800dfb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800dfa0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dfa4:	4552      	cmp	r2, sl
 800dfa6:	d107      	bne.n	800dfb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800dfa8:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800dfac:	455a      	cmp	r2, fp
 800dfae:	d103      	bne.n	800dfb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800dfb0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800dfb4:	454a      	cmp	r2, r9
 800dfb6:	d00a      	beq.n	800dfce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800dfb8:	f1bb 0f00 	cmp.w	fp, #0
 800dfbc:	d002      	beq.n	800dfc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>
 800dfbe:	f1b9 0f00 	cmp.w	r9, #0
 800dfc2:	d12e      	bne.n	800e022 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x136>
 800dfc4:	69ea      	ldr	r2, [r5, #28]
 800dfc6:	4621      	mov	r1, r4
 800dfc8:	4640      	mov	r0, r8
 800dfca:	f7ff ff8f 	bl	800deec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dfce:	4628      	mov	r0, r5
 800dfd0:	f7ff fef6 	bl	800ddc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dfd4:	6861      	ldr	r1, [r4, #4]
 800dfd6:	4602      	mov	r2, r0
 800dfd8:	6820      	ldr	r0, [r4, #0]
 800dfda:	4633      	mov	r3, r6
 800dfdc:	c303      	stmia	r3!, {r0, r1}
 800dfde:	4611      	mov	r1, r2
 800dfe0:	4630      	mov	r0, r6
 800dfe2:	f7fb fe87 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800dfe6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800dfea:	2b00      	cmp	r3, #0
 800dfec:	dd97      	ble.n	800df1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dfee:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800dff2:	2b00      	cmp	r3, #0
 800dff4:	dd93      	ble.n	800df1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800dff6:	4628      	mov	r0, r5
 800dff8:	f7ff fefe 	bl	800ddf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800dffc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e000:	1a18      	subs	r0, r3, r0
 800e002:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e006:	4628      	mov	r0, r5
 800e008:	f7ff ff0a 	bl	800de20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e00c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e010:	1a18      	subs	r0, r3, r0
 800e012:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e016:	682b      	ldr	r3, [r5, #0]
 800e018:	4631      	mov	r1, r6
 800e01a:	689b      	ldr	r3, [r3, #8]
 800e01c:	4628      	mov	r0, r5
 800e01e:	4798      	blx	r3
 800e020:	e77d      	b.n	800df1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e022:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e026:	fa1f f08a 	uxth.w	r0, sl
 800e02a:	4552      	cmp	r2, sl
 800e02c:	9000      	str	r0, [sp, #0]
 800e02e:	da12      	bge.n	800e056 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x16a>
 800e030:	9301      	str	r3, [sp, #4]
 800e032:	9b00      	ldr	r3, [sp, #0]
 800e034:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e038:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e03c:	1a9a      	subs	r2, r3, r2
 800e03e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e042:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e046:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e04a:	69ea      	ldr	r2, [r5, #28]
 800e04c:	4631      	mov	r1, r6
 800e04e:	4640      	mov	r0, r8
 800e050:	f7ff ff4c 	bl	800deec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e054:	9b01      	ldr	r3, [sp, #4]
 800e056:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e05a:	429a      	cmp	r2, r3
 800e05c:	b29f      	uxth	r7, r3
 800e05e:	da0d      	bge.n	800e07c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800e060:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e064:	1aba      	subs	r2, r7, r2
 800e066:	f8ad a012 	strh.w	sl, [sp, #18]
 800e06a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e06e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e072:	69ea      	ldr	r2, [r5, #28]
 800e074:	4631      	mov	r1, r6
 800e076:	4640      	mov	r0, r8
 800e078:	f7ff ff38 	bl	800deec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e07c:	8822      	ldrh	r2, [r4, #0]
 800e07e:	88a3      	ldrh	r3, [r4, #4]
 800e080:	445f      	add	r7, fp
 800e082:	4413      	add	r3, r2
 800e084:	b29b      	uxth	r3, r3
 800e086:	b2bf      	uxth	r7, r7
 800e088:	b23a      	sxth	r2, r7
 800e08a:	b219      	sxth	r1, r3
 800e08c:	4291      	cmp	r1, r2
 800e08e:	dd0d      	ble.n	800e0ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800e090:	1bdb      	subs	r3, r3, r7
 800e092:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e096:	f8ad a012 	strh.w	sl, [sp, #18]
 800e09a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e09e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e0a2:	69ea      	ldr	r2, [r5, #28]
 800e0a4:	4631      	mov	r1, r6
 800e0a6:	4640      	mov	r0, r8
 800e0a8:	f7ff ff20 	bl	800deec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e0ac:	88e2      	ldrh	r2, [r4, #6]
 800e0ae:	8863      	ldrh	r3, [r4, #2]
 800e0b0:	4413      	add	r3, r2
 800e0b2:	9a00      	ldr	r2, [sp, #0]
 800e0b4:	444a      	add	r2, r9
 800e0b6:	b29b      	uxth	r3, r3
 800e0b8:	fa1f f982 	uxth.w	r9, r2
 800e0bc:	fa0f f289 	sxth.w	r2, r9
 800e0c0:	b219      	sxth	r1, r3
 800e0c2:	428a      	cmp	r2, r1
 800e0c4:	da83      	bge.n	800dfce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800e0c6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e0ca:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e0ce:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e0d2:	eba3 0309 	sub.w	r3, r3, r9
 800e0d6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e0da:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e0de:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e0e2:	69ea      	ldr	r2, [r5, #28]
 800e0e4:	4631      	mov	r1, r6
 800e0e6:	e76f      	b.n	800dfc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xdc>

0800e0e8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e0e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e0ea:	aa02      	add	r2, sp, #8
 800e0ec:	2300      	movs	r3, #0
 800e0ee:	f842 3d04 	str.w	r3, [r2, #-4]!
 800e0f2:	4604      	mov	r4, r0
 800e0f4:	3004      	adds	r0, #4
 800e0f6:	460d      	mov	r5, r1
 800e0f8:	f7fb fed4 	bl	8009ea4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e0fc:	9a01      	ldr	r2, [sp, #4]
 800e0fe:	b11a      	cbz	r2, 800e108 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800e100:	4629      	mov	r1, r5
 800e102:	4620      	mov	r0, r4
 800e104:	f7ff fef2 	bl	800deec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e108:	b003      	add	sp, #12
 800e10a:	bd30      	pop	{r4, r5, pc}

0800e10c <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e10c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e10e:	4602      	mov	r2, r0
 800e110:	4604      	mov	r4, r0
 800e112:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e116:	460d      	mov	r5, r1
 800e118:	6851      	ldr	r1, [r2, #4]
 800e11a:	466b      	mov	r3, sp
 800e11c:	c303      	stmia	r3!, {r0, r1}
 800e11e:	4629      	mov	r1, r5
 800e120:	4668      	mov	r0, sp
 800e122:	f7fb fde7 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 800e126:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e12a:	4669      	mov	r1, sp
 800e12c:	b123      	cbz	r3, 800e138 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800e12e:	4620      	mov	r0, r4
 800e130:	f7ff ffda 	bl	800e0e8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e134:	b003      	add	sp, #12
 800e136:	bd30      	pop	{r4, r5, pc}
 800e138:	1d20      	adds	r0, r4, #4
 800e13a:	f7fb fe7a 	bl	8009e32 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e13e:	e7f9      	b.n	800e134 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800e140 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e140:	680a      	ldr	r2, [r1, #0]
 800e142:	460b      	mov	r3, r1
 800e144:	6992      	ldr	r2, [r2, #24]
 800e146:	1d01      	adds	r1, r0, #4
 800e148:	4618      	mov	r0, r3
 800e14a:	4710      	bx	r2

0800e14c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800e14c:	b510      	push	{r4, lr}
 800e14e:	4298      	cmp	r0, r3
 800e150:	eb01 0402 	add.w	r4, r1, r2
 800e154:	b224      	sxth	r4, r4
 800e156:	d22c      	bcs.n	800e1b2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 800e158:	b35b      	cbz	r3, 800e1b2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 800e15a:	ee07 0a90 	vmov	s15, r0
 800e15e:	eeb8 6a67 	vcvt.f32.u32	s12, s15
 800e162:	ee07 3a90 	vmov	s15, r3
 800e166:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800e16a:	ee07 2a90 	vmov	s15, r2
 800e16e:	ee86 7a26 	vdiv.f32	s14, s12, s13
 800e172:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e176:	ee37 7a66 	vsub.f32	s14, s14, s13
 800e17a:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800e17e:	ee67 5a07 	vmul.f32	s11, s14, s14
 800e182:	ee07 1a90 	vmov	s15, r1
 800e186:	eee5 6a87 	vfma.f32	s13, s11, s14
 800e18a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e18e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800e192:	eee6 7a26 	vfma.f32	s15, s12, s13
 800e196:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e19a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e19e:	bfcc      	ite	gt
 800e1a0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800e1a4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800e1a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e1ac:	ee17 3a90 	vmov	r3, s15
 800e1b0:	b21c      	sxth	r4, r3
 800e1b2:	4620      	mov	r0, r4
 800e1b4:	bd10      	pop	{r4, pc}

0800e1b6 <_ZN8touchgfx12TextProviderC1Ev>:
 800e1b6:	b510      	push	{r4, lr}
 800e1b8:	2300      	movs	r3, #0
 800e1ba:	2201      	movs	r2, #1
 800e1bc:	4604      	mov	r4, r0
 800e1be:	e9c0 3300 	strd	r3, r3, [r0]
 800e1c2:	60c3      	str	r3, [r0, #12]
 800e1c4:	7403      	strb	r3, [r0, #16]
 800e1c6:	82c3      	strh	r3, [r0, #22]
 800e1c8:	8303      	strh	r3, [r0, #24]
 800e1ca:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e1cc:	8603      	strh	r3, [r0, #48]	; 0x30
 800e1ce:	86c3      	strh	r3, [r0, #54]	; 0x36
 800e1d0:	8703      	strh	r3, [r0, #56]	; 0x38
 800e1d2:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e1d4:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800e1d8:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800e1dc:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800e1e0:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800e1e4:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800e1e8:	f7f5 fb16 	bl	8003818 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e1ec:	4620      	mov	r0, r4
 800e1ee:	bd10      	pop	{r4, pc}

0800e1f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e1f0:	b530      	push	{r4, r5, lr}
 800e1f2:	2500      	movs	r5, #0
 800e1f4:	2401      	movs	r4, #1
 800e1f6:	6843      	ldr	r3, [r0, #4]
 800e1f8:	b913      	cbnz	r3, 800e200 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e1fa:	6803      	ldr	r3, [r0, #0]
 800e1fc:	b1f3      	cbz	r3, 800e23c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e1fe:	6043      	str	r3, [r0, #4]
 800e200:	7c03      	ldrb	r3, [r0, #16]
 800e202:	b143      	cbz	r3, 800e216 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e204:	68c3      	ldr	r3, [r0, #12]
 800e206:	b12b      	cbz	r3, 800e214 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e208:	881a      	ldrh	r2, [r3, #0]
 800e20a:	b11a      	cbz	r2, 800e214 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e20c:	1c9a      	adds	r2, r3, #2
 800e20e:	60c2      	str	r2, [r0, #12]
 800e210:	8818      	ldrh	r0, [r3, #0]
 800e212:	bd30      	pop	{r4, r5, pc}
 800e214:	7405      	strb	r5, [r0, #16]
 800e216:	6843      	ldr	r3, [r0, #4]
 800e218:	8819      	ldrh	r1, [r3, #0]
 800e21a:	b179      	cbz	r1, 800e23c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e21c:	1c9a      	adds	r2, r3, #2
 800e21e:	2902      	cmp	r1, #2
 800e220:	6042      	str	r2, [r0, #4]
 800e222:	d1f5      	bne.n	800e210 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e224:	6883      	ldr	r3, [r0, #8]
 800e226:	1d1a      	adds	r2, r3, #4
 800e228:	6082      	str	r2, [r0, #8]
 800e22a:	681b      	ldr	r3, [r3, #0]
 800e22c:	60c3      	str	r3, [r0, #12]
 800e22e:	2b00      	cmp	r3, #0
 800e230:	d0e1      	beq.n	800e1f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e232:	881b      	ldrh	r3, [r3, #0]
 800e234:	2b00      	cmp	r3, #0
 800e236:	d0de      	beq.n	800e1f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e238:	7404      	strb	r4, [r0, #16]
 800e23a:	e7dc      	b.n	800e1f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e23c:	2000      	movs	r0, #0
 800e23e:	e7e8      	b.n	800e212 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e240 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800e240:	b410      	push	{r4}
 800e242:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e244:	2300      	movs	r3, #0
 800e246:	6082      	str	r2, [r0, #8]
 800e248:	6001      	str	r1, [r0, #0]
 800e24a:	6043      	str	r3, [r0, #4]
 800e24c:	60c3      	str	r3, [r0, #12]
 800e24e:	7403      	strb	r3, [r0, #16]
 800e250:	8603      	strh	r3, [r0, #48]	; 0x30
 800e252:	8303      	strh	r3, [r0, #24]
 800e254:	8703      	strh	r3, [r0, #56]	; 0x38
 800e256:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e25a:	f7f5 badd 	b.w	8003818 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e25e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e25e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e260:	4605      	mov	r5, r0
 800e262:	4608      	mov	r0, r1
 800e264:	b1e9      	cbz	r1, 800e2a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e266:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800e26a:	460b      	mov	r3, r1
 800e26c:	f101 0708 	add.w	r7, r1, #8
 800e270:	4622      	mov	r2, r4
 800e272:	6818      	ldr	r0, [r3, #0]
 800e274:	6859      	ldr	r1, [r3, #4]
 800e276:	4626      	mov	r6, r4
 800e278:	c603      	stmia	r6!, {r0, r1}
 800e27a:	3308      	adds	r3, #8
 800e27c:	42bb      	cmp	r3, r7
 800e27e:	4634      	mov	r4, r6
 800e280:	d1f7      	bne.n	800e272 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e282:	6818      	ldr	r0, [r3, #0]
 800e284:	6030      	str	r0, [r6, #0]
 800e286:	889b      	ldrh	r3, [r3, #4]
 800e288:	80b3      	strh	r3, [r6, #4]
 800e28a:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800e28e:	015b      	lsls	r3, r3, #5
 800e290:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e294:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800e298:	430b      	orrs	r3, r1
 800e29a:	425b      	negs	r3, r3
 800e29c:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800e2a0:	4610      	mov	r0, r2
 800e2a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e2a4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e2a4:	b538      	push	{r3, r4, r5, lr}
 800e2a6:	460c      	mov	r4, r1
 800e2a8:	6811      	ldr	r1, [r2, #0]
 800e2aa:	4610      	mov	r0, r2
 800e2ac:	68cd      	ldr	r5, [r1, #12]
 800e2ae:	4619      	mov	r1, r3
 800e2b0:	47a8      	blx	r5
 800e2b2:	2800      	cmp	r0, #0
 800e2b4:	bf08      	it	eq
 800e2b6:	4620      	moveq	r0, r4
 800e2b8:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e2bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e2bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e2be:	4604      	mov	r4, r0
 800e2c0:	4615      	mov	r5, r2
 800e2c2:	4608      	mov	r0, r1
 800e2c4:	b93a      	cbnz	r2, 800e2d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e2c6:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e2ca:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800e2ce:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e2d2:	4628      	mov	r0, r5
 800e2d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e2d6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e2da:	8893      	ldrh	r3, [r2, #4]
 800e2dc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e2e0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e2e4:	79ee      	ldrb	r6, [r5, #7]
 800e2e6:	4316      	orrs	r6, r2
 800e2e8:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e2ec:	189a      	adds	r2, r3, r2
 800e2ee:	b291      	uxth	r1, r2
 800e2f0:	291d      	cmp	r1, #29
 800e2f2:	b2b7      	uxth	r7, r6
 800e2f4:	f200 8083 	bhi.w	800e3fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e2f8:	2201      	movs	r2, #1
 800e2fa:	408a      	lsls	r2, r1
 800e2fc:	4978      	ldr	r1, [pc, #480]	; (800e4e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e2fe:	420a      	tst	r2, r1
 800e300:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e304:	d12d      	bne.n	800e362 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e306:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e30a:	d078      	beq.n	800e3fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e30c:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800e310:	462b      	mov	r3, r5
 800e312:	f105 0e08 	add.w	lr, r5, #8
 800e316:	4615      	mov	r5, r2
 800e318:	6818      	ldr	r0, [r3, #0]
 800e31a:	6859      	ldr	r1, [r3, #4]
 800e31c:	4694      	mov	ip, r2
 800e31e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e322:	3308      	adds	r3, #8
 800e324:	4573      	cmp	r3, lr
 800e326:	4662      	mov	r2, ip
 800e328:	d1f6      	bne.n	800e318 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800e32a:	6818      	ldr	r0, [r3, #0]
 800e32c:	f8cc 0000 	str.w	r0, [ip]
 800e330:	889b      	ldrh	r3, [r3, #4]
 800e332:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e336:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800e33a:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800e33e:	b2b3      	uxth	r3, r6
 800e340:	1aca      	subs	r2, r1, r3
 800e342:	b292      	uxth	r2, r2
 800e344:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800e348:	10d2      	asrs	r2, r2, #3
 800e34a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e34e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e352:	4302      	orrs	r2, r0
 800e354:	1bcf      	subs	r7, r1, r7
 800e356:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800e35a:	1afb      	subs	r3, r7, r3
 800e35c:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800e360:	e7b7      	b.n	800e2d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e362:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e364:	b92b      	cbnz	r3, 800e372 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800e366:	4b5f      	ldr	r3, [pc, #380]	; (800e4e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800e368:	4a5f      	ldr	r2, [pc, #380]	; (800e4e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800e36a:	4860      	ldr	r0, [pc, #384]	; (800e4ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800e36c:	21c0      	movs	r1, #192	; 0xc0
 800e36e:	f00c fa3b 	bl	801a7e8 <__assert_func>
 800e372:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800e374:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e378:	8b59      	ldrh	r1, [r3, #26]
 800e37a:	f640 6333 	movw	r3, #3635	; 0xe33
 800e37e:	4299      	cmp	r1, r3
 800e380:	d110      	bne.n	800e3a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800e382:	6803      	ldr	r3, [r0, #0]
 800e384:	68db      	ldr	r3, [r3, #12]
 800e386:	4798      	blx	r3
 800e388:	7b41      	ldrb	r1, [r0, #13]
 800e38a:	00cb      	lsls	r3, r1, #3
 800e38c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e390:	7a03      	ldrb	r3, [r0, #8]
 800e392:	0648      	lsls	r0, r1, #25
 800e394:	ea43 0302 	orr.w	r3, r3, r2
 800e398:	bf44      	itt	mi
 800e39a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e39e:	b21b      	sxthmi	r3, r3
 800e3a0:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e3a4:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800e3a8:	443b      	add	r3, r7
 800e3aa:	4433      	add	r3, r6
 800e3ac:	b29b      	uxth	r3, r3
 800e3ae:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800e3b2:	462a      	mov	r2, r5
 800e3b4:	f105 0c08 	add.w	ip, r5, #8
 800e3b8:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e3bc:	4635      	mov	r5, r6
 800e3be:	6810      	ldr	r0, [r2, #0]
 800e3c0:	6851      	ldr	r1, [r2, #4]
 800e3c2:	4637      	mov	r7, r6
 800e3c4:	c703      	stmia	r7!, {r0, r1}
 800e3c6:	3208      	adds	r2, #8
 800e3c8:	4562      	cmp	r2, ip
 800e3ca:	463e      	mov	r6, r7
 800e3cc:	d1f7      	bne.n	800e3be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800e3ce:	6810      	ldr	r0, [r2, #0]
 800e3d0:	6038      	str	r0, [r7, #0]
 800e3d2:	8892      	ldrh	r2, [r2, #4]
 800e3d4:	80ba      	strh	r2, [r7, #4]
 800e3d6:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800e3da:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800e3de:	10db      	asrs	r3, r3, #3
 800e3e0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e3e4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e3e8:	4313      	orrs	r3, r2
 800e3ea:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800e3ee:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800e3f2:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800e3f6:	1a9b      	subs	r3, r3, r2
 800e3f8:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800e3fc:	e769      	b.n	800e2d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e3fe:	f023 0204 	bic.w	r2, r3, #4
 800e402:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e406:	428a      	cmp	r2, r1
 800e408:	d003      	beq.n	800e412 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800e40a:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e40e:	4293      	cmp	r3, r2
 800e410:	d120      	bne.n	800e454 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800e412:	3b01      	subs	r3, #1
 800e414:	4602      	mov	r2, r0
 800e416:	b29b      	uxth	r3, r3
 800e418:	4629      	mov	r1, r5
 800e41a:	4620      	mov	r0, r4
 800e41c:	f7ff ff42 	bl	800e2a4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e420:	7b41      	ldrb	r1, [r0, #13]
 800e422:	00cb      	lsls	r3, r1, #3
 800e424:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e428:	7a03      	ldrb	r3, [r0, #8]
 800e42a:	0649      	lsls	r1, r1, #25
 800e42c:	ea43 0302 	orr.w	r3, r3, r2
 800e430:	bf44      	itt	mi
 800e432:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e436:	b21b      	sxthmi	r3, r3
 800e438:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e43c:	7b6b      	ldrb	r3, [r5, #13]
 800e43e:	7aaa      	ldrb	r2, [r5, #10]
 800e440:	005b      	lsls	r3, r3, #1
 800e442:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e446:	4313      	orrs	r3, r2
 800e448:	115a      	asrs	r2, r3, #5
 800e44a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e44e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e452:	e036      	b.n	800e4c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800e454:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e458:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e45c:	7a2a      	ldrb	r2, [r5, #8]
 800e45e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e462:	ea42 0201 	orr.w	r2, r2, r1
 800e466:	bf1c      	itt	ne
 800e468:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e46c:	b212      	sxthne	r2, r2
 800e46e:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e472:	f640 6109 	movw	r1, #3593	; 0xe09
 800e476:	f023 0210 	bic.w	r2, r3, #16
 800e47a:	428a      	cmp	r2, r1
 800e47c:	d003      	beq.n	800e486 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800e47e:	f640 6213 	movw	r2, #3603	; 0xe13
 800e482:	4293      	cmp	r3, r2
 800e484:	d12a      	bne.n	800e4dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800e486:	7b6e      	ldrb	r6, [r5, #13]
 800e488:	0076      	lsls	r6, r6, #1
 800e48a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e48e:	7aae      	ldrb	r6, [r5, #10]
 800e490:	4316      	orrs	r6, r2
 800e492:	f640 6213 	movw	r2, #3603	; 0xe13
 800e496:	4293      	cmp	r3, r2
 800e498:	bf18      	it	ne
 800e49a:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e49e:	4602      	mov	r2, r0
 800e4a0:	bf14      	ite	ne
 800e4a2:	b29b      	uxthne	r3, r3
 800e4a4:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e4a8:	4629      	mov	r1, r5
 800e4aa:	4620      	mov	r0, r4
 800e4ac:	f7ff fefa 	bl	800e2a4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e4b0:	7b43      	ldrb	r3, [r0, #13]
 800e4b2:	7a82      	ldrb	r2, [r0, #10]
 800e4b4:	005b      	lsls	r3, r3, #1
 800e4b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e4ba:	4313      	orrs	r3, r2
 800e4bc:	1af6      	subs	r6, r6, r3
 800e4be:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800e4c2:	7b69      	ldrb	r1, [r5, #13]
 800e4c4:	00cb      	lsls	r3, r1, #3
 800e4c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e4ca:	7a2b      	ldrb	r3, [r5, #8]
 800e4cc:	4313      	orrs	r3, r2
 800e4ce:	064a      	lsls	r2, r1, #25
 800e4d0:	bf44      	itt	mi
 800e4d2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e4d6:	b21b      	sxthmi	r3, r3
 800e4d8:	1bdb      	subs	r3, r3, r7
 800e4da:	e73f      	b.n	800e35c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800e4dc:	2300      	movs	r3, #0
 800e4de:	e7b6      	b.n	800e44e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800e4e0:	3fc00079 	.word	0x3fc00079
 800e4e4:	0801c5a0 	.word	0x0801c5a0
 800e4e8:	0801e2af 	.word	0x0801e2af
 800e4ec:	0801c5c7 	.word	0x0801c5c7

0800e4f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e4f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e4f4:	4604      	mov	r4, r0
 800e4f6:	b942      	cbnz	r2, 800e50a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e4f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e4fc:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800e500:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800e504:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e508:	e046      	b.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e50a:	7b51      	ldrb	r1, [r2, #13]
 800e50c:	8893      	ldrh	r3, [r2, #4]
 800e50e:	010f      	lsls	r7, r1, #4
 800e510:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800e514:	79d7      	ldrb	r7, [r2, #7]
 800e516:	4307      	orrs	r7, r0
 800e518:	2f04      	cmp	r7, #4
 800e51a:	b2bd      	uxth	r5, r7
 800e51c:	bfcc      	ite	gt
 800e51e:	08bf      	lsrgt	r7, r7, #2
 800e520:	2701      	movle	r7, #1
 800e522:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800e526:	f200 80ab 	bhi.w	800e680 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800e52a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800e52e:	4283      	cmp	r3, r0
 800e530:	d216      	bcs.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e532:	f240 605b 	movw	r0, #1627	; 0x65b
 800e536:	4283      	cmp	r3, r0
 800e538:	d859      	bhi.n	800e5ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800e53a:	f240 6057 	movw	r0, #1623	; 0x657
 800e53e:	4283      	cmp	r3, r0
 800e540:	d20e      	bcs.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e542:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e546:	d24a      	bcs.n	800e5de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800e548:	f240 604e 	movw	r0, #1614	; 0x64e
 800e54c:	4283      	cmp	r3, r0
 800e54e:	d207      	bcs.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e550:	f240 601a 	movw	r0, #1562	; 0x61a
 800e554:	4283      	cmp	r3, r0
 800e556:	d02a      	beq.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e558:	d821      	bhi.n	800e59e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800e55a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800e55e:	d35b      	bcc.n	800e618 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e560:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800e564:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e568:	f040 80d0 	bne.w	800e70c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e56c:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800e570:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e574:	f040 80ca 	bne.w	800e70c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e578:	00cb      	lsls	r3, r1, #3
 800e57a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e57e:	7a13      	ldrb	r3, [r2, #8]
 800e580:	0649      	lsls	r1, r1, #25
 800e582:	ea43 0300 	orr.w	r3, r3, r0
 800e586:	bf44      	itt	mi
 800e588:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e58c:	b21b      	sxthmi	r3, r3
 800e58e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e592:	1b5d      	subs	r5, r3, r5
 800e594:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800e598:	4610      	mov	r0, r2
 800e59a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e59e:	f240 604b 	movw	r0, #1611	; 0x64b
 800e5a2:	4283      	cmp	r3, r0
 800e5a4:	d338      	bcc.n	800e618 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e5a6:	f240 604c 	movw	r0, #1612	; 0x64c
 800e5aa:	4283      	cmp	r3, r0
 800e5ac:	d9d8      	bls.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5ae:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800e5b2:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800e5b6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e5ba:	f040 80f1 	bne.w	800e7a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e5be:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e5c2:	f040 80ed 	bne.w	800e7a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e5c6:	00cb      	lsls	r3, r1, #3
 800e5c8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e5cc:	7a13      	ldrb	r3, [r2, #8]
 800e5ce:	064e      	lsls	r6, r1, #25
 800e5d0:	ea43 0300 	orr.w	r3, r3, r0
 800e5d4:	bf44      	itt	mi
 800e5d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e5da:	b21b      	sxthmi	r3, r3
 800e5dc:	e7d9      	b.n	800e592 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800e5de:	f240 6054 	movw	r0, #1620	; 0x654
 800e5e2:	4283      	cmp	r3, r0
 800e5e4:	d8e3      	bhi.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e5e6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e5ea:	d9e0      	bls.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e5ec:	e7b8      	b.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5ee:	f240 6074 	movw	r0, #1652	; 0x674
 800e5f2:	4283      	cmp	r3, r0
 800e5f4:	d0b4      	beq.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5f6:	d82d      	bhi.n	800e654 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800e5f8:	f240 605e 	movw	r0, #1630	; 0x65e
 800e5fc:	4283      	cmp	r3, r0
 800e5fe:	d804      	bhi.n	800e60a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800e600:	f240 605d 	movw	r0, #1629	; 0x65d
 800e604:	4283      	cmp	r3, r0
 800e606:	d3d2      	bcc.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e608:	e7aa      	b.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e60a:	f240 605f 	movw	r0, #1631	; 0x65f
 800e60e:	4283      	cmp	r3, r0
 800e610:	d0cd      	beq.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e612:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800e616:	d0a3      	beq.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e618:	00cb      	lsls	r3, r1, #3
 800e61a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e61e:	7a13      	ldrb	r3, [r2, #8]
 800e620:	0649      	lsls	r1, r1, #25
 800e622:	ea43 0300 	orr.w	r3, r3, r0
 800e626:	bf44      	itt	mi
 800e628:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e62c:	b21b      	sxthmi	r3, r3
 800e62e:	1b5d      	subs	r5, r3, r5
 800e630:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e634:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800e638:	7b53      	ldrb	r3, [r2, #13]
 800e63a:	015b      	lsls	r3, r3, #5
 800e63c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e640:	7993      	ldrb	r3, [r2, #6]
 800e642:	430b      	orrs	r3, r1
 800e644:	005b      	lsls	r3, r3, #1
 800e646:	2105      	movs	r1, #5
 800e648:	fb93 f3f1 	sdiv	r3, r3, r1
 800e64c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800e650:	440b      	add	r3, r1
 800e652:	e757      	b.n	800e504 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800e654:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800e658:	4283      	cmp	r3, r0
 800e65a:	d809      	bhi.n	800e670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800e65c:	f240 60df 	movw	r0, #1759	; 0x6df
 800e660:	4283      	cmp	r3, r0
 800e662:	f4bf af7d 	bcs.w	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e666:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800e66a:	2b05      	cmp	r3, #5
 800e66c:	d8d4      	bhi.n	800e618 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e66e:	e777      	b.n	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e670:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800e674:	4283      	cmp	r3, r0
 800e676:	d09a      	beq.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e678:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800e67c:	4283      	cmp	r3, r0
 800e67e:	e7ca      	b.n	800e616 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800e680:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800e684:	d22b      	bcs.n	800e6de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800e686:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800e68a:	4283      	cmp	r3, r0
 800e68c:	d28f      	bcs.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e68e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800e692:	4283      	cmp	r3, r0
 800e694:	d816      	bhi.n	800e6c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800e696:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800e69a:	4283      	cmp	r3, r0
 800e69c:	f4bf af60 	bcs.w	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6a0:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800e6a4:	4283      	cmp	r3, r0
 800e6a6:	d80a      	bhi.n	800e6be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800e6a8:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800e6ac:	4283      	cmp	r3, r0
 800e6ae:	f4bf af57 	bcs.w	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6b2:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800e6b6:	4283      	cmp	r3, r0
 800e6b8:	f43f af79 	beq.w	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6bc:	e7ac      	b.n	800e618 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e6be:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800e6c2:	e7f8      	b.n	800e6b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800e6c4:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800e6c8:	4283      	cmp	r3, r0
 800e6ca:	d802      	bhi.n	800e6d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800e6cc:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800e6d0:	e798      	b.n	800e604 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800e6d2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800e6d6:	4283      	cmp	r3, r0
 800e6d8:	f47f af42 	bne.w	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6dc:	e767      	b.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6de:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800e6e2:	4283      	cmp	r3, r0
 800e6e4:	f43f af63 	beq.w	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6e8:	d802      	bhi.n	800e6f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800e6ea:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800e6ee:	e7f2      	b.n	800e6d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800e6f0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800e6f4:	4283      	cmp	r3, r0
 800e6f6:	d805      	bhi.n	800e704 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800e6f8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800e6fc:	4283      	cmp	r3, r0
 800e6fe:	f4ff af2f 	bcc.w	800e560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e702:	e754      	b.n	800e5ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e704:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800e708:	4283      	cmp	r3, r0
 800e70a:	e7af      	b.n	800e66c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800e70c:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800e710:	4617      	mov	r7, r2
 800e712:	f102 0808 	add.w	r8, r2, #8
 800e716:	4666      	mov	r6, ip
 800e718:	6838      	ldr	r0, [r7, #0]
 800e71a:	6879      	ldr	r1, [r7, #4]
 800e71c:	46e6      	mov	lr, ip
 800e71e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800e722:	3708      	adds	r7, #8
 800e724:	4547      	cmp	r7, r8
 800e726:	46f4      	mov	ip, lr
 800e728:	d1f6      	bne.n	800e718 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800e72a:	6838      	ldr	r0, [r7, #0]
 800e72c:	f8ce 0000 	str.w	r0, [lr]
 800e730:	88b9      	ldrh	r1, [r7, #4]
 800e732:	f8ae 1004 	strh.w	r1, [lr, #4]
 800e736:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800e73a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e73e:	d009      	beq.n	800e754 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800e740:	7b51      	ldrb	r1, [r2, #13]
 800e742:	7992      	ldrb	r2, [r2, #6]
 800e744:	0149      	lsls	r1, r1, #5
 800e746:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e74a:	4311      	orrs	r1, r2
 800e74c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e750:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800e754:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e758:	d00d      	beq.n	800e776 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800e75a:	442b      	add	r3, r5
 800e75c:	b29b      	uxth	r3, r3
 800e75e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800e762:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800e766:	10db      	asrs	r3, r3, #3
 800e768:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e76c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e770:	4313      	orrs	r3, r2
 800e772:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800e776:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800e77a:	00cb      	lsls	r3, r1, #3
 800e77c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e780:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800e784:	064f      	lsls	r7, r1, #25
 800e786:	ea43 0302 	orr.w	r3, r3, r2
 800e78a:	bf44      	itt	mi
 800e78c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e790:	b21b      	sxthmi	r3, r3
 800e792:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800e796:	1b5d      	subs	r5, r3, r5
 800e798:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800e79c:	4632      	mov	r2, r6
 800e79e:	e6fb      	b.n	800e598 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e7a0:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800e7a4:	4694      	mov	ip, r2
 800e7a6:	f102 0908 	add.w	r9, r2, #8
 800e7aa:	4676      	mov	r6, lr
 800e7ac:	f8dc 0000 	ldr.w	r0, [ip]
 800e7b0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e7b4:	46f0      	mov	r8, lr
 800e7b6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800e7ba:	f10c 0c08 	add.w	ip, ip, #8
 800e7be:	45cc      	cmp	ip, r9
 800e7c0:	46c6      	mov	lr, r8
 800e7c2:	d1f3      	bne.n	800e7ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800e7c4:	f8dc 0000 	ldr.w	r0, [ip]
 800e7c8:	f8c8 0000 	str.w	r0, [r8]
 800e7cc:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800e7d0:	f8a8 1004 	strh.w	r1, [r8, #4]
 800e7d4:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800e7d8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e7dc:	d009      	beq.n	800e7f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800e7de:	7b51      	ldrb	r1, [r2, #13]
 800e7e0:	7992      	ldrb	r2, [r2, #6]
 800e7e2:	0149      	lsls	r1, r1, #5
 800e7e4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e7e8:	4311      	orrs	r1, r2
 800e7ea:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e7ee:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800e7f2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e7f6:	d00d      	beq.n	800e814 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800e7f8:	1bdb      	subs	r3, r3, r7
 800e7fa:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800e7fe:	b29b      	uxth	r3, r3
 800e800:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800e804:	10db      	asrs	r3, r3, #3
 800e806:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e80a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e80e:	4313      	orrs	r3, r2
 800e810:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800e814:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800e818:	00cb      	lsls	r3, r1, #3
 800e81a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e81e:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800e822:	0648      	lsls	r0, r1, #25
 800e824:	ea43 0302 	orr.w	r3, r3, r2
 800e828:	bf44      	itt	mi
 800e82a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e82e:	b21b      	sxthmi	r3, r3
 800e830:	e7b1      	b.n	800e796 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800e834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e838:	461e      	mov	r6, r3
 800e83a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e83c:	4604      	mov	r4, r0
 800e83e:	4617      	mov	r7, r2
 800e840:	b92b      	cbnz	r3, 800e84e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800e842:	4b25      	ldr	r3, [pc, #148]	; (800e8d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800e844:	4a25      	ldr	r2, [pc, #148]	; (800e8dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800e846:	4826      	ldr	r0, [pc, #152]	; (800e8e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800e848:	21c0      	movs	r1, #192	; 0xc0
 800e84a:	f00b ffcd 	bl	801a7e8 <__assert_func>
 800e84e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e850:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e854:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800e858:	f7f4 ff9c 	bl	8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e85c:	4605      	mov	r5, r0
 800e85e:	b918      	cbnz	r0, 800e868 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800e860:	6030      	str	r0, [r6, #0]
 800e862:	4628      	mov	r0, r5
 800e864:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e868:	683b      	ldr	r3, [r7, #0]
 800e86a:	4601      	mov	r1, r0
 800e86c:	68db      	ldr	r3, [r3, #12]
 800e86e:	4638      	mov	r0, r7
 800e870:	4798      	blx	r3
 800e872:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e876:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e87a:	4602      	mov	r2, r0
 800e87c:	6030      	str	r0, [r6, #0]
 800e87e:	d213      	bcs.n	800e8a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800e880:	4643      	mov	r3, r8
 800e882:	4639      	mov	r1, r7
 800e884:	4620      	mov	r0, r4
 800e886:	f7ff fe33 	bl	800e4f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e88a:	6030      	str	r0, [r6, #0]
 800e88c:	6833      	ldr	r3, [r6, #0]
 800e88e:	b143      	cbz	r3, 800e8a2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800e890:	7b5a      	ldrb	r2, [r3, #13]
 800e892:	7a9b      	ldrb	r3, [r3, #10]
 800e894:	0052      	lsls	r2, r2, #1
 800e896:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e89a:	4313      	orrs	r3, r2
 800e89c:	bf0c      	ite	eq
 800e89e:	2301      	moveq	r3, #1
 800e8a0:	2300      	movne	r3, #0
 800e8a2:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800e8a6:	e7dc      	b.n	800e862 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800e8a8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e8ac:	b29b      	uxth	r3, r3
 800e8ae:	2b7f      	cmp	r3, #127	; 0x7f
 800e8b0:	d804      	bhi.n	800e8bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800e8b2:	4639      	mov	r1, r7
 800e8b4:	4620      	mov	r0, r4
 800e8b6:	f7ff fd01 	bl	800e2bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e8ba:	e7e6      	b.n	800e88a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e8bc:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800e8c0:	2b00      	cmp	r3, #0
 800e8c2:	d0e3      	beq.n	800e88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e8c4:	f640 1302 	movw	r3, #2306	; 0x902
 800e8c8:	429d      	cmp	r5, r3
 800e8ca:	d1df      	bne.n	800e88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e8cc:	4601      	mov	r1, r0
 800e8ce:	4620      	mov	r0, r4
 800e8d0:	f7ff fcc5 	bl	800e25e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e8d4:	e7d9      	b.n	800e88a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e8d6:	bf00      	nop
 800e8d8:	0801c5a0 	.word	0x0801c5a0
 800e8dc:	0801e2af 	.word	0x0801e2af
 800e8e0:	0801c5c7 	.word	0x0801c5c7

0800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e8e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e8e8:	461e      	mov	r6, r3
 800e8ea:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e8ec:	4604      	mov	r4, r0
 800e8ee:	4617      	mov	r7, r2
 800e8f0:	b92b      	cbnz	r3, 800e8fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800e8f2:	4b26      	ldr	r3, [pc, #152]	; (800e98c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800e8f4:	4a26      	ldr	r2, [pc, #152]	; (800e990 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800e8f6:	4827      	ldr	r0, [pc, #156]	; (800e994 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800e8f8:	21c0      	movs	r1, #192	; 0xc0
 800e8fa:	f00b ff75 	bl	801a7e8 <__assert_func>
 800e8fe:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e900:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e904:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800e908:	f7f4 ff44 	bl	8003794 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e90c:	4605      	mov	r5, r0
 800e90e:	b918      	cbnz	r0, 800e918 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800e910:	6030      	str	r0, [r6, #0]
 800e912:	4628      	mov	r0, r5
 800e914:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e918:	683b      	ldr	r3, [r7, #0]
 800e91a:	4601      	mov	r1, r0
 800e91c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e920:	4638      	mov	r0, r7
 800e922:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e926:	47c8      	blx	r9
 800e928:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e92c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e930:	4602      	mov	r2, r0
 800e932:	6030      	str	r0, [r6, #0]
 800e934:	d213      	bcs.n	800e95e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800e936:	4643      	mov	r3, r8
 800e938:	4639      	mov	r1, r7
 800e93a:	4620      	mov	r0, r4
 800e93c:	f7ff fdd8 	bl	800e4f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e940:	6030      	str	r0, [r6, #0]
 800e942:	6833      	ldr	r3, [r6, #0]
 800e944:	b143      	cbz	r3, 800e958 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800e946:	7b5a      	ldrb	r2, [r3, #13]
 800e948:	7a9b      	ldrb	r3, [r3, #10]
 800e94a:	0052      	lsls	r2, r2, #1
 800e94c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e950:	4313      	orrs	r3, r2
 800e952:	bf0c      	ite	eq
 800e954:	2301      	moveq	r3, #1
 800e956:	2300      	movne	r3, #0
 800e958:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800e95c:	e7d9      	b.n	800e912 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800e95e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e962:	b29b      	uxth	r3, r3
 800e964:	2b7f      	cmp	r3, #127	; 0x7f
 800e966:	d804      	bhi.n	800e972 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800e968:	4639      	mov	r1, r7
 800e96a:	4620      	mov	r0, r4
 800e96c:	f7ff fca6 	bl	800e2bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e970:	e7e6      	b.n	800e940 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e972:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800e976:	2b00      	cmp	r3, #0
 800e978:	d0e3      	beq.n	800e942 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e97a:	f640 1302 	movw	r3, #2306	; 0x902
 800e97e:	429d      	cmp	r5, r3
 800e980:	d1df      	bne.n	800e942 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e982:	4601      	mov	r1, r0
 800e984:	4620      	mov	r0, r4
 800e986:	f7ff fc6a 	bl	800e25e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e98a:	e7d9      	b.n	800e940 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e98c:	0801c5a0 	.word	0x0801c5a0
 800e990:	0801e2af 	.word	0x0801e2af
 800e994:	0801c5c7 	.word	0x0801c5c7

0800e998 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e998:	b510      	push	{r4, lr}
 800e99a:	4604      	mov	r4, r0
 800e99c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e99e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e9a0:	b9d9      	cbnz	r1, 800e9da <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800e9a2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e9a4:	2b0a      	cmp	r3, #10
 800e9a6:	d036      	beq.n	800ea16 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800e9a8:	4620      	mov	r0, r4
 800e9aa:	f7ff fc21 	bl	800e1f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e9ae:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e9b0:	2b09      	cmp	r3, #9
 800e9b2:	d906      	bls.n	800e9c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800e9b4:	4b18      	ldr	r3, [pc, #96]	; (800ea18 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800e9b6:	4a19      	ldr	r2, [pc, #100]	; (800ea1c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800e9b8:	4819      	ldr	r0, [pc, #100]	; (800ea20 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800e9ba:	f44f 7182 	mov.w	r1, #260	; 0x104
 800e9be:	f00b ff13 	bl	801a7e8 <__assert_func>
 800e9c2:	1c5a      	adds	r2, r3, #1
 800e9c4:	8622      	strh	r2, [r4, #48]	; 0x30
 800e9c6:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800e9c8:	4413      	add	r3, r2
 800e9ca:	b29b      	uxth	r3, r3
 800e9cc:	2b09      	cmp	r3, #9
 800e9ce:	bf88      	it	hi
 800e9d0:	3b0a      	subhi	r3, #10
 800e9d2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e9d6:	8358      	strh	r0, [r3, #26]
 800e9d8:	e7e3      	b.n	800e9a2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800e9da:	2b0a      	cmp	r3, #10
 800e9dc:	d01b      	beq.n	800ea16 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800e9de:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e9e0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800e9e4:	3901      	subs	r1, #1
 800e9e6:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800e9e8:	8721      	strh	r1, [r4, #56]	; 0x38
 800e9ea:	1c51      	adds	r1, r2, #1
 800e9ec:	b289      	uxth	r1, r1
 800e9ee:	2901      	cmp	r1, #1
 800e9f0:	bf8a      	itet	hi
 800e9f2:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800e9f6:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800e9f8:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800e9fa:	2b09      	cmp	r3, #9
 800e9fc:	d8da      	bhi.n	800e9b4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800e9fe:	1c5a      	adds	r2, r3, #1
 800ea00:	8622      	strh	r2, [r4, #48]	; 0x30
 800ea02:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800ea04:	4413      	add	r3, r2
 800ea06:	b29b      	uxth	r3, r3
 800ea08:	2b09      	cmp	r3, #9
 800ea0a:	bf88      	it	hi
 800ea0c:	3b0a      	subhi	r3, #10
 800ea0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ea12:	8358      	strh	r0, [r3, #26]
 800ea14:	e7c2      	b.n	800e99c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ea16:	bd10      	pop	{r4, pc}
 800ea18:	0801e080 	.word	0x0801e080
 800ea1c:	0801e405 	.word	0x0801e405
 800ea20:	0801c5c7 	.word	0x0801c5c7

0800ea24 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ea24:	b538      	push	{r3, r4, r5, lr}
 800ea26:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800ea28:	4604      	mov	r4, r0
 800ea2a:	b92a      	cbnz	r2, 800ea38 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ea2c:	4b13      	ldr	r3, [pc, #76]	; (800ea7c <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ea2e:	4a14      	ldr	r2, [pc, #80]	; (800ea80 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ea30:	4814      	ldr	r0, [pc, #80]	; (800ea84 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800ea32:	21d5      	movs	r1, #213	; 0xd5
 800ea34:	f00b fed8 	bl	801a7e8 <__assert_func>
 800ea38:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ea3a:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ea3e:	3a01      	subs	r2, #1
 800ea40:	8b4d      	ldrh	r5, [r1, #26]
 800ea42:	8602      	strh	r2, [r0, #48]	; 0x30
 800ea44:	1c5a      	adds	r2, r3, #1
 800ea46:	b292      	uxth	r2, r2
 800ea48:	2a09      	cmp	r2, #9
 800ea4a:	bf86      	itte	hi
 800ea4c:	3b09      	subhi	r3, #9
 800ea4e:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800ea50:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800ea52:	f7ff ffa1 	bl	800e998 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ea56:	8b23      	ldrh	r3, [r4, #24]
 800ea58:	2b01      	cmp	r3, #1
 800ea5a:	bf9c      	itt	ls
 800ea5c:	3301      	addls	r3, #1
 800ea5e:	8323      	strhls	r3, [r4, #24]
 800ea60:	8ae3      	ldrh	r3, [r4, #22]
 800ea62:	b90b      	cbnz	r3, 800ea68 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800ea64:	2302      	movs	r3, #2
 800ea66:	82e3      	strh	r3, [r4, #22]
 800ea68:	8ae3      	ldrh	r3, [r4, #22]
 800ea6a:	3b01      	subs	r3, #1
 800ea6c:	b29b      	uxth	r3, r3
 800ea6e:	82e3      	strh	r3, [r4, #22]
 800ea70:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ea74:	4628      	mov	r0, r5
 800ea76:	8265      	strh	r5, [r4, #18]
 800ea78:	bd38      	pop	{r3, r4, r5, pc}
 800ea7a:	bf00      	nop
 800ea7c:	0801c5a0 	.word	0x0801c5a0
 800ea80:	0801e35a 	.word	0x0801e35a
 800ea84:	0801c5c7 	.word	0x0801c5c7

0800ea88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ea88:	b538      	push	{r3, r4, r5, lr}
 800ea8a:	428a      	cmp	r2, r1
 800ea8c:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800ea8e:	d90c      	bls.n	800eaaa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800ea90:	b92c      	cbnz	r4, 800ea9e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800ea92:	4b1c      	ldr	r3, [pc, #112]	; (800eb04 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800ea94:	4a1c      	ldr	r2, [pc, #112]	; (800eb08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800ea96:	21e1      	movs	r1, #225	; 0xe1
 800ea98:	481c      	ldr	r0, [pc, #112]	; (800eb0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800ea9a:	f00b fea5 	bl	801a7e8 <__assert_func>
 800ea9e:	3c01      	subs	r4, #1
 800eaa0:	8604      	strh	r4, [r0, #48]	; 0x30
 800eaa2:	4b1b      	ldr	r3, [pc, #108]	; (800eb10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800eaa4:	4a1b      	ldr	r2, [pc, #108]	; (800eb14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800eaa6:	21c5      	movs	r1, #197	; 0xc5
 800eaa8:	e7f6      	b.n	800ea98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eaaa:	428c      	cmp	r4, r1
 800eaac:	d203      	bcs.n	800eab6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800eaae:	4b1a      	ldr	r3, [pc, #104]	; (800eb18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800eab0:	4a1a      	ldr	r2, [pc, #104]	; (800eb1c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800eab2:	21cb      	movs	r1, #203	; 0xcb
 800eab4:	e7f0      	b.n	800ea98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eab6:	1a64      	subs	r4, r4, r1
 800eab8:	8604      	strh	r4, [r0, #48]	; 0x30
 800eaba:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800eabc:	4421      	add	r1, r4
 800eabe:	b289      	uxth	r1, r1
 800eac0:	2909      	cmp	r1, #9
 800eac2:	bf88      	it	hi
 800eac4:	390a      	subhi	r1, #10
 800eac6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800eac8:	250a      	movs	r5, #10
 800eaca:	b1ba      	cbz	r2, 800eafc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800eacc:	3a01      	subs	r2, #1
 800eace:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800ead0:	b292      	uxth	r2, r2
 800ead2:	2909      	cmp	r1, #9
 800ead4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800ead8:	d903      	bls.n	800eae2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800eada:	4b11      	ldr	r3, [pc, #68]	; (800eb20 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800eadc:	4a11      	ldr	r2, [pc, #68]	; (800eb24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800eade:	21e6      	movs	r1, #230	; 0xe6
 800eae0:	e7da      	b.n	800ea98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eae2:	3101      	adds	r1, #1
 800eae4:	8601      	strh	r1, [r0, #48]	; 0x30
 800eae6:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800eae8:	b901      	cbnz	r1, 800eaec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800eaea:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800eaec:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800eaee:	3901      	subs	r1, #1
 800eaf0:	b289      	uxth	r1, r1
 800eaf2:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800eaf4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800eaf8:	834c      	strh	r4, [r1, #26]
 800eafa:	e7e6      	b.n	800eaca <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800eafc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eb00:	f7ff bf4a 	b.w	800e998 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800eb04:	0801c5a0 	.word	0x0801c5a0
 800eb08:	0801e133 	.word	0x0801e133
 800eb0c:	0801c5c7 	.word	0x0801c5c7
 800eb10:	0801c5f3 	.word	0x0801c5f3
 800eb14:	0801e1dd 	.word	0x0801e1dd
 800eb18:	0801e08c 	.word	0x0801e08c
 800eb1c:	0801e4b4 	.word	0x0801e4b4
 800eb20:	0801e098 	.word	0x0801e098
 800eb24:	0801e0ab 	.word	0x0801e0ab

0800eb28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800eb28:	3a01      	subs	r2, #1
 800eb2a:	b570      	push	{r4, r5, r6, lr}
 800eb2c:	b292      	uxth	r2, r2
 800eb2e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800eb32:	42b2      	cmp	r2, r6
 800eb34:	d019      	beq.n	800eb6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800eb36:	8b04      	ldrh	r4, [r0, #24]
 800eb38:	f831 5b02 	ldrh.w	r5, [r1], #2
 800eb3c:	4294      	cmp	r4, r2
 800eb3e:	d805      	bhi.n	800eb4c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800eb40:	4b19      	ldr	r3, [pc, #100]	; (800eba8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800eb42:	4a1a      	ldr	r2, [pc, #104]	; (800ebac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800eb44:	481a      	ldr	r0, [pc, #104]	; (800ebb0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800eb46:	21c5      	movs	r1, #197	; 0xc5
 800eb48:	f00b fe4e 	bl	801a7e8 <__assert_func>
 800eb4c:	8ac4      	ldrh	r4, [r0, #22]
 800eb4e:	4414      	add	r4, r2
 800eb50:	b2a4      	uxth	r4, r4
 800eb52:	2c01      	cmp	r4, #1
 800eb54:	bf88      	it	hi
 800eb56:	3c02      	subhi	r4, #2
 800eb58:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800eb5c:	3a01      	subs	r2, #1
 800eb5e:	8a64      	ldrh	r4, [r4, #18]
 800eb60:	42ac      	cmp	r4, r5
 800eb62:	b292      	uxth	r2, r2
 800eb64:	d0e5      	beq.n	800eb32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800eb66:	2000      	movs	r0, #0
 800eb68:	bd70      	pop	{r4, r5, r6, pc}
 800eb6a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800eb6e:	2400      	movs	r4, #0
 800eb70:	4413      	add	r3, r2
 800eb72:	b2a2      	uxth	r2, r4
 800eb74:	429a      	cmp	r2, r3
 800eb76:	da14      	bge.n	800eba2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800eb78:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800eb7a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800eb7e:	4296      	cmp	r6, r2
 800eb80:	d802      	bhi.n	800eb88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800eb82:	4b09      	ldr	r3, [pc, #36]	; (800eba8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800eb84:	4a0b      	ldr	r2, [pc, #44]	; (800ebb4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800eb86:	e7dd      	b.n	800eb44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800eb88:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800eb8a:	4432      	add	r2, r6
 800eb8c:	b292      	uxth	r2, r2
 800eb8e:	2a09      	cmp	r2, #9
 800eb90:	bf88      	it	hi
 800eb92:	3a0a      	subhi	r2, #10
 800eb94:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800eb98:	3401      	adds	r4, #1
 800eb9a:	8b52      	ldrh	r2, [r2, #26]
 800eb9c:	42aa      	cmp	r2, r5
 800eb9e:	d0e8      	beq.n	800eb72 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800eba0:	e7e1      	b.n	800eb66 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800eba2:	2001      	movs	r0, #1
 800eba4:	e7e0      	b.n	800eb68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800eba6:	bf00      	nop
 800eba8:	0801c5f3 	.word	0x0801c5f3
 800ebac:	0801e538 	.word	0x0801e538
 800ebb0:	0801c5c7 	.word	0x0801c5c7
 800ebb4:	0801e1dd 	.word	0x0801e1dd

0800ebb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ebb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebbc:	4605      	mov	r5, r0
 800ebbe:	4616      	mov	r6, r2
 800ebc0:	1c8c      	adds	r4, r1, #2
 800ebc2:	8809      	ldrh	r1, [r1, #0]
 800ebc4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800ebc8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800ebcc:	42b3      	cmp	r3, r6
 800ebce:	d124      	bne.n	800ec1a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800ebd0:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800ebd4:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800ebd8:	f001 070f 	and.w	r7, r1, #15
 800ebdc:	f8cd 8000 	str.w	r8, [sp]
 800ebe0:	464b      	mov	r3, r9
 800ebe2:	4652      	mov	r2, sl
 800ebe4:	4621      	mov	r1, r4
 800ebe6:	4628      	mov	r0, r5
 800ebe8:	f7ff ff9e 	bl	800eb28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800ebec:	4683      	mov	fp, r0
 800ebee:	b168      	cbz	r0, 800ec0c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800ebf0:	eb0a 0109 	add.w	r1, sl, r9
 800ebf4:	4441      	add	r1, r8
 800ebf6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ebfa:	463a      	mov	r2, r7
 800ebfc:	4649      	mov	r1, r9
 800ebfe:	4628      	mov	r0, r5
 800ec00:	f7ff ff42 	bl	800ea88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800ec04:	4658      	mov	r0, fp
 800ec06:	b003      	add	sp, #12
 800ec08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec0c:	eb07 010a 	add.w	r1, r7, sl
 800ec10:	4449      	add	r1, r9
 800ec12:	4441      	add	r1, r8
 800ec14:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800ec18:	e7d2      	b.n	800ebc0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800ec1a:	f04f 0b00 	mov.w	fp, #0
 800ec1e:	e7f1      	b.n	800ec04 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800ec20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800ec20:	b570      	push	{r4, r5, r6, lr}
 800ec22:	8810      	ldrh	r0, [r2, #0]
 800ec24:	4298      	cmp	r0, r3
 800ec26:	d817      	bhi.n	800ec58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec28:	1e48      	subs	r0, r1, #1
 800ec2a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800ec2e:	4298      	cmp	r0, r3
 800ec30:	d312      	bcc.n	800ec58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec32:	2400      	movs	r4, #0
 800ec34:	428c      	cmp	r4, r1
 800ec36:	d20f      	bcs.n	800ec58 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ec38:	1860      	adds	r0, r4, r1
 800ec3a:	1040      	asrs	r0, r0, #1
 800ec3c:	0085      	lsls	r5, r0, #2
 800ec3e:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800ec42:	42b3      	cmp	r3, r6
 800ec44:	d902      	bls.n	800ec4c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800ec46:	3001      	adds	r0, #1
 800ec48:	b284      	uxth	r4, r0
 800ec4a:	e7f3      	b.n	800ec34 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ec4c:	d201      	bcs.n	800ec52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800ec4e:	b281      	uxth	r1, r0
 800ec50:	e7f0      	b.n	800ec34 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ec52:	442a      	add	r2, r5
 800ec54:	8850      	ldrh	r0, [r2, #2]
 800ec56:	bd70      	pop	{r4, r5, r6, pc}
 800ec58:	2000      	movs	r0, #0
 800ec5a:	e7fc      	b.n	800ec56 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800ec5c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800ec5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec60:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800ec62:	886f      	ldrh	r7, [r5, #2]
 800ec64:	4604      	mov	r4, r0
 800ec66:	087f      	lsrs	r7, r7, #1
 800ec68:	260b      	movs	r6, #11
 800ec6a:	3e01      	subs	r6, #1
 800ec6c:	d01b      	beq.n	800eca6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ec6e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ec70:	b92b      	cbnz	r3, 800ec7e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800ec72:	4b0e      	ldr	r3, [pc, #56]	; (800ecac <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800ec74:	4a0e      	ldr	r2, [pc, #56]	; (800ecb0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800ec76:	480f      	ldr	r0, [pc, #60]	; (800ecb4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800ec78:	21c0      	movs	r1, #192	; 0xc0
 800ec7a:	f00b fdb5 	bl	801a7e8 <__assert_func>
 800ec7e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800ec80:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ec84:	462a      	mov	r2, r5
 800ec86:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800ec8a:	4639      	mov	r1, r7
 800ec8c:	4643      	mov	r3, r8
 800ec8e:	4620      	mov	r0, r4
 800ec90:	f7ff ffc6 	bl	800ec20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800ec94:	b138      	cbz	r0, 800eca6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ec96:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800ec9a:	4642      	mov	r2, r8
 800ec9c:	4620      	mov	r0, r4
 800ec9e:	f7ff ff8b 	bl	800ebb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800eca2:	2800      	cmp	r0, #0
 800eca4:	d1e1      	bne.n	800ec6a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800eca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ecaa:	bf00      	nop
 800ecac:	0801c5a0 	.word	0x0801c5a0
 800ecb0:	0801e2af 	.word	0x0801e2af
 800ecb4:	0801c5c7 	.word	0x0801c5c7

0800ecb8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800ecb8:	4b01      	ldr	r3, [pc, #4]	; (800ecc0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800ecba:	6018      	str	r0, [r3, #0]
 800ecbc:	4770      	bx	lr
 800ecbe:	bf00      	nop
 800ecc0:	2001243c 	.word	0x2001243c

0800ecc4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800ecc4:	4b07      	ldr	r3, [pc, #28]	; (800ece4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800ecc6:	881a      	ldrh	r2, [r3, #0]
 800ecc8:	4282      	cmp	r2, r0
 800ecca:	d809      	bhi.n	800ece0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800eccc:	4b06      	ldr	r3, [pc, #24]	; (800ece8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800ecce:	881b      	ldrh	r3, [r3, #0]
 800ecd0:	4413      	add	r3, r2
 800ecd2:	4298      	cmp	r0, r3
 800ecd4:	da04      	bge.n	800ece0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800ecd6:	4b05      	ldr	r3, [pc, #20]	; (800ecec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800ecd8:	681b      	ldr	r3, [r3, #0]
 800ecda:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800ecde:	4770      	bx	lr
 800ece0:	2000      	movs	r0, #0
 800ece2:	4770      	bx	lr
 800ece4:	2001245c 	.word	0x2001245c
 800ece8:	20012460 	.word	0x20012460
 800ecec:	20012440 	.word	0x20012440

0800ecf0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800ecf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ecf4:	4d28      	ldr	r5, [pc, #160]	; (800ed98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800ecf6:	682b      	ldr	r3, [r5, #0]
 800ecf8:	2b00      	cmp	r3, #0
 800ecfa:	d04a      	beq.n	800ed92 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800ecfc:	4a27      	ldr	r2, [pc, #156]	; (800ed9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800ecfe:	4e28      	ldr	r6, [pc, #160]	; (800eda0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800ed00:	8810      	ldrh	r0, [r2, #0]
 800ed02:	f8b6 8000 	ldrh.w	r8, [r6]
 800ed06:	4c27      	ldr	r4, [pc, #156]	; (800eda4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800ed08:	4f27      	ldr	r7, [pc, #156]	; (800eda8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800ed0a:	4440      	add	r0, r8
 800ed0c:	1c41      	adds	r1, r0, #1
 800ed0e:	f021 0101 	bic.w	r1, r1, #1
 800ed12:	0409      	lsls	r1, r1, #16
 800ed14:	0c09      	lsrs	r1, r1, #16
 800ed16:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800ed1a:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800ed1e:	eb03 020e 	add.w	r2, r3, lr
 800ed22:	eb0e 010c 	add.w	r1, lr, ip
 800ed26:	6022      	str	r2, [r4, #0]
 800ed28:	185a      	adds	r2, r3, r1
 800ed2a:	603a      	str	r2, [r7, #0]
 800ed2c:	220e      	movs	r2, #14
 800ed2e:	fb02 f208 	mul.w	r2, r2, r8
 800ed32:	3203      	adds	r2, #3
 800ed34:	f022 0203 	bic.w	r2, r2, #3
 800ed38:	4411      	add	r1, r2
 800ed3a:	440b      	add	r3, r1
 800ed3c:	491b      	ldr	r1, [pc, #108]	; (800edac <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800ed3e:	600b      	str	r3, [r1, #0]
 800ed40:	491b      	ldr	r1, [pc, #108]	; (800edb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800ed42:	2300      	movs	r3, #0
 800ed44:	800b      	strh	r3, [r1, #0]
 800ed46:	491b      	ldr	r1, [pc, #108]	; (800edb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800ed48:	6809      	ldr	r1, [r1, #0]
 800ed4a:	eba1 010e 	sub.w	r1, r1, lr
 800ed4e:	eba1 010c 	sub.w	r1, r1, ip
 800ed52:	1a8a      	subs	r2, r1, r2
 800ed54:	4918      	ldr	r1, [pc, #96]	; (800edb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800ed56:	600a      	str	r2, [r1, #0]
 800ed58:	4a18      	ldr	r2, [pc, #96]	; (800edbc <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800ed5a:	469c      	mov	ip, r3
 800ed5c:	8013      	strh	r3, [r2, #0]
 800ed5e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ed62:	4283      	cmp	r3, r0
 800ed64:	d10d      	bne.n	800ed82 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800ed66:	8835      	ldrh	r5, [r6, #0]
 800ed68:	6838      	ldr	r0, [r7, #0]
 800ed6a:	2300      	movs	r3, #0
 800ed6c:	240e      	movs	r4, #14
 800ed6e:	429d      	cmp	r5, r3
 800ed70:	d90f      	bls.n	800ed92 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800ed72:	fb04 0203 	mla	r2, r4, r3, r0
 800ed76:	3301      	adds	r3, #1
 800ed78:	7b11      	ldrb	r1, [r2, #12]
 800ed7a:	f36f 1145 	bfc	r1, #5, #1
 800ed7e:	7311      	strb	r1, [r2, #12]
 800ed80:	e7f5      	b.n	800ed6e <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800ed82:	682a      	ldr	r2, [r5, #0]
 800ed84:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800ed88:	6822      	ldr	r2, [r4, #0]
 800ed8a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800ed8e:	3301      	adds	r3, #1
 800ed90:	e7e7      	b.n	800ed62 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800ed92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed96:	bf00      	nop
 800ed98:	20012440 	.word	0x20012440
 800ed9c:	2001245c 	.word	0x2001245c
 800eda0:	20012460 	.word	0x20012460
 800eda4:	20012454 	.word	0x20012454
 800eda8:	20012444 	.word	0x20012444
 800edac:	2001244c 	.word	0x2001244c
 800edb0:	2001245e 	.word	0x2001245e
 800edb4:	20012448 	.word	0x20012448
 800edb8:	20012458 	.word	0x20012458
 800edbc:	20012450 	.word	0x20012450

0800edc0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800edc0:	b510      	push	{r4, lr}
 800edc2:	4b10      	ldr	r3, [pc, #64]	; (800ee04 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800edc4:	681b      	ldr	r3, [r3, #0]
 800edc6:	b9db      	cbnz	r3, 800ee00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800edc8:	b1d1      	cbz	r1, 800ee00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800edca:	4b0f      	ldr	r3, [pc, #60]	; (800ee08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800edcc:	801a      	strh	r2, [r3, #0]
 800edce:	4b0f      	ldr	r3, [pc, #60]	; (800ee0c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800edd0:	881b      	ldrh	r3, [r3, #0]
 800edd2:	b292      	uxth	r2, r2
 800edd4:	240e      	movs	r4, #14
 800edd6:	4413      	add	r3, r2
 800edd8:	4362      	muls	r2, r4
 800edda:	2406      	movs	r4, #6
 800eddc:	fb04 2203 	mla	r2, r4, r3, r2
 800ede0:	428a      	cmp	r2, r1
 800ede2:	d305      	bcc.n	800edf0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800ede4:	4b0a      	ldr	r3, [pc, #40]	; (800ee10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800ede6:	4a0b      	ldr	r2, [pc, #44]	; (800ee14 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800ede8:	480b      	ldr	r0, [pc, #44]	; (800ee18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800edea:	2137      	movs	r1, #55	; 0x37
 800edec:	f00b fcfc 	bl	801a7e8 <__assert_func>
 800edf0:	4b0a      	ldr	r3, [pc, #40]	; (800ee1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800edf2:	6019      	str	r1, [r3, #0]
 800edf4:	4b0a      	ldr	r3, [pc, #40]	; (800ee20 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800edf6:	6018      	str	r0, [r3, #0]
 800edf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800edfc:	f7ff bf78 	b.w	800ecf0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ee00:	bd10      	pop	{r4, pc}
 800ee02:	bf00      	nop
 800ee04:	2001244c 	.word	0x2001244c
 800ee08:	20012460 	.word	0x20012460
 800ee0c:	2001245c 	.word	0x2001245c
 800ee10:	0801e666 	.word	0x0801e666
 800ee14:	0801e6bf 	.word	0x0801e6bf
 800ee18:	0801e641 	.word	0x0801e641
 800ee1c:	20012448 	.word	0x20012448
 800ee20:	20012440 	.word	0x20012440

0800ee24 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800ee24:	b470      	push	{r4, r5, r6}
 800ee26:	4c07      	ldr	r4, [pc, #28]	; (800ee44 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800ee28:	6826      	ldr	r6, [r4, #0]
 800ee2a:	4605      	mov	r5, r0
 800ee2c:	4610      	mov	r0, r2
 800ee2e:	9a03      	ldr	r2, [sp, #12]
 800ee30:	b936      	cbnz	r6, 800ee40 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800ee32:	6025      	str	r5, [r4, #0]
 800ee34:	4c04      	ldr	r4, [pc, #16]	; (800ee48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800ee36:	8021      	strh	r1, [r4, #0]
 800ee38:	bc70      	pop	{r4, r5, r6}
 800ee3a:	4619      	mov	r1, r3
 800ee3c:	f7ff bfc0 	b.w	800edc0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800ee40:	bc70      	pop	{r4, r5, r6}
 800ee42:	4770      	bx	lr
 800ee44:	20012464 	.word	0x20012464
 800ee48:	2001245c 	.word	0x2001245c

0800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800ee4c:	b508      	push	{r3, lr}
 800ee4e:	4b14      	ldr	r3, [pc, #80]	; (800eea0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800ee50:	6819      	ldr	r1, [r3, #0]
 800ee52:	b931      	cbnz	r1, 800ee62 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800ee54:	4b13      	ldr	r3, [pc, #76]	; (800eea4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800ee56:	4a14      	ldr	r2, [pc, #80]	; (800eea8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800ee58:	4814      	ldr	r0, [pc, #80]	; (800eeac <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800ee5a:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800ee5e:	f00b fcc3 	bl	801a7e8 <__assert_func>
 800ee62:	4a13      	ldr	r2, [pc, #76]	; (800eeb0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800ee64:	8803      	ldrh	r3, [r0, #0]
 800ee66:	8812      	ldrh	r2, [r2, #0]
 800ee68:	4293      	cmp	r3, r2
 800ee6a:	d204      	bcs.n	800ee76 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800ee6c:	2214      	movs	r2, #20
 800ee6e:	fb02 1303 	mla	r3, r2, r3, r1
 800ee72:	8918      	ldrh	r0, [r3, #8]
 800ee74:	bd08      	pop	{r3, pc}
 800ee76:	490f      	ldr	r1, [pc, #60]	; (800eeb4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800ee78:	8809      	ldrh	r1, [r1, #0]
 800ee7a:	4411      	add	r1, r2
 800ee7c:	428b      	cmp	r3, r1
 800ee7e:	da06      	bge.n	800ee8e <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800ee80:	1a9b      	subs	r3, r3, r2
 800ee82:	4a0d      	ldr	r2, [pc, #52]	; (800eeb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800ee84:	6812      	ldr	r2, [r2, #0]
 800ee86:	210e      	movs	r1, #14
 800ee88:	fb01 2303 	mla	r3, r1, r3, r2
 800ee8c:	e7f1      	b.n	800ee72 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800ee8e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ee92:	4293      	cmp	r3, r2
 800ee94:	bf0a      	itet	eq
 800ee96:	4b09      	ldreq	r3, [pc, #36]	; (800eebc <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800ee98:	2000      	movne	r0, #0
 800ee9a:	8818      	ldrheq	r0, [r3, #0]
 800ee9c:	e7ea      	b.n	800ee74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800ee9e:	bf00      	nop
 800eea0:	20012464 	.word	0x20012464
 800eea4:	0801db80 	.word	0x0801db80
 800eea8:	0801e76c 	.word	0x0801e76c
 800eeac:	0801e641 	.word	0x0801e641
 800eeb0:	2001245c 	.word	0x2001245c
 800eeb4:	20012460 	.word	0x20012460
 800eeb8:	20012444 	.word	0x20012444
 800eebc:	200123b0 	.word	0x200123b0

0800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800eec0:	b508      	push	{r3, lr}
 800eec2:	4b14      	ldr	r3, [pc, #80]	; (800ef14 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800eec4:	6819      	ldr	r1, [r3, #0]
 800eec6:	b931      	cbnz	r1, 800eed6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800eec8:	4b13      	ldr	r3, [pc, #76]	; (800ef18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800eeca:	4a14      	ldr	r2, [pc, #80]	; (800ef1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800eecc:	4814      	ldr	r0, [pc, #80]	; (800ef20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800eece:	f44f 7143 	mov.w	r1, #780	; 0x30c
 800eed2:	f00b fc89 	bl	801a7e8 <__assert_func>
 800eed6:	4a13      	ldr	r2, [pc, #76]	; (800ef24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800eed8:	8803      	ldrh	r3, [r0, #0]
 800eeda:	8812      	ldrh	r2, [r2, #0]
 800eedc:	4293      	cmp	r3, r2
 800eede:	d204      	bcs.n	800eeea <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800eee0:	2214      	movs	r2, #20
 800eee2:	fb02 1303 	mla	r3, r2, r3, r1
 800eee6:	8958      	ldrh	r0, [r3, #10]
 800eee8:	bd08      	pop	{r3, pc}
 800eeea:	490f      	ldr	r1, [pc, #60]	; (800ef28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800eeec:	8809      	ldrh	r1, [r1, #0]
 800eeee:	4411      	add	r1, r2
 800eef0:	428b      	cmp	r3, r1
 800eef2:	da06      	bge.n	800ef02 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800eef4:	1a9b      	subs	r3, r3, r2
 800eef6:	4a0d      	ldr	r2, [pc, #52]	; (800ef2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800eef8:	6812      	ldr	r2, [r2, #0]
 800eefa:	210e      	movs	r1, #14
 800eefc:	fb01 2303 	mla	r3, r1, r3, r2
 800ef00:	e7f1      	b.n	800eee6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800ef02:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ef06:	4293      	cmp	r3, r2
 800ef08:	bf0a      	itet	eq
 800ef0a:	4b09      	ldreq	r3, [pc, #36]	; (800ef30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800ef0c:	2000      	movne	r0, #0
 800ef0e:	8818      	ldrheq	r0, [r3, #0]
 800ef10:	e7ea      	b.n	800eee8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800ef12:	bf00      	nop
 800ef14:	20012464 	.word	0x20012464
 800ef18:	0801db80 	.word	0x0801db80
 800ef1c:	0801e798 	.word	0x0801e798
 800ef20:	0801e641 	.word	0x0801e641
 800ef24:	2001245c 	.word	0x2001245c
 800ef28:	20012460 	.word	0x20012460
 800ef2c:	20012444 	.word	0x20012444
 800ef30:	200123b2 	.word	0x200123b2

0800ef34 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800ef34:	b510      	push	{r4, lr}
 800ef36:	4b23      	ldr	r3, [pc, #140]	; (800efc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800ef38:	681c      	ldr	r4, [r3, #0]
 800ef3a:	b934      	cbnz	r4, 800ef4a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800ef3c:	4b22      	ldr	r3, [pc, #136]	; (800efc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800ef3e:	4a23      	ldr	r2, [pc, #140]	; (800efcc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800ef40:	4823      	ldr	r0, [pc, #140]	; (800efd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800ef42:	f44f 7148 	mov.w	r1, #800	; 0x320
 800ef46:	f00b fc4f 	bl	801a7e8 <__assert_func>
 800ef4a:	4a22      	ldr	r2, [pc, #136]	; (800efd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800ef4c:	880b      	ldrh	r3, [r1, #0]
 800ef4e:	8812      	ldrh	r2, [r2, #0]
 800ef50:	4293      	cmp	r3, r2
 800ef52:	d211      	bcs.n	800ef78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800ef54:	2214      	movs	r2, #20
 800ef56:	fb02 4303 	mla	r3, r2, r3, r4
 800ef5a:	8a1a      	ldrh	r2, [r3, #16]
 800ef5c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800ef60:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800ef64:	8a5b      	ldrh	r3, [r3, #18]
 800ef66:	8004      	strh	r4, [r0, #0]
 800ef68:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800ef6c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800ef70:	8041      	strh	r1, [r0, #2]
 800ef72:	8082      	strh	r2, [r0, #4]
 800ef74:	80c3      	strh	r3, [r0, #6]
 800ef76:	e00e      	b.n	800ef96 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800ef78:	4917      	ldr	r1, [pc, #92]	; (800efd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800ef7a:	8809      	ldrh	r1, [r1, #0]
 800ef7c:	4411      	add	r1, r2
 800ef7e:	428b      	cmp	r3, r1
 800ef80:	da0a      	bge.n	800ef98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800ef82:	1a9b      	subs	r3, r3, r2
 800ef84:	4a15      	ldr	r2, [pc, #84]	; (800efdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800ef86:	6812      	ldr	r2, [r2, #0]
 800ef88:	210e      	movs	r1, #14
 800ef8a:	fb01 2303 	mla	r3, r1, r3, r2
 800ef8e:	681a      	ldr	r2, [r3, #0]
 800ef90:	6002      	str	r2, [r0, #0]
 800ef92:	685a      	ldr	r2, [r3, #4]
 800ef94:	6042      	str	r2, [r0, #4]
 800ef96:	bd10      	pop	{r4, pc}
 800ef98:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ef9c:	4293      	cmp	r3, r2
 800ef9e:	d10b      	bne.n	800efb8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800efa0:	4b0f      	ldr	r3, [pc, #60]	; (800efe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800efa2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800efa6:	4b0f      	ldr	r3, [pc, #60]	; (800efe4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800efa8:	8081      	strh	r1, [r0, #4]
 800efaa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800efae:	80c2      	strh	r2, [r0, #6]
 800efb0:	2300      	movs	r3, #0
 800efb2:	8003      	strh	r3, [r0, #0]
 800efb4:	8043      	strh	r3, [r0, #2]
 800efb6:	e7ee      	b.n	800ef96 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800efb8:	2300      	movs	r3, #0
 800efba:	8003      	strh	r3, [r0, #0]
 800efbc:	8043      	strh	r3, [r0, #2]
 800efbe:	8083      	strh	r3, [r0, #4]
 800efc0:	e7d8      	b.n	800ef74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800efc2:	bf00      	nop
 800efc4:	20012464 	.word	0x20012464
 800efc8:	0801db80 	.word	0x0801db80
 800efcc:	0801e705 	.word	0x0801e705
 800efd0:	0801e641 	.word	0x0801e641
 800efd4:	2001245c 	.word	0x2001245c
 800efd8:	20012460 	.word	0x20012460
 800efdc:	20012444 	.word	0x20012444
 800efe0:	200123b0 	.word	0x200123b0
 800efe4:	200123b2 	.word	0x200123b2

0800efe8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800efe8:	4b18      	ldr	r3, [pc, #96]	; (800f04c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800efea:	681b      	ldr	r3, [r3, #0]
 800efec:	b34b      	cbz	r3, 800f042 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800efee:	4a18      	ldr	r2, [pc, #96]	; (800f050 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800eff0:	8800      	ldrh	r0, [r0, #0]
 800eff2:	8812      	ldrh	r2, [r2, #0]
 800eff4:	4290      	cmp	r0, r2
 800eff6:	d211      	bcs.n	800f01c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800eff8:	2214      	movs	r2, #20
 800effa:	fb02 3300 	mla	r3, r2, r0, r3
 800effe:	8a1a      	ldrh	r2, [r3, #16]
 800f000:	8919      	ldrh	r1, [r3, #8]
 800f002:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f006:	428a      	cmp	r2, r1
 800f008:	db1d      	blt.n	800f046 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f00a:	8a58      	ldrh	r0, [r3, #18]
 800f00c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f010:	895b      	ldrh	r3, [r3, #10]
 800f012:	4298      	cmp	r0, r3
 800f014:	bfac      	ite	ge
 800f016:	2000      	movge	r0, #0
 800f018:	2001      	movlt	r0, #1
 800f01a:	4770      	bx	lr
 800f01c:	4b0d      	ldr	r3, [pc, #52]	; (800f054 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800f01e:	881b      	ldrh	r3, [r3, #0]
 800f020:	4413      	add	r3, r2
 800f022:	4298      	cmp	r0, r3
 800f024:	da0d      	bge.n	800f042 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f026:	4b0c      	ldr	r3, [pc, #48]	; (800f058 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800f028:	681b      	ldr	r3, [r3, #0]
 800f02a:	1a80      	subs	r0, r0, r2
 800f02c:	220e      	movs	r2, #14
 800f02e:	fb02 3300 	mla	r3, r2, r0, r3
 800f032:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800f036:	891a      	ldrh	r2, [r3, #8]
 800f038:	4291      	cmp	r1, r2
 800f03a:	db04      	blt.n	800f046 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f03c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800f040:	e7e6      	b.n	800f010 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800f042:	2000      	movs	r0, #0
 800f044:	4770      	bx	lr
 800f046:	2001      	movs	r0, #1
 800f048:	4770      	bx	lr
 800f04a:	bf00      	nop
 800f04c:	20012464 	.word	0x20012464
 800f050:	2001245c 	.word	0x2001245c
 800f054:	20012460 	.word	0x20012460
 800f058:	20012444 	.word	0x20012444

0800f05c <_ZNK8touchgfx6Bitmap7getDataEv>:
 800f05c:	b508      	push	{r3, lr}
 800f05e:	4b12      	ldr	r3, [pc, #72]	; (800f0a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800f060:	6819      	ldr	r1, [r3, #0]
 800f062:	b931      	cbnz	r1, 800f072 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800f064:	4b11      	ldr	r3, [pc, #68]	; (800f0ac <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f066:	4a12      	ldr	r2, [pc, #72]	; (800f0b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800f068:	4812      	ldr	r0, [pc, #72]	; (800f0b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800f06a:	f44f 7151 	mov.w	r1, #836	; 0x344
 800f06e:	f00b fbbb 	bl	801a7e8 <__assert_func>
 800f072:	8803      	ldrh	r3, [r0, #0]
 800f074:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f078:	4293      	cmp	r3, r2
 800f07a:	d012      	beq.n	800f0a2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800f07c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f080:	4293      	cmp	r3, r2
 800f082:	d103      	bne.n	800f08c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800f084:	4b0c      	ldr	r3, [pc, #48]	; (800f0b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800f086:	681b      	ldr	r3, [r3, #0]
 800f088:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800f08a:	bd08      	pop	{r3, pc}
 800f08c:	4a0b      	ldr	r2, [pc, #44]	; (800f0bc <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800f08e:	6812      	ldr	r2, [r2, #0]
 800f090:	b11a      	cbz	r2, 800f09a <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800f092:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800f096:	2800      	cmp	r0, #0
 800f098:	d1f7      	bne.n	800f08a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f09a:	2214      	movs	r2, #20
 800f09c:	4353      	muls	r3, r2
 800f09e:	58c8      	ldr	r0, [r1, r3]
 800f0a0:	e7f3      	b.n	800f08a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f0a2:	2000      	movs	r0, #0
 800f0a4:	e7f1      	b.n	800f08a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f0a6:	bf00      	nop
 800f0a8:	20012464 	.word	0x20012464
 800f0ac:	0801db80 	.word	0x0801db80
 800f0b0:	0801e73b 	.word	0x0801e73b
 800f0b4:	0801e641 	.word	0x0801e641
 800f0b8:	200123bc 	.word	0x200123bc
 800f0bc:	20012440 	.word	0x20012440

0800f0c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800f0c0:	8802      	ldrh	r2, [r0, #0]
 800f0c2:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800f0c6:	429a      	cmp	r2, r3
 800f0c8:	d840      	bhi.n	800f14c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f0ca:	4b21      	ldr	r3, [pc, #132]	; (800f150 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800f0cc:	881b      	ldrh	r3, [r3, #0]
 800f0ce:	429a      	cmp	r2, r3
 800f0d0:	d220      	bcs.n	800f114 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800f0d2:	4b20      	ldr	r3, [pc, #128]	; (800f154 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800f0d4:	6819      	ldr	r1, [r3, #0]
 800f0d6:	2314      	movs	r3, #20
 800f0d8:	fb03 1302 	mla	r3, r3, r2, r1
 800f0dc:	6858      	ldr	r0, [r3, #4]
 800f0de:	2800      	cmp	r0, #0
 800f0e0:	d035      	beq.n	800f14e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f0e2:	491d      	ldr	r1, [pc, #116]	; (800f158 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f0e4:	6809      	ldr	r1, [r1, #0]
 800f0e6:	2900      	cmp	r1, #0
 800f0e8:	d031      	beq.n	800f14e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f0ea:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800f0ee:	b371      	cbz	r1, 800f14e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f0f0:	895a      	ldrh	r2, [r3, #10]
 800f0f2:	8918      	ldrh	r0, [r3, #8]
 800f0f4:	4350      	muls	r0, r2
 800f0f6:	7c5a      	ldrb	r2, [r3, #17]
 800f0f8:	7cdb      	ldrb	r3, [r3, #19]
 800f0fa:	0952      	lsrs	r2, r2, #5
 800f0fc:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800f100:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f104:	2b0b      	cmp	r3, #11
 800f106:	bf18      	it	ne
 800f108:	0040      	lslne	r0, r0, #1
 800f10a:	3003      	adds	r0, #3
 800f10c:	f020 0003 	bic.w	r0, r0, #3
 800f110:	4408      	add	r0, r1
 800f112:	4770      	bx	lr
 800f114:	4911      	ldr	r1, [pc, #68]	; (800f15c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800f116:	8809      	ldrh	r1, [r1, #0]
 800f118:	4419      	add	r1, r3
 800f11a:	428a      	cmp	r2, r1
 800f11c:	da16      	bge.n	800f14c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f11e:	4910      	ldr	r1, [pc, #64]	; (800f160 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800f120:	6809      	ldr	r1, [r1, #0]
 800f122:	1ad3      	subs	r3, r2, r3
 800f124:	200e      	movs	r0, #14
 800f126:	fb00 1303 	mla	r3, r0, r3, r1
 800f12a:	7b19      	ldrb	r1, [r3, #12]
 800f12c:	f001 011f 	and.w	r1, r1, #31
 800f130:	290b      	cmp	r1, #11
 800f132:	d10b      	bne.n	800f14c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f134:	8919      	ldrh	r1, [r3, #8]
 800f136:	8958      	ldrh	r0, [r3, #10]
 800f138:	4b07      	ldr	r3, [pc, #28]	; (800f158 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f13a:	4348      	muls	r0, r1
 800f13c:	6819      	ldr	r1, [r3, #0]
 800f13e:	3003      	adds	r0, #3
 800f140:	f020 0303 	bic.w	r3, r0, #3
 800f144:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800f148:	4418      	add	r0, r3
 800f14a:	4770      	bx	lr
 800f14c:	2000      	movs	r0, #0
 800f14e:	4770      	bx	lr
 800f150:	2001245c 	.word	0x2001245c
 800f154:	20012464 	.word	0x20012464
 800f158:	20012440 	.word	0x20012440
 800f15c:	20012460 	.word	0x20012460
 800f160:	20012444 	.word	0x20012444

0800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800f164:	4b19      	ldr	r3, [pc, #100]	; (800f1cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800f166:	6819      	ldr	r1, [r3, #0]
 800f168:	8803      	ldrh	r3, [r0, #0]
 800f16a:	b1e9      	cbz	r1, 800f1a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f16c:	4a18      	ldr	r2, [pc, #96]	; (800f1d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800f16e:	8812      	ldrh	r2, [r2, #0]
 800f170:	429a      	cmp	r2, r3
 800f172:	d90a      	bls.n	800f18a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800f174:	2214      	movs	r2, #20
 800f176:	fb02 1303 	mla	r3, r2, r3, r1
 800f17a:	7c58      	ldrb	r0, [r3, #17]
 800f17c:	0942      	lsrs	r2, r0, #5
 800f17e:	7cd8      	ldrb	r0, [r3, #19]
 800f180:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800f184:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800f188:	4770      	bx	lr
 800f18a:	4912      	ldr	r1, [pc, #72]	; (800f1d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800f18c:	8809      	ldrh	r1, [r1, #0]
 800f18e:	4411      	add	r1, r2
 800f190:	428b      	cmp	r3, r1
 800f192:	da09      	bge.n	800f1a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f194:	1a9b      	subs	r3, r3, r2
 800f196:	4a10      	ldr	r2, [pc, #64]	; (800f1d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800f198:	6812      	ldr	r2, [r2, #0]
 800f19a:	210e      	movs	r1, #14
 800f19c:	fb01 2303 	mla	r3, r1, r3, r2
 800f1a0:	7b18      	ldrb	r0, [r3, #12]
 800f1a2:	f000 001f 	and.w	r0, r0, #31
 800f1a6:	4770      	bx	lr
 800f1a8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f1ac:	4293      	cmp	r3, r2
 800f1ae:	d10a      	bne.n	800f1c6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800f1b0:	4b0a      	ldr	r3, [pc, #40]	; (800f1dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800f1b2:	681b      	ldr	r3, [r3, #0]
 800f1b4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f1b8:	b10a      	cbz	r2, 800f1be <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800f1ba:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f1bc:	b900      	cbnz	r0, 800f1c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800f1be:	6898      	ldr	r0, [r3, #8]
 800f1c0:	6803      	ldr	r3, [r0, #0]
 800f1c2:	6a1b      	ldr	r3, [r3, #32]
 800f1c4:	4718      	bx	r3
 800f1c6:	2000      	movs	r0, #0
 800f1c8:	4770      	bx	lr
 800f1ca:	bf00      	nop
 800f1cc:	20012464 	.word	0x20012464
 800f1d0:	2001245c 	.word	0x2001245c
 800f1d4:	20012460 	.word	0x20012460
 800f1d8:	20012444 	.word	0x20012444
 800f1dc:	200123bc 	.word	0x200123bc

0800f1e0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800f1e0:	2010      	movs	r0, #16
 800f1e2:	4770      	bx	lr

0800f1e4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800f1e4:	2000      	movs	r0, #0
 800f1e6:	4770      	bx	lr

0800f1e8 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800f1e8:	00d2      	lsls	r2, r2, #3
 800f1ea:	0209      	lsls	r1, r1, #8
 800f1ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800f1f0:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800f1f4:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800f1f8:	4310      	orrs	r0, r2
 800f1fa:	4770      	bx	lr

0800f1fc <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800f1fc:	0a09      	lsrs	r1, r1, #8
 800f1fe:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800f202:	4770      	bx	lr

0800f204 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800f204:	08c9      	lsrs	r1, r1, #3
 800f206:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800f20a:	4770      	bx	lr

0800f20c <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800f20c:	00c9      	lsls	r1, r1, #3
 800f20e:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800f212:	4770      	bx	lr

0800f214 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800f214:	2bff      	cmp	r3, #255	; 0xff
 800f216:	d050      	beq.n	800f2ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800f218:	2a0b      	cmp	r2, #11
 800f21a:	d04a      	beq.n	800f2b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f21c:	d80e      	bhi.n	800f23c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800f21e:	2a03      	cmp	r2, #3
 800f220:	d03f      	beq.n	800f2a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800f222:	d804      	bhi.n	800f22e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800f224:	2a01      	cmp	r2, #1
 800f226:	d03e      	beq.n	800f2a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800f228:	d93f      	bls.n	800f2aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800f22a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800f22c:	4770      	bx	lr
 800f22e:	2a09      	cmp	r2, #9
 800f230:	d03f      	beq.n	800f2b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f232:	d83c      	bhi.n	800f2ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f234:	2a08      	cmp	r2, #8
 800f236:	d03a      	beq.n	800f2ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f238:	2000      	movs	r0, #0
 800f23a:	4770      	bx	lr
 800f23c:	2a2f      	cmp	r2, #47	; 0x2f
 800f23e:	d024      	beq.n	800f28a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800f240:	d80d      	bhi.n	800f25e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800f242:	2a2d      	cmp	r2, #45	; 0x2d
 800f244:	d014      	beq.n	800f270 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800f246:	d826      	bhi.n	800f296 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800f248:	2a2c      	cmp	r2, #44	; 0x2c
 800f24a:	d1f5      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f24c:	684b      	ldr	r3, [r1, #4]
 800f24e:	781b      	ldrb	r3, [r3, #0]
 800f250:	2b01      	cmp	r3, #1
 800f252:	d018      	beq.n	800f286 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800f254:	d323      	bcc.n	800f29e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800f256:	2b02      	cmp	r3, #2
 800f258:	d1ee      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f25a:	6880      	ldr	r0, [r0, #8]
 800f25c:	4770      	bx	lr
 800f25e:	2a31      	cmp	r2, #49	; 0x31
 800f260:	d004      	beq.n	800f26c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800f262:	d328      	bcc.n	800f2b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800f264:	2a32      	cmp	r2, #50	; 0x32
 800f266:	d026      	beq.n	800f2b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800f268:	2a33      	cmp	r2, #51	; 0x33
 800f26a:	d1e5      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f26c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800f26e:	4770      	bx	lr
 800f270:	684b      	ldr	r3, [r1, #4]
 800f272:	781b      	ldrb	r3, [r3, #0]
 800f274:	2b01      	cmp	r3, #1
 800f276:	d004      	beq.n	800f282 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800f278:	d30b      	bcc.n	800f292 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800f27a:	2b02      	cmp	r3, #2
 800f27c:	d1dc      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f27e:	6900      	ldr	r0, [r0, #16]
 800f280:	4770      	bx	lr
 800f282:	6a00      	ldr	r0, [r0, #32]
 800f284:	4770      	bx	lr
 800f286:	6980      	ldr	r0, [r0, #24]
 800f288:	4770      	bx	lr
 800f28a:	684b      	ldr	r3, [r1, #4]
 800f28c:	781b      	ldrb	r3, [r3, #0]
 800f28e:	2b00      	cmp	r3, #0
 800f290:	d1d2      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f292:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800f294:	4770      	bx	lr
 800f296:	684b      	ldr	r3, [r1, #4]
 800f298:	781b      	ldrb	r3, [r3, #0]
 800f29a:	2b00      	cmp	r3, #0
 800f29c:	d1cc      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f29e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800f2a0:	4770      	bx	lr
 800f2a2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800f2a4:	4770      	bx	lr
 800f2a6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800f2a8:	4770      	bx	lr
 800f2aa:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800f2ac:	4770      	bx	lr
 800f2ae:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800f2b0:	4770      	bx	lr
 800f2b2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800f2b4:	4770      	bx	lr
 800f2b6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800f2b8:	4770      	bx	lr
 800f2ba:	2a0b      	cmp	r2, #11
 800f2bc:	d049      	beq.n	800f352 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800f2be:	d80e      	bhi.n	800f2de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800f2c0:	2a03      	cmp	r2, #3
 800f2c2:	d040      	beq.n	800f346 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800f2c4:	d804      	bhi.n	800f2d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800f2c6:	2a01      	cmp	r2, #1
 800f2c8:	d03f      	beq.n	800f34a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800f2ca:	d940      	bls.n	800f34e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800f2cc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800f2ce:	4770      	bx	lr
 800f2d0:	2a09      	cmp	r2, #9
 800f2d2:	d03e      	beq.n	800f352 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800f2d4:	d801      	bhi.n	800f2da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800f2d6:	2a08      	cmp	r2, #8
 800f2d8:	d1ae      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f2da:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800f2dc:	4770      	bx	lr
 800f2de:	2a2f      	cmp	r2, #47	; 0x2f
 800f2e0:	d024      	beq.n	800f32c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800f2e2:	d80d      	bhi.n	800f300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800f2e4:	2a2d      	cmp	r2, #45	; 0x2d
 800f2e6:	d014      	beq.n	800f312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800f2e8:	d826      	bhi.n	800f338 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800f2ea:	2a2c      	cmp	r2, #44	; 0x2c
 800f2ec:	d1a4      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f2ee:	684b      	ldr	r3, [r1, #4]
 800f2f0:	781b      	ldrb	r3, [r3, #0]
 800f2f2:	2b01      	cmp	r3, #1
 800f2f4:	d018      	beq.n	800f328 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800f2f6:	d324      	bcc.n	800f342 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800f2f8:	2b02      	cmp	r3, #2
 800f2fa:	d19d      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f2fc:	68c0      	ldr	r0, [r0, #12]
 800f2fe:	4770      	bx	lr
 800f300:	2a31      	cmp	r2, #49	; 0x31
 800f302:	d004      	beq.n	800f30e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800f304:	d327      	bcc.n	800f356 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800f306:	2a32      	cmp	r2, #50	; 0x32
 800f308:	d025      	beq.n	800f356 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800f30a:	2a33      	cmp	r2, #51	; 0x33
 800f30c:	d194      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f30e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800f310:	4770      	bx	lr
 800f312:	684b      	ldr	r3, [r1, #4]
 800f314:	781b      	ldrb	r3, [r3, #0]
 800f316:	2b01      	cmp	r3, #1
 800f318:	d004      	beq.n	800f324 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800f31a:	d30b      	bcc.n	800f334 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800f31c:	2b02      	cmp	r3, #2
 800f31e:	d18b      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f320:	6940      	ldr	r0, [r0, #20]
 800f322:	4770      	bx	lr
 800f324:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800f326:	4770      	bx	lr
 800f328:	69c0      	ldr	r0, [r0, #28]
 800f32a:	4770      	bx	lr
 800f32c:	684b      	ldr	r3, [r1, #4]
 800f32e:	781b      	ldrb	r3, [r3, #0]
 800f330:	2b00      	cmp	r3, #0
 800f332:	d181      	bne.n	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f334:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800f336:	4770      	bx	lr
 800f338:	684b      	ldr	r3, [r1, #4]
 800f33a:	781b      	ldrb	r3, [r3, #0]
 800f33c:	2b00      	cmp	r3, #0
 800f33e:	f47f af7b 	bne.w	800f238 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f342:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800f344:	4770      	bx	lr
 800f346:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f348:	4770      	bx	lr
 800f34a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800f34c:	4770      	bx	lr
 800f34e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800f350:	4770      	bx	lr
 800f352:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800f354:	4770      	bx	lr
 800f356:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800f358:	4770      	bx	lr

0800f35a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f35a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f35e:	b087      	sub	sp, #28
 800f360:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800f362:	9205      	str	r2, [sp, #20]
 800f364:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f368:	9202      	str	r2, [sp, #8]
 800f36a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800f36e:	9101      	str	r1, [sp, #4]
 800f370:	6871      	ldr	r1, [r6, #4]
 800f372:	981a      	ldr	r0, [sp, #104]	; 0x68
 800f374:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800f378:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800f37c:	fb01 2505 	mla	r5, r1, r5, r2
 800f380:	6832      	ldr	r2, [r6, #0]
 800f382:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800f386:	6802      	ldr	r2, [r0, #0]
 800f388:	9203      	str	r2, [sp, #12]
 800f38a:	6842      	ldr	r2, [r0, #4]
 800f38c:	fa1f fe84 	uxth.w	lr, r4
 800f390:	3204      	adds	r2, #4
 800f392:	43e4      	mvns	r4, r4
 800f394:	9204      	str	r2, [sp, #16]
 800f396:	b2e4      	uxtb	r4, r4
 800f398:	9a01      	ldr	r2, [sp, #4]
 800f39a:	2a00      	cmp	r2, #0
 800f39c:	dc03      	bgt.n	800f3a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f39e:	9a05      	ldr	r2, [sp, #20]
 800f3a0:	2a00      	cmp	r2, #0
 800f3a2:	f340 8119 	ble.w	800f5d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800f3a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f3a8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f3ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f3ae:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f3b2:	2b00      	cmp	r3, #0
 800f3b4:	dd0f      	ble.n	800f3d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f3b6:	1408      	asrs	r0, r1, #16
 800f3b8:	d406      	bmi.n	800f3c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f3ba:	4540      	cmp	r0, r8
 800f3bc:	da04      	bge.n	800f3c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f3be:	1410      	asrs	r0, r2, #16
 800f3c0:	d402      	bmi.n	800f3c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f3c2:	9e02      	ldr	r6, [sp, #8]
 800f3c4:	42b0      	cmp	r0, r6
 800f3c6:	db07      	blt.n	800f3d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f3c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f3ca:	4401      	add	r1, r0
 800f3cc:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f3ce:	3b01      	subs	r3, #1
 800f3d0:	4402      	add	r2, r0
 800f3d2:	3502      	adds	r5, #2
 800f3d4:	e7ed      	b.n	800f3b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800f3d6:	d00f      	beq.n	800f3f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f3d8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f3da:	1e58      	subs	r0, r3, #1
 800f3dc:	fb06 1600 	mla	r6, r6, r0, r1
 800f3e0:	1436      	asrs	r6, r6, #16
 800f3e2:	d547      	bpl.n	800f474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800f3e4:	469b      	mov	fp, r3
 800f3e6:	46aa      	mov	sl, r5
 800f3e8:	f1bb 0f00 	cmp.w	fp, #0
 800f3ec:	f300 809e 	bgt.w	800f52c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800f3f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f3f4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f3f8:	9b01      	ldr	r3, [sp, #4]
 800f3fa:	2b00      	cmp	r3, #0
 800f3fc:	f340 80ec 	ble.w	800f5d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800f400:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f404:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f408:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f40c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f40e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f412:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f416:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f41a:	eef0 6a62 	vmov.f32	s13, s5
 800f41e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f422:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f426:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f42a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f42e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f432:	eef0 6a43 	vmov.f32	s13, s6
 800f436:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f43a:	ee12 2a90 	vmov	r2, s5
 800f43e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f442:	fb92 f3f3 	sdiv	r3, r2, r3
 800f446:	ee13 2a10 	vmov	r2, s6
 800f44a:	9313      	str	r3, [sp, #76]	; 0x4c
 800f44c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f44e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f452:	9314      	str	r3, [sp, #80]	; 0x50
 800f454:	9b01      	ldr	r3, [sp, #4]
 800f456:	9a05      	ldr	r2, [sp, #20]
 800f458:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f45c:	3b01      	subs	r3, #1
 800f45e:	9301      	str	r3, [sp, #4]
 800f460:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f464:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f466:	eeb0 3a67 	vmov.f32	s6, s15
 800f46a:	bf08      	it	eq
 800f46c:	4613      	moveq	r3, r2
 800f46e:	eef0 2a47 	vmov.f32	s5, s14
 800f472:	e791      	b.n	800f398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f474:	4546      	cmp	r6, r8
 800f476:	dab5      	bge.n	800f3e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f478:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f47a:	fb06 2000 	mla	r0, r6, r0, r2
 800f47e:	1400      	asrs	r0, r0, #16
 800f480:	d4b0      	bmi.n	800f3e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f482:	9e02      	ldr	r6, [sp, #8]
 800f484:	42b0      	cmp	r0, r6
 800f486:	daad      	bge.n	800f3e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f488:	469a      	mov	sl, r3
 800f48a:	46ab      	mov	fp, r5
 800f48c:	f1ba 0f00 	cmp.w	sl, #0
 800f490:	ddae      	ble.n	800f3f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f492:	9f03      	ldr	r7, [sp, #12]
 800f494:	1410      	asrs	r0, r2, #16
 800f496:	140e      	asrs	r6, r1, #16
 800f498:	fb08 7000 	mla	r0, r8, r0, r7
 800f49c:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f4a0:	5d80      	ldrb	r0, [r0, r6]
 800f4a2:	9e04      	ldr	r6, [sp, #16]
 800f4a4:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f4a8:	f8bb 6000 	ldrh.w	r6, [fp]
 800f4ac:	1237      	asrs	r7, r6, #8
 800f4ae:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f4b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f4b6:	fb17 f704 	smulbb	r7, r7, r4
 800f4ba:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f4be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f4c2:	00f6      	lsls	r6, r6, #3
 800f4c4:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f4c8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f4cc:	10c7      	asrs	r7, r0, #3
 800f4ce:	b2f6      	uxtb	r6, r6
 800f4d0:	00c0      	lsls	r0, r0, #3
 800f4d2:	fb19 f904 	smulbb	r9, r9, r4
 800f4d6:	fb16 f604 	smulbb	r6, r6, r4
 800f4da:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f4de:	b2c0      	uxtb	r0, r0
 800f4e0:	fa1f fc8c 	uxth.w	ip, ip
 800f4e4:	fb07 970e 	mla	r7, r7, lr, r9
 800f4e8:	fb00 600e 	mla	r0, r0, lr, r6
 800f4ec:	b280      	uxth	r0, r0
 800f4ee:	b2bf      	uxth	r7, r7
 800f4f0:	f10c 0601 	add.w	r6, ip, #1
 800f4f4:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f4f8:	f107 0901 	add.w	r9, r7, #1
 800f4fc:	1c46      	adds	r6, r0, #1
 800f4fe:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f502:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f506:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f508:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f50c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f510:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f514:	ea4c 0c06 	orr.w	ip, ip, r6
 800f518:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f51c:	4401      	add	r1, r0
 800f51e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f520:	ea4c 0c09 	orr.w	ip, ip, r9
 800f524:	f82b cb02 	strh.w	ip, [fp], #2
 800f528:	4402      	add	r2, r0
 800f52a:	e7af      	b.n	800f48c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800f52c:	140e      	asrs	r6, r1, #16
 800f52e:	d44a      	bmi.n	800f5c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f530:	4546      	cmp	r6, r8
 800f532:	da48      	bge.n	800f5c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f534:	1410      	asrs	r0, r2, #16
 800f536:	d446      	bmi.n	800f5c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f538:	9f02      	ldr	r7, [sp, #8]
 800f53a:	42b8      	cmp	r0, r7
 800f53c:	da43      	bge.n	800f5c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f53e:	9f03      	ldr	r7, [sp, #12]
 800f540:	fb08 7000 	mla	r0, r8, r0, r7
 800f544:	5d80      	ldrb	r0, [r0, r6]
 800f546:	9e04      	ldr	r6, [sp, #16]
 800f548:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f54c:	f8ba 6000 	ldrh.w	r6, [sl]
 800f550:	1237      	asrs	r7, r6, #8
 800f552:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f556:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f55a:	fb17 f704 	smulbb	r7, r7, r4
 800f55e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f562:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f566:	00f6      	lsls	r6, r6, #3
 800f568:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f56c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f570:	10c7      	asrs	r7, r0, #3
 800f572:	b2f6      	uxtb	r6, r6
 800f574:	00c0      	lsls	r0, r0, #3
 800f576:	fb19 f904 	smulbb	r9, r9, r4
 800f57a:	fb16 f604 	smulbb	r6, r6, r4
 800f57e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f582:	b2c0      	uxtb	r0, r0
 800f584:	fa1f fc8c 	uxth.w	ip, ip
 800f588:	fb07 970e 	mla	r7, r7, lr, r9
 800f58c:	fb00 600e 	mla	r0, r0, lr, r6
 800f590:	b2bf      	uxth	r7, r7
 800f592:	b280      	uxth	r0, r0
 800f594:	f10c 0601 	add.w	r6, ip, #1
 800f598:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f59c:	f107 0901 	add.w	r9, r7, #1
 800f5a0:	1c46      	adds	r6, r0, #1
 800f5a2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f5a6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f5aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f5ae:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f5b2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f5b6:	ea4c 0c06 	orr.w	ip, ip, r6
 800f5ba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f5be:	ea4c 0c09 	orr.w	ip, ip, r9
 800f5c2:	f8aa c000 	strh.w	ip, [sl]
 800f5c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f5c8:	4401      	add	r1, r0
 800f5ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f5cc:	f10a 0a02 	add.w	sl, sl, #2
 800f5d0:	4402      	add	r2, r0
 800f5d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f5d6:	e707      	b.n	800f3e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f5d8:	b007      	add	sp, #28
 800f5da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f5de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f5de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5e2:	b085      	sub	sp, #20
 800f5e4:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800f5e8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f5ea:	9203      	str	r2, [sp, #12]
 800f5ec:	6842      	ldr	r2, [r0, #4]
 800f5ee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f5f0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800f5f2:	6800      	ldr	r0, [r0, #0]
 800f5f4:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800f5f8:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800f5fc:	4696      	mov	lr, r2
 800f5fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f600:	fb0e 2505 	mla	r5, lr, r5, r2
 800f604:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f608:	6860      	ldr	r0, [r4, #4]
 800f60a:	6822      	ldr	r2, [r4, #0]
 800f60c:	9201      	str	r2, [sp, #4]
 800f60e:	1d02      	adds	r2, r0, #4
 800f610:	9202      	str	r2, [sp, #8]
 800f612:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f616:	2900      	cmp	r1, #0
 800f618:	dc03      	bgt.n	800f622 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800f61a:	9a03      	ldr	r2, [sp, #12]
 800f61c:	2a00      	cmp	r2, #0
 800f61e:	f340 809b 	ble.w	800f758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f622:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f624:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f628:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f62a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f62e:	2b00      	cmp	r3, #0
 800f630:	dd0e      	ble.n	800f650 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800f632:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800f636:	d406      	bmi.n	800f646 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f638:	45e6      	cmp	lr, ip
 800f63a:	da04      	bge.n	800f646 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f63c:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800f640:	d401      	bmi.n	800f646 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f642:	45c6      	cmp	lr, r8
 800f644:	db05      	blt.n	800f652 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f646:	443c      	add	r4, r7
 800f648:	4430      	add	r0, r6
 800f64a:	3b01      	subs	r3, #1
 800f64c:	3502      	adds	r5, #2
 800f64e:	e7ee      	b.n	800f62e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800f650:	d010      	beq.n	800f674 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f652:	f103 3eff 	add.w	lr, r3, #4294967295
 800f656:	fb07 490e 	mla	r9, r7, lr, r4
 800f65a:	ea5f 4929 	movs.w	r9, r9, asr #16
 800f65e:	d53d      	bpl.n	800f6dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800f660:	469e      	mov	lr, r3
 800f662:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800f666:	f1be 0f00 	cmp.w	lr, #0
 800f66a:	dc58      	bgt.n	800f71e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800f66c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f670:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f674:	2900      	cmp	r1, #0
 800f676:	dd6f      	ble.n	800f758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f678:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f67c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f680:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f684:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f686:	3901      	subs	r1, #1
 800f688:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f68c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f690:	eeb0 6a62 	vmov.f32	s12, s5
 800f694:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f698:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f69c:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f6a0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f6a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f6a8:	eeb0 6a43 	vmov.f32	s12, s6
 800f6ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f6b0:	ee12 2a90 	vmov	r2, s5
 800f6b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f6b8:	fb92 f7f3 	sdiv	r7, r2, r3
 800f6bc:	ee13 2a10 	vmov	r2, s6
 800f6c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f6c4:	fb92 f6f3 	sdiv	r6, r2, r3
 800f6c8:	9a03      	ldr	r2, [sp, #12]
 800f6ca:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f6ce:	bf08      	it	eq
 800f6d0:	4613      	moveq	r3, r2
 800f6d2:	eeb0 3a67 	vmov.f32	s6, s15
 800f6d6:	eef0 2a47 	vmov.f32	s5, s14
 800f6da:	e79c      	b.n	800f616 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800f6dc:	45e1      	cmp	r9, ip
 800f6de:	dabf      	bge.n	800f660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f6e0:	fb06 0e0e 	mla	lr, r6, lr, r0
 800f6e4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800f6e8:	d4ba      	bmi.n	800f660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f6ea:	45c6      	cmp	lr, r8
 800f6ec:	dab8      	bge.n	800f660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f6ee:	469e      	mov	lr, r3
 800f6f0:	46aa      	mov	sl, r5
 800f6f2:	f1be 0f00 	cmp.w	lr, #0
 800f6f6:	ddb9      	ble.n	800f66c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f6f8:	9a01      	ldr	r2, [sp, #4]
 800f6fa:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f6fe:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800f702:	fb0c 2909 	mla	r9, ip, r9, r2
 800f706:	9a02      	ldr	r2, [sp, #8]
 800f708:	f819 900b 	ldrb.w	r9, [r9, fp]
 800f70c:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800f710:	f82a 9b02 	strh.w	r9, [sl], #2
 800f714:	443c      	add	r4, r7
 800f716:	4430      	add	r0, r6
 800f718:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f71c:	e7e9      	b.n	800f6f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800f71e:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800f722:	d414      	bmi.n	800f74e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f724:	45e2      	cmp	sl, ip
 800f726:	da12      	bge.n	800f74e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f728:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f72c:	d40f      	bmi.n	800f74e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f72e:	45c1      	cmp	r9, r8
 800f730:	da0d      	bge.n	800f74e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f732:	9a01      	ldr	r2, [sp, #4]
 800f734:	fb0c 2909 	mla	r9, ip, r9, r2
 800f738:	9a02      	ldr	r2, [sp, #8]
 800f73a:	f819 900a 	ldrb.w	r9, [r9, sl]
 800f73e:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800f742:	f06f 0201 	mvn.w	r2, #1
 800f746:	fb02 f90e 	mul.w	r9, r2, lr
 800f74a:	f82b a009 	strh.w	sl, [fp, r9]
 800f74e:	443c      	add	r4, r7
 800f750:	4430      	add	r0, r6
 800f752:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f756:	e786      	b.n	800f666 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800f758:	b005      	add	sp, #20
 800f75a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f75e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f762:	b087      	sub	sp, #28
 800f764:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800f766:	9205      	str	r2, [sp, #20]
 800f768:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f76c:	9202      	str	r2, [sp, #8]
 800f76e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f772:	9101      	str	r1, [sp, #4]
 800f774:	6871      	ldr	r1, [r6, #4]
 800f776:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f778:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800f77c:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800f780:	fb01 2404 	mla	r4, r1, r4, r2
 800f784:	6832      	ldr	r2, [r6, #0]
 800f786:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f78a:	682a      	ldr	r2, [r5, #0]
 800f78c:	9203      	str	r2, [sp, #12]
 800f78e:	686a      	ldr	r2, [r5, #4]
 800f790:	fa1f fc80 	uxth.w	ip, r0
 800f794:	3204      	adds	r2, #4
 800f796:	43c0      	mvns	r0, r0
 800f798:	9200      	str	r2, [sp, #0]
 800f79a:	b2c0      	uxtb	r0, r0
 800f79c:	9a01      	ldr	r2, [sp, #4]
 800f79e:	2a00      	cmp	r2, #0
 800f7a0:	dc03      	bgt.n	800f7aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f7a2:	9a05      	ldr	r2, [sp, #20]
 800f7a4:	2a00      	cmp	r2, #0
 800f7a6:	f340 811b 	ble.w	800f9e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800f7aa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f7ac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f7b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f7b2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f7b6:	2b00      	cmp	r3, #0
 800f7b8:	dd0f      	ble.n	800f7da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f7ba:	140d      	asrs	r5, r1, #16
 800f7bc:	d406      	bmi.n	800f7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f7be:	4575      	cmp	r5, lr
 800f7c0:	da04      	bge.n	800f7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f7c2:	1415      	asrs	r5, r2, #16
 800f7c4:	d402      	bmi.n	800f7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f7c6:	9e02      	ldr	r6, [sp, #8]
 800f7c8:	42b5      	cmp	r5, r6
 800f7ca:	db07      	blt.n	800f7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f7cc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f7ce:	4429      	add	r1, r5
 800f7d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f7d2:	3b01      	subs	r3, #1
 800f7d4:	442a      	add	r2, r5
 800f7d6:	3402      	adds	r4, #2
 800f7d8:	e7ed      	b.n	800f7b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800f7da:	d00f      	beq.n	800f7fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f7dc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f7de:	1e5d      	subs	r5, r3, #1
 800f7e0:	fb06 1605 	mla	r6, r6, r5, r1
 800f7e4:	1436      	asrs	r6, r6, #16
 800f7e6:	d547      	bpl.n	800f878 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800f7e8:	469a      	mov	sl, r3
 800f7ea:	46a1      	mov	r9, r4
 800f7ec:	f1ba 0f00 	cmp.w	sl, #0
 800f7f0:	f300 809f 	bgt.w	800f932 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800f7f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f7f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f7fc:	9b01      	ldr	r3, [sp, #4]
 800f7fe:	2b00      	cmp	r3, #0
 800f800:	f340 80ee 	ble.w	800f9e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800f804:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f808:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f80c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f810:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f812:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f816:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f81a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f81e:	eef0 6a62 	vmov.f32	s13, s5
 800f822:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f826:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f82a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f82e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f832:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f836:	eef0 6a43 	vmov.f32	s13, s6
 800f83a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f83e:	ee12 2a90 	vmov	r2, s5
 800f842:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f846:	fb92 f3f3 	sdiv	r3, r2, r3
 800f84a:	ee13 2a10 	vmov	r2, s6
 800f84e:	9313      	str	r3, [sp, #76]	; 0x4c
 800f850:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f852:	fb92 f3f3 	sdiv	r3, r2, r3
 800f856:	9314      	str	r3, [sp, #80]	; 0x50
 800f858:	9b01      	ldr	r3, [sp, #4]
 800f85a:	9a05      	ldr	r2, [sp, #20]
 800f85c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f860:	3b01      	subs	r3, #1
 800f862:	9301      	str	r3, [sp, #4]
 800f864:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f868:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f86a:	eeb0 3a67 	vmov.f32	s6, s15
 800f86e:	bf08      	it	eq
 800f870:	4613      	moveq	r3, r2
 800f872:	eef0 2a47 	vmov.f32	s5, s14
 800f876:	e791      	b.n	800f79c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f878:	4576      	cmp	r6, lr
 800f87a:	dab5      	bge.n	800f7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f87c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f87e:	fb06 2505 	mla	r5, r6, r5, r2
 800f882:	142d      	asrs	r5, r5, #16
 800f884:	d4b0      	bmi.n	800f7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f886:	9e02      	ldr	r6, [sp, #8]
 800f888:	42b5      	cmp	r5, r6
 800f88a:	daad      	bge.n	800f7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f88c:	4699      	mov	r9, r3
 800f88e:	46a2      	mov	sl, r4
 800f890:	f1b9 0f00 	cmp.w	r9, #0
 800f894:	ddae      	ble.n	800f7f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f896:	9f03      	ldr	r7, [sp, #12]
 800f898:	1415      	asrs	r5, r2, #16
 800f89a:	140e      	asrs	r6, r1, #16
 800f89c:	fb0e 7505 	mla	r5, lr, r5, r7
 800f8a0:	f109 39ff 	add.w	r9, r9, #4294967295
 800f8a4:	f815 8006 	ldrb.w	r8, [r5, r6]
 800f8a8:	9d00      	ldr	r5, [sp, #0]
 800f8aa:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800f8ae:	eb05 0b08 	add.w	fp, r5, r8
 800f8b2:	f8ba 5000 	ldrh.w	r5, [sl]
 800f8b6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800f8ba:	f89b b001 	ldrb.w	fp, [fp, #1]
 800f8be:	122f      	asrs	r7, r5, #8
 800f8c0:	fb16 f60c 	smulbb	r6, r6, ip
 800f8c4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f8c8:	fb07 6700 	mla	r7, r7, r0, r6
 800f8cc:	10ee      	asrs	r6, r5, #3
 800f8ce:	fb1b fb0c 	smulbb	fp, fp, ip
 800f8d2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f8d6:	fb06 b600 	mla	r6, r6, r0, fp
 800f8da:	b2b6      	uxth	r6, r6
 800f8dc:	9604      	str	r6, [sp, #16]
 800f8de:	9e00      	ldr	r6, [sp, #0]
 800f8e0:	00ed      	lsls	r5, r5, #3
 800f8e2:	f816 8008 	ldrb.w	r8, [r6, r8]
 800f8e6:	b2ed      	uxtb	r5, r5
 800f8e8:	fb15 f500 	smulbb	r5, r5, r0
 800f8ec:	b2bf      	uxth	r7, r7
 800f8ee:	fb08 580c 	mla	r8, r8, ip, r5
 800f8f2:	fa1f f888 	uxth.w	r8, r8
 800f8f6:	1c7d      	adds	r5, r7, #1
 800f8f8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f8fc:	f108 0501 	add.w	r5, r8, #1
 800f900:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800f904:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f908:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f90c:	432f      	orrs	r7, r5
 800f90e:	9d04      	ldr	r5, [sp, #16]
 800f910:	f105 0b01 	add.w	fp, r5, #1
 800f914:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800f918:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f91a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f91e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f922:	4429      	add	r1, r5
 800f924:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f926:	ea47 070b 	orr.w	r7, r7, fp
 800f92a:	f82a 7b02 	strh.w	r7, [sl], #2
 800f92e:	442a      	add	r2, r5
 800f930:	e7ae      	b.n	800f890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800f932:	140e      	asrs	r6, r1, #16
 800f934:	d44b      	bmi.n	800f9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800f936:	4576      	cmp	r6, lr
 800f938:	da49      	bge.n	800f9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800f93a:	1415      	asrs	r5, r2, #16
 800f93c:	d447      	bmi.n	800f9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800f93e:	9f02      	ldr	r7, [sp, #8]
 800f940:	42bd      	cmp	r5, r7
 800f942:	da44      	bge.n	800f9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800f944:	9f03      	ldr	r7, [sp, #12]
 800f946:	fb0e 7505 	mla	r5, lr, r5, r7
 800f94a:	f815 8006 	ldrb.w	r8, [r5, r6]
 800f94e:	9d00      	ldr	r5, [sp, #0]
 800f950:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800f954:	eb05 0b08 	add.w	fp, r5, r8
 800f958:	f8b9 5000 	ldrh.w	r5, [r9]
 800f95c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800f960:	f89b b001 	ldrb.w	fp, [fp, #1]
 800f964:	122f      	asrs	r7, r5, #8
 800f966:	fb16 f60c 	smulbb	r6, r6, ip
 800f96a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f96e:	fb07 6700 	mla	r7, r7, r0, r6
 800f972:	10ee      	asrs	r6, r5, #3
 800f974:	fb1b fb0c 	smulbb	fp, fp, ip
 800f978:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f97c:	fb06 b600 	mla	r6, r6, r0, fp
 800f980:	b2b6      	uxth	r6, r6
 800f982:	9604      	str	r6, [sp, #16]
 800f984:	9e00      	ldr	r6, [sp, #0]
 800f986:	00ed      	lsls	r5, r5, #3
 800f988:	f816 8008 	ldrb.w	r8, [r6, r8]
 800f98c:	b2ed      	uxtb	r5, r5
 800f98e:	fb15 f500 	smulbb	r5, r5, r0
 800f992:	b2bf      	uxth	r7, r7
 800f994:	fb08 580c 	mla	r8, r8, ip, r5
 800f998:	fa1f f888 	uxth.w	r8, r8
 800f99c:	1c7d      	adds	r5, r7, #1
 800f99e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f9a2:	f108 0501 	add.w	r5, r8, #1
 800f9a6:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800f9aa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f9ae:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f9b2:	432f      	orrs	r7, r5
 800f9b4:	9d04      	ldr	r5, [sp, #16]
 800f9b6:	f105 0b01 	add.w	fp, r5, #1
 800f9ba:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800f9be:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f9c2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f9c6:	ea47 070b 	orr.w	r7, r7, fp
 800f9ca:	f8a9 7000 	strh.w	r7, [r9]
 800f9ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f9d0:	4429      	add	r1, r5
 800f9d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f9d4:	f109 0902 	add.w	r9, r9, #2
 800f9d8:	442a      	add	r2, r5
 800f9da:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f9de:	e705      	b.n	800f7ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f9e0:	b007      	add	sp, #28
 800f9e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f9e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9ec:	b085      	sub	sp, #20
 800f9ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f9f2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f9f4:	9203      	str	r2, [sp, #12]
 800f9f6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f9fa:	6870      	ldr	r0, [r6, #4]
 800f9fc:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800f9fe:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800fa02:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800fa06:	9101      	str	r1, [sp, #4]
 800fa08:	fb00 2404 	mla	r4, r0, r4, r2
 800fa0c:	6832      	ldr	r2, [r6, #0]
 800fa0e:	686e      	ldr	r6, [r5, #4]
 800fa10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fa14:	682a      	ldr	r2, [r5, #0]
 800fa16:	9202      	str	r2, [sp, #8]
 800fa18:	3604      	adds	r6, #4
 800fa1a:	9a01      	ldr	r2, [sp, #4]
 800fa1c:	2a00      	cmp	r2, #0
 800fa1e:	dc03      	bgt.n	800fa28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800fa20:	9a03      	ldr	r2, [sp, #12]
 800fa22:	2a00      	cmp	r2, #0
 800fa24:	f340 80c7 	ble.w	800fbb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800fa28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fa2a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fa2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fa30:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fa34:	2b00      	cmp	r3, #0
 800fa36:	dd0e      	ble.n	800fa56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fa38:	1405      	asrs	r5, r0, #16
 800fa3a:	d405      	bmi.n	800fa48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fa3c:	42bd      	cmp	r5, r7
 800fa3e:	da03      	bge.n	800fa48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fa40:	1415      	asrs	r5, r2, #16
 800fa42:	d401      	bmi.n	800fa48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fa44:	4545      	cmp	r5, r8
 800fa46:	db07      	blt.n	800fa58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fa48:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800fa4a:	4428      	add	r0, r5
 800fa4c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fa4e:	3b01      	subs	r3, #1
 800fa50:	442a      	add	r2, r5
 800fa52:	3402      	adds	r4, #2
 800fa54:	e7ee      	b.n	800fa34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fa56:	d010      	beq.n	800fa7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800fa58:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fa5a:	1e5d      	subs	r5, r3, #1
 800fa5c:	fb01 0c05 	mla	ip, r1, r5, r0
 800fa60:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800fa64:	d545      	bpl.n	800faf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800fa66:	469e      	mov	lr, r3
 800fa68:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800fa6c:	f1be 0f00 	cmp.w	lr, #0
 800fa70:	dc72      	bgt.n	800fb58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800fa72:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fa76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fa7a:	9b01      	ldr	r3, [sp, #4]
 800fa7c:	2b00      	cmp	r3, #0
 800fa7e:	f340 809a 	ble.w	800fbb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800fa82:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fa86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fa8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fa8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fa90:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fa94:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fa98:	eeb0 6a62 	vmov.f32	s12, s5
 800fa9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800faa0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800faa4:	ee77 2a62 	vsub.f32	s5, s14, s5
 800faa8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800faac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fab0:	eeb0 6a43 	vmov.f32	s12, s6
 800fab4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fab8:	ee12 2a90 	vmov	r2, s5
 800fabc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fac0:	fb92 f3f3 	sdiv	r3, r2, r3
 800fac4:	ee13 2a10 	vmov	r2, s6
 800fac8:	9311      	str	r3, [sp, #68]	; 0x44
 800faca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800facc:	fb92 f3f3 	sdiv	r3, r2, r3
 800fad0:	9312      	str	r3, [sp, #72]	; 0x48
 800fad2:	9b01      	ldr	r3, [sp, #4]
 800fad4:	9a03      	ldr	r2, [sp, #12]
 800fad6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fada:	3b01      	subs	r3, #1
 800fadc:	9301      	str	r3, [sp, #4]
 800fade:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fae2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fae4:	eeb0 3a67 	vmov.f32	s6, s15
 800fae8:	bf08      	it	eq
 800faea:	4613      	moveq	r3, r2
 800faec:	eef0 2a47 	vmov.f32	s5, s14
 800faf0:	e793      	b.n	800fa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800faf2:	45bc      	cmp	ip, r7
 800faf4:	dab7      	bge.n	800fa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800faf6:	9912      	ldr	r1, [sp, #72]	; 0x48
 800faf8:	fb01 2505 	mla	r5, r1, r5, r2
 800fafc:	142d      	asrs	r5, r5, #16
 800fafe:	d4b2      	bmi.n	800fa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fb00:	4545      	cmp	r5, r8
 800fb02:	dab0      	bge.n	800fa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fb04:	469e      	mov	lr, r3
 800fb06:	46a2      	mov	sl, r4
 800fb08:	f1be 0f00 	cmp.w	lr, #0
 800fb0c:	ddb1      	ble.n	800fa72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fb0e:	9902      	ldr	r1, [sp, #8]
 800fb10:	1415      	asrs	r5, r2, #16
 800fb12:	fb07 1505 	mla	r5, r7, r5, r1
 800fb16:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800fb1a:	4928      	ldr	r1, [pc, #160]	; (800fbbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800fb1c:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800fb20:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800fb24:	eb06 0b0c 	add.w	fp, r6, ip
 800fb28:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fb2c:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800fb30:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800fb34:	00ed      	lsls	r5, r5, #3
 800fb36:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800fb3a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fb3e:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fb40:	ea49 0505 	orr.w	r5, r9, r5
 800fb44:	f816 900c 	ldrb.w	r9, [r6, ip]
 800fb48:	4408      	add	r0, r1
 800fb4a:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fb4c:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800fb50:	f82a 5b02 	strh.w	r5, [sl], #2
 800fb54:	440a      	add	r2, r1
 800fb56:	e7d7      	b.n	800fb08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800fb58:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800fb5c:	d424      	bmi.n	800fba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fb5e:	45bc      	cmp	ip, r7
 800fb60:	da22      	bge.n	800fba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fb62:	1415      	asrs	r5, r2, #16
 800fb64:	d420      	bmi.n	800fba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fb66:	4545      	cmp	r5, r8
 800fb68:	da1e      	bge.n	800fba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fb6a:	9902      	ldr	r1, [sp, #8]
 800fb6c:	fb07 1505 	mla	r5, r7, r5, r1
 800fb70:	f06f 0101 	mvn.w	r1, #1
 800fb74:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800fb78:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800fb7c:	eb06 050c 	add.w	r5, r6, ip
 800fb80:	fb01 f90e 	mul.w	r9, r1, lr
 800fb84:	f895 a002 	ldrb.w	sl, [r5, #2]
 800fb88:	786d      	ldrb	r5, [r5, #1]
 800fb8a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800fb8e:	00ed      	lsls	r5, r5, #3
 800fb90:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800fb94:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fb98:	ea4a 0505 	orr.w	r5, sl, r5
 800fb9c:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800fba0:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800fba4:	f82b 5009 	strh.w	r5, [fp, r9]
 800fba8:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fbaa:	4408      	add	r0, r1
 800fbac:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fbae:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fbb2:	440a      	add	r2, r1
 800fbb4:	e75a      	b.n	800fa6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800fbb6:	b005      	add	sp, #20
 800fbb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbbc:	fffff800 	.word	0xfffff800

0800fbc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fbc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbc4:	b087      	sub	sp, #28
 800fbc6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fbca:	9204      	str	r2, [sp, #16]
 800fbcc:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fbd0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800fbd2:	9201      	str	r2, [sp, #4]
 800fbd4:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800fbd8:	9205      	str	r2, [sp, #20]
 800fbda:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fbde:	9100      	str	r1, [sp, #0]
 800fbe0:	6869      	ldr	r1, [r5, #4]
 800fbe2:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fbe4:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800fbe8:	fb01 2404 	mla	r4, r1, r4, r2
 800fbec:	682a      	ldr	r2, [r5, #0]
 800fbee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fbf2:	6802      	ldr	r2, [r0, #0]
 800fbf4:	9202      	str	r2, [sp, #8]
 800fbf6:	6842      	ldr	r2, [r0, #4]
 800fbf8:	3204      	adds	r2, #4
 800fbfa:	9203      	str	r2, [sp, #12]
 800fbfc:	9a00      	ldr	r2, [sp, #0]
 800fbfe:	2a00      	cmp	r2, #0
 800fc00:	dc03      	bgt.n	800fc0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800fc02:	9a04      	ldr	r2, [sp, #16]
 800fc04:	2a00      	cmp	r2, #0
 800fc06:	f340 812c 	ble.w	800fe62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800fc0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fc0c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fc10:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fc12:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fc16:	2b00      	cmp	r3, #0
 800fc18:	dd0f      	ble.n	800fc3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800fc1a:	1402      	asrs	r2, r0, #16
 800fc1c:	d406      	bmi.n	800fc2c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fc1e:	4572      	cmp	r2, lr
 800fc20:	da04      	bge.n	800fc2c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fc22:	140a      	asrs	r2, r1, #16
 800fc24:	d402      	bmi.n	800fc2c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fc26:	9d01      	ldr	r5, [sp, #4]
 800fc28:	42aa      	cmp	r2, r5
 800fc2a:	db07      	blt.n	800fc3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800fc2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fc2e:	4410      	add	r0, r2
 800fc30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fc32:	3b01      	subs	r3, #1
 800fc34:	4411      	add	r1, r2
 800fc36:	3402      	adds	r4, #2
 800fc38:	e7ed      	b.n	800fc16 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800fc3a:	d00f      	beq.n	800fc5c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800fc3c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fc3e:	1e5a      	subs	r2, r3, #1
 800fc40:	fb05 0502 	mla	r5, r5, r2, r0
 800fc44:	142d      	asrs	r5, r5, #16
 800fc46:	d545      	bpl.n	800fcd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800fc48:	4699      	mov	r9, r3
 800fc4a:	46a0      	mov	r8, r4
 800fc4c:	f1b9 0f00 	cmp.w	r9, #0
 800fc50:	f300 80a7 	bgt.w	800fda2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800fc54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fc58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fc5c:	9b00      	ldr	r3, [sp, #0]
 800fc5e:	2b00      	cmp	r3, #0
 800fc60:	f340 80ff 	ble.w	800fe62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800fc64:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fc68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fc6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fc70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fc72:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fc76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fc7a:	eeb0 6a62 	vmov.f32	s12, s5
 800fc7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fc82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fc86:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fc8a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fc8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fc92:	eeb0 6a43 	vmov.f32	s12, s6
 800fc96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fc9a:	ee12 2a90 	vmov	r2, s5
 800fc9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fca2:	fb92 f3f3 	sdiv	r3, r2, r3
 800fca6:	ee13 2a10 	vmov	r2, s6
 800fcaa:	9313      	str	r3, [sp, #76]	; 0x4c
 800fcac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fcae:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcb2:	9314      	str	r3, [sp, #80]	; 0x50
 800fcb4:	9b00      	ldr	r3, [sp, #0]
 800fcb6:	9a04      	ldr	r2, [sp, #16]
 800fcb8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fcbc:	3b01      	subs	r3, #1
 800fcbe:	9300      	str	r3, [sp, #0]
 800fcc0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fcc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fcc6:	eeb0 3a67 	vmov.f32	s6, s15
 800fcca:	bf08      	it	eq
 800fccc:	4613      	moveq	r3, r2
 800fcce:	eef0 2a47 	vmov.f32	s5, s14
 800fcd2:	e793      	b.n	800fbfc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800fcd4:	4575      	cmp	r5, lr
 800fcd6:	dab7      	bge.n	800fc48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800fcd8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fcda:	fb05 1202 	mla	r2, r5, r2, r1
 800fcde:	1412      	asrs	r2, r2, #16
 800fce0:	d4b2      	bmi.n	800fc48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800fce2:	9d01      	ldr	r5, [sp, #4]
 800fce4:	42aa      	cmp	r2, r5
 800fce6:	daaf      	bge.n	800fc48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800fce8:	f04f 0800 	mov.w	r8, #0
 800fcec:	eba3 0208 	sub.w	r2, r3, r8
 800fcf0:	2a00      	cmp	r2, #0
 800fcf2:	ddaf      	ble.n	800fc54 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800fcf4:	9e02      	ldr	r6, [sp, #8]
 800fcf6:	140a      	asrs	r2, r1, #16
 800fcf8:	1405      	asrs	r5, r0, #16
 800fcfa:	fb0e 6202 	mla	r2, lr, r2, r6
 800fcfe:	5d52      	ldrb	r2, [r2, r5]
 800fd00:	9d03      	ldr	r5, [sp, #12]
 800fd02:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800fd06:	0e2e      	lsrs	r6, r5, #24
 800fd08:	d044      	beq.n	800fd94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800fd0a:	9a05      	ldr	r2, [sp, #20]
 800fd0c:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800fd10:	4356      	muls	r6, r2
 800fd12:	1c72      	adds	r2, r6, #1
 800fd14:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800fd18:	1212      	asrs	r2, r2, #8
 800fd1a:	fa1f f982 	uxth.w	r9, r2
 800fd1e:	ea4f 272c 	mov.w	r7, ip, asr #8
 800fd22:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800fd26:	43d2      	mvns	r2, r2
 800fd28:	b2d2      	uxtb	r2, r2
 800fd2a:	fb16 f609 	smulbb	r6, r6, r9
 800fd2e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fd32:	fb07 6702 	mla	r7, r7, r2, r6
 800fd36:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800fd3a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800fd3e:	b2ed      	uxtb	r5, r5
 800fd40:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fd44:	fa5f fc8c 	uxtb.w	ip, ip
 800fd48:	fb15 f509 	smulbb	r5, r5, r9
 800fd4c:	fb0c 5502 	mla	r5, ip, r2, r5
 800fd50:	b2bf      	uxth	r7, r7
 800fd52:	fb1a fa09 	smulbb	sl, sl, r9
 800fd56:	b2ad      	uxth	r5, r5
 800fd58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fd5c:	fb06 a602 	mla	r6, r6, r2, sl
 800fd60:	1c7a      	adds	r2, r7, #1
 800fd62:	f105 0a01 	add.w	sl, r5, #1
 800fd66:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800fd6a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fd6e:	b2b6      	uxth	r6, r6
 800fd70:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fd74:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fd78:	ea47 070a 	orr.w	r7, r7, sl
 800fd7c:	f106 0a01 	add.w	sl, r6, #1
 800fd80:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fd84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fd88:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fd8c:	ea47 070a 	orr.w	r7, r7, sl
 800fd90:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800fd94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fd96:	4410      	add	r0, r2
 800fd98:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fd9a:	f108 0801 	add.w	r8, r8, #1
 800fd9e:	4411      	add	r1, r2
 800fda0:	e7a4      	b.n	800fcec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800fda2:	1405      	asrs	r5, r0, #16
 800fda4:	d454      	bmi.n	800fe50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800fda6:	4575      	cmp	r5, lr
 800fda8:	da52      	bge.n	800fe50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800fdaa:	140a      	asrs	r2, r1, #16
 800fdac:	d450      	bmi.n	800fe50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800fdae:	9e01      	ldr	r6, [sp, #4]
 800fdb0:	42b2      	cmp	r2, r6
 800fdb2:	da4d      	bge.n	800fe50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800fdb4:	9e02      	ldr	r6, [sp, #8]
 800fdb6:	fb0e 6202 	mla	r2, lr, r2, r6
 800fdba:	5d52      	ldrb	r2, [r2, r5]
 800fdbc:	9d03      	ldr	r5, [sp, #12]
 800fdbe:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800fdc2:	0e2e      	lsrs	r6, r5, #24
 800fdc4:	d044      	beq.n	800fe50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800fdc6:	9a05      	ldr	r2, [sp, #20]
 800fdc8:	f8b8 c000 	ldrh.w	ip, [r8]
 800fdcc:	4356      	muls	r6, r2
 800fdce:	1c72      	adds	r2, r6, #1
 800fdd0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800fdd4:	1212      	asrs	r2, r2, #8
 800fdd6:	fa1f fa82 	uxth.w	sl, r2
 800fdda:	ea4f 272c 	mov.w	r7, ip, asr #8
 800fdde:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800fde2:	43d2      	mvns	r2, r2
 800fde4:	b2d2      	uxtb	r2, r2
 800fde6:	fb16 f60a 	smulbb	r6, r6, sl
 800fdea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fdee:	fb07 6702 	mla	r7, r7, r2, r6
 800fdf2:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 800fdf6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800fdfa:	b2ed      	uxtb	r5, r5
 800fdfc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fe00:	fa5f fc8c 	uxtb.w	ip, ip
 800fe04:	fb15 f50a 	smulbb	r5, r5, sl
 800fe08:	fb0c 5502 	mla	r5, ip, r2, r5
 800fe0c:	b2bf      	uxth	r7, r7
 800fe0e:	fb1b fb0a 	smulbb	fp, fp, sl
 800fe12:	b2ad      	uxth	r5, r5
 800fe14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fe18:	fb06 b602 	mla	r6, r6, r2, fp
 800fe1c:	1c7a      	adds	r2, r7, #1
 800fe1e:	f105 0b01 	add.w	fp, r5, #1
 800fe22:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800fe26:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800fe2a:	b2b6      	uxth	r6, r6
 800fe2c:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 800fe30:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fe34:	ea47 070b 	orr.w	r7, r7, fp
 800fe38:	f106 0b01 	add.w	fp, r6, #1
 800fe3c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800fe40:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800fe44:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800fe48:	ea47 070b 	orr.w	r7, r7, fp
 800fe4c:	f8a8 7000 	strh.w	r7, [r8]
 800fe50:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fe52:	4410      	add	r0, r2
 800fe54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fe56:	f108 0802 	add.w	r8, r8, #2
 800fe5a:	4411      	add	r1, r2
 800fe5c:	f109 39ff 	add.w	r9, r9, #4294967295
 800fe60:	e6f4      	b.n	800fc4c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800fe62:	b007      	add	sp, #28
 800fe64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fe68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fe68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe6c:	b087      	sub	sp, #28
 800fe6e:	468b      	mov	fp, r1
 800fe70:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800fe72:	9205      	str	r2, [sp, #20]
 800fe74:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fe78:	9201      	str	r2, [sp, #4]
 800fe7a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fe7e:	6869      	ldr	r1, [r5, #4]
 800fe80:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fe82:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800fe86:	fb01 2404 	mla	r4, r1, r4, r2
 800fe8a:	682a      	ldr	r2, [r5, #0]
 800fe8c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fe90:	6802      	ldr	r2, [r0, #0]
 800fe92:	9203      	str	r2, [sp, #12]
 800fe94:	6842      	ldr	r2, [r0, #4]
 800fe96:	3204      	adds	r2, #4
 800fe98:	9204      	str	r2, [sp, #16]
 800fe9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fe9e:	f1bb 0f00 	cmp.w	fp, #0
 800fea2:	dc03      	bgt.n	800feac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800fea4:	9a05      	ldr	r2, [sp, #20]
 800fea6:	2a00      	cmp	r2, #0
 800fea8:	f340 814a 	ble.w	8010140 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800feac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800feae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800feb2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800feb4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800feb8:	2b00      	cmp	r3, #0
 800feba:	dd0f      	ble.n	800fedc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800febc:	1408      	asrs	r0, r1, #16
 800febe:	d406      	bmi.n	800fece <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fec0:	4540      	cmp	r0, r8
 800fec2:	da04      	bge.n	800fece <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fec4:	1410      	asrs	r0, r2, #16
 800fec6:	d402      	bmi.n	800fece <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fec8:	9d01      	ldr	r5, [sp, #4]
 800feca:	42a8      	cmp	r0, r5
 800fecc:	db07      	blt.n	800fede <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800fece:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fed0:	4401      	add	r1, r0
 800fed2:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fed4:	3b01      	subs	r3, #1
 800fed6:	4402      	add	r2, r0
 800fed8:	3402      	adds	r4, #2
 800feda:	e7ed      	b.n	800feb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800fedc:	d018      	beq.n	800ff10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 800fede:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fee0:	1e58      	subs	r0, r3, #1
 800fee2:	fb05 1500 	mla	r5, r5, r0, r1
 800fee6:	142d      	asrs	r5, r5, #16
 800fee8:	d40a      	bmi.n	800ff00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800feea:	4545      	cmp	r5, r8
 800feec:	da08      	bge.n	800ff00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800feee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fef0:	fb05 2000 	mla	r0, r5, r0, r2
 800fef4:	1400      	asrs	r0, r0, #16
 800fef6:	d403      	bmi.n	800ff00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fef8:	9d01      	ldr	r5, [sp, #4]
 800fefa:	42a8      	cmp	r0, r5
 800fefc:	f2c0 80b7 	blt.w	801006e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 800ff00:	2600      	movs	r6, #0
 800ff02:	1998      	adds	r0, r3, r6
 800ff04:	2800      	cmp	r0, #0
 800ff06:	dc3e      	bgt.n	800ff86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 800ff08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ff0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ff10:	f1bb 0f00 	cmp.w	fp, #0
 800ff14:	f340 8114 	ble.w	8010140 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800ff18:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ff1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ff20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ff24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ff26:	f1bb 0b01 	subs.w	fp, fp, #1
 800ff2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ff2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ff32:	eeb0 6a62 	vmov.f32	s12, s5
 800ff36:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ff3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ff3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ff42:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800ff46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ff4a:	eeb0 6a43 	vmov.f32	s12, s6
 800ff4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ff52:	ee12 2a90 	vmov	r2, s5
 800ff56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ff5a:	fb92 f3f3 	sdiv	r3, r2, r3
 800ff5e:	ee13 2a10 	vmov	r2, s6
 800ff62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ff66:	9313      	str	r3, [sp, #76]	; 0x4c
 800ff68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ff6a:	fb92 f3f3 	sdiv	r3, r2, r3
 800ff6e:	9a05      	ldr	r2, [sp, #20]
 800ff70:	9314      	str	r3, [sp, #80]	; 0x50
 800ff72:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800ff76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ff78:	eeb0 3a67 	vmov.f32	s6, s15
 800ff7c:	bf08      	it	eq
 800ff7e:	4613      	moveq	r3, r2
 800ff80:	eef0 2a47 	vmov.f32	s5, s14
 800ff84:	e78b      	b.n	800fe9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800ff86:	140d      	asrs	r5, r1, #16
 800ff88:	d459      	bmi.n	801003e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ff8a:	4545      	cmp	r5, r8
 800ff8c:	da57      	bge.n	801003e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ff8e:	1410      	asrs	r0, r2, #16
 800ff90:	d455      	bmi.n	801003e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ff92:	9f01      	ldr	r7, [sp, #4]
 800ff94:	42b8      	cmp	r0, r7
 800ff96:	da52      	bge.n	801003e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ff98:	9f03      	ldr	r7, [sp, #12]
 800ff9a:	fb08 7000 	mla	r0, r8, r0, r7
 800ff9e:	5d40      	ldrb	r0, [r0, r5]
 800ffa0:	9d04      	ldr	r5, [sp, #16]
 800ffa2:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800ffa6:	0e07      	lsrs	r7, r0, #24
 800ffa8:	2fff      	cmp	r7, #255	; 0xff
 800ffaa:	d04e      	beq.n	801004a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800ffac:	b2fd      	uxtb	r5, r7
 800ffae:	2f00      	cmp	r7, #0
 800ffb0:	d045      	beq.n	801003e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ffb2:	f06f 0701 	mvn.w	r7, #1
 800ffb6:	4377      	muls	r7, r6
 800ffb8:	fa1f f985 	uxth.w	r9, r5
 800ffbc:	f834 e007 	ldrh.w	lr, [r4, r7]
 800ffc0:	9702      	str	r7, [sp, #8]
 800ffc2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800ffc6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800ffca:	43ed      	mvns	r5, r5
 800ffcc:	b2ed      	uxtb	r5, r5
 800ffce:	fb17 f709 	smulbb	r7, r7, r9
 800ffd2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ffd6:	fb0c 7c05 	mla	ip, ip, r5, r7
 800ffda:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800ffde:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800ffe2:	b2c0      	uxtb	r0, r0
 800ffe4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ffe8:	fa5f fe8e 	uxtb.w	lr, lr
 800ffec:	fb10 f009 	smulbb	r0, r0, r9
 800fff0:	fb0e 0005 	mla	r0, lr, r5, r0
 800fff4:	b280      	uxth	r0, r0
 800fff6:	fa1f fc8c 	uxth.w	ip, ip
 800fffa:	fb1a fa09 	smulbb	sl, sl, r9
 800fffe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010002:	fb07 a705 	mla	r7, r7, r5, sl
 8010006:	f100 0a01 	add.w	sl, r0, #1
 801000a:	f10c 0501 	add.w	r5, ip, #1
 801000e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010012:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010016:	b2bf      	uxth	r7, r7
 8010018:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801001c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010020:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010024:	f107 0a01 	add.w	sl, r7, #1
 8010028:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801002c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010030:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010034:	9802      	ldr	r0, [sp, #8]
 8010036:	ea4c 0c0a 	orr.w	ip, ip, sl
 801003a:	f824 c000 	strh.w	ip, [r4, r0]
 801003e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010040:	4401      	add	r1, r0
 8010042:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010044:	3e01      	subs	r6, #1
 8010046:	4402      	add	r2, r0
 8010048:	e75b      	b.n	800ff02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801004a:	f06f 0501 	mvn.w	r5, #1
 801004e:	fb05 f706 	mul.w	r7, r5, r6
 8010052:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010056:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801005a:	0945      	lsrs	r5, r0, #5
 801005c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010060:	ea4c 0505 	orr.w	r5, ip, r5
 8010064:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010068:	4305      	orrs	r5, r0
 801006a:	53e5      	strh	r5, [r4, r7]
 801006c:	e7e7      	b.n	801003e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801006e:	f04f 0e00 	mov.w	lr, #0
 8010072:	eba3 000e 	sub.w	r0, r3, lr
 8010076:	2800      	cmp	r0, #0
 8010078:	f77f af46 	ble.w	800ff08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 801007c:	9e03      	ldr	r6, [sp, #12]
 801007e:	1410      	asrs	r0, r2, #16
 8010080:	140d      	asrs	r5, r1, #16
 8010082:	fb08 6000 	mla	r0, r8, r0, r6
 8010086:	5d40      	ldrb	r0, [r0, r5]
 8010088:	9d04      	ldr	r5, [sp, #16]
 801008a:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801008e:	0e06      	lsrs	r6, r0, #24
 8010090:	2eff      	cmp	r6, #255	; 0xff
 8010092:	d048      	beq.n	8010126 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8010094:	b2f5      	uxtb	r5, r6
 8010096:	2e00      	cmp	r6, #0
 8010098:	d03e      	beq.n	8010118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801009a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801009e:	fa1f f985 	uxth.w	r9, r5
 80100a2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80100a6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80100aa:	43ed      	mvns	r5, r5
 80100ac:	b2ed      	uxtb	r5, r5
 80100ae:	fb16 f609 	smulbb	r6, r6, r9
 80100b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80100b6:	fb07 6705 	mla	r7, r7, r5, r6
 80100ba:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80100be:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80100c2:	b2c0      	uxtb	r0, r0
 80100c4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80100c8:	fa5f fc8c 	uxtb.w	ip, ip
 80100cc:	fb10 f009 	smulbb	r0, r0, r9
 80100d0:	fb0c 0005 	mla	r0, ip, r5, r0
 80100d4:	b2bf      	uxth	r7, r7
 80100d6:	fb1a fa09 	smulbb	sl, sl, r9
 80100da:	b280      	uxth	r0, r0
 80100dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80100e0:	fb06 a605 	mla	r6, r6, r5, sl
 80100e4:	1c7d      	adds	r5, r7, #1
 80100e6:	f100 0a01 	add.w	sl, r0, #1
 80100ea:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80100ee:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80100f2:	b2b6      	uxth	r6, r6
 80100f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80100f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80100fc:	ea47 070a 	orr.w	r7, r7, sl
 8010100:	f106 0a01 	add.w	sl, r6, #1
 8010104:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010108:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801010c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010110:	ea47 070a 	orr.w	r7, r7, sl
 8010114:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010118:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801011a:	4401      	add	r1, r0
 801011c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801011e:	f10e 0e01 	add.w	lr, lr, #1
 8010122:	4402      	add	r2, r0
 8010124:	e7a5      	b.n	8010072 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 8010126:	4d08      	ldr	r5, [pc, #32]	; (8010148 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 8010128:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 801012c:	0945      	lsrs	r5, r0, #5
 801012e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010132:	4335      	orrs	r5, r6
 8010134:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010138:	4305      	orrs	r5, r0
 801013a:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 801013e:	e7eb      	b.n	8010118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010140:	b007      	add	sp, #28
 8010142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010146:	bf00      	nop
 8010148:	fffff800 	.word	0xfffff800

0801014c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801014c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010150:	b087      	sub	sp, #28
 8010152:	468b      	mov	fp, r1
 8010154:	9204      	str	r2, [sp, #16]
 8010156:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 801015a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801015c:	9201      	str	r2, [sp, #4]
 801015e:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010162:	9205      	str	r2, [sp, #20]
 8010164:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010168:	6869      	ldr	r1, [r5, #4]
 801016a:	981a      	ldr	r0, [sp, #104]	; 0x68
 801016c:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010170:	fb01 2404 	mla	r4, r1, r4, r2
 8010174:	682a      	ldr	r2, [r5, #0]
 8010176:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801017a:	6802      	ldr	r2, [r0, #0]
 801017c:	9202      	str	r2, [sp, #8]
 801017e:	6842      	ldr	r2, [r0, #4]
 8010180:	9203      	str	r2, [sp, #12]
 8010182:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010186:	f1bb 0f00 	cmp.w	fp, #0
 801018a:	dc03      	bgt.n	8010194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 801018c:	9a04      	ldr	r2, [sp, #16]
 801018e:	2a00      	cmp	r2, #0
 8010190:	f340 8136 	ble.w	8010400 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8010194:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010196:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801019a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801019c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80101a0:	2b00      	cmp	r3, #0
 80101a2:	dd0f      	ble.n	80101c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80101a4:	1408      	asrs	r0, r1, #16
 80101a6:	d406      	bmi.n	80101b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80101a8:	4540      	cmp	r0, r8
 80101aa:	da04      	bge.n	80101b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80101ac:	1410      	asrs	r0, r2, #16
 80101ae:	d402      	bmi.n	80101b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80101b0:	9d01      	ldr	r5, [sp, #4]
 80101b2:	42a8      	cmp	r0, r5
 80101b4:	db07      	blt.n	80101c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 80101b6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80101b8:	4401      	add	r1, r0
 80101ba:	9814      	ldr	r0, [sp, #80]	; 0x50
 80101bc:	3b01      	subs	r3, #1
 80101be:	4402      	add	r2, r0
 80101c0:	3402      	adds	r4, #2
 80101c2:	e7ed      	b.n	80101a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 80101c4:	d00f      	beq.n	80101e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80101c6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80101c8:	1e58      	subs	r0, r3, #1
 80101ca:	fb05 1500 	mla	r5, r5, r0, r1
 80101ce:	142d      	asrs	r5, r5, #16
 80101d0:	d544      	bpl.n	801025c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80101d2:	9300      	str	r3, [sp, #0]
 80101d4:	46a2      	mov	sl, r4
 80101d6:	9800      	ldr	r0, [sp, #0]
 80101d8:	2800      	cmp	r0, #0
 80101da:	f300 80ab 	bgt.w	8010334 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 80101de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80101e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80101e6:	f1bb 0f00 	cmp.w	fp, #0
 80101ea:	f340 8109 	ble.w	8010400 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 80101ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80101f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80101f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80101fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80101fc:	f1bb 0b01 	subs.w	fp, fp, #1
 8010200:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010204:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010208:	eeb0 6a62 	vmov.f32	s12, s5
 801020c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010210:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010214:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010218:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801021c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010220:	eeb0 6a43 	vmov.f32	s12, s6
 8010224:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010228:	ee12 2a90 	vmov	r2, s5
 801022c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010230:	fb92 f3f3 	sdiv	r3, r2, r3
 8010234:	ee13 2a10 	vmov	r2, s6
 8010238:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801023c:	9313      	str	r3, [sp, #76]	; 0x4c
 801023e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010240:	fb92 f3f3 	sdiv	r3, r2, r3
 8010244:	9a04      	ldr	r2, [sp, #16]
 8010246:	9314      	str	r3, [sp, #80]	; 0x50
 8010248:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801024c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801024e:	eeb0 3a67 	vmov.f32	s6, s15
 8010252:	bf08      	it	eq
 8010254:	4613      	moveq	r3, r2
 8010256:	eef0 2a47 	vmov.f32	s5, s14
 801025a:	e794      	b.n	8010186 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 801025c:	4545      	cmp	r5, r8
 801025e:	dab8      	bge.n	80101d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010260:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010262:	fb05 2000 	mla	r0, r5, r0, r2
 8010266:	1400      	asrs	r0, r0, #16
 8010268:	d4b3      	bmi.n	80101d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 801026a:	9d01      	ldr	r5, [sp, #4]
 801026c:	42a8      	cmp	r0, r5
 801026e:	dab0      	bge.n	80101d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010270:	f04f 0900 	mov.w	r9, #0
 8010274:	eba3 0009 	sub.w	r0, r3, r9
 8010278:	2800      	cmp	r0, #0
 801027a:	ddb0      	ble.n	80101de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801027c:	140d      	asrs	r5, r1, #16
 801027e:	1410      	asrs	r0, r2, #16
 8010280:	fb08 5000 	mla	r0, r8, r0, r5
 8010284:	9d03      	ldr	r5, [sp, #12]
 8010286:	5c2e      	ldrb	r6, [r5, r0]
 8010288:	2e00      	cmp	r6, #0
 801028a:	d04c      	beq.n	8010326 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 801028c:	9d02      	ldr	r5, [sp, #8]
 801028e:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8010292:	9805      	ldr	r0, [sp, #20]
 8010294:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 8010298:	4346      	muls	r6, r0
 801029a:	1c70      	adds	r0, r6, #1
 801029c:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 80102a0:	1200      	asrs	r0, r0, #8
 80102a2:	b287      	uxth	r7, r0
 80102a4:	122e      	asrs	r6, r5, #8
 80102a6:	43c0      	mvns	r0, r0
 80102a8:	b2c0      	uxtb	r0, r0
 80102aa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80102ae:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80102b2:	fb16 f600 	smulbb	r6, r6, r0
 80102b6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80102ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80102be:	00ed      	lsls	r5, r5, #3
 80102c0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80102c4:	b2ed      	uxtb	r5, r5
 80102c6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80102ca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80102ce:	fb15 f500 	smulbb	r5, r5, r0
 80102d2:	fa5f fe8e 	uxtb.w	lr, lr
 80102d6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80102da:	fb0e 5507 	mla	r5, lr, r7, r5
 80102de:	fb1a fa00 	smulbb	sl, sl, r0
 80102e2:	fa1f fc8c 	uxth.w	ip, ip
 80102e6:	b2ad      	uxth	r5, r5
 80102e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80102ec:	fb06 a607 	mla	r6, r6, r7, sl
 80102f0:	f10c 0001 	add.w	r0, ip, #1
 80102f4:	f105 0a01 	add.w	sl, r5, #1
 80102f8:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 80102fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010300:	b2b6      	uxth	r6, r6
 8010302:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010306:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801030a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801030e:	f106 0a01 	add.w	sl, r6, #1
 8010312:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010316:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801031a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801031e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010322:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 8010326:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010328:	4401      	add	r1, r0
 801032a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801032c:	f109 0901 	add.w	r9, r9, #1
 8010330:	4402      	add	r2, r0
 8010332:	e79f      	b.n	8010274 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 8010334:	1408      	asrs	r0, r1, #16
 8010336:	d459      	bmi.n	80103ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010338:	4540      	cmp	r0, r8
 801033a:	da57      	bge.n	80103ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 801033c:	1415      	asrs	r5, r2, #16
 801033e:	d455      	bmi.n	80103ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010340:	9e01      	ldr	r6, [sp, #4]
 8010342:	42b5      	cmp	r5, r6
 8010344:	da52      	bge.n	80103ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010346:	fb08 0005 	mla	r0, r8, r5, r0
 801034a:	9d03      	ldr	r5, [sp, #12]
 801034c:	5c2e      	ldrb	r6, [r5, r0]
 801034e:	2e00      	cmp	r6, #0
 8010350:	d04c      	beq.n	80103ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010352:	9d02      	ldr	r5, [sp, #8]
 8010354:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8010358:	9805      	ldr	r0, [sp, #20]
 801035a:	f8ba 5000 	ldrh.w	r5, [sl]
 801035e:	4346      	muls	r6, r0
 8010360:	1c70      	adds	r0, r6, #1
 8010362:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8010366:	1200      	asrs	r0, r0, #8
 8010368:	b287      	uxth	r7, r0
 801036a:	122e      	asrs	r6, r5, #8
 801036c:	43c0      	mvns	r0, r0
 801036e:	b2c0      	uxtb	r0, r0
 8010370:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010374:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010378:	fb16 f600 	smulbb	r6, r6, r0
 801037c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8010380:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010384:	00ed      	lsls	r5, r5, #3
 8010386:	fb0c 6c07 	mla	ip, ip, r7, r6
 801038a:	b2ed      	uxtb	r5, r5
 801038c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010390:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010394:	fb15 f500 	smulbb	r5, r5, r0
 8010398:	fa5f fe8e 	uxtb.w	lr, lr
 801039c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80103a0:	fb0e 5507 	mla	r5, lr, r7, r5
 80103a4:	fb19 f900 	smulbb	r9, r9, r0
 80103a8:	fa1f fc8c 	uxth.w	ip, ip
 80103ac:	b2ad      	uxth	r5, r5
 80103ae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80103b2:	fb06 9607 	mla	r6, r6, r7, r9
 80103b6:	f10c 0001 	add.w	r0, ip, #1
 80103ba:	f105 0901 	add.w	r9, r5, #1
 80103be:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 80103c2:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 80103c6:	b2b6      	uxth	r6, r6
 80103c8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80103cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80103d0:	ea4c 0c09 	orr.w	ip, ip, r9
 80103d4:	f106 0901 	add.w	r9, r6, #1
 80103d8:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 80103dc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80103e0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80103e4:	ea4c 0c09 	orr.w	ip, ip, r9
 80103e8:	f8aa c000 	strh.w	ip, [sl]
 80103ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80103ee:	4401      	add	r1, r0
 80103f0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80103f2:	4402      	add	r2, r0
 80103f4:	9800      	ldr	r0, [sp, #0]
 80103f6:	3801      	subs	r0, #1
 80103f8:	f10a 0a02 	add.w	sl, sl, #2
 80103fc:	9000      	str	r0, [sp, #0]
 80103fe:	e6ea      	b.n	80101d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010400:	b007      	add	sp, #28
 8010402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010406 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010406:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801040a:	b087      	sub	sp, #28
 801040c:	468b      	mov	fp, r1
 801040e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010410:	9205      	str	r2, [sp, #20]
 8010412:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010416:	9202      	str	r2, [sp, #8]
 8010418:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801041c:	6869      	ldr	r1, [r5, #4]
 801041e:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8010420:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010424:	fb01 2000 	mla	r0, r1, r0, r2
 8010428:	682a      	ldr	r2, [r5, #0]
 801042a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801042e:	6822      	ldr	r2, [r4, #0]
 8010430:	9201      	str	r2, [sp, #4]
 8010432:	6862      	ldr	r2, [r4, #4]
 8010434:	9204      	str	r2, [sp, #16]
 8010436:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801043a:	f1bb 0f00 	cmp.w	fp, #0
 801043e:	dc03      	bgt.n	8010448 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8010440:	9a05      	ldr	r2, [sp, #20]
 8010442:	2a00      	cmp	r2, #0
 8010444:	f340 813d 	ble.w	80106c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010448:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801044a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801044e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010450:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010454:	2b00      	cmp	r3, #0
 8010456:	dd0f      	ble.n	8010478 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8010458:	140c      	asrs	r4, r1, #16
 801045a:	d406      	bmi.n	801046a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 801045c:	454c      	cmp	r4, r9
 801045e:	da04      	bge.n	801046a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010460:	1414      	asrs	r4, r2, #16
 8010462:	d402      	bmi.n	801046a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010464:	9d02      	ldr	r5, [sp, #8]
 8010466:	42ac      	cmp	r4, r5
 8010468:	db07      	blt.n	801047a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801046a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801046c:	4421      	add	r1, r4
 801046e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010470:	3b01      	subs	r3, #1
 8010472:	4422      	add	r2, r4
 8010474:	3002      	adds	r0, #2
 8010476:	e7ed      	b.n	8010454 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 8010478:	d018      	beq.n	80104ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 801047a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801047c:	1e5c      	subs	r4, r3, #1
 801047e:	fb05 1504 	mla	r5, r5, r4, r1
 8010482:	142d      	asrs	r5, r5, #16
 8010484:	d40a      	bmi.n	801049c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010486:	454d      	cmp	r5, r9
 8010488:	da08      	bge.n	801049c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801048a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801048c:	fb05 2404 	mla	r4, r5, r4, r2
 8010490:	1424      	asrs	r4, r4, #16
 8010492:	d403      	bmi.n	801049c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010494:	9d02      	ldr	r5, [sp, #8]
 8010496:	42ac      	cmp	r4, r5
 8010498:	f2c0 80ae 	blt.w	80105f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 801049c:	2600      	movs	r6, #0
 801049e:	199c      	adds	r4, r3, r6
 80104a0:	2c00      	cmp	r4, #0
 80104a2:	dc3e      	bgt.n	8010522 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 80104a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80104a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80104ac:	f1bb 0f00 	cmp.w	fp, #0
 80104b0:	f340 8107 	ble.w	80106c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80104b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80104b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80104bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80104c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104c2:	f1bb 0b01 	subs.w	fp, fp, #1
 80104c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80104ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80104ce:	eeb0 6a62 	vmov.f32	s12, s5
 80104d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80104d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80104da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80104de:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80104e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80104e6:	eeb0 6a43 	vmov.f32	s12, s6
 80104ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80104ee:	ee12 2a90 	vmov	r2, s5
 80104f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80104f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80104fa:	ee13 2a10 	vmov	r2, s6
 80104fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010502:	9313      	str	r3, [sp, #76]	; 0x4c
 8010504:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010506:	fb92 f3f3 	sdiv	r3, r2, r3
 801050a:	9a05      	ldr	r2, [sp, #20]
 801050c:	9314      	str	r3, [sp, #80]	; 0x50
 801050e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010512:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010514:	eeb0 3a67 	vmov.f32	s6, s15
 8010518:	bf08      	it	eq
 801051a:	4613      	moveq	r3, r2
 801051c:	eef0 2a47 	vmov.f32	s5, s14
 8010520:	e78b      	b.n	801043a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 8010522:	140c      	asrs	r4, r1, #16
 8010524:	d45a      	bmi.n	80105dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010526:	454c      	cmp	r4, r9
 8010528:	da58      	bge.n	80105dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801052a:	1415      	asrs	r5, r2, #16
 801052c:	d456      	bmi.n	80105dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801052e:	9f02      	ldr	r7, [sp, #8]
 8010530:	42bd      	cmp	r5, r7
 8010532:	da53      	bge.n	80105dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010534:	fb09 4505 	mla	r5, r9, r5, r4
 8010538:	9c04      	ldr	r4, [sp, #16]
 801053a:	5d64      	ldrb	r4, [r4, r5]
 801053c:	2cff      	cmp	r4, #255	; 0xff
 801053e:	d053      	beq.n	80105e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010540:	2c00      	cmp	r4, #0
 8010542:	d04b      	beq.n	80105dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010544:	9f01      	ldr	r7, [sp, #4]
 8010546:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 801054a:	f06f 0501 	mvn.w	r5, #1
 801054e:	4375      	muls	r5, r6
 8010550:	9503      	str	r5, [sp, #12]
 8010552:	5b45      	ldrh	r5, [r0, r5]
 8010554:	fa1f fc84 	uxth.w	ip, r4
 8010558:	122f      	asrs	r7, r5, #8
 801055a:	43e4      	mvns	r4, r4
 801055c:	b2e4      	uxtb	r4, r4
 801055e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010562:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010566:	fb17 f704 	smulbb	r7, r7, r4
 801056a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801056e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010572:	00ed      	lsls	r5, r5, #3
 8010574:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8010578:	b2ed      	uxtb	r5, r5
 801057a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801057e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010582:	fb15 f504 	smulbb	r5, r5, r4
 8010586:	fa5f f888 	uxtb.w	r8, r8
 801058a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801058e:	fb08 550c 	mla	r5, r8, ip, r5
 8010592:	fb1a fa04 	smulbb	sl, sl, r4
 8010596:	fa1f fe8e 	uxth.w	lr, lr
 801059a:	b2ad      	uxth	r5, r5
 801059c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80105a0:	fb07 a70c 	mla	r7, r7, ip, sl
 80105a4:	f10e 0401 	add.w	r4, lr, #1
 80105a8:	f105 0a01 	add.w	sl, r5, #1
 80105ac:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80105b0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80105b4:	b2bf      	uxth	r7, r7
 80105b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80105ba:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80105be:	ea4e 0e0a 	orr.w	lr, lr, sl
 80105c2:	f107 0a01 	add.w	sl, r7, #1
 80105c6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80105ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80105ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80105d2:	9c03      	ldr	r4, [sp, #12]
 80105d4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80105d8:	f820 e004 	strh.w	lr, [r0, r4]
 80105dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80105de:	4421      	add	r1, r4
 80105e0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80105e2:	3e01      	subs	r6, #1
 80105e4:	4422      	add	r2, r4
 80105e6:	e75a      	b.n	801049e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80105e8:	9c01      	ldr	r4, [sp, #4]
 80105ea:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80105ee:	f06f 0401 	mvn.w	r4, #1
 80105f2:	4374      	muls	r4, r6
 80105f4:	5305      	strh	r5, [r0, r4]
 80105f6:	e7f1      	b.n	80105dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80105f8:	f04f 0800 	mov.w	r8, #0
 80105fc:	eba3 0408 	sub.w	r4, r3, r8
 8010600:	2c00      	cmp	r4, #0
 8010602:	f77f af4f 	ble.w	80104a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010606:	140c      	asrs	r4, r1, #16
 8010608:	1415      	asrs	r5, r2, #16
 801060a:	fb09 4505 	mla	r5, r9, r5, r4
 801060e:	9c04      	ldr	r4, [sp, #16]
 8010610:	5d64      	ldrb	r4, [r4, r5]
 8010612:	2cff      	cmp	r4, #255	; 0xff
 8010614:	d04f      	beq.n	80106b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010616:	2c00      	cmp	r4, #0
 8010618:	d046      	beq.n	80106a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 801061a:	9e01      	ldr	r6, [sp, #4]
 801061c:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8010620:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 8010624:	b2a7      	uxth	r7, r4
 8010626:	122e      	asrs	r6, r5, #8
 8010628:	43e4      	mvns	r4, r4
 801062a:	b2e4      	uxtb	r4, r4
 801062c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010630:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010634:	fb16 f604 	smulbb	r6, r6, r4
 8010638:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801063c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010640:	00ed      	lsls	r5, r5, #3
 8010642:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010646:	b2ed      	uxtb	r5, r5
 8010648:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801064c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010650:	fb15 f504 	smulbb	r5, r5, r4
 8010654:	fa5f fe8e 	uxtb.w	lr, lr
 8010658:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801065c:	fb0e 5507 	mla	r5, lr, r7, r5
 8010660:	fb1a fa04 	smulbb	sl, sl, r4
 8010664:	fa1f fc8c 	uxth.w	ip, ip
 8010668:	b2ad      	uxth	r5, r5
 801066a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801066e:	fb06 a607 	mla	r6, r6, r7, sl
 8010672:	f10c 0401 	add.w	r4, ip, #1
 8010676:	f105 0a01 	add.w	sl, r5, #1
 801067a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801067e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010682:	b2b6      	uxth	r6, r6
 8010684:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010688:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801068c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010690:	f106 0a01 	add.w	sl, r6, #1
 8010694:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010698:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801069c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80106a0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80106a4:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 80106a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80106aa:	4421      	add	r1, r4
 80106ac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80106ae:	f108 0801 	add.w	r8, r8, #1
 80106b2:	4422      	add	r2, r4
 80106b4:	e7a2      	b.n	80105fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80106b6:	9c01      	ldr	r4, [sp, #4]
 80106b8:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80106bc:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 80106c0:	e7f2      	b.n	80106a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80106c2:	b007      	add	sp, #28
 80106c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080106c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80106c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106cc:	b085      	sub	sp, #20
 80106ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80106d0:	9203      	str	r2, [sp, #12]
 80106d2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80106d6:	9201      	str	r2, [sp, #4]
 80106d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80106dc:	9100      	str	r1, [sp, #0]
 80106de:	6841      	ldr	r1, [r0, #4]
 80106e0:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 80106e4:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 80106e8:	fb01 2404 	mla	r4, r1, r4, r2
 80106ec:	6802      	ldr	r2, [r0, #0]
 80106ee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80106f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80106f4:	fa1f fe85 	uxth.w	lr, r5
 80106f8:	6812      	ldr	r2, [r2, #0]
 80106fa:	9202      	str	r2, [sp, #8]
 80106fc:	43ed      	mvns	r5, r5
 80106fe:	b2ed      	uxtb	r5, r5
 8010700:	9a00      	ldr	r2, [sp, #0]
 8010702:	2a00      	cmp	r2, #0
 8010704:	dc03      	bgt.n	801070e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8010706:	9a03      	ldr	r2, [sp, #12]
 8010708:	2a00      	cmp	r2, #0
 801070a:	f340 8117 	ble.w	801093c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801070e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010710:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010714:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010716:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801071a:	2b00      	cmp	r3, #0
 801071c:	dd0f      	ble.n	801073e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801071e:	1408      	asrs	r0, r1, #16
 8010720:	d406      	bmi.n	8010730 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010722:	4540      	cmp	r0, r8
 8010724:	da04      	bge.n	8010730 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010726:	1410      	asrs	r0, r2, #16
 8010728:	d402      	bmi.n	8010730 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801072a:	9e01      	ldr	r6, [sp, #4]
 801072c:	42b0      	cmp	r0, r6
 801072e:	db07      	blt.n	8010740 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010730:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010732:	4401      	add	r1, r0
 8010734:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010736:	3b01      	subs	r3, #1
 8010738:	4402      	add	r2, r0
 801073a:	3402      	adds	r4, #2
 801073c:	e7ed      	b.n	801071a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 801073e:	d069      	beq.n	8010814 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 8010740:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010742:	1e58      	subs	r0, r3, #1
 8010744:	fb06 1600 	mla	r6, r6, r0, r1
 8010748:	1436      	asrs	r6, r6, #16
 801074a:	d459      	bmi.n	8010800 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 801074c:	4546      	cmp	r6, r8
 801074e:	da57      	bge.n	8010800 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8010750:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8010752:	fb06 2000 	mla	r0, r6, r0, r2
 8010756:	1400      	asrs	r0, r0, #16
 8010758:	d452      	bmi.n	8010800 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 801075a:	9e01      	ldr	r6, [sp, #4]
 801075c:	42b0      	cmp	r0, r6
 801075e:	da4f      	bge.n	8010800 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8010760:	469a      	mov	sl, r3
 8010762:	46a3      	mov	fp, r4
 8010764:	f1ba 0f00 	cmp.w	sl, #0
 8010768:	dd50      	ble.n	801080c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 801076a:	140e      	asrs	r6, r1, #16
 801076c:	1410      	asrs	r0, r2, #16
 801076e:	fb08 6000 	mla	r0, r8, r0, r6
 8010772:	9e02      	ldr	r6, [sp, #8]
 8010774:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010778:	f8bb 6000 	ldrh.w	r6, [fp]
 801077c:	1237      	asrs	r7, r6, #8
 801077e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010782:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010786:	fb17 f705 	smulbb	r7, r7, r5
 801078a:	ea4f 09e6 	mov.w	r9, r6, asr #3
 801078e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010792:	00f6      	lsls	r6, r6, #3
 8010794:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010798:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801079c:	10c7      	asrs	r7, r0, #3
 801079e:	b2f6      	uxtb	r6, r6
 80107a0:	00c0      	lsls	r0, r0, #3
 80107a2:	fb19 f905 	smulbb	r9, r9, r5
 80107a6:	fb16 f605 	smulbb	r6, r6, r5
 80107aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80107ae:	b2c0      	uxtb	r0, r0
 80107b0:	fa1f fc8c 	uxth.w	ip, ip
 80107b4:	fb07 970e 	mla	r7, r7, lr, r9
 80107b8:	fb00 600e 	mla	r0, r0, lr, r6
 80107bc:	b280      	uxth	r0, r0
 80107be:	b2bf      	uxth	r7, r7
 80107c0:	f10c 0601 	add.w	r6, ip, #1
 80107c4:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80107c8:	f107 0901 	add.w	r9, r7, #1
 80107cc:	1c46      	adds	r6, r0, #1
 80107ce:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80107d2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80107d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80107d8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80107dc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80107e0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80107e4:	ea4c 0c06 	orr.w	ip, ip, r6
 80107e8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80107ec:	4401      	add	r1, r0
 80107ee:	9812      	ldr	r0, [sp, #72]	; 0x48
 80107f0:	ea4c 0c09 	orr.w	ip, ip, r9
 80107f4:	f82b cb02 	strh.w	ip, [fp], #2
 80107f8:	4402      	add	r2, r0
 80107fa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80107fe:	e7b1      	b.n	8010764 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010800:	f04f 0900 	mov.w	r9, #0
 8010804:	eb03 0009 	add.w	r0, r3, r9
 8010808:	2800      	cmp	r0, #0
 801080a:	dc41      	bgt.n	8010890 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 801080c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010810:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010814:	9b00      	ldr	r3, [sp, #0]
 8010816:	2b00      	cmp	r3, #0
 8010818:	f340 8090 	ble.w	801093c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801081c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010820:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010824:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010828:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801082a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801082e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010832:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010836:	eef0 6a62 	vmov.f32	s13, s5
 801083a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801083e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010842:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010846:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801084a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801084e:	eef0 6a43 	vmov.f32	s13, s6
 8010852:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010856:	ee12 2a90 	vmov	r2, s5
 801085a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801085e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010862:	ee13 2a10 	vmov	r2, s6
 8010866:	9311      	str	r3, [sp, #68]	; 0x44
 8010868:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801086a:	fb92 f3f3 	sdiv	r3, r2, r3
 801086e:	9312      	str	r3, [sp, #72]	; 0x48
 8010870:	9b00      	ldr	r3, [sp, #0]
 8010872:	9a03      	ldr	r2, [sp, #12]
 8010874:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010878:	3b01      	subs	r3, #1
 801087a:	9300      	str	r3, [sp, #0]
 801087c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8010880:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010882:	eeb0 3a67 	vmov.f32	s6, s15
 8010886:	bf08      	it	eq
 8010888:	4613      	moveq	r3, r2
 801088a:	eef0 2a47 	vmov.f32	s5, s14
 801088e:	e737      	b.n	8010700 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8010890:	140e      	asrs	r6, r1, #16
 8010892:	d44c      	bmi.n	801092e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010894:	4546      	cmp	r6, r8
 8010896:	da4a      	bge.n	801092e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010898:	1410      	asrs	r0, r2, #16
 801089a:	d448      	bmi.n	801092e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801089c:	9f01      	ldr	r7, [sp, #4]
 801089e:	42b8      	cmp	r0, r7
 80108a0:	da45      	bge.n	801092e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80108a2:	fb08 6000 	mla	r0, r8, r0, r6
 80108a6:	9e02      	ldr	r6, [sp, #8]
 80108a8:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80108ac:	f06f 0601 	mvn.w	r6, #1
 80108b0:	fb06 fb09 	mul.w	fp, r6, r9
 80108b4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80108b8:	f834 600b 	ldrh.w	r6, [r4, fp]
 80108bc:	1237      	asrs	r7, r6, #8
 80108be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80108c2:	fb17 f705 	smulbb	r7, r7, r5
 80108c6:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 80108ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80108ce:	00f6      	lsls	r6, r6, #3
 80108d0:	fb0c 7c0e 	mla	ip, ip, lr, r7
 80108d4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80108d8:	10c7      	asrs	r7, r0, #3
 80108da:	b2f6      	uxtb	r6, r6
 80108dc:	00c0      	lsls	r0, r0, #3
 80108de:	fb1a fa05 	smulbb	sl, sl, r5
 80108e2:	fb16 f605 	smulbb	r6, r6, r5
 80108e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80108ea:	b2c0      	uxtb	r0, r0
 80108ec:	fa1f fc8c 	uxth.w	ip, ip
 80108f0:	fb07 a70e 	mla	r7, r7, lr, sl
 80108f4:	fb00 600e 	mla	r0, r0, lr, r6
 80108f8:	b2bf      	uxth	r7, r7
 80108fa:	b280      	uxth	r0, r0
 80108fc:	f10c 0601 	add.w	r6, ip, #1
 8010900:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010904:	f107 0a01 	add.w	sl, r7, #1
 8010908:	1c46      	adds	r6, r0, #1
 801090a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801090e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010912:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010916:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801091a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801091e:	ea4c 0c06 	orr.w	ip, ip, r6
 8010922:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010926:	ea4c 0c0a 	orr.w	ip, ip, sl
 801092a:	f824 c00b 	strh.w	ip, [r4, fp]
 801092e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010930:	4401      	add	r1, r0
 8010932:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010934:	f109 39ff 	add.w	r9, r9, #4294967295
 8010938:	4402      	add	r2, r0
 801093a:	e763      	b.n	8010804 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 801093c:	b005      	add	sp, #20
 801093e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010942 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010942:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010946:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010948:	9201      	str	r2, [sp, #4]
 801094a:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 801094e:	6844      	ldr	r4, [r0, #4]
 8010950:	6800      	ldr	r0, [r0, #0]
 8010952:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 8010956:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 801095a:	fb04 2505 	mla	r5, r4, r5, r2
 801095e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010962:	9816      	ldr	r0, [sp, #88]	; 0x58
 8010964:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 8010968:	6802      	ldr	r2, [r0, #0]
 801096a:	9200      	str	r2, [sp, #0]
 801096c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010970:	2900      	cmp	r1, #0
 8010972:	dc03      	bgt.n	801097c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010974:	9a01      	ldr	r2, [sp, #4]
 8010976:	2a00      	cmp	r2, #0
 8010978:	f340 8095 	ble.w	8010aa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 801097c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801097e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010982:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010984:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010988:	2b00      	cmp	r3, #0
 801098a:	dd0e      	ble.n	80109aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801098c:	ea5f 4824 	movs.w	r8, r4, asr #16
 8010990:	d406      	bmi.n	80109a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010992:	45e0      	cmp	r8, ip
 8010994:	da04      	bge.n	80109a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010996:	ea5f 4820 	movs.w	r8, r0, asr #16
 801099a:	d401      	bmi.n	80109a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801099c:	45f0      	cmp	r8, lr
 801099e:	db05      	blt.n	80109ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80109a0:	443c      	add	r4, r7
 80109a2:	4430      	add	r0, r6
 80109a4:	3b01      	subs	r3, #1
 80109a6:	3502      	adds	r5, #2
 80109a8:	e7ee      	b.n	8010988 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 80109aa:	d010      	beq.n	80109ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 80109ac:	f103 38ff 	add.w	r8, r3, #4294967295
 80109b0:	fb07 4908 	mla	r9, r7, r8, r4
 80109b4:	ea5f 4929 	movs.w	r9, r9, asr #16
 80109b8:	d53d      	bpl.n	8010a36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80109ba:	4698      	mov	r8, r3
 80109bc:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 80109c0:	f1b8 0f00 	cmp.w	r8, #0
 80109c4:	dc55      	bgt.n	8010a72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 80109c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80109ca:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80109ce:	2900      	cmp	r1, #0
 80109d0:	dd69      	ble.n	8010aa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 80109d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80109d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80109da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80109de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80109e0:	3901      	subs	r1, #1
 80109e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80109e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80109ea:	eeb0 6a62 	vmov.f32	s12, s5
 80109ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80109f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80109f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80109fa:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 80109fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010a02:	eeb0 6a43 	vmov.f32	s12, s6
 8010a06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010a0a:	ee12 2a90 	vmov	r2, s5
 8010a0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010a12:	fb92 f7f3 	sdiv	r7, r2, r3
 8010a16:	ee13 2a10 	vmov	r2, s6
 8010a1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a1e:	fb92 f6f3 	sdiv	r6, r2, r3
 8010a22:	9a01      	ldr	r2, [sp, #4]
 8010a24:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8010a28:	bf08      	it	eq
 8010a2a:	4613      	moveq	r3, r2
 8010a2c:	eeb0 3a67 	vmov.f32	s6, s15
 8010a30:	eef0 2a47 	vmov.f32	s5, s14
 8010a34:	e79c      	b.n	8010970 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 8010a36:	45e1      	cmp	r9, ip
 8010a38:	dabf      	bge.n	80109ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010a3a:	fb06 0808 	mla	r8, r6, r8, r0
 8010a3e:	ea5f 4828 	movs.w	r8, r8, asr #16
 8010a42:	d4ba      	bmi.n	80109ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010a44:	45f0      	cmp	r8, lr
 8010a46:	dab8      	bge.n	80109ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010a48:	4698      	mov	r8, r3
 8010a4a:	46aa      	mov	sl, r5
 8010a4c:	f1b8 0f00 	cmp.w	r8, #0
 8010a50:	ddb9      	ble.n	80109c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8010a52:	ea4f 4920 	mov.w	r9, r0, asr #16
 8010a56:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8010a5a:	fb0c b909 	mla	r9, ip, r9, fp
 8010a5e:	9a00      	ldr	r2, [sp, #0]
 8010a60:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 8010a64:	f82a 9b02 	strh.w	r9, [sl], #2
 8010a68:	443c      	add	r4, r7
 8010a6a:	4430      	add	r0, r6
 8010a6c:	f108 38ff 	add.w	r8, r8, #4294967295
 8010a70:	e7ec      	b.n	8010a4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8010a72:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8010a76:	d411      	bmi.n	8010a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010a78:	45e2      	cmp	sl, ip
 8010a7a:	da0f      	bge.n	8010a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010a7c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010a80:	d40c      	bmi.n	8010a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010a82:	45f1      	cmp	r9, lr
 8010a84:	da0a      	bge.n	8010a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010a86:	fb0c a909 	mla	r9, ip, r9, sl
 8010a8a:	9a00      	ldr	r2, [sp, #0]
 8010a8c:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 8010a90:	f06f 0201 	mvn.w	r2, #1
 8010a94:	fb02 f908 	mul.w	r9, r2, r8
 8010a98:	f82b a009 	strh.w	sl, [fp, r9]
 8010a9c:	443c      	add	r4, r7
 8010a9e:	4430      	add	r0, r6
 8010aa0:	f108 38ff 	add.w	r8, r8, #4294967295
 8010aa4:	e78c      	b.n	80109c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010aa6:	b003      	add	sp, #12
 8010aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010aac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ab0:	b087      	sub	sp, #28
 8010ab2:	468b      	mov	fp, r1
 8010ab4:	9204      	str	r2, [sp, #16]
 8010ab6:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010aba:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010abc:	9201      	str	r2, [sp, #4]
 8010abe:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010ac2:	9205      	str	r2, [sp, #20]
 8010ac4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010ac8:	6841      	ldr	r1, [r0, #4]
 8010aca:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010ace:	fb01 2404 	mla	r4, r1, r4, r2
 8010ad2:	6802      	ldr	r2, [r0, #0]
 8010ad4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010ad8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010ada:	6812      	ldr	r2, [r2, #0]
 8010adc:	9203      	str	r2, [sp, #12]
 8010ade:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010ae2:	f1bb 0f00 	cmp.w	fp, #0
 8010ae6:	dc03      	bgt.n	8010af0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010ae8:	9a04      	ldr	r2, [sp, #16]
 8010aea:	2a00      	cmp	r2, #0
 8010aec:	f340 812c 	ble.w	8010d48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8010af0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010af2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010af6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010af8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010afc:	2b00      	cmp	r3, #0
 8010afe:	dd0f      	ble.n	8010b20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010b00:	1402      	asrs	r2, r0, #16
 8010b02:	d406      	bmi.n	8010b12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010b04:	4542      	cmp	r2, r8
 8010b06:	da04      	bge.n	8010b12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010b08:	140a      	asrs	r2, r1, #16
 8010b0a:	d402      	bmi.n	8010b12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010b0c:	9d01      	ldr	r5, [sp, #4]
 8010b0e:	42aa      	cmp	r2, r5
 8010b10:	db07      	blt.n	8010b22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8010b12:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010b14:	4410      	add	r0, r2
 8010b16:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010b18:	3b01      	subs	r3, #1
 8010b1a:	4411      	add	r1, r2
 8010b1c:	3402      	adds	r4, #2
 8010b1e:	e7ed      	b.n	8010afc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010b20:	d01a      	beq.n	8010b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8010b22:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010b24:	1e5a      	subs	r2, r3, #1
 8010b26:	fb05 0502 	mla	r5, r5, r2, r0
 8010b2a:	142d      	asrs	r5, r5, #16
 8010b2c:	d40a      	bmi.n	8010b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010b2e:	4545      	cmp	r5, r8
 8010b30:	da08      	bge.n	8010b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010b32:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010b34:	fb05 1202 	mla	r2, r5, r2, r1
 8010b38:	1412      	asrs	r2, r2, #16
 8010b3a:	d403      	bmi.n	8010b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010b3c:	9d01      	ldr	r5, [sp, #4]
 8010b3e:	42aa      	cmp	r2, r5
 8010b40:	f2c0 80a6 	blt.w	8010c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8010b44:	f04f 0c00 	mov.w	ip, #0
 8010b48:	eb03 020c 	add.w	r2, r3, ip
 8010b4c:	2a00      	cmp	r2, #0
 8010b4e:	dc3e      	bgt.n	8010bce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 8010b50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010b54:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010b58:	f1bb 0f00 	cmp.w	fp, #0
 8010b5c:	f340 80f4 	ble.w	8010d48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8010b60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010b64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010b68:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010b6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010b6e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010b72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010b76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010b7a:	eeb0 6a62 	vmov.f32	s12, s5
 8010b7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010b82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010b8a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010b8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010b92:	eeb0 6a43 	vmov.f32	s12, s6
 8010b96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010b9a:	ee12 2a90 	vmov	r2, s5
 8010b9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ba2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ba6:	ee13 2a10 	vmov	r2, s6
 8010baa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010bae:	9313      	str	r3, [sp, #76]	; 0x4c
 8010bb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010bb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010bb6:	9a04      	ldr	r2, [sp, #16]
 8010bb8:	9314      	str	r3, [sp, #80]	; 0x50
 8010bba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010bbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010bc0:	eeb0 3a67 	vmov.f32	s6, s15
 8010bc4:	bf08      	it	eq
 8010bc6:	4613      	moveq	r3, r2
 8010bc8:	eef0 2a47 	vmov.f32	s5, s14
 8010bcc:	e789      	b.n	8010ae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8010bce:	1405      	asrs	r5, r0, #16
 8010bd0:	d457      	bmi.n	8010c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010bd2:	4545      	cmp	r5, r8
 8010bd4:	da55      	bge.n	8010c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010bd6:	140a      	asrs	r2, r1, #16
 8010bd8:	d453      	bmi.n	8010c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010bda:	9e01      	ldr	r6, [sp, #4]
 8010bdc:	42b2      	cmp	r2, r6
 8010bde:	da50      	bge.n	8010c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010be0:	fb08 5202 	mla	r2, r8, r2, r5
 8010be4:	9d03      	ldr	r5, [sp, #12]
 8010be6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010bea:	0e2e      	lsrs	r6, r5, #24
 8010bec:	d049      	beq.n	8010c82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010bee:	f06f 0201 	mvn.w	r2, #1
 8010bf2:	fb02 f20c 	mul.w	r2, r2, ip
 8010bf6:	9202      	str	r2, [sp, #8]
 8010bf8:	f834 e002 	ldrh.w	lr, [r4, r2]
 8010bfc:	9a05      	ldr	r2, [sp, #20]
 8010bfe:	4356      	muls	r6, r2
 8010c00:	1c72      	adds	r2, r6, #1
 8010c02:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010c06:	1212      	asrs	r2, r2, #8
 8010c08:	fa1f f982 	uxth.w	r9, r2
 8010c0c:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010c10:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010c14:	43d2      	mvns	r2, r2
 8010c16:	b2d2      	uxtb	r2, r2
 8010c18:	fb16 f609 	smulbb	r6, r6, r9
 8010c1c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010c20:	fb07 6702 	mla	r7, r7, r2, r6
 8010c24:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010c28:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010c2c:	b2ed      	uxtb	r5, r5
 8010c2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010c32:	fa5f fe8e 	uxtb.w	lr, lr
 8010c36:	fb15 f509 	smulbb	r5, r5, r9
 8010c3a:	fb0e 5502 	mla	r5, lr, r2, r5
 8010c3e:	b2bf      	uxth	r7, r7
 8010c40:	fb1a fa09 	smulbb	sl, sl, r9
 8010c44:	b2ad      	uxth	r5, r5
 8010c46:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010c4a:	fb06 a602 	mla	r6, r6, r2, sl
 8010c4e:	1c7a      	adds	r2, r7, #1
 8010c50:	f105 0a01 	add.w	sl, r5, #1
 8010c54:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010c58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010c5c:	b2b6      	uxth	r6, r6
 8010c5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c62:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010c66:	ea47 070a 	orr.w	r7, r7, sl
 8010c6a:	f106 0a01 	add.w	sl, r6, #1
 8010c6e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010c72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010c7a:	9a02      	ldr	r2, [sp, #8]
 8010c7c:	ea47 070a 	orr.w	r7, r7, sl
 8010c80:	52a7      	strh	r7, [r4, r2]
 8010c82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010c84:	4410      	add	r0, r2
 8010c86:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010c88:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010c8c:	4411      	add	r1, r2
 8010c8e:	e75b      	b.n	8010b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010c90:	f04f 0e00 	mov.w	lr, #0
 8010c94:	eba3 020e 	sub.w	r2, r3, lr
 8010c98:	2a00      	cmp	r2, #0
 8010c9a:	f77f af59 	ble.w	8010b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8010c9e:	1405      	asrs	r5, r0, #16
 8010ca0:	140a      	asrs	r2, r1, #16
 8010ca2:	fb08 5202 	mla	r2, r8, r2, r5
 8010ca6:	9d03      	ldr	r5, [sp, #12]
 8010ca8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010cac:	0e2e      	lsrs	r6, r5, #24
 8010cae:	d044      	beq.n	8010d3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 8010cb0:	9a05      	ldr	r2, [sp, #20]
 8010cb2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010cb6:	4356      	muls	r6, r2
 8010cb8:	1c72      	adds	r2, r6, #1
 8010cba:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010cbe:	1212      	asrs	r2, r2, #8
 8010cc0:	fa1f f982 	uxth.w	r9, r2
 8010cc4:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010cc8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010ccc:	43d2      	mvns	r2, r2
 8010cce:	b2d2      	uxtb	r2, r2
 8010cd0:	fb16 f609 	smulbb	r6, r6, r9
 8010cd4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010cd8:	fb07 6702 	mla	r7, r7, r2, r6
 8010cdc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010ce0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010ce4:	b2ed      	uxtb	r5, r5
 8010ce6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010cea:	fa5f fc8c 	uxtb.w	ip, ip
 8010cee:	fb15 f509 	smulbb	r5, r5, r9
 8010cf2:	fb0c 5502 	mla	r5, ip, r2, r5
 8010cf6:	b2bf      	uxth	r7, r7
 8010cf8:	fb1a fa09 	smulbb	sl, sl, r9
 8010cfc:	b2ad      	uxth	r5, r5
 8010cfe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010d02:	fb06 a602 	mla	r6, r6, r2, sl
 8010d06:	1c7a      	adds	r2, r7, #1
 8010d08:	f105 0a01 	add.w	sl, r5, #1
 8010d0c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010d10:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010d14:	b2b6      	uxth	r6, r6
 8010d16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010d1a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010d1e:	ea47 070a 	orr.w	r7, r7, sl
 8010d22:	f106 0a01 	add.w	sl, r6, #1
 8010d26:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010d2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010d2e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010d32:	ea47 070a 	orr.w	r7, r7, sl
 8010d36:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010d3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010d3c:	4410      	add	r0, r2
 8010d3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010d40:	f10e 0e01 	add.w	lr, lr, #1
 8010d44:	4411      	add	r1, r2
 8010d46:	e7a5      	b.n	8010c94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8010d48:	b007      	add	sp, #28
 8010d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010d50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d54:	b087      	sub	sp, #28
 8010d56:	468b      	mov	fp, r1
 8010d58:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010d5a:	9205      	str	r2, [sp, #20]
 8010d5c:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010d60:	9201      	str	r2, [sp, #4]
 8010d62:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010d66:	6861      	ldr	r1, [r4, #4]
 8010d68:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010d6c:	fb01 2000 	mla	r0, r1, r0, r2
 8010d70:	6822      	ldr	r2, [r4, #0]
 8010d72:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010d76:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010d78:	6812      	ldr	r2, [r2, #0]
 8010d7a:	9203      	str	r2, [sp, #12]
 8010d7c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d80:	f1bb 0f00 	cmp.w	fp, #0
 8010d84:	dc03      	bgt.n	8010d8e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010d86:	9a05      	ldr	r2, [sp, #20]
 8010d88:	2a00      	cmp	r2, #0
 8010d8a:	f340 814b 	ble.w	8011024 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8010d8e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010d90:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d94:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d96:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010d9a:	2b00      	cmp	r3, #0
 8010d9c:	dd0f      	ble.n	8010dbe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010d9e:	140c      	asrs	r4, r1, #16
 8010da0:	d406      	bmi.n	8010db0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010da2:	454c      	cmp	r4, r9
 8010da4:	da04      	bge.n	8010db0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010da6:	1414      	asrs	r4, r2, #16
 8010da8:	d402      	bmi.n	8010db0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010daa:	9d01      	ldr	r5, [sp, #4]
 8010dac:	42ac      	cmp	r4, r5
 8010dae:	db07      	blt.n	8010dc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010db0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010db2:	4421      	add	r1, r4
 8010db4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010db6:	3b01      	subs	r3, #1
 8010db8:	4422      	add	r2, r4
 8010dba:	3002      	adds	r0, #2
 8010dbc:	e7ed      	b.n	8010d9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8010dbe:	d018      	beq.n	8010df2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 8010dc0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010dc2:	1e5c      	subs	r4, r3, #1
 8010dc4:	fb05 1504 	mla	r5, r5, r4, r1
 8010dc8:	142d      	asrs	r5, r5, #16
 8010dca:	d40a      	bmi.n	8010de2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010dcc:	454d      	cmp	r5, r9
 8010dce:	da08      	bge.n	8010de2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010dd0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010dd2:	fb05 2404 	mla	r4, r5, r4, r2
 8010dd6:	1424      	asrs	r4, r4, #16
 8010dd8:	d403      	bmi.n	8010de2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010dda:	9d01      	ldr	r5, [sp, #4]
 8010ddc:	42ac      	cmp	r4, r5
 8010dde:	f2c0 80bb 	blt.w	8010f58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 8010de2:	2700      	movs	r7, #0
 8010de4:	19dc      	adds	r4, r3, r7
 8010de6:	2c00      	cmp	r4, #0
 8010de8:	dc3e      	bgt.n	8010e68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 8010dea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010dee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010df2:	f1bb 0f00 	cmp.w	fp, #0
 8010df6:	f340 8115 	ble.w	8011024 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8010dfa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010dfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010e02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010e06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e08:	f1bb 0b01 	subs.w	fp, fp, #1
 8010e0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010e10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010e14:	eeb0 6a62 	vmov.f32	s12, s5
 8010e18:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010e1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e20:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010e24:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010e28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010e2c:	eeb0 6a43 	vmov.f32	s12, s6
 8010e30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010e34:	ee12 2a90 	vmov	r2, s5
 8010e38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e40:	ee13 2a10 	vmov	r2, s6
 8010e44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e48:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e50:	9a05      	ldr	r2, [sp, #20]
 8010e52:	9314      	str	r3, [sp, #80]	; 0x50
 8010e54:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010e58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e5a:	eeb0 3a67 	vmov.f32	s6, s15
 8010e5e:	bf08      	it	eq
 8010e60:	4613      	moveq	r3, r2
 8010e62:	eef0 2a47 	vmov.f32	s5, s14
 8010e66:	e78b      	b.n	8010d80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 8010e68:	140d      	asrs	r5, r1, #16
 8010e6a:	d45c      	bmi.n	8010f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e6c:	454d      	cmp	r5, r9
 8010e6e:	da5a      	bge.n	8010f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e70:	1414      	asrs	r4, r2, #16
 8010e72:	d458      	bmi.n	8010f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e74:	9e01      	ldr	r6, [sp, #4]
 8010e76:	42b4      	cmp	r4, r6
 8010e78:	da55      	bge.n	8010f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e7a:	fb09 5404 	mla	r4, r9, r4, r5
 8010e7e:	9d03      	ldr	r5, [sp, #12]
 8010e80:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8010e84:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8010e88:	d04d      	beq.n	8010f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010e8a:	0a26      	lsrs	r6, r4, #8
 8010e8c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8010e90:	fa5f f58e 	uxtb.w	r5, lr
 8010e94:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8010e98:	9604      	str	r6, [sp, #16]
 8010e9a:	d04a      	beq.n	8010f32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010e9c:	f06f 0601 	mvn.w	r6, #1
 8010ea0:	437e      	muls	r6, r7
 8010ea2:	fa1f fa85 	uxth.w	sl, r5
 8010ea6:	f830 8006 	ldrh.w	r8, [r0, r6]
 8010eaa:	9602      	str	r6, [sp, #8]
 8010eac:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010eb0:	43ed      	mvns	r5, r5
 8010eb2:	fa5f fc8c 	uxtb.w	ip, ip
 8010eb6:	b2ed      	uxtb	r5, r5
 8010eb8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010ebc:	fb1c fc0a 	smulbb	ip, ip, sl
 8010ec0:	fb0e cc05 	mla	ip, lr, r5, ip
 8010ec4:	b2e4      	uxtb	r4, r4
 8010ec6:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8010eca:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010ece:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8010ed2:	fa5f f888 	uxtb.w	r8, r8
 8010ed6:	fb14 f40a 	smulbb	r4, r4, sl
 8010eda:	fb08 4405 	mla	r4, r8, r5, r4
 8010ede:	b2a4      	uxth	r4, r4
 8010ee0:	fa1f fc8c 	uxth.w	ip, ip
 8010ee4:	fb16 f60a 	smulbb	r6, r6, sl
 8010ee8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8010eec:	fb0e 6e05 	mla	lr, lr, r5, r6
 8010ef0:	1c66      	adds	r6, r4, #1
 8010ef2:	f10c 0501 	add.w	r5, ip, #1
 8010ef6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8010efa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010efe:	fa1f fe8e 	uxth.w	lr, lr
 8010f02:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010f06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010f0a:	ea4c 0c06 	orr.w	ip, ip, r6
 8010f0e:	f10e 0601 	add.w	r6, lr, #1
 8010f12:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8010f16:	0976      	lsrs	r6, r6, #5
 8010f18:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010f1c:	9c02      	ldr	r4, [sp, #8]
 8010f1e:	ea4c 0c06 	orr.w	ip, ip, r6
 8010f22:	f820 c004 	strh.w	ip, [r0, r4]
 8010f26:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010f28:	4421      	add	r1, r4
 8010f2a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010f2c:	3f01      	subs	r7, #1
 8010f2e:	4422      	add	r2, r4
 8010f30:	e758      	b.n	8010de4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8010f32:	4e3e      	ldr	r6, [pc, #248]	; (801102c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8010f34:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8010f38:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8010f3c:	ea4c 0c04 	orr.w	ip, ip, r4
 8010f40:	9c04      	ldr	r4, [sp, #16]
 8010f42:	f06f 0501 	mvn.w	r5, #1
 8010f46:	00e6      	lsls	r6, r4, #3
 8010f48:	437d      	muls	r5, r7
 8010f4a:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8010f4e:	ea4c 0c04 	orr.w	ip, ip, r4
 8010f52:	f820 c005 	strh.w	ip, [r0, r5]
 8010f56:	e7e6      	b.n	8010f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f58:	f04f 0800 	mov.w	r8, #0
 8010f5c:	eba3 0408 	sub.w	r4, r3, r8
 8010f60:	2c00      	cmp	r4, #0
 8010f62:	f77f af42 	ble.w	8010dea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8010f66:	140d      	asrs	r5, r1, #16
 8010f68:	1414      	asrs	r4, r2, #16
 8010f6a:	fb09 5404 	mla	r4, r9, r4, r5
 8010f6e:	9d03      	ldr	r5, [sp, #12]
 8010f70:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8010f74:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8010f78:	d042      	beq.n	8011000 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010f7a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8010f7e:	fa5f f58c 	uxtb.w	r5, ip
 8010f82:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8010f86:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8010f8a:	d040      	beq.n	801100e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8010f8c:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8010f90:	fa1f fa85 	uxth.w	sl, r5
 8010f94:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010f98:	43ed      	mvns	r5, r5
 8010f9a:	b2ff      	uxtb	r7, r7
 8010f9c:	b2ed      	uxtb	r5, r5
 8010f9e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010fa2:	fb17 f70a 	smulbb	r7, r7, sl
 8010fa6:	fb0c 7705 	mla	r7, ip, r5, r7
 8010faa:	b2e4      	uxtb	r4, r4
 8010fac:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8010fb0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010fb4:	fa5f fe8e 	uxtb.w	lr, lr
 8010fb8:	fb14 f40a 	smulbb	r4, r4, sl
 8010fbc:	fb0e 4405 	mla	r4, lr, r5, r4
 8010fc0:	b2f6      	uxtb	r6, r6
 8010fc2:	b2bf      	uxth	r7, r7
 8010fc4:	fb16 f60a 	smulbb	r6, r6, sl
 8010fc8:	b2a4      	uxth	r4, r4
 8010fca:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010fce:	fb0c 6c05 	mla	ip, ip, r5, r6
 8010fd2:	1c7d      	adds	r5, r7, #1
 8010fd4:	1c66      	adds	r6, r4, #1
 8010fd6:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010fda:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8010fde:	fa1f fc8c 	uxth.w	ip, ip
 8010fe2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010fe6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010fea:	4337      	orrs	r7, r6
 8010fec:	f10c 0601 	add.w	r6, ip, #1
 8010ff0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8010ff4:	0976      	lsrs	r6, r6, #5
 8010ff6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010ffa:	4337      	orrs	r7, r6
 8010ffc:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8011000:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011002:	4421      	add	r1, r4
 8011004:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011006:	f108 0801 	add.w	r8, r8, #1
 801100a:	4422      	add	r2, r4
 801100c:	e7a6      	b.n	8010f5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 801100e:	4d07      	ldr	r5, [pc, #28]	; (801102c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011010:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011014:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8011018:	00f6      	lsls	r6, r6, #3
 801101a:	4327      	orrs	r7, r4
 801101c:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011020:	4327      	orrs	r7, r4
 8011022:	e7eb      	b.n	8010ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 8011024:	b007      	add	sp, #28
 8011026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801102a:	bf00      	nop
 801102c:	fffff800 	.word	0xfffff800

08011030 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011034:	b087      	sub	sp, #28
 8011036:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801103a:	9204      	str	r2, [sp, #16]
 801103c:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 8011040:	9200      	str	r2, [sp, #0]
 8011042:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011046:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011048:	9201      	str	r2, [sp, #4]
 801104a:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 801104e:	9205      	str	r2, [sp, #20]
 8011050:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011054:	6860      	ldr	r0, [r4, #4]
 8011056:	fb00 2505 	mla	r5, r0, r5, r2
 801105a:	6822      	ldr	r2, [r4, #0]
 801105c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011060:	9a00      	ldr	r2, [sp, #0]
 8011062:	3201      	adds	r2, #1
 8011064:	f022 0201 	bic.w	r2, r2, #1
 8011068:	9202      	str	r2, [sp, #8]
 801106a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801106c:	6812      	ldr	r2, [r2, #0]
 801106e:	9203      	str	r2, [sp, #12]
 8011070:	2900      	cmp	r1, #0
 8011072:	dc03      	bgt.n	801107c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8011074:	9a04      	ldr	r2, [sp, #16]
 8011076:	2a00      	cmp	r2, #0
 8011078:	f340 814c 	ble.w	8011314 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 801107c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801107e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8011082:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011084:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011088:	2b00      	cmp	r3, #0
 801108a:	dd10      	ble.n	80110ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 801108c:	1422      	asrs	r2, r4, #16
 801108e:	d407      	bmi.n	80110a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8011090:	9e00      	ldr	r6, [sp, #0]
 8011092:	4296      	cmp	r6, r2
 8011094:	dd04      	ble.n	80110a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8011096:	1402      	asrs	r2, r0, #16
 8011098:	d402      	bmi.n	80110a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801109a:	9e01      	ldr	r6, [sp, #4]
 801109c:	42b2      	cmp	r2, r6
 801109e:	db07      	blt.n	80110b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x80>
 80110a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80110a2:	4414      	add	r4, r2
 80110a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80110a6:	3b01      	subs	r3, #1
 80110a8:	4410      	add	r0, r2
 80110aa:	3502      	adds	r5, #2
 80110ac:	e7ec      	b.n	8011088 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 80110ae:	d00f      	beq.n	80110d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 80110b0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80110b2:	1e5a      	subs	r2, r3, #1
 80110b4:	fb06 4602 	mla	r6, r6, r2, r4
 80110b8:	1436      	asrs	r6, r6, #16
 80110ba:	d542      	bpl.n	8011142 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x112>
 80110bc:	469a      	mov	sl, r3
 80110be:	46a9      	mov	r9, r5
 80110c0:	f1ba 0f00 	cmp.w	sl, #0
 80110c4:	f300 80b5 	bgt.w	8011232 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80110c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80110cc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80110d0:	2900      	cmp	r1, #0
 80110d2:	f340 811f 	ble.w	8011314 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80110d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80110da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80110de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80110e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110e4:	3901      	subs	r1, #1
 80110e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80110ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80110ee:	eeb0 6a62 	vmov.f32	s12, s5
 80110f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80110f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80110fe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011102:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011106:	eeb0 6a43 	vmov.f32	s12, s6
 801110a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801110e:	ee12 2a90 	vmov	r2, s5
 8011112:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011116:	fb92 f3f3 	sdiv	r3, r2, r3
 801111a:	ee13 2a10 	vmov	r2, s6
 801111e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011122:	9313      	str	r3, [sp, #76]	; 0x4c
 8011124:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011126:	fb92 f3f3 	sdiv	r3, r2, r3
 801112a:	9a04      	ldr	r2, [sp, #16]
 801112c:	9314      	str	r3, [sp, #80]	; 0x50
 801112e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011132:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011134:	eeb0 3a67 	vmov.f32	s6, s15
 8011138:	bf08      	it	eq
 801113a:	4613      	moveq	r3, r2
 801113c:	eef0 2a47 	vmov.f32	s5, s14
 8011140:	e796      	b.n	8011070 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 8011142:	9f00      	ldr	r7, [sp, #0]
 8011144:	42b7      	cmp	r7, r6
 8011146:	ddb9      	ble.n	80110bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8011148:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801114a:	fb06 0202 	mla	r2, r6, r2, r0
 801114e:	1412      	asrs	r2, r2, #16
 8011150:	d4b4      	bmi.n	80110bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8011152:	9e01      	ldr	r6, [sp, #4]
 8011154:	42b2      	cmp	r2, r6
 8011156:	dab1      	bge.n	80110bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8011158:	f04f 0800 	mov.w	r8, #0
 801115c:	eba3 0208 	sub.w	r2, r3, r8
 8011160:	2a00      	cmp	r2, #0
 8011162:	ddb1      	ble.n	80110c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011164:	9f02      	ldr	r7, [sp, #8]
 8011166:	1422      	asrs	r2, r4, #16
 8011168:	1406      	asrs	r6, r0, #16
 801116a:	fb07 2606 	mla	r6, r7, r6, r2
 801116e:	0872      	lsrs	r2, r6, #1
 8011170:	9f03      	ldr	r7, [sp, #12]
 8011172:	5cba      	ldrb	r2, [r7, r2]
 8011174:	07f6      	lsls	r6, r6, #31
 8011176:	bf54      	ite	pl
 8011178:	f002 020f 	andpl.w	r2, r2, #15
 801117c:	1112      	asrmi	r2, r2, #4
 801117e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011182:	b2d2      	uxtb	r2, r2
 8011184:	2a00      	cmp	r2, #0
 8011186:	d04d      	beq.n	8011224 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8011188:	9f05      	ldr	r7, [sp, #20]
 801118a:	4e64      	ldr	r6, [pc, #400]	; (801131c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 801118c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011190:	6836      	ldr	r6, [r6, #0]
 8011192:	437a      	muls	r2, r7
 8011194:	1c57      	adds	r7, r2, #1
 8011196:	eb07 2222 	add.w	r2, r7, r2, asr #8
 801119a:	1212      	asrs	r2, r2, #8
 801119c:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 80111a0:	fa1f fa82 	uxth.w	sl, r2
 80111a4:	ea4f 272e 	mov.w	r7, lr, asr #8
 80111a8:	43d2      	mvns	r2, r2
 80111aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80111ae:	b2d2      	uxtb	r2, r2
 80111b0:	fb1c fc0a 	smulbb	ip, ip, sl
 80111b4:	ea4f 09d6 	mov.w	r9, r6, lsr #3
 80111b8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80111bc:	fb07 c702 	mla	r7, r7, r2, ip
 80111c0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80111c4:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80111c8:	fb19 f90a 	smulbb	r9, r9, sl
 80111cc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80111d0:	00f6      	lsls	r6, r6, #3
 80111d2:	fb0c 9c02 	mla	ip, ip, r2, r9
 80111d6:	b2f6      	uxtb	r6, r6
 80111d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80111dc:	fa1f fc8c 	uxth.w	ip, ip
 80111e0:	fa5f fe8e 	uxtb.w	lr, lr
 80111e4:	fb16 f60a 	smulbb	r6, r6, sl
 80111e8:	b2bf      	uxth	r7, r7
 80111ea:	fb0e 6602 	mla	r6, lr, r2, r6
 80111ee:	f10c 0901 	add.w	r9, ip, #1
 80111f2:	b2b6      	uxth	r6, r6
 80111f4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80111f8:	f107 0b01 	add.w	fp, r7, #1
 80111fc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8011200:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8011204:	f106 0e01 	add.w	lr, r6, #1
 8011208:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801120c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011210:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011214:	ea4c 0c07 	orr.w	ip, ip, r7
 8011218:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801121c:	ea4c 0c0e 	orr.w	ip, ip, lr
 8011220:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011224:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011226:	4414      	add	r4, r2
 8011228:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801122a:	f108 0801 	add.w	r8, r8, #1
 801122e:	4410      	add	r0, r2
 8011230:	e794      	b.n	801115c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 8011232:	1422      	asrs	r2, r4, #16
 8011234:	d465      	bmi.n	8011302 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8011236:	9e00      	ldr	r6, [sp, #0]
 8011238:	4296      	cmp	r6, r2
 801123a:	dd62      	ble.n	8011302 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 801123c:	1406      	asrs	r6, r0, #16
 801123e:	d460      	bmi.n	8011302 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8011240:	9f01      	ldr	r7, [sp, #4]
 8011242:	42be      	cmp	r6, r7
 8011244:	da5d      	bge.n	8011302 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8011246:	9f02      	ldr	r7, [sp, #8]
 8011248:	fb06 2607 	mla	r6, r6, r7, r2
 801124c:	0872      	lsrs	r2, r6, #1
 801124e:	9f03      	ldr	r7, [sp, #12]
 8011250:	5cba      	ldrb	r2, [r7, r2]
 8011252:	07f7      	lsls	r7, r6, #31
 8011254:	bf54      	ite	pl
 8011256:	f002 020f 	andpl.w	r2, r2, #15
 801125a:	1112      	asrmi	r2, r2, #4
 801125c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011260:	b2d2      	uxtb	r2, r2
 8011262:	2a00      	cmp	r2, #0
 8011264:	d04d      	beq.n	8011302 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8011266:	9f05      	ldr	r7, [sp, #20]
 8011268:	4e2c      	ldr	r6, [pc, #176]	; (801131c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 801126a:	f8b9 e000 	ldrh.w	lr, [r9]
 801126e:	6836      	ldr	r6, [r6, #0]
 8011270:	437a      	muls	r2, r7
 8011272:	1c57      	adds	r7, r2, #1
 8011274:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8011278:	1212      	asrs	r2, r2, #8
 801127a:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 801127e:	fa1f fb82 	uxth.w	fp, r2
 8011282:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011286:	43d2      	mvns	r2, r2
 8011288:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801128c:	b2d2      	uxtb	r2, r2
 801128e:	fb1c fc0b 	smulbb	ip, ip, fp
 8011292:	ea4f 08d6 	mov.w	r8, r6, lsr #3
 8011296:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801129a:	fb07 c702 	mla	r7, r7, r2, ip
 801129e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80112a2:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80112a6:	fb18 f80b 	smulbb	r8, r8, fp
 80112aa:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80112ae:	00f6      	lsls	r6, r6, #3
 80112b0:	fb0c 8c02 	mla	ip, ip, r2, r8
 80112b4:	b2f6      	uxtb	r6, r6
 80112b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80112ba:	fa1f fc8c 	uxth.w	ip, ip
 80112be:	fa5f fe8e 	uxtb.w	lr, lr
 80112c2:	fb16 f60b 	smulbb	r6, r6, fp
 80112c6:	b2bf      	uxth	r7, r7
 80112c8:	fb0e 6602 	mla	r6, lr, r2, r6
 80112cc:	f10c 0801 	add.w	r8, ip, #1
 80112d0:	b2b6      	uxth	r6, r6
 80112d2:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 80112d6:	f107 0801 	add.w	r8, r7, #1
 80112da:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80112de:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80112e2:	f106 0e01 	add.w	lr, r6, #1
 80112e6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80112ea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80112ee:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80112f2:	ea4c 0c07 	orr.w	ip, ip, r7
 80112f6:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80112fa:	ea4c 0c0e 	orr.w	ip, ip, lr
 80112fe:	f8a9 c000 	strh.w	ip, [r9]
 8011302:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011304:	4414      	add	r4, r2
 8011306:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011308:	f109 0902 	add.w	r9, r9, #2
 801130c:	4410      	add	r0, r2
 801130e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011312:	e6d5      	b.n	80110c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8011314:	b007      	add	sp, #28
 8011316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801131a:	bf00      	nop
 801131c:	200123c4 	.word	0x200123c4

08011320 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011324:	b087      	sub	sp, #28
 8011326:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801132a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801132c:	9205      	str	r2, [sp, #20]
 801132e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011332:	9201      	str	r2, [sp, #4]
 8011334:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011338:	6860      	ldr	r0, [r4, #4]
 801133a:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 801133e:	9100      	str	r1, [sp, #0]
 8011340:	fb00 2505 	mla	r5, r0, r5, r2
 8011344:	6822      	ldr	r2, [r4, #0]
 8011346:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801134a:	f10b 0201 	add.w	r2, fp, #1
 801134e:	f022 0201 	bic.w	r2, r2, #1
 8011352:	9203      	str	r2, [sp, #12]
 8011354:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011356:	6812      	ldr	r2, [r2, #0]
 8011358:	9204      	str	r2, [sp, #16]
 801135a:	9a00      	ldr	r2, [sp, #0]
 801135c:	2a00      	cmp	r2, #0
 801135e:	dc03      	bgt.n	8011368 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8011360:	9a05      	ldr	r2, [sp, #20]
 8011362:	2a00      	cmp	r2, #0
 8011364:	f340 8157 	ble.w	8011616 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8011368:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801136a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801136e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011370:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011374:	2b00      	cmp	r3, #0
 8011376:	dd0f      	ble.n	8011398 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011378:	1422      	asrs	r2, r4, #16
 801137a:	d406      	bmi.n	801138a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801137c:	4593      	cmp	fp, r2
 801137e:	dd04      	ble.n	801138a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011380:	1402      	asrs	r2, r0, #16
 8011382:	d402      	bmi.n	801138a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011384:	9e01      	ldr	r6, [sp, #4]
 8011386:	42b2      	cmp	r2, r6
 8011388:	db07      	blt.n	801139a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 801138a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801138c:	4414      	add	r4, r2
 801138e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011390:	3b01      	subs	r3, #1
 8011392:	4410      	add	r0, r2
 8011394:	3502      	adds	r5, #2
 8011396:	e7ed      	b.n	8011374 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8011398:	d018      	beq.n	80113cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 801139a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801139c:	1e5a      	subs	r2, r3, #1
 801139e:	fb06 4602 	mla	r6, r6, r2, r4
 80113a2:	1436      	asrs	r6, r6, #16
 80113a4:	d40a      	bmi.n	80113bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80113a6:	45b3      	cmp	fp, r6
 80113a8:	dd08      	ble.n	80113bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80113aa:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80113ac:	fb06 0202 	mla	r2, r6, r2, r0
 80113b0:	1412      	asrs	r2, r2, #16
 80113b2:	d403      	bmi.n	80113bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80113b4:	9e01      	ldr	r6, [sp, #4]
 80113b6:	42b2      	cmp	r2, r6
 80113b8:	f2c0 80bf 	blt.w	801153a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 80113bc:	2700      	movs	r7, #0
 80113be:	19da      	adds	r2, r3, r7
 80113c0:	2a00      	cmp	r2, #0
 80113c2:	dc3f      	bgt.n	8011444 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 80113c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113c8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80113cc:	9b00      	ldr	r3, [sp, #0]
 80113ce:	2b00      	cmp	r3, #0
 80113d0:	f340 8121 	ble.w	8011616 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 80113d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80113e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80113e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80113e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113ea:	eeb0 6a62 	vmov.f32	s12, s5
 80113ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113fa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80113fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011402:	eeb0 6a43 	vmov.f32	s12, s6
 8011406:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801140a:	ee12 2a90 	vmov	r2, s5
 801140e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011412:	fb92 f3f3 	sdiv	r3, r2, r3
 8011416:	ee13 2a10 	vmov	r2, s6
 801141a:	9313      	str	r3, [sp, #76]	; 0x4c
 801141c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801141e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011422:	9314      	str	r3, [sp, #80]	; 0x50
 8011424:	9b00      	ldr	r3, [sp, #0]
 8011426:	9a05      	ldr	r2, [sp, #20]
 8011428:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801142c:	3b01      	subs	r3, #1
 801142e:	9300      	str	r3, [sp, #0]
 8011430:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011434:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011436:	eeb0 3a67 	vmov.f32	s6, s15
 801143a:	bf08      	it	eq
 801143c:	4613      	moveq	r3, r2
 801143e:	eef0 2a47 	vmov.f32	s5, s14
 8011442:	e78a      	b.n	801135a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011444:	1422      	asrs	r2, r4, #16
 8011446:	d466      	bmi.n	8011516 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011448:	4593      	cmp	fp, r2
 801144a:	dd64      	ble.n	8011516 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801144c:	1406      	asrs	r6, r0, #16
 801144e:	d462      	bmi.n	8011516 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011450:	9901      	ldr	r1, [sp, #4]
 8011452:	428e      	cmp	r6, r1
 8011454:	da5f      	bge.n	8011516 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011456:	9903      	ldr	r1, [sp, #12]
 8011458:	fb06 2601 	mla	r6, r6, r1, r2
 801145c:	0872      	lsrs	r2, r6, #1
 801145e:	9904      	ldr	r1, [sp, #16]
 8011460:	5c8a      	ldrb	r2, [r1, r2]
 8011462:	07f6      	lsls	r6, r6, #31
 8011464:	bf54      	ite	pl
 8011466:	f002 020f 	andpl.w	r2, r2, #15
 801146a:	1112      	asrmi	r2, r2, #4
 801146c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011470:	b2d2      	uxtb	r2, r2
 8011472:	2a00      	cmp	r2, #0
 8011474:	d04f      	beq.n	8011516 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011476:	4969      	ldr	r1, [pc, #420]	; (801161c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011478:	f8d1 c000 	ldr.w	ip, [r1]
 801147c:	2aff      	cmp	r2, #255	; 0xff
 801147e:	ea4f 291c 	mov.w	r9, ip, lsr #8
 8011482:	ea4f 06dc 	mov.w	r6, ip, lsr #3
 8011486:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801148a:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801148e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011492:	fa5f fc8c 	uxtb.w	ip, ip
 8011496:	d044      	beq.n	8011522 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8011498:	f06f 0101 	mvn.w	r1, #1
 801149c:	4379      	muls	r1, r7
 801149e:	fa1f fa82 	uxth.w	sl, r2
 80114a2:	f835 8001 	ldrh.w	r8, [r5, r1]
 80114a6:	9102      	str	r1, [sp, #8]
 80114a8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80114ac:	43d2      	mvns	r2, r2
 80114ae:	b2d2      	uxtb	r2, r2
 80114b0:	fb19 f90a 	smulbb	r9, r9, sl
 80114b4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80114b8:	fb0e 9e02 	mla	lr, lr, r2, r9
 80114bc:	ea4f 09e8 	mov.w	r9, r8, asr #3
 80114c0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80114c4:	fb16 f60a 	smulbb	r6, r6, sl
 80114c8:	fb09 6602 	mla	r6, r9, r2, r6
 80114cc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80114d0:	b2b6      	uxth	r6, r6
 80114d2:	fa5f f888 	uxtb.w	r8, r8
 80114d6:	fb1c fc0a 	smulbb	ip, ip, sl
 80114da:	fa1f fe8e 	uxth.w	lr, lr
 80114de:	fb08 cc02 	mla	ip, r8, r2, ip
 80114e2:	f106 0901 	add.w	r9, r6, #1
 80114e6:	fa1f fc8c 	uxth.w	ip, ip
 80114ea:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80114ee:	f10e 0901 	add.w	r9, lr, #1
 80114f2:	0976      	lsrs	r6, r6, #5
 80114f4:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 80114f8:	f10c 0201 	add.w	r2, ip, #1
 80114fc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011500:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011504:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011508:	ea46 060e 	orr.w	r6, r6, lr
 801150c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8011510:	ea46 060c 	orr.w	r6, r6, ip
 8011514:	526e      	strh	r6, [r5, r1]
 8011516:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011518:	4414      	add	r4, r2
 801151a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801151c:	3f01      	subs	r7, #1
 801151e:	4410      	add	r0, r2
 8011520:	e74d      	b.n	80113be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8011522:	f06f 0201 	mvn.w	r2, #1
 8011526:	00f6      	lsls	r6, r6, #3
 8011528:	fb02 f807 	mul.w	r8, r2, r7
 801152c:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8011530:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 8011534:	f825 6008 	strh.w	r6, [r5, r8]
 8011538:	e7ed      	b.n	8011516 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801153a:	f04f 0800 	mov.w	r8, #0
 801153e:	eba3 0208 	sub.w	r2, r3, r8
 8011542:	2a00      	cmp	r2, #0
 8011544:	f77f af3e 	ble.w	80113c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011548:	9903      	ldr	r1, [sp, #12]
 801154a:	1422      	asrs	r2, r4, #16
 801154c:	1406      	asrs	r6, r0, #16
 801154e:	fb01 2606 	mla	r6, r1, r6, r2
 8011552:	0872      	lsrs	r2, r6, #1
 8011554:	9904      	ldr	r1, [sp, #16]
 8011556:	5c8a      	ldrb	r2, [r1, r2]
 8011558:	07f1      	lsls	r1, r6, #31
 801155a:	bf54      	ite	pl
 801155c:	f002 020f 	andpl.w	r2, r2, #15
 8011560:	1112      	asrmi	r2, r2, #4
 8011562:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011566:	b2d2      	uxtb	r2, r2
 8011568:	2a00      	cmp	r2, #0
 801156a:	d047      	beq.n	80115fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>
 801156c:	492b      	ldr	r1, [pc, #172]	; (801161c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 801156e:	680f      	ldr	r7, [r1, #0]
 8011570:	2aff      	cmp	r2, #255	; 0xff
 8011572:	ea4f 2917 	mov.w	r9, r7, lsr #8
 8011576:	ea4f 06d7 	mov.w	r6, r7, lsr #3
 801157a:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 801157e:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011582:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011586:	b2ff      	uxtb	r7, r7
 8011588:	d03f      	beq.n	801160a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ea>
 801158a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801158e:	fa1f fa82 	uxth.w	sl, r2
 8011592:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011596:	43d2      	mvns	r2, r2
 8011598:	b2d2      	uxtb	r2, r2
 801159a:	fb19 f90a 	smulbb	r9, r9, sl
 801159e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80115a2:	fb0c 9c02 	mla	ip, ip, r2, r9
 80115a6:	ea4f 09ee 	mov.w	r9, lr, asr #3
 80115aa:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80115ae:	fb16 f60a 	smulbb	r6, r6, sl
 80115b2:	fb09 6602 	mla	r6, r9, r2, r6
 80115b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80115ba:	b2b6      	uxth	r6, r6
 80115bc:	fa5f fe8e 	uxtb.w	lr, lr
 80115c0:	fb17 f70a 	smulbb	r7, r7, sl
 80115c4:	fa1f fc8c 	uxth.w	ip, ip
 80115c8:	fb0e 7702 	mla	r7, lr, r2, r7
 80115cc:	f106 0901 	add.w	r9, r6, #1
 80115d0:	b2bf      	uxth	r7, r7
 80115d2:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80115d6:	f10c 0901 	add.w	r9, ip, #1
 80115da:	0976      	lsrs	r6, r6, #5
 80115dc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80115e0:	1c7a      	adds	r2, r7, #1
 80115e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80115e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80115ea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80115ee:	ea46 060c 	orr.w	r6, r6, ip
 80115f2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80115f6:	433e      	orrs	r6, r7
 80115f8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80115fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80115fe:	4414      	add	r4, r2
 8011600:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011602:	f108 0801 	add.w	r8, r8, #1
 8011606:	4410      	add	r0, r2
 8011608:	e799      	b.n	801153e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 801160a:	00f6      	lsls	r6, r6, #3
 801160c:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8011610:	ea46 06d7 	orr.w	r6, r6, r7, lsr #3
 8011614:	e7f0      	b.n	80115f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8011616:	b007      	add	sp, #28
 8011618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801161c:	200123c4 	.word	0x200123c4

08011620 <_ZN8touchgfx8LCD16bppD1Ev>:
 8011620:	4770      	bx	lr

08011622 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8011622:	4770      	bx	lr

08011624 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8011624:	4770      	bx	lr

08011626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8011626:	4770      	bx	lr

08011628 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8011628:	4770      	bx	lr

0801162a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801162a:	4770      	bx	lr

0801162c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801162c:	4770      	bx	lr

0801162e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801162e:	4770      	bx	lr

08011630 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011630:	4770      	bx	lr

08011632 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011632:	4770      	bx	lr

08011634 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011634:	4770      	bx	lr

08011636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011636:	4770      	bx	lr

08011638 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011638:	4770      	bx	lr

0801163a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801163a:	4770      	bx	lr

0801163c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801163c:	4770      	bx	lr

0801163e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801163e:	4770      	bx	lr

08011640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011640:	4770      	bx	lr

08011642 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011642:	4770      	bx	lr

08011644 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011644:	4770      	bx	lr

08011646 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011646:	4770      	bx	lr

08011648 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011648:	4770      	bx	lr

0801164a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801164a:	4770      	bx	lr

0801164c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801164c:	4770      	bx	lr

0801164e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801164e:	4770      	bx	lr

08011650 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8011650:	4770      	bx	lr

08011652 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011652:	4770      	bx	lr

08011654 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011654:	4770      	bx	lr

08011656 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011656:	4770      	bx	lr

08011658 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8011658:	4770      	bx	lr
	...

0801165c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801165c:	b508      	push	{r3, lr}
 801165e:	4b06      	ldr	r3, [pc, #24]	; (8011678 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8011660:	8818      	ldrh	r0, [r3, #0]
 8011662:	b928      	cbnz	r0, 8011670 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8011664:	4b05      	ldr	r3, [pc, #20]	; (801167c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8011666:	4a06      	ldr	r2, [pc, #24]	; (8011680 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8011668:	4806      	ldr	r0, [pc, #24]	; (8011684 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801166a:	2154      	movs	r1, #84	; 0x54
 801166c:	f009 f8bc 	bl	801a7e8 <__assert_func>
 8011670:	0040      	lsls	r0, r0, #1
 8011672:	b280      	uxth	r0, r0
 8011674:	bd08      	pop	{r3, pc}
 8011676:	bf00      	nop
 8011678:	200123b6 	.word	0x200123b6
 801167c:	0801eb63 	.word	0x0801eb63
 8011680:	0801f0e3 	.word	0x0801f0e3
 8011684:	0801eba5 	.word	0x0801eba5

08011688 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8011688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801168c:	b08d      	sub	sp, #52	; 0x34
 801168e:	460f      	mov	r7, r1
 8011690:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011694:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8011698:	4616      	mov	r6, r2
 801169a:	f1b9 0f00 	cmp.w	r9, #0
 801169e:	d046      	beq.n	801172e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80116a0:	6810      	ldr	r0, [r2, #0]
 80116a2:	6851      	ldr	r1, [r2, #4]
 80116a4:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801186c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 80116a8:	ad08      	add	r5, sp, #32
 80116aa:	c503      	stmia	r5!, {r0, r1}
 80116ac:	6818      	ldr	r0, [r3, #0]
 80116ae:	6859      	ldr	r1, [r3, #4]
 80116b0:	ad0a      	add	r5, sp, #40	; 0x28
 80116b2:	c503      	stmia	r5!, {r0, r1}
 80116b4:	a808      	add	r0, sp, #32
 80116b6:	f7fb fa29 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80116ba:	4631      	mov	r1, r6
 80116bc:	a80a      	add	r0, sp, #40	; 0x28
 80116be:	f7fb fa0d 	bl	800cadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80116c2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80116c6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80116ca:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80116ce:	f8d8 0000 	ldr.w	r0, [r8]
 80116d2:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 80116d6:	fb16 2103 	smlabb	r1, r6, r3, r2
 80116da:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80116de:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80116e2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80116e6:	440a      	add	r2, r1
 80116e8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80116ec:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80116f0:	4413      	add	r3, r2
 80116f2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80116f6:	6803      	ldr	r3, [r0, #0]
 80116f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80116fa:	4798      	blx	r3
 80116fc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011700:	d018      	beq.n	8011734 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8011702:	f010 0f04 	tst.w	r0, #4
 8011706:	d019      	beq.n	801173c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8011708:	f8d8 0000 	ldr.w	r0, [r8]
 801170c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8011710:	6801      	ldr	r1, [r0, #0]
 8011712:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8011716:	e9cd 9403 	strd	r9, r4, [sp, #12]
 801171a:	b2bf      	uxth	r7, r7
 801171c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8011720:	9402      	str	r4, [sp, #8]
 8011722:	b2ad      	uxth	r5, r5
 8011724:	9701      	str	r7, [sp, #4]
 8011726:	9500      	str	r5, [sp, #0]
 8011728:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 801172a:	4631      	mov	r1, r6
 801172c:	47a0      	blx	r4
 801172e:	b00d      	add	sp, #52	; 0x34
 8011730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011734:	b914      	cbnz	r4, 801173c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8011736:	f010 0f01 	tst.w	r0, #1
 801173a:	e7e4      	b.n	8011706 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801173c:	f8d8 0000 	ldr.w	r0, [r8]
 8011740:	6803      	ldr	r3, [r0, #0]
 8011742:	6a1b      	ldr	r3, [r3, #32]
 8011744:	4798      	blx	r3
 8011746:	4a48      	ldr	r2, [pc, #288]	; (8011868 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 8011748:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801174c:	8814      	ldrh	r4, [r2, #0]
 801174e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8011752:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011756:	fb01 3404 	mla	r4, r1, r4, r3
 801175a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801175e:	4692      	mov	sl, r2
 8011760:	d118      	bne.n	8011794 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 8011762:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 8011766:	f04f 0900 	mov.w	r9, #0
 801176a:	f8d8 0000 	ldr.w	r0, [r8]
 801176e:	45b9      	cmp	r9, r7
 8011770:	6803      	ldr	r3, [r0, #0]
 8011772:	da73      	bge.n	801185c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8011774:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8011776:	4632      	mov	r2, r6
 8011778:	465b      	mov	r3, fp
 801177a:	4621      	mov	r1, r4
 801177c:	47a8      	blx	r5
 801177e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011782:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011786:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801178a:	f109 0901 	add.w	r9, r9, #1
 801178e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8011792:	e7ea      	b.n	801176a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 8011794:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 8011798:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 801179c:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 80117a0:	f04f 0b00 	mov.w	fp, #0
 80117a4:	fa1f f389 	uxth.w	r3, r9
 80117a8:	fa1f f888 	uxth.w	r8, r8
 80117ac:	9207      	str	r2, [sp, #28]
 80117ae:	45bb      	cmp	fp, r7
 80117b0:	da54      	bge.n	801185c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 80117b2:	f04f 0e00 	mov.w	lr, #0
 80117b6:	45ae      	cmp	lr, r5
 80117b8:	da41      	bge.n	801183e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 80117ba:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 80117be:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 80117c2:	1208      	asrs	r0, r1, #8
 80117c4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80117c8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80117cc:	fb10 f008 	smulbb	r0, r0, r8
 80117d0:	ea4f 09e1 	mov.w	r9, r1, asr #3
 80117d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80117d8:	00c9      	lsls	r1, r1, #3
 80117da:	fb0c 0c03 	mla	ip, ip, r3, r0
 80117de:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80117e2:	10d0      	asrs	r0, r2, #3
 80117e4:	b2c9      	uxtb	r1, r1
 80117e6:	00d2      	lsls	r2, r2, #3
 80117e8:	fa1f fc8c 	uxth.w	ip, ip
 80117ec:	fb19 f908 	smulbb	r9, r9, r8
 80117f0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80117f4:	b2d2      	uxtb	r2, r2
 80117f6:	fb11 f108 	smulbb	r1, r1, r8
 80117fa:	fb00 9003 	mla	r0, r0, r3, r9
 80117fe:	fb02 1203 	mla	r2, r2, r3, r1
 8011802:	f10c 0901 	add.w	r9, ip, #1
 8011806:	b292      	uxth	r2, r2
 8011808:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801180c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8011810:	f102 0c01 	add.w	ip, r2, #1
 8011814:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8011818:	b280      	uxth	r0, r0
 801181a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801181e:	ea49 0c02 	orr.w	ip, r9, r2
 8011822:	f100 0901 	add.w	r9, r0, #1
 8011826:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 801182a:	0940      	lsrs	r0, r0, #5
 801182c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011830:	ea4c 0c00 	orr.w	ip, ip, r0
 8011834:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 8011838:	f10e 0e01 	add.w	lr, lr, #1
 801183c:	e7bb      	b.n	80117b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 801183e:	9a07      	ldr	r2, [sp, #28]
 8011840:	8812      	ldrh	r2, [r2, #0]
 8011842:	1b52      	subs	r2, r2, r5
 8011844:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8011848:	4414      	add	r4, r2
 801184a:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 801184e:	1b52      	subs	r2, r2, r5
 8011850:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8011854:	4416      	add	r6, r2
 8011856:	f10b 0b01 	add.w	fp, fp, #1
 801185a:	e7a8      	b.n	80117ae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 801185c:	4b03      	ldr	r3, [pc, #12]	; (801186c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 801185e:	6818      	ldr	r0, [r3, #0]
 8011860:	6803      	ldr	r3, [r0, #0]
 8011862:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011864:	4798      	blx	r3
 8011866:	e762      	b.n	801172e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8011868:	200123b6 	.word	0x200123b6
 801186c:	200123bc 	.word	0x200123bc

08011870 <_ZN8touchgfx8LCD16bppD0Ev>:
 8011870:	b510      	push	{r4, lr}
 8011872:	2178      	movs	r1, #120	; 0x78
 8011874:	4604      	mov	r4, r0
 8011876:	f008 ff8b 	bl	801a790 <_ZdlPvj>
 801187a:	4620      	mov	r0, r4
 801187c:	bd10      	pop	{r4, pc}

0801187e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801187e:	b510      	push	{r4, lr}
 8011880:	2104      	movs	r1, #4
 8011882:	4604      	mov	r4, r0
 8011884:	f008 ff84 	bl	801a790 <_ZdlPvj>
 8011888:	4620      	mov	r0, r4
 801188a:	bd10      	pop	{r4, pc}

0801188c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801188c:	b510      	push	{r4, lr}
 801188e:	2104      	movs	r1, #4
 8011890:	4604      	mov	r4, r0
 8011892:	f008 ff7d 	bl	801a790 <_ZdlPvj>
 8011896:	4620      	mov	r0, r4
 8011898:	bd10      	pop	{r4, pc}

0801189a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801189a:	b510      	push	{r4, lr}
 801189c:	2104      	movs	r1, #4
 801189e:	4604      	mov	r4, r0
 80118a0:	f008 ff76 	bl	801a790 <_ZdlPvj>
 80118a4:	4620      	mov	r0, r4
 80118a6:	bd10      	pop	{r4, pc}

080118a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80118a8:	b510      	push	{r4, lr}
 80118aa:	2104      	movs	r1, #4
 80118ac:	4604      	mov	r4, r0
 80118ae:	f008 ff6f 	bl	801a790 <_ZdlPvj>
 80118b2:	4620      	mov	r0, r4
 80118b4:	bd10      	pop	{r4, pc}

080118b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80118b6:	b510      	push	{r4, lr}
 80118b8:	2104      	movs	r1, #4
 80118ba:	4604      	mov	r4, r0
 80118bc:	f008 ff68 	bl	801a790 <_ZdlPvj>
 80118c0:	4620      	mov	r0, r4
 80118c2:	bd10      	pop	{r4, pc}

080118c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80118c4:	b510      	push	{r4, lr}
 80118c6:	2104      	movs	r1, #4
 80118c8:	4604      	mov	r4, r0
 80118ca:	f008 ff61 	bl	801a790 <_ZdlPvj>
 80118ce:	4620      	mov	r0, r4
 80118d0:	bd10      	pop	{r4, pc}

080118d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80118d2:	b510      	push	{r4, lr}
 80118d4:	2104      	movs	r1, #4
 80118d6:	4604      	mov	r4, r0
 80118d8:	f008 ff5a 	bl	801a790 <_ZdlPvj>
 80118dc:	4620      	mov	r0, r4
 80118de:	bd10      	pop	{r4, pc}

080118e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80118e0:	b510      	push	{r4, lr}
 80118e2:	2104      	movs	r1, #4
 80118e4:	4604      	mov	r4, r0
 80118e6:	f008 ff53 	bl	801a790 <_ZdlPvj>
 80118ea:	4620      	mov	r0, r4
 80118ec:	bd10      	pop	{r4, pc}

080118ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80118ee:	b510      	push	{r4, lr}
 80118f0:	2104      	movs	r1, #4
 80118f2:	4604      	mov	r4, r0
 80118f4:	f008 ff4c 	bl	801a790 <_ZdlPvj>
 80118f8:	4620      	mov	r0, r4
 80118fa:	bd10      	pop	{r4, pc}

080118fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80118fc:	b510      	push	{r4, lr}
 80118fe:	2104      	movs	r1, #4
 8011900:	4604      	mov	r4, r0
 8011902:	f008 ff45 	bl	801a790 <_ZdlPvj>
 8011906:	4620      	mov	r0, r4
 8011908:	bd10      	pop	{r4, pc}

0801190a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801190a:	b510      	push	{r4, lr}
 801190c:	2104      	movs	r1, #4
 801190e:	4604      	mov	r4, r0
 8011910:	f008 ff3e 	bl	801a790 <_ZdlPvj>
 8011914:	4620      	mov	r0, r4
 8011916:	bd10      	pop	{r4, pc}

08011918 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011918:	b510      	push	{r4, lr}
 801191a:	2104      	movs	r1, #4
 801191c:	4604      	mov	r4, r0
 801191e:	f008 ff37 	bl	801a790 <_ZdlPvj>
 8011922:	4620      	mov	r0, r4
 8011924:	bd10      	pop	{r4, pc}

08011926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011926:	b510      	push	{r4, lr}
 8011928:	2104      	movs	r1, #4
 801192a:	4604      	mov	r4, r0
 801192c:	f008 ff30 	bl	801a790 <_ZdlPvj>
 8011930:	4620      	mov	r0, r4
 8011932:	bd10      	pop	{r4, pc}

08011934 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011934:	b510      	push	{r4, lr}
 8011936:	2104      	movs	r1, #4
 8011938:	4604      	mov	r4, r0
 801193a:	f008 ff29 	bl	801a790 <_ZdlPvj>
 801193e:	4620      	mov	r0, r4
 8011940:	bd10      	pop	{r4, pc}

08011942 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011942:	b510      	push	{r4, lr}
 8011944:	2104      	movs	r1, #4
 8011946:	4604      	mov	r4, r0
 8011948:	f008 ff22 	bl	801a790 <_ZdlPvj>
 801194c:	4620      	mov	r0, r4
 801194e:	bd10      	pop	{r4, pc}

08011950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011950:	b510      	push	{r4, lr}
 8011952:	2104      	movs	r1, #4
 8011954:	4604      	mov	r4, r0
 8011956:	f008 ff1b 	bl	801a790 <_ZdlPvj>
 801195a:	4620      	mov	r0, r4
 801195c:	bd10      	pop	{r4, pc}

0801195e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801195e:	b510      	push	{r4, lr}
 8011960:	2104      	movs	r1, #4
 8011962:	4604      	mov	r4, r0
 8011964:	f008 ff14 	bl	801a790 <_ZdlPvj>
 8011968:	4620      	mov	r0, r4
 801196a:	bd10      	pop	{r4, pc}

0801196c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801196c:	b510      	push	{r4, lr}
 801196e:	2104      	movs	r1, #4
 8011970:	4604      	mov	r4, r0
 8011972:	f008 ff0d 	bl	801a790 <_ZdlPvj>
 8011976:	4620      	mov	r0, r4
 8011978:	bd10      	pop	{r4, pc}

0801197a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801197a:	b510      	push	{r4, lr}
 801197c:	2104      	movs	r1, #4
 801197e:	4604      	mov	r4, r0
 8011980:	f008 ff06 	bl	801a790 <_ZdlPvj>
 8011984:	4620      	mov	r0, r4
 8011986:	bd10      	pop	{r4, pc}

08011988 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011988:	b510      	push	{r4, lr}
 801198a:	2104      	movs	r1, #4
 801198c:	4604      	mov	r4, r0
 801198e:	f008 feff 	bl	801a790 <_ZdlPvj>
 8011992:	4620      	mov	r0, r4
 8011994:	bd10      	pop	{r4, pc}

08011996 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011996:	b510      	push	{r4, lr}
 8011998:	2104      	movs	r1, #4
 801199a:	4604      	mov	r4, r0
 801199c:	f008 fef8 	bl	801a790 <_ZdlPvj>
 80119a0:	4620      	mov	r0, r4
 80119a2:	bd10      	pop	{r4, pc}

080119a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80119a4:	b510      	push	{r4, lr}
 80119a6:	2104      	movs	r1, #4
 80119a8:	4604      	mov	r4, r0
 80119aa:	f008 fef1 	bl	801a790 <_ZdlPvj>
 80119ae:	4620      	mov	r0, r4
 80119b0:	bd10      	pop	{r4, pc}

080119b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80119b2:	b510      	push	{r4, lr}
 80119b4:	2104      	movs	r1, #4
 80119b6:	4604      	mov	r4, r0
 80119b8:	f008 feea 	bl	801a790 <_ZdlPvj>
 80119bc:	4620      	mov	r0, r4
 80119be:	bd10      	pop	{r4, pc}

080119c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80119c0:	b510      	push	{r4, lr}
 80119c2:	2104      	movs	r1, #4
 80119c4:	4604      	mov	r4, r0
 80119c6:	f008 fee3 	bl	801a790 <_ZdlPvj>
 80119ca:	4620      	mov	r0, r4
 80119cc:	bd10      	pop	{r4, pc}

080119ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80119ce:	b510      	push	{r4, lr}
 80119d0:	2104      	movs	r1, #4
 80119d2:	4604      	mov	r4, r0
 80119d4:	f008 fedc 	bl	801a790 <_ZdlPvj>
 80119d8:	4620      	mov	r0, r4
 80119da:	bd10      	pop	{r4, pc}

080119dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80119dc:	b510      	push	{r4, lr}
 80119de:	2104      	movs	r1, #4
 80119e0:	4604      	mov	r4, r0
 80119e2:	f008 fed5 	bl	801a790 <_ZdlPvj>
 80119e6:	4620      	mov	r0, r4
 80119e8:	bd10      	pop	{r4, pc}

080119ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80119ea:	b510      	push	{r4, lr}
 80119ec:	2104      	movs	r1, #4
 80119ee:	4604      	mov	r4, r0
 80119f0:	f008 fece 	bl	801a790 <_ZdlPvj>
 80119f4:	4620      	mov	r0, r4
 80119f6:	bd10      	pop	{r4, pc}

080119f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80119f8:	b510      	push	{r4, lr}
 80119fa:	2104      	movs	r1, #4
 80119fc:	4604      	mov	r4, r0
 80119fe:	f008 fec7 	bl	801a790 <_ZdlPvj>
 8011a02:	4620      	mov	r0, r4
 8011a04:	bd10      	pop	{r4, pc}
	...

08011a08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8011a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a0c:	460e      	mov	r6, r1
 8011a0e:	b08b      	sub	sp, #44	; 0x2c
 8011a10:	4615      	mov	r5, r2
 8011a12:	461c      	mov	r4, r3
 8011a14:	b323      	cbz	r3, 8011a60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011a16:	4608      	mov	r0, r1
 8011a18:	f7f8 f9af 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a1c:	bb00      	cbnz	r0, 8011a60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011a1e:	6830      	ldr	r0, [r6, #0]
 8011a20:	6871      	ldr	r1, [r6, #4]
 8011a22:	4e55      	ldr	r6, [pc, #340]	; (8011b78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8011a24:	ab08      	add	r3, sp, #32
 8011a26:	c303      	stmia	r3!, {r0, r1}
 8011a28:	a808      	add	r0, sp, #32
 8011a2a:	f7fb f86f 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011a2e:	6830      	ldr	r0, [r6, #0]
 8011a30:	6803      	ldr	r3, [r0, #0]
 8011a32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011a34:	4798      	blx	r3
 8011a36:	2cff      	cmp	r4, #255	; 0xff
 8011a38:	d015      	beq.n	8011a66 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8011a3a:	f010 0f08 	tst.w	r0, #8
 8011a3e:	d015      	beq.n	8011a6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8011a40:	6830      	ldr	r0, [r6, #0]
 8011a42:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011a46:	6801      	ldr	r1, [r0, #0]
 8011a48:	9402      	str	r4, [sp, #8]
 8011a4a:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8011a4e:	9401      	str	r4, [sp, #4]
 8011a50:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8011a54:	9400      	str	r4, [sp, #0]
 8011a56:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8011a58:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8011a5c:	4629      	mov	r1, r5
 8011a5e:	47a0      	blx	r4
 8011a60:	b00b      	add	sp, #44	; 0x2c
 8011a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a66:	f010 0f02 	tst.w	r0, #2
 8011a6a:	e7e8      	b.n	8011a3e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8011a6c:	6830      	ldr	r0, [r6, #0]
 8011a6e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8011a72:	6803      	ldr	r3, [r0, #0]
 8011a74:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8011a78:	6a1b      	ldr	r3, [r3, #32]
 8011a7a:	4798      	blx	r3
 8011a7c:	4a3f      	ldr	r2, [pc, #252]	; (8011b7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8011a7e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8011a82:	8816      	ldrh	r6, [r2, #0]
 8011a84:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011a88:	2cff      	cmp	r4, #255	; 0xff
 8011a8a:	fb06 1303 	mla	r3, r6, r3, r1
 8011a8e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011a92:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8011a96:	4616      	mov	r6, r2
 8011a98:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8011a9c:	d10a      	bne.n	8011ab4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8011a9e:	0049      	lsls	r1, r1, #1
 8011aa0:	2200      	movs	r2, #0
 8011aa2:	454a      	cmp	r2, r9
 8011aa4:	da61      	bge.n	8011b6a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 8011aa6:	2300      	movs	r3, #0
 8011aa8:	4543      	cmp	r3, r8
 8011aaa:	da57      	bge.n	8011b5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x154>
 8011aac:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8011ab0:	3301      	adds	r3, #1
 8011ab2:	e7f9      	b.n	8011aa8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8011ab4:	0a2b      	lsrs	r3, r5, #8
 8011ab6:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8011aba:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8011abe:	b2a4      	uxth	r4, r4
 8011ac0:	4363      	muls	r3, r4
 8011ac2:	9305      	str	r3, [sp, #20]
 8011ac4:	08ee      	lsrs	r6, r5, #3
 8011ac6:	00eb      	lsls	r3, r5, #3
 8011ac8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011acc:	b2db      	uxtb	r3, r3
 8011ace:	0049      	lsls	r1, r1, #1
 8011ad0:	4366      	muls	r6, r4
 8011ad2:	4363      	muls	r3, r4
 8011ad4:	9106      	str	r1, [sp, #24]
 8011ad6:	f04f 0c00 	mov.w	ip, #0
 8011ada:	b2bf      	uxth	r7, r7
 8011adc:	9207      	str	r2, [sp, #28]
 8011ade:	45cc      	cmp	ip, r9
 8011ae0:	da43      	bge.n	8011b6a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 8011ae2:	4682      	mov	sl, r0
 8011ae4:	f04f 0e00 	mov.w	lr, #0
 8011ae8:	45c6      	cmp	lr, r8
 8011aea:	da2d      	bge.n	8011b48 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8011aec:	f8ba 2000 	ldrh.w	r2, [sl]
 8011af0:	9905      	ldr	r1, [sp, #20]
 8011af2:	1214      	asrs	r4, r2, #8
 8011af4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8011af8:	fb14 f407 	smulbb	r4, r4, r7
 8011afc:	440c      	add	r4, r1
 8011afe:	10d1      	asrs	r1, r2, #3
 8011b00:	00d2      	lsls	r2, r2, #3
 8011b02:	b2d2      	uxtb	r2, r2
 8011b04:	fb12 f207 	smulbb	r2, r2, r7
 8011b08:	b2a4      	uxth	r4, r4
 8011b0a:	441a      	add	r2, r3
 8011b0c:	b292      	uxth	r2, r2
 8011b0e:	1c65      	adds	r5, r4, #1
 8011b10:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011b14:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8011b18:	fb11 f107 	smulbb	r1, r1, r7
 8011b1c:	1c55      	adds	r5, r2, #1
 8011b1e:	4431      	add	r1, r6
 8011b20:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8011b24:	b289      	uxth	r1, r1
 8011b26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011b2a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8011b2e:	4314      	orrs	r4, r2
 8011b30:	1c4a      	adds	r2, r1, #1
 8011b32:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8011b36:	0949      	lsrs	r1, r1, #5
 8011b38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011b3c:	430c      	orrs	r4, r1
 8011b3e:	f82a 4b02 	strh.w	r4, [sl], #2
 8011b42:	f10e 0e01 	add.w	lr, lr, #1
 8011b46:	e7cf      	b.n	8011ae8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe0>
 8011b48:	9a07      	ldr	r2, [sp, #28]
 8011b4a:	9906      	ldr	r1, [sp, #24]
 8011b4c:	8812      	ldrh	r2, [r2, #0]
 8011b4e:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8011b52:	440a      	add	r2, r1
 8011b54:	4410      	add	r0, r2
 8011b56:	f10c 0c01 	add.w	ip, ip, #1
 8011b5a:	e7c0      	b.n	8011ade <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd6>
 8011b5c:	8833      	ldrh	r3, [r6, #0]
 8011b5e:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8011b62:	440b      	add	r3, r1
 8011b64:	4418      	add	r0, r3
 8011b66:	3201      	adds	r2, #1
 8011b68:	e79b      	b.n	8011aa2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8011b6a:	4b03      	ldr	r3, [pc, #12]	; (8011b78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8011b6c:	6818      	ldr	r0, [r3, #0]
 8011b6e:	6803      	ldr	r3, [r0, #0]
 8011b70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011b72:	4798      	blx	r3
 8011b74:	e774      	b.n	8011a60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011b76:	bf00      	nop
 8011b78:	200123bc 	.word	0x200123bc
 8011b7c:	200123b6 	.word	0x200123b6

08011b80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8011b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b84:	4d9b      	ldr	r5, [pc, #620]	; (8011df4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8011b86:	4690      	mov	r8, r2
 8011b88:	682a      	ldr	r2, [r5, #0]
 8011b8a:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8011b8e:	2a02      	cmp	r2, #2
 8011b90:	b08f      	sub	sp, #60	; 0x3c
 8011b92:	4604      	mov	r4, r0
 8011b94:	4689      	mov	r9, r1
 8011b96:	d106      	bne.n	8011ba6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8011b98:	4b97      	ldr	r3, [pc, #604]	; (8011df8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8011b9a:	4a98      	ldr	r2, [pc, #608]	; (8011dfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011b9c:	f240 21be 	movw	r1, #702	; 0x2be
 8011ba0:	4897      	ldr	r0, [pc, #604]	; (8011e00 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8011ba2:	f008 fe21 	bl	801a7e8 <__assert_func>
 8011ba6:	ae0e      	add	r6, sp, #56	; 0x38
 8011ba8:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8011bac:	4630      	mov	r0, r6
 8011bae:	f7fd fad9 	bl	800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011bb2:	6823      	ldr	r3, [r4, #0]
 8011bb4:	4607      	mov	r7, r0
 8011bb6:	6a1b      	ldr	r3, [r3, #32]
 8011bb8:	4620      	mov	r0, r4
 8011bba:	4798      	blx	r3
 8011bbc:	4287      	cmp	r7, r0
 8011bbe:	d004      	beq.n	8011bca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8011bc0:	4b90      	ldr	r3, [pc, #576]	; (8011e04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8011bc2:	4a8e      	ldr	r2, [pc, #568]	; (8011dfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011bc4:	f44f 7130 	mov.w	r1, #704	; 0x2c0
 8011bc8:	e7ea      	b.n	8011ba0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011bca:	4630      	mov	r0, r6
 8011bcc:	f7fd fa46 	bl	800f05c <_ZNK8touchgfx6Bitmap7getDataEv>
 8011bd0:	4607      	mov	r7, r0
 8011bd2:	b920      	cbnz	r0, 8011bde <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8011bd4:	4b8c      	ldr	r3, [pc, #560]	; (8011e08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 8011bd6:	4a89      	ldr	r2, [pc, #548]	; (8011dfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011bd8:	f240 21c2 	movw	r1, #706	; 0x2c2
 8011bdc:	e7e0      	b.n	8011ba0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011bde:	f8d8 0000 	ldr.w	r0, [r8]
 8011be2:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011be6:	f9b8 a000 	ldrsh.w	sl, [r8]
 8011bea:	ab06      	add	r3, sp, #24
 8011bec:	c303      	stmia	r3!, {r0, r1}
 8011bee:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8011bf2:	f8d9 0000 	ldr.w	r0, [r9]
 8011bf6:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 8011bfa:	ab08      	add	r3, sp, #32
 8011bfc:	c303      	stmia	r3!, {r0, r1}
 8011bfe:	4630      	mov	r0, r6
 8011c00:	f7fd f924 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011c04:	4680      	mov	r8, r0
 8011c06:	4630      	mov	r0, r6
 8011c08:	f7fd f95a 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011c0c:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011c10:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8011c14:	f10d 0920 	add.w	r9, sp, #32
 8011c18:	a806      	add	r0, sp, #24
 8011c1a:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8011c1e:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8011c22:	f7fa ff73 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011c26:	4648      	mov	r0, r9
 8011c28:	f7fa ff70 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011c2c:	a80a      	add	r0, sp, #40	; 0x28
 8011c2e:	f7fa ff6d 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011c32:	4e76      	ldr	r6, [pc, #472]	; (8011e0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8011c34:	4b76      	ldr	r3, [pc, #472]	; (8011e10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8011c36:	f9b6 2000 	ldrsh.w	r2, [r6]
 8011c3a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011c3e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011c42:	2100      	movs	r1, #0
 8011c44:	910c      	str	r1, [sp, #48]	; 0x30
 8011c46:	4648      	mov	r0, r9
 8011c48:	a90c      	add	r1, sp, #48	; 0x30
 8011c4a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011c4e:	f7f8 f851 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 8011c52:	4648      	mov	r0, r9
 8011c54:	f7f8 f891 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c58:	2800      	cmp	r0, #0
 8011c5a:	f040 80bd 	bne.w	8011dd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011c5e:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8011c62:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8011c66:	4288      	cmp	r0, r1
 8011c68:	db37      	blt.n	8011cda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011c6a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8011c6e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011c72:	429a      	cmp	r2, r3
 8011c74:	db31      	blt.n	8011cda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011c76:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8011c7a:	4460      	add	r0, ip
 8011c7c:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8011c80:	4461      	add	r1, ip
 8011c82:	b200      	sxth	r0, r0
 8011c84:	b209      	sxth	r1, r1
 8011c86:	4288      	cmp	r0, r1
 8011c88:	dc27      	bgt.n	8011cda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011c8a:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011c8e:	440a      	add	r2, r1
 8011c90:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8011c94:	440b      	add	r3, r1
 8011c96:	b212      	sxth	r2, r2
 8011c98:	b21b      	sxth	r3, r3
 8011c9a:	429a      	cmp	r2, r3
 8011c9c:	dc1d      	bgt.n	8011cda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011c9e:	6823      	ldr	r3, [r4, #0]
 8011ca0:	4620      	mov	r0, r4
 8011ca2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ca4:	4798      	blx	r3
 8011ca6:	4682      	mov	sl, r0
 8011ca8:	6828      	ldr	r0, [r5, #0]
 8011caa:	6803      	ldr	r3, [r0, #0]
 8011cac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011cae:	4798      	blx	r3
 8011cb0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011cb4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011cb8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8011cbc:	1a9b      	subs	r3, r3, r2
 8011cbe:	b29b      	uxth	r3, r3
 8011cc0:	b21c      	sxth	r4, r3
 8011cc2:	2c00      	cmp	r4, #0
 8011cc4:	dc0e      	bgt.n	8011ce4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8011cc6:	bf1f      	itttt	ne
 8011cc8:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8011ccc:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8011cd0:	189b      	addne	r3, r3, r2
 8011cd2:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8011cd6:	463c      	mov	r4, r7
 8011cd8:	e00a      	b.n	8011cf0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8011cda:	4b4e      	ldr	r3, [pc, #312]	; (8011e14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8011cdc:	4a47      	ldr	r2, [pc, #284]	; (8011dfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011cde:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 8011ce2:	e75d      	b.n	8011ba0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011ce4:	ebab 0303 	sub.w	r3, fp, r3
 8011ce8:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8011cec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8011cf0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011cf4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011cf8:	1a5b      	subs	r3, r3, r1
 8011cfa:	b29b      	uxth	r3, r3
 8011cfc:	b21a      	sxth	r2, r3
 8011cfe:	2a00      	cmp	r2, #0
 8011d00:	dd4a      	ble.n	8011d98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8011d02:	fb02 f20b 	mul.w	r2, r2, fp
 8011d06:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8011d0a:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8011d0e:	1ad3      	subs	r3, r2, r3
 8011d10:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011d14:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8011d18:	2b00      	cmp	r3, #0
 8011d1a:	dd5d      	ble.n	8011dd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011d1c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8011d20:	f1bc 0f00 	cmp.w	ip, #0
 8011d24:	dd58      	ble.n	8011dd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011d26:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8011d2a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011d2e:	fb0a f801 	mul.w	r8, sl, r1
 8011d32:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8011d36:	4480      	add	r8, r0
 8011d38:	8830      	ldrh	r0, [r6, #0]
 8011d3a:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8011d3e:	42b3      	cmp	r3, r6
 8011d40:	bfa8      	it	ge
 8011d42:	4633      	movge	r3, r6
 8011d44:	1a82      	subs	r2, r0, r2
 8011d46:	4293      	cmp	r3, r2
 8011d48:	bfa8      	it	ge
 8011d4a:	4613      	movge	r3, r2
 8011d4c:	4a30      	ldr	r2, [pc, #192]	; (8011e10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8011d4e:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8011d52:	8812      	ldrh	r2, [r2, #0]
 8011d54:	4566      	cmp	r6, ip
 8011d56:	eba2 0101 	sub.w	r1, r2, r1
 8011d5a:	bfa8      	it	ge
 8011d5c:	4666      	movge	r6, ip
 8011d5e:	428e      	cmp	r6, r1
 8011d60:	4632      	mov	r2, r6
 8011d62:	bfa8      	it	ge
 8011d64:	460a      	movge	r2, r1
 8011d66:	4298      	cmp	r0, r3
 8011d68:	9202      	str	r2, [sp, #8]
 8011d6a:	d01e      	beq.n	8011daa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8011d6c:	005b      	lsls	r3, r3, #1
 8011d6e:	9303      	str	r3, [sp, #12]
 8011d70:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8011d74:	f04f 0900 	mov.w	r9, #0
 8011d78:	9b02      	ldr	r3, [sp, #8]
 8011d7a:	454b      	cmp	r3, r9
 8011d7c:	dd2c      	ble.n	8011dd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011d7e:	6828      	ldr	r0, [r5, #0]
 8011d80:	6803      	ldr	r3, [r0, #0]
 8011d82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d84:	4642      	mov	r2, r8
 8011d86:	461e      	mov	r6, r3
 8011d88:	4621      	mov	r1, r4
 8011d8a:	9b03      	ldr	r3, [sp, #12]
 8011d8c:	47b0      	blx	r6
 8011d8e:	44d0      	add	r8, sl
 8011d90:	445c      	add	r4, fp
 8011d92:	f109 0901 	add.w	r9, r9, #1
 8011d96:	e7ef      	b.n	8011d78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8011d98:	bf1f      	itttt	ne
 8011d9a:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8011d9e:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 8011da2:	189b      	addne	r3, r3, r2
 8011da4:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8011da8:	e7b4      	b.n	8011d14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8011daa:	4558      	cmp	r0, fp
 8011dac:	d1de      	bne.n	8011d6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8011dae:	6828      	ldr	r0, [r5, #0]
 8011db0:	6803      	ldr	r3, [r0, #0]
 8011db2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011db4:	4798      	blx	r3
 8011db6:	07c3      	lsls	r3, r0, #31
 8011db8:	d512      	bpl.n	8011de0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8011dba:	6828      	ldr	r0, [r5, #0]
 8011dbc:	9b02      	ldr	r3, [sp, #8]
 8011dbe:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8011dc2:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011dc6:	6803      	ldr	r3, [r0, #0]
 8011dc8:	f8cd b000 	str.w	fp, [sp]
 8011dcc:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8011dce:	e899 0006 	ldmia.w	r9, {r1, r2}
 8011dd2:	4623      	mov	r3, r4
 8011dd4:	47a8      	blx	r5
 8011dd6:	4607      	mov	r7, r0
 8011dd8:	4638      	mov	r0, r7
 8011dda:	b00f      	add	sp, #60	; 0x3c
 8011ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011de0:	6828      	ldr	r0, [r5, #0]
 8011de2:	6803      	ldr	r3, [r0, #0]
 8011de4:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8011de6:	9b02      	ldr	r3, [sp, #8]
 8011de8:	4642      	mov	r2, r8
 8011dea:	fb03 f30a 	mul.w	r3, r3, sl
 8011dee:	4621      	mov	r1, r4
 8011df0:	47a8      	blx	r5
 8011df2:	e7f1      	b.n	8011dd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011df4:	200123bc 	.word	0x200123bc
 8011df8:	0801e957 	.word	0x0801e957
 8011dfc:	0801f193 	.word	0x0801f193
 8011e00:	0801ea09 	.word	0x0801ea09
 8011e04:	0801ea3b 	.word	0x0801ea3b
 8011e08:	0801ea90 	.word	0x0801ea90
 8011e0c:	200123b6 	.word	0x200123b6
 8011e10:	200123b8 	.word	0x200123b8
 8011e14:	0801eace 	.word	0x0801eace

08011e18 <_ZN8touchgfx8LCD16bppC1Ev>:
 8011e18:	2200      	movs	r2, #0
 8011e1a:	4910      	ldr	r1, [pc, #64]	; (8011e5c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8011e1c:	6042      	str	r2, [r0, #4]
 8011e1e:	6001      	str	r1, [r0, #0]
 8011e20:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8011e24:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8011e28:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8011e2c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8011e30:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8011e34:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8011e38:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8011e3c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8011e40:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8011e44:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8011e48:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8011e4c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8011e50:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8011e54:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8011e58:	4770      	bx	lr
 8011e5a:	bf00      	nop
 8011e5c:	0801ee10 	.word	0x0801ee10

08011e60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8011e60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e64:	460c      	mov	r4, r1
 8011e66:	b08d      	sub	sp, #52	; 0x34
 8011e68:	4682      	mov	sl, r0
 8011e6a:	6808      	ldr	r0, [r1, #0]
 8011e6c:	6849      	ldr	r1, [r1, #4]
 8011e6e:	469b      	mov	fp, r3
 8011e70:	ab08      	add	r3, sp, #32
 8011e72:	c303      	stmia	r3!, {r0, r1}
 8011e74:	6810      	ldr	r0, [r2, #0]
 8011e76:	6851      	ldr	r1, [r2, #4]
 8011e78:	ab0a      	add	r3, sp, #40	; 0x28
 8011e7a:	c303      	stmia	r3!, {r0, r1}
 8011e7c:	a808      	add	r0, sp, #32
 8011e7e:	f7fa fe45 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011e82:	4621      	mov	r1, r4
 8011e84:	a80a      	add	r0, sp, #40	; 0x28
 8011e86:	f7fa fe29 	bl	800cadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011e8a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011e8e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8011e92:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8011e96:	4c60      	ldr	r4, [pc, #384]	; (8012018 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8011e98:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8011e9c:	6820      	ldr	r0, [r4, #0]
 8011e9e:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 8011ea2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011ea6:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8011eaa:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8011eae:	440a      	add	r2, r1
 8011eb0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011eb4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011eb8:	4413      	add	r3, r2
 8011eba:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011ebe:	6803      	ldr	r3, [r0, #0]
 8011ec0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011ec2:	4798      	blx	r3
 8011ec4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8011ec8:	d119      	bne.n	8011efe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8011eca:	f010 0f20 	tst.w	r0, #32
 8011ece:	6820      	ldr	r0, [r4, #0]
 8011ed0:	d018      	beq.n	8011f04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8011ed2:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8011ed6:	6801      	ldr	r1, [r0, #0]
 8011ed8:	9402      	str	r4, [sp, #8]
 8011eda:	fa1f f489 	uxth.w	r4, r9
 8011ede:	9401      	str	r4, [sp, #4]
 8011ee0:	fa1f f488 	uxth.w	r4, r8
 8011ee4:	f8cd b00c 	str.w	fp, [sp, #12]
 8011ee8:	9400      	str	r4, [sp, #0]
 8011eea:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8011eec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8011ef0:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8011ef4:	4651      	mov	r1, sl
 8011ef6:	47a0      	blx	r4
 8011ef8:	b00d      	add	sp, #52	; 0x34
 8011efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011efe:	f010 0f40 	tst.w	r0, #64	; 0x40
 8011f02:	e7e4      	b.n	8011ece <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8011f04:	6803      	ldr	r3, [r0, #0]
 8011f06:	6a1b      	ldr	r3, [r3, #32]
 8011f08:	4798      	blx	r3
 8011f0a:	4a44      	ldr	r2, [pc, #272]	; (801201c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8011f0c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8011f10:	8813      	ldrh	r3, [r2, #0]
 8011f12:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8011f16:	9207      	str	r2, [sp, #28]
 8011f18:	fb04 1303 	mla	r3, r4, r3, r1
 8011f1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011f20:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8011f24:	0099      	lsls	r1, r3, #2
 8011f26:	005b      	lsls	r3, r3, #1
 8011f28:	9106      	str	r1, [sp, #24]
 8011f2a:	9305      	str	r3, [sp, #20]
 8011f2c:	f04f 0c00 	mov.w	ip, #0
 8011f30:	45cc      	cmp	ip, r9
 8011f32:	da6b      	bge.n	801200c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8011f34:	2300      	movs	r3, #0
 8011f36:	4543      	cmp	r3, r8
 8011f38:	da55      	bge.n	8011fe6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 8011f3a:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 8011f3e:	0e25      	lsrs	r5, r4, #24
 8011f40:	d013      	beq.n	8011f6a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8011f42:	2dff      	cmp	r5, #255	; 0xff
 8011f44:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8011f48:	d111      	bne.n	8011f6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8011f4a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8011f4e:	d10e      	bne.n	8011f6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8011f50:	0962      	lsrs	r2, r4, #5
 8011f52:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8011f56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011f5a:	f027 0707 	bic.w	r7, r7, #7
 8011f5e:	4317      	orrs	r7, r2
 8011f60:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011f64:	433c      	orrs	r4, r7
 8011f66:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8011f6a:	3301      	adds	r3, #1
 8011f6c:	e7e3      	b.n	8011f36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8011f6e:	fb0b f505 	mul.w	r5, fp, r5
 8011f72:	1c6a      	adds	r2, r5, #1
 8011f74:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8011f78:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8011f7c:	1212      	asrs	r2, r2, #8
 8011f7e:	fa1f fe82 	uxth.w	lr, r2
 8011f82:	120e      	asrs	r6, r1, #8
 8011f84:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8011f88:	43d2      	mvns	r2, r2
 8011f8a:	b2d2      	uxtb	r2, r2
 8011f8c:	fb15 f50e 	smulbb	r5, r5, lr
 8011f90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011f94:	fb06 5602 	mla	r6, r6, r2, r5
 8011f98:	b2e4      	uxtb	r4, r4
 8011f9a:	10cd      	asrs	r5, r1, #3
 8011f9c:	00c9      	lsls	r1, r1, #3
 8011f9e:	b2c9      	uxtb	r1, r1
 8011fa0:	fb14 f40e 	smulbb	r4, r4, lr
 8011fa4:	fb01 4402 	mla	r4, r1, r2, r4
 8011fa8:	b2ff      	uxtb	r7, r7
 8011faa:	b2b6      	uxth	r6, r6
 8011fac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011fb0:	b2a4      	uxth	r4, r4
 8011fb2:	fb17 f70e 	smulbb	r7, r7, lr
 8011fb6:	fb05 7702 	mla	r7, r5, r2, r7
 8011fba:	1c72      	adds	r2, r6, #1
 8011fbc:	1c65      	adds	r5, r4, #1
 8011fbe:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011fc2:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8011fc6:	b2bf      	uxth	r7, r7
 8011fc8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011fcc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011fd0:	432e      	orrs	r6, r5
 8011fd2:	1c7d      	adds	r5, r7, #1
 8011fd4:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011fd8:	097f      	lsrs	r7, r7, #5
 8011fda:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011fde:	433e      	orrs	r6, r7
 8011fe0:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8011fe4:	e7c1      	b.n	8011f6a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8011fe6:	9b07      	ldr	r3, [sp, #28]
 8011fe8:	9a05      	ldr	r2, [sp, #20]
 8011fea:	881b      	ldrh	r3, [r3, #0]
 8011fec:	eba3 0308 	sub.w	r3, r3, r8
 8011ff0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011ff4:	4418      	add	r0, r3
 8011ff6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8011ffa:	9a06      	ldr	r2, [sp, #24]
 8011ffc:	eba3 0308 	sub.w	r3, r3, r8
 8012000:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8012004:	449a      	add	sl, r3
 8012006:	f10c 0c01 	add.w	ip, ip, #1
 801200a:	e791      	b.n	8011f30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 801200c:	4b02      	ldr	r3, [pc, #8]	; (8012018 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 801200e:	6818      	ldr	r0, [r3, #0]
 8012010:	6803      	ldr	r3, [r0, #0]
 8012012:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012014:	4798      	blx	r3
 8012016:	e76f      	b.n	8011ef8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012018:	200123bc 	.word	0x200123bc
 801201c:	200123b6 	.word	0x200123b6

08012020 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012020:	b570      	push	{r4, r5, r6, lr}
 8012022:	9d04      	ldr	r5, [sp, #16]
 8012024:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012028:	460c      	mov	r4, r1
 801202a:	4619      	mov	r1, r3
 801202c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012030:	2a0c      	cmp	r2, #12
 8012032:	d820      	bhi.n	8012076 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8012034:	e8df f002 	tbb	[pc, r2]
 8012038:	18121807 	.word	0x18121807
 801203c:	18181818 	.word	0x18181818
 8012040:	18181818 	.word	0x18181818
 8012044:	18          	.byte	0x18
 8012045:	00          	.byte	0x00
 8012046:	6802      	ldr	r2, [r0, #0]
 8012048:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801204c:	68d6      	ldr	r6, [r2, #12]
 801204e:	462b      	mov	r3, r5
 8012050:	460a      	mov	r2, r1
 8012052:	46b4      	mov	ip, r6
 8012054:	4621      	mov	r1, r4
 8012056:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801205a:	4760      	bx	ip
 801205c:	462a      	mov	r2, r5
 801205e:	4620      	mov	r0, r4
 8012060:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012064:	f7ff befc 	b.w	8011e60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012068:	4b03      	ldr	r3, [pc, #12]	; (8012078 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 801206a:	4a04      	ldr	r2, [pc, #16]	; (801207c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 801206c:	4804      	ldr	r0, [pc, #16]	; (8012080 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 801206e:	f240 21b7 	movw	r1, #695	; 0x2b7
 8012072:	f008 fbb9 	bl	801a7e8 <__assert_func>
 8012076:	bd70      	pop	{r4, r5, r6, pc}
 8012078:	0801eb2e 	.word	0x0801eb2e
 801207c:	0801f219 	.word	0x0801f219
 8012080:	0801ea09 	.word	0x0801ea09

08012084 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012088:	b093      	sub	sp, #76	; 0x4c
 801208a:	880f      	ldrh	r7, [r1, #0]
 801208c:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012090:	4681      	mov	r9, r0
 8012092:	4688      	mov	r8, r1
 8012094:	4615      	mov	r5, r2
 8012096:	b12f      	cbz	r7, 80120a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8012098:	4b71      	ldr	r3, [pc, #452]	; (8012260 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801209a:	4a72      	ldr	r2, [pc, #456]	; (8012264 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801209c:	4872      	ldr	r0, [pc, #456]	; (8012268 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801209e:	21e8      	movs	r1, #232	; 0xe8
 80120a0:	f008 fba2 	bl	801a7e8 <__assert_func>
 80120a4:	6810      	ldr	r0, [r2, #0]
 80120a6:	6851      	ldr	r1, [r2, #4]
 80120a8:	ac0e      	add	r4, sp, #56	; 0x38
 80120aa:	c403      	stmia	r4!, {r0, r1}
 80120ac:	6818      	ldr	r0, [r3, #0]
 80120ae:	6859      	ldr	r1, [r3, #4]
 80120b0:	ac10      	add	r4, sp, #64	; 0x40
 80120b2:	c403      	stmia	r4!, {r0, r1}
 80120b4:	a80e      	add	r0, sp, #56	; 0x38
 80120b6:	f7fa fd29 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80120ba:	4629      	mov	r1, r5
 80120bc:	a810      	add	r0, sp, #64	; 0x40
 80120be:	f7fa fd0d 	bl	800cadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80120c2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80120c6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80120ca:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80120ce:	4d67      	ldr	r5, [pc, #412]	; (801226c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 80120d0:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80120d4:	6828      	ldr	r0, [r5, #0]
 80120d6:	4c66      	ldr	r4, [pc, #408]	; (8012270 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 80120d8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80120dc:	4489      	add	r9, r1
 80120de:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80120e2:	440a      	add	r2, r1
 80120e4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80120e8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80120ec:	4413      	add	r3, r2
 80120ee:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80120f2:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80120f6:	930a      	str	r3, [sp, #40]	; 0x28
 80120f8:	6803      	ldr	r3, [r0, #0]
 80120fa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80120fe:	4798      	blx	r3
 8012100:	2801      	cmp	r0, #1
 8012102:	d11d      	bne.n	8012140 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8012104:	220b      	movs	r2, #11
 8012106:	9708      	str	r7, [sp, #32]
 8012108:	9207      	str	r2, [sp, #28]
 801210a:	8822      	ldrh	r2, [r4, #0]
 801210c:	f8cd a010 	str.w	sl, [sp, #16]
 8012110:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012114:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012118:	9203      	str	r2, [sp, #12]
 801211a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801211e:	9202      	str	r2, [sp, #8]
 8012120:	fa1f f28b 	uxth.w	r2, fp
 8012124:	9201      	str	r2, [sp, #4]
 8012126:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801212a:	9200      	str	r2, [sp, #0]
 801212c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012130:	6828      	ldr	r0, [r5, #0]
 8012132:	4642      	mov	r2, r8
 8012134:	4649      	mov	r1, r9
 8012136:	f7f8 fd31 	bl	800ab9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801213a:	b013      	add	sp, #76	; 0x4c
 801213c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012140:	6828      	ldr	r0, [r5, #0]
 8012142:	6803      	ldr	r3, [r0, #0]
 8012144:	6a1b      	ldr	r3, [r3, #32]
 8012146:	4798      	blx	r3
 8012148:	8823      	ldrh	r3, [r4, #0]
 801214a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801214e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012152:	fb01 2303 	mla	r3, r1, r3, r2
 8012156:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801215a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 801215e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012160:	005b      	lsls	r3, r3, #1
 8012162:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8012166:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012168:	429f      	cmp	r7, r3
 801216a:	da72      	bge.n	8012252 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 801216c:	2100      	movs	r1, #0
 801216e:	4559      	cmp	r1, fp
 8012170:	da5e      	bge.n	8012230 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8012172:	f819 3001 	ldrb.w	r3, [r9, r1]
 8012176:	2204      	movs	r2, #4
 8012178:	fb12 2303 	smlabb	r3, r2, r3, r2
 801217c:	f858 2003 	ldr.w	r2, [r8, r3]
 8012180:	0e15      	lsrs	r5, r2, #24
 8012182:	d013      	beq.n	80121ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012184:	2dff      	cmp	r5, #255	; 0xff
 8012186:	ea4f 2412 	mov.w	r4, r2, lsr #8
 801218a:	d111      	bne.n	80121b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801218c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012190:	d10e      	bne.n	80121b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012192:	0953      	lsrs	r3, r2, #5
 8012194:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8012198:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801219c:	f024 0407 	bic.w	r4, r4, #7
 80121a0:	431c      	orrs	r4, r3
 80121a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80121a6:	4314      	orrs	r4, r2
 80121a8:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 80121ac:	3101      	adds	r1, #1
 80121ae:	e7de      	b.n	801216e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 80121b0:	fb0a f505 	mul.w	r5, sl, r5
 80121b4:	1c6b      	adds	r3, r5, #1
 80121b6:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 80121ba:	eb03 2325 	add.w	r3, r3, r5, asr #8
 80121be:	121b      	asrs	r3, r3, #8
 80121c0:	fa1f fe83 	uxth.w	lr, r3
 80121c4:	ea4f 262c 	mov.w	r6, ip, asr #8
 80121c8:	f3c2 4507 	ubfx	r5, r2, #16, #8
 80121cc:	43db      	mvns	r3, r3
 80121ce:	b2db      	uxtb	r3, r3
 80121d0:	fb15 f50e 	smulbb	r5, r5, lr
 80121d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80121d8:	fb06 5603 	mla	r6, r6, r3, r5
 80121dc:	b2d2      	uxtb	r2, r2
 80121de:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80121e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80121e6:	fa5f fc8c 	uxtb.w	ip, ip
 80121ea:	fb12 f20e 	smulbb	r2, r2, lr
 80121ee:	fb0c 2203 	mla	r2, ip, r3, r2
 80121f2:	b2e4      	uxtb	r4, r4
 80121f4:	b2b6      	uxth	r6, r6
 80121f6:	fb14 f40e 	smulbb	r4, r4, lr
 80121fa:	b292      	uxth	r2, r2
 80121fc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012200:	fb05 4503 	mla	r5, r5, r3, r4
 8012204:	1c73      	adds	r3, r6, #1
 8012206:	1c54      	adds	r4, r2, #1
 8012208:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801220c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8012210:	b2ad      	uxth	r5, r5
 8012212:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012216:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801221a:	4326      	orrs	r6, r4
 801221c:	1c6c      	adds	r4, r5, #1
 801221e:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8012222:	0964      	lsrs	r4, r4, #5
 8012224:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8012228:	4326      	orrs	r6, r4
 801222a:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 801222e:	e7bd      	b.n	80121ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012230:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012232:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012234:	881b      	ldrh	r3, [r3, #0]
 8012236:	eba3 030b 	sub.w	r3, r3, fp
 801223a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801223e:	4418      	add	r0, r3
 8012240:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012244:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012246:	eba3 030b 	sub.w	r3, r3, fp
 801224a:	4413      	add	r3, r2
 801224c:	4499      	add	r9, r3
 801224e:	3701      	adds	r7, #1
 8012250:	e789      	b.n	8012166 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8012252:	4b06      	ldr	r3, [pc, #24]	; (801226c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8012254:	6818      	ldr	r0, [r3, #0]
 8012256:	6803      	ldr	r3, [r0, #0]
 8012258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801225a:	4798      	blx	r3
 801225c:	e76d      	b.n	801213a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 801225e:	bf00      	nop
 8012260:	0801e907 	.word	0x0801e907
 8012264:	0801efea 	.word	0x0801efea
 8012268:	0801ea09 	.word	0x0801ea09
 801226c:	200123bc 	.word	0x200123bc
 8012270:	200123b6 	.word	0x200123b6

08012274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012278:	4614      	mov	r4, r2
 801227a:	880a      	ldrh	r2, [r1, #0]
 801227c:	b093      	sub	sp, #76	; 0x4c
 801227e:	2a02      	cmp	r2, #2
 8012280:	4606      	mov	r6, r0
 8012282:	4689      	mov	r9, r1
 8012284:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8012288:	d006      	beq.n	8012298 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801228a:	4b7a      	ldr	r3, [pc, #488]	; (8012474 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 801228c:	4a7a      	ldr	r2, [pc, #488]	; (8012478 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 801228e:	487b      	ldr	r0, [pc, #492]	; (801247c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8012290:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8012294:	f008 faa8 	bl	801a7e8 <__assert_func>
 8012298:	2f00      	cmp	r7, #0
 801229a:	d04b      	beq.n	8012334 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801229c:	6820      	ldr	r0, [r4, #0]
 801229e:	6861      	ldr	r1, [r4, #4]
 80122a0:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8012484 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 80122a4:	ad0e      	add	r5, sp, #56	; 0x38
 80122a6:	c503      	stmia	r5!, {r0, r1}
 80122a8:	6818      	ldr	r0, [r3, #0]
 80122aa:	6859      	ldr	r1, [r3, #4]
 80122ac:	ad10      	add	r5, sp, #64	; 0x40
 80122ae:	c503      	stmia	r5!, {r0, r1}
 80122b0:	a80e      	add	r0, sp, #56	; 0x38
 80122b2:	f7fa fc2b 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80122b6:	4621      	mov	r1, r4
 80122b8:	a810      	add	r0, sp, #64	; 0x40
 80122ba:	f7fa fc0f 	bl	800cadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80122be:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80122c2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80122c6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80122ca:	f8da 0000 	ldr.w	r0, [sl]
 80122ce:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 80122d2:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 80122d6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80122da:	1874      	adds	r4, r6, r1
 80122dc:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80122e0:	4e67      	ldr	r6, [pc, #412]	; (8012480 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 80122e2:	440a      	add	r2, r1
 80122e4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80122e8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80122ec:	4413      	add	r3, r2
 80122ee:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80122f2:	6803      	ldr	r3, [r0, #0]
 80122f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80122f8:	4798      	blx	r3
 80122fa:	2801      	cmp	r0, #1
 80122fc:	d11d      	bne.n	801233a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 80122fe:	2200      	movs	r2, #0
 8012300:	210b      	movs	r1, #11
 8012302:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8012306:	8831      	ldrh	r1, [r6, #0]
 8012308:	9704      	str	r7, [sp, #16]
 801230a:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801230e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012312:	9203      	str	r2, [sp, #12]
 8012314:	fa1f f288 	uxth.w	r2, r8
 8012318:	9202      	str	r2, [sp, #8]
 801231a:	b2ad      	uxth	r5, r5
 801231c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012320:	9200      	str	r2, [sp, #0]
 8012322:	9501      	str	r5, [sp, #4]
 8012324:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012328:	f8da 0000 	ldr.w	r0, [sl]
 801232c:	464a      	mov	r2, r9
 801232e:	4621      	mov	r1, r4
 8012330:	f7f8 fc34 	bl	800ab9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012334:	b013      	add	sp, #76	; 0x4c
 8012336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801233a:	f8da 0000 	ldr.w	r0, [sl]
 801233e:	6803      	ldr	r3, [r0, #0]
 8012340:	6a1b      	ldr	r3, [r3, #32]
 8012342:	4798      	blx	r3
 8012344:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012348:	8833      	ldrh	r3, [r6, #0]
 801234a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801234e:	fb01 2303 	mla	r3, r1, r3, r2
 8012352:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012356:	2fff      	cmp	r7, #255	; 0xff
 8012358:	f109 0304 	add.w	r3, r9, #4
 801235c:	930a      	str	r3, [sp, #40]	; 0x28
 801235e:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 8012362:	d111      	bne.n	8012388 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8012364:	b212      	sxth	r2, r2
 8012366:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 801236a:	2100      	movs	r1, #0
 801236c:	4541      	cmp	r1, r8
 801236e:	da7a      	bge.n	8012466 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8012370:	2300      	movs	r3, #0
 8012372:	42ab      	cmp	r3, r5
 8012374:	da6b      	bge.n	801244e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 8012376:	f814 c003 	ldrb.w	ip, [r4, r3]
 801237a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801237c:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8012380:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8012384:	3301      	adds	r3, #1
 8012386:	e7f4      	b.n	8012372 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8012388:	b213      	sxth	r3, r2
 801238a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801238e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012390:	005b      	lsls	r3, r3, #1
 8012392:	930c      	str	r3, [sp, #48]	; 0x30
 8012394:	f04f 0900 	mov.w	r9, #0
 8012398:	b2ba      	uxth	r2, r7
 801239a:	fa1f fc8c 	uxth.w	ip, ip
 801239e:	960d      	str	r6, [sp, #52]	; 0x34
 80123a0:	45c1      	cmp	r9, r8
 80123a2:	da60      	bge.n	8012466 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 80123a4:	46a3      	mov	fp, r4
 80123a6:	4682      	mov	sl, r0
 80123a8:	ebab 0304 	sub.w	r3, fp, r4
 80123ac:	429d      	cmp	r5, r3
 80123ae:	dd3e      	ble.n	801242e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 80123b0:	f81b 3b01 	ldrb.w	r3, [fp], #1
 80123b4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80123b6:	f8ba 1000 	ldrh.w	r1, [sl]
 80123ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80123be:	120e      	asrs	r6, r1, #8
 80123c0:	121f      	asrs	r7, r3, #8
 80123c2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80123c6:	fb16 f60c 	smulbb	r6, r6, ip
 80123ca:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 80123ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80123d2:	00c9      	lsls	r1, r1, #3
 80123d4:	fb07 6702 	mla	r7, r7, r2, r6
 80123d8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80123dc:	10de      	asrs	r6, r3, #3
 80123de:	b2c9      	uxtb	r1, r1
 80123e0:	00db      	lsls	r3, r3, #3
 80123e2:	fb1e fe0c 	smulbb	lr, lr, ip
 80123e6:	fb11 f10c 	smulbb	r1, r1, ip
 80123ea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80123ee:	b2db      	uxtb	r3, r3
 80123f0:	b2bf      	uxth	r7, r7
 80123f2:	fb06 e602 	mla	r6, r6, r2, lr
 80123f6:	fb03 1302 	mla	r3, r3, r2, r1
 80123fa:	b2b6      	uxth	r6, r6
 80123fc:	b29b      	uxth	r3, r3
 80123fe:	1c79      	adds	r1, r7, #1
 8012400:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8012404:	f106 0e01 	add.w	lr, r6, #1
 8012408:	1c59      	adds	r1, r3, #1
 801240a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801240e:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8012412:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012416:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801241a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801241e:	430f      	orrs	r7, r1
 8012420:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8012424:	ea47 070e 	orr.w	r7, r7, lr
 8012428:	f82a 7b02 	strh.w	r7, [sl], #2
 801242c:	e7bc      	b.n	80123a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 801242e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012430:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012432:	881b      	ldrh	r3, [r3, #0]
 8012434:	1b5b      	subs	r3, r3, r5
 8012436:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801243a:	4418      	add	r0, r3
 801243c:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012440:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012442:	1b5b      	subs	r3, r3, r5
 8012444:	440b      	add	r3, r1
 8012446:	441c      	add	r4, r3
 8012448:	f109 0901 	add.w	r9, r9, #1
 801244c:	e7a8      	b.n	80123a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 801244e:	8833      	ldrh	r3, [r6, #0]
 8012450:	1b5b      	subs	r3, r3, r5
 8012452:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8012456:	4418      	add	r0, r3
 8012458:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 801245c:	1b5b      	subs	r3, r3, r5
 801245e:	4413      	add	r3, r2
 8012460:	441c      	add	r4, r3
 8012462:	3101      	adds	r1, #1
 8012464:	e782      	b.n	801236c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 8012466:	4b07      	ldr	r3, [pc, #28]	; (8012484 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 8012468:	6818      	ldr	r0, [r3, #0]
 801246a:	6803      	ldr	r3, [r0, #0]
 801246c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801246e:	4798      	blx	r3
 8012470:	e760      	b.n	8012334 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012472:	bf00      	nop
 8012474:	0801e7c5 	.word	0x0801e7c5
 8012478:	0801ee54 	.word	0x0801ee54
 801247c:	0801ea09 	.word	0x0801ea09
 8012480:	200123b6 	.word	0x200123b6
 8012484:	200123bc 	.word	0x200123bc

08012488 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8012488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801248c:	4616      	mov	r6, r2
 801248e:	880a      	ldrh	r2, [r1, #0]
 8012490:	b093      	sub	sp, #76	; 0x4c
 8012492:	2a01      	cmp	r2, #1
 8012494:	4681      	mov	r9, r0
 8012496:	4688      	mov	r8, r1
 8012498:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801249c:	d006      	beq.n	80124ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 801249e:	4b6c      	ldr	r3, [pc, #432]	; (8012650 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80124a0:	4a6c      	ldr	r2, [pc, #432]	; (8012654 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 80124a2:	486d      	ldr	r0, [pc, #436]	; (8012658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 80124a4:	f240 119d 	movw	r1, #413	; 0x19d
 80124a8:	f008 f99e 	bl	801a7e8 <__assert_func>
 80124ac:	f1ba 0f00 	cmp.w	sl, #0
 80124b0:	d04a      	beq.n	8012548 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80124b2:	6830      	ldr	r0, [r6, #0]
 80124b4:	6871      	ldr	r1, [r6, #4]
 80124b6:	4d69      	ldr	r5, [pc, #420]	; (801265c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80124b8:	ac0e      	add	r4, sp, #56	; 0x38
 80124ba:	c403      	stmia	r4!, {r0, r1}
 80124bc:	6818      	ldr	r0, [r3, #0]
 80124be:	6859      	ldr	r1, [r3, #4]
 80124c0:	ac10      	add	r4, sp, #64	; 0x40
 80124c2:	c403      	stmia	r4!, {r0, r1}
 80124c4:	a80e      	add	r0, sp, #56	; 0x38
 80124c6:	f7fa fb21 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80124ca:	4631      	mov	r1, r6
 80124cc:	a810      	add	r0, sp, #64	; 0x40
 80124ce:	f7fa fb05 	bl	800cadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80124d2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80124d6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80124da:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80124de:	6828      	ldr	r0, [r5, #0]
 80124e0:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 80124e4:	4c5e      	ldr	r4, [pc, #376]	; (8012660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 80124e6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80124ea:	4489      	add	r9, r1
 80124ec:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80124f0:	440a      	add	r2, r1
 80124f2:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80124f6:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80124fa:	4413      	add	r3, r2
 80124fc:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012500:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012504:	930a      	str	r3, [sp, #40]	; 0x28
 8012506:	6803      	ldr	r3, [r0, #0]
 8012508:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801250c:	4798      	blx	r3
 801250e:	2801      	cmp	r0, #1
 8012510:	d11d      	bne.n	801254e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8012512:	220b      	movs	r2, #11
 8012514:	2100      	movs	r1, #0
 8012516:	e9cd 2107 	strd	r2, r1, [sp, #28]
 801251a:	8822      	ldrh	r2, [r4, #0]
 801251c:	f8cd a010 	str.w	sl, [sp, #16]
 8012520:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012524:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012528:	9203      	str	r2, [sp, #12]
 801252a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801252e:	9202      	str	r2, [sp, #8]
 8012530:	b2b6      	uxth	r6, r6
 8012532:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012536:	9200      	str	r2, [sp, #0]
 8012538:	9601      	str	r6, [sp, #4]
 801253a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801253e:	6828      	ldr	r0, [r5, #0]
 8012540:	4642      	mov	r2, r8
 8012542:	4649      	mov	r1, r9
 8012544:	f7f8 fb2a 	bl	800ab9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012548:	b013      	add	sp, #76	; 0x4c
 801254a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801254e:	6828      	ldr	r0, [r5, #0]
 8012550:	6803      	ldr	r3, [r0, #0]
 8012552:	6a1b      	ldr	r3, [r3, #32]
 8012554:	4798      	blx	r3
 8012556:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801255a:	8823      	ldrh	r3, [r4, #0]
 801255c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012560:	940d      	str	r4, [sp, #52]	; 0x34
 8012562:	fb01 2303 	mla	r3, r1, r3, r2
 8012566:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801256a:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 801256e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012570:	ea6f 010a 	mvn.w	r1, sl
 8012574:	005b      	lsls	r3, r3, #1
 8012576:	930c      	str	r3, [sp, #48]	; 0x30
 8012578:	f04f 0e00 	mov.w	lr, #0
 801257c:	b2c9      	uxtb	r1, r1
 801257e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012580:	459e      	cmp	lr, r3
 8012582:	da5f      	bge.n	8012644 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8012584:	2700      	movs	r7, #0
 8012586:	fa1f fb8a 	uxth.w	fp, sl
 801258a:	42b7      	cmp	r7, r6
 801258c:	da4a      	bge.n	8012624 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 801258e:	f819 3007 	ldrb.w	r3, [r9, r7]
 8012592:	2203      	movs	r2, #3
 8012594:	2404      	movs	r4, #4
 8012596:	fb12 4303 	smlabb	r3, r2, r3, r4
 801259a:	eb08 0403 	add.w	r4, r8, r3
 801259e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80125a2:	78a2      	ldrb	r2, [r4, #2]
 80125a4:	7865      	ldrb	r5, [r4, #1]
 80125a6:	f818 c003 	ldrb.w	ip, [r8, r3]
 80125aa:	d10c      	bne.n	80125c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 80125ac:	4b2d      	ldr	r3, [pc, #180]	; (8012664 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80125ae:	00ed      	lsls	r5, r5, #3
 80125b0:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 80125b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80125b8:	432a      	orrs	r2, r5
 80125ba:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 80125be:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 80125c2:	3701      	adds	r7, #1
 80125c4:	e7e1      	b.n	801258a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 80125c6:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 80125ca:	121c      	asrs	r4, r3, #8
 80125cc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80125d0:	fb12 f20b 	smulbb	r2, r2, fp
 80125d4:	fb04 2201 	mla	r2, r4, r1, r2
 80125d8:	10dc      	asrs	r4, r3, #3
 80125da:	00db      	lsls	r3, r3, #3
 80125dc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80125e0:	b2db      	uxtb	r3, r3
 80125e2:	fb15 f50b 	smulbb	r5, r5, fp
 80125e6:	fb1c fc0b 	smulbb	ip, ip, fp
 80125ea:	b292      	uxth	r2, r2
 80125ec:	fb04 5501 	mla	r5, r4, r1, r5
 80125f0:	fb03 cc01 	mla	ip, r3, r1, ip
 80125f4:	b2ad      	uxth	r5, r5
 80125f6:	fa1f fc8c 	uxth.w	ip, ip
 80125fa:	1c53      	adds	r3, r2, #1
 80125fc:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8012600:	1c6c      	adds	r4, r5, #1
 8012602:	f10c 0301 	add.w	r3, ip, #1
 8012606:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801260a:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 801260e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8012612:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012616:	096d      	lsrs	r5, r5, #5
 8012618:	ea42 020c 	orr.w	r2, r2, ip
 801261c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012620:	432a      	orrs	r2, r5
 8012622:	e7cc      	b.n	80125be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 8012624:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012626:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012628:	881b      	ldrh	r3, [r3, #0]
 801262a:	1b9b      	subs	r3, r3, r6
 801262c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012630:	4418      	add	r0, r3
 8012632:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012636:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012638:	1b9b      	subs	r3, r3, r6
 801263a:	4413      	add	r3, r2
 801263c:	4499      	add	r9, r3
 801263e:	f10e 0e01 	add.w	lr, lr, #1
 8012642:	e79c      	b.n	801257e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 8012644:	4b05      	ldr	r3, [pc, #20]	; (801265c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8012646:	6818      	ldr	r0, [r3, #0]
 8012648:	6803      	ldr	r3, [r0, #0]
 801264a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801264c:	4798      	blx	r3
 801264e:	e77b      	b.n	8012548 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8012650:	0801e813 	.word	0x0801e813
 8012654:	0801eedd 	.word	0x0801eedd
 8012658:	0801ea09 	.word	0x0801ea09
 801265c:	200123bc 	.word	0x200123bc
 8012660:	200123b6 	.word	0x200123b6
 8012664:	fffff800 	.word	0xfffff800

08012668 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8012668:	b430      	push	{r4, r5}
 801266a:	780d      	ldrb	r5, [r1, #0]
 801266c:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8012670:	2d01      	cmp	r5, #1
 8012672:	d00a      	beq.n	801268a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8012674:	d305      	bcc.n	8012682 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8012676:	2d02      	cmp	r5, #2
 8012678:	d10b      	bne.n	8012692 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801267a:	9402      	str	r4, [sp, #8]
 801267c:	bc30      	pop	{r4, r5}
 801267e:	f7ff bdf9 	b.w	8012274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8012682:	9402      	str	r4, [sp, #8]
 8012684:	bc30      	pop	{r4, r5}
 8012686:	f7ff bcfd 	b.w	8012084 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801268a:	9402      	str	r4, [sp, #8]
 801268c:	bc30      	pop	{r4, r5}
 801268e:	f7ff befb 	b.w	8012488 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8012692:	bc30      	pop	{r4, r5}
 8012694:	4770      	bx	lr
	...

08012698 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8012698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801269c:	4605      	mov	r5, r0
 801269e:	b089      	sub	sp, #36	; 0x24
 80126a0:	6810      	ldr	r0, [r2, #0]
 80126a2:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 80126a6:	460c      	mov	r4, r1
 80126a8:	6851      	ldr	r1, [r2, #4]
 80126aa:	ae04      	add	r6, sp, #16
 80126ac:	c603      	stmia	r6!, {r0, r1}
 80126ae:	6818      	ldr	r0, [r3, #0]
 80126b0:	6859      	ldr	r1, [r3, #4]
 80126b2:	ae06      	add	r6, sp, #24
 80126b4:	4617      	mov	r7, r2
 80126b6:	c603      	stmia	r6!, {r0, r1}
 80126b8:	a804      	add	r0, sp, #16
 80126ba:	f7fa fa27 	bl	800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80126be:	4639      	mov	r1, r7
 80126c0:	a806      	add	r0, sp, #24
 80126c2:	f7fa fa0b 	bl	800cadc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80126c6:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 80126ca:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80126ce:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80126d2:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 80126d6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80126da:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 80126de:	440c      	add	r4, r1
 80126e0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80126e4:	440a      	add	r2, r1
 80126e6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80126ea:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80126ee:	4413      	add	r3, r2
 80126f0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80126f4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80126f8:	9300      	str	r3, [sp, #0]
 80126fa:	4b80      	ldr	r3, [pc, #512]	; (80128fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 80126fc:	6818      	ldr	r0, [r3, #0]
 80126fe:	6803      	ldr	r3, [r0, #0]
 8012700:	6a1b      	ldr	r3, [r3, #32]
 8012702:	4798      	blx	r3
 8012704:	4b7e      	ldr	r3, [pc, #504]	; (8012900 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 8012706:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 801270a:	881a      	ldrh	r2, [r3, #0]
 801270c:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012710:	fb06 1202 	mla	r2, r6, r2, r1
 8012714:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012718:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801271c:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 8012720:	b212      	sxth	r2, r2
 8012722:	d117      	bne.n	8012754 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8012724:	9201      	str	r2, [sp, #4]
 8012726:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801272a:	f04f 0a00 	mov.w	sl, #0
 801272e:	9302      	str	r3, [sp, #8]
 8012730:	9b00      	ldr	r3, [sp, #0]
 8012732:	459a      	cmp	sl, r3
 8012734:	f280 80d9 	bge.w	80128ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8012738:	2100      	movs	r1, #0
 801273a:	4541      	cmp	r1, r8
 801273c:	f280 80c1 	bge.w	80128c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 8012740:	5c63      	ldrb	r3, [r4, r1]
 8012742:	b12b      	cbz	r3, 8012750 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8012744:	2bff      	cmp	r3, #255	; 0xff
 8012746:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 801274a:	d176      	bne.n	801283a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 801274c:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 8012750:	3101      	adds	r1, #1
 8012752:	e7f2      	b.n	801273a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 8012754:	9202      	str	r2, [sp, #8]
 8012756:	0052      	lsls	r2, r2, #1
 8012758:	9201      	str	r2, [sp, #4]
 801275a:	f04f 0b00 	mov.w	fp, #0
 801275e:	9303      	str	r3, [sp, #12]
 8012760:	9b00      	ldr	r3, [sp, #0]
 8012762:	459b      	cmp	fp, r3
 8012764:	f280 80c1 	bge.w	80128ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8012768:	f04f 0c00 	mov.w	ip, #0
 801276c:	45c4      	cmp	ip, r8
 801276e:	da4f      	bge.n	8012810 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 8012770:	f814 300c 	ldrb.w	r3, [r4, ip]
 8012774:	2b00      	cmp	r3, #0
 8012776:	d048      	beq.n	801280a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8012778:	fb09 f303 	mul.w	r3, r9, r3
 801277c:	1c5a      	adds	r2, r3, #1
 801277e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8012782:	121b      	asrs	r3, r3, #8
 8012784:	d041      	beq.n	801280a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8012786:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 801278a:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 801278e:	b29e      	uxth	r6, r3
 8012790:	1211      	asrs	r1, r2, #8
 8012792:	43db      	mvns	r3, r3
 8012794:	b2db      	uxtb	r3, r3
 8012796:	ea4f 272e 	mov.w	r7, lr, asr #8
 801279a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801279e:	fb11 f103 	smulbb	r1, r1, r3
 80127a2:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80127a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80127aa:	00d2      	lsls	r2, r2, #3
 80127ac:	fb07 1706 	mla	r7, r7, r6, r1
 80127b0:	b2d2      	uxtb	r2, r2
 80127b2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80127b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80127ba:	fb12 f203 	smulbb	r2, r2, r3
 80127be:	fa5f fe8e 	uxtb.w	lr, lr
 80127c2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80127c6:	fb0e 2206 	mla	r2, lr, r6, r2
 80127ca:	fb1a fa03 	smulbb	sl, sl, r3
 80127ce:	b2bf      	uxth	r7, r7
 80127d0:	b292      	uxth	r2, r2
 80127d2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80127d6:	fb01 a106 	mla	r1, r1, r6, sl
 80127da:	1c7b      	adds	r3, r7, #1
 80127dc:	f102 0a01 	add.w	sl, r2, #1
 80127e0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80127e4:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 80127e8:	b289      	uxth	r1, r1
 80127ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80127ee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80127f2:	ea47 070a 	orr.w	r7, r7, sl
 80127f6:	f101 0a01 	add.w	sl, r1, #1
 80127fa:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 80127fe:	0949      	lsrs	r1, r1, #5
 8012800:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012804:	430f      	orrs	r7, r1
 8012806:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 801280a:	f10c 0c01 	add.w	ip, ip, #1
 801280e:	e7ad      	b.n	801276c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 8012810:	9b03      	ldr	r3, [sp, #12]
 8012812:	9a01      	ldr	r2, [sp, #4]
 8012814:	881b      	ldrh	r3, [r3, #0]
 8012816:	eba3 0308 	sub.w	r3, r3, r8
 801281a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801281e:	4418      	add	r0, r3
 8012820:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012824:	eba3 0308 	sub.w	r3, r3, r8
 8012828:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 801282c:	4415      	add	r5, r2
 801282e:	9a02      	ldr	r2, [sp, #8]
 8012830:	4413      	add	r3, r2
 8012832:	441c      	add	r4, r3
 8012834:	f10b 0b01 	add.w	fp, fp, #1
 8012838:	e792      	b.n	8012760 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 801283a:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 801283e:	b29f      	uxth	r7, r3
 8012840:	1216      	asrs	r6, r2, #8
 8012842:	43db      	mvns	r3, r3
 8012844:	b2db      	uxtb	r3, r3
 8012846:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801284a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801284e:	fb16 f603 	smulbb	r6, r6, r3
 8012852:	ea4f 09e2 	mov.w	r9, r2, asr #3
 8012856:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801285a:	00d2      	lsls	r2, r2, #3
 801285c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012860:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012864:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012868:	b2d2      	uxtb	r2, r2
 801286a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801286e:	fa1f fc8c 	uxth.w	ip, ip
 8012872:	fb19 f903 	smulbb	r9, r9, r3
 8012876:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801287a:	fa5f fe8e 	uxtb.w	lr, lr
 801287e:	fb12 f203 	smulbb	r2, r2, r3
 8012882:	fb06 9607 	mla	r6, r6, r7, r9
 8012886:	fb0e 2207 	mla	r2, lr, r7, r2
 801288a:	f10c 0901 	add.w	r9, ip, #1
 801288e:	b292      	uxth	r2, r2
 8012890:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012894:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8012898:	f102 0c01 	add.w	ip, r2, #1
 801289c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80128a0:	b2b6      	uxth	r6, r6
 80128a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80128a6:	ea49 0c02 	orr.w	ip, r9, r2
 80128aa:	f106 0901 	add.w	r9, r6, #1
 80128ae:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80128b2:	0976      	lsrs	r6, r6, #5
 80128b4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80128b8:	ea4c 0c06 	orr.w	ip, ip, r6
 80128bc:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 80128c0:	e746      	b.n	8012750 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80128c2:	9b02      	ldr	r3, [sp, #8]
 80128c4:	881b      	ldrh	r3, [r3, #0]
 80128c6:	eba3 0308 	sub.w	r3, r3, r8
 80128ca:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 80128ce:	4418      	add	r0, r3
 80128d0:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80128d4:	eba3 0308 	sub.w	r3, r3, r8
 80128d8:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 80128dc:	4415      	add	r5, r2
 80128de:	9a01      	ldr	r2, [sp, #4]
 80128e0:	4413      	add	r3, r2
 80128e2:	441c      	add	r4, r3
 80128e4:	f10a 0a01 	add.w	sl, sl, #1
 80128e8:	e722      	b.n	8012730 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 80128ea:	4b04      	ldr	r3, [pc, #16]	; (80128fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 80128ec:	6818      	ldr	r0, [r3, #0]
 80128ee:	6803      	ldr	r3, [r0, #0]
 80128f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80128f2:	4798      	blx	r3
 80128f4:	b009      	add	sp, #36	; 0x24
 80128f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128fa:	bf00      	nop
 80128fc:	200123bc 	.word	0x200123bc
 8012900:	200123b6 	.word	0x200123b6

08012904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8012904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012908:	b089      	sub	sp, #36	; 0x24
 801290a:	4682      	mov	sl, r0
 801290c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8012910:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012912:	460d      	mov	r5, r1
 8012914:	4691      	mov	r9, r2
 8012916:	4698      	mov	r8, r3
 8012918:	b3ae      	cbz	r6, 8012986 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801291a:	4608      	mov	r0, r1
 801291c:	f7fc fa96 	bl	800ee4c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012920:	4607      	mov	r7, r0
 8012922:	4628      	mov	r0, r5
 8012924:	f7fc facc 	bl	800eec0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012928:	f8ad 000e 	strh.w	r0, [sp, #14]
 801292c:	4628      	mov	r0, r5
 801292e:	f8ad 9008 	strh.w	r9, [sp, #8]
 8012932:	f8ad 800a 	strh.w	r8, [sp, #10]
 8012936:	f8ad 700c 	strh.w	r7, [sp, #12]
 801293a:	f7fc fc13 	bl	800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801293e:	b178      	cbz	r0, 8012960 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012940:	4628      	mov	r0, r5
 8012942:	f7fc fc0f 	bl	800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012946:	2802      	cmp	r0, #2
 8012948:	d00a      	beq.n	8012960 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 801294a:	4628      	mov	r0, r5
 801294c:	f7fc fc0a 	bl	800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012950:	280b      	cmp	r0, #11
 8012952:	d005      	beq.n	8012960 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012954:	4b69      	ldr	r3, [pc, #420]	; (8012afc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8012956:	4a6a      	ldr	r2, [pc, #424]	; (8012b00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8012958:	486a      	ldr	r0, [pc, #424]	; (8012b04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 801295a:	214b      	movs	r1, #75	; 0x4b
 801295c:	f007 ff44 	bl	801a7e8 <__assert_func>
 8012960:	4628      	mov	r0, r5
 8012962:	f7fc fb7b 	bl	800f05c <_ZNK8touchgfx6Bitmap7getDataEv>
 8012966:	4607      	mov	r7, r0
 8012968:	4628      	mov	r0, r5
 801296a:	f7fc fba9 	bl	800f0c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801296e:	4681      	mov	r9, r0
 8012970:	4628      	mov	r0, r5
 8012972:	f7fc fbf7 	bl	800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012976:	2802      	cmp	r0, #2
 8012978:	d108      	bne.n	801298c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801297a:	4633      	mov	r3, r6
 801297c:	4622      	mov	r2, r4
 801297e:	a902      	add	r1, sp, #8
 8012980:	4638      	mov	r0, r7
 8012982:	f7ff fa6d 	bl	8011e60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012986:	b009      	add	sp, #36	; 0x24
 8012988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801298c:	4628      	mov	r0, r5
 801298e:	f7fc fbe9 	bl	800f164 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012992:	280b      	cmp	r0, #11
 8012994:	d107      	bne.n	80129a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8012996:	9600      	str	r6, [sp, #0]
 8012998:	4623      	mov	r3, r4
 801299a:	aa02      	add	r2, sp, #8
 801299c:	4649      	mov	r1, r9
 801299e:	4638      	mov	r0, r7
 80129a0:	f7ff fe62 	bl	8012668 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80129a4:	e7ef      	b.n	8012986 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80129a6:	4628      	mov	r0, r5
 80129a8:	f7fc fb1e 	bl	800efe8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80129ac:	b950      	cbnz	r0, 80129c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80129ae:	e9cd 6000 	strd	r6, r0, [sp]
 80129b2:	f8da 3000 	ldr.w	r3, [sl]
 80129b6:	aa02      	add	r2, sp, #8
 80129b8:	68dd      	ldr	r5, [r3, #12]
 80129ba:	4639      	mov	r1, r7
 80129bc:	4623      	mov	r3, r4
 80129be:	4650      	mov	r0, sl
 80129c0:	47a8      	blx	r5
 80129c2:	e7e0      	b.n	8012986 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80129c4:	f10d 0818 	add.w	r8, sp, #24
 80129c8:	4629      	mov	r1, r5
 80129ca:	4640      	mov	r0, r8
 80129cc:	f7fc fab2 	bl	800ef34 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80129d0:	e898 0003 	ldmia.w	r8, {r0, r1}
 80129d4:	ad04      	add	r5, sp, #16
 80129d6:	e885 0003 	stmia.w	r5, {r0, r1}
 80129da:	4628      	mov	r0, r5
 80129dc:	4621      	mov	r1, r4
 80129de:	f7f7 f989 	bl	8009cf4 <_ZN8touchgfx4RectaNERKS0_>
 80129e2:	4628      	mov	r0, r5
 80129e4:	f7f7 f9c9 	bl	8009d7a <_ZNK8touchgfx4Rect7isEmptyEv>
 80129e8:	b138      	cbz	r0, 80129fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 80129ea:	9600      	str	r6, [sp, #0]
 80129ec:	4623      	mov	r3, r4
 80129ee:	aa02      	add	r2, sp, #8
 80129f0:	4649      	mov	r1, r9
 80129f2:	4638      	mov	r0, r7
 80129f4:	f7ff fe50 	bl	8012698 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80129f8:	e7c5      	b.n	8012986 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80129fa:	e9cd 6000 	strd	r6, r0, [sp]
 80129fe:	f8da 3000 	ldr.w	r3, [sl]
 8012a02:	aa02      	add	r2, sp, #8
 8012a04:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8012a08:	4639      	mov	r1, r7
 8012a0a:	462b      	mov	r3, r5
 8012a0c:	4650      	mov	r0, sl
 8012a0e:	47d8      	blx	fp
 8012a10:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012a14:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012a18:	4293      	cmp	r3, r2
 8012a1a:	dd13      	ble.n	8012a44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8012a1c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012a20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012a24:	f8ad 0018 	strh.w	r0, [sp, #24]
 8012a28:	1a9b      	subs	r3, r3, r2
 8012a2a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8012a2e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012a32:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012a36:	9600      	str	r6, [sp, #0]
 8012a38:	4643      	mov	r3, r8
 8012a3a:	aa02      	add	r2, sp, #8
 8012a3c:	4649      	mov	r1, r9
 8012a3e:	4638      	mov	r0, r7
 8012a40:	f7ff fe2a 	bl	8012698 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012a44:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8012a48:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012a4c:	4293      	cmp	r3, r2
 8012a4e:	dd13      	ble.n	8012a78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8012a50:	1a9b      	subs	r3, r3, r2
 8012a52:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8012a56:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8012a5a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012a5e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012a62:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012a66:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012a6a:	9600      	str	r6, [sp, #0]
 8012a6c:	4643      	mov	r3, r8
 8012a6e:	aa02      	add	r2, sp, #8
 8012a70:	4649      	mov	r1, r9
 8012a72:	4638      	mov	r0, r7
 8012a74:	f7ff fe10 	bl	8012698 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012a78:	88a2      	ldrh	r2, [r4, #4]
 8012a7a:	8823      	ldrh	r3, [r4, #0]
 8012a7c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012a80:	4413      	add	r3, r2
 8012a82:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012a86:	440a      	add	r2, r1
 8012a88:	b29b      	uxth	r3, r3
 8012a8a:	b292      	uxth	r2, r2
 8012a8c:	b211      	sxth	r1, r2
 8012a8e:	b218      	sxth	r0, r3
 8012a90:	4288      	cmp	r0, r1
 8012a92:	dd13      	ble.n	8012abc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8012a94:	1a9b      	subs	r3, r3, r2
 8012a96:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8012a9a:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8012a9e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8012aa2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012aa6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012aaa:	9600      	str	r6, [sp, #0]
 8012aac:	4643      	mov	r3, r8
 8012aae:	aa02      	add	r2, sp, #8
 8012ab0:	4649      	mov	r1, r9
 8012ab2:	4638      	mov	r0, r7
 8012ab4:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012ab8:	f7ff fdee 	bl	8012698 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012abc:	88e2      	ldrh	r2, [r4, #6]
 8012abe:	8863      	ldrh	r3, [r4, #2]
 8012ac0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8012ac4:	4413      	add	r3, r2
 8012ac6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012aca:	440a      	add	r2, r1
 8012acc:	b29b      	uxth	r3, r3
 8012ace:	b292      	uxth	r2, r2
 8012ad0:	b211      	sxth	r1, r2
 8012ad2:	b218      	sxth	r0, r3
 8012ad4:	4288      	cmp	r0, r1
 8012ad6:	f77f af56 	ble.w	8012986 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012ada:	f9b4 5000 	ldrsh.w	r5, [r4]
 8012ade:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012ae2:	f8ad 5018 	strh.w	r5, [sp, #24]
 8012ae6:	1a9b      	subs	r3, r3, r2
 8012ae8:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012aec:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012af0:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012af4:	9600      	str	r6, [sp, #0]
 8012af6:	4643      	mov	r3, r8
 8012af8:	e779      	b.n	80129ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8012afa:	bf00      	nop
 8012afc:	0801e861 	.word	0x0801e861
 8012b00:	0801ef66 	.word	0x0801ef66
 8012b04:	0801ea09 	.word	0x0801ea09

08012b08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8012b08:	b508      	push	{r3, lr}
 8012b0a:	b180      	cbz	r0, 8012b2e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8012b0c:	2902      	cmp	r1, #2
 8012b0e:	d014      	beq.n	8012b3a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8012b10:	2903      	cmp	r1, #3
 8012b12:	d01d      	beq.n	8012b50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012b14:	2901      	cmp	r1, #1
 8012b16:	d101      	bne.n	8012b1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012b18:	2001      	movs	r0, #1
 8012b1a:	bd08      	pop	{r3, pc}
 8012b1c:	4b0e      	ldr	r3, [pc, #56]	; (8012b58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012b1e:	8818      	ldrh	r0, [r3, #0]
 8012b20:	b990      	cbnz	r0, 8012b48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8012b22:	4b0e      	ldr	r3, [pc, #56]	; (8012b5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8012b24:	4a0e      	ldr	r2, [pc, #56]	; (8012b60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8012b26:	480f      	ldr	r0, [pc, #60]	; (8012b64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8012b28:	2154      	movs	r1, #84	; 0x54
 8012b2a:	f007 fe5d 	bl	801a7e8 <__assert_func>
 8012b2e:	2902      	cmp	r1, #2
 8012b30:	d00e      	beq.n	8012b50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012b32:	2903      	cmp	r1, #3
 8012b34:	d0f2      	beq.n	8012b1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012b36:	2901      	cmp	r1, #1
 8012b38:	d1ee      	bne.n	8012b18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8012b3a:	4b07      	ldr	r3, [pc, #28]	; (8012b58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012b3c:	8818      	ldrh	r0, [r3, #0]
 8012b3e:	2800      	cmp	r0, #0
 8012b40:	d0ef      	beq.n	8012b22 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8012b42:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012b46:	e7e8      	b.n	8012b1a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012b48:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012b4c:	4240      	negs	r0, r0
 8012b4e:	e7e4      	b.n	8012b1a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012b50:	f04f 30ff 	mov.w	r0, #4294967295
 8012b54:	e7e1      	b.n	8012b1a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012b56:	bf00      	nop
 8012b58:	200123b6 	.word	0x200123b6
 8012b5c:	0801eb63 	.word	0x0801eb63
 8012b60:	0801f0e3 	.word	0x0801f0e3
 8012b64:	0801eba5 	.word	0x0801eba5

08012b68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8012b68:	b508      	push	{r3, lr}
 8012b6a:	b180      	cbz	r0, 8012b8e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8012b6c:	2902      	cmp	r1, #2
 8012b6e:	d014      	beq.n	8012b9a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8012b70:	2903      	cmp	r1, #3
 8012b72:	d018      	beq.n	8012ba6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012b74:	2901      	cmp	r1, #1
 8012b76:	d001      	beq.n	8012b7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012b78:	2001      	movs	r0, #1
 8012b7a:	e013      	b.n	8012ba4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012b7c:	4b0e      	ldr	r3, [pc, #56]	; (8012bb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012b7e:	8818      	ldrh	r0, [r3, #0]
 8012b80:	b970      	cbnz	r0, 8012ba0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8012b82:	4b0e      	ldr	r3, [pc, #56]	; (8012bbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8012b84:	4a0e      	ldr	r2, [pc, #56]	; (8012bc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8012b86:	480f      	ldr	r0, [pc, #60]	; (8012bc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012b88:	2154      	movs	r1, #84	; 0x54
 8012b8a:	f007 fe2d 	bl	801a7e8 <__assert_func>
 8012b8e:	2902      	cmp	r1, #2
 8012b90:	d009      	beq.n	8012ba6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012b92:	2903      	cmp	r1, #3
 8012b94:	d0f0      	beq.n	8012b78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8012b96:	2901      	cmp	r1, #1
 8012b98:	d1f0      	bne.n	8012b7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012b9a:	f04f 30ff 	mov.w	r0, #4294967295
 8012b9e:	e001      	b.n	8012ba4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012ba0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012ba4:	bd08      	pop	{r3, pc}
 8012ba6:	4b04      	ldr	r3, [pc, #16]	; (8012bb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012ba8:	8818      	ldrh	r0, [r3, #0]
 8012baa:	2800      	cmp	r0, #0
 8012bac:	d0e9      	beq.n	8012b82 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8012bae:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012bb2:	4240      	negs	r0, r0
 8012bb4:	e7f6      	b.n	8012ba4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012bb6:	bf00      	nop
 8012bb8:	200123b6 	.word	0x200123b6
 8012bbc:	0801eb63 	.word	0x0801eb63
 8012bc0:	0801f0e3 	.word	0x0801f0e3
 8012bc4:	0801eba5 	.word	0x0801eba5

08012bc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8012bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bcc:	b097      	sub	sp, #92	; 0x5c
 8012bce:	910a      	str	r1, [sp, #40]	; 0x28
 8012bd0:	a912      	add	r1, sp, #72	; 0x48
 8012bd2:	e881 000c 	stmia.w	r1, {r2, r3}
 8012bd6:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8012bda:	9307      	str	r3, [sp, #28]
 8012bdc:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8012be0:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8012be4:	930f      	str	r3, [sp, #60]	; 0x3c
 8012be6:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8012bea:	930b      	str	r3, [sp, #44]	; 0x2c
 8012bec:	7b4b      	ldrb	r3, [r1, #13]
 8012bee:	798d      	ldrb	r5, [r1, #6]
 8012bf0:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8012bf4:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 8012bf8:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8012bfc:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8012c00:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8012c04:	0158      	lsls	r0, r3, #5
 8012c06:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012c0a:	4328      	orrs	r0, r5
 8012c0c:	9006      	str	r0, [sp, #24]
 8012c0e:	f000 8156 	beq.w	8012ebe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8012c12:	011b      	lsls	r3, r3, #4
 8012c14:	79c8      	ldrb	r0, [r1, #7]
 8012c16:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012c1a:	4303      	orrs	r3, r0
 8012c1c:	9308      	str	r3, [sp, #32]
 8012c1e:	f000 814e 	beq.w	8012ebe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8012c22:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8012c26:	b29b      	uxth	r3, r3
 8012c28:	2f00      	cmp	r7, #0
 8012c2a:	f000 80f2 	beq.w	8012e12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x24a>
 8012c2e:	1aff      	subs	r7, r7, r3
 8012c30:	b2bf      	uxth	r7, r7
 8012c32:	043b      	lsls	r3, r7, #16
 8012c34:	d502      	bpl.n	8012c3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8012c36:	1bf6      	subs	r6, r6, r7
 8012c38:	b236      	sxth	r6, r6
 8012c3a:	2700      	movs	r7, #0
 8012c3c:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012c40:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8012c44:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8012c48:	428e      	cmp	r6, r1
 8012c4a:	b28b      	uxth	r3, r1
 8012c4c:	bfbf      	itttt	lt
 8012c4e:	18ff      	addlt	r7, r7, r3
 8012c50:	1bbe      	sublt	r6, r7, r6
 8012c52:	b2b7      	uxthlt	r7, r6
 8012c54:	460e      	movlt	r6, r1
 8012c56:	8891      	ldrh	r1, [r2, #4]
 8012c58:	440b      	add	r3, r1
 8012c5a:	b21b      	sxth	r3, r3
 8012c5c:	930e      	str	r3, [sp, #56]	; 0x38
 8012c5e:	88d3      	ldrh	r3, [r2, #6]
 8012c60:	9a07      	ldr	r2, [sp, #28]
 8012c62:	449a      	add	sl, r3
 8012c64:	fa0f f38a 	sxth.w	r3, sl
 8012c68:	930d      	str	r3, [sp, #52]	; 0x34
 8012c6a:	4bbc      	ldr	r3, [pc, #752]	; (8012f5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8012c6c:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8012c70:	f893 b000 	ldrb.w	fp, [r3]
 8012c74:	f10b 3cff 	add.w	ip, fp, #4294967295
 8012c78:	f1dc 0300 	rsbs	r3, ip, #0
 8012c7c:	eb43 030c 	adc.w	r3, r3, ip
 8012c80:	930c      	str	r3, [sp, #48]	; 0x30
 8012c82:	4631      	mov	r1, r6
 8012c84:	464b      	mov	r3, r9
 8012c86:	a812      	add	r0, sp, #72	; 0x48
 8012c88:	f7f9 fe18 	bl	800c8bc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8012c8c:	4631      	mov	r1, r6
 8012c8e:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8012c92:	464b      	mov	r3, r9
 8012c94:	9a07      	ldr	r2, [sp, #28]
 8012c96:	a812      	add	r0, sp, #72	; 0x48
 8012c98:	f7f9 fe28 	bl	800c8ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8012c9c:	a916      	add	r1, sp, #88	; 0x58
 8012c9e:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8012ca2:	a815      	add	r0, sp, #84	; 0x54
 8012ca4:	f7f9 ff04 	bl	800cab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8012ca8:	f1b9 0f00 	cmp.w	r9, #0
 8012cac:	f040 80b4 	bne.w	8012e18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x250>
 8012cb0:	f1bb 0f01 	cmp.w	fp, #1
 8012cb4:	f040 80b8 	bne.w	8012e28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8012cb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012cba:	2b00      	cmp	r3, #0
 8012cbc:	f040 8104 	bne.w	8012ec8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 8012cc0:	4ba7      	ldr	r3, [pc, #668]	; (8012f60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8012cc2:	6818      	ldr	r0, [r3, #0]
 8012cc4:	6803      	ldr	r3, [r0, #0]
 8012cc6:	6a1b      	ldr	r3, [r3, #32]
 8012cc8:	4798      	blx	r3
 8012cca:	4aa6      	ldr	r2, [pc, #664]	; (8012f64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8012ccc:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8012cd0:	8811      	ldrh	r1, [r2, #0]
 8012cd2:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8012cd6:	fb01 2303 	mla	r3, r1, r3, r2
 8012cda:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012cde:	9308      	str	r3, [sp, #32]
 8012ce0:	2301      	movs	r3, #1
 8012ce2:	fa03 f308 	lsl.w	r3, r3, r8
 8012ce6:	3b01      	subs	r3, #1
 8012ce8:	b2db      	uxtb	r3, r3
 8012cea:	f1b8 0f01 	cmp.w	r8, #1
 8012cee:	9310      	str	r3, [sp, #64]	; 0x40
 8012cf0:	f000 80ec 	beq.w	8012ecc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8012cf4:	f1b8 0f02 	cmp.w	r8, #2
 8012cf8:	f000 80ea 	beq.w	8012ed0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x308>
 8012cfc:	f1b8 0f04 	cmp.w	r8, #4
 8012d00:	bf14      	ite	ne
 8012d02:	2301      	movne	r3, #1
 8012d04:	2311      	moveq	r3, #17
 8012d06:	9309      	str	r3, [sp, #36]	; 0x24
 8012d08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012d0a:	b153      	cbz	r3, 8012d22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8012d0c:	9a06      	ldr	r2, [sp, #24]
 8012d0e:	2508      	movs	r5, #8
 8012d10:	fb95 f3f8 	sdiv	r3, r5, r8
 8012d14:	1e5d      	subs	r5, r3, #1
 8012d16:	4415      	add	r5, r2
 8012d18:	fb95 f5f3 	sdiv	r5, r5, r3
 8012d1c:	fb15 f503 	smulbb	r5, r5, r3
 8012d20:	b2ad      	uxth	r5, r5
 8012d22:	b907      	cbnz	r7, 8012d26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8012d24:	b16c      	cbz	r4, 8012d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 8012d26:	fb04 7305 	mla	r3, r4, r5, r7
 8012d2a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8012d2c:	fb08 f303 	mul.w	r3, r8, r3
 8012d30:	ebaa 0a04 	sub.w	sl, sl, r4
 8012d34:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8012d38:	9226      	str	r2, [sp, #152]	; 0x98
 8012d3a:	fa1f fa8a 	uxth.w	sl, sl
 8012d3e:	f003 0407 	and.w	r4, r3, #7
 8012d42:	4649      	mov	r1, r9
 8012d44:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012d46:	f7ff fedf 	bl	8012b08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8012d4a:	4649      	mov	r1, r9
 8012d4c:	4683      	mov	fp, r0
 8012d4e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012d50:	f7ff ff0a 	bl	8012b68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8012d54:	9a07      	ldr	r2, [sp, #28]
 8012d56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012d58:	1a9b      	subs	r3, r3, r2
 8012d5a:	459a      	cmp	sl, r3
 8012d5c:	bfa8      	it	ge
 8012d5e:	469a      	movge	sl, r3
 8012d60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012d62:	1bf6      	subs	r6, r6, r7
 8012d64:	1b9e      	subs	r6, r3, r6
 8012d66:	9b06      	ldr	r3, [sp, #24]
 8012d68:	429e      	cmp	r6, r3
 8012d6a:	bfd4      	ite	le
 8012d6c:	ebc7 0706 	rsble	r7, r7, r6
 8012d70:	ebc7 0703 	rsbgt	r7, r7, r3
 8012d74:	1bed      	subs	r5, r5, r7
 8012d76:	fb08 f305 	mul.w	r3, r8, r5
 8012d7a:	9307      	str	r3, [sp, #28]
 8012d7c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012d7e:	781a      	ldrb	r2, [r3, #0]
 8012d80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012d82:	0a1b      	lsrs	r3, r3, #8
 8012d84:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012d88:	930d      	str	r3, [sp, #52]	; 0x34
 8012d8a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012d8c:	08db      	lsrs	r3, r3, #3
 8012d8e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8012d92:	930e      	str	r3, [sp, #56]	; 0x38
 8012d94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012d96:	00db      	lsls	r3, r3, #3
 8012d98:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012d9c:	930f      	str	r3, [sp, #60]	; 0x3c
 8012d9e:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8012da2:	fb0b 0b17 	mls	fp, fp, r7, r0
 8012da6:	ea27 70e7 	bic.w	r0, r7, r7, asr #31
 8012daa:	4358      	muls	r0, r3
 8012dac:	9306      	str	r3, [sp, #24]
 8012dae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012db0:	4122      	asrs	r2, r4
 8012db2:	b29b      	uxth	r3, r3
 8012db4:	b2d2      	uxtb	r2, r2
 8012db6:	9311      	str	r3, [sp, #68]	; 0x44
 8012db8:	eb00 0b4b 	add.w	fp, r0, fp, lsl #1
 8012dbc:	f1ba 0f00 	cmp.w	sl, #0
 8012dc0:	f340 80e5 	ble.w	8012f8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8012dc4:	f8dd c020 	ldr.w	ip, [sp, #32]
 8012dc8:	46be      	mov	lr, r7
 8012dca:	f1be 0f00 	cmp.w	lr, #0
 8012dce:	f340 80cb 	ble.w	8012f68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8012dd2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012dd4:	4013      	ands	r3, r2
 8012dd6:	d00a      	beq.n	8012dee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 8012dd8:	9909      	ldr	r1, [sp, #36]	; 0x24
 8012dda:	fb13 f301 	smulbb	r3, r3, r1
 8012dde:	2bfe      	cmp	r3, #254	; 0xfe
 8012de0:	dd78      	ble.n	8012ed4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8012de2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012de4:	29ff      	cmp	r1, #255	; 0xff
 8012de6:	d175      	bne.n	8012ed4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8012de8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012dea:	f8ac 0000 	strh.w	r0, [ip]
 8012dee:	4444      	add	r4, r8
 8012df0:	b2a4      	uxth	r4, r4
 8012df2:	2c07      	cmp	r4, #7
 8012df4:	bf81      	itttt	hi
 8012df6:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8012df8:	785a      	ldrbhi	r2, [r3, #1]
 8012dfa:	3301      	addhi	r3, #1
 8012dfc:	9326      	strhi	r3, [sp, #152]	; 0x98
 8012dfe:	9b06      	ldr	r3, [sp, #24]
 8012e00:	bf9a      	itte	ls
 8012e02:	fa42 f208 	asrls.w	r2, r2, r8
 8012e06:	b2d2      	uxtbls	r2, r2
 8012e08:	2400      	movhi	r4, #0
 8012e0a:	449c      	add	ip, r3
 8012e0c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012e10:	e7db      	b.n	8012dca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8012e12:	441e      	add	r6, r3
 8012e14:	b236      	sxth	r6, r6
 8012e16:	e711      	b.n	8012c3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8012e18:	f1b9 0f01 	cmp.w	r9, #1
 8012e1c:	f47f af4c 	bne.w	8012cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012e20:	f1bb 0f01 	cmp.w	fp, #1
 8012e24:	f47f af48 	bne.w	8012cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012e28:	f8df b134 	ldr.w	fp, [pc, #308]	; 8012f60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>
 8012e2c:	f8db 0000 	ldr.w	r0, [fp]
 8012e30:	6803      	ldr	r3, [r0, #0]
 8012e32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012e34:	4798      	blx	r3
 8012e36:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8012e3a:	465a      	mov	r2, fp
 8012e3c:	d006      	beq.n	8012e4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8012e3e:	f1b8 0f04 	cmp.w	r8, #4
 8012e42:	d13f      	bne.n	8012ec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fc>
 8012e44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012e46:	3300      	adds	r3, #0
 8012e48:	bf18      	it	ne
 8012e4a:	2301      	movne	r3, #1
 8012e4c:	05c0      	lsls	r0, r0, #23
 8012e4e:	f140 80a7 	bpl.w	8012fa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 8012e52:	f1b8 0f08 	cmp.w	r8, #8
 8012e56:	f040 80a3 	bne.w	8012fa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 8012e5a:	2b00      	cmp	r3, #0
 8012e5c:	bf0c      	ite	eq
 8012e5e:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8012e62:	2180      	movne	r1, #128	; 0x80
 8012e64:	2f00      	cmp	r7, #0
 8012e66:	f47f af27 	bne.w	8012cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012e6a:	2c00      	cmp	r4, #0
 8012e6c:	f47f af24 	bne.w	8012cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012e70:	9b06      	ldr	r3, [sp, #24]
 8012e72:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012e74:	18f3      	adds	r3, r6, r3
 8012e76:	4283      	cmp	r3, r0
 8012e78:	f73f af1e 	bgt.w	8012cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012e7c:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 8012e80:	4403      	add	r3, r0
 8012e82:	980d      	ldr	r0, [sp, #52]	; 0x34
 8012e84:	4283      	cmp	r3, r0
 8012e86:	f73f af17 	bgt.w	8012cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012e8a:	6810      	ldr	r0, [r2, #0]
 8012e8c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8012e90:	6804      	ldr	r4, [r0, #0]
 8012e92:	9105      	str	r1, [sp, #20]
 8012e94:	f1b8 0f08 	cmp.w	r8, #8
 8012e98:	bf18      	it	ne
 8012e9a:	3501      	addne	r5, #1
 8012e9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012e9e:	9104      	str	r1, [sp, #16]
 8012ea0:	bf18      	it	ne
 8012ea2:	f025 0501 	bicne.w	r5, r5, #1
 8012ea6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8012ea8:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8012eac:	bf18      	it	ne
 8012eae:	b2ad      	uxthne	r5, r5
 8012eb0:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8012eb4:	e9cd 5a00 	strd	r5, sl, [sp]
 8012eb8:	9926      	ldr	r1, [sp, #152]	; 0x98
 8012eba:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8012ebc:	47a0      	blx	r4
 8012ebe:	b017      	add	sp, #92	; 0x5c
 8012ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ec4:	2300      	movs	r3, #0
 8012ec6:	e7c1      	b.n	8012e4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8012ec8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012eca:	e6fe      	b.n	8012cca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8012ecc:	23ff      	movs	r3, #255	; 0xff
 8012ece:	e71a      	b.n	8012d06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8012ed0:	2355      	movs	r3, #85	; 0x55
 8012ed2:	e718      	b.n	8012d06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8012ed4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012ed6:	f8bc 5000 	ldrh.w	r5, [ip]
 8012eda:	fb11 f303 	smulbb	r3, r1, r3
 8012ede:	b29b      	uxth	r3, r3
 8012ee0:	1c59      	adds	r1, r3, #1
 8012ee2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8012ee6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8012eea:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012eec:	b29e      	uxth	r6, r3
 8012eee:	1228      	asrs	r0, r5, #8
 8012ef0:	43db      	mvns	r3, r3
 8012ef2:	b2db      	uxtb	r3, r3
 8012ef4:	fb11 f106 	smulbb	r1, r1, r6
 8012ef8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012efc:	fb00 1003 	mla	r0, r0, r3, r1
 8012f00:	b281      	uxth	r1, r0
 8012f02:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012f04:	910c      	str	r1, [sp, #48]	; 0x30
 8012f06:	fb16 f900 	smulbb	r9, r6, r0
 8012f0a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012f0c:	10e9      	asrs	r1, r5, #3
 8012f0e:	00ed      	lsls	r5, r5, #3
 8012f10:	fb16 f600 	smulbb	r6, r6, r0
 8012f14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012f18:	b2ed      	uxtb	r5, r5
 8012f1a:	fb01 9103 	mla	r1, r1, r3, r9
 8012f1e:	fb05 6603 	mla	r6, r5, r3, r6
 8012f22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f24:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012f26:	b2b6      	uxth	r6, r6
 8012f28:	3301      	adds	r3, #1
 8012f2a:	f106 0901 	add.w	r9, r6, #1
 8012f2e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012f32:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8012f36:	b289      	uxth	r1, r1
 8012f38:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8012f3c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8012f40:	ea40 0009 	orr.w	r0, r0, r9
 8012f44:	f101 0901 	add.w	r9, r1, #1
 8012f48:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8012f4c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012f50:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012f54:	ea40 0009 	orr.w	r0, r0, r9
 8012f58:	e747      	b.n	8012dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 8012f5a:	bf00      	nop
 8012f5c:	200123b4 	.word	0x200123b4
 8012f60:	200123bc 	.word	0x200123bc
 8012f64:	200123b6 	.word	0x200123b6
 8012f68:	9b07      	ldr	r3, [sp, #28]
 8012f6a:	b153      	cbz	r3, 8012f82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8012f6c:	441c      	add	r4, r3
 8012f6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012f70:	b2a4      	uxth	r4, r4
 8012f72:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8012f76:	f004 0407 	and.w	r4, r4, #7
 8012f7a:	781a      	ldrb	r2, [r3, #0]
 8012f7c:	9326      	str	r3, [sp, #152]	; 0x98
 8012f7e:	4122      	asrs	r2, r4
 8012f80:	b2d2      	uxtb	r2, r2
 8012f82:	9b08      	ldr	r3, [sp, #32]
 8012f84:	445b      	add	r3, fp
 8012f86:	9308      	str	r3, [sp, #32]
 8012f88:	f10a 3aff 	add.w	sl, sl, #4294967295
 8012f8c:	e716      	b.n	8012dbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8012f8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012f90:	2b00      	cmp	r3, #0
 8012f92:	d194      	bne.n	8012ebe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8012f94:	4b05      	ldr	r3, [pc, #20]	; (8012fac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>)
 8012f96:	6818      	ldr	r0, [r3, #0]
 8012f98:	6803      	ldr	r3, [r0, #0]
 8012f9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012f9c:	4798      	blx	r3
 8012f9e:	e78e      	b.n	8012ebe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8012fa0:	2b00      	cmp	r3, #0
 8012fa2:	f43f ae89 	beq.w	8012cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012fa6:	2180      	movs	r1, #128	; 0x80
 8012fa8:	e75c      	b.n	8012e64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29c>
 8012faa:	bf00      	nop
 8012fac:	200123bc 	.word	0x200123bc

08012fb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8012fb0:	b538      	push	{r3, r4, r5, lr}
 8012fb2:	4c15      	ldr	r4, [pc, #84]	; (8013008 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8012fb4:	7823      	ldrb	r3, [r4, #0]
 8012fb6:	f3bf 8f5b 	dmb	ish
 8012fba:	07da      	lsls	r2, r3, #31
 8012fbc:	4605      	mov	r5, r0
 8012fbe:	d40b      	bmi.n	8012fd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012fc0:	4620      	mov	r0, r4
 8012fc2:	f007 fbe7 	bl	801a794 <__cxa_guard_acquire>
 8012fc6:	b138      	cbz	r0, 8012fd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012fc8:	4620      	mov	r0, r4
 8012fca:	f007 fbef 	bl	801a7ac <__cxa_guard_release>
 8012fce:	4a0f      	ldr	r2, [pc, #60]	; (801300c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8012fd0:	490f      	ldr	r1, [pc, #60]	; (8013010 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8012fd2:	4810      	ldr	r0, [pc, #64]	; (8013014 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8012fd4:	f007 fbd4 	bl	801a780 <__aeabi_atexit>
 8012fd8:	4c0f      	ldr	r4, [pc, #60]	; (8013018 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8012fda:	7823      	ldrb	r3, [r4, #0]
 8012fdc:	f3bf 8f5b 	dmb	ish
 8012fe0:	07db      	lsls	r3, r3, #31
 8012fe2:	d40b      	bmi.n	8012ffc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8012fe4:	4620      	mov	r0, r4
 8012fe6:	f007 fbd5 	bl	801a794 <__cxa_guard_acquire>
 8012fea:	b138      	cbz	r0, 8012ffc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8012fec:	4620      	mov	r0, r4
 8012fee:	f007 fbdd 	bl	801a7ac <__cxa_guard_release>
 8012ff2:	4a06      	ldr	r2, [pc, #24]	; (801300c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8012ff4:	4909      	ldr	r1, [pc, #36]	; (801301c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8012ff6:	480a      	ldr	r0, [pc, #40]	; (8013020 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8012ff8:	f007 fbc2 	bl	801a780 <__aeabi_atexit>
 8012ffc:	4b05      	ldr	r3, [pc, #20]	; (8013014 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8012ffe:	612b      	str	r3, [r5, #16]
 8013000:	4b07      	ldr	r3, [pc, #28]	; (8013020 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013002:	616b      	str	r3, [r5, #20]
 8013004:	bd38      	pop	{r3, r4, r5, pc}
 8013006:	bf00      	nop
 8013008:	200124a8 	.word	0x200124a8
 801300c:	20000000 	.word	0x20000000
 8013010:	08011655 	.word	0x08011655
 8013014:	200000d8 	.word	0x200000d8
 8013018:	200124ac 	.word	0x200124ac
 801301c:	08011653 	.word	0x08011653
 8013020:	200000dc 	.word	0x200000dc

08013024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013024:	b538      	push	{r3, r4, r5, lr}
 8013026:	4c15      	ldr	r4, [pc, #84]	; (801307c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013028:	7823      	ldrb	r3, [r4, #0]
 801302a:	f3bf 8f5b 	dmb	ish
 801302e:	07da      	lsls	r2, r3, #31
 8013030:	4605      	mov	r5, r0
 8013032:	d40b      	bmi.n	801304c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013034:	4620      	mov	r0, r4
 8013036:	f007 fbad 	bl	801a794 <__cxa_guard_acquire>
 801303a:	b138      	cbz	r0, 801304c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801303c:	4620      	mov	r0, r4
 801303e:	f007 fbb5 	bl	801a7ac <__cxa_guard_release>
 8013042:	4a0f      	ldr	r2, [pc, #60]	; (8013080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013044:	490f      	ldr	r1, [pc, #60]	; (8013084 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013046:	4810      	ldr	r0, [pc, #64]	; (8013088 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013048:	f007 fb9a 	bl	801a780 <__aeabi_atexit>
 801304c:	4c0f      	ldr	r4, [pc, #60]	; (801308c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801304e:	7823      	ldrb	r3, [r4, #0]
 8013050:	f3bf 8f5b 	dmb	ish
 8013054:	07db      	lsls	r3, r3, #31
 8013056:	d40b      	bmi.n	8013070 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013058:	4620      	mov	r0, r4
 801305a:	f007 fb9b 	bl	801a794 <__cxa_guard_acquire>
 801305e:	b138      	cbz	r0, 8013070 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013060:	4620      	mov	r0, r4
 8013062:	f007 fba3 	bl	801a7ac <__cxa_guard_release>
 8013066:	4a06      	ldr	r2, [pc, #24]	; (8013080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013068:	4909      	ldr	r1, [pc, #36]	; (8013090 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801306a:	480a      	ldr	r0, [pc, #40]	; (8013094 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801306c:	f007 fb88 	bl	801a780 <__aeabi_atexit>
 8013070:	4b05      	ldr	r3, [pc, #20]	; (8013088 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013072:	60ab      	str	r3, [r5, #8]
 8013074:	4b07      	ldr	r3, [pc, #28]	; (8013094 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013076:	60eb      	str	r3, [r5, #12]
 8013078:	bd38      	pop	{r3, r4, r5, pc}
 801307a:	bf00      	nop
 801307c:	20012480 	.word	0x20012480
 8013080:	20000000 	.word	0x20000000
 8013084:	08011659 	.word	0x08011659
 8013088:	200000b0 	.word	0x200000b0
 801308c:	20012484 	.word	0x20012484
 8013090:	08011657 	.word	0x08011657
 8013094:	200000b4 	.word	0x200000b4

08013098 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013098:	b510      	push	{r4, lr}
 801309a:	4604      	mov	r4, r0
 801309c:	f7ff ff88 	bl	8012fb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80130a0:	4620      	mov	r0, r4
 80130a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80130a6:	f7ff bfbd 	b.w	8013024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080130ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80130ac:	b538      	push	{r3, r4, r5, lr}
 80130ae:	4c15      	ldr	r4, [pc, #84]	; (8013104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80130b0:	7823      	ldrb	r3, [r4, #0]
 80130b2:	f3bf 8f5b 	dmb	ish
 80130b6:	07da      	lsls	r2, r3, #31
 80130b8:	4605      	mov	r5, r0
 80130ba:	d40b      	bmi.n	80130d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80130bc:	4620      	mov	r0, r4
 80130be:	f007 fb69 	bl	801a794 <__cxa_guard_acquire>
 80130c2:	b138      	cbz	r0, 80130d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80130c4:	4620      	mov	r0, r4
 80130c6:	f007 fb71 	bl	801a7ac <__cxa_guard_release>
 80130ca:	4a0f      	ldr	r2, [pc, #60]	; (8013108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80130cc:	490f      	ldr	r1, [pc, #60]	; (801310c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80130ce:	4810      	ldr	r0, [pc, #64]	; (8013110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80130d0:	f007 fb56 	bl	801a780 <__aeabi_atexit>
 80130d4:	4c0f      	ldr	r4, [pc, #60]	; (8013114 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80130d6:	7823      	ldrb	r3, [r4, #0]
 80130d8:	f3bf 8f5b 	dmb	ish
 80130dc:	07db      	lsls	r3, r3, #31
 80130de:	d40b      	bmi.n	80130f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80130e0:	4620      	mov	r0, r4
 80130e2:	f007 fb57 	bl	801a794 <__cxa_guard_acquire>
 80130e6:	b138      	cbz	r0, 80130f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80130e8:	4620      	mov	r0, r4
 80130ea:	f007 fb5f 	bl	801a7ac <__cxa_guard_release>
 80130ee:	4a06      	ldr	r2, [pc, #24]	; (8013108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80130f0:	4909      	ldr	r1, [pc, #36]	; (8013118 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80130f2:	480a      	ldr	r0, [pc, #40]	; (801311c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80130f4:	f007 fb44 	bl	801a780 <__aeabi_atexit>
 80130f8:	4b05      	ldr	r3, [pc, #20]	; (8013110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80130fa:	622b      	str	r3, [r5, #32]
 80130fc:	4b07      	ldr	r3, [pc, #28]	; (801311c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80130fe:	626b      	str	r3, [r5, #36]	; 0x24
 8013100:	bd38      	pop	{r3, r4, r5, pc}
 8013102:	bf00      	nop
 8013104:	200124b0 	.word	0x200124b0
 8013108:	20000000 	.word	0x20000000
 801310c:	0801164d 	.word	0x0801164d
 8013110:	200000e0 	.word	0x200000e0
 8013114:	200124b4 	.word	0x200124b4
 8013118:	0801164b 	.word	0x0801164b
 801311c:	200000e4 	.word	0x200000e4

08013120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013120:	b538      	push	{r3, r4, r5, lr}
 8013122:	4c15      	ldr	r4, [pc, #84]	; (8013178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013124:	7823      	ldrb	r3, [r4, #0]
 8013126:	f3bf 8f5b 	dmb	ish
 801312a:	07da      	lsls	r2, r3, #31
 801312c:	4605      	mov	r5, r0
 801312e:	d40b      	bmi.n	8013148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013130:	4620      	mov	r0, r4
 8013132:	f007 fb2f 	bl	801a794 <__cxa_guard_acquire>
 8013136:	b138      	cbz	r0, 8013148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013138:	4620      	mov	r0, r4
 801313a:	f007 fb37 	bl	801a7ac <__cxa_guard_release>
 801313e:	4a0f      	ldr	r2, [pc, #60]	; (801317c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013140:	490f      	ldr	r1, [pc, #60]	; (8013180 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013142:	4810      	ldr	r0, [pc, #64]	; (8013184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013144:	f007 fb1c 	bl	801a780 <__aeabi_atexit>
 8013148:	4c0f      	ldr	r4, [pc, #60]	; (8013188 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801314a:	7823      	ldrb	r3, [r4, #0]
 801314c:	f3bf 8f5b 	dmb	ish
 8013150:	07db      	lsls	r3, r3, #31
 8013152:	d40b      	bmi.n	801316c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013154:	4620      	mov	r0, r4
 8013156:	f007 fb1d 	bl	801a794 <__cxa_guard_acquire>
 801315a:	b138      	cbz	r0, 801316c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801315c:	4620      	mov	r0, r4
 801315e:	f007 fb25 	bl	801a7ac <__cxa_guard_release>
 8013162:	4a06      	ldr	r2, [pc, #24]	; (801317c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013164:	4909      	ldr	r1, [pc, #36]	; (801318c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013166:	480a      	ldr	r0, [pc, #40]	; (8013190 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013168:	f007 fb0a 	bl	801a780 <__aeabi_atexit>
 801316c:	4b05      	ldr	r3, [pc, #20]	; (8013184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801316e:	61ab      	str	r3, [r5, #24]
 8013170:	4b07      	ldr	r3, [pc, #28]	; (8013190 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013172:	61eb      	str	r3, [r5, #28]
 8013174:	bd38      	pop	{r3, r4, r5, pc}
 8013176:	bf00      	nop
 8013178:	20012488 	.word	0x20012488
 801317c:	20000000 	.word	0x20000000
 8013180:	08011651 	.word	0x08011651
 8013184:	200000b8 	.word	0x200000b8
 8013188:	2001248c 	.word	0x2001248c
 801318c:	0801164f 	.word	0x0801164f
 8013190:	200000bc 	.word	0x200000bc

08013194 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013194:	b510      	push	{r4, lr}
 8013196:	4604      	mov	r4, r0
 8013198:	f7ff ff88 	bl	80130ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801319c:	4620      	mov	r0, r4
 801319e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131a2:	f7ff bfbd 	b.w	8013120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080131a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80131a8:	b538      	push	{r3, r4, r5, lr}
 80131aa:	4c15      	ldr	r4, [pc, #84]	; (8013200 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80131ac:	7823      	ldrb	r3, [r4, #0]
 80131ae:	f3bf 8f5b 	dmb	ish
 80131b2:	07da      	lsls	r2, r3, #31
 80131b4:	4605      	mov	r5, r0
 80131b6:	d40b      	bmi.n	80131d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80131b8:	4620      	mov	r0, r4
 80131ba:	f007 faeb 	bl	801a794 <__cxa_guard_acquire>
 80131be:	b138      	cbz	r0, 80131d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80131c0:	4620      	mov	r0, r4
 80131c2:	f007 faf3 	bl	801a7ac <__cxa_guard_release>
 80131c6:	4a0f      	ldr	r2, [pc, #60]	; (8013204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80131c8:	490f      	ldr	r1, [pc, #60]	; (8013208 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80131ca:	4810      	ldr	r0, [pc, #64]	; (801320c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80131cc:	f007 fad8 	bl	801a780 <__aeabi_atexit>
 80131d0:	4c0f      	ldr	r4, [pc, #60]	; (8013210 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80131d2:	7823      	ldrb	r3, [r4, #0]
 80131d4:	f3bf 8f5b 	dmb	ish
 80131d8:	07db      	lsls	r3, r3, #31
 80131da:	d40b      	bmi.n	80131f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80131dc:	4620      	mov	r0, r4
 80131de:	f007 fad9 	bl	801a794 <__cxa_guard_acquire>
 80131e2:	b138      	cbz	r0, 80131f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80131e4:	4620      	mov	r0, r4
 80131e6:	f007 fae1 	bl	801a7ac <__cxa_guard_release>
 80131ea:	4a06      	ldr	r2, [pc, #24]	; (8013204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80131ec:	4909      	ldr	r1, [pc, #36]	; (8013214 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80131ee:	480a      	ldr	r0, [pc, #40]	; (8013218 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80131f0:	f007 fac6 	bl	801a780 <__aeabi_atexit>
 80131f4:	4b05      	ldr	r3, [pc, #20]	; (801320c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80131f6:	632b      	str	r3, [r5, #48]	; 0x30
 80131f8:	4b07      	ldr	r3, [pc, #28]	; (8013218 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80131fa:	636b      	str	r3, [r5, #52]	; 0x34
 80131fc:	bd38      	pop	{r3, r4, r5, pc}
 80131fe:	bf00      	nop
 8013200:	200124c0 	.word	0x200124c0
 8013204:	20000000 	.word	0x20000000
 8013208:	08011645 	.word	0x08011645
 801320c:	200000f0 	.word	0x200000f0
 8013210:	200124c4 	.word	0x200124c4
 8013214:	08011643 	.word	0x08011643
 8013218:	200000f4 	.word	0x200000f4

0801321c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801321c:	b538      	push	{r3, r4, r5, lr}
 801321e:	4c15      	ldr	r4, [pc, #84]	; (8013274 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013220:	7823      	ldrb	r3, [r4, #0]
 8013222:	f3bf 8f5b 	dmb	ish
 8013226:	07da      	lsls	r2, r3, #31
 8013228:	4605      	mov	r5, r0
 801322a:	d40b      	bmi.n	8013244 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801322c:	4620      	mov	r0, r4
 801322e:	f007 fab1 	bl	801a794 <__cxa_guard_acquire>
 8013232:	b138      	cbz	r0, 8013244 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013234:	4620      	mov	r0, r4
 8013236:	f007 fab9 	bl	801a7ac <__cxa_guard_release>
 801323a:	4a0f      	ldr	r2, [pc, #60]	; (8013278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801323c:	490f      	ldr	r1, [pc, #60]	; (801327c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801323e:	4810      	ldr	r0, [pc, #64]	; (8013280 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013240:	f007 fa9e 	bl	801a780 <__aeabi_atexit>
 8013244:	4c0f      	ldr	r4, [pc, #60]	; (8013284 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013246:	7823      	ldrb	r3, [r4, #0]
 8013248:	f3bf 8f5b 	dmb	ish
 801324c:	07db      	lsls	r3, r3, #31
 801324e:	d40b      	bmi.n	8013268 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013250:	4620      	mov	r0, r4
 8013252:	f007 fa9f 	bl	801a794 <__cxa_guard_acquire>
 8013256:	b138      	cbz	r0, 8013268 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013258:	4620      	mov	r0, r4
 801325a:	f007 faa7 	bl	801a7ac <__cxa_guard_release>
 801325e:	4a06      	ldr	r2, [pc, #24]	; (8013278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013260:	4909      	ldr	r1, [pc, #36]	; (8013288 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013262:	480a      	ldr	r0, [pc, #40]	; (801328c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013264:	f007 fa8c 	bl	801a780 <__aeabi_atexit>
 8013268:	4b05      	ldr	r3, [pc, #20]	; (8013280 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801326a:	62ab      	str	r3, [r5, #40]	; 0x28
 801326c:	4b07      	ldr	r3, [pc, #28]	; (801328c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801326e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013270:	bd38      	pop	{r3, r4, r5, pc}
 8013272:	bf00      	nop
 8013274:	20012490 	.word	0x20012490
 8013278:	20000000 	.word	0x20000000
 801327c:	08011649 	.word	0x08011649
 8013280:	200000c0 	.word	0x200000c0
 8013284:	20012494 	.word	0x20012494
 8013288:	08011647 	.word	0x08011647
 801328c:	200000c4 	.word	0x200000c4

08013290 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013290:	b510      	push	{r4, lr}
 8013292:	4604      	mov	r4, r0
 8013294:	f7ff ff88 	bl	80131a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013298:	4620      	mov	r0, r4
 801329a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801329e:	f7ff bfbd 	b.w	801321c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080132a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80132a4:	b538      	push	{r3, r4, r5, lr}
 80132a6:	4c15      	ldr	r4, [pc, #84]	; (80132fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80132a8:	7823      	ldrb	r3, [r4, #0]
 80132aa:	f3bf 8f5b 	dmb	ish
 80132ae:	07da      	lsls	r2, r3, #31
 80132b0:	4605      	mov	r5, r0
 80132b2:	d40b      	bmi.n	80132cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80132b4:	4620      	mov	r0, r4
 80132b6:	f007 fa6d 	bl	801a794 <__cxa_guard_acquire>
 80132ba:	b138      	cbz	r0, 80132cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80132bc:	4620      	mov	r0, r4
 80132be:	f007 fa75 	bl	801a7ac <__cxa_guard_release>
 80132c2:	4a0f      	ldr	r2, [pc, #60]	; (8013300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80132c4:	490f      	ldr	r1, [pc, #60]	; (8013304 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80132c6:	4810      	ldr	r0, [pc, #64]	; (8013308 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80132c8:	f007 fa5a 	bl	801a780 <__aeabi_atexit>
 80132cc:	4c0f      	ldr	r4, [pc, #60]	; (801330c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80132ce:	7823      	ldrb	r3, [r4, #0]
 80132d0:	f3bf 8f5b 	dmb	ish
 80132d4:	07db      	lsls	r3, r3, #31
 80132d6:	d40b      	bmi.n	80132f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80132d8:	4620      	mov	r0, r4
 80132da:	f007 fa5b 	bl	801a794 <__cxa_guard_acquire>
 80132de:	b138      	cbz	r0, 80132f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80132e0:	4620      	mov	r0, r4
 80132e2:	f007 fa63 	bl	801a7ac <__cxa_guard_release>
 80132e6:	4a06      	ldr	r2, [pc, #24]	; (8013300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80132e8:	4909      	ldr	r1, [pc, #36]	; (8013310 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80132ea:	480a      	ldr	r0, [pc, #40]	; (8013314 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80132ec:	f007 fa48 	bl	801a780 <__aeabi_atexit>
 80132f0:	4b05      	ldr	r3, [pc, #20]	; (8013308 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80132f2:	652b      	str	r3, [r5, #80]	; 0x50
 80132f4:	4b07      	ldr	r3, [pc, #28]	; (8013314 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80132f6:	656b      	str	r3, [r5, #84]	; 0x54
 80132f8:	bd38      	pop	{r3, r4, r5, pc}
 80132fa:	bf00      	nop
 80132fc:	200124c8 	.word	0x200124c8
 8013300:	20000000 	.word	0x20000000
 8013304:	08011635 	.word	0x08011635
 8013308:	200000f8 	.word	0x200000f8
 801330c:	200124cc 	.word	0x200124cc
 8013310:	08011633 	.word	0x08011633
 8013314:	200000fc 	.word	0x200000fc

08013318 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013318:	b538      	push	{r3, r4, r5, lr}
 801331a:	4c15      	ldr	r4, [pc, #84]	; (8013370 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801331c:	7823      	ldrb	r3, [r4, #0]
 801331e:	f3bf 8f5b 	dmb	ish
 8013322:	07da      	lsls	r2, r3, #31
 8013324:	4605      	mov	r5, r0
 8013326:	d40b      	bmi.n	8013340 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013328:	4620      	mov	r0, r4
 801332a:	f007 fa33 	bl	801a794 <__cxa_guard_acquire>
 801332e:	b138      	cbz	r0, 8013340 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013330:	4620      	mov	r0, r4
 8013332:	f007 fa3b 	bl	801a7ac <__cxa_guard_release>
 8013336:	4a0f      	ldr	r2, [pc, #60]	; (8013374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013338:	490f      	ldr	r1, [pc, #60]	; (8013378 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801333a:	4810      	ldr	r0, [pc, #64]	; (801337c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801333c:	f007 fa20 	bl	801a780 <__aeabi_atexit>
 8013340:	4c0f      	ldr	r4, [pc, #60]	; (8013380 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013342:	7823      	ldrb	r3, [r4, #0]
 8013344:	f3bf 8f5b 	dmb	ish
 8013348:	07db      	lsls	r3, r3, #31
 801334a:	d40b      	bmi.n	8013364 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801334c:	4620      	mov	r0, r4
 801334e:	f007 fa21 	bl	801a794 <__cxa_guard_acquire>
 8013352:	b138      	cbz	r0, 8013364 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013354:	4620      	mov	r0, r4
 8013356:	f007 fa29 	bl	801a7ac <__cxa_guard_release>
 801335a:	4a06      	ldr	r2, [pc, #24]	; (8013374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801335c:	4909      	ldr	r1, [pc, #36]	; (8013384 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801335e:	480a      	ldr	r0, [pc, #40]	; (8013388 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013360:	f007 fa0e 	bl	801a780 <__aeabi_atexit>
 8013364:	4b05      	ldr	r3, [pc, #20]	; (801337c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013366:	64ab      	str	r3, [r5, #72]	; 0x48
 8013368:	4b07      	ldr	r3, [pc, #28]	; (8013388 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801336a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801336c:	bd38      	pop	{r3, r4, r5, pc}
 801336e:	bf00      	nop
 8013370:	200124d0 	.word	0x200124d0
 8013374:	20000000 	.word	0x20000000
 8013378:	08011639 	.word	0x08011639
 801337c:	20000100 	.word	0x20000100
 8013380:	200124d4 	.word	0x200124d4
 8013384:	08011637 	.word	0x08011637
 8013388:	20000104 	.word	0x20000104

0801338c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801338c:	b538      	push	{r3, r4, r5, lr}
 801338e:	4c15      	ldr	r4, [pc, #84]	; (80133e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8013390:	7823      	ldrb	r3, [r4, #0]
 8013392:	f3bf 8f5b 	dmb	ish
 8013396:	07da      	lsls	r2, r3, #31
 8013398:	4605      	mov	r5, r0
 801339a:	d40b      	bmi.n	80133b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801339c:	4620      	mov	r0, r4
 801339e:	f007 f9f9 	bl	801a794 <__cxa_guard_acquire>
 80133a2:	b138      	cbz	r0, 80133b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80133a4:	4620      	mov	r0, r4
 80133a6:	f007 fa01 	bl	801a7ac <__cxa_guard_release>
 80133aa:	4a0f      	ldr	r2, [pc, #60]	; (80133e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80133ac:	490f      	ldr	r1, [pc, #60]	; (80133ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80133ae:	4810      	ldr	r0, [pc, #64]	; (80133f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80133b0:	f007 f9e6 	bl	801a780 <__aeabi_atexit>
 80133b4:	4c0f      	ldr	r4, [pc, #60]	; (80133f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80133b6:	7823      	ldrb	r3, [r4, #0]
 80133b8:	f3bf 8f5b 	dmb	ish
 80133bc:	07db      	lsls	r3, r3, #31
 80133be:	d40b      	bmi.n	80133d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80133c0:	4620      	mov	r0, r4
 80133c2:	f007 f9e7 	bl	801a794 <__cxa_guard_acquire>
 80133c6:	b138      	cbz	r0, 80133d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80133c8:	4620      	mov	r0, r4
 80133ca:	f007 f9ef 	bl	801a7ac <__cxa_guard_release>
 80133ce:	4a06      	ldr	r2, [pc, #24]	; (80133e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80133d0:	4909      	ldr	r1, [pc, #36]	; (80133f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80133d2:	480a      	ldr	r0, [pc, #40]	; (80133fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80133d4:	f007 f9d4 	bl	801a780 <__aeabi_atexit>
 80133d8:	4b05      	ldr	r3, [pc, #20]	; (80133f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80133da:	642b      	str	r3, [r5, #64]	; 0x40
 80133dc:	4b07      	ldr	r3, [pc, #28]	; (80133fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80133de:	646b      	str	r3, [r5, #68]	; 0x44
 80133e0:	bd38      	pop	{r3, r4, r5, pc}
 80133e2:	bf00      	nop
 80133e4:	20012498 	.word	0x20012498
 80133e8:	20000000 	.word	0x20000000
 80133ec:	0801163d 	.word	0x0801163d
 80133f0:	200000c8 	.word	0x200000c8
 80133f4:	2001249c 	.word	0x2001249c
 80133f8:	0801163b 	.word	0x0801163b
 80133fc:	200000cc 	.word	0x200000cc

08013400 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013400:	b538      	push	{r3, r4, r5, lr}
 8013402:	4c15      	ldr	r4, [pc, #84]	; (8013458 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8013404:	7823      	ldrb	r3, [r4, #0]
 8013406:	f3bf 8f5b 	dmb	ish
 801340a:	07da      	lsls	r2, r3, #31
 801340c:	4605      	mov	r5, r0
 801340e:	d40b      	bmi.n	8013428 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013410:	4620      	mov	r0, r4
 8013412:	f007 f9bf 	bl	801a794 <__cxa_guard_acquire>
 8013416:	b138      	cbz	r0, 8013428 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013418:	4620      	mov	r0, r4
 801341a:	f007 f9c7 	bl	801a7ac <__cxa_guard_release>
 801341e:	4a0f      	ldr	r2, [pc, #60]	; (801345c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013420:	490f      	ldr	r1, [pc, #60]	; (8013460 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8013422:	4810      	ldr	r0, [pc, #64]	; (8013464 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013424:	f007 f9ac 	bl	801a780 <__aeabi_atexit>
 8013428:	4c0f      	ldr	r4, [pc, #60]	; (8013468 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801342a:	7823      	ldrb	r3, [r4, #0]
 801342c:	f3bf 8f5b 	dmb	ish
 8013430:	07db      	lsls	r3, r3, #31
 8013432:	d40b      	bmi.n	801344c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013434:	4620      	mov	r0, r4
 8013436:	f007 f9ad 	bl	801a794 <__cxa_guard_acquire>
 801343a:	b138      	cbz	r0, 801344c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801343c:	4620      	mov	r0, r4
 801343e:	f007 f9b5 	bl	801a7ac <__cxa_guard_release>
 8013442:	4a06      	ldr	r2, [pc, #24]	; (801345c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013444:	4909      	ldr	r1, [pc, #36]	; (801346c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8013446:	480a      	ldr	r0, [pc, #40]	; (8013470 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013448:	f007 f99a 	bl	801a780 <__aeabi_atexit>
 801344c:	4b05      	ldr	r3, [pc, #20]	; (8013464 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801344e:	63ab      	str	r3, [r5, #56]	; 0x38
 8013450:	4b07      	ldr	r3, [pc, #28]	; (8013470 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013452:	63eb      	str	r3, [r5, #60]	; 0x3c
 8013454:	bd38      	pop	{r3, r4, r5, pc}
 8013456:	bf00      	nop
 8013458:	200124b8 	.word	0x200124b8
 801345c:	20000000 	.word	0x20000000
 8013460:	08011641 	.word	0x08011641
 8013464:	200000e8 	.word	0x200000e8
 8013468:	200124bc 	.word	0x200124bc
 801346c:	0801163f 	.word	0x0801163f
 8013470:	200000ec 	.word	0x200000ec

08013474 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8013474:	b510      	push	{r4, lr}
 8013476:	4604      	mov	r4, r0
 8013478:	f7ff ff14 	bl	80132a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801347c:	4620      	mov	r0, r4
 801347e:	f7ff ff85 	bl	801338c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8013482:	4620      	mov	r0, r4
 8013484:	f7ff ff48 	bl	8013318 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8013488:	4620      	mov	r0, r4
 801348a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801348e:	f7ff bfb7 	b.w	8013400 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08013494 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8013494:	b538      	push	{r3, r4, r5, lr}
 8013496:	4c15      	ldr	r4, [pc, #84]	; (80134ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8013498:	7823      	ldrb	r3, [r4, #0]
 801349a:	f3bf 8f5b 	dmb	ish
 801349e:	07da      	lsls	r2, r3, #31
 80134a0:	4605      	mov	r5, r0
 80134a2:	d40b      	bmi.n	80134bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80134a4:	4620      	mov	r0, r4
 80134a6:	f007 f975 	bl	801a794 <__cxa_guard_acquire>
 80134aa:	b138      	cbz	r0, 80134bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80134ac:	4620      	mov	r0, r4
 80134ae:	f007 f97d 	bl	801a7ac <__cxa_guard_release>
 80134b2:	4a0f      	ldr	r2, [pc, #60]	; (80134f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80134b4:	490f      	ldr	r1, [pc, #60]	; (80134f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80134b6:	4810      	ldr	r0, [pc, #64]	; (80134f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80134b8:	f007 f962 	bl	801a780 <__aeabi_atexit>
 80134bc:	4c0f      	ldr	r4, [pc, #60]	; (80134fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80134be:	7823      	ldrb	r3, [r4, #0]
 80134c0:	f3bf 8f5b 	dmb	ish
 80134c4:	07db      	lsls	r3, r3, #31
 80134c6:	d40b      	bmi.n	80134e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80134c8:	4620      	mov	r0, r4
 80134ca:	f007 f963 	bl	801a794 <__cxa_guard_acquire>
 80134ce:	b138      	cbz	r0, 80134e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80134d0:	4620      	mov	r0, r4
 80134d2:	f007 f96b 	bl	801a7ac <__cxa_guard_release>
 80134d6:	4a06      	ldr	r2, [pc, #24]	; (80134f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80134d8:	4909      	ldr	r1, [pc, #36]	; (8013500 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80134da:	480a      	ldr	r0, [pc, #40]	; (8013504 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80134dc:	f007 f950 	bl	801a780 <__aeabi_atexit>
 80134e0:	4b05      	ldr	r3, [pc, #20]	; (80134f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80134e2:	662b      	str	r3, [r5, #96]	; 0x60
 80134e4:	4b07      	ldr	r3, [pc, #28]	; (8013504 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80134e6:	666b      	str	r3, [r5, #100]	; 0x64
 80134e8:	bd38      	pop	{r3, r4, r5, pc}
 80134ea:	bf00      	nop
 80134ec:	200124a0 	.word	0x200124a0
 80134f0:	20000000 	.word	0x20000000
 80134f4:	0801162d 	.word	0x0801162d
 80134f8:	200000d0 	.word	0x200000d0
 80134fc:	200124a4 	.word	0x200124a4
 8013500:	0801162b 	.word	0x0801162b
 8013504:	200000d4 	.word	0x200000d4

08013508 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013508:	b538      	push	{r3, r4, r5, lr}
 801350a:	4c15      	ldr	r4, [pc, #84]	; (8013560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801350c:	7823      	ldrb	r3, [r4, #0]
 801350e:	f3bf 8f5b 	dmb	ish
 8013512:	07da      	lsls	r2, r3, #31
 8013514:	4605      	mov	r5, r0
 8013516:	d40b      	bmi.n	8013530 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013518:	4620      	mov	r0, r4
 801351a:	f007 f93b 	bl	801a794 <__cxa_guard_acquire>
 801351e:	b138      	cbz	r0, 8013530 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013520:	4620      	mov	r0, r4
 8013522:	f007 f943 	bl	801a7ac <__cxa_guard_release>
 8013526:	4a0f      	ldr	r2, [pc, #60]	; (8013564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013528:	490f      	ldr	r1, [pc, #60]	; (8013568 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801352a:	4810      	ldr	r0, [pc, #64]	; (801356c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801352c:	f007 f928 	bl	801a780 <__aeabi_atexit>
 8013530:	4c0f      	ldr	r4, [pc, #60]	; (8013570 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8013532:	7823      	ldrb	r3, [r4, #0]
 8013534:	f3bf 8f5b 	dmb	ish
 8013538:	07db      	lsls	r3, r3, #31
 801353a:	d40b      	bmi.n	8013554 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801353c:	4620      	mov	r0, r4
 801353e:	f007 f929 	bl	801a794 <__cxa_guard_acquire>
 8013542:	b138      	cbz	r0, 8013554 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013544:	4620      	mov	r0, r4
 8013546:	f007 f931 	bl	801a7ac <__cxa_guard_release>
 801354a:	4a06      	ldr	r2, [pc, #24]	; (8013564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801354c:	4909      	ldr	r1, [pc, #36]	; (8013574 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801354e:	480a      	ldr	r0, [pc, #40]	; (8013578 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013550:	f007 f916 	bl	801a780 <__aeabi_atexit>
 8013554:	4b05      	ldr	r3, [pc, #20]	; (801356c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013556:	65ab      	str	r3, [r5, #88]	; 0x58
 8013558:	4b07      	ldr	r3, [pc, #28]	; (8013578 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801355a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801355c:	bd38      	pop	{r3, r4, r5, pc}
 801355e:	bf00      	nop
 8013560:	20012478 	.word	0x20012478
 8013564:	20000000 	.word	0x20000000
 8013568:	08011631 	.word	0x08011631
 801356c:	200000a8 	.word	0x200000a8
 8013570:	2001247c 	.word	0x2001247c
 8013574:	0801162f 	.word	0x0801162f
 8013578:	200000ac 	.word	0x200000ac

0801357c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801357c:	b510      	push	{r4, lr}
 801357e:	4604      	mov	r4, r0
 8013580:	f7ff ff88 	bl	8013494 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8013584:	4620      	mov	r0, r4
 8013586:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801358a:	f7ff bfbd 	b.w	8013508 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08013590 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8013590:	b538      	push	{r3, r4, r5, lr}
 8013592:	4c15      	ldr	r4, [pc, #84]	; (80135e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8013594:	7823      	ldrb	r3, [r4, #0]
 8013596:	f3bf 8f5b 	dmb	ish
 801359a:	07da      	lsls	r2, r3, #31
 801359c:	4605      	mov	r5, r0
 801359e:	d40b      	bmi.n	80135b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80135a0:	4620      	mov	r0, r4
 80135a2:	f007 f8f7 	bl	801a794 <__cxa_guard_acquire>
 80135a6:	b138      	cbz	r0, 80135b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80135a8:	4620      	mov	r0, r4
 80135aa:	f007 f8ff 	bl	801a7ac <__cxa_guard_release>
 80135ae:	4a0f      	ldr	r2, [pc, #60]	; (80135ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80135b0:	490f      	ldr	r1, [pc, #60]	; (80135f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80135b2:	4810      	ldr	r0, [pc, #64]	; (80135f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80135b4:	f007 f8e4 	bl	801a780 <__aeabi_atexit>
 80135b8:	4c0f      	ldr	r4, [pc, #60]	; (80135f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80135ba:	7823      	ldrb	r3, [r4, #0]
 80135bc:	f3bf 8f5b 	dmb	ish
 80135c0:	07db      	lsls	r3, r3, #31
 80135c2:	d40b      	bmi.n	80135dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80135c4:	4620      	mov	r0, r4
 80135c6:	f007 f8e5 	bl	801a794 <__cxa_guard_acquire>
 80135ca:	b138      	cbz	r0, 80135dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80135cc:	4620      	mov	r0, r4
 80135ce:	f007 f8ed 	bl	801a7ac <__cxa_guard_release>
 80135d2:	4a06      	ldr	r2, [pc, #24]	; (80135ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80135d4:	4909      	ldr	r1, [pc, #36]	; (80135fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80135d6:	480a      	ldr	r0, [pc, #40]	; (8013600 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80135d8:	f007 f8d2 	bl	801a780 <__aeabi_atexit>
 80135dc:	4b05      	ldr	r3, [pc, #20]	; (80135f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80135de:	672b      	str	r3, [r5, #112]	; 0x70
 80135e0:	4b07      	ldr	r3, [pc, #28]	; (8013600 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80135e2:	676b      	str	r3, [r5, #116]	; 0x74
 80135e4:	bd38      	pop	{r3, r4, r5, pc}
 80135e6:	bf00      	nop
 80135e8:	20012470 	.word	0x20012470
 80135ec:	20000000 	.word	0x20000000
 80135f0:	08011625 	.word	0x08011625
 80135f4:	200000a0 	.word	0x200000a0
 80135f8:	20012474 	.word	0x20012474
 80135fc:	08011623 	.word	0x08011623
 8013600:	200000a4 	.word	0x200000a4

08013604 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8013604:	b538      	push	{r3, r4, r5, lr}
 8013606:	4c15      	ldr	r4, [pc, #84]	; (801365c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8013608:	7823      	ldrb	r3, [r4, #0]
 801360a:	f3bf 8f5b 	dmb	ish
 801360e:	07da      	lsls	r2, r3, #31
 8013610:	4605      	mov	r5, r0
 8013612:	d40b      	bmi.n	801362c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8013614:	4620      	mov	r0, r4
 8013616:	f007 f8bd 	bl	801a794 <__cxa_guard_acquire>
 801361a:	b138      	cbz	r0, 801362c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801361c:	4620      	mov	r0, r4
 801361e:	f007 f8c5 	bl	801a7ac <__cxa_guard_release>
 8013622:	4a0f      	ldr	r2, [pc, #60]	; (8013660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8013624:	490f      	ldr	r1, [pc, #60]	; (8013664 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8013626:	4810      	ldr	r0, [pc, #64]	; (8013668 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8013628:	f007 f8aa 	bl	801a780 <__aeabi_atexit>
 801362c:	4c0f      	ldr	r4, [pc, #60]	; (801366c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801362e:	7823      	ldrb	r3, [r4, #0]
 8013630:	f3bf 8f5b 	dmb	ish
 8013634:	07db      	lsls	r3, r3, #31
 8013636:	d40b      	bmi.n	8013650 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8013638:	4620      	mov	r0, r4
 801363a:	f007 f8ab 	bl	801a794 <__cxa_guard_acquire>
 801363e:	b138      	cbz	r0, 8013650 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8013640:	4620      	mov	r0, r4
 8013642:	f007 f8b3 	bl	801a7ac <__cxa_guard_release>
 8013646:	4a06      	ldr	r2, [pc, #24]	; (8013660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8013648:	4909      	ldr	r1, [pc, #36]	; (8013670 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801364a:	480a      	ldr	r0, [pc, #40]	; (8013674 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801364c:	f007 f898 	bl	801a780 <__aeabi_atexit>
 8013650:	4b05      	ldr	r3, [pc, #20]	; (8013668 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8013652:	66ab      	str	r3, [r5, #104]	; 0x68
 8013654:	4b07      	ldr	r3, [pc, #28]	; (8013674 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8013656:	66eb      	str	r3, [r5, #108]	; 0x6c
 8013658:	bd38      	pop	{r3, r4, r5, pc}
 801365a:	bf00      	nop
 801365c:	20012468 	.word	0x20012468
 8013660:	20000000 	.word	0x20000000
 8013664:	08011629 	.word	0x08011629
 8013668:	20000098 	.word	0x20000098
 801366c:	2001246c 	.word	0x2001246c
 8013670:	08011627 	.word	0x08011627
 8013674:	2000009c 	.word	0x2000009c

08013678 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8013678:	b510      	push	{r4, lr}
 801367a:	4604      	mov	r4, r0
 801367c:	f7ff ff88 	bl	8013590 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8013680:	4620      	mov	r0, r4
 8013682:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013686:	f7ff bfbd 	b.w	8013604 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801368a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801368a:	b510      	push	{r4, lr}
 801368c:	4604      	mov	r4, r0
 801368e:	f7ff fff3 	bl	8013678 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8013692:	4620      	mov	r0, r4
 8013694:	f7ff ff72 	bl	801357c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8013698:	4620      	mov	r0, r4
 801369a:	f7ff fdf9 	bl	8013290 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801369e:	4620      	mov	r0, r4
 80136a0:	f7ff fcfa 	bl	8013098 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80136a4:	4620      	mov	r0, r4
 80136a6:	f7ff fd75 	bl	8013194 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80136aa:	4620      	mov	r0, r4
 80136ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136b0:	f7ff bee0 	b.w	8013474 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080136b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80136b4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136b8:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80136bc:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80136c0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80136c4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80136c8:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80136cc:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80136d0:	8808      	ldrh	r0, [r1, #0]
 80136d2:	fb0e 4708 	mla	r7, lr, r8, r4
 80136d6:	f1be 0f00 	cmp.w	lr, #0
 80136da:	eb02 0a07 	add.w	sl, r2, r7
 80136de:	db37      	blt.n	8013750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80136e0:	45f3      	cmp	fp, lr
 80136e2:	dd35      	ble.n	8013750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80136e4:	2c00      	cmp	r4, #0
 80136e6:	db31      	blt.n	801374c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80136e8:	45a0      	cmp	r8, r4
 80136ea:	dd2f      	ble.n	801374c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80136ec:	5dd2      	ldrb	r2, [r2, r7]
 80136ee:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80136f2:	1c62      	adds	r2, r4, #1
 80136f4:	d42f      	bmi.n	8013756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80136f6:	4590      	cmp	r8, r2
 80136f8:	dd2d      	ble.n	8013756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80136fa:	b366      	cbz	r6, 8013756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80136fc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8013700:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013704:	f11e 0e01 	adds.w	lr, lr, #1
 8013708:	d429      	bmi.n	801375e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801370a:	45f3      	cmp	fp, lr
 801370c:	dd27      	ble.n	801375e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801370e:	f1bc 0f00 	cmp.w	ip, #0
 8013712:	f000 80a0 	beq.w	8013856 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 8013716:	2c00      	cmp	r4, #0
 8013718:	db1f      	blt.n	801375a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801371a:	45a0      	cmp	r8, r4
 801371c:	dd1d      	ble.n	801375a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801371e:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8013722:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8013726:	3401      	adds	r4, #1
 8013728:	d41c      	bmi.n	8013764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801372a:	45a0      	cmp	r8, r4
 801372c:	dd1a      	ble.n	8013764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801372e:	b1de      	cbz	r6, 8013768 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8013730:	44d0      	add	r8, sl
 8013732:	f898 2001 	ldrb.w	r2, [r8, #1]
 8013736:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801373a:	2e0f      	cmp	r6, #15
 801373c:	d915      	bls.n	801376a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801373e:	4b49      	ldr	r3, [pc, #292]	; (8013864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8013740:	4a49      	ldr	r2, [pc, #292]	; (8013868 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8013742:	484a      	ldr	r0, [pc, #296]	; (801386c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8013744:	f240 11ef 	movw	r1, #495	; 0x1ef
 8013748:	f007 f84e 	bl	801a7e8 <__assert_func>
 801374c:	4681      	mov	r9, r0
 801374e:	e7d0      	b.n	80136f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8013750:	4607      	mov	r7, r0
 8013752:	4681      	mov	r9, r0
 8013754:	e7d6      	b.n	8013704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8013756:	4607      	mov	r7, r0
 8013758:	e7d4      	b.n	8013704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801375a:	4686      	mov	lr, r0
 801375c:	e7e3      	b.n	8013726 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801375e:	4603      	mov	r3, r0
 8013760:	4686      	mov	lr, r0
 8013762:	e7ea      	b.n	801373a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8013764:	4603      	mov	r3, r0
 8013766:	e7e8      	b.n	801373a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8013768:	4603      	mov	r3, r0
 801376a:	f1bc 0f0f 	cmp.w	ip, #15
 801376e:	d8e6      	bhi.n	801373e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8013770:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8013774:	fb16 f80c 	smulbb	r8, r6, ip
 8013778:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801377c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8013780:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8013784:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8013788:	ea44 0909 	orr.w	r9, r4, r9
 801378c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8013790:	f1cc 0410 	rsb	r4, ip, #16
 8013794:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013798:	1ba4      	subs	r4, r4, r6
 801379a:	041a      	lsls	r2, r3, #16
 801379c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80137a0:	ea4a 0707 	orr.w	r7, sl, r7
 80137a4:	4377      	muls	r7, r6
 80137a6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80137aa:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80137ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80137b2:	fb04 7409 	mla	r4, r4, r9, r7
 80137b6:	4313      	orrs	r3, r2
 80137b8:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80137bc:	fb08 4303 	mla	r3, r8, r3, r4
 80137c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80137c4:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80137c8:	4322      	orrs	r2, r4
 80137ca:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80137ce:	fb0c 3202 	mla	r2, ip, r2, r3
 80137d2:	0d53      	lsrs	r3, r2, #21
 80137d4:	0952      	lsrs	r2, r2, #5
 80137d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80137da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80137de:	431a      	orrs	r2, r3
 80137e0:	b293      	uxth	r3, r2
 80137e2:	b2af      	uxth	r7, r5
 80137e4:	1202      	asrs	r2, r0, #8
 80137e6:	43ed      	mvns	r5, r5
 80137e8:	b2ed      	uxtb	r5, r5
 80137ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80137ee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80137f2:	fb12 f205 	smulbb	r2, r2, r5
 80137f6:	10c6      	asrs	r6, r0, #3
 80137f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80137fc:	fb0c 2c07 	mla	ip, ip, r7, r2
 8013800:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013804:	10da      	asrs	r2, r3, #3
 8013806:	fb16 f605 	smulbb	r6, r6, r5
 801380a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801380e:	fb02 6207 	mla	r2, r2, r7, r6
 8013812:	b296      	uxth	r6, r2
 8013814:	00c2      	lsls	r2, r0, #3
 8013816:	00dc      	lsls	r4, r3, #3
 8013818:	b2d2      	uxtb	r2, r2
 801381a:	b2e4      	uxtb	r4, r4
 801381c:	fb12 f205 	smulbb	r2, r2, r5
 8013820:	fb04 2207 	mla	r2, r4, r7, r2
 8013824:	fa1f fc8c 	uxth.w	ip, ip
 8013828:	b292      	uxth	r2, r2
 801382a:	f10c 0301 	add.w	r3, ip, #1
 801382e:	1c50      	adds	r0, r2, #1
 8013830:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8013834:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8013838:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801383c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013840:	4313      	orrs	r3, r2
 8013842:	1c72      	adds	r2, r6, #1
 8013844:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8013848:	0952      	lsrs	r2, r2, #5
 801384a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801384e:	4313      	orrs	r3, r2
 8013850:	800b      	strh	r3, [r1, #0]
 8013852:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013856:	2e0f      	cmp	r6, #15
 8013858:	f63f af71 	bhi.w	801373e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801385c:	4603      	mov	r3, r0
 801385e:	4686      	mov	lr, r0
 8013860:	e786      	b.n	8013770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8013862:	bf00      	nop
 8013864:	0801eb1d 	.word	0x0801eb1d
 8013868:	0801f11e 	.word	0x0801f11e
 801386c:	0801eba5 	.word	0x0801eba5

08013870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013874:	ed2d 8b08 	vpush	{d8-d11}
 8013878:	b09b      	sub	sp, #108	; 0x6c
 801387a:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 801387e:	9309      	str	r3, [sp, #36]	; 0x24
 8013880:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8013884:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8013886:	930a      	str	r3, [sp, #40]	; 0x28
 8013888:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801388c:	930e      	str	r3, [sp, #56]	; 0x38
 801388e:	910d      	str	r1, [sp, #52]	; 0x34
 8013890:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8013894:	9018      	str	r0, [sp, #96]	; 0x60
 8013896:	6870      	ldr	r0, [r6, #4]
 8013898:	9217      	str	r2, [sp, #92]	; 0x5c
 801389a:	fb00 1303 	mla	r3, r0, r3, r1
 801389e:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80138a0:	6831      	ldr	r1, [r6, #0]
 80138a2:	6856      	ldr	r6, [r2, #4]
 80138a4:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 80138a8:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 80138ac:	6813      	ldr	r3, [r2, #0]
 80138ae:	930c      	str	r3, [sp, #48]	; 0x30
 80138b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80138b2:	43db      	mvns	r3, r3
 80138b4:	b2db      	uxtb	r3, r3
 80138b6:	eeb0 aa40 	vmov.f32	s20, s0
 80138ba:	eef0 9a60 	vmov.f32	s19, s1
 80138be:	eeb0 9a41 	vmov.f32	s18, s2
 80138c2:	eeb0 8a62 	vmov.f32	s16, s5
 80138c6:	eef0 8a43 	vmov.f32	s17, s6
 80138ca:	eef0 ba44 	vmov.f32	s23, s8
 80138ce:	eeb0 ba64 	vmov.f32	s22, s9
 80138d2:	eef0 aa45 	vmov.f32	s21, s10
 80138d6:	3604      	adds	r6, #4
 80138d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80138da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80138dc:	2b00      	cmp	r3, #0
 80138de:	dc03      	bgt.n	80138e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80138e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80138e2:	2b00      	cmp	r3, #0
 80138e4:	f340 8215 	ble.w	8013d12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80138e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80138ea:	2b00      	cmp	r3, #0
 80138ec:	f340 8102 	ble.w	8013af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80138f0:	ea5f 4229 	movs.w	r2, r9, asr #16
 80138f4:	ea4f 4328 	mov.w	r3, r8, asr #16
 80138f8:	d42c      	bmi.n	8013954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80138fa:	1c51      	adds	r1, r2, #1
 80138fc:	428c      	cmp	r4, r1
 80138fe:	dd2c      	ble.n	801395a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013900:	2b00      	cmp	r3, #0
 8013902:	db2a      	blt.n	801395a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013904:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013906:	1c59      	adds	r1, r3, #1
 8013908:	4288      	cmp	r0, r1
 801390a:	dd26      	ble.n	801395a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801390c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801390e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013910:	3b01      	subs	r3, #1
 8013912:	fb02 9203 	mla	r2, r2, r3, r9
 8013916:	1412      	asrs	r2, r2, #16
 8013918:	d429      	bmi.n	801396e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801391a:	3201      	adds	r2, #1
 801391c:	4294      	cmp	r4, r2
 801391e:	dd26      	ble.n	801396e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013920:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013922:	fb02 8303 	mla	r3, r2, r3, r8
 8013926:	141b      	asrs	r3, r3, #16
 8013928:	d421      	bmi.n	801396e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801392a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801392c:	3301      	adds	r3, #1
 801392e:	429a      	cmp	r2, r3
 8013930:	dd1d      	ble.n	801396e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013932:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013936:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801393a:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 801393e:	9312      	str	r3, [sp, #72]	; 0x48
 8013940:	f1be 0f00 	cmp.w	lr, #0
 8013944:	f300 8138 	bgt.w	8013bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8013948:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801394a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801394e:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8013952:	e0d1      	b.n	8013af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8013954:	1c51      	adds	r1, r2, #1
 8013956:	f040 80c3 	bne.w	8013ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801395a:	42a2      	cmp	r2, r4
 801395c:	f280 80c0 	bge.w	8013ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013960:	1c5f      	adds	r7, r3, #1
 8013962:	f2c0 80bd 	blt.w	8013ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013966:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013968:	4293      	cmp	r3, r2
 801396a:	f280 80b9 	bge.w	8013ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801396e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8013972:	4657      	mov	r7, sl
 8013974:	f1bb 0f00 	cmp.w	fp, #0
 8013978:	dde6      	ble.n	8013948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801397a:	ea5f 4229 	movs.w	r2, r9, asr #16
 801397e:	ea4f 4328 	mov.w	r3, r8, asr #16
 8013982:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8013986:	f3c8 3103 	ubfx	r1, r8, #12, #4
 801398a:	f100 80fc 	bmi.w	8013b86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 801398e:	f102 0c01 	add.w	ip, r2, #1
 8013992:	4564      	cmp	r4, ip
 8013994:	f340 80f9 	ble.w	8013b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013998:	2b00      	cmp	r3, #0
 801399a:	f2c0 80f6 	blt.w	8013b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801399e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80139a0:	f103 0c01 	add.w	ip, r3, #1
 80139a4:	4565      	cmp	r5, ip
 80139a6:	f340 80f0 	ble.w	8013b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 80139aa:	fb03 2304 	mla	r3, r3, r4, r2
 80139ae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80139b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80139b2:	441a      	add	r2, r3
 80139b4:	5ceb      	ldrb	r3, [r5, r3]
 80139b6:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 80139ba:	2800      	cmp	r0, #0
 80139bc:	f000 80db 	beq.w	8013b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 80139c0:	7853      	ldrb	r3, [r2, #1]
 80139c2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80139c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80139c8:	b141      	cbz	r1, 80139dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80139ca:	1913      	adds	r3, r2, r4
 80139cc:	5d12      	ldrb	r2, [r2, r4]
 80139ce:	785b      	ldrb	r3, [r3, #1]
 80139d0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80139d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80139d8:	9210      	str	r2, [sp, #64]	; 0x40
 80139da:	9314      	str	r3, [sp, #80]	; 0x50
 80139dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80139de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80139e0:	fb10 f201 	smulbb	r2, r0, r1
 80139e4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80139e8:	10d2      	asrs	r2, r2, #3
 80139ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80139ee:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80139f2:	ea4c 0c03 	orr.w	ip, ip, r3
 80139f6:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 80139fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80139fc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80139fe:	041b      	lsls	r3, r3, #16
 8013a00:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013a04:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013a08:	432b      	orrs	r3, r5
 8013a0a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8013a0c:	4353      	muls	r3, r2
 8013a0e:	fb05 330c 	mla	r3, r5, ip, r3
 8013a12:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013a16:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013a1a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013a1e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8013a22:	f1c1 0c10 	rsb	ip, r1, #16
 8013a26:	ebac 0c00 	sub.w	ip, ip, r0
 8013a2a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013a2e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8013a32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013a34:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013a36:	0418      	lsls	r0, r3, #16
 8013a38:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013a3c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013a40:	4318      	orrs	r0, r3
 8013a42:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8013a46:	fb02 c200 	mla	r2, r2, r0, ip
 8013a4a:	0d53      	lsrs	r3, r2, #21
 8013a4c:	0952      	lsrs	r2, r2, #5
 8013a4e:	f8b7 c000 	ldrh.w	ip, [r7]
 8013a52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013a56:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013a5a:	431a      	orrs	r2, r3
 8013a5c:	b292      	uxth	r2, r2
 8013a5e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8013a62:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013a66:	1210      	asrs	r0, r2, #8
 8013a68:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013a6c:	fb11 f105 	smulbb	r1, r1, r5
 8013a70:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8013a74:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013a78:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013a7c:	fb00 1003 	mla	r0, r0, r3, r1
 8013a80:	fa5f fc8c 	uxtb.w	ip, ip
 8013a84:	10d1      	asrs	r1, r2, #3
 8013a86:	00d2      	lsls	r2, r2, #3
 8013a88:	fb1c fc05 	smulbb	ip, ip, r5
 8013a8c:	b2d2      	uxtb	r2, r2
 8013a8e:	fb02 c203 	mla	r2, r2, r3, ip
 8013a92:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013a96:	b280      	uxth	r0, r0
 8013a98:	b292      	uxth	r2, r2
 8013a9a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013a9e:	fb1e fe05 	smulbb	lr, lr, r5
 8013aa2:	fb01 e103 	mla	r1, r1, r3, lr
 8013aa6:	f102 0c01 	add.w	ip, r2, #1
 8013aaa:	1c43      	adds	r3, r0, #1
 8013aac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013ab0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013ab4:	b289      	uxth	r1, r1
 8013ab6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013aba:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013abe:	4313      	orrs	r3, r2
 8013ac0:	1c4a      	adds	r2, r1, #1
 8013ac2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8013ac6:	0949      	lsrs	r1, r1, #5
 8013ac8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013acc:	430b      	orrs	r3, r1
 8013ace:	803b      	strh	r3, [r7, #0]
 8013ad0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013ad2:	4499      	add	r9, r3
 8013ad4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013ad6:	3702      	adds	r7, #2
 8013ad8:	4498      	add	r8, r3
 8013ada:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013ade:	e749      	b.n	8013974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8013ae0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013ae2:	4499      	add	r9, r3
 8013ae4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013ae6:	4498      	add	r8, r3
 8013ae8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013aea:	3b01      	subs	r3, #1
 8013aec:	9309      	str	r3, [sp, #36]	; 0x24
 8013aee:	f10a 0a02 	add.w	sl, sl, #2
 8013af2:	e6f9      	b.n	80138e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013af4:	f47f af0a 	bne.w	801390c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8013af8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013afa:	2b00      	cmp	r3, #0
 8013afc:	f340 8109 	ble.w	8013d12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013b00:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013b04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013b08:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013b0c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013b0e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013b12:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013b16:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013b1a:	eef0 6a48 	vmov.f32	s13, s16
 8013b1e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013b22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013b26:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013b2a:	ee16 9a90 	vmov	r9, s13
 8013b2e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013b32:	eef0 6a68 	vmov.f32	s13, s17
 8013b36:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013b3a:	ee18 2a10 	vmov	r2, s16
 8013b3e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013b42:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b46:	ee18 2a90 	vmov	r2, s17
 8013b4a:	932f      	str	r3, [sp, #188]	; 0xbc
 8013b4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013b4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b52:	9330      	str	r3, [sp, #192]	; 0xc0
 8013b54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b56:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013b58:	3b01      	subs	r3, #1
 8013b5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013b5e:	930d      	str	r3, [sp, #52]	; 0x34
 8013b60:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013b62:	bf08      	it	eq
 8013b64:	4613      	moveq	r3, r2
 8013b66:	ee16 8a90 	vmov	r8, s13
 8013b6a:	9309      	str	r3, [sp, #36]	; 0x24
 8013b6c:	eef0 8a67 	vmov.f32	s17, s15
 8013b70:	eeb0 8a47 	vmov.f32	s16, s14
 8013b74:	e6b1      	b.n	80138da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8013b76:	2900      	cmp	r1, #0
 8013b78:	f43f af30 	beq.w	80139dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013b7c:	5d13      	ldrb	r3, [r2, r4]
 8013b7e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013b82:	9310      	str	r3, [sp, #64]	; 0x40
 8013b84:	e72a      	b.n	80139dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013b86:	1c55      	adds	r5, r2, #1
 8013b88:	d1a2      	bne.n	8013ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013b8a:	4294      	cmp	r4, r2
 8013b8c:	dda0      	ble.n	8013ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013b8e:	1c5d      	adds	r5, r3, #1
 8013b90:	db9e      	blt.n	8013ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013b92:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013b94:	429d      	cmp	r5, r3
 8013b96:	dd9b      	ble.n	8013ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013b98:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8013b9c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013b9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013ba0:	9202      	str	r2, [sp, #8]
 8013ba2:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8013ba6:	e9cd 4300 	strd	r4, r3, [sp]
 8013baa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013bac:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013bae:	4633      	mov	r3, r6
 8013bb0:	4639      	mov	r1, r7
 8013bb2:	f7ff fd7f 	bl	80136b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8013bb6:	e78b      	b.n	8013ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013bb8:	ea4f 4329 	mov.w	r3, r9, asr #16
 8013bbc:	ea4f 4228 	mov.w	r2, r8, asr #16
 8013bc0:	fb04 3202 	mla	r2, r4, r2, r3
 8013bc4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013bc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013bc8:	4413      	add	r3, r2
 8013bca:	5c8a      	ldrb	r2, [r1, r2]
 8013bcc:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8013bd0:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8013bd4:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8013bd8:	f1bc 0f00 	cmp.w	ip, #0
 8013bdc:	f000 8091 	beq.w	8013d02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8013be0:	785a      	ldrb	r2, [r3, #1]
 8013be2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013be6:	9215      	str	r2, [sp, #84]	; 0x54
 8013be8:	b140      	cbz	r0, 8013bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013bea:	191a      	adds	r2, r3, r4
 8013bec:	5d1b      	ldrb	r3, [r3, r4]
 8013bee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013bf2:	9311      	str	r3, [sp, #68]	; 0x44
 8013bf4:	7853      	ldrb	r3, [r2, #1]
 8013bf6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013bfa:	9316      	str	r3, [sp, #88]	; 0x58
 8013bfc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013bfe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013c00:	fb1c f200 	smulbb	r2, ip, r0
 8013c04:	041f      	lsls	r7, r3, #16
 8013c06:	10d2      	asrs	r2, r2, #3
 8013c08:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013c0c:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8013c10:	431f      	orrs	r7, r3
 8013c12:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8013c16:	9319      	str	r3, [sp, #100]	; 0x64
 8013c18:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013c1a:	041b      	lsls	r3, r3, #16
 8013c1c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8013c20:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013c24:	ea43 030b 	orr.w	r3, r3, fp
 8013c28:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8013c2a:	4353      	muls	r3, r2
 8013c2c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013c30:	fb05 3707 	mla	r7, r5, r7, r3
 8013c34:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013c38:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013c3c:	ea43 0b01 	orr.w	fp, r3, r1
 8013c40:	f1c0 0110 	rsb	r1, r0, #16
 8013c44:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013c46:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013c48:	eba1 0c0c 	sub.w	ip, r1, ip
 8013c4c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013c50:	fb0c 770b 	mla	r7, ip, fp, r7
 8013c54:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013c58:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8013c5c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013c60:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8013c64:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013c68:	fb02 770c 	mla	r7, r2, ip, r7
 8013c6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013c6e:	0d79      	lsrs	r1, r7, #21
 8013c70:	8812      	ldrh	r2, [r2, #0]
 8013c72:	097f      	lsrs	r7, r7, #5
 8013c74:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013c78:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013c7c:	430f      	orrs	r7, r1
 8013c7e:	1211      	asrs	r1, r2, #8
 8013c80:	b2bb      	uxth	r3, r7
 8013c82:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013c86:	fb11 f105 	smulbb	r1, r1, r5
 8013c8a:	1218      	asrs	r0, r3, #8
 8013c8c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013c8e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013c92:	fb00 1005 	mla	r0, r0, r5, r1
 8013c96:	10d7      	asrs	r7, r2, #3
 8013c98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013c9a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013c9e:	fb17 f705 	smulbb	r7, r7, r5
 8013ca2:	10d9      	asrs	r1, r3, #3
 8013ca4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013ca6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013caa:	fb01 7105 	mla	r1, r1, r5, r7
 8013cae:	00d2      	lsls	r2, r2, #3
 8013cb0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013cb2:	b2d2      	uxtb	r2, r2
 8013cb4:	fb12 f205 	smulbb	r2, r2, r5
 8013cb8:	00db      	lsls	r3, r3, #3
 8013cba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013cbc:	b2db      	uxtb	r3, r3
 8013cbe:	b280      	uxth	r0, r0
 8013cc0:	fb03 2305 	mla	r3, r3, r5, r2
 8013cc4:	b29b      	uxth	r3, r3
 8013cc6:	b289      	uxth	r1, r1
 8013cc8:	1c42      	adds	r2, r0, #1
 8013cca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8013cce:	1c4f      	adds	r7, r1, #1
 8013cd0:	1c5a      	adds	r2, r3, #1
 8013cd2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8013cd6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8013cda:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013cde:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013ce2:	0949      	lsrs	r1, r1, #5
 8013ce4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013ce6:	4310      	orrs	r0, r2
 8013ce8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013cec:	4308      	orrs	r0, r1
 8013cee:	f823 0b02 	strh.w	r0, [r3], #2
 8013cf2:	930f      	str	r3, [sp, #60]	; 0x3c
 8013cf4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013cf6:	4499      	add	r9, r3
 8013cf8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013cfa:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013cfe:	4498      	add	r8, r3
 8013d00:	e61e      	b.n	8013940 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8013d02:	2800      	cmp	r0, #0
 8013d04:	f43f af7a 	beq.w	8013bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013d08:	5d1b      	ldrb	r3, [r3, r4]
 8013d0a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013d0e:	9311      	str	r3, [sp, #68]	; 0x44
 8013d10:	e774      	b.n	8013bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013d12:	b01b      	add	sp, #108	; 0x6c
 8013d14:	ecbd 8b08 	vpop	{d8-d11}
 8013d18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8013d1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013d20:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8013d24:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8013d28:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8013d2c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8013d30:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8013d34:	8808      	ldrh	r0, [r1, #0]
 8013d36:	fb06 570e 	mla	r7, r6, lr, r5
 8013d3a:	2e00      	cmp	r6, #0
 8013d3c:	eb02 0807 	add.w	r8, r2, r7
 8013d40:	db38      	blt.n	8013db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013d42:	45b1      	cmp	r9, r6
 8013d44:	dd36      	ble.n	8013db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013d46:	2d00      	cmp	r5, #0
 8013d48:	db32      	blt.n	8013db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013d4a:	45ae      	cmp	lr, r5
 8013d4c:	dd30      	ble.n	8013db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013d4e:	5dd2      	ldrb	r2, [r2, r7]
 8013d50:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013d54:	1c6a      	adds	r2, r5, #1
 8013d56:	d430      	bmi.n	8013dba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013d58:	4596      	cmp	lr, r2
 8013d5a:	dd2e      	ble.n	8013dba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013d5c:	b36c      	cbz	r4, 8013dba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013d5e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8013d62:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8013d66:	3601      	adds	r6, #1
 8013d68:	d42b      	bmi.n	8013dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8013d6a:	45b1      	cmp	r9, r6
 8013d6c:	dd29      	ble.n	8013dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8013d6e:	f1bc 0f00 	cmp.w	ip, #0
 8013d72:	d028      	beq.n	8013dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8013d74:	2d00      	cmp	r5, #0
 8013d76:	db22      	blt.n	8013dbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013d78:	45ae      	cmp	lr, r5
 8013d7a:	dd20      	ble.n	8013dbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013d7c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8013d80:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8013d84:	3501      	adds	r5, #1
 8013d86:	d407      	bmi.n	8013d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013d88:	45ae      	cmp	lr, r5
 8013d8a:	dd05      	ble.n	8013d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013d8c:	b134      	cbz	r4, 8013d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8013d8e:	44c6      	add	lr, r8
 8013d90:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013d94:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013d98:	2c0f      	cmp	r4, #15
 8013d9a:	d802      	bhi.n	8013da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013d9c:	f1bc 0f0f 	cmp.w	ip, #15
 8013da0:	d914      	bls.n	8013dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8013da2:	4b26      	ldr	r3, [pc, #152]	; (8013e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8013da4:	4a26      	ldr	r2, [pc, #152]	; (8013e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8013da6:	4827      	ldr	r0, [pc, #156]	; (8013e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8013da8:	f240 11ef 	movw	r1, #495	; 0x1ef
 8013dac:	f006 fd1c 	bl	801a7e8 <__assert_func>
 8013db0:	4607      	mov	r7, r0
 8013db2:	e7cf      	b.n	8013d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8013db4:	4602      	mov	r2, r0
 8013db6:	4607      	mov	r7, r0
 8013db8:	e7d5      	b.n	8013d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013dba:	4602      	mov	r2, r0
 8013dbc:	e7d3      	b.n	8013d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013dbe:	4606      	mov	r6, r0
 8013dc0:	e7e0      	b.n	8013d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8013dc2:	4606      	mov	r6, r0
 8013dc4:	e7e8      	b.n	8013d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013dc6:	2c0f      	cmp	r4, #15
 8013dc8:	d8eb      	bhi.n	8013da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013dca:	4606      	mov	r6, r0
 8013dcc:	043d      	lsls	r5, r7, #16
 8013dce:	fb14 f30c 	smulbb	r3, r4, ip
 8013dd2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8013dd6:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8013dda:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013dde:	10db      	asrs	r3, r3, #3
 8013de0:	432f      	orrs	r7, r5
 8013de2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8013de6:	f1cc 0510 	rsb	r5, ip, #16
 8013dea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013dee:	1b2d      	subs	r5, r5, r4
 8013df0:	ea4e 0202 	orr.w	r2, lr, r2
 8013df4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8013df8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8013dfc:	4354      	muls	r4, r2
 8013dfe:	fb05 4507 	mla	r5, r5, r7, r4
 8013e02:	0404      	lsls	r4, r0, #16
 8013e04:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8013e08:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013e0c:	4320      	orrs	r0, r4
 8013e0e:	fb03 5400 	mla	r4, r3, r0, r5
 8013e12:	0430      	lsls	r0, r6, #16
 8013e14:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013e18:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8013e1c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8013e20:	4330      	orrs	r0, r6
 8013e22:	fb03 4000 	mla	r0, r3, r0, r4
 8013e26:	0d43      	lsrs	r3, r0, #21
 8013e28:	0940      	lsrs	r0, r0, #5
 8013e2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013e2e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013e32:	4318      	orrs	r0, r3
 8013e34:	8008      	strh	r0, [r1, #0]
 8013e36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013e3a:	bf00      	nop
 8013e3c:	0801eb1d 	.word	0x0801eb1d
 8013e40:	0801f11e 	.word	0x0801f11e
 8013e44:	0801eba5 	.word	0x0801eba5

08013e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e4c:	ed2d 8b0a 	vpush	{d8-d12}
 8013e50:	b095      	sub	sp, #84	; 0x54
 8013e52:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 8013e56:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8013e58:	9306      	str	r3, [sp, #24]
 8013e5a:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8013e5e:	9109      	str	r1, [sp, #36]	; 0x24
 8013e60:	9307      	str	r3, [sp, #28]
 8013e62:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8013e66:	9012      	str	r0, [sp, #72]	; 0x48
 8013e68:	6878      	ldr	r0, [r7, #4]
 8013e6a:	9211      	str	r2, [sp, #68]	; 0x44
 8013e6c:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013e6e:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8013e72:	fb00 1303 	mla	r3, r0, r3, r1
 8013e76:	6839      	ldr	r1, [r7, #0]
 8013e78:	6857      	ldr	r7, [r2, #4]
 8013e7a:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8013e7e:	6813      	ldr	r3, [r2, #0]
 8013e80:	9308      	str	r3, [sp, #32]
 8013e82:	eeb0 aa40 	vmov.f32	s20, s0
 8013e86:	eef0 9a60 	vmov.f32	s19, s1
 8013e8a:	eeb0 9a41 	vmov.f32	s18, s2
 8013e8e:	eeb0 8a62 	vmov.f32	s16, s5
 8013e92:	eef0 8a43 	vmov.f32	s17, s6
 8013e96:	eeb0 ca44 	vmov.f32	s24, s8
 8013e9a:	eef0 ba64 	vmov.f32	s23, s9
 8013e9e:	eeb0 ba45 	vmov.f32	s22, s10
 8013ea2:	3704      	adds	r7, #4
 8013ea4:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8013ea8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013eaa:	2b00      	cmp	r3, #0
 8013eac:	dc03      	bgt.n	8013eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8013eae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013eb0:	2b00      	cmp	r3, #0
 8013eb2:	f340 819a 	ble.w	80141ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8013eb6:	9b06      	ldr	r3, [sp, #24]
 8013eb8:	2b00      	cmp	r3, #0
 8013eba:	f340 80c4 	ble.w	8014046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013ebe:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013ec2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8013ec6:	d429      	bmi.n	8013f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8013ec8:	1c51      	adds	r1, r2, #1
 8013eca:	428c      	cmp	r4, r1
 8013ecc:	dd29      	ble.n	8013f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8013ece:	2b00      	cmp	r3, #0
 8013ed0:	db27      	blt.n	8013f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8013ed2:	9807      	ldr	r0, [sp, #28]
 8013ed4:	1c59      	adds	r1, r3, #1
 8013ed6:	4288      	cmp	r0, r1
 8013ed8:	dd23      	ble.n	8013f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8013eda:	9b06      	ldr	r3, [sp, #24]
 8013edc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013ede:	3b01      	subs	r3, #1
 8013ee0:	fb02 9203 	mla	r2, r2, r3, r9
 8013ee4:	1412      	asrs	r2, r2, #16
 8013ee6:	d425      	bmi.n	8013f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013ee8:	3201      	adds	r2, #1
 8013eea:	4294      	cmp	r4, r2
 8013eec:	dd22      	ble.n	8013f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013eee:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013ef0:	fb02 6303 	mla	r3, r2, r3, r6
 8013ef4:	141b      	asrs	r3, r3, #16
 8013ef6:	d41d      	bmi.n	8013f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013ef8:	9a07      	ldr	r2, [sp, #28]
 8013efa:	3301      	adds	r3, #1
 8013efc:	429a      	cmp	r2, r3
 8013efe:	dd19      	ble.n	8013f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013f00:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8013f04:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8013f08:	f1b8 0f00 	cmp.w	r8, #0
 8013f0c:	f300 80f8 	bgt.w	8014100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8013f10:	9b06      	ldr	r3, [sp, #24]
 8013f12:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8013f16:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8013f1a:	e096      	b.n	801404a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8013f1c:	1c51      	adds	r1, r2, #1
 8013f1e:	f040 8088 	bne.w	8014032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8013f22:	42a2      	cmp	r2, r4
 8013f24:	f280 8085 	bge.w	8014032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8013f28:	1c5a      	adds	r2, r3, #1
 8013f2a:	f2c0 8082 	blt.w	8014032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8013f2e:	9a07      	ldr	r2, [sp, #28]
 8013f30:	4293      	cmp	r3, r2
 8013f32:	da7e      	bge.n	8014032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8013f34:	f8dd b018 	ldr.w	fp, [sp, #24]
 8013f38:	46d0      	mov	r8, sl
 8013f3a:	f1bb 0f00 	cmp.w	fp, #0
 8013f3e:	dde7      	ble.n	8013f10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8013f40:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013f44:	ea4f 4326 	mov.w	r3, r6, asr #16
 8013f48:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8013f4c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8013f50:	f100 80c0 	bmi.w	80140d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8013f54:	f102 0c01 	add.w	ip, r2, #1
 8013f58:	4564      	cmp	r4, ip
 8013f5a:	f340 80bd 	ble.w	80140d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8013f5e:	2b00      	cmp	r3, #0
 8013f60:	f2c0 80ba 	blt.w	80140d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8013f64:	9d07      	ldr	r5, [sp, #28]
 8013f66:	f103 0c01 	add.w	ip, r3, #1
 8013f6a:	4565      	cmp	r5, ip
 8013f6c:	f340 80b4 	ble.w	80140d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8013f70:	fb03 2304 	mla	r3, r3, r4, r2
 8013f74:	9d08      	ldr	r5, [sp, #32]
 8013f76:	9a08      	ldr	r2, [sp, #32]
 8013f78:	441a      	add	r2, r3
 8013f7a:	5ceb      	ldrb	r3, [r5, r3]
 8013f7c:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8013f80:	2800      	cmp	r0, #0
 8013f82:	f000 809f 	beq.w	80140c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 8013f86:	7853      	ldrb	r3, [r2, #1]
 8013f88:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013f8c:	930d      	str	r3, [sp, #52]	; 0x34
 8013f8e:	b141      	cbz	r1, 8013fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8013f90:	1913      	adds	r3, r2, r4
 8013f92:	5d12      	ldrb	r2, [r2, r4]
 8013f94:	785b      	ldrb	r3, [r3, #1]
 8013f96:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8013f9a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013f9e:	920a      	str	r2, [sp, #40]	; 0x28
 8013fa0:	930e      	str	r3, [sp, #56]	; 0x38
 8013fa2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013fa4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013fa6:	fb10 f201 	smulbb	r2, r0, r1
 8013faa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013fae:	10d2      	asrs	r2, r2, #3
 8013fb0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013fb4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013fb8:	ea4c 0c03 	orr.w	ip, ip, r3
 8013fbc:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8013fc0:	930c      	str	r3, [sp, #48]	; 0x30
 8013fc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fc4:	041b      	lsls	r3, r3, #16
 8013fc6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013fca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013fce:	432b      	orrs	r3, r5
 8013fd0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8013fd2:	4353      	muls	r3, r2
 8013fd4:	fb05 330c 	mla	r3, r5, ip, r3
 8013fd8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013fdc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013fe0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013fe4:	ea4c 0e0e 	orr.w	lr, ip, lr
 8013fe8:	f1c1 0c10 	rsb	ip, r1, #16
 8013fec:	ebac 0c00 	sub.w	ip, ip, r0
 8013ff0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013ff4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8013ff8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013ffa:	0418      	lsls	r0, r3, #16
 8013ffc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014000:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014004:	4318      	orrs	r0, r3
 8014006:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801400a:	fb02 c200 	mla	r2, r2, r0, ip
 801400e:	0d53      	lsrs	r3, r2, #21
 8014010:	0952      	lsrs	r2, r2, #5
 8014012:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014016:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801401a:	431a      	orrs	r2, r3
 801401c:	f8a8 2000 	strh.w	r2, [r8]
 8014020:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014022:	4499      	add	r9, r3
 8014024:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014026:	f108 0802 	add.w	r8, r8, #2
 801402a:	441e      	add	r6, r3
 801402c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014030:	e783      	b.n	8013f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014032:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014034:	4499      	add	r9, r3
 8014036:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014038:	441e      	add	r6, r3
 801403a:	9b06      	ldr	r3, [sp, #24]
 801403c:	3b01      	subs	r3, #1
 801403e:	9306      	str	r3, [sp, #24]
 8014040:	f10a 0a02 	add.w	sl, sl, #2
 8014044:	e737      	b.n	8013eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8014046:	f47f af48 	bne.w	8013eda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801404a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801404c:	2b00      	cmp	r3, #0
 801404e:	f340 80cc 	ble.w	80141ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8014052:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014056:	ee79 9aab 	vadd.f32	s19, s19, s23
 801405a:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801405e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014060:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014064:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014068:	eef0 6a48 	vmov.f32	s13, s16
 801406c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014070:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014074:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014078:	ee16 9a90 	vmov	r9, s13
 801407c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014080:	eef0 6a68 	vmov.f32	s13, s17
 8014084:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014088:	ee18 2a10 	vmov	r2, s16
 801408c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014090:	fb92 f3f3 	sdiv	r3, r2, r3
 8014094:	ee18 2a90 	vmov	r2, s17
 8014098:	932b      	str	r3, [sp, #172]	; 0xac
 801409a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801409c:	fb92 f3f3 	sdiv	r3, r2, r3
 80140a0:	932c      	str	r3, [sp, #176]	; 0xb0
 80140a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80140a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80140a6:	3b01      	subs	r3, #1
 80140a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80140ac:	9309      	str	r3, [sp, #36]	; 0x24
 80140ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80140b0:	bf08      	it	eq
 80140b2:	4613      	moveq	r3, r2
 80140b4:	ee16 6a90 	vmov	r6, s13
 80140b8:	9306      	str	r3, [sp, #24]
 80140ba:	eef0 8a67 	vmov.f32	s17, s15
 80140be:	eeb0 8a47 	vmov.f32	s16, s14
 80140c2:	e6f1      	b.n	8013ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80140c4:	2900      	cmp	r1, #0
 80140c6:	f43f af6c 	beq.w	8013fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80140ca:	5d13      	ldrb	r3, [r2, r4]
 80140cc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80140d0:	930a      	str	r3, [sp, #40]	; 0x28
 80140d2:	e766      	b.n	8013fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80140d4:	1c55      	adds	r5, r2, #1
 80140d6:	d1a3      	bne.n	8014020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80140d8:	4294      	cmp	r4, r2
 80140da:	dda1      	ble.n	8014020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80140dc:	1c5d      	adds	r5, r3, #1
 80140de:	db9f      	blt.n	8014020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80140e0:	9d07      	ldr	r5, [sp, #28]
 80140e2:	429d      	cmp	r5, r3
 80140e4:	dd9c      	ble.n	8014020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80140e6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80140ea:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80140ee:	e9cd 4500 	strd	r4, r5, [sp]
 80140f2:	463b      	mov	r3, r7
 80140f4:	9a08      	ldr	r2, [sp, #32]
 80140f6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80140f8:	4641      	mov	r1, r8
 80140fa:	f7ff fe0f 	bl	8013d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80140fe:	e78f      	b.n	8014020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014100:	ea4f 4329 	mov.w	r3, r9, asr #16
 8014104:	1432      	asrs	r2, r6, #16
 8014106:	fb04 3202 	mla	r2, r4, r2, r3
 801410a:	9908      	ldr	r1, [sp, #32]
 801410c:	9b08      	ldr	r3, [sp, #32]
 801410e:	4413      	add	r3, r2
 8014110:	5c8a      	ldrb	r2, [r1, r2]
 8014112:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8014116:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801411a:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 801411e:	f1be 0f00 	cmp.w	lr, #0
 8014122:	d05b      	beq.n	80141dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8014124:	785a      	ldrb	r2, [r3, #1]
 8014126:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801412a:	920f      	str	r2, [sp, #60]	; 0x3c
 801412c:	b140      	cbz	r0, 8014140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 801412e:	191a      	adds	r2, r3, r4
 8014130:	5d1b      	ldrb	r3, [r3, r4]
 8014132:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014136:	930b      	str	r3, [sp, #44]	; 0x2c
 8014138:	7853      	ldrb	r3, [r2, #1]
 801413a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801413e:	9310      	str	r3, [sp, #64]	; 0x40
 8014140:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014142:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8014144:	fb1e f200 	smulbb	r2, lr, r0
 8014148:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801414c:	10d2      	asrs	r2, r2, #3
 801414e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014152:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014156:	ea4c 0c03 	orr.w	ip, ip, r3
 801415a:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801415e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014160:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014162:	041b      	lsls	r3, r3, #16
 8014164:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014168:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801416c:	ea43 030b 	orr.w	r3, r3, fp
 8014170:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014172:	4353      	muls	r3, r2
 8014174:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014178:	fb05 3c0c 	mla	ip, r5, ip, r3
 801417c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014180:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014184:	ea43 0b01 	orr.w	fp, r3, r1
 8014188:	f1c0 0110 	rsb	r1, r0, #16
 801418c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801418e:	eba1 0e0e 	sub.w	lr, r1, lr
 8014192:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014196:	fb0e cc0b 	mla	ip, lr, fp, ip
 801419a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801419e:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80141a2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80141a6:	ea4b 0e0e 	orr.w	lr, fp, lr
 80141aa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80141ae:	fb02 cc0e 	mla	ip, r2, lr, ip
 80141b2:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80141b6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80141ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80141be:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80141c2:	ea43 0c0c 	orr.w	ip, r3, ip
 80141c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80141c8:	f823 cb02 	strh.w	ip, [r3], #2
 80141cc:	930c      	str	r3, [sp, #48]	; 0x30
 80141ce:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80141d0:	4499      	add	r9, r3
 80141d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80141d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80141d8:	441e      	add	r6, r3
 80141da:	e695      	b.n	8013f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 80141dc:	2800      	cmp	r0, #0
 80141de:	d0af      	beq.n	8014140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80141e0:	5d1b      	ldrb	r3, [r3, r4]
 80141e2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80141e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80141e8:	e7aa      	b.n	8014140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80141ea:	b015      	add	sp, #84	; 0x54
 80141ec:	ecbd 8b0a 	vpop	{d8-d12}
 80141f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080141f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80141f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141f8:	468b      	mov	fp, r1
 80141fa:	8809      	ldrh	r1, [r1, #0]
 80141fc:	b089      	sub	sp, #36	; 0x24
 80141fe:	10cd      	asrs	r5, r1, #3
 8014200:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014204:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014208:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801420c:	00c9      	lsls	r1, r1, #3
 801420e:	9500      	str	r5, [sp, #0]
 8014210:	b2c9      	uxtb	r1, r1
 8014212:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014216:	9101      	str	r1, [sp, #4]
 8014218:	9900      	ldr	r1, [sp, #0]
 801421a:	9202      	str	r2, [sp, #8]
 801421c:	fb04 650e 	mla	r5, r4, lr, r6
 8014220:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014224:	eb02 0805 	add.w	r8, r2, r5
 8014228:	0209      	lsls	r1, r1, #8
 801422a:	9a01      	ldr	r2, [sp, #4]
 801422c:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014230:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8014234:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014238:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 801423c:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014240:	4311      	orrs	r1, r2
 8014242:	2c00      	cmp	r4, #0
 8014244:	9107      	str	r1, [sp, #28]
 8014246:	db43      	blt.n	80142d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014248:	45a2      	cmp	sl, r4
 801424a:	dd41      	ble.n	80142d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801424c:	2e00      	cmp	r6, #0
 801424e:	db3d      	blt.n	80142cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014250:	45b6      	cmp	lr, r6
 8014252:	dd3b      	ble.n	80142cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014254:	9a02      	ldr	r2, [sp, #8]
 8014256:	5d55      	ldrb	r5, [r2, r5]
 8014258:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801425c:	441d      	add	r5, r3
 801425e:	1c72      	adds	r2, r6, #1
 8014260:	d439      	bmi.n	80142d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014262:	4596      	cmp	lr, r2
 8014264:	dd37      	ble.n	80142d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014266:	2f00      	cmp	r7, #0
 8014268:	d035      	beq.n	80142d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801426a:	f898 1001 	ldrb.w	r1, [r8, #1]
 801426e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014272:	4419      	add	r1, r3
 8014274:	3401      	adds	r4, #1
 8014276:	d432      	bmi.n	80142de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014278:	45a2      	cmp	sl, r4
 801427a:	dd30      	ble.n	80142de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801427c:	b378      	cbz	r0, 80142de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801427e:	2e00      	cmp	r6, #0
 8014280:	db2b      	blt.n	80142da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014282:	45b6      	cmp	lr, r6
 8014284:	dd29      	ble.n	80142da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014286:	f818 400e 	ldrb.w	r4, [r8, lr]
 801428a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801428e:	441c      	add	r4, r3
 8014290:	3601      	adds	r6, #1
 8014292:	d427      	bmi.n	80142e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014294:	45b6      	cmp	lr, r6
 8014296:	dd25      	ble.n	80142e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014298:	b327      	cbz	r7, 80142e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801429a:	44c6      	add	lr, r8
 801429c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80142a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80142a4:	4413      	add	r3, r2
 80142a6:	782a      	ldrb	r2, [r5, #0]
 80142a8:	9202      	str	r2, [sp, #8]
 80142aa:	780a      	ldrb	r2, [r1, #0]
 80142ac:	9203      	str	r2, [sp, #12]
 80142ae:	7822      	ldrb	r2, [r4, #0]
 80142b0:	9204      	str	r2, [sp, #16]
 80142b2:	2f0f      	cmp	r7, #15
 80142b4:	781a      	ldrb	r2, [r3, #0]
 80142b6:	9205      	str	r2, [sp, #20]
 80142b8:	d801      	bhi.n	80142be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80142ba:	280f      	cmp	r0, #15
 80142bc:	d914      	bls.n	80142e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80142be:	4b3f      	ldr	r3, [pc, #252]	; (80143bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80142c0:	4a3f      	ldr	r2, [pc, #252]	; (80143c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80142c2:	4840      	ldr	r0, [pc, #256]	; (80143c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80142c4:	f240 210d 	movw	r1, #525	; 0x20d
 80142c8:	f006 fa8e 	bl	801a7e8 <__assert_func>
 80142cc:	ad07      	add	r5, sp, #28
 80142ce:	e7c6      	b.n	801425e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 80142d0:	a907      	add	r1, sp, #28
 80142d2:	460d      	mov	r5, r1
 80142d4:	e7ce      	b.n	8014274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80142d6:	a907      	add	r1, sp, #28
 80142d8:	e7cc      	b.n	8014274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80142da:	ac07      	add	r4, sp, #28
 80142dc:	e7d8      	b.n	8014290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80142de:	ab07      	add	r3, sp, #28
 80142e0:	461c      	mov	r4, r3
 80142e2:	e7e0      	b.n	80142a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80142e4:	ab07      	add	r3, sp, #28
 80142e6:	e7de      	b.n	80142a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80142e8:	b2ba      	uxth	r2, r7
 80142ea:	b280      	uxth	r0, r0
 80142ec:	fb02 fa00 	mul.w	sl, r2, r0
 80142f0:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80142f4:	0112      	lsls	r2, r2, #4
 80142f6:	b280      	uxth	r0, r0
 80142f8:	f891 8002 	ldrb.w	r8, [r1, #2]
 80142fc:	7849      	ldrb	r1, [r1, #1]
 80142fe:	78ae      	ldrb	r6, [r5, #2]
 8014300:	786d      	ldrb	r5, [r5, #1]
 8014302:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014306:	eba2 020a 	sub.w	r2, r2, sl
 801430a:	b292      	uxth	r2, r2
 801430c:	ebae 0e00 	sub.w	lr, lr, r0
 8014310:	fa1f fe8e 	uxth.w	lr, lr
 8014314:	4351      	muls	r1, r2
 8014316:	fb02 f808 	mul.w	r8, r2, r8
 801431a:	fb0e 8806 	mla	r8, lr, r6, r8
 801431e:	fb0e 1505 	mla	r5, lr, r5, r1
 8014322:	78a6      	ldrb	r6, [r4, #2]
 8014324:	7861      	ldrb	r1, [r4, #1]
 8014326:	fa1f f78c 	uxth.w	r7, ip
 801432a:	fb00 8806 	mla	r8, r0, r6, r8
 801432e:	fb00 5501 	mla	r5, r0, r1, r5
 8014332:	789e      	ldrb	r6, [r3, #2]
 8014334:	7859      	ldrb	r1, [r3, #1]
 8014336:	9b00      	ldr	r3, [sp, #0]
 8014338:	ea6f 0c0c 	mvn.w	ip, ip
 801433c:	fa5f fc8c 	uxtb.w	ip, ip
 8014340:	fb0a 5101 	mla	r1, sl, r1, r5
 8014344:	fb13 f50c 	smulbb	r5, r3, ip
 8014348:	9b03      	ldr	r3, [sp, #12]
 801434a:	435a      	muls	r2, r3
 801434c:	9b02      	ldr	r3, [sp, #8]
 801434e:	fb0e 2203 	mla	r2, lr, r3, r2
 8014352:	9b04      	ldr	r3, [sp, #16]
 8014354:	fb00 2003 	mla	r0, r0, r3, r2
 8014358:	9b05      	ldr	r3, [sp, #20]
 801435a:	fb0a 8606 	mla	r6, sl, r6, r8
 801435e:	fb0a 0a03 	mla	sl, sl, r3, r0
 8014362:	9b01      	ldr	r3, [sp, #4]
 8014364:	fb19 f90c 	smulbb	r9, r9, ip
 8014368:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801436c:	fb13 fc0c 	smulbb	ip, r3, ip
 8014370:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014374:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014378:	fb06 9607 	mla	r6, r6, r7, r9
 801437c:	fb01 5107 	mla	r1, r1, r7, r5
 8014380:	fb0a c707 	mla	r7, sl, r7, ip
 8014384:	b2b6      	uxth	r6, r6
 8014386:	b289      	uxth	r1, r1
 8014388:	b2bf      	uxth	r7, r7
 801438a:	f106 0901 	add.w	r9, r6, #1
 801438e:	f107 0c01 	add.w	ip, r7, #1
 8014392:	1c4d      	adds	r5, r1, #1
 8014394:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8014398:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 801439c:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80143a0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80143a4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80143a8:	0949      	lsrs	r1, r1, #5
 80143aa:	433e      	orrs	r6, r7
 80143ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80143b0:	430e      	orrs	r6, r1
 80143b2:	f8ab 6000 	strh.w	r6, [fp]
 80143b6:	b009      	add	sp, #36	; 0x24
 80143b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80143bc:	0801eb1d 	.word	0x0801eb1d
 80143c0:	0801f075 	.word	0x0801f075
 80143c4:	0801eba5 	.word	0x0801eba5

080143c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80143c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143cc:	ed2d 8b08 	vpush	{d8-d11}
 80143d0:	b097      	sub	sp, #92	; 0x5c
 80143d2:	eeb0 aa40 	vmov.f32	s20, s0
 80143d6:	9309      	str	r3, [sp, #36]	; 0x24
 80143d8:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80143dc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80143de:	930b      	str	r3, [sp, #44]	; 0x2c
 80143e0:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 80143e4:	9310      	str	r3, [sp, #64]	; 0x40
 80143e6:	910f      	str	r1, [sp, #60]	; 0x3c
 80143e8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80143ec:	9015      	str	r0, [sp, #84]	; 0x54
 80143ee:	6860      	ldr	r0, [r4, #4]
 80143f0:	9213      	str	r2, [sp, #76]	; 0x4c
 80143f2:	fb00 1303 	mla	r3, r0, r3, r1
 80143f6:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80143f8:	6821      	ldr	r1, [r4, #0]
 80143fa:	6854      	ldr	r4, [r2, #4]
 80143fc:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8014400:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014404:	930a      	str	r3, [sp, #40]	; 0x28
 8014406:	6813      	ldr	r3, [r2, #0]
 8014408:	930e      	str	r3, [sp, #56]	; 0x38
 801440a:	1d23      	adds	r3, r4, #4
 801440c:	9308      	str	r3, [sp, #32]
 801440e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014410:	43db      	mvns	r3, r3
 8014412:	b2db      	uxtb	r3, r3
 8014414:	eef0 9a60 	vmov.f32	s19, s1
 8014418:	eeb0 9a41 	vmov.f32	s18, s2
 801441c:	eeb0 8a62 	vmov.f32	s16, s5
 8014420:	eef0 8a43 	vmov.f32	s17, s6
 8014424:	eef0 ba44 	vmov.f32	s23, s8
 8014428:	eeb0 ba64 	vmov.f32	s22, s9
 801442c:	eef0 aa45 	vmov.f32	s21, s10
 8014430:	930c      	str	r3, [sp, #48]	; 0x30
 8014432:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014434:	2b00      	cmp	r3, #0
 8014436:	dc03      	bgt.n	8014440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014438:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801443a:	2b00      	cmp	r3, #0
 801443c:	f340 825c 	ble.w	80148f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8014440:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014442:	2b00      	cmp	r3, #0
 8014444:	f340 8127 	ble.w	8014696 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8014448:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801444a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801444c:	1412      	asrs	r2, r2, #16
 801444e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014452:	d430      	bmi.n	80144b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8014454:	1c51      	adds	r1, r2, #1
 8014456:	428d      	cmp	r5, r1
 8014458:	dd30      	ble.n	80144bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801445a:	2b00      	cmp	r3, #0
 801445c:	db2e      	blt.n	80144bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801445e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014460:	1c59      	adds	r1, r3, #1
 8014462:	4288      	cmp	r0, r1
 8014464:	dd2a      	ble.n	80144bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014466:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014468:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801446a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801446c:	3b01      	subs	r3, #1
 801446e:	fb02 1203 	mla	r2, r2, r3, r1
 8014472:	1412      	asrs	r2, r2, #16
 8014474:	d42c      	bmi.n	80144d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014476:	3201      	adds	r2, #1
 8014478:	4295      	cmp	r5, r2
 801447a:	dd29      	ble.n	80144d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801447c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801447e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014480:	fb02 1303 	mla	r3, r2, r3, r1
 8014484:	141b      	asrs	r3, r3, #16
 8014486:	d423      	bmi.n	80144d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014488:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801448a:	3301      	adds	r3, #1
 801448c:	429a      	cmp	r2, r3
 801448e:	dd1f      	ble.n	80144d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014490:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014492:	9311      	str	r3, [sp, #68]	; 0x44
 8014494:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014496:	930d      	str	r3, [sp, #52]	; 0x34
 8014498:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801449c:	9312      	str	r3, [sp, #72]	; 0x48
 801449e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80144a0:	2b00      	cmp	r3, #0
 80144a2:	f300 8161 	bgt.w	8014768 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 80144a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80144aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80144ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80144b2:	930a      	str	r3, [sp, #40]	; 0x28
 80144b4:	e0f1      	b.n	801469a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 80144b6:	1c51      	adds	r1, r2, #1
 80144b8:	f040 80de 	bne.w	8014678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80144bc:	42aa      	cmp	r2, r5
 80144be:	f280 80db 	bge.w	8014678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80144c2:	1c5f      	adds	r7, r3, #1
 80144c4:	f2c0 80d8 	blt.w	8014678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80144c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80144ca:	4293      	cmp	r3, r2
 80144cc:	f280 80d4 	bge.w	8014678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80144d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144d2:	9311      	str	r3, [sp, #68]	; 0x44
 80144d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80144d6:	930d      	str	r3, [sp, #52]	; 0x34
 80144d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80144da:	2b00      	cmp	r3, #0
 80144dc:	dde3      	ble.n	80144a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80144de:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80144e0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80144e2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80144e4:	141a      	asrs	r2, r3, #16
 80144e6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80144e8:	1400      	asrs	r0, r0, #16
 80144ea:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80144ee:	f3c1 3103 	ubfx	r1, r1, #12, #4
 80144f2:	f100 8120 	bmi.w	8014736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 80144f6:	1c46      	adds	r6, r0, #1
 80144f8:	42b5      	cmp	r5, r6
 80144fa:	f340 811e 	ble.w	801473a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80144fe:	2a00      	cmp	r2, #0
 8014500:	f2c0 811b 	blt.w	801473a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014504:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014506:	1c56      	adds	r6, r2, #1
 8014508:	42b7      	cmp	r7, r6
 801450a:	f340 8116 	ble.w	801473a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 801450e:	fb02 0005 	mla	r0, r2, r5, r0
 8014512:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014514:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014516:	9c08      	ldr	r4, [sp, #32]
 8014518:	4402      	add	r2, r0
 801451a:	5c30      	ldrb	r0, [r6, r0]
 801451c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014520:	9014      	str	r0, [sp, #80]	; 0x50
 8014522:	1826      	adds	r6, r4, r0
 8014524:	2b00      	cmp	r3, #0
 8014526:	f000 80f7 	beq.w	8014718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 801452a:	f892 e001 	ldrb.w	lr, [r2, #1]
 801452e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014532:	44a6      	add	lr, r4
 8014534:	2900      	cmp	r1, #0
 8014536:	f000 80f8 	beq.w	801472a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801453a:	1950      	adds	r0, r2, r5
 801453c:	5d52      	ldrb	r2, [r2, r5]
 801453e:	7840      	ldrb	r0, [r0, #1]
 8014540:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014544:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014548:	4422      	add	r2, r4
 801454a:	4420      	add	r0, r4
 801454c:	b29b      	uxth	r3, r3
 801454e:	b289      	uxth	r1, r1
 8014550:	fb03 fa01 	mul.w	sl, r3, r1
 8014554:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8014558:	011b      	lsls	r3, r3, #4
 801455a:	b289      	uxth	r1, r1
 801455c:	f89e c002 	ldrb.w	ip, [lr, #2]
 8014560:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014564:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014566:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014568:	f8b7 8000 	ldrh.w	r8, [r7]
 801456c:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8014570:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8014574:	eba3 030a 	sub.w	r3, r3, sl
 8014578:	b29b      	uxth	r3, r3
 801457a:	eba9 0901 	sub.w	r9, r9, r1
 801457e:	fa1f f989 	uxth.w	r9, r9
 8014582:	fb03 fc0c 	mul.w	ip, r3, ip
 8014586:	fb09 cc0b 	mla	ip, r9, fp, ip
 801458a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801458e:	fb01 cc0b 	mla	ip, r1, fp, ip
 8014592:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014596:	fb0a cc0b 	mla	ip, sl, fp, ip
 801459a:	ea4f 2b28 	mov.w	fp, r8, asr #8
 801459e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80145a2:	fb1b fb04 	smulbb	fp, fp, r4
 80145a6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80145aa:	fb0c bc07 	mla	ip, ip, r7, fp
 80145ae:	f896 b001 	ldrb.w	fp, [r6, #1]
 80145b2:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80145b6:	f89e e000 	ldrb.w	lr, [lr]
 80145ba:	435e      	muls	r6, r3
 80145bc:	fb09 660b 	mla	r6, r9, fp, r6
 80145c0:	f892 b001 	ldrb.w	fp, [r2, #1]
 80145c4:	fb01 660b 	mla	r6, r1, fp, r6
 80145c8:	f890 b001 	ldrb.w	fp, [r0, #1]
 80145cc:	fb0a 660b 	mla	r6, sl, fp, r6
 80145d0:	ea4f 0be8 	mov.w	fp, r8, asr #3
 80145d4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80145d8:	fb1b fb04 	smulbb	fp, fp, r4
 80145dc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80145e0:	fb06 b607 	mla	r6, r6, r7, fp
 80145e4:	b2b4      	uxth	r4, r6
 80145e6:	9412      	str	r4, [sp, #72]	; 0x48
 80145e8:	9e08      	ldr	r6, [sp, #32]
 80145ea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80145ec:	f816 b004 	ldrb.w	fp, [r6, r4]
 80145f0:	fb03 f30e 	mul.w	r3, r3, lr
 80145f4:	f892 e000 	ldrb.w	lr, [r2]
 80145f8:	fb09 330b 	mla	r3, r9, fp, r3
 80145fc:	fb01 330e 	mla	r3, r1, lr, r3
 8014600:	f890 e000 	ldrb.w	lr, [r0]
 8014604:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014608:	fb0a 3e0e 	mla	lr, sl, lr, r3
 801460c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801460e:	fa5f f888 	uxtb.w	r8, r8
 8014612:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8014616:	fb18 f803 	smulbb	r8, r8, r3
 801461a:	fb0e 8807 	mla	r8, lr, r7, r8
 801461e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014620:	fa1f fc8c 	uxth.w	ip, ip
 8014624:	fa1f f888 	uxth.w	r8, r8
 8014628:	f103 0b01 	add.w	fp, r3, #1
 801462c:	f10c 0201 	add.w	r2, ip, #1
 8014630:	f108 0e01 	add.w	lr, r8, #1
 8014634:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 8014638:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801463c:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 8014640:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014644:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 8014648:	0976      	lsrs	r6, r6, #5
 801464a:	ea4c 0c08 	orr.w	ip, ip, r8
 801464e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014652:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014654:	ea4c 0606 	orr.w	r6, ip, r6
 8014658:	801e      	strh	r6, [r3, #0]
 801465a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801465c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801465e:	3302      	adds	r3, #2
 8014660:	930d      	str	r3, [sp, #52]	; 0x34
 8014662:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014664:	4413      	add	r3, r2
 8014666:	9329      	str	r3, [sp, #164]	; 0xa4
 8014668:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801466a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801466c:	4413      	add	r3, r2
 801466e:	932a      	str	r3, [sp, #168]	; 0xa8
 8014670:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014672:	3b01      	subs	r3, #1
 8014674:	9311      	str	r3, [sp, #68]	; 0x44
 8014676:	e72f      	b.n	80144d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8014678:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801467a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801467c:	4413      	add	r3, r2
 801467e:	9329      	str	r3, [sp, #164]	; 0xa4
 8014680:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014682:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014684:	4413      	add	r3, r2
 8014686:	932a      	str	r3, [sp, #168]	; 0xa8
 8014688:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801468a:	3b01      	subs	r3, #1
 801468c:	9309      	str	r3, [sp, #36]	; 0x24
 801468e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014690:	3302      	adds	r3, #2
 8014692:	930a      	str	r3, [sp, #40]	; 0x28
 8014694:	e6d4      	b.n	8014440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014696:	f47f aee6 	bne.w	8014466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801469a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801469c:	2b00      	cmp	r3, #0
 801469e:	f340 812b 	ble.w	80148f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 80146a2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80146a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80146aa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80146ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80146b0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80146b4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80146b8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80146bc:	eef0 6a48 	vmov.f32	s13, s16
 80146c0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80146c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146c8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80146cc:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80146d0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80146d4:	eef0 6a68 	vmov.f32	s13, s17
 80146d8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80146dc:	ee18 2a10 	vmov	r2, s16
 80146e0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80146e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80146e8:	ee18 2a90 	vmov	r2, s17
 80146ec:	932b      	str	r3, [sp, #172]	; 0xac
 80146ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80146f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80146f4:	932c      	str	r3, [sp, #176]	; 0xb0
 80146f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80146f8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80146fa:	3b01      	subs	r3, #1
 80146fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014700:	930f      	str	r3, [sp, #60]	; 0x3c
 8014702:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014704:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8014708:	bf08      	it	eq
 801470a:	4613      	moveq	r3, r2
 801470c:	9309      	str	r3, [sp, #36]	; 0x24
 801470e:	eef0 8a67 	vmov.f32	s17, s15
 8014712:	eeb0 8a47 	vmov.f32	s16, s14
 8014716:	e68c      	b.n	8014432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8014718:	b151      	cbz	r1, 8014730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801471a:	5d52      	ldrb	r2, [r2, r5]
 801471c:	9808      	ldr	r0, [sp, #32]
 801471e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014722:	4402      	add	r2, r0
 8014724:	4630      	mov	r0, r6
 8014726:	46b6      	mov	lr, r6
 8014728:	e710      	b.n	801454c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 801472a:	4630      	mov	r0, r6
 801472c:	4632      	mov	r2, r6
 801472e:	e70d      	b.n	801454c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8014730:	4630      	mov	r0, r6
 8014732:	4632      	mov	r2, r6
 8014734:	e7f7      	b.n	8014726 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 8014736:	1c46      	adds	r6, r0, #1
 8014738:	d18f      	bne.n	801465a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801473a:	4285      	cmp	r5, r0
 801473c:	dd8d      	ble.n	801465a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801473e:	1c54      	adds	r4, r2, #1
 8014740:	db8b      	blt.n	801465a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014742:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014744:	4294      	cmp	r4, r2
 8014746:	dd88      	ble.n	801465a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014748:	e9cd 2303 	strd	r2, r3, [sp, #12]
 801474c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801474e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014750:	9002      	str	r0, [sp, #8]
 8014752:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014756:	e9cd 5300 	strd	r5, r3, [sp]
 801475a:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 801475e:	9b08      	ldr	r3, [sp, #32]
 8014760:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014762:	f7ff fd47 	bl	80141f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8014766:	e778      	b.n	801465a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014768:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801476a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801476c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801476e:	1410      	asrs	r0, r2, #16
 8014770:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014774:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014776:	1412      	asrs	r2, r2, #16
 8014778:	fb05 2000 	mla	r0, r5, r0, r2
 801477c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801477e:	f814 a000 	ldrb.w	sl, [r4, r0]
 8014782:	4402      	add	r2, r0
 8014784:	9808      	ldr	r0, [sp, #32]
 8014786:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801478a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801478e:	eb00 060a 	add.w	r6, r0, sl
 8014792:	2b00      	cmp	r3, #0
 8014794:	f000 80a1 	beq.w	80148da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8014798:	f892 c001 	ldrb.w	ip, [r2, #1]
 801479c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80147a0:	4484      	add	ip, r0
 80147a2:	2900      	cmp	r1, #0
 80147a4:	f000 80a2 	beq.w	80148ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 80147a8:	1950      	adds	r0, r2, r5
 80147aa:	5d52      	ldrb	r2, [r2, r5]
 80147ac:	7840      	ldrb	r0, [r0, #1]
 80147ae:	9c08      	ldr	r4, [sp, #32]
 80147b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80147b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80147b8:	4422      	add	r2, r4
 80147ba:	4420      	add	r0, r4
 80147bc:	b29b      	uxth	r3, r3
 80147be:	b289      	uxth	r1, r1
 80147c0:	fb03 f901 	mul.w	r9, r3, r1
 80147c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80147c8:	011b      	lsls	r3, r3, #4
 80147ca:	b289      	uxth	r1, r1
 80147cc:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80147d0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80147d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80147d6:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80147da:	eba3 0309 	sub.w	r3, r3, r9
 80147de:	b29b      	uxth	r3, r3
 80147e0:	eba8 0801 	sub.w	r8, r8, r1
 80147e4:	fa1f f888 	uxth.w	r8, r8
 80147e8:	435f      	muls	r7, r3
 80147ea:	fb08 770b 	mla	r7, r8, fp, r7
 80147ee:	f892 b002 	ldrb.w	fp, [r2, #2]
 80147f2:	f8b4 e000 	ldrh.w	lr, [r4]
 80147f6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80147f8:	fb01 770b 	mla	r7, r1, fp, r7
 80147fc:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014800:	fb09 770b 	mla	r7, r9, fp, r7
 8014804:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8014808:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801480c:	fb1b fb04 	smulbb	fp, fp, r4
 8014810:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014812:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8014816:	fb07 b704 	mla	r7, r7, r4, fp
 801481a:	f896 b001 	ldrb.w	fp, [r6, #1]
 801481e:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8014822:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014824:	f89c c000 	ldrb.w	ip, [ip]
 8014828:	435e      	muls	r6, r3
 801482a:	fb08 660b 	mla	r6, r8, fp, r6
 801482e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014832:	fb01 660b 	mla	r6, r1, fp, r6
 8014836:	f890 b001 	ldrb.w	fp, [r0, #1]
 801483a:	fb09 660b 	mla	r6, r9, fp, r6
 801483e:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8014842:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014846:	fb1b fb04 	smulbb	fp, fp, r4
 801484a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801484c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014850:	fb06 b604 	mla	r6, r6, r4, fp
 8014854:	9c08      	ldr	r4, [sp, #32]
 8014856:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801485a:	fb03 f30c 	mul.w	r3, r3, ip
 801485e:	f892 c000 	ldrb.w	ip, [r2]
 8014862:	fb08 330a 	mla	r3, r8, sl, r3
 8014866:	fb01 330c 	mla	r3, r1, ip, r3
 801486a:	f890 c000 	ldrb.w	ip, [r0]
 801486e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014872:	fb09 3c0c 	mla	ip, r9, ip, r3
 8014876:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014878:	fa5f fe8e 	uxtb.w	lr, lr
 801487c:	fb1e fe03 	smulbb	lr, lr, r3
 8014880:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014882:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8014886:	fb0c ec03 	mla	ip, ip, r3, lr
 801488a:	b2bf      	uxth	r7, r7
 801488c:	b2b6      	uxth	r6, r6
 801488e:	fa1f fc8c 	uxth.w	ip, ip
 8014892:	1c7b      	adds	r3, r7, #1
 8014894:	f10c 0201 	add.w	r2, ip, #1
 8014898:	f106 0b01 	add.w	fp, r6, #1
 801489c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80148a0:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 80148a4:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80148a8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80148ac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80148b0:	0976      	lsrs	r6, r6, #5
 80148b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80148b4:	4317      	orrs	r7, r2
 80148b6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80148ba:	4337      	orrs	r7, r6
 80148bc:	f823 7b02 	strh.w	r7, [r3], #2
 80148c0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80148c2:	930d      	str	r3, [sp, #52]	; 0x34
 80148c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80148c6:	4413      	add	r3, r2
 80148c8:	9329      	str	r3, [sp, #164]	; 0xa4
 80148ca:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80148cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80148ce:	4413      	add	r3, r2
 80148d0:	932a      	str	r3, [sp, #168]	; 0xa8
 80148d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80148d4:	3b01      	subs	r3, #1
 80148d6:	9311      	str	r3, [sp, #68]	; 0x44
 80148d8:	e5e1      	b.n	801449e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80148da:	b151      	cbz	r1, 80148f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 80148dc:	5d52      	ldrb	r2, [r2, r5]
 80148de:	9808      	ldr	r0, [sp, #32]
 80148e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80148e4:	4402      	add	r2, r0
 80148e6:	4630      	mov	r0, r6
 80148e8:	46b4      	mov	ip, r6
 80148ea:	e767      	b.n	80147bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 80148ec:	4630      	mov	r0, r6
 80148ee:	4632      	mov	r2, r6
 80148f0:	e764      	b.n	80147bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 80148f2:	4630      	mov	r0, r6
 80148f4:	4632      	mov	r2, r6
 80148f6:	e7f7      	b.n	80148e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 80148f8:	b017      	add	sp, #92	; 0x5c
 80148fa:	ecbd 8b08 	vpop	{d8-d11}
 80148fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014904 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8014904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014908:	880e      	ldrh	r6, [r1, #0]
 801490a:	b085      	sub	sp, #20
 801490c:	0230      	lsls	r0, r6, #8
 801490e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8014912:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8014916:	0170      	lsls	r0, r6, #5
 8014918:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801491c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014920:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8014924:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8014928:	00f6      	lsls	r6, r6, #3
 801492a:	ea4b 0000 	orr.w	r0, fp, r0
 801492e:	b2f6      	uxtb	r6, r6
 8014930:	4691      	mov	r9, r2
 8014932:	fb05 7a0c 	mla	sl, r5, ip, r7
 8014936:	4306      	orrs	r6, r0
 8014938:	2d00      	cmp	r5, #0
 801493a:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 801493e:	9603      	str	r6, [sp, #12]
 8014940:	eb09 0e0a 	add.w	lr, r9, sl
 8014944:	db42      	blt.n	80149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8014946:	45a8      	cmp	r8, r5
 8014948:	dd40      	ble.n	80149cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801494a:	2f00      	cmp	r7, #0
 801494c:	db3c      	blt.n	80149c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 801494e:	45bc      	cmp	ip, r7
 8014950:	dd3a      	ble.n	80149c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8014952:	f819 600a 	ldrb.w	r6, [r9, sl]
 8014956:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801495a:	441e      	add	r6, r3
 801495c:	1c78      	adds	r0, r7, #1
 801495e:	d438      	bmi.n	80149d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014960:	4584      	cmp	ip, r0
 8014962:	dd36      	ble.n	80149d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014964:	b3aa      	cbz	r2, 80149d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014966:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801496a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801496e:	4418      	add	r0, r3
 8014970:	3501      	adds	r5, #1
 8014972:	d432      	bmi.n	80149da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014974:	45a8      	cmp	r8, r5
 8014976:	dd30      	ble.n	80149da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014978:	b37c      	cbz	r4, 80149da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801497a:	2f00      	cmp	r7, #0
 801497c:	db2b      	blt.n	80149d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 801497e:	45bc      	cmp	ip, r7
 8014980:	dd29      	ble.n	80149d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8014982:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8014986:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801498a:	441d      	add	r5, r3
 801498c:	3701      	adds	r7, #1
 801498e:	d427      	bmi.n	80149e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014990:	45bc      	cmp	ip, r7
 8014992:	dd25      	ble.n	80149e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014994:	b322      	cbz	r2, 80149e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014996:	44f4      	add	ip, lr
 8014998:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801499c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80149a0:	443b      	add	r3, r7
 80149a2:	781f      	ldrb	r7, [r3, #0]
 80149a4:	f896 a000 	ldrb.w	sl, [r6]
 80149a8:	f890 b000 	ldrb.w	fp, [r0]
 80149ac:	f895 9000 	ldrb.w	r9, [r5]
 80149b0:	9700      	str	r7, [sp, #0]
 80149b2:	2a0f      	cmp	r2, #15
 80149b4:	d801      	bhi.n	80149ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 80149b6:	2c0f      	cmp	r4, #15
 80149b8:	d914      	bls.n	80149e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 80149ba:	4b2c      	ldr	r3, [pc, #176]	; (8014a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 80149bc:	4a2c      	ldr	r2, [pc, #176]	; (8014a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80149be:	482d      	ldr	r0, [pc, #180]	; (8014a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80149c0:	f240 210d 	movw	r1, #525	; 0x20d
 80149c4:	f005 ff10 	bl	801a7e8 <__assert_func>
 80149c8:	ae03      	add	r6, sp, #12
 80149ca:	e7c7      	b.n	801495c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 80149cc:	a803      	add	r0, sp, #12
 80149ce:	4606      	mov	r6, r0
 80149d0:	e7ce      	b.n	8014970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80149d2:	a803      	add	r0, sp, #12
 80149d4:	e7cc      	b.n	8014970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80149d6:	ad03      	add	r5, sp, #12
 80149d8:	e7d8      	b.n	801498c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 80149da:	ab03      	add	r3, sp, #12
 80149dc:	461d      	mov	r5, r3
 80149de:	e7e0      	b.n	80149a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80149e0:	ab03      	add	r3, sp, #12
 80149e2:	e7de      	b.n	80149a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80149e4:	b292      	uxth	r2, r2
 80149e6:	b2a4      	uxth	r4, r4
 80149e8:	fb02 f804 	mul.w	r8, r2, r4
 80149ec:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80149f0:	0112      	lsls	r2, r2, #4
 80149f2:	b2a4      	uxth	r4, r4
 80149f4:	f890 e002 	ldrb.w	lr, [r0, #2]
 80149f8:	78b7      	ldrb	r7, [r6, #2]
 80149fa:	7840      	ldrb	r0, [r0, #1]
 80149fc:	7876      	ldrb	r6, [r6, #1]
 80149fe:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8014a02:	eba2 0208 	sub.w	r2, r2, r8
 8014a06:	b292      	uxth	r2, r2
 8014a08:	ebac 0c04 	sub.w	ip, ip, r4
 8014a0c:	fa1f fc8c 	uxth.w	ip, ip
 8014a10:	fb02 fe0e 	mul.w	lr, r2, lr
 8014a14:	fb0c ee07 	mla	lr, ip, r7, lr
 8014a18:	78af      	ldrb	r7, [r5, #2]
 8014a1a:	fb04 ee07 	mla	lr, r4, r7, lr
 8014a1e:	789f      	ldrb	r7, [r3, #2]
 8014a20:	785b      	ldrb	r3, [r3, #1]
 8014a22:	fb08 e707 	mla	r7, r8, r7, lr
 8014a26:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014a2a:	fb02 fe0b 	mul.w	lr, r2, fp
 8014a2e:	4342      	muls	r2, r0
 8014a30:	7868      	ldrb	r0, [r5, #1]
 8014a32:	9701      	str	r7, [sp, #4]
 8014a34:	fb0c ee0a 	mla	lr, ip, sl, lr
 8014a38:	9f00      	ldr	r7, [sp, #0]
 8014a3a:	fb0c 2206 	mla	r2, ip, r6, r2
 8014a3e:	fb04 ee09 	mla	lr, r4, r9, lr
 8014a42:	fb04 2400 	mla	r4, r4, r0, r2
 8014a46:	fb08 ee07 	mla	lr, r8, r7, lr
 8014a4a:	9f01      	ldr	r7, [sp, #4]
 8014a4c:	fb08 4803 	mla	r8, r8, r3, r4
 8014a50:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014a54:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014a58:	ea47 070e 	orr.w	r7, r7, lr
 8014a5c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014a60:	ea47 0708 	orr.w	r7, r7, r8
 8014a64:	800f      	strh	r7, [r1, #0]
 8014a66:	b005      	add	sp, #20
 8014a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a6c:	0801eb1d 	.word	0x0801eb1d
 8014a70:	0801f075 	.word	0x0801f075
 8014a74:	0801eba5 	.word	0x0801eba5

08014a78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a7c:	ed2d 8b0a 	vpush	{d8-d12}
 8014a80:	b091      	sub	sp, #68	; 0x44
 8014a82:	eeb0 aa40 	vmov.f32	s20, s0
 8014a86:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8014a88:	9307      	str	r3, [sp, #28]
 8014a8a:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8014a8e:	910c      	str	r1, [sp, #48]	; 0x30
 8014a90:	9309      	str	r3, [sp, #36]	; 0x24
 8014a92:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8014a96:	900f      	str	r0, [sp, #60]	; 0x3c
 8014a98:	6860      	ldr	r0, [r4, #4]
 8014a9a:	920e      	str	r2, [sp, #56]	; 0x38
 8014a9c:	fb00 1303 	mla	r3, r0, r3, r1
 8014aa0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014aa2:	6821      	ldr	r1, [r4, #0]
 8014aa4:	6854      	ldr	r4, [r2, #4]
 8014aa6:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8014aaa:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8014aae:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014ab2:	9308      	str	r3, [sp, #32]
 8014ab4:	6813      	ldr	r3, [r2, #0]
 8014ab6:	930a      	str	r3, [sp, #40]	; 0x28
 8014ab8:	eef0 9a60 	vmov.f32	s19, s1
 8014abc:	eeb0 9a41 	vmov.f32	s18, s2
 8014ac0:	eeb0 8a62 	vmov.f32	s16, s5
 8014ac4:	eef0 8a43 	vmov.f32	s17, s6
 8014ac8:	eeb0 ca44 	vmov.f32	s24, s8
 8014acc:	eef0 ba64 	vmov.f32	s23, s9
 8014ad0:	eeb0 ba45 	vmov.f32	s22, s10
 8014ad4:	3404      	adds	r4, #4
 8014ad6:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014ada:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014adc:	2b00      	cmp	r3, #0
 8014ade:	dc03      	bgt.n	8014ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014ae0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ae2:	2b00      	cmp	r3, #0
 8014ae4:	f340 81cb 	ble.w	8014e7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014ae8:	9b07      	ldr	r3, [sp, #28]
 8014aea:	2b00      	cmp	r3, #0
 8014aec:	f340 80dd 	ble.w	8014caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8014af0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014af2:	1412      	asrs	r2, r2, #16
 8014af4:	ea4f 432b 	mov.w	r3, fp, asr #16
 8014af8:	d42c      	bmi.n	8014b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8014afa:	1c51      	adds	r1, r2, #1
 8014afc:	428d      	cmp	r5, r1
 8014afe:	dd2c      	ble.n	8014b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014b00:	2b00      	cmp	r3, #0
 8014b02:	db2a      	blt.n	8014b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014b04:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014b06:	1c59      	adds	r1, r3, #1
 8014b08:	4288      	cmp	r0, r1
 8014b0a:	dd26      	ble.n	8014b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014b0c:	9b07      	ldr	r3, [sp, #28]
 8014b0e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014b10:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014b12:	3b01      	subs	r3, #1
 8014b14:	fb02 1203 	mla	r2, r2, r3, r1
 8014b18:	1412      	asrs	r2, r2, #16
 8014b1a:	d428      	bmi.n	8014b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014b1c:	3201      	adds	r2, #1
 8014b1e:	4295      	cmp	r5, r2
 8014b20:	dd25      	ble.n	8014b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014b22:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014b24:	fb02 b303 	mla	r3, r2, r3, fp
 8014b28:	141b      	asrs	r3, r3, #16
 8014b2a:	d420      	bmi.n	8014b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014b2c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014b2e:	3301      	adds	r3, #1
 8014b30:	429a      	cmp	r2, r3
 8014b32:	dd1c      	ble.n	8014b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014b34:	9b07      	ldr	r3, [sp, #28]
 8014b36:	930b      	str	r3, [sp, #44]	; 0x2c
 8014b38:	9b08      	ldr	r3, [sp, #32]
 8014b3a:	930d      	str	r3, [sp, #52]	; 0x34
 8014b3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014b3e:	2b00      	cmp	r3, #0
 8014b40:	f300 8116 	bgt.w	8014d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014b44:	9b07      	ldr	r3, [sp, #28]
 8014b46:	9a08      	ldr	r2, [sp, #32]
 8014b48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014b4c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014b50:	9308      	str	r3, [sp, #32]
 8014b52:	e0ac      	b.n	8014cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8014b54:	1c51      	adds	r1, r2, #1
 8014b56:	f040 809b 	bne.w	8014c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014b5a:	42aa      	cmp	r2, r5
 8014b5c:	f280 8098 	bge.w	8014c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014b60:	1c5a      	adds	r2, r3, #1
 8014b62:	f2c0 8095 	blt.w	8014c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014b66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014b68:	4293      	cmp	r3, r2
 8014b6a:	f280 8091 	bge.w	8014c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014b6e:	9b07      	ldr	r3, [sp, #28]
 8014b70:	930d      	str	r3, [sp, #52]	; 0x34
 8014b72:	9b08      	ldr	r3, [sp, #32]
 8014b74:	930b      	str	r3, [sp, #44]	; 0x2c
 8014b76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014b78:	2b00      	cmp	r3, #0
 8014b7a:	dde3      	ble.n	8014b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8014b7c:	9825      	ldr	r0, [sp, #148]	; 0x94
 8014b7e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014b80:	1400      	asrs	r0, r0, #16
 8014b82:	ea4f 422b 	mov.w	r2, fp, asr #16
 8014b86:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014b8a:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8014b8e:	f100 80d9 	bmi.w	8014d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8014b92:	1c46      	adds	r6, r0, #1
 8014b94:	42b5      	cmp	r5, r6
 8014b96:	f340 80d7 	ble.w	8014d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014b9a:	2a00      	cmp	r2, #0
 8014b9c:	f2c0 80d4 	blt.w	8014d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014ba0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014ba2:	1c56      	adds	r6, r2, #1
 8014ba4:	42b7      	cmp	r7, r6
 8014ba6:	f340 80cf 	ble.w	8014d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014baa:	fb02 0005 	mla	r0, r2, r5, r0
 8014bae:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014bb0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014bb2:	4402      	add	r2, r0
 8014bb4:	5c30      	ldrb	r0, [r6, r0]
 8014bb6:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8014bba:	eb04 0c08 	add.w	ip, r4, r8
 8014bbe:	2b00      	cmp	r3, #0
 8014bc0:	f000 80b2 	beq.w	8014d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014bc4:	7856      	ldrb	r6, [r2, #1]
 8014bc6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014bca:	4426      	add	r6, r4
 8014bcc:	2900      	cmp	r1, #0
 8014bce:	f000 80b3 	beq.w	8014d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8014bd2:	1950      	adds	r0, r2, r5
 8014bd4:	5d52      	ldrb	r2, [r2, r5]
 8014bd6:	7840      	ldrb	r0, [r0, #1]
 8014bd8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014bdc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014be0:	4422      	add	r2, r4
 8014be2:	4420      	add	r0, r4
 8014be4:	b29b      	uxth	r3, r3
 8014be6:	b289      	uxth	r1, r1
 8014be8:	fb03 f901 	mul.w	r9, r3, r1
 8014bec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014bf0:	011b      	lsls	r3, r3, #4
 8014bf2:	b289      	uxth	r1, r1
 8014bf4:	78b7      	ldrb	r7, [r6, #2]
 8014bf6:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014bfa:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014bfe:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014c02:	eba3 0309 	sub.w	r3, r3, r9
 8014c06:	b29b      	uxth	r3, r3
 8014c08:	ebae 0e01 	sub.w	lr, lr, r1
 8014c0c:	fa1f fe8e 	uxth.w	lr, lr
 8014c10:	435f      	muls	r7, r3
 8014c12:	fb0e 770a 	mla	r7, lr, sl, r7
 8014c16:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014c1a:	fb01 770a 	mla	r7, r1, sl, r7
 8014c1e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014c22:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014c26:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014c2a:	f896 8000 	ldrb.w	r8, [r6]
 8014c2e:	7876      	ldrb	r6, [r6, #1]
 8014c30:	fb03 f808 	mul.w	r8, r3, r8
 8014c34:	fb0e 8807 	mla	r8, lr, r7, r8
 8014c38:	7817      	ldrb	r7, [r2, #0]
 8014c3a:	fb01 8807 	mla	r8, r1, r7, r8
 8014c3e:	7807      	ldrb	r7, [r0, #0]
 8014c40:	fb09 8707 	mla	r7, r9, r7, r8
 8014c44:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014c48:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014c4c:	ea4a 0707 	orr.w	r7, sl, r7
 8014c50:	4373      	muls	r3, r6
 8014c52:	f892 a001 	ldrb.w	sl, [r2, #1]
 8014c56:	fb0e 330c 	mla	r3, lr, ip, r3
 8014c5a:	fb01 310a 	mla	r1, r1, sl, r3
 8014c5e:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014c62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c64:	fb09 1a0a 	mla	sl, r9, sl, r1
 8014c68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c6c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014c70:	ea47 070a 	orr.w	r7, r7, sl
 8014c74:	801f      	strh	r7, [r3, #0]
 8014c76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014c78:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014c7a:	3302      	adds	r3, #2
 8014c7c:	930b      	str	r3, [sp, #44]	; 0x2c
 8014c7e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014c80:	4413      	add	r3, r2
 8014c82:	9325      	str	r3, [sp, #148]	; 0x94
 8014c84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014c86:	449b      	add	fp, r3
 8014c88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c8a:	3b01      	subs	r3, #1
 8014c8c:	930d      	str	r3, [sp, #52]	; 0x34
 8014c8e:	e772      	b.n	8014b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014c90:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014c92:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014c94:	4413      	add	r3, r2
 8014c96:	9325      	str	r3, [sp, #148]	; 0x94
 8014c98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014c9a:	449b      	add	fp, r3
 8014c9c:	9b07      	ldr	r3, [sp, #28]
 8014c9e:	3b01      	subs	r3, #1
 8014ca0:	9307      	str	r3, [sp, #28]
 8014ca2:	9b08      	ldr	r3, [sp, #32]
 8014ca4:	3302      	adds	r3, #2
 8014ca6:	9308      	str	r3, [sp, #32]
 8014ca8:	e71e      	b.n	8014ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014caa:	f47f af2f 	bne.w	8014b0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8014cae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014cb0:	2b00      	cmp	r3, #0
 8014cb2:	f340 80e4 	ble.w	8014e7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014cb6:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014cba:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014cbe:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014cc2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014cc4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014cc8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014ccc:	eef0 6a48 	vmov.f32	s13, s16
 8014cd0:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014cd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cd8:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014cdc:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8014ce0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014ce4:	eef0 6a68 	vmov.f32	s13, s17
 8014ce8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014cec:	ee18 2a10 	vmov	r2, s16
 8014cf0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014cf4:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cf8:	ee18 2a90 	vmov	r2, s17
 8014cfc:	9327      	str	r3, [sp, #156]	; 0x9c
 8014cfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014d00:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d04:	9328      	str	r3, [sp, #160]	; 0xa0
 8014d06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014d08:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014d0a:	3b01      	subs	r3, #1
 8014d0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d10:	930c      	str	r3, [sp, #48]	; 0x30
 8014d12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014d14:	bf08      	it	eq
 8014d16:	4613      	moveq	r3, r2
 8014d18:	ee16 ba90 	vmov	fp, s13
 8014d1c:	9307      	str	r3, [sp, #28]
 8014d1e:	eef0 8a67 	vmov.f32	s17, s15
 8014d22:	eeb0 8a47 	vmov.f32	s16, s14
 8014d26:	e6d8      	b.n	8014ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8014d28:	b149      	cbz	r1, 8014d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 8014d2a:	5d52      	ldrb	r2, [r2, r5]
 8014d2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014d30:	4422      	add	r2, r4
 8014d32:	4660      	mov	r0, ip
 8014d34:	4666      	mov	r6, ip
 8014d36:	e755      	b.n	8014be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014d38:	4660      	mov	r0, ip
 8014d3a:	4662      	mov	r2, ip
 8014d3c:	e752      	b.n	8014be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014d3e:	4660      	mov	r0, ip
 8014d40:	4662      	mov	r2, ip
 8014d42:	e7f7      	b.n	8014d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8014d44:	1c47      	adds	r7, r0, #1
 8014d46:	d196      	bne.n	8014c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014d48:	4285      	cmp	r5, r0
 8014d4a:	dd94      	ble.n	8014c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014d4c:	1c56      	adds	r6, r2, #1
 8014d4e:	db92      	blt.n	8014c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014d50:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8014d52:	4296      	cmp	r6, r2
 8014d54:	dd8f      	ble.n	8014c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014d56:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8014d5a:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8014d5e:	e9cd 5600 	strd	r5, r6, [sp]
 8014d62:	4623      	mov	r3, r4
 8014d64:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8014d68:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014d6a:	f7ff fdcb 	bl	8014904 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8014d6e:	e782      	b.n	8014c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014d70:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014d72:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014d74:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014d76:	1412      	asrs	r2, r2, #16
 8014d78:	ea4f 402b 	mov.w	r0, fp, asr #16
 8014d7c:	fb05 2000 	mla	r0, r5, r0, r2
 8014d80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014d82:	f816 8000 	ldrb.w	r8, [r6, r0]
 8014d86:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014d8a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014d8e:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8014d92:	4402      	add	r2, r0
 8014d94:	eb04 0c08 	add.w	ip, r4, r8
 8014d98:	2b00      	cmp	r3, #0
 8014d9a:	d062      	beq.n	8014e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8014d9c:	7856      	ldrb	r6, [r2, #1]
 8014d9e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014da2:	4426      	add	r6, r4
 8014da4:	2900      	cmp	r1, #0
 8014da6:	d064      	beq.n	8014e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8014da8:	1950      	adds	r0, r2, r5
 8014daa:	5d52      	ldrb	r2, [r2, r5]
 8014dac:	7840      	ldrb	r0, [r0, #1]
 8014dae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014db2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014db6:	4422      	add	r2, r4
 8014db8:	4420      	add	r0, r4
 8014dba:	b29b      	uxth	r3, r3
 8014dbc:	b289      	uxth	r1, r1
 8014dbe:	fb03 f901 	mul.w	r9, r3, r1
 8014dc2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014dc6:	011b      	lsls	r3, r3, #4
 8014dc8:	b289      	uxth	r1, r1
 8014dca:	78b7      	ldrb	r7, [r6, #2]
 8014dcc:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014dd0:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014dd4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014dd8:	eba3 0309 	sub.w	r3, r3, r9
 8014ddc:	b29b      	uxth	r3, r3
 8014dde:	ebae 0e01 	sub.w	lr, lr, r1
 8014de2:	fa1f fe8e 	uxth.w	lr, lr
 8014de6:	435f      	muls	r7, r3
 8014de8:	fb0e 770a 	mla	r7, lr, sl, r7
 8014dec:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014df0:	fb01 770a 	mla	r7, r1, sl, r7
 8014df4:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014df8:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014dfc:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014e00:	f896 8000 	ldrb.w	r8, [r6]
 8014e04:	7876      	ldrb	r6, [r6, #1]
 8014e06:	fb03 f808 	mul.w	r8, r3, r8
 8014e0a:	fb0e 8807 	mla	r8, lr, r7, r8
 8014e0e:	7817      	ldrb	r7, [r2, #0]
 8014e10:	fb01 8807 	mla	r8, r1, r7, r8
 8014e14:	7807      	ldrb	r7, [r0, #0]
 8014e16:	fb09 8707 	mla	r7, r9, r7, r8
 8014e1a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014e1e:	4373      	muls	r3, r6
 8014e20:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014e24:	7856      	ldrb	r6, [r2, #1]
 8014e26:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014e28:	ea4a 0707 	orr.w	r7, sl, r7
 8014e2c:	fb0e 330c 	mla	r3, lr, ip, r3
 8014e30:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014e34:	fb01 3306 	mla	r3, r1, r6, r3
 8014e38:	fb09 3a0a 	mla	sl, r9, sl, r3
 8014e3c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014e40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014e46:	ea47 070a 	orr.w	r7, r7, sl
 8014e4a:	f823 7b02 	strh.w	r7, [r3], #2
 8014e4e:	930d      	str	r3, [sp, #52]	; 0x34
 8014e50:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014e52:	4413      	add	r3, r2
 8014e54:	9325      	str	r3, [sp, #148]	; 0x94
 8014e56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014e58:	449b      	add	fp, r3
 8014e5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014e5c:	3b01      	subs	r3, #1
 8014e5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014e60:	e66c      	b.n	8014b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8014e62:	b149      	cbz	r1, 8014e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 8014e64:	5d52      	ldrb	r2, [r2, r5]
 8014e66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014e6a:	4422      	add	r2, r4
 8014e6c:	4660      	mov	r0, ip
 8014e6e:	4666      	mov	r6, ip
 8014e70:	e7a3      	b.n	8014dba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8014e72:	4660      	mov	r0, ip
 8014e74:	4662      	mov	r2, ip
 8014e76:	e7a0      	b.n	8014dba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8014e78:	4660      	mov	r0, ip
 8014e7a:	4662      	mov	r2, ip
 8014e7c:	e7f7      	b.n	8014e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8014e7e:	b011      	add	sp, #68	; 0x44
 8014e80:	ecbd 8b0a 	vpop	{d8-d12}
 8014e84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8014e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e8c:	8808      	ldrh	r0, [r1, #0]
 8014e8e:	b085      	sub	sp, #20
 8014e90:	1206      	asrs	r6, r0, #8
 8014e92:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8014e96:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014e9a:	9600      	str	r6, [sp, #0]
 8014e9c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014ea0:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8014ea4:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8014ea8:	10c6      	asrs	r6, r0, #3
 8014eaa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014eae:	9601      	str	r6, [sp, #4]
 8014eb0:	00c0      	lsls	r0, r0, #3
 8014eb2:	fb04 560c 	mla	r6, r4, ip, r5
 8014eb6:	b2c0      	uxtb	r0, r0
 8014eb8:	4692      	mov	sl, r2
 8014eba:	eb02 0e06 	add.w	lr, r2, r6
 8014ebe:	9a00      	ldr	r2, [sp, #0]
 8014ec0:	9002      	str	r0, [sp, #8]
 8014ec2:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8014ec6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8014eca:	9a01      	ldr	r2, [sp, #4]
 8014ecc:	2c00      	cmp	r4, #0
 8014ece:	4698      	mov	r8, r3
 8014ed0:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8014ed4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8014ed8:	db3e      	blt.n	8014f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014eda:	45a1      	cmp	r9, r4
 8014edc:	dd3c      	ble.n	8014f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014ede:	2d00      	cmp	r5, #0
 8014ee0:	db38      	blt.n	8014f54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8014ee2:	45ac      	cmp	ip, r5
 8014ee4:	dd36      	ble.n	8014f54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8014ee6:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8014eea:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8014eee:	1c6e      	adds	r6, r5, #1
 8014ef0:	d435      	bmi.n	8014f5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8014ef2:	45b4      	cmp	ip, r6
 8014ef4:	dd33      	ble.n	8014f5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8014ef6:	b393      	cbz	r3, 8014f5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8014ef8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014efc:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8014f00:	3401      	adds	r4, #1
 8014f02:	d430      	bmi.n	8014f66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8014f04:	45a1      	cmp	r9, r4
 8014f06:	dd2e      	ble.n	8014f66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8014f08:	b36f      	cbz	r7, 8014f66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8014f0a:	2d00      	cmp	r5, #0
 8014f0c:	db29      	blt.n	8014f62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8014f0e:	45ac      	cmp	ip, r5
 8014f10:	dd27      	ble.n	8014f62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8014f12:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8014f16:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8014f1a:	3501      	adds	r5, #1
 8014f1c:	d407      	bmi.n	8014f2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014f1e:	45ac      	cmp	ip, r5
 8014f20:	dd05      	ble.n	8014f2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014f22:	b123      	cbz	r3, 8014f2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014f24:	44f4      	add	ip, lr
 8014f26:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8014f2a:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8014f2e:	2b0f      	cmp	r3, #15
 8014f30:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014f34:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014f38:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014f3c:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8014f40:	d801      	bhi.n	8014f46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8014f42:	2f0f      	cmp	r7, #15
 8014f44:	d911      	bls.n	8014f6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 8014f46:	4b7f      	ldr	r3, [pc, #508]	; (8015144 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8014f48:	4a7f      	ldr	r2, [pc, #508]	; (8015148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8014f4a:	4880      	ldr	r0, [pc, #512]	; (801514c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8014f4c:	f240 210d 	movw	r1, #525	; 0x20d
 8014f50:	f005 fc4a 	bl	801a7e8 <__assert_func>
 8014f54:	4602      	mov	r2, r0
 8014f56:	e7ca      	b.n	8014eee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8014f58:	4606      	mov	r6, r0
 8014f5a:	4602      	mov	r2, r0
 8014f5c:	e7d0      	b.n	8014f00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8014f5e:	4606      	mov	r6, r0
 8014f60:	e7ce      	b.n	8014f00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8014f62:	4604      	mov	r4, r0
 8014f64:	e7d9      	b.n	8014f1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 8014f66:	4604      	mov	r4, r0
 8014f68:	e7e1      	b.n	8014f2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014f6a:	b29b      	uxth	r3, r3
 8014f6c:	b2bf      	uxth	r7, r7
 8014f6e:	fb03 fe07 	mul.w	lr, r3, r7
 8014f72:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8014f76:	011b      	lsls	r3, r3, #4
 8014f78:	eba3 0c0e 	sub.w	ip, r3, lr
 8014f7c:	b2bf      	uxth	r7, r7
 8014f7e:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8014f82:	fa1f fc8c 	uxth.w	ip, ip
 8014f86:	1bed      	subs	r5, r5, r7
 8014f88:	b2ad      	uxth	r5, r5
 8014f8a:	fb0c f30a 	mul.w	r3, ip, sl
 8014f8e:	fb05 330b 	mla	r3, r5, fp, r3
 8014f92:	fb07 3309 	mla	r3, r7, r9, r3
 8014f96:	fb0e 3308 	mla	r3, lr, r8, r3
 8014f9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014f9e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014fa2:	9303      	str	r3, [sp, #12]
 8014fa4:	d018      	beq.n	8014fd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 8014fa6:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8014faa:	fb0b f303 	mul.w	r3, fp, r3
 8014fae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014fb2:	fb0b fb02 	mul.w	fp, fp, r2
 8014fb6:	0a1a      	lsrs	r2, r3, #8
 8014fb8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014fbc:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8014fc0:	441a      	add	r2, r3
 8014fc2:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8014fc6:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8014fca:	0a12      	lsrs	r2, r2, #8
 8014fcc:	0a1b      	lsrs	r3, r3, #8
 8014fce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014fd2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014fd6:	431a      	orrs	r2, r3
 8014fd8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014fdc:	d019      	beq.n	8015012 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8014fde:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8014fe2:	fb0a fb0b 	mul.w	fp, sl, fp
 8014fe6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014fea:	fb0a fa06 	mul.w	sl, sl, r6
 8014fee:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8014ff2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014ff6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014ffa:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8014ffe:	445e      	add	r6, fp
 8015000:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015004:	0a36      	lsrs	r6, r6, #8
 8015006:	0a1b      	lsrs	r3, r3, #8
 8015008:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801500c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015010:	431e      	orrs	r6, r3
 8015012:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015016:	d019      	beq.n	801504c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8015018:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801501c:	fb09 fa0a 	mul.w	sl, r9, sl
 8015020:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015024:	fb09 f904 	mul.w	r9, r9, r4
 8015028:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801502c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015030:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015034:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015038:	4454      	add	r4, sl
 801503a:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801503e:	0a24      	lsrs	r4, r4, #8
 8015040:	0a1b      	lsrs	r3, r3, #8
 8015042:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015046:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801504a:	431c      	orrs	r4, r3
 801504c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015050:	d019      	beq.n	8015086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8015052:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8015056:	fb08 f909 	mul.w	r9, r8, r9
 801505a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801505e:	fb08 f800 	mul.w	r8, r8, r0
 8015062:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8015066:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801506a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801506e:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015072:	4448      	add	r0, r9
 8015074:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015078:	0a00      	lsrs	r0, r0, #8
 801507a:	0a1b      	lsrs	r3, r3, #8
 801507c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015080:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015084:	4318      	orrs	r0, r3
 8015086:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801508a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801508e:	fb0c f808 	mul.w	r8, ip, r8
 8015092:	fb05 8803 	mla	r8, r5, r3, r8
 8015096:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801509a:	fb07 8803 	mla	r8, r7, r3, r8
 801509e:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80150a2:	fb0e 8303 	mla	r3, lr, r3, r8
 80150a6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80150aa:	fb0c f606 	mul.w	r6, ip, r6
 80150ae:	0a1b      	lsrs	r3, r3, #8
 80150b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80150b4:	fb05 6202 	mla	r2, r5, r2, r6
 80150b8:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80150bc:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 80150c0:	fb07 2703 	mla	r7, r7, r3, r2
 80150c4:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80150c8:	b295      	uxth	r5, r2
 80150ca:	9a03      	ldr	r2, [sp, #12]
 80150cc:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80150d0:	436a      	muls	r2, r5
 80150d2:	fb0e 7303 	mla	r3, lr, r3, r7
 80150d6:	1c50      	adds	r0, r2, #1
 80150d8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80150dc:	0a1b      	lsrs	r3, r3, #8
 80150de:	9a00      	ldr	r2, [sp, #0]
 80150e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80150e4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80150e8:	ea48 0303 	orr.w	r3, r8, r3
 80150ec:	b2c0      	uxtb	r0, r0
 80150ee:	fb12 f200 	smulbb	r2, r2, r0
 80150f2:	0c1e      	lsrs	r6, r3, #16
 80150f4:	fb06 2605 	mla	r6, r6, r5, r2
 80150f8:	9a01      	ldr	r2, [sp, #4]
 80150fa:	f3c3 2407 	ubfx	r4, r3, #8, #8
 80150fe:	fb12 f200 	smulbb	r2, r2, r0
 8015102:	fb04 2205 	mla	r2, r4, r5, r2
 8015106:	b294      	uxth	r4, r2
 8015108:	9a02      	ldr	r2, [sp, #8]
 801510a:	b2db      	uxtb	r3, r3
 801510c:	fb12 f200 	smulbb	r2, r2, r0
 8015110:	fb03 2205 	mla	r2, r3, r5, r2
 8015114:	b2b6      	uxth	r6, r6
 8015116:	b292      	uxth	r2, r2
 8015118:	1c73      	adds	r3, r6, #1
 801511a:	1c50      	adds	r0, r2, #1
 801511c:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8015120:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8015124:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015128:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801512c:	4313      	orrs	r3, r2
 801512e:	1c62      	adds	r2, r4, #1
 8015130:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015134:	0952      	lsrs	r2, r2, #5
 8015136:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801513a:	4313      	orrs	r3, r2
 801513c:	800b      	strh	r3, [r1, #0]
 801513e:	b005      	add	sp, #20
 8015140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015144:	0801eb1d 	.word	0x0801eb1d
 8015148:	0801f075 	.word	0x0801f075
 801514c:	0801eba5 	.word	0x0801eba5

08015150 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015154:	ed2d 8b08 	vpush	{d8-d11}
 8015158:	b09b      	sub	sp, #108	; 0x6c
 801515a:	eeb0 aa40 	vmov.f32	s20, s0
 801515e:	9309      	str	r3, [sp, #36]	; 0x24
 8015160:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8015164:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8015166:	9311      	str	r3, [sp, #68]	; 0x44
 8015168:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801516c:	9114      	str	r1, [sp, #80]	; 0x50
 801516e:	9317      	str	r3, [sp, #92]	; 0x5c
 8015170:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8015174:	9019      	str	r0, [sp, #100]	; 0x64
 8015176:	6868      	ldr	r0, [r5, #4]
 8015178:	9218      	str	r2, [sp, #96]	; 0x60
 801517a:	fb00 1303 	mla	r3, r0, r3, r1
 801517e:	6829      	ldr	r1, [r5, #0]
 8015180:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8015182:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8015186:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801518a:	930c      	str	r3, [sp, #48]	; 0x30
 801518c:	6813      	ldr	r3, [r2, #0]
 801518e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015190:	6853      	ldr	r3, [r2, #4]
 8015192:	3304      	adds	r3, #4
 8015194:	eef0 9a60 	vmov.f32	s19, s1
 8015198:	eeb0 9a41 	vmov.f32	s18, s2
 801519c:	eeb0 8a62 	vmov.f32	s16, s5
 80151a0:	eef0 8a43 	vmov.f32	s17, s6
 80151a4:	eef0 ba44 	vmov.f32	s23, s8
 80151a8:	eeb0 ba64 	vmov.f32	s22, s9
 80151ac:	eef0 aa45 	vmov.f32	s21, s10
 80151b0:	9308      	str	r3, [sp, #32]
 80151b2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80151b4:	2b00      	cmp	r3, #0
 80151b6:	dc03      	bgt.n	80151c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80151b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80151ba:	2b00      	cmp	r3, #0
 80151bc:	f340 8363 	ble.w	8015886 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80151c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151c2:	2b00      	cmp	r3, #0
 80151c4:	f340 81ad 	ble.w	8015522 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 80151c8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80151ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80151cc:	1412      	asrs	r2, r2, #16
 80151ce:	ea4f 4323 	mov.w	r3, r3, asr #16
 80151d2:	d42f      	bmi.n	8015234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80151d4:	1c51      	adds	r1, r2, #1
 80151d6:	428c      	cmp	r4, r1
 80151d8:	dd2f      	ble.n	801523a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80151da:	2b00      	cmp	r3, #0
 80151dc:	db2d      	blt.n	801523a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80151de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80151e0:	1c59      	adds	r1, r3, #1
 80151e2:	4288      	cmp	r0, r1
 80151e4:	dd29      	ble.n	801523a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80151e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151e8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80151ea:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80151ec:	3b01      	subs	r3, #1
 80151ee:	fb02 1203 	mla	r2, r2, r3, r1
 80151f2:	1412      	asrs	r2, r2, #16
 80151f4:	d42b      	bmi.n	801524e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80151f6:	3201      	adds	r2, #1
 80151f8:	4294      	cmp	r4, r2
 80151fa:	dd28      	ble.n	801524e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80151fc:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80151fe:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015200:	fb02 1303 	mla	r3, r2, r3, r1
 8015204:	141b      	asrs	r3, r3, #16
 8015206:	d422      	bmi.n	801524e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015208:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801520a:	3301      	adds	r3, #1
 801520c:	429a      	cmp	r2, r3
 801520e:	dd1e      	ble.n	801524e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015210:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015212:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8015216:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 801521a:	9312      	str	r3, [sp, #72]	; 0x48
 801521c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801521e:	2b00      	cmp	r3, #0
 8015220:	f300 81ea 	bgt.w	80155f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8015224:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015226:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015228:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801522c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015230:	930c      	str	r3, [sp, #48]	; 0x30
 8015232:	e178      	b.n	8015526 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8015234:	1c51      	adds	r1, r2, #1
 8015236:	f040 8165 	bne.w	8015504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801523a:	42a2      	cmp	r2, r4
 801523c:	f280 8162 	bge.w	8015504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015240:	1c5f      	adds	r7, r3, #1
 8015242:	f2c0 815f 	blt.w	8015504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015246:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015248:	4293      	cmp	r3, r2
 801524a:	f280 815b 	bge.w	8015504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801524e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015250:	9316      	str	r3, [sp, #88]	; 0x58
 8015252:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015254:	9312      	str	r3, [sp, #72]	; 0x48
 8015256:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 801525a:	9315      	str	r3, [sp, #84]	; 0x54
 801525c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801525e:	2b00      	cmp	r3, #0
 8015260:	dde0      	ble.n	8015224 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015262:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015264:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015266:	f3c2 3003 	ubfx	r0, r2, #12, #4
 801526a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801526c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015270:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015272:	1412      	asrs	r2, r2, #16
 8015274:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015278:	f100 81a5 	bmi.w	80155c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 801527c:	1c55      	adds	r5, r2, #1
 801527e:	42ac      	cmp	r4, r5
 8015280:	f340 81a3 	ble.w	80155ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015284:	2b00      	cmp	r3, #0
 8015286:	f2c0 81a0 	blt.w	80155ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801528a:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801528c:	1c5d      	adds	r5, r3, #1
 801528e:	42af      	cmp	r7, r5
 8015290:	f340 819b 	ble.w	80155ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015294:	fb03 2304 	mla	r3, r3, r4, r2
 8015298:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801529a:	18d5      	adds	r5, r2, r3
 801529c:	5cd3      	ldrb	r3, [r2, r3]
 801529e:	9a08      	ldr	r2, [sp, #32]
 80152a0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80152a4:	0e1f      	lsrs	r7, r3, #24
 80152a6:	2800      	cmp	r0, #0
 80152a8:	f000 817c 	beq.w	80155a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 80152ac:	786a      	ldrb	r2, [r5, #1]
 80152ae:	9e08      	ldr	r6, [sp, #32]
 80152b0:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 80152b4:	920d      	str	r2, [sp, #52]	; 0x34
 80152b6:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80152ba:	2900      	cmp	r1, #0
 80152bc:	f000 817d 	beq.w	80155ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 80152c0:	192a      	adds	r2, r5, r4
 80152c2:	5d2d      	ldrb	r5, [r5, r4]
 80152c4:	7852      	ldrb	r2, [r2, #1]
 80152c6:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 80152ca:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 80152ce:	950a      	str	r5, [sp, #40]	; 0x28
 80152d0:	ea4f 6915 	mov.w	r9, r5, lsr #24
 80152d4:	920e      	str	r2, [sp, #56]	; 0x38
 80152d6:	0e15      	lsrs	r5, r2, #24
 80152d8:	b280      	uxth	r0, r0
 80152da:	b289      	uxth	r1, r1
 80152dc:	fb00 fa01 	mul.w	sl, r0, r1
 80152e0:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 80152e4:	0100      	lsls	r0, r0, #4
 80152e6:	eba0 080a 	sub.w	r8, r0, sl
 80152ea:	b289      	uxth	r1, r1
 80152ec:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 80152f0:	fa1f f888 	uxth.w	r8, r8
 80152f4:	1a52      	subs	r2, r2, r1
 80152f6:	b292      	uxth	r2, r2
 80152f8:	fb08 f00e 	mul.w	r0, r8, lr
 80152fc:	fb02 0007 	mla	r0, r2, r7, r0
 8015300:	fb01 0009 	mla	r0, r1, r9, r0
 8015304:	fb0a 0005 	mla	r0, sl, r5, r0
 8015308:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801530c:	2800      	cmp	r0, #0
 801530e:	f000 80ea 	beq.w	80154e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015312:	2fff      	cmp	r7, #255	; 0xff
 8015314:	d01a      	beq.n	801534c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 8015316:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801531a:	fb07 fc0c 	mul.w	ip, r7, ip
 801531e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015322:	435f      	muls	r7, r3
 8015324:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8015328:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801532c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015330:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8015334:	4463      	add	r3, ip
 8015336:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 801533a:	0a1b      	lsrs	r3, r3, #8
 801533c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015340:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015344:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8015348:	ea43 030b 	orr.w	r3, r3, fp
 801534c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015350:	d01e      	beq.n	8015390 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8015352:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8015354:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015358:	fb0e fb0b 	mul.w	fp, lr, fp
 801535c:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015360:	fb0e fe07 	mul.w	lr, lr, r7
 8015364:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8015368:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801536c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015370:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8015374:	44dc      	add	ip, fp
 8015376:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801537a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801537e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015382:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015386:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801538a:	ea4c 060e 	orr.w	r6, ip, lr
 801538e:	960d      	str	r6, [sp, #52]	; 0x34
 8015390:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015394:	d01e      	beq.n	80153d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8015396:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015398:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 801539c:	fb09 fe0e 	mul.w	lr, r9, lr
 80153a0:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80153a4:	fb09 f907 	mul.w	r9, r9, r7
 80153a8:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80153ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80153b0:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80153b4:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80153b8:	44f4      	add	ip, lr
 80153ba:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80153be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80153c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80153c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80153ca:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80153ce:	ea4c 0609 	orr.w	r6, ip, r9
 80153d2:	960a      	str	r6, [sp, #40]	; 0x28
 80153d4:	2dff      	cmp	r5, #255	; 0xff
 80153d6:	d01c      	beq.n	8015412 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 80153d8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80153da:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 80153de:	fb05 fe0e 	mul.w	lr, r5, lr
 80153e2:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80153e6:	437d      	muls	r5, r7
 80153e8:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80153ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80153f0:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80153f4:	f505 7780 	add.w	r7, r5, #256	; 0x100
 80153f8:	44f4      	add	ip, lr
 80153fa:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 80153fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015402:	0a2d      	lsrs	r5, r5, #8
 8015404:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015408:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801540c:	ea4c 0505 	orr.w	r5, ip, r5
 8015410:	950e      	str	r5, [sp, #56]	; 0x38
 8015412:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015414:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015416:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801541a:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801541e:	fb08 f505 	mul.w	r5, r8, r5
 8015422:	fb02 5507 	mla	r5, r2, r7, r5
 8015426:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 801542a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801542c:	fb01 5507 	mla	r5, r1, r7, r5
 8015430:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8015434:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8015436:	fb0a 5507 	mla	r5, sl, r7, r5
 801543a:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801543e:	fb08 f807 	mul.w	r8, r8, r7
 8015442:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015446:	fb02 8303 	mla	r3, r2, r3, r8
 801544a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801544c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801544e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015452:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015454:	fb01 330c 	mla	r3, r1, ip, r3
 8015458:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801545c:	fb0a 3a01 	mla	sl, sl, r1, r3
 8015460:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015462:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8015464:	881f      	ldrh	r7, [r3, #0]
 8015466:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015468:	0a2d      	lsrs	r5, r5, #8
 801546a:	4343      	muls	r3, r0
 801546c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015470:	1c58      	adds	r0, r3, #1
 8015472:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015476:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801547a:	ea45 050a 	orr.w	r5, r5, sl
 801547e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8015482:	0c29      	lsrs	r1, r5, #16
 8015484:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015488:	123b      	asrs	r3, r7, #8
 801548a:	b2c0      	uxtb	r0, r0
 801548c:	fb11 f102 	smulbb	r1, r1, r2
 8015490:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015494:	fb03 1300 	mla	r3, r3, r0, r1
 8015498:	b299      	uxth	r1, r3
 801549a:	10fa      	asrs	r2, r7, #3
 801549c:	f3c5 2307 	ubfx	r3, r5, #8, #8
 80154a0:	fb13 f306 	smulbb	r3, r3, r6
 80154a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80154a8:	fb02 3200 	mla	r2, r2, r0, r3
 80154ac:	b2ed      	uxtb	r5, r5
 80154ae:	00fb      	lsls	r3, r7, #3
 80154b0:	b2db      	uxtb	r3, r3
 80154b2:	fb15 f506 	smulbb	r5, r5, r6
 80154b6:	fb03 5500 	mla	r5, r3, r0, r5
 80154ba:	b292      	uxth	r2, r2
 80154bc:	b2ad      	uxth	r5, r5
 80154be:	1c4b      	adds	r3, r1, #1
 80154c0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80154c4:	1c68      	adds	r0, r5, #1
 80154c6:	1c51      	adds	r1, r2, #1
 80154c8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80154cc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80154d0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80154d4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80154d8:	0952      	lsrs	r2, r2, #5
 80154da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80154de:	432b      	orrs	r3, r5
 80154e0:	4313      	orrs	r3, r2
 80154e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80154e4:	8013      	strh	r3, [r2, #0]
 80154e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80154e8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80154ea:	3302      	adds	r3, #2
 80154ec:	9312      	str	r3, [sp, #72]	; 0x48
 80154ee:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80154f0:	4413      	add	r3, r2
 80154f2:	932d      	str	r3, [sp, #180]	; 0xb4
 80154f4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80154f6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80154f8:	4413      	add	r3, r2
 80154fa:	932e      	str	r3, [sp, #184]	; 0xb8
 80154fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80154fe:	3b01      	subs	r3, #1
 8015500:	9316      	str	r3, [sp, #88]	; 0x58
 8015502:	e6ab      	b.n	801525c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8015504:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015506:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015508:	4413      	add	r3, r2
 801550a:	932d      	str	r3, [sp, #180]	; 0xb4
 801550c:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801550e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015510:	4413      	add	r3, r2
 8015512:	932e      	str	r3, [sp, #184]	; 0xb8
 8015514:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015516:	3b01      	subs	r3, #1
 8015518:	9309      	str	r3, [sp, #36]	; 0x24
 801551a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801551c:	3302      	adds	r3, #2
 801551e:	930c      	str	r3, [sp, #48]	; 0x30
 8015520:	e64e      	b.n	80151c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015522:	f47f ae60 	bne.w	80151e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8015526:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015528:	2b00      	cmp	r3, #0
 801552a:	f340 81ac 	ble.w	8015886 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 801552e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015532:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015536:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801553a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801553c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015540:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015544:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015548:	eef0 6a48 	vmov.f32	s13, s16
 801554c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015550:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015554:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015558:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801555c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015560:	eef0 6a68 	vmov.f32	s13, s17
 8015564:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015568:	ee18 2a10 	vmov	r2, s16
 801556c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015570:	fb92 f3f3 	sdiv	r3, r2, r3
 8015574:	ee18 2a90 	vmov	r2, s17
 8015578:	932f      	str	r3, [sp, #188]	; 0xbc
 801557a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801557c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015580:	9330      	str	r3, [sp, #192]	; 0xc0
 8015582:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015584:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015586:	3b01      	subs	r3, #1
 8015588:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801558c:	9314      	str	r3, [sp, #80]	; 0x50
 801558e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015590:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8015594:	bf08      	it	eq
 8015596:	4613      	moveq	r3, r2
 8015598:	9309      	str	r3, [sp, #36]	; 0x24
 801559a:	eef0 8a67 	vmov.f32	s17, s15
 801559e:	eeb0 8a47 	vmov.f32	s16, s14
 80155a2:	e606      	b.n	80151b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80155a4:	b161      	cbz	r1, 80155c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80155a6:	5d2a      	ldrb	r2, [r5, r4]
 80155a8:	9d08      	ldr	r5, [sp, #32]
 80155aa:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80155ae:	920a      	str	r2, [sp, #40]	; 0x28
 80155b0:	ea4f 6912 	mov.w	r9, r2, lsr #24
 80155b4:	25ff      	movs	r5, #255	; 0xff
 80155b6:	46ae      	mov	lr, r5
 80155b8:	e68e      	b.n	80152d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80155ba:	25ff      	movs	r5, #255	; 0xff
 80155bc:	46a9      	mov	r9, r5
 80155be:	e68b      	b.n	80152d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80155c0:	25ff      	movs	r5, #255	; 0xff
 80155c2:	46a9      	mov	r9, r5
 80155c4:	e7f7      	b.n	80155b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80155c6:	1c56      	adds	r6, r2, #1
 80155c8:	d18d      	bne.n	80154e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80155ca:	4294      	cmp	r4, r2
 80155cc:	dd8b      	ble.n	80154e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80155ce:	1c5d      	adds	r5, r3, #1
 80155d0:	db89      	blt.n	80154e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80155d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80155d4:	429d      	cmp	r5, r3
 80155d6:	dd86      	ble.n	80154e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80155d8:	e9cd 3003 	strd	r3, r0, [sp, #12]
 80155dc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80155de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80155e0:	9202      	str	r2, [sp, #8]
 80155e2:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80155e6:	e9cd 4300 	strd	r4, r3, [sp]
 80155ea:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 80155ee:	9b08      	ldr	r3, [sp, #32]
 80155f0:	9819      	ldr	r0, [sp, #100]	; 0x64
 80155f2:	f7ff fc49 	bl	8014e88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80155f6:	e776      	b.n	80154e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80155f8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80155fa:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80155fc:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8015600:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015602:	1412      	asrs	r2, r2, #16
 8015604:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015608:	141b      	asrs	r3, r3, #16
 801560a:	fb04 2303 	mla	r3, r4, r3, r2
 801560e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015610:	18d5      	adds	r5, r2, r3
 8015612:	5cd3      	ldrb	r3, [r2, r3]
 8015614:	9a08      	ldr	r2, [sp, #32]
 8015616:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801561a:	0e1e      	lsrs	r6, r3, #24
 801561c:	2900      	cmp	r1, #0
 801561e:	f000 8121 	beq.w	8015864 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8015622:	786a      	ldrb	r2, [r5, #1]
 8015624:	9f08      	ldr	r7, [sp, #32]
 8015626:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801562a:	920f      	str	r2, [sp, #60]	; 0x3c
 801562c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8015630:	2800      	cmp	r0, #0
 8015632:	f000 8122 	beq.w	801587a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 8015636:	192a      	adds	r2, r5, r4
 8015638:	5d2d      	ldrb	r5, [r5, r4]
 801563a:	7852      	ldrb	r2, [r2, #1]
 801563c:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8015640:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8015644:	950b      	str	r5, [sp, #44]	; 0x2c
 8015646:	ea4f 6815 	mov.w	r8, r5, lsr #24
 801564a:	9210      	str	r2, [sp, #64]	; 0x40
 801564c:	0e15      	lsrs	r5, r2, #24
 801564e:	b289      	uxth	r1, r1
 8015650:	b280      	uxth	r0, r0
 8015652:	fb01 f900 	mul.w	r9, r1, r0
 8015656:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801565a:	0109      	lsls	r1, r1, #4
 801565c:	eba1 0e09 	sub.w	lr, r1, r9
 8015660:	b280      	uxth	r0, r0
 8015662:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8015666:	fa1f fe8e 	uxth.w	lr, lr
 801566a:	1a12      	subs	r2, r2, r0
 801566c:	b292      	uxth	r2, r2
 801566e:	fb0e f10c 	mul.w	r1, lr, ip
 8015672:	fb02 1106 	mla	r1, r2, r6, r1
 8015676:	fb00 1108 	mla	r1, r0, r8, r1
 801567a:	fb09 1105 	mla	r1, r9, r5, r1
 801567e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015682:	2900      	cmp	r1, #0
 8015684:	f000 80e0 	beq.w	8015848 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8015688:	2eff      	cmp	r6, #255	; 0xff
 801568a:	d016      	beq.n	80156ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 801568c:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8015690:	4377      	muls	r7, r6
 8015692:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015696:	435e      	muls	r6, r3
 8015698:	0a3b      	lsrs	r3, r7, #8
 801569a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801569e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80156a2:	443b      	add	r3, r7
 80156a4:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80156a8:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80156ac:	0a1b      	lsrs	r3, r3, #8
 80156ae:	0a3f      	lsrs	r7, r7, #8
 80156b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80156b4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80156b8:	433b      	orrs	r3, r7
 80156ba:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80156be:	d01d      	beq.n	80156fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 80156c0:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80156c2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80156c4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80156c8:	fb0c f606 	mul.w	r6, ip, r6
 80156cc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80156d0:	fb0c fc07 	mul.w	ip, ip, r7
 80156d4:	0a37      	lsrs	r7, r6, #8
 80156d6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80156da:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 80156de:	4437      	add	r7, r6
 80156e0:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 80156e4:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80156e8:	0a3f      	lsrs	r7, r7, #8
 80156ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80156ee:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80156f2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80156f6:	ea47 060c 	orr.w	r6, r7, ip
 80156fa:	960f      	str	r6, [sp, #60]	; 0x3c
 80156fc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015700:	d01d      	beq.n	801573e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 8015702:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015704:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015708:	fb08 fc0c 	mul.w	ip, r8, ip
 801570c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015710:	fb08 f806 	mul.w	r8, r8, r6
 8015714:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8015718:	f508 7680 	add.w	r6, r8, #256	; 0x100
 801571c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015720:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015724:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8015728:	4467      	add	r7, ip
 801572a:	0a3f      	lsrs	r7, r7, #8
 801572c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015730:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015734:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8015738:	ea47 0608 	orr.w	r6, r7, r8
 801573c:	960b      	str	r6, [sp, #44]	; 0x2c
 801573e:	2dff      	cmp	r5, #255	; 0xff
 8015740:	d01a      	beq.n	8015778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 8015742:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015744:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015748:	fb05 fc0c 	mul.w	ip, r5, ip
 801574c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015750:	4375      	muls	r5, r6
 8015752:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8015756:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801575a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801575e:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8015762:	4467      	add	r7, ip
 8015764:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8015768:	0a3f      	lsrs	r7, r7, #8
 801576a:	0a2d      	lsrs	r5, r5, #8
 801576c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015770:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8015774:	433d      	orrs	r5, r7
 8015776:	9510      	str	r5, [sp, #64]	; 0x40
 8015778:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801577a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801577e:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8015782:	fb0e f505 	mul.w	r5, lr, r5
 8015786:	fb02 5506 	mla	r5, r2, r6, r5
 801578a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801578c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015790:	fb00 5506 	mla	r5, r0, r6, r5
 8015794:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015796:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801579a:	fb09 5506 	mla	r5, r9, r6, r5
 801579e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80157a0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80157a4:	fb0e fe06 	mul.w	lr, lr, r6
 80157a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80157ac:	fb02 e303 	mla	r3, r2, r3, lr
 80157b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80157b2:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80157b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80157b8:	fb00 3307 	mla	r3, r0, r7, r3
 80157bc:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80157c0:	fb09 3c0c 	mla	ip, r9, ip, r3
 80157c4:	fb01 f10b 	mul.w	r1, r1, fp
 80157c8:	0a2d      	lsrs	r5, r5, #8
 80157ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80157ce:	f8ba 0000 	ldrh.w	r0, [sl]
 80157d2:	1c4b      	adds	r3, r1, #1
 80157d4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80157d8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80157dc:	ea45 050c 	orr.w	r5, r5, ip
 80157e0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80157e4:	1202      	asrs	r2, r0, #8
 80157e6:	0c2b      	lsrs	r3, r5, #16
 80157e8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80157ec:	b2c9      	uxtb	r1, r1
 80157ee:	fb13 f30b 	smulbb	r3, r3, fp
 80157f2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80157f6:	fb02 3201 	mla	r2, r2, r1, r3
 80157fa:	f3c5 2607 	ubfx	r6, r5, #8, #8
 80157fe:	10c3      	asrs	r3, r0, #3
 8015800:	b2ed      	uxtb	r5, r5
 8015802:	00c0      	lsls	r0, r0, #3
 8015804:	b2c0      	uxtb	r0, r0
 8015806:	fb15 f50b 	smulbb	r5, r5, fp
 801580a:	fb00 5001 	mla	r0, r0, r1, r5
 801580e:	b292      	uxth	r2, r2
 8015810:	fb16 f60b 	smulbb	r6, r6, fp
 8015814:	b280      	uxth	r0, r0
 8015816:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801581a:	fb03 6301 	mla	r3, r3, r1, r6
 801581e:	1c51      	adds	r1, r2, #1
 8015820:	1c46      	adds	r6, r0, #1
 8015822:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015826:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801582a:	b29b      	uxth	r3, r3
 801582c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015830:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8015834:	4332      	orrs	r2, r6
 8015836:	1c5e      	adds	r6, r3, #1
 8015838:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801583c:	095b      	lsrs	r3, r3, #5
 801583e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015842:	431a      	orrs	r2, r3
 8015844:	f8aa 2000 	strh.w	r2, [sl]
 8015848:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801584a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801584c:	4413      	add	r3, r2
 801584e:	932d      	str	r3, [sp, #180]	; 0xb4
 8015850:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015852:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015854:	4413      	add	r3, r2
 8015856:	932e      	str	r3, [sp, #184]	; 0xb8
 8015858:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801585a:	3b01      	subs	r3, #1
 801585c:	f10a 0a02 	add.w	sl, sl, #2
 8015860:	9312      	str	r3, [sp, #72]	; 0x48
 8015862:	e4db      	b.n	801521c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8015864:	b160      	cbz	r0, 8015880 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8015866:	5d2a      	ldrb	r2, [r5, r4]
 8015868:	9d08      	ldr	r5, [sp, #32]
 801586a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801586e:	920b      	str	r2, [sp, #44]	; 0x2c
 8015870:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015874:	25ff      	movs	r5, #255	; 0xff
 8015876:	46ac      	mov	ip, r5
 8015878:	e6e9      	b.n	801564e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 801587a:	25ff      	movs	r5, #255	; 0xff
 801587c:	46a8      	mov	r8, r5
 801587e:	e6e6      	b.n	801564e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8015880:	25ff      	movs	r5, #255	; 0xff
 8015882:	46a8      	mov	r8, r5
 8015884:	e7f7      	b.n	8015876 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8015886:	b01b      	add	sp, #108	; 0x6c
 8015888:	ecbd 8b08 	vpop	{d8-d11}
 801588c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8015890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015894:	8808      	ldrh	r0, [r1, #0]
 8015896:	b085      	sub	sp, #20
 8015898:	1206      	asrs	r6, r0, #8
 801589a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801589e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80158a2:	9600      	str	r6, [sp, #0]
 80158a4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80158a8:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 80158ac:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80158b0:	10c6      	asrs	r6, r0, #3
 80158b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80158b6:	9601      	str	r6, [sp, #4]
 80158b8:	00c0      	lsls	r0, r0, #3
 80158ba:	fb04 560c 	mla	r6, r4, ip, r5
 80158be:	b2c0      	uxtb	r0, r0
 80158c0:	4692      	mov	sl, r2
 80158c2:	eb02 0e06 	add.w	lr, r2, r6
 80158c6:	9a00      	ldr	r2, [sp, #0]
 80158c8:	9002      	str	r0, [sp, #8]
 80158ca:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80158ce:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80158d2:	9a01      	ldr	r2, [sp, #4]
 80158d4:	2c00      	cmp	r4, #0
 80158d6:	4698      	mov	r8, r3
 80158d8:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80158dc:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80158e0:	db3e      	blt.n	8015960 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 80158e2:	45a1      	cmp	r9, r4
 80158e4:	dd3c      	ble.n	8015960 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 80158e6:	2d00      	cmp	r5, #0
 80158e8:	db38      	blt.n	801595c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 80158ea:	45ac      	cmp	ip, r5
 80158ec:	dd36      	ble.n	801595c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 80158ee:	f81a 2006 	ldrb.w	r2, [sl, r6]
 80158f2:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80158f6:	1c6e      	adds	r6, r5, #1
 80158f8:	d435      	bmi.n	8015966 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80158fa:	45b4      	cmp	ip, r6
 80158fc:	dd33      	ble.n	8015966 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80158fe:	b393      	cbz	r3, 8015966 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015900:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015904:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8015908:	3401      	adds	r4, #1
 801590a:	d430      	bmi.n	801596e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 801590c:	45a1      	cmp	r9, r4
 801590e:	dd2e      	ble.n	801596e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015910:	b36f      	cbz	r7, 801596e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015912:	2d00      	cmp	r5, #0
 8015914:	db29      	blt.n	801596a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8015916:	45ac      	cmp	ip, r5
 8015918:	dd27      	ble.n	801596a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801591a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801591e:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8015922:	3501      	adds	r5, #1
 8015924:	d407      	bmi.n	8015936 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015926:	45ac      	cmp	ip, r5
 8015928:	dd05      	ble.n	8015936 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801592a:	b123      	cbz	r3, 8015936 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801592c:	44f4      	add	ip, lr
 801592e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015932:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8015936:	2b0f      	cmp	r3, #15
 8015938:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801593c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015940:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015944:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8015948:	d801      	bhi.n	801594e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 801594a:	2f0f      	cmp	r7, #15
 801594c:	d911      	bls.n	8015972 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801594e:	4b79      	ldr	r3, [pc, #484]	; (8015b34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8015950:	4a79      	ldr	r2, [pc, #484]	; (8015b38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8015952:	487a      	ldr	r0, [pc, #488]	; (8015b3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8015954:	f240 210d 	movw	r1, #525	; 0x20d
 8015958:	f004 ff46 	bl	801a7e8 <__assert_func>
 801595c:	4602      	mov	r2, r0
 801595e:	e7ca      	b.n	80158f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8015960:	4606      	mov	r6, r0
 8015962:	4602      	mov	r2, r0
 8015964:	e7d0      	b.n	8015908 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8015966:	4606      	mov	r6, r0
 8015968:	e7ce      	b.n	8015908 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 801596a:	4604      	mov	r4, r0
 801596c:	e7d9      	b.n	8015922 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 801596e:	4604      	mov	r4, r0
 8015970:	e7e1      	b.n	8015936 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015972:	b29b      	uxth	r3, r3
 8015974:	b2bf      	uxth	r7, r7
 8015976:	fb03 fe07 	mul.w	lr, r3, r7
 801597a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801597e:	011b      	lsls	r3, r3, #4
 8015980:	eba3 0c0e 	sub.w	ip, r3, lr
 8015984:	b2bf      	uxth	r7, r7
 8015986:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 801598a:	fa1f fc8c 	uxth.w	ip, ip
 801598e:	1bed      	subs	r5, r5, r7
 8015990:	b2ad      	uxth	r5, r5
 8015992:	fb0c f30a 	mul.w	r3, ip, sl
 8015996:	fb05 330b 	mla	r3, r5, fp, r3
 801599a:	fb07 3309 	mla	r3, r7, r9, r3
 801599e:	fb0e 3308 	mla	r3, lr, r8, r3
 80159a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80159a6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80159aa:	9303      	str	r3, [sp, #12]
 80159ac:	d018      	beq.n	80159e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 80159ae:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80159b2:	fb0b f303 	mul.w	r3, fp, r3
 80159b6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80159ba:	fb0b fb02 	mul.w	fp, fp, r2
 80159be:	0a1a      	lsrs	r2, r3, #8
 80159c0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80159c4:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80159c8:	441a      	add	r2, r3
 80159ca:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80159ce:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80159d2:	0a12      	lsrs	r2, r2, #8
 80159d4:	0a1b      	lsrs	r3, r3, #8
 80159d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80159da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80159de:	431a      	orrs	r2, r3
 80159e0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80159e4:	d019      	beq.n	8015a1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 80159e6:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80159ea:	fb0a fb0b 	mul.w	fp, sl, fp
 80159ee:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80159f2:	fb0a fa06 	mul.w	sl, sl, r6
 80159f6:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80159fa:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80159fe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015a02:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8015a06:	445e      	add	r6, fp
 8015a08:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015a0c:	0a36      	lsrs	r6, r6, #8
 8015a0e:	0a1b      	lsrs	r3, r3, #8
 8015a10:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015a14:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a18:	431e      	orrs	r6, r3
 8015a1a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015a1e:	d019      	beq.n	8015a54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8015a20:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015a24:	fb09 fa0a 	mul.w	sl, r9, sl
 8015a28:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015a2c:	fb09 f904 	mul.w	r9, r9, r4
 8015a30:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015a34:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015a38:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015a3c:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015a40:	4454      	add	r4, sl
 8015a42:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8015a46:	0a24      	lsrs	r4, r4, #8
 8015a48:	0a1b      	lsrs	r3, r3, #8
 8015a4a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015a4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a52:	431c      	orrs	r4, r3
 8015a54:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015a58:	d019      	beq.n	8015a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8015a5a:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8015a5e:	fb08 f909 	mul.w	r9, r8, r9
 8015a62:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015a66:	fb08 f800 	mul.w	r8, r8, r0
 8015a6a:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8015a6e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015a72:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015a76:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015a7a:	4448      	add	r0, r9
 8015a7c:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015a80:	0a00      	lsrs	r0, r0, #8
 8015a82:	0a1b      	lsrs	r3, r3, #8
 8015a84:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015a88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a8c:	4318      	orrs	r0, r3
 8015a8e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015a92:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015a96:	fb0c f808 	mul.w	r8, ip, r8
 8015a9a:	fb05 8803 	mla	r8, r5, r3, r8
 8015a9e:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8015aa2:	fb07 8803 	mla	r8, r7, r3, r8
 8015aa6:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015aaa:	fb0e 8303 	mla	r3, lr, r3, r8
 8015aae:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015ab2:	0a1b      	lsrs	r3, r3, #8
 8015ab4:	fb0c f606 	mul.w	r6, ip, r6
 8015ab8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015abc:	fb05 6202 	mla	r2, r5, r2, r6
 8015ac0:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8015ac4:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015ac8:	fb07 2703 	mla	r7, r7, r3, r2
 8015acc:	9a03      	ldr	r2, [sp, #12]
 8015ace:	9c02      	ldr	r4, [sp, #8]
 8015ad0:	9d01      	ldr	r5, [sp, #4]
 8015ad2:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015ad6:	fb0e 7303 	mla	r3, lr, r3, r7
 8015ada:	43d0      	mvns	r0, r2
 8015adc:	9a00      	ldr	r2, [sp, #0]
 8015ade:	b2c0      	uxtb	r0, r0
 8015ae0:	0a1b      	lsrs	r3, r3, #8
 8015ae2:	4342      	muls	r2, r0
 8015ae4:	4344      	muls	r4, r0
 8015ae6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015aea:	ea48 0303 	orr.w	r3, r8, r3
 8015aee:	4345      	muls	r5, r0
 8015af0:	4620      	mov	r0, r4
 8015af2:	1c54      	adds	r4, r2, #1
 8015af4:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8015af8:	0c1a      	lsrs	r2, r3, #16
 8015afa:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8015afe:	4a10      	ldr	r2, [pc, #64]	; (8015b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8015b00:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8015b04:	1c44      	adds	r4, r0, #1
 8015b06:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8015b0a:	b2d8      	uxtb	r0, r3
 8015b0c:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8015b10:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8015b14:	1c68      	adds	r0, r5, #1
 8015b16:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8015b1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015b1e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015b22:	00db      	lsls	r3, r3, #3
 8015b24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015b28:	4313      	orrs	r3, r2
 8015b2a:	800b      	strh	r3, [r1, #0]
 8015b2c:	b005      	add	sp, #20
 8015b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b32:	bf00      	nop
 8015b34:	0801eb1d 	.word	0x0801eb1d
 8015b38:	0801f075 	.word	0x0801f075
 8015b3c:	0801eba5 	.word	0x0801eba5
 8015b40:	fffff800 	.word	0xfffff800

08015b44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b48:	ed2d 8b08 	vpush	{d8-d11}
 8015b4c:	b097      	sub	sp, #92	; 0x5c
 8015b4e:	eeb0 aa40 	vmov.f32	s20, s0
 8015b52:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8015b54:	9307      	str	r3, [sp, #28]
 8015b56:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8015b5a:	9112      	str	r1, [sp, #72]	; 0x48
 8015b5c:	930f      	str	r3, [sp, #60]	; 0x3c
 8015b5e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015b62:	9015      	str	r0, [sp, #84]	; 0x54
 8015b64:	6868      	ldr	r0, [r5, #4]
 8015b66:	9214      	str	r2, [sp, #80]	; 0x50
 8015b68:	fb00 1303 	mla	r3, r0, r3, r1
 8015b6c:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015b6e:	6829      	ldr	r1, [r5, #0]
 8015b70:	6855      	ldr	r5, [r2, #4]
 8015b72:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8015b76:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015b7a:	930a      	str	r3, [sp, #40]	; 0x28
 8015b7c:	6813      	ldr	r3, [r2, #0]
 8015b7e:	9311      	str	r3, [sp, #68]	; 0x44
 8015b80:	eef0 9a60 	vmov.f32	s19, s1
 8015b84:	eeb0 9a41 	vmov.f32	s18, s2
 8015b88:	eeb0 8a62 	vmov.f32	s16, s5
 8015b8c:	eef0 8a43 	vmov.f32	s17, s6
 8015b90:	eef0 ba44 	vmov.f32	s23, s8
 8015b94:	eeb0 ba64 	vmov.f32	s22, s9
 8015b98:	eef0 aa45 	vmov.f32	s21, s10
 8015b9c:	3504      	adds	r5, #4
 8015b9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ba0:	2b00      	cmp	r3, #0
 8015ba2:	dc03      	bgt.n	8015bac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8015ba4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015ba6:	2b00      	cmp	r3, #0
 8015ba8:	f340 834d 	ble.w	8016246 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8015bac:	9b07      	ldr	r3, [sp, #28]
 8015bae:	2b00      	cmp	r3, #0
 8015bb0:	f340 819c 	ble.w	8015eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8015bb4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015bb6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015bb8:	1412      	asrs	r2, r2, #16
 8015bba:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015bbe:	d42d      	bmi.n	8015c1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8015bc0:	1c51      	adds	r1, r2, #1
 8015bc2:	428c      	cmp	r4, r1
 8015bc4:	dd2d      	ble.n	8015c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015bc6:	2b00      	cmp	r3, #0
 8015bc8:	db2b      	blt.n	8015c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015bca:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015bcc:	1c59      	adds	r1, r3, #1
 8015bce:	4288      	cmp	r0, r1
 8015bd0:	dd27      	ble.n	8015c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015bd2:	9b07      	ldr	r3, [sp, #28]
 8015bd4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015bd6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015bd8:	3b01      	subs	r3, #1
 8015bda:	fb02 1203 	mla	r2, r2, r3, r1
 8015bde:	1412      	asrs	r2, r2, #16
 8015be0:	d429      	bmi.n	8015c36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015be2:	3201      	adds	r2, #1
 8015be4:	4294      	cmp	r4, r2
 8015be6:	dd26      	ble.n	8015c36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015be8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015bea:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015bec:	fb02 1303 	mla	r3, r2, r3, r1
 8015bf0:	141b      	asrs	r3, r3, #16
 8015bf2:	d420      	bmi.n	8015c36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015bf4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015bf6:	3301      	adds	r3, #1
 8015bf8:	429a      	cmp	r2, r3
 8015bfa:	dd1c      	ble.n	8015c36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015bfc:	9b07      	ldr	r3, [sp, #28]
 8015bfe:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8015c02:	9310      	str	r3, [sp, #64]	; 0x40
 8015c04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015c06:	2b00      	cmp	r3, #0
 8015c08:	f300 81da 	bgt.w	8015fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8015c0c:	9b07      	ldr	r3, [sp, #28]
 8015c0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015c10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015c18:	930a      	str	r3, [sp, #40]	; 0x28
 8015c1a:	e169      	b.n	8015ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8015c1c:	1c51      	adds	r1, r2, #1
 8015c1e:	f040 8156 	bne.w	8015ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015c22:	42a2      	cmp	r2, r4
 8015c24:	f280 8153 	bge.w	8015ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015c28:	1c5a      	adds	r2, r3, #1
 8015c2a:	f2c0 8150 	blt.w	8015ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015c2e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015c30:	4293      	cmp	r3, r2
 8015c32:	f280 814c 	bge.w	8015ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015c36:	9b07      	ldr	r3, [sp, #28]
 8015c38:	9313      	str	r3, [sp, #76]	; 0x4c
 8015c3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015c3c:	9310      	str	r3, [sp, #64]	; 0x40
 8015c3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015c40:	2b00      	cmp	r3, #0
 8015c42:	dde3      	ble.n	8015c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8015c44:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015c46:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c48:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015c4c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015c4e:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8015c52:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015c54:	1412      	asrs	r2, r2, #16
 8015c56:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015c5a:	f100 8198 	bmi.w	8015f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8015c5e:	1c56      	adds	r6, r2, #1
 8015c60:	42b4      	cmp	r4, r6
 8015c62:	f340 8196 	ble.w	8015f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015c66:	2b00      	cmp	r3, #0
 8015c68:	f2c0 8193 	blt.w	8015f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015c6c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015c6e:	1c5e      	adds	r6, r3, #1
 8015c70:	42b7      	cmp	r7, r6
 8015c72:	f340 818e 	ble.w	8015f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015c76:	fb03 2304 	mla	r3, r3, r4, r2
 8015c7a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015c7c:	18d6      	adds	r6, r2, r3
 8015c7e:	5cd3      	ldrb	r3, [r2, r3]
 8015c80:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8015c84:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8015c88:	2900      	cmp	r1, #0
 8015c8a:	f000 8170 	beq.w	8015f6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8015c8e:	7872      	ldrb	r2, [r6, #1]
 8015c90:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015c94:	920b      	str	r2, [sp, #44]	; 0x2c
 8015c96:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015c9a:	2800      	cmp	r0, #0
 8015c9c:	f000 8171 	beq.w	8015f82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8015ca0:	1932      	adds	r2, r6, r4
 8015ca2:	5d36      	ldrb	r6, [r6, r4]
 8015ca4:	7852      	ldrb	r2, [r2, #1]
 8015ca6:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8015caa:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015cae:	9608      	str	r6, [sp, #32]
 8015cb0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015cb4:	920c      	str	r2, [sp, #48]	; 0x30
 8015cb6:	0e16      	lsrs	r6, r2, #24
 8015cb8:	b289      	uxth	r1, r1
 8015cba:	b280      	uxth	r0, r0
 8015cbc:	fb01 fb00 	mul.w	fp, r1, r0
 8015cc0:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8015cc4:	0109      	lsls	r1, r1, #4
 8015cc6:	eba1 090b 	sub.w	r9, r1, fp
 8015cca:	b280      	uxth	r0, r0
 8015ccc:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8015cd0:	fa1f f989 	uxth.w	r9, r9
 8015cd4:	1a12      	subs	r2, r2, r0
 8015cd6:	b292      	uxth	r2, r2
 8015cd8:	fb09 f108 	mul.w	r1, r9, r8
 8015cdc:	fb02 110c 	mla	r1, r2, ip, r1
 8015ce0:	fb00 110a 	mla	r1, r0, sl, r1
 8015ce4:	fb0b 1106 	mla	r1, fp, r6, r1
 8015ce8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015cec:	2900      	cmp	r1, #0
 8015cee:	f000 80df 	beq.w	8015eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015cf2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015cf6:	d01b      	beq.n	8015d30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 8015cf8:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8015cfc:	fb0c fe0e 	mul.w	lr, ip, lr
 8015d00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015d04:	fb0c fc03 	mul.w	ip, ip, r3
 8015d08:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8015d0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015d10:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015d14:	4473      	add	r3, lr
 8015d16:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8015d1a:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8015d1e:	0a1b      	lsrs	r3, r3, #8
 8015d20:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015d24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015d28:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015d2c:	ea43 030e 	orr.w	r3, r3, lr
 8015d30:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015d34:	d01e      	beq.n	8015d74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8015d36:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8015d38:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8015d3c:	fb08 fc0c 	mul.w	ip, r8, ip
 8015d40:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8015d44:	fb08 f80e 	mul.w	r8, r8, lr
 8015d48:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8015d4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015d50:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015d54:	44e6      	add	lr, ip
 8015d56:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8015d5a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8015d5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015d62:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015d66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015d6a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8015d6e:	ea4e 0708 	orr.w	r7, lr, r8
 8015d72:	970b      	str	r7, [sp, #44]	; 0x2c
 8015d74:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015d78:	d01e      	beq.n	8015db8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8015d7a:	9f08      	ldr	r7, [sp, #32]
 8015d7c:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8015d80:	fb0a f808 	mul.w	r8, sl, r8
 8015d84:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015d88:	fb0a fa0c 	mul.w	sl, sl, ip
 8015d8c:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8015d90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015d94:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015d98:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015d9c:	44c6      	add	lr, r8
 8015d9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015da2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015da6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015daa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015dae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015db2:	ea4e 070a 	orr.w	r7, lr, sl
 8015db6:	9708      	str	r7, [sp, #32]
 8015db8:	2eff      	cmp	r6, #255	; 0xff
 8015dba:	d01d      	beq.n	8015df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8015dbc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015dbe:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8015dc2:	fb06 f808 	mul.w	r8, r6, r8
 8015dc6:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015dca:	fb06 f60c 	mul.w	r6, r6, ip
 8015dce:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8015dd2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015dd6:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015dda:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8015dde:	44c6      	add	lr, r8
 8015de0:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8015de4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015de8:	0a36      	lsrs	r6, r6, #8
 8015dea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015dee:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015df2:	ea4e 0606 	orr.w	r6, lr, r6
 8015df6:	960c      	str	r6, [sp, #48]	; 0x30
 8015df8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015dfa:	9f08      	ldr	r7, [sp, #32]
 8015dfc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015e00:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015e04:	fb09 f606 	mul.w	r6, r9, r6
 8015e08:	fb02 660c 	mla	r6, r2, ip, r6
 8015e0c:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8015e10:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015e12:	fb00 660c 	mla	r6, r0, ip, r6
 8015e16:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8015e1a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8015e1c:	fb0b 660c 	mla	r6, fp, ip, r6
 8015e20:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015e24:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015e28:	fb09 f90c 	mul.w	r9, r9, ip
 8015e2c:	fb02 9303 	mla	r3, r2, r3, r9
 8015e30:	9a08      	ldr	r2, [sp, #32]
 8015e32:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8015e36:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015e38:	fb00 330e 	mla	r3, r0, lr, r3
 8015e3c:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8015e40:	fb0b 3b00 	mla	fp, fp, r0, r3
 8015e44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e46:	881b      	ldrh	r3, [r3, #0]
 8015e48:	43c9      	mvns	r1, r1
 8015e4a:	1218      	asrs	r0, r3, #8
 8015e4c:	b2c9      	uxtb	r1, r1
 8015e4e:	10da      	asrs	r2, r3, #3
 8015e50:	0a36      	lsrs	r6, r6, #8
 8015e52:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015e56:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015e5a:	00db      	lsls	r3, r3, #3
 8015e5c:	4348      	muls	r0, r1
 8015e5e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015e62:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8015e66:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015e6a:	b2db      	uxtb	r3, r3
 8015e6c:	434b      	muls	r3, r1
 8015e6e:	ea46 060b 	orr.w	r6, r6, fp
 8015e72:	434a      	muls	r2, r1
 8015e74:	1c41      	adds	r1, r0, #1
 8015e76:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8015e7a:	0c30      	lsrs	r0, r6, #16
 8015e7c:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8015e80:	494e      	ldr	r1, [pc, #312]	; (8015fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 8015e82:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8015e86:	1c59      	adds	r1, r3, #1
 8015e88:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8015e8c:	b2f3      	uxtb	r3, r6
 8015e8e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015e92:	1c51      	adds	r1, r2, #1
 8015e94:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015e98:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015e9c:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8015ea0:	00f6      	lsls	r6, r6, #3
 8015ea2:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8015ea6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015eaa:	431e      	orrs	r6, r3
 8015eac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015eae:	801e      	strh	r6, [r3, #0]
 8015eb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015eb2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015eb4:	3302      	adds	r3, #2
 8015eb6:	9310      	str	r3, [sp, #64]	; 0x40
 8015eb8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015eba:	4413      	add	r3, r2
 8015ebc:	9329      	str	r3, [sp, #164]	; 0xa4
 8015ebe:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015ec0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015ec2:	4413      	add	r3, r2
 8015ec4:	932a      	str	r3, [sp, #168]	; 0xa8
 8015ec6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015ec8:	3b01      	subs	r3, #1
 8015eca:	9313      	str	r3, [sp, #76]	; 0x4c
 8015ecc:	e6b7      	b.n	8015c3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015ece:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015ed0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015ed2:	4413      	add	r3, r2
 8015ed4:	9329      	str	r3, [sp, #164]	; 0xa4
 8015ed6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015ed8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015eda:	4413      	add	r3, r2
 8015edc:	932a      	str	r3, [sp, #168]	; 0xa8
 8015ede:	9b07      	ldr	r3, [sp, #28]
 8015ee0:	3b01      	subs	r3, #1
 8015ee2:	9307      	str	r3, [sp, #28]
 8015ee4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015ee6:	3302      	adds	r3, #2
 8015ee8:	930a      	str	r3, [sp, #40]	; 0x28
 8015eea:	e65f      	b.n	8015bac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8015eec:	f47f ae71 	bne.w	8015bd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8015ef0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ef2:	2b00      	cmp	r3, #0
 8015ef4:	f340 81a7 	ble.w	8016246 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8015ef8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015efc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015f00:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015f04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015f06:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015f0a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015f0e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015f12:	eef0 6a48 	vmov.f32	s13, s16
 8015f16:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015f1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f1e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015f22:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8015f26:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015f2a:	eef0 6a68 	vmov.f32	s13, s17
 8015f2e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015f32:	ee18 2a10 	vmov	r2, s16
 8015f36:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015f3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f3e:	ee18 2a90 	vmov	r2, s17
 8015f42:	932b      	str	r3, [sp, #172]	; 0xac
 8015f44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015f46:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f4a:	932c      	str	r3, [sp, #176]	; 0xb0
 8015f4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015f4e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015f50:	3b01      	subs	r3, #1
 8015f52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f56:	9312      	str	r3, [sp, #72]	; 0x48
 8015f58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015f5a:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8015f5e:	bf08      	it	eq
 8015f60:	4613      	moveq	r3, r2
 8015f62:	9307      	str	r3, [sp, #28]
 8015f64:	eef0 8a67 	vmov.f32	s17, s15
 8015f68:	eeb0 8a47 	vmov.f32	s16, s14
 8015f6c:	e617      	b.n	8015b9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8015f6e:	b158      	cbz	r0, 8015f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8015f70:	5d32      	ldrb	r2, [r6, r4]
 8015f72:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015f76:	9208      	str	r2, [sp, #32]
 8015f78:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8015f7c:	26ff      	movs	r6, #255	; 0xff
 8015f7e:	46b0      	mov	r8, r6
 8015f80:	e69a      	b.n	8015cb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8015f82:	26ff      	movs	r6, #255	; 0xff
 8015f84:	46b2      	mov	sl, r6
 8015f86:	e697      	b.n	8015cb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8015f88:	26ff      	movs	r6, #255	; 0xff
 8015f8a:	46b2      	mov	sl, r6
 8015f8c:	e7f7      	b.n	8015f7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8015f8e:	1c57      	adds	r7, r2, #1
 8015f90:	d18e      	bne.n	8015eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015f92:	4294      	cmp	r4, r2
 8015f94:	dd8c      	ble.n	8015eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015f96:	1c5e      	adds	r6, r3, #1
 8015f98:	db8a      	blt.n	8015eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015f9a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015f9c:	429e      	cmp	r6, r3
 8015f9e:	dd87      	ble.n	8015eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015fa0:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8015fa4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8015fa8:	e9cd 4600 	strd	r4, r6, [sp]
 8015fac:	462b      	mov	r3, r5
 8015fae:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8015fb2:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015fb4:	f7ff fc6c 	bl	8015890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8015fb8:	e77a      	b.n	8015eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015fba:	bf00      	nop
 8015fbc:	fffff800 	.word	0xfffff800
 8015fc0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015fc2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015fc4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015fc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015fca:	1409      	asrs	r1, r1, #16
 8015fcc:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015fd0:	141b      	asrs	r3, r3, #16
 8015fd2:	fb04 1303 	mla	r3, r4, r3, r1
 8015fd6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8015fd8:	18ce      	adds	r6, r1, r3
 8015fda:	5ccb      	ldrb	r3, [r1, r3]
 8015fdc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8015fe0:	0e1f      	lsrs	r7, r3, #24
 8015fe2:	2a00      	cmp	r2, #0
 8015fe4:	f000 811f 	beq.w	8016226 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8015fe8:	7871      	ldrb	r1, [r6, #1]
 8015fea:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8015fee:	910d      	str	r1, [sp, #52]	; 0x34
 8015ff0:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8015ff4:	2800      	cmp	r0, #0
 8015ff6:	f000 8120 	beq.w	801623a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8015ffa:	1931      	adds	r1, r6, r4
 8015ffc:	5d36      	ldrb	r6, [r6, r4]
 8015ffe:	7849      	ldrb	r1, [r1, #1]
 8016000:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8016004:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016008:	9609      	str	r6, [sp, #36]	; 0x24
 801600a:	ea4f 6916 	mov.w	r9, r6, lsr #24
 801600e:	910e      	str	r1, [sp, #56]	; 0x38
 8016010:	0e0e      	lsrs	r6, r1, #24
 8016012:	b292      	uxth	r2, r2
 8016014:	b280      	uxth	r0, r0
 8016016:	fb02 fa00 	mul.w	sl, r2, r0
 801601a:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801601e:	0112      	lsls	r2, r2, #4
 8016020:	eba2 080a 	sub.w	r8, r2, sl
 8016024:	b280      	uxth	r0, r0
 8016026:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801602a:	fa1f f888 	uxth.w	r8, r8
 801602e:	1a09      	subs	r1, r1, r0
 8016030:	b289      	uxth	r1, r1
 8016032:	fb08 f20e 	mul.w	r2, r8, lr
 8016036:	fb01 2207 	mla	r2, r1, r7, r2
 801603a:	fb00 2209 	mla	r2, r0, r9, r2
 801603e:	fb0a 2206 	mla	r2, sl, r6, r2
 8016042:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016046:	9213      	str	r2, [sp, #76]	; 0x4c
 8016048:	2a00      	cmp	r2, #0
 801604a:	f000 80de 	beq.w	801620a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 801604e:	2fff      	cmp	r7, #255	; 0xff
 8016050:	d01a      	beq.n	8016088 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8016052:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016056:	fb07 fc0c 	mul.w	ip, r7, ip
 801605a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801605e:	435f      	muls	r7, r3
 8016060:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016064:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016068:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801606c:	4463      	add	r3, ip
 801606e:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8016072:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8016076:	0a1b      	lsrs	r3, r3, #8
 8016078:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801607c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016080:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016084:	ea43 030c 	orr.w	r3, r3, ip
 8016088:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801608c:	d01f      	beq.n	80160ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 801608e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016090:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016092:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016096:	fb0e f707 	mul.w	r7, lr, r7
 801609a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801609e:	fb0e fe0c 	mul.w	lr, lr, ip
 80160a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80160a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80160aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80160ae:	44bc      	add	ip, r7
 80160b0:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80160b4:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80160b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80160bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80160c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80160c4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80160c8:	ea4c 020e 	orr.w	r2, ip, lr
 80160cc:	920d      	str	r2, [sp, #52]	; 0x34
 80160ce:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80160d2:	d01e      	beq.n	8016112 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 80160d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80160d6:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80160da:	fb09 fe0e 	mul.w	lr, r9, lr
 80160de:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80160e2:	fb09 f907 	mul.w	r9, r9, r7
 80160e6:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80160ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80160ee:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80160f2:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80160f6:	44f4      	add	ip, lr
 80160f8:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80160fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016100:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016104:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016108:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801610c:	ea4c 0209 	orr.w	r2, ip, r9
 8016110:	9209      	str	r2, [sp, #36]	; 0x24
 8016112:	2eff      	cmp	r6, #255	; 0xff
 8016114:	d01c      	beq.n	8016150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 8016116:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016118:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801611c:	fb06 fe0e 	mul.w	lr, r6, lr
 8016120:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016124:	437e      	muls	r6, r7
 8016126:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801612a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801612e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016132:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8016136:	44f4      	add	ip, lr
 8016138:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801613c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016140:	0a36      	lsrs	r6, r6, #8
 8016142:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016146:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801614a:	ea4c 0206 	orr.w	r2, ip, r6
 801614e:	920e      	str	r2, [sp, #56]	; 0x38
 8016150:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016152:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8016156:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016158:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801615c:	fb08 f606 	mul.w	r6, r8, r6
 8016160:	fb01 6607 	mla	r6, r1, r7, r6
 8016164:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8016168:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801616a:	fb00 6607 	mla	r6, r0, r7, r6
 801616e:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8016172:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016174:	fb0a 6607 	mla	r6, sl, r7, r6
 8016178:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801617c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801617e:	fb08 f807 	mul.w	r8, r8, r7
 8016182:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016186:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801618a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801618c:	fb01 8303 	mla	r3, r1, r3, r8
 8016190:	fb00 330c 	mla	r3, r0, ip, r3
 8016194:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8016198:	fb0a 3e0e 	mla	lr, sl, lr, r3
 801619c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801619e:	f8bb 3000 	ldrh.w	r3, [fp]
 80161a2:	43d2      	mvns	r2, r2
 80161a4:	1218      	asrs	r0, r3, #8
 80161a6:	b2d2      	uxtb	r2, r2
 80161a8:	0a36      	lsrs	r6, r6, #8
 80161aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80161ae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80161b2:	4350      	muls	r0, r2
 80161b4:	10d9      	asrs	r1, r3, #3
 80161b6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80161ba:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80161be:	00db      	lsls	r3, r3, #3
 80161c0:	ea46 060e 	orr.w	r6, r6, lr
 80161c4:	1c47      	adds	r7, r0, #1
 80161c6:	b2db      	uxtb	r3, r3
 80161c8:	4353      	muls	r3, r2
 80161ca:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80161ce:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80161d2:	0c37      	lsrs	r7, r6, #16
 80161d4:	4351      	muls	r1, r2
 80161d6:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80161da:	4a1d      	ldr	r2, [pc, #116]	; (8016250 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 80161dc:	1c5f      	adds	r7, r3, #1
 80161de:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80161e2:	b2f7      	uxtb	r7, r6
 80161e4:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80161e8:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80161ec:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80161f0:	1c4b      	adds	r3, r1, #1
 80161f2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80161f6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80161fa:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 80161fe:	00f6      	lsls	r6, r6, #3
 8016200:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016204:	4330      	orrs	r0, r6
 8016206:	f8ab 0000 	strh.w	r0, [fp]
 801620a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801620c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801620e:	4413      	add	r3, r2
 8016210:	9329      	str	r3, [sp, #164]	; 0xa4
 8016212:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016214:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016216:	4413      	add	r3, r2
 8016218:	932a      	str	r3, [sp, #168]	; 0xa8
 801621a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801621c:	3b01      	subs	r3, #1
 801621e:	f10b 0b02 	add.w	fp, fp, #2
 8016222:	9310      	str	r3, [sp, #64]	; 0x40
 8016224:	e4ee      	b.n	8015c04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8016226:	b158      	cbz	r0, 8016240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8016228:	5d31      	ldrb	r1, [r6, r4]
 801622a:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 801622e:	9109      	str	r1, [sp, #36]	; 0x24
 8016230:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8016234:	26ff      	movs	r6, #255	; 0xff
 8016236:	46b6      	mov	lr, r6
 8016238:	e6eb      	b.n	8016012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 801623a:	26ff      	movs	r6, #255	; 0xff
 801623c:	46b1      	mov	r9, r6
 801623e:	e6e8      	b.n	8016012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8016240:	26ff      	movs	r6, #255	; 0xff
 8016242:	46b1      	mov	r9, r6
 8016244:	e7f7      	b.n	8016236 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 8016246:	b017      	add	sp, #92	; 0x5c
 8016248:	ecbd 8b08 	vpop	{d8-d11}
 801624c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016250:	fffff800 	.word	0xfffff800

08016254 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016258:	b087      	sub	sp, #28
 801625a:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 801625e:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8016262:	9105      	str	r1, [sp, #20]
 8016264:	fb00 e604 	mla	r6, r0, r4, lr
 8016268:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 801626c:	9102      	str	r1, [sp, #8]
 801626e:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8016272:	9103      	str	r1, [sp, #12]
 8016274:	9905      	ldr	r1, [sp, #20]
 8016276:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 801627a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 801627e:	8809      	ldrh	r1, [r1, #0]
 8016280:	2800      	cmp	r0, #0
 8016282:	eb03 0a06 	add.w	sl, r3, r6
 8016286:	f2c0 80ca 	blt.w	801641e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 801628a:	4287      	cmp	r7, r0
 801628c:	f340 80c7 	ble.w	801641e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8016290:	f1be 0f00 	cmp.w	lr, #0
 8016294:	f2c0 80bf 	blt.w	8016416 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8016298:	4574      	cmp	r4, lr
 801629a:	f340 80bc 	ble.w	8016416 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 801629e:	f813 c006 	ldrb.w	ip, [r3, r6]
 80162a2:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 80162a6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80162aa:	d01c      	beq.n	80162e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 80162ac:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 80162b0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80162b4:	4372      	muls	r2, r6
 80162b6:	f64f 081f 	movw	r8, #63519	; 0xf81f
 80162ba:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 80162be:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80162c2:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80162c6:	fb0c f609 	mul.w	r6, ip, r9
 80162ca:	eb03 0902 	add.w	r9, r3, r2
 80162ce:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 80162d2:	f106 0820 	add.w	r8, r6, #32
 80162d6:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80162da:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80162de:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80162e2:	ea49 0908 	orr.w	r9, r9, r8
 80162e6:	fa1f f989 	uxth.w	r9, r9
 80162ea:	f11e 0301 	adds.w	r3, lr, #1
 80162ee:	f100 809b 	bmi.w	8016428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80162f2:	429c      	cmp	r4, r3
 80162f4:	f340 8098 	ble.w	8016428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80162f8:	2d00      	cmp	r5, #0
 80162fa:	f000 8095 	beq.w	8016428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80162fe:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8016302:	9b03      	ldr	r3, [sp, #12]
 8016304:	2eff      	cmp	r6, #255	; 0xff
 8016306:	885b      	ldrh	r3, [r3, #2]
 8016308:	d01b      	beq.n	8016342 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 801630a:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801630e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016312:	fb08 f202 	mul.w	r2, r8, r2
 8016316:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801631a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801631e:	fb06 f803 	mul.w	r8, r6, r3
 8016322:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016326:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801632a:	441a      	add	r2, r3
 801632c:	f108 0320 	add.w	r3, r8, #32
 8016330:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016334:	0a1b      	lsrs	r3, r3, #8
 8016336:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801633a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801633e:	ea4b 0303 	orr.w	r3, fp, r3
 8016342:	b29b      	uxth	r3, r3
 8016344:	9301      	str	r3, [sp, #4]
 8016346:	3001      	adds	r0, #1
 8016348:	d474      	bmi.n	8016434 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801634a:	4287      	cmp	r7, r0
 801634c:	dd72      	ble.n	8016434 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801634e:	9a02      	ldr	r2, [sp, #8]
 8016350:	2a00      	cmp	r2, #0
 8016352:	f000 8121 	beq.w	8016598 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 8016356:	f1be 0f00 	cmp.w	lr, #0
 801635a:	db68      	blt.n	801642e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 801635c:	4574      	cmp	r4, lr
 801635e:	dd66      	ble.n	801642e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016360:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8016364:	9a03      	ldr	r2, [sp, #12]
 8016366:	2fff      	cmp	r7, #255	; 0xff
 8016368:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 801636c:	d01c      	beq.n	80163a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 801636e:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8016372:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8016376:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801637a:	fb07 fb00 	mul.w	fp, r7, r0
 801637e:	fb08 f802 	mul.w	r8, r8, r2
 8016382:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8016386:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 801638a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801638e:	4490      	add	r8, r2
 8016390:	f10b 0220 	add.w	r2, fp, #32
 8016394:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8016398:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801639c:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 80163a0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80163a4:	ea40 000b 	orr.w	r0, r0, fp
 80163a8:	b280      	uxth	r0, r0
 80163aa:	f11e 0e01 	adds.w	lr, lr, #1
 80163ae:	d446      	bmi.n	801643e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 80163b0:	4574      	cmp	r4, lr
 80163b2:	dd44      	ble.n	801643e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 80163b4:	2d00      	cmp	r5, #0
 80163b6:	d045      	beq.n	8016444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 80163b8:	1c62      	adds	r2, r4, #1
 80163ba:	9b03      	ldr	r3, [sp, #12]
 80163bc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80163c0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80163c4:	2cff      	cmp	r4, #255	; 0xff
 80163c6:	d01c      	beq.n	8016402 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 80163c8:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 80163cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80163d0:	fb08 fe0e 	mul.w	lr, r8, lr
 80163d4:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80163d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80163dc:	fb04 f802 	mul.w	r8, r4, r2
 80163e0:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 80163e4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80163e8:	4472      	add	r2, lr
 80163ea:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 80163ee:	f108 0a20 	add.w	sl, r8, #32
 80163f2:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 80163f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80163fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80163fe:	ea42 020a 	orr.w	r2, r2, sl
 8016402:	b292      	uxth	r2, r2
 8016404:	2d0f      	cmp	r5, #15
 8016406:	d91f      	bls.n	8016448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 8016408:	4b67      	ldr	r3, [pc, #412]	; (80165a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 801640a:	4a68      	ldr	r2, [pc, #416]	; (80165ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 801640c:	4868      	ldr	r0, [pc, #416]	; (80165b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 801640e:	f240 210d 	movw	r1, #525	; 0x20d
 8016412:	f004 f9e9 	bl	801a7e8 <__assert_func>
 8016416:	4689      	mov	r9, r1
 8016418:	f04f 0cff 	mov.w	ip, #255	; 0xff
 801641c:	e765      	b.n	80162ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 801641e:	26ff      	movs	r6, #255	; 0xff
 8016420:	9101      	str	r1, [sp, #4]
 8016422:	4689      	mov	r9, r1
 8016424:	46b4      	mov	ip, r6
 8016426:	e78e      	b.n	8016346 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8016428:	9101      	str	r1, [sp, #4]
 801642a:	26ff      	movs	r6, #255	; 0xff
 801642c:	e78b      	b.n	8016346 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 801642e:	4608      	mov	r0, r1
 8016430:	27ff      	movs	r7, #255	; 0xff
 8016432:	e7ba      	b.n	80163aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8016434:	24ff      	movs	r4, #255	; 0xff
 8016436:	460a      	mov	r2, r1
 8016438:	4608      	mov	r0, r1
 801643a:	4627      	mov	r7, r4
 801643c:	e7e2      	b.n	8016404 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801643e:	460a      	mov	r2, r1
 8016440:	24ff      	movs	r4, #255	; 0xff
 8016442:	e7df      	b.n	8016404 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016444:	460a      	mov	r2, r1
 8016446:	24ff      	movs	r4, #255	; 0xff
 8016448:	9b02      	ldr	r3, [sp, #8]
 801644a:	2b0f      	cmp	r3, #15
 801644c:	d8dc      	bhi.n	8016408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 801644e:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8016452:	fa1f f885 	uxth.w	r8, r5
 8016456:	fb08 fa0e 	mul.w	sl, r8, lr
 801645a:	ea4f 1308 	mov.w	r3, r8, lsl #4
 801645e:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8016462:	9303      	str	r3, [sp, #12]
 8016464:	fa1f f38e 	uxth.w	r3, lr
 8016468:	9304      	str	r3, [sp, #16]
 801646a:	ea4f 4809 	mov.w	r8, r9, lsl #16
 801646e:	9b02      	ldr	r3, [sp, #8]
 8016470:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016474:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8016478:	fb15 fe03 	smulbb	lr, r5, r3
 801647c:	ea48 0809 	orr.w	r8, r8, r9
 8016480:	f1c3 0910 	rsb	r9, r3, #16
 8016484:	9b01      	ldr	r3, [sp, #4]
 8016486:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801648a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801648e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016492:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016496:	eba9 0905 	sub.w	r9, r9, r5
 801649a:	ea4b 0303 	orr.w	r3, fp, r3
 801649e:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 80164a2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80164a6:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 80164aa:	436b      	muls	r3, r5
 80164ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80164b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80164b4:	ea4b 0202 	orr.w	r2, fp, r2
 80164b8:	fb09 3308 	mla	r3, r9, r8, r3
 80164bc:	fb0e 3302 	mla	r3, lr, r2, r3
 80164c0:	0402      	lsls	r2, r0, #16
 80164c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80164c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80164ca:	4310      	orrs	r0, r2
 80164cc:	9a02      	ldr	r2, [sp, #8]
 80164ce:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80164d2:	fb0e 3e00 	mla	lr, lr, r0, r3
 80164d6:	9803      	ldr	r0, [sp, #12]
 80164d8:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 80164dc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80164e0:	9804      	ldr	r0, [sp, #16]
 80164e2:	1a2d      	subs	r5, r5, r0
 80164e4:	9803      	ldr	r0, [sp, #12]
 80164e6:	eba0 000a 	sub.w	r0, r0, sl
 80164ea:	b280      	uxth	r0, r0
 80164ec:	b2ad      	uxth	r5, r5
 80164ee:	4346      	muls	r6, r0
 80164f0:	9804      	ldr	r0, [sp, #16]
 80164f2:	fb0c 6605 	mla	r6, ip, r5, r6
 80164f6:	fb00 6707 	mla	r7, r0, r7, r6
 80164fa:	fb0a 7404 	mla	r4, sl, r4, r7
 80164fe:	b292      	uxth	r2, r2
 8016500:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8016504:	4354      	muls	r4, r2
 8016506:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801650a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801650e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016512:	f104 0a01 	add.w	sl, r4, #1
 8016516:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801651a:	ea43 0e0e 	orr.w	lr, r3, lr
 801651e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016522:	fa1f f38e 	uxth.w	r3, lr
 8016526:	1208      	asrs	r0, r1, #8
 8016528:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 801652c:	b2e4      	uxtb	r4, r4
 801652e:	121d      	asrs	r5, r3, #8
 8016530:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016534:	fb10 f004 	smulbb	r0, r0, r4
 8016538:	10ce      	asrs	r6, r1, #3
 801653a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801653e:	00c9      	lsls	r1, r1, #3
 8016540:	fb05 0502 	mla	r5, r5, r2, r0
 8016544:	b2c9      	uxtb	r1, r1
 8016546:	10d8      	asrs	r0, r3, #3
 8016548:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801654c:	00db      	lsls	r3, r3, #3
 801654e:	fb16 f604 	smulbb	r6, r6, r4
 8016552:	b2db      	uxtb	r3, r3
 8016554:	fb11 f404 	smulbb	r4, r1, r4
 8016558:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801655c:	fb00 6002 	mla	r0, r0, r2, r6
 8016560:	fb03 4202 	mla	r2, r3, r2, r4
 8016564:	b2ad      	uxth	r5, r5
 8016566:	b292      	uxth	r2, r2
 8016568:	1c6b      	adds	r3, r5, #1
 801656a:	1c51      	adds	r1, r2, #1
 801656c:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8016570:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016574:	b280      	uxth	r0, r0
 8016576:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801657a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801657e:	4313      	orrs	r3, r2
 8016580:	1c42      	adds	r2, r0, #1
 8016582:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016586:	0940      	lsrs	r0, r0, #5
 8016588:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801658c:	9a05      	ldr	r2, [sp, #20]
 801658e:	4303      	orrs	r3, r0
 8016590:	8013      	strh	r3, [r2, #0]
 8016592:	b007      	add	sp, #28
 8016594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016598:	2d0f      	cmp	r5, #15
 801659a:	f63f af35 	bhi.w	8016408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 801659e:	24ff      	movs	r4, #255	; 0xff
 80165a0:	460a      	mov	r2, r1
 80165a2:	4608      	mov	r0, r1
 80165a4:	4627      	mov	r7, r4
 80165a6:	e752      	b.n	801644e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 80165a8:	0801eb1d 	.word	0x0801eb1d
 80165ac:	0801f075 	.word	0x0801f075
 80165b0:	0801eba5 	.word	0x0801eba5

080165b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80165b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165b8:	ed2d 8b08 	vpush	{d8-d11}
 80165bc:	b099      	sub	sp, #100	; 0x64
 80165be:	eeb0 aa40 	vmov.f32	s20, s0
 80165c2:	9308      	str	r3, [sp, #32]
 80165c4:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80165c8:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 80165ca:	930b      	str	r3, [sp, #44]	; 0x2c
 80165cc:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80165d0:	9314      	str	r3, [sp, #80]	; 0x50
 80165d2:	9113      	str	r1, [sp, #76]	; 0x4c
 80165d4:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80165d8:	9017      	str	r0, [sp, #92]	; 0x5c
 80165da:	6870      	ldr	r0, [r6, #4]
 80165dc:	9216      	str	r2, [sp, #88]	; 0x58
 80165de:	fb00 1303 	mla	r3, r0, r3, r1
 80165e2:	6831      	ldr	r1, [r6, #0]
 80165e4:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80165e6:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 80165ea:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80165ee:	9309      	str	r3, [sp, #36]	; 0x24
 80165f0:	6813      	ldr	r3, [r2, #0]
 80165f2:	930c      	str	r3, [sp, #48]	; 0x30
 80165f4:	6853      	ldr	r3, [r2, #4]
 80165f6:	930d      	str	r3, [sp, #52]	; 0x34
 80165f8:	006b      	lsls	r3, r5, #1
 80165fa:	9312      	str	r3, [sp, #72]	; 0x48
 80165fc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8016600:	930a      	str	r3, [sp, #40]	; 0x28
 8016602:	eef0 9a60 	vmov.f32	s19, s1
 8016606:	eeb0 9a41 	vmov.f32	s18, s2
 801660a:	eeb0 8a62 	vmov.f32	s16, s5
 801660e:	eef0 8a43 	vmov.f32	s17, s6
 8016612:	eef0 ba44 	vmov.f32	s23, s8
 8016616:	eeb0 ba64 	vmov.f32	s22, s9
 801661a:	eef0 aa45 	vmov.f32	s21, s10
 801661e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016620:	2b00      	cmp	r3, #0
 8016622:	dc03      	bgt.n	801662c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016624:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016626:	2b00      	cmp	r3, #0
 8016628:	f340 83bf 	ble.w	8016daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 801662c:	9b08      	ldr	r3, [sp, #32]
 801662e:	2b00      	cmp	r3, #0
 8016630:	f340 81cb 	ble.w	80169ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 8016634:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016636:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016638:	1412      	asrs	r2, r2, #16
 801663a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801663e:	d42f      	bmi.n	80166a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8016640:	1c51      	adds	r1, r2, #1
 8016642:	428d      	cmp	r5, r1
 8016644:	dd2f      	ble.n	80166a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016646:	2b00      	cmp	r3, #0
 8016648:	db2d      	blt.n	80166a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801664a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801664c:	1c59      	adds	r1, r3, #1
 801664e:	4288      	cmp	r0, r1
 8016650:	dd29      	ble.n	80166a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016652:	9b08      	ldr	r3, [sp, #32]
 8016654:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016656:	992b      	ldr	r1, [sp, #172]	; 0xac
 8016658:	3b01      	subs	r3, #1
 801665a:	fb02 1203 	mla	r2, r2, r3, r1
 801665e:	1412      	asrs	r2, r2, #16
 8016660:	d42b      	bmi.n	80166ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016662:	3201      	adds	r2, #1
 8016664:	4295      	cmp	r5, r2
 8016666:	dd28      	ble.n	80166ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016668:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801666a:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801666c:	fb02 1303 	mla	r3, r2, r3, r1
 8016670:	141b      	asrs	r3, r3, #16
 8016672:	d422      	bmi.n	80166ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016674:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016676:	3301      	adds	r3, #1
 8016678:	429a      	cmp	r2, r3
 801667a:	dd1e      	ble.n	80166ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801667c:	9b08      	ldr	r3, [sp, #32]
 801667e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8016682:	9315      	str	r3, [sp, #84]	; 0x54
 8016684:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016688:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801668a:	2b00      	cmp	r3, #0
 801668c:	f300 8217 	bgt.w	8016abe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8016690:	9b08      	ldr	r3, [sp, #32]
 8016692:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016696:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016698:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801669c:	9309      	str	r3, [sp, #36]	; 0x24
 801669e:	e196      	b.n	80169ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 80166a0:	1c57      	adds	r7, r2, #1
 80166a2:	f040 8183 	bne.w	80169ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80166a6:	42aa      	cmp	r2, r5
 80166a8:	f280 8180 	bge.w	80169ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80166ac:	1c5e      	adds	r6, r3, #1
 80166ae:	f2c0 817d 	blt.w	80169ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80166b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80166b4:	4293      	cmp	r3, r2
 80166b6:	f280 8179 	bge.w	80169ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80166ba:	9b08      	ldr	r3, [sp, #32]
 80166bc:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80166be:	9315      	str	r3, [sp, #84]	; 0x54
 80166c0:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80166c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80166c6:	2b00      	cmp	r3, #0
 80166c8:	dde2      	ble.n	8016690 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 80166ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80166cc:	1419      	asrs	r1, r3, #16
 80166ce:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80166d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80166d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80166d6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80166da:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80166dc:	141b      	asrs	r3, r3, #16
 80166de:	f100 81d3 	bmi.w	8016a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 80166e2:	1c58      	adds	r0, r3, #1
 80166e4:	4285      	cmp	r5, r0
 80166e6:	f340 81d1 	ble.w	8016a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80166ea:	2900      	cmp	r1, #0
 80166ec:	f2c0 81ce 	blt.w	8016a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80166f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80166f2:	1c48      	adds	r0, r1, #1
 80166f4:	4284      	cmp	r4, r0
 80166f6:	f340 81c9 	ble.w	8016a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80166fa:	fb01 3105 	mla	r1, r1, r5, r3
 80166fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016700:	fa1f fe82 	uxth.w	lr, r2
 8016704:	eb03 0a01 	add.w	sl, r3, r1
 8016708:	ea4f 100e 	mov.w	r0, lr, lsl #4
 801670c:	f813 9001 	ldrb.w	r9, [r3, r1]
 8016710:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016714:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016718:	b29b      	uxth	r3, r3
 801671a:	f1bc 0f00 	cmp.w	ip, #0
 801671e:	f000 8195 	beq.w	8016a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 8016722:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016726:	940e      	str	r4, [sp, #56]	; 0x38
 8016728:	eb0a 0b05 	add.w	fp, sl, r5
 801672c:	fa1f fa8c 	uxth.w	sl, ip
 8016730:	fb0a fe0e 	mul.w	lr, sl, lr
 8016734:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016738:	fa1f fa8a 	uxth.w	sl, sl
 801673c:	eba0 000e 	sub.w	r0, r0, lr
 8016740:	eba3 030a 	sub.w	r3, r3, sl
 8016744:	b280      	uxth	r0, r0
 8016746:	fb08 f000 	mul.w	r0, r8, r0
 801674a:	b29b      	uxth	r3, r3
 801674c:	fb09 0303 	mla	r3, r9, r3, r0
 8016750:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016752:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016756:	940f      	str	r4, [sp, #60]	; 0x3c
 8016758:	fb0a 3300 	mla	r3, sl, r0, r3
 801675c:	fb0e 3304 	mla	r3, lr, r4, r3
 8016760:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016764:	2b00      	cmp	r3, #0
 8016766:	f000 8114 	beq.w	8016992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801676a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801676c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801676e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016772:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016776:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 801677a:	f000 816c 	beq.w	8016a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 801677e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016782:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016786:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801678a:	fb09 f101 	mul.w	r1, r9, r1
 801678e:	fb0a fe0e 	mul.w	lr, sl, lr
 8016792:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016796:	f101 0b20 	add.w	fp, r1, #32
 801679a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801679e:	44ce      	add	lr, r9
 80167a0:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 80167a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80167a8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80167ac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80167b0:	ea4e 0909 	orr.w	r9, lr, r9
 80167b4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80167b8:	8841      	ldrh	r1, [r0, #2]
 80167ba:	d019      	beq.n	80167f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 80167bc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80167c0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80167c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80167c8:	fb0a fe0e 	mul.w	lr, sl, lr
 80167cc:	fb08 f801 	mul.w	r8, r8, r1
 80167d0:	f108 0b20 	add.w	fp, r8, #32
 80167d4:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80167d8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80167dc:	448e      	add	lr, r1
 80167de:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80167e2:	0a09      	lsrs	r1, r1, #8
 80167e4:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 80167e8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80167ec:	ea4a 0101 	orr.w	r1, sl, r1
 80167f0:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80167f4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80167f8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80167fc:	ea4e 0909 	orr.w	r9, lr, r9
 8016800:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8016804:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016808:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801680c:	ea4e 0e01 	orr.w	lr, lr, r1
 8016810:	f1bc 0f00 	cmp.w	ip, #0
 8016814:	f000 8121 	beq.w	8016a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8016818:	9912      	ldr	r1, [sp, #72]	; 0x48
 801681a:	eb00 0801 	add.w	r8, r0, r1
 801681e:	5a41      	ldrh	r1, [r0, r1]
 8016820:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016822:	28ff      	cmp	r0, #255	; 0xff
 8016824:	d019      	beq.n	801685a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8016826:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016828:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801682c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016830:	fb04 fb01 	mul.w	fp, r4, r1
 8016834:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016838:	fb0a fa00 	mul.w	sl, sl, r0
 801683c:	f10b 0020 	add.w	r0, fp, #32
 8016840:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016844:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016848:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801684c:	4451      	add	r1, sl
 801684e:	0a00      	lsrs	r0, r0, #8
 8016850:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016854:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016858:	4301      	orrs	r1, r0
 801685a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801685c:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8016860:	2cff      	cmp	r4, #255	; 0xff
 8016862:	d01a      	beq.n	801689a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8016864:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8016868:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801686c:	fb04 fb00 	mul.w	fp, r4, r0
 8016870:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016874:	fb0a fa08 	mul.w	sl, sl, r8
 8016878:	f10b 0820 	add.w	r8, fp, #32
 801687c:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8016880:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8016884:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016888:	4450      	add	r0, sl
 801688a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801688e:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016892:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016896:	ea40 0008 	orr.w	r0, r0, r8
 801689a:	fb1c f802 	smulbb	r8, ip, r2
 801689e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80168a2:	f1cc 0a10 	rsb	sl, ip, #16
 80168a6:	ebaa 0a02 	sub.w	sl, sl, r2
 80168aa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80168ae:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 80168b2:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 80168b6:	fb0e f202 	mul.w	r2, lr, r2
 80168ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80168be:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 80168c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80168c6:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80168ca:	fb09 220a 	mla	r2, r9, sl, r2
 80168ce:	ea4b 0101 	orr.w	r1, fp, r1
 80168d2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80168d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80168da:	fb0c 2201 	mla	r2, ip, r1, r2
 80168de:	ea4e 0000 	orr.w	r0, lr, r0
 80168e2:	fb08 2800 	mla	r8, r8, r0, r2
 80168e6:	ea4f 5258 	mov.w	r2, r8, lsr #21
 80168ea:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80168ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80168f2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80168f6:	ea42 0808 	orr.w	r8, r2, r8
 80168fa:	fa1f f288 	uxth.w	r2, r8
 80168fe:	2bff      	cmp	r3, #255	; 0xff
 8016900:	d103      	bne.n	801690a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8016902:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016904:	29ff      	cmp	r1, #255	; 0xff
 8016906:	f000 80bd 	beq.w	8016a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 801690a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801690c:	f8b7 c000 	ldrh.w	ip, [r7]
 8016910:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016912:	434b      	muls	r3, r1
 8016914:	f103 0e01 	add.w	lr, r3, #1
 8016918:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 801691c:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8016920:	ea4f 202c 	mov.w	r0, ip, asr #8
 8016924:	fa5f fe8e 	uxtb.w	lr, lr
 8016928:	1213      	asrs	r3, r2, #8
 801692a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801692e:	fb10 f00e 	smulbb	r0, r0, lr
 8016932:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016936:	fb03 0301 	mla	r3, r3, r1, r0
 801693a:	b298      	uxth	r0, r3
 801693c:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8016940:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016944:	10d1      	asrs	r1, r2, #3
 8016946:	fa5f fc8c 	uxtb.w	ip, ip
 801694a:	00d2      	lsls	r2, r2, #3
 801694c:	fb1c fc0e 	smulbb	ip, ip, lr
 8016950:	b2d2      	uxtb	r2, r2
 8016952:	fb02 c204 	mla	r2, r2, r4, ip
 8016956:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801695a:	fb13 f30e 	smulbb	r3, r3, lr
 801695e:	b292      	uxth	r2, r2
 8016960:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016964:	fb01 3104 	mla	r1, r1, r4, r3
 8016968:	f102 0c01 	add.w	ip, r2, #1
 801696c:	1c43      	adds	r3, r0, #1
 801696e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016972:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016976:	b289      	uxth	r1, r1
 8016978:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801697c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016980:	4313      	orrs	r3, r2
 8016982:	1c4a      	adds	r2, r1, #1
 8016984:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016988:	0949      	lsrs	r1, r1, #5
 801698a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801698e:	430b      	orrs	r3, r1
 8016990:	803b      	strh	r3, [r7, #0]
 8016992:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016994:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016996:	4413      	add	r3, r2
 8016998:	932b      	str	r3, [sp, #172]	; 0xac
 801699a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801699c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801699e:	441a      	add	r2, r3
 80169a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80169a2:	922c      	str	r2, [sp, #176]	; 0xb0
 80169a4:	3b01      	subs	r3, #1
 80169a6:	3702      	adds	r7, #2
 80169a8:	9315      	str	r3, [sp, #84]	; 0x54
 80169aa:	e68b      	b.n	80166c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80169ac:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80169ae:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80169b0:	4413      	add	r3, r2
 80169b2:	932b      	str	r3, [sp, #172]	; 0xac
 80169b4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80169b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80169b8:	441a      	add	r2, r3
 80169ba:	9b08      	ldr	r3, [sp, #32]
 80169bc:	922c      	str	r2, [sp, #176]	; 0xb0
 80169be:	3b01      	subs	r3, #1
 80169c0:	9308      	str	r3, [sp, #32]
 80169c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169c4:	3302      	adds	r3, #2
 80169c6:	9309      	str	r3, [sp, #36]	; 0x24
 80169c8:	e630      	b.n	801662c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80169ca:	f47f ae42 	bne.w	8016652 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80169ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80169d0:	2b00      	cmp	r3, #0
 80169d2:	f340 81ea 	ble.w	8016daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80169d6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80169da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80169de:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80169e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80169e4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80169e8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80169ec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80169f0:	eef0 6a48 	vmov.f32	s13, s16
 80169f4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80169f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169fc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016a00:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8016a04:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016a08:	eef0 6a68 	vmov.f32	s13, s17
 8016a0c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016a10:	ee18 2a10 	vmov	r2, s16
 8016a14:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016a18:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a1c:	ee18 2a90 	vmov	r2, s17
 8016a20:	932d      	str	r3, [sp, #180]	; 0xb4
 8016a22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a24:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a28:	932e      	str	r3, [sp, #184]	; 0xb8
 8016a2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016a2c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016a2e:	3b01      	subs	r3, #1
 8016a30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a34:	9313      	str	r3, [sp, #76]	; 0x4c
 8016a36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a38:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8016a3c:	bf08      	it	eq
 8016a3e:	4613      	moveq	r3, r2
 8016a40:	9308      	str	r3, [sp, #32]
 8016a42:	eef0 8a67 	vmov.f32	s17, s15
 8016a46:	eeb0 8a47 	vmov.f32	s16, s14
 8016a4a:	e5e8      	b.n	801661e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8016a4c:	fb08 f000 	mul.w	r0, r8, r0
 8016a50:	fb09 0303 	mla	r3, r9, r3, r0
 8016a54:	e684      	b.n	8016760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 8016a56:	4689      	mov	r9, r1
 8016a58:	e6ac      	b.n	80167b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8016a5a:	f1c2 0010 	rsb	r0, r2, #16
 8016a5e:	fb0e f202 	mul.w	r2, lr, r2
 8016a62:	fb09 2900 	mla	r9, r9, r0, r2
 8016a66:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016a6a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016a6e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016a72:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016a76:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016a7a:	ea42 0909 	orr.w	r9, r2, r9
 8016a7e:	fa1f f289 	uxth.w	r2, r9
 8016a82:	e73c      	b.n	80168fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016a84:	803a      	strh	r2, [r7, #0]
 8016a86:	e784      	b.n	8016992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016a88:	1c5c      	adds	r4, r3, #1
 8016a8a:	d182      	bne.n	8016992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016a8c:	429d      	cmp	r5, r3
 8016a8e:	dd80      	ble.n	8016992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016a90:	1c48      	adds	r0, r1, #1
 8016a92:	f6ff af7e 	blt.w	8016992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016a96:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016a98:	4288      	cmp	r0, r1
 8016a9a:	f77f af7a 	ble.w	8016992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016a9e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016aa0:	9302      	str	r3, [sp, #8]
 8016aa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016aa4:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8016aa8:	e9cd c005 	strd	ip, r0, [sp, #20]
 8016aac:	e9cd 5300 	strd	r5, r3, [sp]
 8016ab0:	4639      	mov	r1, r7
 8016ab2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8016ab6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8016ab8:	f7ff fbcc 	bl	8016254 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8016abc:	e769      	b.n	8016992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016abe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016ac0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016ac4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ac6:	141f      	asrs	r7, r3, #16
 8016ac8:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016acc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016ace:	141b      	asrs	r3, r3, #16
 8016ad0:	fb05 3707 	mla	r7, r5, r7, r3
 8016ad4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016ad6:	fa1f fc82 	uxth.w	ip, r2
 8016ada:	eb03 0a07 	add.w	sl, r3, r7
 8016ade:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8016ae2:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016ae6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016aea:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8016aee:	b29b      	uxth	r3, r3
 8016af0:	2800      	cmp	r0, #0
 8016af2:	f000 813f 	beq.w	8016d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8016af6:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016afa:	9410      	str	r4, [sp, #64]	; 0x40
 8016afc:	eb0a 0b05 	add.w	fp, sl, r5
 8016b00:	fa1f fa80 	uxth.w	sl, r0
 8016b04:	fb0a fc0c 	mul.w	ip, sl, ip
 8016b08:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016b0c:	fa1f fa8a 	uxth.w	sl, sl
 8016b10:	eba1 010c 	sub.w	r1, r1, ip
 8016b14:	eba3 030a 	sub.w	r3, r3, sl
 8016b18:	b289      	uxth	r1, r1
 8016b1a:	fb08 f101 	mul.w	r1, r8, r1
 8016b1e:	b29b      	uxth	r3, r3
 8016b20:	fb09 1303 	mla	r3, r9, r3, r1
 8016b24:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016b26:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016b2a:	9411      	str	r4, [sp, #68]	; 0x44
 8016b2c:	fb0a 3301 	mla	r3, sl, r1, r3
 8016b30:	fb0c 3304 	mla	r3, ip, r4, r3
 8016b34:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016b38:	2b00      	cmp	r3, #0
 8016b3a:	f000 810d 	beq.w	8016d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016b3e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016b40:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016b42:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016b46:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8016b4a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016b4e:	f000 8116 	beq.w	8016d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8016b52:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016b56:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016b5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016b5e:	fb09 f707 	mul.w	r7, r9, r7
 8016b62:	fb0a fc0c 	mul.w	ip, sl, ip
 8016b66:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8016b6a:	f107 0b20 	add.w	fp, r7, #32
 8016b6e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016b72:	44cc      	add	ip, r9
 8016b74:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016b78:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016b7c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016b80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016b84:	ea4c 0909 	orr.w	r9, ip, r9
 8016b88:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016b8c:	884f      	ldrh	r7, [r1, #2]
 8016b8e:	d019      	beq.n	8016bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8016b90:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016b94:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016b98:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016b9c:	fb08 f807 	mul.w	r8, r8, r7
 8016ba0:	fb0a fc0c 	mul.w	ip, sl, ip
 8016ba4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016ba8:	f108 0b20 	add.w	fp, r8, #32
 8016bac:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016bb0:	44bc      	add	ip, r7
 8016bb2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016bb6:	0a3f      	lsrs	r7, r7, #8
 8016bb8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016bbc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016bc0:	ea4c 0707 	orr.w	r7, ip, r7
 8016bc4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016bc8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016bcc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016bd0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016bd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016bd8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016bdc:	ea4c 0909 	orr.w	r9, ip, r9
 8016be0:	ea4a 0707 	orr.w	r7, sl, r7
 8016be4:	2800      	cmp	r0, #0
 8016be6:	f000 80cc 	beq.w	8016d82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8016bea:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016bec:	eb01 0c04 	add.w	ip, r1, r4
 8016bf0:	f831 8004 	ldrh.w	r8, [r1, r4]
 8016bf4:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016bf6:	29ff      	cmp	r1, #255	; 0xff
 8016bf8:	d01a      	beq.n	8016c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8016bfa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016bfc:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8016c00:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016c04:	fb04 fb08 	mul.w	fp, r4, r8
 8016c08:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016c0c:	fb0a fa01 	mul.w	sl, sl, r1
 8016c10:	f10b 0120 	add.w	r1, fp, #32
 8016c14:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8016c18:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8016c1c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016c20:	44d0      	add	r8, sl
 8016c22:	0a09      	lsrs	r1, r1, #8
 8016c24:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8016c28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016c2c:	ea48 0801 	orr.w	r8, r8, r1
 8016c30:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016c32:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8016c36:	2cff      	cmp	r4, #255	; 0xff
 8016c38:	d01a      	beq.n	8016c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 8016c3a:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8016c3e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016c42:	fb04 fb01 	mul.w	fp, r4, r1
 8016c46:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016c4a:	fb0a fa0c 	mul.w	sl, sl, ip
 8016c4e:	f10b 0c20 	add.w	ip, fp, #32
 8016c52:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016c56:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8016c5a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016c5e:	4451      	add	r1, sl
 8016c60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016c64:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016c68:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016c6c:	ea41 010c 	orr.w	r1, r1, ip
 8016c70:	fb10 fc02 	smulbb	ip, r0, r2
 8016c74:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016c78:	f1c0 0a10 	rsb	sl, r0, #16
 8016c7c:	ebaa 0a02 	sub.w	sl, sl, r2
 8016c80:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8016c84:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016c88:	437a      	muls	r2, r7
 8016c8a:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8016c8e:	040f      	lsls	r7, r1, #16
 8016c90:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016c94:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016c98:	fb09 220a 	mla	r2, r9, sl, r2
 8016c9c:	ea4b 0808 	orr.w	r8, fp, r8
 8016ca0:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8016ca4:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016ca8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016cac:	fb00 2208 	mla	r2, r0, r8, r2
 8016cb0:	4339      	orrs	r1, r7
 8016cb2:	fb0c 2201 	mla	r2, ip, r1, r2
 8016cb6:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8016cba:	0952      	lsrs	r2, r2, #5
 8016cbc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016cc0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016cc4:	ea49 0202 	orr.w	r2, r9, r2
 8016cc8:	2bff      	cmp	r3, #255	; 0xff
 8016cca:	b292      	uxth	r2, r2
 8016ccc:	d102      	bne.n	8016cd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8016cce:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016cd0:	29ff      	cmp	r1, #255	; 0xff
 8016cd2:	d067      	beq.n	8016da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8016cd4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016cd6:	f8be 0000 	ldrh.w	r0, [lr]
 8016cda:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016cdc:	434b      	muls	r3, r1
 8016cde:	1c59      	adds	r1, r3, #1
 8016ce0:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8016ce4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8016ce8:	1201      	asrs	r1, r0, #8
 8016cea:	b2db      	uxtb	r3, r3
 8016cec:	1217      	asrs	r7, r2, #8
 8016cee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016cf2:	fb11 f103 	smulbb	r1, r1, r3
 8016cf6:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 8016cfa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016cfe:	00c0      	lsls	r0, r0, #3
 8016d00:	fb07 1704 	mla	r7, r7, r4, r1
 8016d04:	b2c0      	uxtb	r0, r0
 8016d06:	10d1      	asrs	r1, r2, #3
 8016d08:	00d2      	lsls	r2, r2, #3
 8016d0a:	fb10 f003 	smulbb	r0, r0, r3
 8016d0e:	b2d2      	uxtb	r2, r2
 8016d10:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016d14:	fb02 0204 	mla	r2, r2, r4, r0
 8016d18:	fb1c fc03 	smulbb	ip, ip, r3
 8016d1c:	b2bf      	uxth	r7, r7
 8016d1e:	b292      	uxth	r2, r2
 8016d20:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016d24:	fb01 c104 	mla	r1, r1, r4, ip
 8016d28:	1c7b      	adds	r3, r7, #1
 8016d2a:	f102 0c01 	add.w	ip, r2, #1
 8016d2e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016d32:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8016d36:	b289      	uxth	r1, r1
 8016d38:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016d3c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016d40:	ea47 070c 	orr.w	r7, r7, ip
 8016d44:	f101 0c01 	add.w	ip, r1, #1
 8016d48:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8016d4c:	0949      	lsrs	r1, r1, #5
 8016d4e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016d52:	430f      	orrs	r7, r1
 8016d54:	f8ae 7000 	strh.w	r7, [lr]
 8016d58:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016d5a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016d5c:	4413      	add	r3, r2
 8016d5e:	932b      	str	r3, [sp, #172]	; 0xac
 8016d60:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016d62:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016d64:	441a      	add	r2, r3
 8016d66:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016d68:	922c      	str	r2, [sp, #176]	; 0xb0
 8016d6a:	3b01      	subs	r3, #1
 8016d6c:	f10e 0e02 	add.w	lr, lr, #2
 8016d70:	9315      	str	r3, [sp, #84]	; 0x54
 8016d72:	e489      	b.n	8016688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8016d74:	fb08 f101 	mul.w	r1, r8, r1
 8016d78:	fb09 1303 	mla	r3, r9, r3, r1
 8016d7c:	e6da      	b.n	8016b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8016d7e:	46b9      	mov	r9, r7
 8016d80:	e702      	b.n	8016b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 8016d82:	f1c2 0110 	rsb	r1, r2, #16
 8016d86:	437a      	muls	r2, r7
 8016d88:	fb09 2901 	mla	r9, r9, r1, r2
 8016d8c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016d90:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016d94:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016d98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016d9c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016da0:	4302      	orrs	r2, r0
 8016da2:	e791      	b.n	8016cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8016da4:	f8ae 2000 	strh.w	r2, [lr]
 8016da8:	e7d6      	b.n	8016d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016daa:	b019      	add	sp, #100	; 0x64
 8016dac:	ecbd 8b08 	vpop	{d8-d11}
 8016db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016db8:	b087      	sub	sp, #28
 8016dba:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8016dbe:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8016dc2:	9105      	str	r1, [sp, #20]
 8016dc4:	fb00 e604 	mla	r6, r0, r4, lr
 8016dc8:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8016dcc:	9102      	str	r1, [sp, #8]
 8016dce:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8016dd2:	9103      	str	r1, [sp, #12]
 8016dd4:	9905      	ldr	r1, [sp, #20]
 8016dd6:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8016dda:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8016dde:	8809      	ldrh	r1, [r1, #0]
 8016de0:	2800      	cmp	r0, #0
 8016de2:	eb02 0a06 	add.w	sl, r2, r6
 8016de6:	f2c0 80ca 	blt.w	8016f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8016dea:	4287      	cmp	r7, r0
 8016dec:	f340 80c7 	ble.w	8016f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8016df0:	f1be 0f00 	cmp.w	lr, #0
 8016df4:	f2c0 80bf 	blt.w	8016f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8016df8:	4574      	cmp	r4, lr
 8016dfa:	f340 80bc 	ble.w	8016f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8016dfe:	f812 c006 	ldrb.w	ip, [r2, r6]
 8016e02:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 8016e06:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016e0a:	d01c      	beq.n	8016e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8016e0c:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8016e10:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016e14:	4372      	muls	r2, r6
 8016e16:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8016e1a:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8016e1e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016e22:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016e26:	fb0c f609 	mul.w	r6, ip, r9
 8016e2a:	eb03 0902 	add.w	r9, r3, r2
 8016e2e:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8016e32:	f106 0820 	add.w	r8, r6, #32
 8016e36:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8016e3a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016e3e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016e42:	ea49 0908 	orr.w	r9, r9, r8
 8016e46:	fa1f f989 	uxth.w	r9, r9
 8016e4a:	f11e 0301 	adds.w	r3, lr, #1
 8016e4e:	f100 809b 	bmi.w	8016f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8016e52:	429c      	cmp	r4, r3
 8016e54:	f340 8098 	ble.w	8016f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8016e58:	2d00      	cmp	r5, #0
 8016e5a:	f000 8095 	beq.w	8016f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8016e5e:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8016e62:	9b03      	ldr	r3, [sp, #12]
 8016e64:	2eff      	cmp	r6, #255	; 0xff
 8016e66:	885b      	ldrh	r3, [r3, #2]
 8016e68:	d01b      	beq.n	8016ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 8016e6a:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8016e6e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016e72:	fb08 f202 	mul.w	r2, r8, r2
 8016e76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016e7a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016e7e:	fb06 f803 	mul.w	r8, r6, r3
 8016e82:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016e86:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016e8a:	441a      	add	r2, r3
 8016e8c:	f108 0320 	add.w	r3, r8, #32
 8016e90:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016e94:	0a1b      	lsrs	r3, r3, #8
 8016e96:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016e9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016e9e:	ea4b 0303 	orr.w	r3, fp, r3
 8016ea2:	b29b      	uxth	r3, r3
 8016ea4:	9301      	str	r3, [sp, #4]
 8016ea6:	3001      	adds	r0, #1
 8016ea8:	d474      	bmi.n	8016f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8016eaa:	4287      	cmp	r7, r0
 8016eac:	dd72      	ble.n	8016f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8016eae:	9a02      	ldr	r2, [sp, #8]
 8016eb0:	2a00      	cmp	r2, #0
 8016eb2:	f000 8111 	beq.w	80170d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 8016eb6:	f1be 0f00 	cmp.w	lr, #0
 8016eba:	db68      	blt.n	8016f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8016ebc:	4574      	cmp	r4, lr
 8016ebe:	dd66      	ble.n	8016f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8016ec0:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8016ec4:	9a03      	ldr	r2, [sp, #12]
 8016ec6:	2fff      	cmp	r7, #255	; 0xff
 8016ec8:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8016ecc:	d01c      	beq.n	8016f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8016ece:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8016ed2:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8016ed6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016eda:	fb07 fb00 	mul.w	fp, r7, r0
 8016ede:	fb08 f802 	mul.w	r8, r8, r2
 8016ee2:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8016ee6:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8016eea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016eee:	4490      	add	r8, r2
 8016ef0:	f10b 0220 	add.w	r2, fp, #32
 8016ef4:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8016ef8:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016efc:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8016f00:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016f04:	ea40 000b 	orr.w	r0, r0, fp
 8016f08:	b280      	uxth	r0, r0
 8016f0a:	f11e 0e01 	adds.w	lr, lr, #1
 8016f0e:	d446      	bmi.n	8016f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8016f10:	4574      	cmp	r4, lr
 8016f12:	dd44      	ble.n	8016f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8016f14:	2d00      	cmp	r5, #0
 8016f16:	d045      	beq.n	8016fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 8016f18:	1c62      	adds	r2, r4, #1
 8016f1a:	9b03      	ldr	r3, [sp, #12]
 8016f1c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016f20:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016f24:	2cff      	cmp	r4, #255	; 0xff
 8016f26:	d01c      	beq.n	8016f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8016f28:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8016f2c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016f30:	fb08 fe0e 	mul.w	lr, r8, lr
 8016f34:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8016f38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016f3c:	fb04 f802 	mul.w	r8, r4, r2
 8016f40:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8016f44:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016f48:	4472      	add	r2, lr
 8016f4a:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8016f4e:	f108 0a20 	add.w	sl, r8, #32
 8016f52:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8016f56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016f5a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016f5e:	ea42 020a 	orr.w	r2, r2, sl
 8016f62:	b292      	uxth	r2, r2
 8016f64:	2d0f      	cmp	r5, #15
 8016f66:	d91f      	bls.n	8016fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8016f68:	4b5f      	ldr	r3, [pc, #380]	; (80170e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8016f6a:	4a60      	ldr	r2, [pc, #384]	; (80170ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8016f6c:	4860      	ldr	r0, [pc, #384]	; (80170f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8016f6e:	f240 210d 	movw	r1, #525	; 0x20d
 8016f72:	f003 fc39 	bl	801a7e8 <__assert_func>
 8016f76:	4689      	mov	r9, r1
 8016f78:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8016f7c:	e765      	b.n	8016e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8016f7e:	26ff      	movs	r6, #255	; 0xff
 8016f80:	9101      	str	r1, [sp, #4]
 8016f82:	4689      	mov	r9, r1
 8016f84:	46b4      	mov	ip, r6
 8016f86:	e78e      	b.n	8016ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8016f88:	9101      	str	r1, [sp, #4]
 8016f8a:	26ff      	movs	r6, #255	; 0xff
 8016f8c:	e78b      	b.n	8016ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8016f8e:	4608      	mov	r0, r1
 8016f90:	27ff      	movs	r7, #255	; 0xff
 8016f92:	e7ba      	b.n	8016f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8016f94:	24ff      	movs	r4, #255	; 0xff
 8016f96:	460a      	mov	r2, r1
 8016f98:	4608      	mov	r0, r1
 8016f9a:	4627      	mov	r7, r4
 8016f9c:	e7e2      	b.n	8016f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8016f9e:	460a      	mov	r2, r1
 8016fa0:	24ff      	movs	r4, #255	; 0xff
 8016fa2:	e7df      	b.n	8016f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8016fa4:	460a      	mov	r2, r1
 8016fa6:	24ff      	movs	r4, #255	; 0xff
 8016fa8:	9b02      	ldr	r3, [sp, #8]
 8016faa:	2b0f      	cmp	r3, #15
 8016fac:	d8dc      	bhi.n	8016f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8016fae:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8016fb2:	fa1f f885 	uxth.w	r8, r5
 8016fb6:	fb08 fa0e 	mul.w	sl, r8, lr
 8016fba:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8016fbe:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8016fc2:	9303      	str	r3, [sp, #12]
 8016fc4:	fa1f f38e 	uxth.w	r3, lr
 8016fc8:	9304      	str	r3, [sp, #16]
 8016fca:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8016fce:	9b02      	ldr	r3, [sp, #8]
 8016fd0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016fd4:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8016fd8:	fb15 fe03 	smulbb	lr, r5, r3
 8016fdc:	ea48 0809 	orr.w	r8, r8, r9
 8016fe0:	f1c3 0910 	rsb	r9, r3, #16
 8016fe4:	9b01      	ldr	r3, [sp, #4]
 8016fe6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016fea:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016fee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016ff2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016ff6:	eba9 0905 	sub.w	r9, r9, r5
 8016ffa:	ea4b 0303 	orr.w	r3, fp, r3
 8016ffe:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8017002:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8017006:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 801700a:	436b      	muls	r3, r5
 801700c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017010:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017014:	ea4b 0202 	orr.w	r2, fp, r2
 8017018:	fb09 3308 	mla	r3, r9, r8, r3
 801701c:	fb0e 3302 	mla	r3, lr, r2, r3
 8017020:	0402      	lsls	r2, r0, #16
 8017022:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017026:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801702a:	4310      	orrs	r0, r2
 801702c:	9a02      	ldr	r2, [sp, #8]
 801702e:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8017032:	9a03      	ldr	r2, [sp, #12]
 8017034:	fb0e 3e00 	mla	lr, lr, r0, r3
 8017038:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801703c:	9a04      	ldr	r2, [sp, #16]
 801703e:	1a80      	subs	r0, r0, r2
 8017040:	9a03      	ldr	r2, [sp, #12]
 8017042:	eba2 020a 	sub.w	r2, r2, sl
 8017046:	b292      	uxth	r2, r2
 8017048:	b280      	uxth	r0, r0
 801704a:	4356      	muls	r6, r2
 801704c:	9a04      	ldr	r2, [sp, #16]
 801704e:	fb0c 6600 	mla	r6, ip, r0, r6
 8017052:	fb02 6707 	mla	r7, r2, r7, r6
 8017056:	fb0a 7404 	mla	r4, sl, r4, r7
 801705a:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801705e:	1208      	asrs	r0, r1, #8
 8017060:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017064:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8017068:	b2e4      	uxtb	r4, r4
 801706a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801706e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017072:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017076:	4360      	muls	r0, r4
 8017078:	ea43 0e0e 	orr.w	lr, r3, lr
 801707c:	fa1f f38e 	uxth.w	r3, lr
 8017080:	1c42      	adds	r2, r0, #1
 8017082:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017086:	1218      	asrs	r0, r3, #8
 8017088:	10cd      	asrs	r5, r1, #3
 801708a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801708e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017092:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017096:	4a17      	ldr	r2, [pc, #92]	; (80170f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8017098:	4365      	muls	r5, r4
 801709a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801709e:	1c6a      	adds	r2, r5, #1
 80170a0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80170a4:	00c9      	lsls	r1, r1, #3
 80170a6:	10da      	asrs	r2, r3, #3
 80170a8:	b2c9      	uxtb	r1, r1
 80170aa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80170ae:	434c      	muls	r4, r1
 80170b0:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80170b4:	1c61      	adds	r1, r4, #1
 80170b6:	00d2      	lsls	r2, r2, #3
 80170b8:	00db      	lsls	r3, r3, #3
 80170ba:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 80170be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80170c2:	b2db      	uxtb	r3, r3
 80170c4:	4302      	orrs	r2, r0
 80170c6:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80170ca:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 80170ce:	9a05      	ldr	r2, [sp, #20]
 80170d0:	8013      	strh	r3, [r2, #0]
 80170d2:	b007      	add	sp, #28
 80170d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170d8:	2d0f      	cmp	r5, #15
 80170da:	f63f af45 	bhi.w	8016f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 80170de:	24ff      	movs	r4, #255	; 0xff
 80170e0:	460a      	mov	r2, r1
 80170e2:	4608      	mov	r0, r1
 80170e4:	4627      	mov	r7, r4
 80170e6:	e762      	b.n	8016fae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 80170e8:	0801eb1d 	.word	0x0801eb1d
 80170ec:	0801f075 	.word	0x0801f075
 80170f0:	0801eba5 	.word	0x0801eba5
 80170f4:	fffff800 	.word	0xfffff800

080170f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80170f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170fc:	ed2d 8b08 	vpush	{d8-d11}
 8017100:	b095      	sub	sp, #84	; 0x54
 8017102:	eeb0 aa40 	vmov.f32	s20, s0
 8017106:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017108:	9306      	str	r3, [sp, #24]
 801710a:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801710e:	9110      	str	r1, [sp, #64]	; 0x40
 8017110:	9308      	str	r3, [sp, #32]
 8017112:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017116:	9013      	str	r0, [sp, #76]	; 0x4c
 8017118:	6870      	ldr	r0, [r6, #4]
 801711a:	9212      	str	r2, [sp, #72]	; 0x48
 801711c:	fb00 1303 	mla	r3, r0, r3, r1
 8017120:	6831      	ldr	r1, [r6, #0]
 8017122:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8017124:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8017128:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801712c:	9307      	str	r3, [sp, #28]
 801712e:	6813      	ldr	r3, [r2, #0]
 8017130:	9309      	str	r3, [sp, #36]	; 0x24
 8017132:	6853      	ldr	r3, [r2, #4]
 8017134:	930a      	str	r3, [sp, #40]	; 0x28
 8017136:	006b      	lsls	r3, r5, #1
 8017138:	eef0 9a60 	vmov.f32	s19, s1
 801713c:	eeb0 9a41 	vmov.f32	s18, s2
 8017140:	eeb0 8a62 	vmov.f32	s16, s5
 8017144:	eef0 8a43 	vmov.f32	s17, s6
 8017148:	eef0 ba44 	vmov.f32	s23, s8
 801714c:	eeb0 ba64 	vmov.f32	s22, s9
 8017150:	eef0 aa45 	vmov.f32	s21, s10
 8017154:	930f      	str	r3, [sp, #60]	; 0x3c
 8017156:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017158:	2b00      	cmp	r3, #0
 801715a:	dc03      	bgt.n	8017164 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801715c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801715e:	2b00      	cmp	r3, #0
 8017160:	f340 83a3 	ble.w	80178aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8017164:	9b06      	ldr	r3, [sp, #24]
 8017166:	2b00      	cmp	r3, #0
 8017168:	f340 81bc 	ble.w	80174e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 801716c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801716e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017170:	1412      	asrs	r2, r2, #16
 8017172:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017176:	d42f      	bmi.n	80171d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017178:	1c51      	adds	r1, r2, #1
 801717a:	428d      	cmp	r5, r1
 801717c:	dd2f      	ble.n	80171de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801717e:	2b00      	cmp	r3, #0
 8017180:	db2d      	blt.n	80171de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017182:	9808      	ldr	r0, [sp, #32]
 8017184:	1c59      	adds	r1, r3, #1
 8017186:	4288      	cmp	r0, r1
 8017188:	dd29      	ble.n	80171de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801718a:	9b06      	ldr	r3, [sp, #24]
 801718c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801718e:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8017190:	3b01      	subs	r3, #1
 8017192:	fb02 1203 	mla	r2, r2, r3, r1
 8017196:	1412      	asrs	r2, r2, #16
 8017198:	d42b      	bmi.n	80171f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801719a:	3201      	adds	r2, #1
 801719c:	4295      	cmp	r5, r2
 801719e:	dd28      	ble.n	80171f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80171a0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80171a2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80171a4:	fb02 1303 	mla	r3, r2, r3, r1
 80171a8:	141b      	asrs	r3, r3, #16
 80171aa:	d422      	bmi.n	80171f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80171ac:	9a08      	ldr	r2, [sp, #32]
 80171ae:	3301      	adds	r3, #1
 80171b0:	429a      	cmp	r2, r3
 80171b2:	dd1e      	ble.n	80171f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80171b4:	9b06      	ldr	r3, [sp, #24]
 80171b6:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80171ba:	9311      	str	r3, [sp, #68]	; 0x44
 80171bc:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80171c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80171c2:	2b00      	cmp	r3, #0
 80171c4:	f300 8208 	bgt.w	80175d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 80171c8:	9b06      	ldr	r3, [sp, #24]
 80171ca:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80171ce:	9b07      	ldr	r3, [sp, #28]
 80171d0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80171d4:	9307      	str	r3, [sp, #28]
 80171d6:	e187      	b.n	80174e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 80171d8:	1c57      	adds	r7, r2, #1
 80171da:	f040 8174 	bne.w	80174c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80171de:	42aa      	cmp	r2, r5
 80171e0:	f280 8171 	bge.w	80174c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80171e4:	1c5e      	adds	r6, r3, #1
 80171e6:	f2c0 816e 	blt.w	80174c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80171ea:	9a08      	ldr	r2, [sp, #32]
 80171ec:	4293      	cmp	r3, r2
 80171ee:	f280 816a 	bge.w	80174c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80171f2:	9b06      	ldr	r3, [sp, #24]
 80171f4:	9f07      	ldr	r7, [sp, #28]
 80171f6:	9311      	str	r3, [sp, #68]	; 0x44
 80171f8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80171fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80171fe:	2b00      	cmp	r3, #0
 8017200:	dde2      	ble.n	80171c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8017202:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017204:	1419      	asrs	r1, r3, #16
 8017206:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017208:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801720c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801720e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017212:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017214:	141b      	asrs	r3, r3, #16
 8017216:	f100 81c4 	bmi.w	80175a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 801721a:	1c58      	adds	r0, r3, #1
 801721c:	4285      	cmp	r5, r0
 801721e:	f340 81c2 	ble.w	80175a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017222:	2900      	cmp	r1, #0
 8017224:	f2c0 81bf 	blt.w	80175a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017228:	9c08      	ldr	r4, [sp, #32]
 801722a:	1c48      	adds	r0, r1, #1
 801722c:	4284      	cmp	r4, r0
 801722e:	f340 81ba 	ble.w	80175a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017232:	fb01 3105 	mla	r1, r1, r5, r3
 8017236:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017238:	fa1f fe82 	uxth.w	lr, r2
 801723c:	eb03 0a01 	add.w	sl, r3, r1
 8017240:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8017244:	f813 9001 	ldrb.w	r9, [r3, r1]
 8017248:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801724c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017250:	b29b      	uxth	r3, r3
 8017252:	f1bc 0f00 	cmp.w	ip, #0
 8017256:	f000 8186 	beq.w	8017566 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 801725a:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801725e:	940b      	str	r4, [sp, #44]	; 0x2c
 8017260:	eb0a 0b05 	add.w	fp, sl, r5
 8017264:	fa1f fa8c 	uxth.w	sl, ip
 8017268:	fb0a fe0e 	mul.w	lr, sl, lr
 801726c:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017270:	fa1f fa8a 	uxth.w	sl, sl
 8017274:	eba0 000e 	sub.w	r0, r0, lr
 8017278:	eba3 030a 	sub.w	r3, r3, sl
 801727c:	b280      	uxth	r0, r0
 801727e:	fb08 f000 	mul.w	r0, r8, r0
 8017282:	b29b      	uxth	r3, r3
 8017284:	fb09 0303 	mla	r3, r9, r3, r0
 8017288:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801728a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801728e:	940c      	str	r4, [sp, #48]	; 0x30
 8017290:	fb0a 3300 	mla	r3, sl, r0, r3
 8017294:	fb0e 3304 	mla	r3, lr, r4, r3
 8017298:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801729c:	2b00      	cmp	r3, #0
 801729e:	f000 8105 	beq.w	80174ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80172a2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80172a4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80172a6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80172aa:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80172ae:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 80172b2:	f000 815d 	beq.w	8017570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 80172b6:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80172ba:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80172be:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80172c2:	fb09 f101 	mul.w	r1, r9, r1
 80172c6:	fb0a fe0e 	mul.w	lr, sl, lr
 80172ca:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80172ce:	f101 0b20 	add.w	fp, r1, #32
 80172d2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80172d6:	44ce      	add	lr, r9
 80172d8:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 80172dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80172e0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80172e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80172e8:	ea4e 0909 	orr.w	r9, lr, r9
 80172ec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80172f0:	8841      	ldrh	r1, [r0, #2]
 80172f2:	d019      	beq.n	8017328 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 80172f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80172f8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80172fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017300:	fb0a fe0e 	mul.w	lr, sl, lr
 8017304:	fb08 f801 	mul.w	r8, r8, r1
 8017308:	f108 0b20 	add.w	fp, r8, #32
 801730c:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8017310:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017314:	448e      	add	lr, r1
 8017316:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 801731a:	0a09      	lsrs	r1, r1, #8
 801731c:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8017320:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017324:	ea4a 0101 	orr.w	r1, sl, r1
 8017328:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801732c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017330:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017334:	ea4e 0909 	orr.w	r9, lr, r9
 8017338:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 801733c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017340:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017344:	ea4e 0e01 	orr.w	lr, lr, r1
 8017348:	f1bc 0f00 	cmp.w	ip, #0
 801734c:	f000 8112 	beq.w	8017574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8017350:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8017352:	eb00 0801 	add.w	r8, r0, r1
 8017356:	5a41      	ldrh	r1, [r0, r1]
 8017358:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801735a:	28ff      	cmp	r0, #255	; 0xff
 801735c:	d019      	beq.n	8017392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 801735e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017360:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017364:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017368:	fb04 fb01 	mul.w	fp, r4, r1
 801736c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017370:	fb0a fa00 	mul.w	sl, sl, r0
 8017374:	f10b 0020 	add.w	r0, fp, #32
 8017378:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 801737c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017380:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017384:	4451      	add	r1, sl
 8017386:	0a00      	lsrs	r0, r0, #8
 8017388:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801738c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017390:	4301      	orrs	r1, r0
 8017392:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017394:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8017398:	2cff      	cmp	r4, #255	; 0xff
 801739a:	d01a      	beq.n	80173d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 801739c:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 80173a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80173a4:	fb04 fb00 	mul.w	fp, r4, r0
 80173a8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80173ac:	fb0a fa08 	mul.w	sl, sl, r8
 80173b0:	f10b 0820 	add.w	r8, fp, #32
 80173b4:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 80173b8:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 80173bc:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80173c0:	4450      	add	r0, sl
 80173c2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80173c6:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80173ca:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80173ce:	ea40 0008 	orr.w	r0, r0, r8
 80173d2:	fb1c f802 	smulbb	r8, ip, r2
 80173d6:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80173da:	f1cc 0a10 	rsb	sl, ip, #16
 80173de:	ebaa 0a02 	sub.w	sl, sl, r2
 80173e2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80173e6:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 80173ea:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 80173ee:	fb0e f202 	mul.w	r2, lr, r2
 80173f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80173f6:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 80173fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80173fe:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8017402:	fb09 220a 	mla	r2, r9, sl, r2
 8017406:	ea4b 0101 	orr.w	r1, fp, r1
 801740a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801740e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017412:	fb0c 2201 	mla	r2, ip, r1, r2
 8017416:	ea4e 0000 	orr.w	r0, lr, r0
 801741a:	fb08 2800 	mla	r8, r8, r0, r2
 801741e:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8017422:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017426:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801742a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801742e:	ea42 0808 	orr.w	r8, r2, r8
 8017432:	fa1f f288 	uxth.w	r2, r8
 8017436:	2bff      	cmp	r3, #255	; 0xff
 8017438:	f000 80b1 	beq.w	801759e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 801743c:	f8b7 8000 	ldrh.w	r8, [r7]
 8017440:	43db      	mvns	r3, r3
 8017442:	ea4f 2028 	mov.w	r0, r8, asr #8
 8017446:	fa5f fe83 	uxtb.w	lr, r3
 801744a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801744e:	fb00 f00e 	mul.w	r0, r0, lr
 8017452:	1c41      	adds	r1, r0, #1
 8017454:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017458:	1210      	asrs	r0, r2, #8
 801745a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801745e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017462:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8017466:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801746a:	495a      	ldr	r1, [pc, #360]	; (80175d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 801746c:	fb0c fc0e 	mul.w	ip, ip, lr
 8017470:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8017474:	f10c 0101 	add.w	r1, ip, #1
 8017478:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801747c:	10d1      	asrs	r1, r2, #3
 801747e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017482:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8017486:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801748a:	b2db      	uxtb	r3, r3
 801748c:	00c9      	lsls	r1, r1, #3
 801748e:	fb03 f30e 	mul.w	r3, r3, lr
 8017492:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017496:	4301      	orrs	r1, r0
 8017498:	1c58      	adds	r0, r3, #1
 801749a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801749e:	00d3      	lsls	r3, r2, #3
 80174a0:	b2db      	uxtb	r3, r3
 80174a2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80174a6:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80174aa:	803b      	strh	r3, [r7, #0]
 80174ac:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80174ae:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80174b0:	4413      	add	r3, r2
 80174b2:	9327      	str	r3, [sp, #156]	; 0x9c
 80174b4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80174b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80174b8:	441a      	add	r2, r3
 80174ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80174bc:	9228      	str	r2, [sp, #160]	; 0xa0
 80174be:	3b01      	subs	r3, #1
 80174c0:	3702      	adds	r7, #2
 80174c2:	9311      	str	r3, [sp, #68]	; 0x44
 80174c4:	e69a      	b.n	80171fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80174c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80174c8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80174ca:	4413      	add	r3, r2
 80174cc:	9327      	str	r3, [sp, #156]	; 0x9c
 80174ce:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80174d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80174d2:	441a      	add	r2, r3
 80174d4:	9b06      	ldr	r3, [sp, #24]
 80174d6:	9228      	str	r2, [sp, #160]	; 0xa0
 80174d8:	3b01      	subs	r3, #1
 80174da:	9306      	str	r3, [sp, #24]
 80174dc:	9b07      	ldr	r3, [sp, #28]
 80174de:	3302      	adds	r3, #2
 80174e0:	9307      	str	r3, [sp, #28]
 80174e2:	e63f      	b.n	8017164 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80174e4:	f47f ae51 	bne.w	801718a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80174e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80174ea:	2b00      	cmp	r3, #0
 80174ec:	f340 81dd 	ble.w	80178aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 80174f0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80174f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80174f8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80174fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80174fe:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017502:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017506:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801750a:	eef0 6a48 	vmov.f32	s13, s16
 801750e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017512:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017516:	ee37 8a48 	vsub.f32	s16, s14, s16
 801751a:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 801751e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017522:	eef0 6a68 	vmov.f32	s13, s17
 8017526:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801752a:	ee18 2a10 	vmov	r2, s16
 801752e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017532:	fb92 f3f3 	sdiv	r3, r2, r3
 8017536:	ee18 2a90 	vmov	r2, s17
 801753a:	9329      	str	r3, [sp, #164]	; 0xa4
 801753c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801753e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017542:	932a      	str	r3, [sp, #168]	; 0xa8
 8017544:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017546:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017548:	3b01      	subs	r3, #1
 801754a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801754e:	9310      	str	r3, [sp, #64]	; 0x40
 8017550:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017552:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8017556:	bf08      	it	eq
 8017558:	4613      	moveq	r3, r2
 801755a:	9306      	str	r3, [sp, #24]
 801755c:	eef0 8a67 	vmov.f32	s17, s15
 8017560:	eeb0 8a47 	vmov.f32	s16, s14
 8017564:	e5f7      	b.n	8017156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8017566:	fb08 f000 	mul.w	r0, r8, r0
 801756a:	fb09 0303 	mla	r3, r9, r3, r0
 801756e:	e693      	b.n	8017298 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8017570:	4689      	mov	r9, r1
 8017572:	e6bb      	b.n	80172ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8017574:	f1c2 0010 	rsb	r0, r2, #16
 8017578:	fb0e f202 	mul.w	r2, lr, r2
 801757c:	fb09 2900 	mla	r9, r9, r0, r2
 8017580:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017584:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017588:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801758c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017590:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017594:	ea42 0909 	orr.w	r9, r2, r9
 8017598:	fa1f f289 	uxth.w	r2, r9
 801759c:	e74b      	b.n	8017436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 801759e:	803a      	strh	r2, [r7, #0]
 80175a0:	e784      	b.n	80174ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80175a2:	1c5c      	adds	r4, r3, #1
 80175a4:	d182      	bne.n	80174ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80175a6:	429d      	cmp	r5, r3
 80175a8:	dd80      	ble.n	80174ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80175aa:	1c48      	adds	r0, r1, #1
 80175ac:	f6ff af7e 	blt.w	80174ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80175b0:	9808      	ldr	r0, [sp, #32]
 80175b2:	4288      	cmp	r0, r1
 80175b4:	f77f af7a 	ble.w	80174ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80175b8:	e9cd 3102 	strd	r3, r1, [sp, #8]
 80175bc:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 80175c0:	e9cd 5000 	strd	r5, r0, [sp]
 80175c4:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80175c8:	4639      	mov	r1, r7
 80175ca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80175cc:	f7ff fbf2 	bl	8016db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80175d0:	e76c      	b.n	80174ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80175d2:	bf00      	nop
 80175d4:	fffff800 	.word	0xfffff800
 80175d8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80175da:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80175de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175e0:	141f      	asrs	r7, r3, #16
 80175e2:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80175e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80175e8:	141b      	asrs	r3, r3, #16
 80175ea:	fb05 3707 	mla	r7, r5, r7, r3
 80175ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80175f0:	fa1f fc82 	uxth.w	ip, r2
 80175f4:	eb03 0a07 	add.w	sl, r3, r7
 80175f8:	ea4f 110c 	mov.w	r1, ip, lsl #4
 80175fc:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017600:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017604:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8017608:	b29b      	uxth	r3, r3
 801760a:	2800      	cmp	r0, #0
 801760c:	f000 8132 	beq.w	8017874 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 8017610:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017614:	940d      	str	r4, [sp, #52]	; 0x34
 8017616:	eb0a 0b05 	add.w	fp, sl, r5
 801761a:	fa1f fa80 	uxth.w	sl, r0
 801761e:	fb0a fc0c 	mul.w	ip, sl, ip
 8017622:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017626:	fa1f fa8a 	uxth.w	sl, sl
 801762a:	eba1 010c 	sub.w	r1, r1, ip
 801762e:	eba3 030a 	sub.w	r3, r3, sl
 8017632:	b289      	uxth	r1, r1
 8017634:	fb08 f101 	mul.w	r1, r8, r1
 8017638:	b29b      	uxth	r3, r3
 801763a:	fb09 1303 	mla	r3, r9, r3, r1
 801763e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017640:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017644:	940e      	str	r4, [sp, #56]	; 0x38
 8017646:	fb0a 3301 	mla	r3, sl, r1, r3
 801764a:	fb0c 3304 	mla	r3, ip, r4, r3
 801764e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017652:	2b00      	cmp	r3, #0
 8017654:	f000 8100 	beq.w	8017858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8017658:	9909      	ldr	r1, [sp, #36]	; 0x24
 801765a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801765c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017660:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8017664:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017668:	f000 8109 	beq.w	801787e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 801766c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017670:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017674:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017678:	fb09 f707 	mul.w	r7, r9, r7
 801767c:	fb0a fc0c 	mul.w	ip, sl, ip
 8017680:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017684:	f107 0b20 	add.w	fp, r7, #32
 8017688:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801768c:	44cc      	add	ip, r9
 801768e:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017692:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017696:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801769a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801769e:	ea4c 0909 	orr.w	r9, ip, r9
 80176a2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80176a6:	884f      	ldrh	r7, [r1, #2]
 80176a8:	d019      	beq.n	80176de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 80176aa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80176ae:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80176b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80176b6:	fb08 f807 	mul.w	r8, r8, r7
 80176ba:	fb0a fc0c 	mul.w	ip, sl, ip
 80176be:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80176c2:	f108 0b20 	add.w	fp, r8, #32
 80176c6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80176ca:	44bc      	add	ip, r7
 80176cc:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80176d0:	0a3f      	lsrs	r7, r7, #8
 80176d2:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80176d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80176da:	ea4c 0707 	orr.w	r7, ip, r7
 80176de:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80176e2:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80176e6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80176ea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80176ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80176f2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80176f6:	ea4c 0909 	orr.w	r9, ip, r9
 80176fa:	ea4a 0707 	orr.w	r7, sl, r7
 80176fe:	2800      	cmp	r0, #0
 8017700:	f000 80bf 	beq.w	8017882 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8017704:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017706:	eb01 0c04 	add.w	ip, r1, r4
 801770a:	f831 8004 	ldrh.w	r8, [r1, r4]
 801770e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017710:	29ff      	cmp	r1, #255	; 0xff
 8017712:	d01a      	beq.n	801774a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 8017714:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017716:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 801771a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801771e:	fb04 fb08 	mul.w	fp, r4, r8
 8017722:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017726:	fb0a fa01 	mul.w	sl, sl, r1
 801772a:	f10b 0120 	add.w	r1, fp, #32
 801772e:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8017732:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8017736:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801773a:	44d0      	add	r8, sl
 801773c:	0a09      	lsrs	r1, r1, #8
 801773e:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8017742:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017746:	ea48 0801 	orr.w	r8, r8, r1
 801774a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801774c:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8017750:	2cff      	cmp	r4, #255	; 0xff
 8017752:	d01a      	beq.n	801778a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 8017754:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8017758:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801775c:	fb04 fb01 	mul.w	fp, r4, r1
 8017760:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017764:	fb0a fa0c 	mul.w	sl, sl, ip
 8017768:	f10b 0c20 	add.w	ip, fp, #32
 801776c:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017770:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8017774:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017778:	4451      	add	r1, sl
 801777a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801777e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017782:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017786:	ea41 010c 	orr.w	r1, r1, ip
 801778a:	fb10 fc02 	smulbb	ip, r0, r2
 801778e:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017792:	f1c0 0a10 	rsb	sl, r0, #16
 8017796:	ebaa 0a02 	sub.w	sl, sl, r2
 801779a:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 801779e:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80177a2:	437a      	muls	r2, r7
 80177a4:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 80177a8:	040f      	lsls	r7, r1, #16
 80177aa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80177ae:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80177b2:	fb09 220a 	mla	r2, r9, sl, r2
 80177b6:	ea4b 0808 	orr.w	r8, fp, r8
 80177ba:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 80177be:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80177c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80177c6:	fb00 2208 	mla	r2, r0, r8, r2
 80177ca:	4339      	orrs	r1, r7
 80177cc:	fb0c 2201 	mla	r2, ip, r1, r2
 80177d0:	ea4f 5952 	mov.w	r9, r2, lsr #21
 80177d4:	0952      	lsrs	r2, r2, #5
 80177d6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80177da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80177de:	ea49 0202 	orr.w	r2, r9, r2
 80177e2:	2bff      	cmp	r3, #255	; 0xff
 80177e4:	b292      	uxth	r2, r2
 80177e6:	d05d      	beq.n	80178a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 80177e8:	f8be 8000 	ldrh.w	r8, [lr]
 80177ec:	4c31      	ldr	r4, [pc, #196]	; (80178b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 80177ee:	43db      	mvns	r3, r3
 80177f0:	ea4f 2028 	mov.w	r0, r8, asr #8
 80177f4:	fa5f fc83 	uxtb.w	ip, r3
 80177f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80177fc:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8017800:	fb00 f00c 	mul.w	r0, r0, ip
 8017804:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017808:	fb07 f10c 	mul.w	r1, r7, ip
 801780c:	1c47      	adds	r7, r0, #1
 801780e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017812:	1217      	asrs	r7, r2, #8
 8017814:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017818:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801781c:	1c4f      	adds	r7, r1, #1
 801781e:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8017822:	10d1      	asrs	r1, r2, #3
 8017824:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017828:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 801782c:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8017830:	b2db      	uxtb	r3, r3
 8017832:	00c9      	lsls	r1, r1, #3
 8017834:	fb03 f30c 	mul.w	r3, r3, ip
 8017838:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801783c:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8017840:	4308      	orrs	r0, r1
 8017842:	00d2      	lsls	r2, r2, #3
 8017844:	1c59      	adds	r1, r3, #1
 8017846:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801784a:	b2d2      	uxtb	r2, r2
 801784c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8017850:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8017854:	f8ae 0000 	strh.w	r0, [lr]
 8017858:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801785a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801785c:	4413      	add	r3, r2
 801785e:	9327      	str	r3, [sp, #156]	; 0x9c
 8017860:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017862:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017864:	441a      	add	r2, r3
 8017866:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017868:	9228      	str	r2, [sp, #160]	; 0xa0
 801786a:	3b01      	subs	r3, #1
 801786c:	f10e 0e02 	add.w	lr, lr, #2
 8017870:	9311      	str	r3, [sp, #68]	; 0x44
 8017872:	e4a5      	b.n	80171c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8017874:	fb08 f101 	mul.w	r1, r8, r1
 8017878:	fb09 1303 	mla	r3, r9, r3, r1
 801787c:	e6e7      	b.n	801764e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 801787e:	46b9      	mov	r9, r7
 8017880:	e70f      	b.n	80176a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8017882:	f1c2 0110 	rsb	r1, r2, #16
 8017886:	437a      	muls	r2, r7
 8017888:	fb09 2901 	mla	r9, r9, r1, r2
 801788c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017890:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017894:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017898:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801789c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80178a0:	4302      	orrs	r2, r0
 80178a2:	e79e      	b.n	80177e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 80178a4:	f8ae 2000 	strh.w	r2, [lr]
 80178a8:	e7d6      	b.n	8017858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 80178aa:	b015      	add	sp, #84	; 0x54
 80178ac:	ecbd 8b08 	vpop	{d8-d11}
 80178b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178b4:	fffff800 	.word	0xfffff800

080178b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80178b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178bc:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 80178c0:	fb0c 4e03 	mla	lr, ip, r3, r4
 80178c4:	f1bc 0f00 	cmp.w	ip, #0
 80178c8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80178cc:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 80178d0:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 80178d4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80178d8:	8808      	ldrh	r0, [r1, #0]
 80178da:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 80178de:	db2f      	blt.n	8017940 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80178e0:	45e2      	cmp	sl, ip
 80178e2:	dd2d      	ble.n	8017940 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80178e4:	2c00      	cmp	r4, #0
 80178e6:	db29      	blt.n	801793c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80178e8:	42a3      	cmp	r3, r4
 80178ea:	dd27      	ble.n	801793c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80178ec:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 80178f0:	1c62      	adds	r2, r4, #1
 80178f2:	d428      	bmi.n	8017946 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80178f4:	4293      	cmp	r3, r2
 80178f6:	dd26      	ble.n	8017946 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80178f8:	b32f      	cbz	r7, 8017946 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80178fa:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80178fe:	f11c 0c01 	adds.w	ip, ip, #1
 8017902:	d424      	bmi.n	801794e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017904:	45e2      	cmp	sl, ip
 8017906:	dd22      	ble.n	801794e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017908:	2e00      	cmp	r6, #0
 801790a:	f000 809c 	beq.w	8017a46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 801790e:	2c00      	cmp	r4, #0
 8017910:	db1b      	blt.n	801794a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017912:	42a3      	cmp	r3, r4
 8017914:	dd19      	ble.n	801794a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017916:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801791a:	3401      	adds	r4, #1
 801791c:	d41a      	bmi.n	8017954 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801791e:	42a3      	cmp	r3, r4
 8017920:	dd18      	ble.n	8017954 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017922:	b1cf      	cbz	r7, 8017958 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8017924:	3301      	adds	r3, #1
 8017926:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801792a:	2f0f      	cmp	r7, #15
 801792c:	d915      	bls.n	801795a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801792e:	4b49      	ldr	r3, [pc, #292]	; (8017a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8017930:	4a49      	ldr	r2, [pc, #292]	; (8017a58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8017932:	484a      	ldr	r0, [pc, #296]	; (8017a5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8017934:	f240 11ef 	movw	r1, #495	; 0x1ef
 8017938:	f002 ff56 	bl	801a7e8 <__assert_func>
 801793c:	4681      	mov	r9, r0
 801793e:	e7d7      	b.n	80178f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8017940:	4686      	mov	lr, r0
 8017942:	4681      	mov	r9, r0
 8017944:	e7db      	b.n	80178fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017946:	4686      	mov	lr, r0
 8017948:	e7d9      	b.n	80178fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801794a:	4684      	mov	ip, r0
 801794c:	e7e5      	b.n	801791a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 801794e:	4603      	mov	r3, r0
 8017950:	4684      	mov	ip, r0
 8017952:	e7ea      	b.n	801792a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017954:	4603      	mov	r3, r0
 8017956:	e7e8      	b.n	801792a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017958:	4603      	mov	r3, r0
 801795a:	2e0f      	cmp	r6, #15
 801795c:	d8e7      	bhi.n	801792e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801795e:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8017962:	fb17 f806 	smulbb	r8, r7, r6
 8017966:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801796a:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 801796e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017972:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017976:	ea44 0909 	orr.w	r9, r4, r9
 801797a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801797e:	f1c6 0410 	rsb	r4, r6, #16
 8017982:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017986:	1be4      	subs	r4, r4, r7
 8017988:	041a      	lsls	r2, r3, #16
 801798a:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 801798e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8017992:	fb07 fe0e 	mul.w	lr, r7, lr
 8017996:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801799a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801799e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80179a2:	fb04 e409 	mla	r4, r4, r9, lr
 80179a6:	4313      	orrs	r3, r2
 80179a8:	ea4f 420c 	mov.w	r2, ip, lsl #16
 80179ac:	fb08 4303 	mla	r3, r8, r3, r4
 80179b0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80179b4:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 80179b8:	4322      	orrs	r2, r4
 80179ba:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80179be:	fb06 3202 	mla	r2, r6, r2, r3
 80179c2:	0d53      	lsrs	r3, r2, #21
 80179c4:	0952      	lsrs	r2, r2, #5
 80179c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80179ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80179ce:	431a      	orrs	r2, r3
 80179d0:	b293      	uxth	r3, r2
 80179d2:	b2af      	uxth	r7, r5
 80179d4:	1202      	asrs	r2, r0, #8
 80179d6:	43ed      	mvns	r5, r5
 80179d8:	b2ed      	uxtb	r5, r5
 80179da:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80179de:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80179e2:	fb12 f205 	smulbb	r2, r2, r5
 80179e6:	10c6      	asrs	r6, r0, #3
 80179e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80179ec:	fb0c 2c07 	mla	ip, ip, r7, r2
 80179f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80179f4:	10da      	asrs	r2, r3, #3
 80179f6:	fb16 f605 	smulbb	r6, r6, r5
 80179fa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80179fe:	fb02 6207 	mla	r2, r2, r7, r6
 8017a02:	b296      	uxth	r6, r2
 8017a04:	00c2      	lsls	r2, r0, #3
 8017a06:	00dc      	lsls	r4, r3, #3
 8017a08:	b2d2      	uxtb	r2, r2
 8017a0a:	b2e4      	uxtb	r4, r4
 8017a0c:	fb12 f205 	smulbb	r2, r2, r5
 8017a10:	fb04 2207 	mla	r2, r4, r7, r2
 8017a14:	fa1f fc8c 	uxth.w	ip, ip
 8017a18:	b292      	uxth	r2, r2
 8017a1a:	f10c 0301 	add.w	r3, ip, #1
 8017a1e:	1c50      	adds	r0, r2, #1
 8017a20:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017a24:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017a28:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017a2c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017a30:	4313      	orrs	r3, r2
 8017a32:	1c72      	adds	r2, r6, #1
 8017a34:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8017a38:	0952      	lsrs	r2, r2, #5
 8017a3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a3e:	4313      	orrs	r3, r2
 8017a40:	800b      	strh	r3, [r1, #0]
 8017a42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a46:	2f0f      	cmp	r7, #15
 8017a48:	f63f af71 	bhi.w	801792e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017a4c:	4603      	mov	r3, r0
 8017a4e:	4684      	mov	ip, r0
 8017a50:	e785      	b.n	801795e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8017a52:	bf00      	nop
 8017a54:	0801eb1d 	.word	0x0801eb1d
 8017a58:	0801f11e 	.word	0x0801f11e
 8017a5c:	0801eba5 	.word	0x0801eba5

08017a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a64:	ed2d 8b08 	vpush	{d8-d11}
 8017a68:	b095      	sub	sp, #84	; 0x54
 8017a6a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8017a6e:	9306      	str	r3, [sp, #24]
 8017a70:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8017a74:	9212      	str	r2, [sp, #72]	; 0x48
 8017a76:	9307      	str	r3, [sp, #28]
 8017a78:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017a7a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017a7e:	930c      	str	r3, [sp, #48]	; 0x30
 8017a80:	910b      	str	r1, [sp, #44]	; 0x2c
 8017a82:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017a86:	9013      	str	r0, [sp, #76]	; 0x4c
 8017a88:	6850      	ldr	r0, [r2, #4]
 8017a8a:	6812      	ldr	r2, [r2, #0]
 8017a8c:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8017a90:	fb00 1303 	mla	r3, r0, r3, r1
 8017a94:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8017a98:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017a9a:	681b      	ldr	r3, [r3, #0]
 8017a9c:	9309      	str	r3, [sp, #36]	; 0x24
 8017a9e:	007b      	lsls	r3, r7, #1
 8017aa0:	930a      	str	r3, [sp, #40]	; 0x28
 8017aa2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017aa4:	43db      	mvns	r3, r3
 8017aa6:	b2db      	uxtb	r3, r3
 8017aa8:	eeb0 aa40 	vmov.f32	s20, s0
 8017aac:	eef0 9a60 	vmov.f32	s19, s1
 8017ab0:	eeb0 9a41 	vmov.f32	s18, s2
 8017ab4:	eeb0 8a62 	vmov.f32	s16, s5
 8017ab8:	eef0 8a43 	vmov.f32	s17, s6
 8017abc:	eef0 ba44 	vmov.f32	s23, s8
 8017ac0:	eeb0 ba64 	vmov.f32	s22, s9
 8017ac4:	eef0 aa45 	vmov.f32	s21, s10
 8017ac8:	9308      	str	r3, [sp, #32]
 8017aca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017acc:	2b00      	cmp	r3, #0
 8017ace:	dc03      	bgt.n	8017ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017ad0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017ad2:	2b00      	cmp	r3, #0
 8017ad4:	f340 81f3 	ble.w	8017ebe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8017ad8:	9b06      	ldr	r3, [sp, #24]
 8017ada:	2b00      	cmp	r3, #0
 8017adc:	f340 80fa 	ble.w	8017cd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8017ae0:	1422      	asrs	r2, r4, #16
 8017ae2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017ae6:	d42b      	bmi.n	8017b40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017ae8:	1c51      	adds	r1, r2, #1
 8017aea:	428f      	cmp	r7, r1
 8017aec:	dd2b      	ble.n	8017b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017aee:	2b00      	cmp	r3, #0
 8017af0:	db29      	blt.n	8017b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017af2:	9807      	ldr	r0, [sp, #28]
 8017af4:	1c59      	adds	r1, r3, #1
 8017af6:	4288      	cmp	r0, r1
 8017af8:	dd25      	ble.n	8017b46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017afa:	9b06      	ldr	r3, [sp, #24]
 8017afc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017afe:	3b01      	subs	r3, #1
 8017b00:	fb02 4203 	mla	r2, r2, r3, r4
 8017b04:	1412      	asrs	r2, r2, #16
 8017b06:	d428      	bmi.n	8017b5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017b08:	3201      	adds	r2, #1
 8017b0a:	4297      	cmp	r7, r2
 8017b0c:	dd25      	ble.n	8017b5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017b0e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017b10:	fb02 6303 	mla	r3, r2, r3, r6
 8017b14:	141b      	asrs	r3, r3, #16
 8017b16:	d420      	bmi.n	8017b5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017b18:	9a07      	ldr	r2, [sp, #28]
 8017b1a:	3301      	adds	r3, #1
 8017b1c:	429a      	cmp	r2, r3
 8017b1e:	dd1c      	ble.n	8017b5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017b20:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017b24:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8017b28:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017b2c:	f1b8 0f00 	cmp.w	r8, #0
 8017b30:	f300 8129 	bgt.w	8017d86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8017b34:	9b06      	ldr	r3, [sp, #24]
 8017b36:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017b3a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017b3e:	e0cb      	b.n	8017cd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8017b40:	1c51      	adds	r1, r2, #1
 8017b42:	f040 80bd 	bne.w	8017cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017b46:	42ba      	cmp	r2, r7
 8017b48:	f280 80ba 	bge.w	8017cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017b4c:	1c5a      	adds	r2, r3, #1
 8017b4e:	f2c0 80b7 	blt.w	8017cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017b52:	9a07      	ldr	r2, [sp, #28]
 8017b54:	4293      	cmp	r3, r2
 8017b56:	f280 80b3 	bge.w	8017cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017b5a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8017b5e:	46c8      	mov	r8, r9
 8017b60:	f1bb 0f00 	cmp.w	fp, #0
 8017b64:	dde6      	ble.n	8017b34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8017b66:	1421      	asrs	r1, r4, #16
 8017b68:	ea4f 4226 	mov.w	r2, r6, asr #16
 8017b6c:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017b70:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017b74:	f100 80ef 	bmi.w	8017d56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8017b78:	f101 0c01 	add.w	ip, r1, #1
 8017b7c:	4567      	cmp	r7, ip
 8017b7e:	f340 80ec 	ble.w	8017d5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017b82:	2a00      	cmp	r2, #0
 8017b84:	f2c0 80e9 	blt.w	8017d5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017b88:	9d07      	ldr	r5, [sp, #28]
 8017b8a:	f102 0c01 	add.w	ip, r2, #1
 8017b8e:	4565      	cmp	r5, ip
 8017b90:	f340 80e3 	ble.w	8017d5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017b94:	fb02 1207 	mla	r2, r2, r7, r1
 8017b98:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017b9a:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8017b9e:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8017ba2:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8017ba6:	b138      	cbz	r0, 8017bb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8017ba8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017baa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017bac:	4472      	add	r2, lr
 8017bae:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8017bb2:	8852      	ldrh	r2, [r2, #2]
 8017bb4:	950e      	str	r5, [sp, #56]	; 0x38
 8017bb6:	920f      	str	r2, [sp, #60]	; 0x3c
 8017bb8:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8017bbc:	fb13 f200 	smulbb	r2, r3, r0
 8017bc0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017bc4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017bc8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017bcc:	10d2      	asrs	r2, r2, #3
 8017bce:	ea4e 0c0c 	orr.w	ip, lr, ip
 8017bd2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017bd6:	f1c0 0e10 	rsb	lr, r0, #16
 8017bda:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017bde:	ebae 0e03 	sub.w	lr, lr, r3
 8017be2:	ea4a 0101 	orr.w	r1, sl, r1
 8017be6:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017bea:	4359      	muls	r1, r3
 8017bec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017bee:	9d08      	ldr	r5, [sp, #32]
 8017bf0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017bf4:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8017bf8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017bfc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017c00:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017c04:	ea4c 0c03 	orr.w	ip, ip, r3
 8017c08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017c0a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017c0c:	041b      	lsls	r3, r3, #16
 8017c0e:	fb02 ec0c 	mla	ip, r2, ip, lr
 8017c12:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017c16:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017c1a:	ea43 030e 	orr.w	r3, r3, lr
 8017c1e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017c22:	fb02 c203 	mla	r2, r2, r3, ip
 8017c26:	0d53      	lsrs	r3, r2, #21
 8017c28:	0952      	lsrs	r2, r2, #5
 8017c2a:	f8b8 c000 	ldrh.w	ip, [r8]
 8017c2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017c32:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017c36:	431a      	orrs	r2, r3
 8017c38:	b292      	uxth	r2, r2
 8017c3a:	ea4f 212c 	mov.w	r1, ip, asr #8
 8017c3e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8017c42:	1210      	asrs	r0, r2, #8
 8017c44:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017c48:	fb11 f105 	smulbb	r1, r1, r5
 8017c4c:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8017c50:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017c54:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017c58:	fb00 1003 	mla	r0, r0, r3, r1
 8017c5c:	fa5f fc8c 	uxtb.w	ip, ip
 8017c60:	10d1      	asrs	r1, r2, #3
 8017c62:	00d2      	lsls	r2, r2, #3
 8017c64:	fb1c fc05 	smulbb	ip, ip, r5
 8017c68:	b2d2      	uxtb	r2, r2
 8017c6a:	fb02 c203 	mla	r2, r2, r3, ip
 8017c6e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017c72:	b280      	uxth	r0, r0
 8017c74:	b292      	uxth	r2, r2
 8017c76:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017c7a:	fb1e fe05 	smulbb	lr, lr, r5
 8017c7e:	fb01 e103 	mla	r1, r1, r3, lr
 8017c82:	f102 0c01 	add.w	ip, r2, #1
 8017c86:	1c43      	adds	r3, r0, #1
 8017c88:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017c8c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017c90:	b289      	uxth	r1, r1
 8017c92:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017c96:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017c9a:	4313      	orrs	r3, r2
 8017c9c:	1c4a      	adds	r2, r1, #1
 8017c9e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017ca2:	0949      	lsrs	r1, r1, #5
 8017ca4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017ca8:	430b      	orrs	r3, r1
 8017caa:	f8a8 3000 	strh.w	r3, [r8]
 8017cae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017cb0:	441c      	add	r4, r3
 8017cb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017cb4:	f108 0802 	add.w	r8, r8, #2
 8017cb8:	441e      	add	r6, r3
 8017cba:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017cbe:	e74f      	b.n	8017b60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8017cc0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017cc2:	441c      	add	r4, r3
 8017cc4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017cc6:	441e      	add	r6, r3
 8017cc8:	9b06      	ldr	r3, [sp, #24]
 8017cca:	3b01      	subs	r3, #1
 8017ccc:	9306      	str	r3, [sp, #24]
 8017cce:	f109 0902 	add.w	r9, r9, #2
 8017cd2:	e701      	b.n	8017ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017cd4:	f47f af11 	bne.w	8017afa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8017cd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017cda:	2b00      	cmp	r3, #0
 8017cdc:	f340 80ef 	ble.w	8017ebe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8017ce0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017ce4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017ce8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017cec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017cee:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017cf2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017cf6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017cfa:	eef0 6a48 	vmov.f32	s13, s16
 8017cfe:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017d02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017d06:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017d0a:	ee16 4a90 	vmov	r4, s13
 8017d0e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017d12:	eef0 6a68 	vmov.f32	s13, s17
 8017d16:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017d1a:	ee18 2a10 	vmov	r2, s16
 8017d1e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017d22:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d26:	ee18 2a90 	vmov	r2, s17
 8017d2a:	9329      	str	r3, [sp, #164]	; 0xa4
 8017d2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017d2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d32:	932a      	str	r3, [sp, #168]	; 0xa8
 8017d34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017d36:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017d38:	3b01      	subs	r3, #1
 8017d3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017d3e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017d40:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017d42:	bf08      	it	eq
 8017d44:	4613      	moveq	r3, r2
 8017d46:	ee16 6a90 	vmov	r6, s13
 8017d4a:	9306      	str	r3, [sp, #24]
 8017d4c:	eef0 8a67 	vmov.f32	s17, s15
 8017d50:	eeb0 8a47 	vmov.f32	s16, s14
 8017d54:	e6b9      	b.n	8017aca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8017d56:	1c4d      	adds	r5, r1, #1
 8017d58:	d1a9      	bne.n	8017cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017d5a:	428f      	cmp	r7, r1
 8017d5c:	dda7      	ble.n	8017cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017d5e:	1c55      	adds	r5, r2, #1
 8017d60:	dba5      	blt.n	8017cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017d62:	9d07      	ldr	r5, [sp, #28]
 8017d64:	4295      	cmp	r5, r2
 8017d66:	dda2      	ble.n	8017cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017d68:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017d6a:	9101      	str	r1, [sp, #4]
 8017d6c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8017d70:	9b07      	ldr	r3, [sp, #28]
 8017d72:	9300      	str	r3, [sp, #0]
 8017d74:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8017d78:	463b      	mov	r3, r7
 8017d7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017d7c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017d7e:	4641      	mov	r1, r8
 8017d80:	f7ff fd9a 	bl	80178b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8017d84:	e793      	b.n	8017cae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017d86:	1422      	asrs	r2, r4, #16
 8017d88:	1431      	asrs	r1, r6, #16
 8017d8a:	fb07 2101 	mla	r1, r7, r1, r2
 8017d8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017d90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017d92:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8017d96:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017d9a:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8017d9e:	8851      	ldrh	r1, [r2, #2]
 8017da0:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017da4:	f1be 0f00 	cmp.w	lr, #0
 8017da8:	d006      	beq.n	8017db8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8017daa:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017dac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017dae:	1810      	adds	r0, r2, r0
 8017db0:	5b52      	ldrh	r2, [r2, r5]
 8017db2:	9210      	str	r2, [sp, #64]	; 0x40
 8017db4:	8842      	ldrh	r2, [r0, #2]
 8017db6:	9211      	str	r2, [sp, #68]	; 0x44
 8017db8:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8017dbc:	fb13 f20e 	smulbb	r2, r3, lr
 8017dc0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017dc4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017dc8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017dcc:	10d2      	asrs	r2, r2, #3
 8017dce:	ea40 000c 	orr.w	r0, r0, ip
 8017dd2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017dd6:	f1ce 0c10 	rsb	ip, lr, #16
 8017dda:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017dde:	ebac 0c03 	sub.w	ip, ip, r3
 8017de2:	ea4b 0101 	orr.w	r1, fp, r1
 8017de6:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017dea:	4359      	muls	r1, r3
 8017dec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017dee:	9d08      	ldr	r5, [sp, #32]
 8017df0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017df4:	fb0c 1c00 	mla	ip, ip, r0, r1
 8017df8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017dfc:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8017e00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e02:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017e06:	ea4b 0000 	orr.w	r0, fp, r0
 8017e0a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017e0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017e12:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017e16:	fb02 c000 	mla	r0, r2, r0, ip
 8017e1a:	ea4b 0b03 	orr.w	fp, fp, r3
 8017e1e:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8017e22:	fb02 0b0b 	mla	fp, r2, fp, r0
 8017e26:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e28:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8017e2c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017e30:	8812      	ldrh	r2, [r2, #0]
 8017e32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e36:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017e3a:	ea41 0b0b 	orr.w	fp, r1, fp
 8017e3e:	fa1f f38b 	uxth.w	r3, fp
 8017e42:	1211      	asrs	r1, r2, #8
 8017e44:	1218      	asrs	r0, r3, #8
 8017e46:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017e4a:	fb11 f105 	smulbb	r1, r1, r5
 8017e4e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8017e52:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017e56:	00d2      	lsls	r2, r2, #3
 8017e58:	fb00 100a 	mla	r0, r0, sl, r1
 8017e5c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017e60:	10d9      	asrs	r1, r3, #3
 8017e62:	b2d2      	uxtb	r2, r2
 8017e64:	00db      	lsls	r3, r3, #3
 8017e66:	fb1c fc05 	smulbb	ip, ip, r5
 8017e6a:	fb12 f205 	smulbb	r2, r2, r5
 8017e6e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017e72:	b2db      	uxtb	r3, r3
 8017e74:	b280      	uxth	r0, r0
 8017e76:	fb01 c10a 	mla	r1, r1, sl, ip
 8017e7a:	fb03 230a 	mla	r3, r3, sl, r2
 8017e7e:	b29b      	uxth	r3, r3
 8017e80:	b289      	uxth	r1, r1
 8017e82:	1c42      	adds	r2, r0, #1
 8017e84:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017e88:	f101 0c01 	add.w	ip, r1, #1
 8017e8c:	1c5a      	adds	r2, r3, #1
 8017e8e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017e92:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8017e96:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017e9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017e9e:	0949      	lsrs	r1, r1, #5
 8017ea0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ea2:	4310      	orrs	r0, r2
 8017ea4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017ea8:	4308      	orrs	r0, r1
 8017eaa:	f823 0b02 	strh.w	r0, [r3], #2
 8017eae:	930d      	str	r3, [sp, #52]	; 0x34
 8017eb0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017eb2:	441c      	add	r4, r3
 8017eb4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017eb6:	f108 38ff 	add.w	r8, r8, #4294967295
 8017eba:	441e      	add	r6, r3
 8017ebc:	e636      	b.n	8017b2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8017ebe:	b015      	add	sp, #84	; 0x54
 8017ec0:	ecbd 8b08 	vpop	{d8-d11}
 8017ec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017ec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8017ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017ecc:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8017ed0:	fb06 5c03 	mla	ip, r6, r3, r5
 8017ed4:	2e00      	cmp	r6, #0
 8017ed6:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8017eda:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8017ede:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8017ee2:	8808      	ldrh	r0, [r1, #0]
 8017ee4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8017ee8:	db2e      	blt.n	8017f48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8017eea:	45b0      	cmp	r8, r6
 8017eec:	dd2c      	ble.n	8017f48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8017eee:	2d00      	cmp	r5, #0
 8017ef0:	db28      	blt.n	8017f44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8017ef2:	42ab      	cmp	r3, r5
 8017ef4:	dd26      	ble.n	8017f44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8017ef6:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8017efa:	1c6a      	adds	r2, r5, #1
 8017efc:	d427      	bmi.n	8017f4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017efe:	4293      	cmp	r3, r2
 8017f00:	dd25      	ble.n	8017f4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017f02:	b324      	cbz	r4, 8017f4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017f04:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8017f08:	3601      	adds	r6, #1
 8017f0a:	d424      	bmi.n	8017f56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8017f0c:	45b0      	cmp	r8, r6
 8017f0e:	dd22      	ble.n	8017f56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8017f10:	b31f      	cbz	r7, 8017f5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8017f12:	2d00      	cmp	r5, #0
 8017f14:	db1d      	blt.n	8017f52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8017f16:	42ab      	cmp	r3, r5
 8017f18:	dd1b      	ble.n	8017f52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8017f1a:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8017f1e:	3501      	adds	r5, #1
 8017f20:	d405      	bmi.n	8017f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017f22:	42ab      	cmp	r3, r5
 8017f24:	dd03      	ble.n	8017f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017f26:	b124      	cbz	r4, 8017f32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8017f28:	3301      	adds	r3, #1
 8017f2a:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8017f2e:	2c0f      	cmp	r4, #15
 8017f30:	d801      	bhi.n	8017f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8017f32:	2f0f      	cmp	r7, #15
 8017f34:	d914      	bls.n	8017f60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8017f36:	4b27      	ldr	r3, [pc, #156]	; (8017fd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8017f38:	4a27      	ldr	r2, [pc, #156]	; (8017fd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8017f3a:	4828      	ldr	r0, [pc, #160]	; (8017fdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8017f3c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8017f40:	f002 fc52 	bl	801a7e8 <__assert_func>
 8017f44:	4684      	mov	ip, r0
 8017f46:	e7d8      	b.n	8017efa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8017f48:	4602      	mov	r2, r0
 8017f4a:	4684      	mov	ip, r0
 8017f4c:	e7dc      	b.n	8017f08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017f4e:	4602      	mov	r2, r0
 8017f50:	e7da      	b.n	8017f08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017f52:	4606      	mov	r6, r0
 8017f54:	e7e3      	b.n	8017f1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8017f56:	4606      	mov	r6, r0
 8017f58:	e7e9      	b.n	8017f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017f5a:	2c0f      	cmp	r4, #15
 8017f5c:	d8eb      	bhi.n	8017f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8017f5e:	4606      	mov	r6, r0
 8017f60:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8017f64:	fb14 f307 	smulbb	r3, r4, r7
 8017f68:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8017f6c:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8017f70:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017f74:	10db      	asrs	r3, r3, #3
 8017f76:	ea45 0c0c 	orr.w	ip, r5, ip
 8017f7a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017f7e:	f1c7 0510 	rsb	r5, r7, #16
 8017f82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017f86:	1b2d      	subs	r5, r5, r4
 8017f88:	ea4e 0202 	orr.w	r2, lr, r2
 8017f8c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8017f90:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8017f94:	4354      	muls	r4, r2
 8017f96:	fb05 450c 	mla	r5, r5, ip, r4
 8017f9a:	0404      	lsls	r4, r0, #16
 8017f9c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017fa0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017fa4:	4320      	orrs	r0, r4
 8017fa6:	fb03 5400 	mla	r4, r3, r0, r5
 8017faa:	0430      	lsls	r0, r6, #16
 8017fac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017fb0:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8017fb4:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8017fb8:	4330      	orrs	r0, r6
 8017fba:	fb07 4000 	mla	r0, r7, r0, r4
 8017fbe:	0d43      	lsrs	r3, r0, #21
 8017fc0:	0940      	lsrs	r0, r0, #5
 8017fc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017fc6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017fca:	4318      	orrs	r0, r3
 8017fcc:	8008      	strh	r0, [r1, #0]
 8017fce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017fd2:	bf00      	nop
 8017fd4:	0801eb1d 	.word	0x0801eb1d
 8017fd8:	0801f11e 	.word	0x0801f11e
 8017fdc:	0801eba5 	.word	0x0801eba5

08017fe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fe4:	ed2d 8b0a 	vpush	{d8-d12}
 8017fe8:	b093      	sub	sp, #76	; 0x4c
 8017fea:	461d      	mov	r5, r3
 8017fec:	9210      	str	r2, [sp, #64]	; 0x40
 8017fee:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017ff0:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 8017ff4:	9208      	str	r2, [sp, #32]
 8017ff6:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 8017ffa:	910b      	str	r1, [sp, #44]	; 0x2c
 8017ffc:	6859      	ldr	r1, [r3, #4]
 8017ffe:	681b      	ldr	r3, [r3, #0]
 8018000:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8018004:	9011      	str	r0, [sp, #68]	; 0x44
 8018006:	fb01 2707 	mla	r7, r1, r7, r2
 801800a:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801800e:	9307      	str	r3, [sp, #28]
 8018010:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018012:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018016:	681b      	ldr	r3, [r3, #0]
 8018018:	9309      	str	r3, [sp, #36]	; 0x24
 801801a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801801e:	eeb0 aa40 	vmov.f32	s20, s0
 8018022:	eef0 9a60 	vmov.f32	s19, s1
 8018026:	eeb0 9a41 	vmov.f32	s18, s2
 801802a:	eeb0 8a62 	vmov.f32	s16, s5
 801802e:	eef0 8a43 	vmov.f32	s17, s6
 8018032:	eeb0 ca44 	vmov.f32	s24, s8
 8018036:	eef0 ba64 	vmov.f32	s23, s9
 801803a:	eeb0 ba45 	vmov.f32	s22, s10
 801803e:	930a      	str	r3, [sp, #40]	; 0x28
 8018040:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8018044:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018046:	2b00      	cmp	r3, #0
 8018048:	dc03      	bgt.n	8018052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 801804a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801804c:	2b00      	cmp	r3, #0
 801804e:	f340 816c 	ble.w	801832a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8018052:	2d00      	cmp	r5, #0
 8018054:	f340 80b6 	ble.w	80181c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8018058:	1422      	asrs	r2, r4, #16
 801805a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801805e:	d428      	bmi.n	80180b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8018060:	1c51      	adds	r1, r2, #1
 8018062:	4588      	cmp	r8, r1
 8018064:	dd27      	ble.n	80180b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018066:	2b00      	cmp	r3, #0
 8018068:	db25      	blt.n	80180b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801806a:	9808      	ldr	r0, [sp, #32]
 801806c:	1c59      	adds	r1, r3, #1
 801806e:	4288      	cmp	r0, r1
 8018070:	dd21      	ble.n	80180b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018072:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018074:	1e6b      	subs	r3, r5, #1
 8018076:	fb02 4203 	mla	r2, r2, r3, r4
 801807a:	1412      	asrs	r2, r2, #16
 801807c:	d422      	bmi.n	80180c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801807e:	3201      	adds	r2, #1
 8018080:	4590      	cmp	r8, r2
 8018082:	dd1f      	ble.n	80180c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018084:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018086:	fb02 6303 	mla	r3, r2, r3, r6
 801808a:	141b      	asrs	r3, r3, #16
 801808c:	d41a      	bmi.n	80180c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801808e:	9a08      	ldr	r2, [sp, #32]
 8018090:	3301      	adds	r3, #1
 8018092:	429a      	cmp	r2, r3
 8018094:	dd16      	ble.n	80180c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018096:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801809a:	46a9      	mov	r9, r5
 801809c:	f1b9 0f00 	cmp.w	r9, #0
 80180a0:	f300 80e4 	bgt.w	801826c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 80180a4:	9b07      	ldr	r3, [sp, #28]
 80180a6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80180aa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80180ae:	9307      	str	r3, [sp, #28]
 80180b0:	e08a      	b.n	80181c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 80180b2:	1c51      	adds	r1, r2, #1
 80180b4:	d17d      	bne.n	80181b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80180b6:	4542      	cmp	r2, r8
 80180b8:	da7b      	bge.n	80181b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80180ba:	1c5a      	adds	r2, r3, #1
 80180bc:	db79      	blt.n	80181b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80180be:	9a08      	ldr	r2, [sp, #32]
 80180c0:	4293      	cmp	r3, r2
 80180c2:	da76      	bge.n	80181b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80180c4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80180c8:	46aa      	mov	sl, r5
 80180ca:	f1ba 0f00 	cmp.w	sl, #0
 80180ce:	dde9      	ble.n	80180a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 80180d0:	1421      	asrs	r1, r4, #16
 80180d2:	ea4f 4226 	mov.w	r2, r6, asr #16
 80180d6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80180da:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80180de:	f100 80b0 	bmi.w	8018242 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 80180e2:	f101 0c01 	add.w	ip, r1, #1
 80180e6:	45e0      	cmp	r8, ip
 80180e8:	f340 80ad 	ble.w	8018246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80180ec:	2a00      	cmp	r2, #0
 80180ee:	f2c0 80aa 	blt.w	8018246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80180f2:	9f08      	ldr	r7, [sp, #32]
 80180f4:	f102 0c01 	add.w	ip, r2, #1
 80180f8:	4567      	cmp	r7, ip
 80180fa:	f340 80a4 	ble.w	8018246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80180fe:	fb02 1208 	mla	r2, r2, r8, r1
 8018102:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018104:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018108:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 801810c:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8018110:	b138      	cbz	r0, 8018122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8018112:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018114:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018116:	4472      	add	r2, lr
 8018118:	f83e 7007 	ldrh.w	r7, [lr, r7]
 801811c:	8852      	ldrh	r2, [r2, #2]
 801811e:	970c      	str	r7, [sp, #48]	; 0x30
 8018120:	920d      	str	r2, [sp, #52]	; 0x34
 8018122:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8018126:	fb13 f200 	smulbb	r2, r3, r0
 801812a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801812e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018132:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018136:	10d2      	asrs	r2, r2, #3
 8018138:	ea4e 0c0c 	orr.w	ip, lr, ip
 801813c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018140:	f1c0 0e10 	rsb	lr, r0, #16
 8018144:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018148:	ebae 0e03 	sub.w	lr, lr, r3
 801814c:	ea4b 0101 	orr.w	r1, fp, r1
 8018150:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018154:	4359      	muls	r1, r3
 8018156:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018158:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801815c:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8018160:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018164:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018168:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801816c:	ea4c 0c03 	orr.w	ip, ip, r3
 8018170:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018172:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018174:	041b      	lsls	r3, r3, #16
 8018176:	fb02 ec0c 	mla	ip, r2, ip, lr
 801817a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801817e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018182:	ea43 030e 	orr.w	r3, r3, lr
 8018186:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801818a:	fb02 c203 	mla	r2, r2, r3, ip
 801818e:	0d53      	lsrs	r3, r2, #21
 8018190:	0952      	lsrs	r2, r2, #5
 8018192:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018196:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801819a:	431a      	orrs	r2, r3
 801819c:	f8a9 2000 	strh.w	r2, [r9]
 80181a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80181a2:	441c      	add	r4, r3
 80181a4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80181a6:	f109 0902 	add.w	r9, r9, #2
 80181aa:	441e      	add	r6, r3
 80181ac:	f10a 3aff 	add.w	sl, sl, #4294967295
 80181b0:	e78b      	b.n	80180ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80181b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80181b4:	441c      	add	r4, r3
 80181b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80181b8:	441e      	add	r6, r3
 80181ba:	9b07      	ldr	r3, [sp, #28]
 80181bc:	3302      	adds	r3, #2
 80181be:	3d01      	subs	r5, #1
 80181c0:	9307      	str	r3, [sp, #28]
 80181c2:	e746      	b.n	8018052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80181c4:	f47f af55 	bne.w	8018072 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80181c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80181ca:	2b00      	cmp	r3, #0
 80181cc:	f340 80ad 	ble.w	801832a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80181d0:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80181d4:	ee79 9aab 	vadd.f32	s19, s19, s23
 80181d8:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80181dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80181de:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80181e2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80181e6:	eef0 6a48 	vmov.f32	s13, s16
 80181ea:	ee69 7a27 	vmul.f32	s15, s18, s15
 80181ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80181f2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80181f6:	ee16 4a90 	vmov	r4, s13
 80181fa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80181fe:	eef0 6a68 	vmov.f32	s13, s17
 8018202:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018206:	ee18 2a10 	vmov	r2, s16
 801820a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801820e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018212:	ee18 2a90 	vmov	r2, s17
 8018216:	9329      	str	r3, [sp, #164]	; 0xa4
 8018218:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801821a:	fb92 f3f3 	sdiv	r3, r2, r3
 801821e:	932a      	str	r3, [sp, #168]	; 0xa8
 8018220:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018222:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018224:	3b01      	subs	r3, #1
 8018226:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801822a:	930b      	str	r3, [sp, #44]	; 0x2c
 801822c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801822e:	ee16 6a90 	vmov	r6, s13
 8018232:	bf14      	ite	ne
 8018234:	461d      	movne	r5, r3
 8018236:	4615      	moveq	r5, r2
 8018238:	eef0 8a67 	vmov.f32	s17, s15
 801823c:	eeb0 8a47 	vmov.f32	s16, s14
 8018240:	e700      	b.n	8018044 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8018242:	1c4f      	adds	r7, r1, #1
 8018244:	d1ac      	bne.n	80181a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018246:	4588      	cmp	r8, r1
 8018248:	ddaa      	ble.n	80181a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801824a:	1c57      	adds	r7, r2, #1
 801824c:	dba8      	blt.n	80181a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801824e:	9f08      	ldr	r7, [sp, #32]
 8018250:	4297      	cmp	r7, r2
 8018252:	dda5      	ble.n	80181a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018254:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8018258:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801825c:	9700      	str	r7, [sp, #0]
 801825e:	4643      	mov	r3, r8
 8018260:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018262:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018264:	4649      	mov	r1, r9
 8018266:	f7ff fe2f 	bl	8017ec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801826a:	e799      	b.n	80181a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801826c:	1422      	asrs	r2, r4, #16
 801826e:	1431      	asrs	r1, r6, #16
 8018270:	fb08 2101 	mla	r1, r8, r1, r2
 8018274:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018276:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018278:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801827c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018280:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8018284:	8851      	ldrh	r1, [r2, #2]
 8018286:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801828a:	f1be 0f00 	cmp.w	lr, #0
 801828e:	d006      	beq.n	801829e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8018290:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018292:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018294:	1810      	adds	r0, r2, r0
 8018296:	5bd2      	ldrh	r2, [r2, r7]
 8018298:	920e      	str	r2, [sp, #56]	; 0x38
 801829a:	8842      	ldrh	r2, [r0, #2]
 801829c:	920f      	str	r2, [sp, #60]	; 0x3c
 801829e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80182a2:	fb13 f20e 	smulbb	r2, r3, lr
 80182a6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80182aa:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80182ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80182b2:	10d2      	asrs	r2, r2, #3
 80182b4:	ea40 000c 	orr.w	r0, r0, ip
 80182b8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80182bc:	f1ce 0c10 	rsb	ip, lr, #16
 80182c0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80182c4:	ebac 0c03 	sub.w	ip, ip, r3
 80182c8:	ea4a 0101 	orr.w	r1, sl, r1
 80182cc:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80182d0:	4359      	muls	r1, r3
 80182d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80182d4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80182d8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80182dc:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80182e0:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 80182e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80182e6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80182e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80182ec:	041b      	lsls	r3, r3, #16
 80182ee:	ea4a 0000 	orr.w	r0, sl, r0
 80182f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80182f6:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 80182fa:	fb02 c000 	mla	r0, r2, r0, ip
 80182fe:	ea43 0a0a 	orr.w	sl, r3, sl
 8018302:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8018306:	fb02 000a 	mla	r0, r2, sl, r0
 801830a:	0d43      	lsrs	r3, r0, #21
 801830c:	0940      	lsrs	r0, r0, #5
 801830e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018312:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018316:	4318      	orrs	r0, r3
 8018318:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801831a:	f82b 0b02 	strh.w	r0, [fp], #2
 801831e:	441c      	add	r4, r3
 8018320:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018322:	f109 39ff 	add.w	r9, r9, #4294967295
 8018326:	441e      	add	r6, r3
 8018328:	e6b8      	b.n	801809c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 801832a:	b013      	add	sp, #76	; 0x4c
 801832c:	ecbd 8b0a 	vpop	{d8-d12}
 8018330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8018334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018338:	8808      	ldrh	r0, [r1, #0]
 801833a:	b085      	sub	sp, #20
 801833c:	1206      	asrs	r6, r0, #8
 801833e:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8018342:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018346:	9600      	str	r6, [sp, #0]
 8018348:	10c6      	asrs	r6, r0, #3
 801834a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801834e:	9601      	str	r6, [sp, #4]
 8018350:	00c0      	lsls	r0, r0, #3
 8018352:	fb04 c603 	mla	r6, r4, r3, ip
 8018356:	b2c0      	uxtb	r0, r0
 8018358:	4691      	mov	r9, r2
 801835a:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 801835e:	9a00      	ldr	r2, [sp, #0]
 8018360:	9002      	str	r0, [sp, #8]
 8018362:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8018366:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801836a:	9a01      	ldr	r2, [sp, #4]
 801836c:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8018370:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8018374:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018378:	2c00      	cmp	r4, #0
 801837a:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801837e:	db3a      	blt.n	80183f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8018380:	45a0      	cmp	r8, r4
 8018382:	dd38      	ble.n	80183f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8018384:	f1bc 0f00 	cmp.w	ip, #0
 8018388:	db33      	blt.n	80183f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 801838a:	4563      	cmp	r3, ip
 801838c:	dd31      	ble.n	80183f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 801838e:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8018392:	f11c 0601 	adds.w	r6, ip, #1
 8018396:	d431      	bmi.n	80183fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018398:	42b3      	cmp	r3, r6
 801839a:	dd2f      	ble.n	80183fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 801839c:	b375      	cbz	r5, 80183fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 801839e:	f8de 6004 	ldr.w	r6, [lr, #4]
 80183a2:	3401      	adds	r4, #1
 80183a4:	d42e      	bmi.n	8018404 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80183a6:	45a0      	cmp	r8, r4
 80183a8:	dd2c      	ble.n	8018404 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80183aa:	b35f      	cbz	r7, 8018404 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80183ac:	f1bc 0f00 	cmp.w	ip, #0
 80183b0:	db26      	blt.n	8018400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 80183b2:	4563      	cmp	r3, ip
 80183b4:	dd24      	ble.n	8018400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 80183b6:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 80183ba:	f11c 0c01 	adds.w	ip, ip, #1
 80183be:	d405      	bmi.n	80183cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80183c0:	4563      	cmp	r3, ip
 80183c2:	dd03      	ble.n	80183cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80183c4:	b115      	cbz	r5, 80183cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80183c6:	3301      	adds	r3, #1
 80183c8:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 80183cc:	2d0f      	cmp	r5, #15
 80183ce:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80183d2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80183d6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80183da:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80183de:	d801      	bhi.n	80183e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80183e0:	2f0f      	cmp	r7, #15
 80183e2:	d911      	bls.n	8018408 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 80183e4:	4b82      	ldr	r3, [pc, #520]	; (80185f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80183e6:	4a83      	ldr	r2, [pc, #524]	; (80185f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 80183e8:	4883      	ldr	r0, [pc, #524]	; (80185f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 80183ea:	f240 210d 	movw	r1, #525	; 0x20d
 80183ee:	f002 f9fb 	bl	801a7e8 <__assert_func>
 80183f2:	4602      	mov	r2, r0
 80183f4:	e7cd      	b.n	8018392 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 80183f6:	4606      	mov	r6, r0
 80183f8:	4602      	mov	r2, r0
 80183fa:	e7d2      	b.n	80183a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 80183fc:	4606      	mov	r6, r0
 80183fe:	e7d0      	b.n	80183a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8018400:	4604      	mov	r4, r0
 8018402:	e7da      	b.n	80183ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8018404:	4604      	mov	r4, r0
 8018406:	e7e1      	b.n	80183cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018408:	b2ab      	uxth	r3, r5
 801840a:	b2bf      	uxth	r7, r7
 801840c:	fb03 fe07 	mul.w	lr, r3, r7
 8018410:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018414:	011b      	lsls	r3, r3, #4
 8018416:	eba3 0c0e 	sub.w	ip, r3, lr
 801841a:	b2bf      	uxth	r7, r7
 801841c:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8018420:	fa1f fc8c 	uxth.w	ip, ip
 8018424:	1bed      	subs	r5, r5, r7
 8018426:	b2ad      	uxth	r5, r5
 8018428:	fb0c f30a 	mul.w	r3, ip, sl
 801842c:	fb05 330b 	mla	r3, r5, fp, r3
 8018430:	fb07 3309 	mla	r3, r7, r9, r3
 8018434:	fb0e 3308 	mla	r3, lr, r8, r3
 8018438:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801843c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018440:	9303      	str	r3, [sp, #12]
 8018442:	d018      	beq.n	8018476 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8018444:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018448:	fb0b f303 	mul.w	r3, fp, r3
 801844c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018450:	fb0b fb02 	mul.w	fp, fp, r2
 8018454:	0a1a      	lsrs	r2, r3, #8
 8018456:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801845a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801845e:	441a      	add	r2, r3
 8018460:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8018464:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8018468:	0a12      	lsrs	r2, r2, #8
 801846a:	0a1b      	lsrs	r3, r3, #8
 801846c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018470:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018474:	431a      	orrs	r2, r3
 8018476:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801847a:	d019      	beq.n	80184b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 801847c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018480:	fb0a fb0b 	mul.w	fp, sl, fp
 8018484:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018488:	fb0a fa06 	mul.w	sl, sl, r6
 801848c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018490:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018494:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018498:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801849c:	445e      	add	r6, fp
 801849e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80184a2:	0a36      	lsrs	r6, r6, #8
 80184a4:	0a1b      	lsrs	r3, r3, #8
 80184a6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80184aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80184ae:	431e      	orrs	r6, r3
 80184b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80184b4:	d019      	beq.n	80184ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 80184b6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80184ba:	fb09 fa0a 	mul.w	sl, r9, sl
 80184be:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80184c2:	fb09 f904 	mul.w	r9, r9, r4
 80184c6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80184ca:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80184ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80184d2:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80184d6:	4454      	add	r4, sl
 80184d8:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80184dc:	0a24      	lsrs	r4, r4, #8
 80184de:	0a1b      	lsrs	r3, r3, #8
 80184e0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80184e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80184e8:	431c      	orrs	r4, r3
 80184ea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80184ee:	d019      	beq.n	8018524 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 80184f0:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80184f4:	fb08 f909 	mul.w	r9, r8, r9
 80184f8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80184fc:	fb08 f800 	mul.w	r8, r8, r0
 8018500:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8018504:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018508:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801850c:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8018510:	4448      	add	r0, r9
 8018512:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8018516:	0a00      	lsrs	r0, r0, #8
 8018518:	0a1b      	lsrs	r3, r3, #8
 801851a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801851e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018522:	4318      	orrs	r0, r3
 8018524:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018528:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801852c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018530:	fb0c f808 	mul.w	r8, ip, r8
 8018534:	fb0c f606 	mul.w	r6, ip, r6
 8018538:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801853c:	fb05 6202 	mla	r2, r5, r2, r6
 8018540:	fb05 8803 	mla	r8, r5, r3, r8
 8018544:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8018548:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801854c:	fb07 8803 	mla	r8, r7, r3, r8
 8018550:	fb07 2704 	mla	r7, r7, r4, r2
 8018554:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8018558:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801855c:	fb0e 8303 	mla	r3, lr, r3, r8
 8018560:	fb0e 7e00 	mla	lr, lr, r0, r7
 8018564:	0a1b      	lsrs	r3, r3, #8
 8018566:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801856a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801856e:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8018572:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018576:	ea43 0e0e 	orr.w	lr, r3, lr
 801857a:	9b03      	ldr	r3, [sp, #12]
 801857c:	b2a4      	uxth	r4, r4
 801857e:	4363      	muls	r3, r4
 8018580:	1c5a      	adds	r2, r3, #1
 8018582:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018586:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801858a:	9b00      	ldr	r3, [sp, #0]
 801858c:	b2d2      	uxtb	r2, r2
 801858e:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8018592:	fb13 f302 	smulbb	r3, r3, r2
 8018596:	fb05 3304 	mla	r3, r5, r4, r3
 801859a:	b29d      	uxth	r5, r3
 801859c:	9b01      	ldr	r3, [sp, #4]
 801859e:	f3ce 2007 	ubfx	r0, lr, #8, #8
 80185a2:	fb13 f302 	smulbb	r3, r3, r2
 80185a6:	fb00 3004 	mla	r0, r0, r4, r3
 80185aa:	9b02      	ldr	r3, [sp, #8]
 80185ac:	fa5f fe8e 	uxtb.w	lr, lr
 80185b0:	fb13 f202 	smulbb	r2, r3, r2
 80185b4:	fb0e 2e04 	mla	lr, lr, r4, r2
 80185b8:	fa1f fe8e 	uxth.w	lr, lr
 80185bc:	b280      	uxth	r0, r0
 80185be:	f10e 0201 	add.w	r2, lr, #1
 80185c2:	1c6b      	adds	r3, r5, #1
 80185c4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80185c8:	1c42      	adds	r2, r0, #1
 80185ca:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80185ce:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80185d2:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80185d6:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80185da:	0952      	lsrs	r2, r2, #5
 80185dc:	ea43 030e 	orr.w	r3, r3, lr
 80185e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185e4:	4313      	orrs	r3, r2
 80185e6:	800b      	strh	r3, [r1, #0]
 80185e8:	b005      	add	sp, #20
 80185ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185ee:	bf00      	nop
 80185f0:	0801eb1d 	.word	0x0801eb1d
 80185f4:	0801f075 	.word	0x0801f075
 80185f8:	0801eba5 	.word	0x0801eba5

080185fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80185fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018600:	ed2d 8b08 	vpush	{d8-d11}
 8018604:	b099      	sub	sp, #100	; 0x64
 8018606:	eeb0 aa40 	vmov.f32	s20, s0
 801860a:	9306      	str	r3, [sp, #24]
 801860c:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8018610:	9307      	str	r3, [sp, #28]
 8018612:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8018616:	9216      	str	r2, [sp, #88]	; 0x58
 8018618:	9310      	str	r3, [sp, #64]	; 0x40
 801861a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801861c:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8018620:	9113      	str	r1, [sp, #76]	; 0x4c
 8018622:	9315      	str	r3, [sp, #84]	; 0x54
 8018624:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8018628:	9017      	str	r0, [sp, #92]	; 0x5c
 801862a:	6850      	ldr	r0, [r2, #4]
 801862c:	6812      	ldr	r2, [r2, #0]
 801862e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018630:	fb00 1303 	mla	r3, r0, r3, r1
 8018634:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018638:	930a      	str	r3, [sp, #40]	; 0x28
 801863a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801863c:	681b      	ldr	r3, [r3, #0]
 801863e:	9312      	str	r3, [sp, #72]	; 0x48
 8018640:	9b07      	ldr	r3, [sp, #28]
 8018642:	009b      	lsls	r3, r3, #2
 8018644:	eef0 9a60 	vmov.f32	s19, s1
 8018648:	eeb0 9a41 	vmov.f32	s18, s2
 801864c:	eeb0 8a62 	vmov.f32	s16, s5
 8018650:	eef0 8a43 	vmov.f32	s17, s6
 8018654:	eef0 ba44 	vmov.f32	s23, s8
 8018658:	eeb0 ba64 	vmov.f32	s22, s9
 801865c:	eef0 aa45 	vmov.f32	s21, s10
 8018660:	930e      	str	r3, [sp, #56]	; 0x38
 8018662:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018664:	2b00      	cmp	r3, #0
 8018666:	dc03      	bgt.n	8018670 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8018668:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801866a:	2b00      	cmp	r3, #0
 801866c:	f340 8352 	ble.w	8018d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8018670:	9b06      	ldr	r3, [sp, #24]
 8018672:	2b00      	cmp	r3, #0
 8018674:	f340 81a8 	ble.w	80189c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8018678:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801867a:	1412      	asrs	r2, r2, #16
 801867c:	ea4f 4324 	mov.w	r3, r4, asr #16
 8018680:	d430      	bmi.n	80186e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8018682:	9807      	ldr	r0, [sp, #28]
 8018684:	1c51      	adds	r1, r2, #1
 8018686:	4288      	cmp	r0, r1
 8018688:	dd2f      	ble.n	80186ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801868a:	2b00      	cmp	r3, #0
 801868c:	db2d      	blt.n	80186ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801868e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018690:	1c59      	adds	r1, r3, #1
 8018692:	4288      	cmp	r0, r1
 8018694:	dd29      	ble.n	80186ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8018696:	9b06      	ldr	r3, [sp, #24]
 8018698:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801869a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801869c:	3b01      	subs	r3, #1
 801869e:	fb02 1203 	mla	r2, r2, r3, r1
 80186a2:	1412      	asrs	r2, r2, #16
 80186a4:	d42c      	bmi.n	8018700 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80186a6:	9907      	ldr	r1, [sp, #28]
 80186a8:	3201      	adds	r2, #1
 80186aa:	4291      	cmp	r1, r2
 80186ac:	dd28      	ble.n	8018700 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80186ae:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80186b0:	fb02 4303 	mla	r3, r2, r3, r4
 80186b4:	141b      	asrs	r3, r3, #16
 80186b6:	d423      	bmi.n	8018700 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80186b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80186ba:	3301      	adds	r3, #1
 80186bc:	429a      	cmp	r2, r3
 80186be:	dd1f      	ble.n	8018700 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80186c0:	9b06      	ldr	r3, [sp, #24]
 80186c2:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80186c6:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 80186ca:	9311      	str	r3, [sp, #68]	; 0x44
 80186cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80186ce:	2b00      	cmp	r3, #0
 80186d0:	f300 81e3 	bgt.w	8018a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 80186d4:	9b06      	ldr	r3, [sp, #24]
 80186d6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80186da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80186dc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80186e0:	930a      	str	r3, [sp, #40]	; 0x28
 80186e2:	e173      	b.n	80189cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 80186e4:	1c51      	adds	r1, r2, #1
 80186e6:	f040 8162 	bne.w	80189ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80186ea:	9907      	ldr	r1, [sp, #28]
 80186ec:	428a      	cmp	r2, r1
 80186ee:	f280 815e 	bge.w	80189ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80186f2:	1c5f      	adds	r7, r3, #1
 80186f4:	f2c0 815b 	blt.w	80189ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80186f8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80186fa:	4293      	cmp	r3, r2
 80186fc:	f280 8157 	bge.w	80189ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018700:	9b06      	ldr	r3, [sp, #24]
 8018702:	9314      	str	r3, [sp, #80]	; 0x50
 8018704:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8018708:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801870a:	9311      	str	r3, [sp, #68]	; 0x44
 801870c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801870e:	2b00      	cmp	r3, #0
 8018710:	dde0      	ble.n	80186d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8018712:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018714:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8018718:	1412      	asrs	r2, r2, #16
 801871a:	ea4f 4324 	mov.w	r3, r4, asr #16
 801871e:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8018722:	f100 81a1 	bmi.w	8018a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 8018726:	9e07      	ldr	r6, [sp, #28]
 8018728:	1c55      	adds	r5, r2, #1
 801872a:	42ae      	cmp	r6, r5
 801872c:	f340 819e 	ble.w	8018a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8018730:	2b00      	cmp	r3, #0
 8018732:	f2c0 819b 	blt.w	8018a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8018736:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8018738:	1c5d      	adds	r5, r3, #1
 801873a:	42ae      	cmp	r6, r5
 801873c:	f340 8196 	ble.w	8018a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8018740:	9d07      	ldr	r5, [sp, #28]
 8018742:	fb03 2305 	mla	r3, r3, r5, r2
 8018746:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018748:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 801874c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8018750:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018754:	2800      	cmp	r0, #0
 8018756:	f000 8178 	beq.w	8018a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801875a:	686a      	ldr	r2, [r5, #4]
 801875c:	920b      	str	r2, [sp, #44]	; 0x2c
 801875e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8018762:	2900      	cmp	r1, #0
 8018764:	f000 817a 	beq.w	8018a5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 8018768:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801876a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801876c:	18aa      	adds	r2, r5, r2
 801876e:	59ad      	ldr	r5, [r5, r6]
 8018770:	6852      	ldr	r2, [r2, #4]
 8018772:	9508      	str	r5, [sp, #32]
 8018774:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8018778:	920c      	str	r2, [sp, #48]	; 0x30
 801877a:	0e15      	lsrs	r5, r2, #24
 801877c:	b280      	uxth	r0, r0
 801877e:	b289      	uxth	r1, r1
 8018780:	fb00 fb01 	mul.w	fp, r0, r1
 8018784:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8018788:	0100      	lsls	r0, r0, #4
 801878a:	eba0 090b 	sub.w	r9, r0, fp
 801878e:	b289      	uxth	r1, r1
 8018790:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8018794:	fa1f f989 	uxth.w	r9, r9
 8018798:	1a52      	subs	r2, r2, r1
 801879a:	b292      	uxth	r2, r2
 801879c:	fb09 f008 	mul.w	r0, r9, r8
 80187a0:	fb02 000c 	mla	r0, r2, ip, r0
 80187a4:	fb01 000a 	mla	r0, r1, sl, r0
 80187a8:	fb0b 0005 	mla	r0, fp, r5, r0
 80187ac:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80187b0:	2800      	cmp	r0, #0
 80187b2:	f000 80ef 	beq.w	8018994 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80187b6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80187ba:	d01b      	beq.n	80187f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 80187bc:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80187c0:	fb0c fe0e 	mul.w	lr, ip, lr
 80187c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80187c8:	fb0c fc03 	mul.w	ip, ip, r3
 80187cc:	ea4f 231e 	mov.w	r3, lr, lsr #8
 80187d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80187d4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80187d8:	4473      	add	r3, lr
 80187da:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80187de:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80187e2:	0a1b      	lsrs	r3, r3, #8
 80187e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80187e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80187ec:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80187f0:	ea43 030e 	orr.w	r3, r3, lr
 80187f4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80187f8:	d01e      	beq.n	8018838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 80187fa:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80187fc:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018800:	fb08 fc0c 	mul.w	ip, r8, ip
 8018804:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8018808:	fb08 f80e 	mul.w	r8, r8, lr
 801880c:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018810:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018814:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018818:	44e6      	add	lr, ip
 801881a:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801881e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018822:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018826:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801882a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801882e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018832:	ea4e 0608 	orr.w	r6, lr, r8
 8018836:	960b      	str	r6, [sp, #44]	; 0x2c
 8018838:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801883c:	d01e      	beq.n	801887c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 801883e:	9e08      	ldr	r6, [sp, #32]
 8018840:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018844:	fb0a f808 	mul.w	r8, sl, r8
 8018848:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801884c:	fb0a fa0c 	mul.w	sl, sl, ip
 8018850:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018854:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018858:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801885c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018860:	44c6      	add	lr, r8
 8018862:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018866:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801886a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801886e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018872:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018876:	ea4e 060a 	orr.w	r6, lr, sl
 801887a:	9608      	str	r6, [sp, #32]
 801887c:	2dff      	cmp	r5, #255	; 0xff
 801887e:	d01d      	beq.n	80188bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8018880:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018882:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018886:	fb05 f808 	mul.w	r8, r5, r8
 801888a:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801888e:	fb05 f50c 	mul.w	r5, r5, ip
 8018892:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018896:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801889a:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801889e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80188a2:	44c6      	add	lr, r8
 80188a4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80188a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80188ac:	0a2d      	lsrs	r5, r5, #8
 80188ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80188b2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80188b6:	ea4e 0505 	orr.w	r5, lr, r5
 80188ba:	950c      	str	r5, [sp, #48]	; 0x30
 80188bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80188be:	9e08      	ldr	r6, [sp, #32]
 80188c0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80188c4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80188c8:	fb09 f505 	mul.w	r5, r9, r5
 80188cc:	fb02 550c 	mla	r5, r2, ip, r5
 80188d0:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80188d4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80188d6:	fb01 550c 	mla	r5, r1, ip, r5
 80188da:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80188de:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80188e0:	fb0b 550c 	mla	r5, fp, ip, r5
 80188e4:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80188e8:	fb09 f90c 	mul.w	r9, r9, ip
 80188ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80188f0:	fb02 9303 	mla	r3, r2, r3, r9
 80188f4:	9a08      	ldr	r2, [sp, #32]
 80188f6:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80188fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80188fc:	fb01 330e 	mla	r3, r1, lr, r3
 8018900:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8018904:	fb0b 3b01 	mla	fp, fp, r1, r3
 8018908:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801890a:	0a2d      	lsrs	r5, r5, #8
 801890c:	f8b3 c000 	ldrh.w	ip, [r3]
 8018910:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018914:	fb00 f307 	mul.w	r3, r0, r7
 8018918:	1c58      	adds	r0, r3, #1
 801891a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801891e:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018922:	ea45 050b 	orr.w	r5, r5, fp
 8018926:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801892a:	0c29      	lsrs	r1, r5, #16
 801892c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8018930:	ea4f 232c 	mov.w	r3, ip, asr #8
 8018934:	b2c0      	uxtb	r0, r0
 8018936:	fb11 f107 	smulbb	r1, r1, r7
 801893a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801893e:	fb03 1300 	mla	r3, r3, r0, r1
 8018942:	b299      	uxth	r1, r3
 8018944:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018948:	f3c5 2307 	ubfx	r3, r5, #8, #8
 801894c:	fb13 f307 	smulbb	r3, r3, r7
 8018950:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018954:	fb02 3200 	mla	r2, r2, r0, r3
 8018958:	b2ed      	uxtb	r5, r5
 801895a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801895e:	b2db      	uxtb	r3, r3
 8018960:	fb15 f507 	smulbb	r5, r5, r7
 8018964:	fb03 5500 	mla	r5, r3, r0, r5
 8018968:	b292      	uxth	r2, r2
 801896a:	b2ad      	uxth	r5, r5
 801896c:	1c4b      	adds	r3, r1, #1
 801896e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018972:	1c68      	adds	r0, r5, #1
 8018974:	1c51      	adds	r1, r2, #1
 8018976:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801897a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801897e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018982:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018986:	0952      	lsrs	r2, r2, #5
 8018988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801898c:	432b      	orrs	r3, r5
 801898e:	4313      	orrs	r3, r2
 8018990:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018992:	8013      	strh	r3, [r2, #0]
 8018994:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018996:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018998:	3302      	adds	r3, #2
 801899a:	9311      	str	r3, [sp, #68]	; 0x44
 801899c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801899e:	4413      	add	r3, r2
 80189a0:	932b      	str	r3, [sp, #172]	; 0xac
 80189a2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80189a4:	441c      	add	r4, r3
 80189a6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80189a8:	3b01      	subs	r3, #1
 80189aa:	9314      	str	r3, [sp, #80]	; 0x50
 80189ac:	e6ae      	b.n	801870c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80189ae:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80189b0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80189b2:	4413      	add	r3, r2
 80189b4:	932b      	str	r3, [sp, #172]	; 0xac
 80189b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80189b8:	441c      	add	r4, r3
 80189ba:	9b06      	ldr	r3, [sp, #24]
 80189bc:	3b01      	subs	r3, #1
 80189be:	9306      	str	r3, [sp, #24]
 80189c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80189c2:	3302      	adds	r3, #2
 80189c4:	930a      	str	r3, [sp, #40]	; 0x28
 80189c6:	e653      	b.n	8018670 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80189c8:	f47f ae65 	bne.w	8018696 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80189cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80189ce:	2b00      	cmp	r3, #0
 80189d0:	f340 81a0 	ble.w	8018d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 80189d4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80189d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80189dc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80189e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80189e2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80189e6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80189ea:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80189ee:	eef0 6a48 	vmov.f32	s13, s16
 80189f2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80189f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80189fa:	ee37 8a48 	vsub.f32	s16, s14, s16
 80189fe:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8018a02:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018a06:	eef0 6a68 	vmov.f32	s13, s17
 8018a0a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018a0e:	ee18 2a10 	vmov	r2, s16
 8018a12:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018a16:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a1a:	ee18 2a90 	vmov	r2, s17
 8018a1e:	932d      	str	r3, [sp, #180]	; 0xb4
 8018a20:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a22:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a26:	932e      	str	r3, [sp, #184]	; 0xb8
 8018a28:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018a2a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018a2c:	3b01      	subs	r3, #1
 8018a2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a32:	9313      	str	r3, [sp, #76]	; 0x4c
 8018a34:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a36:	bf08      	it	eq
 8018a38:	4613      	moveq	r3, r2
 8018a3a:	ee16 4a90 	vmov	r4, s13
 8018a3e:	9306      	str	r3, [sp, #24]
 8018a40:	eef0 8a67 	vmov.f32	s17, s15
 8018a44:	eeb0 8a47 	vmov.f32	s16, s14
 8018a48:	e60b      	b.n	8018662 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8018a4a:	b151      	cbz	r1, 8018a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8018a4c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018a4e:	58aa      	ldr	r2, [r5, r2]
 8018a50:	9208      	str	r2, [sp, #32]
 8018a52:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8018a56:	25ff      	movs	r5, #255	; 0xff
 8018a58:	46a8      	mov	r8, r5
 8018a5a:	e68f      	b.n	801877c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8018a5c:	25ff      	movs	r5, #255	; 0xff
 8018a5e:	46aa      	mov	sl, r5
 8018a60:	e68c      	b.n	801877c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8018a62:	25ff      	movs	r5, #255	; 0xff
 8018a64:	46aa      	mov	sl, r5
 8018a66:	e7f7      	b.n	8018a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8018a68:	1c56      	adds	r6, r2, #1
 8018a6a:	d193      	bne.n	8018994 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018a6c:	9d07      	ldr	r5, [sp, #28]
 8018a6e:	4295      	cmp	r5, r2
 8018a70:	dd90      	ble.n	8018994 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018a72:	1c5d      	adds	r5, r3, #1
 8018a74:	db8e      	blt.n	8018994 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018a76:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018a78:	429d      	cmp	r5, r3
 8018a7a:	dd8b      	ble.n	8018994 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018a7c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018a7e:	9201      	str	r2, [sp, #4]
 8018a80:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8018a84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a86:	9300      	str	r3, [sp, #0]
 8018a88:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8018a8c:	9b07      	ldr	r3, [sp, #28]
 8018a8e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8018a90:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8018a94:	f7ff fc4e 	bl	8018334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8018a98:	e77c      	b.n	8018994 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018a9a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018a9c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018a9e:	9d07      	ldr	r5, [sp, #28]
 8018aa0:	1412      	asrs	r2, r2, #16
 8018aa2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018aa6:	1423      	asrs	r3, r4, #16
 8018aa8:	fb05 2303 	mla	r3, r5, r3, r2
 8018aac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018aae:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8018ab2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8018ab6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018aba:	0e1e      	lsrs	r6, r3, #24
 8018abc:	2900      	cmp	r1, #0
 8018abe:	f000 811a 	beq.w	8018cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8018ac2:	686a      	ldr	r2, [r5, #4]
 8018ac4:	920d      	str	r2, [sp, #52]	; 0x34
 8018ac6:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8018aca:	2800      	cmp	r0, #0
 8018acc:	f000 811c 	beq.w	8018d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8018ad0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018ad2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018ad4:	18aa      	adds	r2, r5, r2
 8018ad6:	59ed      	ldr	r5, [r5, r7]
 8018ad8:	6852      	ldr	r2, [r2, #4]
 8018ada:	9509      	str	r5, [sp, #36]	; 0x24
 8018adc:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8018ae0:	920f      	str	r2, [sp, #60]	; 0x3c
 8018ae2:	0e15      	lsrs	r5, r2, #24
 8018ae4:	b289      	uxth	r1, r1
 8018ae6:	b280      	uxth	r0, r0
 8018ae8:	fb01 f900 	mul.w	r9, r1, r0
 8018aec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018af0:	0109      	lsls	r1, r1, #4
 8018af2:	eba1 0e09 	sub.w	lr, r1, r9
 8018af6:	b280      	uxth	r0, r0
 8018af8:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8018afc:	fa1f fe8e 	uxth.w	lr, lr
 8018b00:	1a12      	subs	r2, r2, r0
 8018b02:	b292      	uxth	r2, r2
 8018b04:	fb0e f10c 	mul.w	r1, lr, ip
 8018b08:	fb02 1106 	mla	r1, r2, r6, r1
 8018b0c:	fb00 1108 	mla	r1, r0, r8, r1
 8018b10:	fb09 1105 	mla	r1, r9, r5, r1
 8018b14:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018b18:	2900      	cmp	r1, #0
 8018b1a:	f000 80e0 	beq.w	8018cde <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8018b1e:	2eff      	cmp	r6, #255	; 0xff
 8018b20:	d016      	beq.n	8018b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8018b22:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8018b26:	4377      	muls	r7, r6
 8018b28:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018b2c:	435e      	muls	r6, r3
 8018b2e:	0a3b      	lsrs	r3, r7, #8
 8018b30:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b34:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018b38:	443b      	add	r3, r7
 8018b3a:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8018b3e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8018b42:	0a1b      	lsrs	r3, r3, #8
 8018b44:	0a3f      	lsrs	r7, r7, #8
 8018b46:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b4a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018b4e:	433b      	orrs	r3, r7
 8018b50:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018b54:	d01d      	beq.n	8018b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8018b56:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018b58:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8018b5a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018b5e:	fb0c f606 	mul.w	r6, ip, r6
 8018b62:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018b66:	fb0c fc07 	mul.w	ip, ip, r7
 8018b6a:	0a37      	lsrs	r7, r6, #8
 8018b6c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018b70:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018b74:	4437      	add	r7, r6
 8018b76:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8018b7a:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8018b7e:	0a3f      	lsrs	r7, r7, #8
 8018b80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018b84:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018b88:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018b8c:	ea47 060c 	orr.w	r6, r7, ip
 8018b90:	960d      	str	r6, [sp, #52]	; 0x34
 8018b92:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018b96:	d01d      	beq.n	8018bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8018b98:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018b9a:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018b9e:	fb08 fc0c 	mul.w	ip, r8, ip
 8018ba2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018ba6:	fb08 f806 	mul.w	r8, r8, r6
 8018baa:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018bae:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8018bb2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018bb6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018bba:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8018bbe:	4467      	add	r7, ip
 8018bc0:	0a3f      	lsrs	r7, r7, #8
 8018bc2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018bc6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018bca:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018bce:	ea47 0608 	orr.w	r6, r7, r8
 8018bd2:	9609      	str	r6, [sp, #36]	; 0x24
 8018bd4:	2dff      	cmp	r5, #255	; 0xff
 8018bd6:	d01a      	beq.n	8018c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8018bd8:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018bda:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018bde:	fb05 fc0c 	mul.w	ip, r5, ip
 8018be2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018be6:	4375      	muls	r5, r6
 8018be8:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018bec:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018bf0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018bf4:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8018bf8:	4467      	add	r7, ip
 8018bfa:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8018bfe:	0a3f      	lsrs	r7, r7, #8
 8018c00:	0a2d      	lsrs	r5, r5, #8
 8018c02:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018c06:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018c0a:	433d      	orrs	r5, r7
 8018c0c:	950f      	str	r5, [sp, #60]	; 0x3c
 8018c0e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018c10:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018c14:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8018c18:	fb0e f505 	mul.w	r5, lr, r5
 8018c1c:	fb02 5506 	mla	r5, r2, r6, r5
 8018c20:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018c22:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018c26:	fb00 5506 	mla	r5, r0, r6, r5
 8018c2a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018c2c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018c30:	fb09 5506 	mla	r5, r9, r6, r5
 8018c34:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018c36:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018c3a:	fb0e fe06 	mul.w	lr, lr, r6
 8018c3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018c42:	fb02 e303 	mla	r3, r2, r3, lr
 8018c46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018c48:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8018c4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018c4e:	fb00 3307 	mla	r3, r0, r7, r3
 8018c52:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8018c56:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018c5a:	fb01 f10b 	mul.w	r1, r1, fp
 8018c5e:	0a2d      	lsrs	r5, r5, #8
 8018c60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c64:	f8ba 0000 	ldrh.w	r0, [sl]
 8018c68:	1c4b      	adds	r3, r1, #1
 8018c6a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018c6e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018c72:	ea45 050c 	orr.w	r5, r5, ip
 8018c76:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018c7a:	1202      	asrs	r2, r0, #8
 8018c7c:	0c2b      	lsrs	r3, r5, #16
 8018c7e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8018c82:	b2c9      	uxtb	r1, r1
 8018c84:	fb13 f30b 	smulbb	r3, r3, fp
 8018c88:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018c8c:	fb02 3201 	mla	r2, r2, r1, r3
 8018c90:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8018c94:	10c3      	asrs	r3, r0, #3
 8018c96:	b2ed      	uxtb	r5, r5
 8018c98:	00c0      	lsls	r0, r0, #3
 8018c9a:	b2c0      	uxtb	r0, r0
 8018c9c:	fb15 f50b 	smulbb	r5, r5, fp
 8018ca0:	fb00 5001 	mla	r0, r0, r1, r5
 8018ca4:	b292      	uxth	r2, r2
 8018ca6:	fb16 f60b 	smulbb	r6, r6, fp
 8018caa:	b280      	uxth	r0, r0
 8018cac:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018cb0:	fb03 6301 	mla	r3, r3, r1, r6
 8018cb4:	1c51      	adds	r1, r2, #1
 8018cb6:	1c46      	adds	r6, r0, #1
 8018cb8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018cbc:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8018cc0:	b29b      	uxth	r3, r3
 8018cc2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018cc6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018cca:	4332      	orrs	r2, r6
 8018ccc:	1c5e      	adds	r6, r3, #1
 8018cce:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8018cd2:	095b      	lsrs	r3, r3, #5
 8018cd4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018cd8:	431a      	orrs	r2, r3
 8018cda:	f8aa 2000 	strh.w	r2, [sl]
 8018cde:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018ce0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018ce2:	4413      	add	r3, r2
 8018ce4:	932b      	str	r3, [sp, #172]	; 0xac
 8018ce6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018ce8:	441c      	add	r4, r3
 8018cea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018cec:	3b01      	subs	r3, #1
 8018cee:	f10a 0a02 	add.w	sl, sl, #2
 8018cf2:	9311      	str	r3, [sp, #68]	; 0x44
 8018cf4:	e4ea      	b.n	80186cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8018cf6:	b150      	cbz	r0, 8018d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 8018cf8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018cfa:	58aa      	ldr	r2, [r5, r2]
 8018cfc:	9209      	str	r2, [sp, #36]	; 0x24
 8018cfe:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8018d02:	25ff      	movs	r5, #255	; 0xff
 8018d04:	46ac      	mov	ip, r5
 8018d06:	e6ed      	b.n	8018ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8018d08:	25ff      	movs	r5, #255	; 0xff
 8018d0a:	46a8      	mov	r8, r5
 8018d0c:	e6ea      	b.n	8018ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8018d0e:	25ff      	movs	r5, #255	; 0xff
 8018d10:	46a8      	mov	r8, r5
 8018d12:	e7f7      	b.n	8018d04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8018d14:	b019      	add	sp, #100	; 0x64
 8018d16:	ecbd 8b08 	vpop	{d8-d11}
 8018d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8018d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d24:	8808      	ldrh	r0, [r1, #0]
 8018d26:	b085      	sub	sp, #20
 8018d28:	1206      	asrs	r6, r0, #8
 8018d2a:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8018d2e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018d32:	9600      	str	r6, [sp, #0]
 8018d34:	10c6      	asrs	r6, r0, #3
 8018d36:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018d3a:	9601      	str	r6, [sp, #4]
 8018d3c:	00c0      	lsls	r0, r0, #3
 8018d3e:	fb04 c603 	mla	r6, r4, r3, ip
 8018d42:	b2c0      	uxtb	r0, r0
 8018d44:	4691      	mov	r9, r2
 8018d46:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8018d4a:	9a00      	ldr	r2, [sp, #0]
 8018d4c:	9002      	str	r0, [sp, #8]
 8018d4e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8018d52:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8018d56:	9a01      	ldr	r2, [sp, #4]
 8018d58:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8018d5c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8018d60:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018d64:	2c00      	cmp	r4, #0
 8018d66:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8018d6a:	db3a      	blt.n	8018de2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018d6c:	45a0      	cmp	r8, r4
 8018d6e:	dd38      	ble.n	8018de2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018d70:	f1bc 0f00 	cmp.w	ip, #0
 8018d74:	db33      	blt.n	8018dde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018d76:	4563      	cmp	r3, ip
 8018d78:	dd31      	ble.n	8018dde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018d7a:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8018d7e:	f11c 0601 	adds.w	r6, ip, #1
 8018d82:	d431      	bmi.n	8018de8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018d84:	42b3      	cmp	r3, r6
 8018d86:	dd2f      	ble.n	8018de8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018d88:	b375      	cbz	r5, 8018de8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018d8a:	f8de 6004 	ldr.w	r6, [lr, #4]
 8018d8e:	3401      	adds	r4, #1
 8018d90:	d42e      	bmi.n	8018df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018d92:	45a0      	cmp	r8, r4
 8018d94:	dd2c      	ble.n	8018df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018d96:	b35f      	cbz	r7, 8018df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018d98:	f1bc 0f00 	cmp.w	ip, #0
 8018d9c:	db26      	blt.n	8018dec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018d9e:	4563      	cmp	r3, ip
 8018da0:	dd24      	ble.n	8018dec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018da2:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8018da6:	f11c 0c01 	adds.w	ip, ip, #1
 8018daa:	d405      	bmi.n	8018db8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018dac:	4563      	cmp	r3, ip
 8018dae:	dd03      	ble.n	8018db8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018db0:	b115      	cbz	r5, 8018db8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018db2:	3301      	adds	r3, #1
 8018db4:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018db8:	2d0f      	cmp	r5, #15
 8018dba:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018dbe:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018dc2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018dc6:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8018dca:	d801      	bhi.n	8018dd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8018dcc:	2f0f      	cmp	r7, #15
 8018dce:	d911      	bls.n	8018df4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8018dd0:	4b7b      	ldr	r3, [pc, #492]	; (8018fc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8018dd2:	4a7c      	ldr	r2, [pc, #496]	; (8018fc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8018dd4:	487c      	ldr	r0, [pc, #496]	; (8018fc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 8018dd6:	f240 210d 	movw	r1, #525	; 0x20d
 8018dda:	f001 fd05 	bl	801a7e8 <__assert_func>
 8018dde:	4602      	mov	r2, r0
 8018de0:	e7cd      	b.n	8018d7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8018de2:	4606      	mov	r6, r0
 8018de4:	4602      	mov	r2, r0
 8018de6:	e7d2      	b.n	8018d8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8018de8:	4606      	mov	r6, r0
 8018dea:	e7d0      	b.n	8018d8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8018dec:	4604      	mov	r4, r0
 8018dee:	e7da      	b.n	8018da6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8018df0:	4604      	mov	r4, r0
 8018df2:	e7e1      	b.n	8018db8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018df4:	b2ab      	uxth	r3, r5
 8018df6:	b2bf      	uxth	r7, r7
 8018df8:	fb03 fe07 	mul.w	lr, r3, r7
 8018dfc:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018e00:	011b      	lsls	r3, r3, #4
 8018e02:	eba3 0c0e 	sub.w	ip, r3, lr
 8018e06:	b2bf      	uxth	r7, r7
 8018e08:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8018e0c:	fa1f fc8c 	uxth.w	ip, ip
 8018e10:	1bed      	subs	r5, r5, r7
 8018e12:	b2ad      	uxth	r5, r5
 8018e14:	fb0c f30a 	mul.w	r3, ip, sl
 8018e18:	fb05 330b 	mla	r3, r5, fp, r3
 8018e1c:	fb07 3309 	mla	r3, r7, r9, r3
 8018e20:	fb0e 3308 	mla	r3, lr, r8, r3
 8018e24:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018e28:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018e2c:	9303      	str	r3, [sp, #12]
 8018e2e:	d018      	beq.n	8018e62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8018e30:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018e34:	fb0b f303 	mul.w	r3, fp, r3
 8018e38:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018e3c:	fb0b fb02 	mul.w	fp, fp, r2
 8018e40:	0a1a      	lsrs	r2, r3, #8
 8018e42:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018e46:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8018e4a:	441a      	add	r2, r3
 8018e4c:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8018e50:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8018e54:	0a12      	lsrs	r2, r2, #8
 8018e56:	0a1b      	lsrs	r3, r3, #8
 8018e58:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018e5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018e60:	431a      	orrs	r2, r3
 8018e62:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018e66:	d019      	beq.n	8018e9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8018e68:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018e6c:	fb0a fb0b 	mul.w	fp, sl, fp
 8018e70:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018e74:	fb0a fa06 	mul.w	sl, sl, r6
 8018e78:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018e7c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018e80:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018e84:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8018e88:	445e      	add	r6, fp
 8018e8a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018e8e:	0a36      	lsrs	r6, r6, #8
 8018e90:	0a1b      	lsrs	r3, r3, #8
 8018e92:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018e96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018e9a:	431e      	orrs	r6, r3
 8018e9c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018ea0:	d019      	beq.n	8018ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8018ea2:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018ea6:	fb09 fa0a 	mul.w	sl, r9, sl
 8018eaa:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018eae:	fb09 f904 	mul.w	r9, r9, r4
 8018eb2:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018eb6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018eba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018ebe:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8018ec2:	4454      	add	r4, sl
 8018ec4:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8018ec8:	0a24      	lsrs	r4, r4, #8
 8018eca:	0a1b      	lsrs	r3, r3, #8
 8018ecc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018ed0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018ed4:	431c      	orrs	r4, r3
 8018ed6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018eda:	d019      	beq.n	8018f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8018edc:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8018ee0:	fb08 f909 	mul.w	r9, r8, r9
 8018ee4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018ee8:	fb08 f800 	mul.w	r8, r8, r0
 8018eec:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8018ef0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018ef4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018ef8:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8018efc:	4448      	add	r0, r9
 8018efe:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8018f02:	0a00      	lsrs	r0, r0, #8
 8018f04:	0a1b      	lsrs	r3, r3, #8
 8018f06:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018f0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018f0e:	4318      	orrs	r0, r3
 8018f10:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018f14:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018f18:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018f1c:	fb0c f808 	mul.w	r8, ip, r8
 8018f20:	fb0c f606 	mul.w	r6, ip, r6
 8018f24:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018f28:	fb05 8803 	mla	r8, r5, r3, r8
 8018f2c:	fb05 6202 	mla	r2, r5, r2, r6
 8018f30:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8018f34:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018f38:	fb07 8803 	mla	r8, r7, r3, r8
 8018f3c:	fb07 2704 	mla	r7, r7, r4, r2
 8018f40:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8018f44:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018f48:	fb0e 8303 	mla	r3, lr, r3, r8
 8018f4c:	fb0e 7e00 	mla	lr, lr, r0, r7
 8018f50:	0a1b      	lsrs	r3, r3, #8
 8018f52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018f56:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018f5a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018f5e:	ea43 0e0e 	orr.w	lr, r3, lr
 8018f62:	9b03      	ldr	r3, [sp, #12]
 8018f64:	9800      	ldr	r0, [sp, #0]
 8018f66:	9c01      	ldr	r4, [sp, #4]
 8018f68:	9a02      	ldr	r2, [sp, #8]
 8018f6a:	43db      	mvns	r3, r3
 8018f6c:	b2db      	uxtb	r3, r3
 8018f6e:	4358      	muls	r0, r3
 8018f70:	435c      	muls	r4, r3
 8018f72:	435a      	muls	r2, r3
 8018f74:	1c43      	adds	r3, r0, #1
 8018f76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018f7a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8018f7e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018f82:	4b12      	ldr	r3, [pc, #72]	; (8018fcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 8018f84:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 8018f88:	1c50      	adds	r0, r2, #1
 8018f8a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018f8e:	fa5f f28e 	uxtb.w	r2, lr
 8018f92:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018f96:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8018f9a:	1c62      	adds	r2, r4, #1
 8018f9c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018fa0:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8018fa4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8018fa8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018fac:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018fb0:	ea43 0e0e 	orr.w	lr, r3, lr
 8018fb4:	f8a1 e000 	strh.w	lr, [r1]
 8018fb8:	b005      	add	sp, #20
 8018fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018fbe:	bf00      	nop
 8018fc0:	0801eb1d 	.word	0x0801eb1d
 8018fc4:	0801f075 	.word	0x0801f075
 8018fc8:	0801eba5 	.word	0x0801eba5
 8018fcc:	fffff800 	.word	0xfffff800

08018fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fd4:	ed2d 8b08 	vpush	{d8-d11}
 8018fd8:	b097      	sub	sp, #92	; 0x5c
 8018fda:	eeb0 aa40 	vmov.f32	s20, s0
 8018fde:	9306      	str	r3, [sp, #24]
 8018fe0:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 8018fe4:	9307      	str	r3, [sp, #28]
 8018fe6:	9214      	str	r2, [sp, #80]	; 0x50
 8018fe8:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8018fec:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018fee:	9112      	str	r1, [sp, #72]	; 0x48
 8018ff0:	9310      	str	r3, [sp, #64]	; 0x40
 8018ff2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8018ff6:	9015      	str	r0, [sp, #84]	; 0x54
 8018ff8:	6850      	ldr	r0, [r2, #4]
 8018ffa:	6812      	ldr	r2, [r2, #0]
 8018ffc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8018ffe:	fb00 1303 	mla	r3, r0, r3, r1
 8019002:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019006:	930a      	str	r3, [sp, #40]	; 0x28
 8019008:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801900a:	681b      	ldr	r3, [r3, #0]
 801900c:	9311      	str	r3, [sp, #68]	; 0x44
 801900e:	9b07      	ldr	r3, [sp, #28]
 8019010:	009b      	lsls	r3, r3, #2
 8019012:	eef0 9a60 	vmov.f32	s19, s1
 8019016:	eeb0 9a41 	vmov.f32	s18, s2
 801901a:	eeb0 8a62 	vmov.f32	s16, s5
 801901e:	eef0 8a43 	vmov.f32	s17, s6
 8019022:	eef0 ba44 	vmov.f32	s23, s8
 8019026:	eeb0 ba64 	vmov.f32	s22, s9
 801902a:	eef0 aa45 	vmov.f32	s21, s10
 801902e:	930e      	str	r3, [sp, #56]	; 0x38
 8019030:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019032:	2b00      	cmp	r3, #0
 8019034:	dc03      	bgt.n	801903e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8019036:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019038:	2b00      	cmp	r3, #0
 801903a:	f340 8361 	ble.w	8019700 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801903e:	9b06      	ldr	r3, [sp, #24]
 8019040:	2b00      	cmp	r3, #0
 8019042:	f340 819b 	ble.w	801937c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8019046:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019048:	1412      	asrs	r2, r2, #16
 801904a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801904e:	d42e      	bmi.n	80190ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8019050:	9807      	ldr	r0, [sp, #28]
 8019052:	1c51      	adds	r1, r2, #1
 8019054:	4288      	cmp	r0, r1
 8019056:	dd2d      	ble.n	80190b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019058:	2b00      	cmp	r3, #0
 801905a:	db2b      	blt.n	80190b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801905c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801905e:	1c59      	adds	r1, r3, #1
 8019060:	4288      	cmp	r0, r1
 8019062:	dd27      	ble.n	80190b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019064:	9b06      	ldr	r3, [sp, #24]
 8019066:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019068:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801906a:	3b01      	subs	r3, #1
 801906c:	fb02 1203 	mla	r2, r2, r3, r1
 8019070:	1412      	asrs	r2, r2, #16
 8019072:	d42a      	bmi.n	80190ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019074:	9907      	ldr	r1, [sp, #28]
 8019076:	3201      	adds	r2, #1
 8019078:	4291      	cmp	r1, r2
 801907a:	dd26      	ble.n	80190ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801907c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801907e:	fb02 5303 	mla	r3, r2, r3, r5
 8019082:	141b      	asrs	r3, r3, #16
 8019084:	d421      	bmi.n	80190ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019086:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019088:	3301      	adds	r3, #1
 801908a:	429a      	cmp	r2, r3
 801908c:	dd1d      	ble.n	80190ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801908e:	9b06      	ldr	r3, [sp, #24]
 8019090:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8019094:	9313      	str	r3, [sp, #76]	; 0x4c
 8019096:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019098:	2b00      	cmp	r3, #0
 801909a:	f300 81e3 	bgt.w	8019464 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 801909e:	9b06      	ldr	r3, [sp, #24]
 80190a0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80190a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80190a6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80190aa:	930a      	str	r3, [sp, #40]	; 0x28
 80190ac:	e168      	b.n	8019380 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 80190ae:	1c51      	adds	r1, r2, #1
 80190b0:	f040 8157 	bne.w	8019362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80190b4:	9907      	ldr	r1, [sp, #28]
 80190b6:	428a      	cmp	r2, r1
 80190b8:	f280 8153 	bge.w	8019362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80190bc:	1c5f      	adds	r7, r3, #1
 80190be:	f2c0 8150 	blt.w	8019362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80190c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80190c4:	4293      	cmp	r3, r2
 80190c6:	f280 814c 	bge.w	8019362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80190ca:	9b06      	ldr	r3, [sp, #24]
 80190cc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80190ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80190d0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80190d2:	2b00      	cmp	r3, #0
 80190d4:	dde3      	ble.n	801909e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 80190d6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80190d8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80190da:	1409      	asrs	r1, r1, #16
 80190dc:	ea4f 4325 	mov.w	r3, r5, asr #16
 80190e0:	f3c2 3203 	ubfx	r2, r2, #12, #4
 80190e4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80190e8:	f100 81a3 	bmi.w	8019432 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 80190ec:	9c07      	ldr	r4, [sp, #28]
 80190ee:	1c4e      	adds	r6, r1, #1
 80190f0:	42b4      	cmp	r4, r6
 80190f2:	f340 81a0 	ble.w	8019436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80190f6:	2b00      	cmp	r3, #0
 80190f8:	f2c0 819d 	blt.w	8019436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80190fc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80190fe:	1c5e      	adds	r6, r3, #1
 8019100:	42b4      	cmp	r4, r6
 8019102:	f340 8198 	ble.w	8019436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019106:	9c07      	ldr	r4, [sp, #28]
 8019108:	fb03 1304 	mla	r3, r3, r4, r1
 801910c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801910e:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8019112:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8019116:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801911a:	2a00      	cmp	r2, #0
 801911c:	f000 816f 	beq.w	80193fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8019120:	6871      	ldr	r1, [r6, #4]
 8019122:	910b      	str	r1, [sp, #44]	; 0x2c
 8019124:	ea4f 6811 	mov.w	r8, r1, lsr #24
 8019128:	2800      	cmp	r0, #0
 801912a:	f000 8171 	beq.w	8019410 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 801912e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019130:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019132:	1871      	adds	r1, r6, r1
 8019134:	5934      	ldr	r4, [r6, r4]
 8019136:	6849      	ldr	r1, [r1, #4]
 8019138:	9408      	str	r4, [sp, #32]
 801913a:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 801913e:	910c      	str	r1, [sp, #48]	; 0x30
 8019140:	0e0e      	lsrs	r6, r1, #24
 8019142:	b292      	uxth	r2, r2
 8019144:	b280      	uxth	r0, r0
 8019146:	fb02 fb00 	mul.w	fp, r2, r0
 801914a:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801914e:	0112      	lsls	r2, r2, #4
 8019150:	eba2 090b 	sub.w	r9, r2, fp
 8019154:	b280      	uxth	r0, r0
 8019156:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801915a:	fa1f f989 	uxth.w	r9, r9
 801915e:	1a09      	subs	r1, r1, r0
 8019160:	b289      	uxth	r1, r1
 8019162:	fb09 f208 	mul.w	r2, r9, r8
 8019166:	fb01 220c 	mla	r2, r1, ip, r2
 801916a:	fb00 220a 	mla	r2, r0, sl, r2
 801916e:	fb0b 2206 	mla	r2, fp, r6, r2
 8019172:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019176:	2a00      	cmp	r2, #0
 8019178:	f000 80e8 	beq.w	801934c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801917c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019180:	d01b      	beq.n	80191ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8019182:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019186:	fb0c fe0e 	mul.w	lr, ip, lr
 801918a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801918e:	fb0c fc03 	mul.w	ip, ip, r3
 8019192:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8019196:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801919a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801919e:	4473      	add	r3, lr
 80191a0:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80191a4:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80191a8:	0a1b      	lsrs	r3, r3, #8
 80191aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80191ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80191b2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80191b6:	ea43 030e 	orr.w	r3, r3, lr
 80191ba:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80191be:	d01e      	beq.n	80191fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 80191c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80191c2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80191c6:	fb08 fc0c 	mul.w	ip, r8, ip
 80191ca:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80191ce:	fb08 f80e 	mul.w	r8, r8, lr
 80191d2:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80191d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80191da:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80191de:	44e6      	add	lr, ip
 80191e0:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80191e4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80191e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80191ec:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80191f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80191f4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80191f8:	ea4e 0408 	orr.w	r4, lr, r8
 80191fc:	940b      	str	r4, [sp, #44]	; 0x2c
 80191fe:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019202:	d01e      	beq.n	8019242 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8019204:	9c08      	ldr	r4, [sp, #32]
 8019206:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801920a:	fb0a f808 	mul.w	r8, sl, r8
 801920e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019212:	fb0a fa0c 	mul.w	sl, sl, ip
 8019216:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801921a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801921e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019222:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019226:	44c6      	add	lr, r8
 8019228:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801922c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019230:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019234:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019238:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801923c:	ea4e 040a 	orr.w	r4, lr, sl
 8019240:	9408      	str	r4, [sp, #32]
 8019242:	2eff      	cmp	r6, #255	; 0xff
 8019244:	d01d      	beq.n	8019282 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 8019246:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019248:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801924c:	fb06 f808 	mul.w	r8, r6, r8
 8019250:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019254:	fb06 f60c 	mul.w	r6, r6, ip
 8019258:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801925c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019260:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019264:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8019268:	44c6      	add	lr, r8
 801926a:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801926e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019272:	0a36      	lsrs	r6, r6, #8
 8019274:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019278:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801927c:	ea4e 0406 	orr.w	r4, lr, r6
 8019280:	940c      	str	r4, [sp, #48]	; 0x30
 8019282:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019284:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8019288:	9c08      	ldr	r4, [sp, #32]
 801928a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801928e:	fb09 f606 	mul.w	r6, r9, r6
 8019292:	fb01 660c 	mla	r6, r1, ip, r6
 8019296:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801929a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801929c:	fb00 660c 	mla	r6, r0, ip, r6
 80192a0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80192a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80192a6:	fb0b 660c 	mla	r6, fp, ip, r6
 80192aa:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80192ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80192b2:	fb09 f90c 	mul.w	r9, r9, ip
 80192b6:	fb01 9303 	mla	r3, r1, r3, r9
 80192ba:	9908      	ldr	r1, [sp, #32]
 80192bc:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 80192c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80192c2:	fb00 330e 	mla	r3, r0, lr, r3
 80192c6:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80192ca:	fb0b 3b00 	mla	fp, fp, r0, r3
 80192ce:	0a36      	lsrs	r6, r6, #8
 80192d0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80192d4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80192d8:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80192dc:	ea46 060b 	orr.w	r6, r6, fp
 80192e0:	2aff      	cmp	r2, #255	; 0xff
 80192e2:	ea4f 2316 	mov.w	r3, r6, lsr #8
 80192e6:	f000 8099 	beq.w	801941c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 80192ea:	8839      	ldrh	r1, [r7, #0]
 80192ec:	43d2      	mvns	r2, r2
 80192ee:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80192f2:	fa5f fe82 	uxtb.w	lr, r2
 80192f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80192fa:	fb0c fc0e 	mul.w	ip, ip, lr
 80192fe:	10c8      	asrs	r0, r1, #3
 8019300:	00ca      	lsls	r2, r1, #3
 8019302:	f10c 0101 	add.w	r1, ip, #1
 8019306:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801930a:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 801930e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019312:	b2d2      	uxtb	r2, r2
 8019314:	4952      	ldr	r1, [pc, #328]	; (8019460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 8019316:	fb02 f20e 	mul.w	r2, r2, lr
 801931a:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801931e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019322:	1c51      	adds	r1, r2, #1
 8019324:	fb00 f00e 	mul.w	r0, r0, lr
 8019328:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801932c:	b2f6      	uxtb	r6, r6
 801932e:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8019332:	1c42      	adds	r2, r0, #1
 8019334:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019338:	b2db      	uxtb	r3, r3
 801933a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801933e:	00db      	lsls	r3, r3, #3
 8019340:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 8019344:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019348:	431e      	orrs	r6, r3
 801934a:	803e      	strh	r6, [r7, #0]
 801934c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801934e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019350:	441a      	add	r2, r3
 8019352:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019354:	9229      	str	r2, [sp, #164]	; 0xa4
 8019356:	441d      	add	r5, r3
 8019358:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801935a:	3b01      	subs	r3, #1
 801935c:	3702      	adds	r7, #2
 801935e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019360:	e6b6      	b.n	80190d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8019362:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019364:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019366:	441a      	add	r2, r3
 8019368:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801936a:	9229      	str	r2, [sp, #164]	; 0xa4
 801936c:	441d      	add	r5, r3
 801936e:	9b06      	ldr	r3, [sp, #24]
 8019370:	3b01      	subs	r3, #1
 8019372:	9306      	str	r3, [sp, #24]
 8019374:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019376:	3302      	adds	r3, #2
 8019378:	930a      	str	r3, [sp, #40]	; 0x28
 801937a:	e660      	b.n	801903e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801937c:	f47f ae72 	bne.w	8019064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8019380:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019382:	2b00      	cmp	r3, #0
 8019384:	f340 81bc 	ble.w	8019700 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8019388:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801938c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019390:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019394:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019396:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801939a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801939e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80193a2:	eef0 6a48 	vmov.f32	s13, s16
 80193a6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80193aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193ae:	ee37 8a48 	vsub.f32	s16, s14, s16
 80193b2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80193b6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80193ba:	eef0 6a68 	vmov.f32	s13, s17
 80193be:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80193c2:	ee18 2a10 	vmov	r2, s16
 80193c6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80193ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80193ce:	ee18 2a90 	vmov	r2, s17
 80193d2:	932b      	str	r3, [sp, #172]	; 0xac
 80193d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80193d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80193da:	932c      	str	r3, [sp, #176]	; 0xb0
 80193dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80193de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80193e0:	3b01      	subs	r3, #1
 80193e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193e6:	9312      	str	r3, [sp, #72]	; 0x48
 80193e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80193ea:	bf08      	it	eq
 80193ec:	4613      	moveq	r3, r2
 80193ee:	ee16 5a90 	vmov	r5, s13
 80193f2:	9306      	str	r3, [sp, #24]
 80193f4:	eef0 8a67 	vmov.f32	s17, s15
 80193f8:	eeb0 8a47 	vmov.f32	s16, s14
 80193fc:	e618      	b.n	8019030 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80193fe:	b150      	cbz	r0, 8019416 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8019400:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019402:	5871      	ldr	r1, [r6, r1]
 8019404:	9108      	str	r1, [sp, #32]
 8019406:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801940a:	26ff      	movs	r6, #255	; 0xff
 801940c:	46b0      	mov	r8, r6
 801940e:	e698      	b.n	8019142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019410:	26ff      	movs	r6, #255	; 0xff
 8019412:	46b2      	mov	sl, r6
 8019414:	e695      	b.n	8019142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019416:	26ff      	movs	r6, #255	; 0xff
 8019418:	46b2      	mov	sl, r6
 801941a:	e7f7      	b.n	801940c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 801941c:	0972      	lsrs	r2, r6, #5
 801941e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019422:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019426:	f023 0307 	bic.w	r3, r3, #7
 801942a:	4313      	orrs	r3, r2
 801942c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019430:	e78a      	b.n	8019348 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 8019432:	1c4e      	adds	r6, r1, #1
 8019434:	d18a      	bne.n	801934c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019436:	9c07      	ldr	r4, [sp, #28]
 8019438:	428c      	cmp	r4, r1
 801943a:	dd87      	ble.n	801934c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801943c:	1c5c      	adds	r4, r3, #1
 801943e:	db85      	blt.n	801934c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019440:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019442:	429c      	cmp	r4, r3
 8019444:	dd82      	ble.n	801934c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019446:	e9cd 2003 	strd	r2, r0, [sp, #12]
 801944a:	e9cd 1301 	strd	r1, r3, [sp, #4]
 801944e:	9400      	str	r4, [sp, #0]
 8019450:	9b07      	ldr	r3, [sp, #28]
 8019452:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019454:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019456:	4639      	mov	r1, r7
 8019458:	f7ff fc62 	bl	8018d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801945c:	e776      	b.n	801934c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801945e:	bf00      	nop
 8019460:	fffff800 	.word	0xfffff800
 8019464:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019466:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019468:	9c07      	ldr	r4, [sp, #28]
 801946a:	1409      	asrs	r1, r1, #16
 801946c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019470:	142b      	asrs	r3, r5, #16
 8019472:	fb04 1303 	mla	r3, r4, r3, r1
 8019476:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019478:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 801947c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8019480:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019484:	0e1f      	lsrs	r7, r3, #24
 8019486:	2a00      	cmp	r2, #0
 8019488:	f000 811d 	beq.w	80196c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 801948c:	6871      	ldr	r1, [r6, #4]
 801948e:	910d      	str	r1, [sp, #52]	; 0x34
 8019490:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8019494:	2800      	cmp	r0, #0
 8019496:	f000 811f 	beq.w	80196d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801949a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801949c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801949e:	1871      	adds	r1, r6, r1
 80194a0:	5934      	ldr	r4, [r6, r4]
 80194a2:	6849      	ldr	r1, [r1, #4]
 80194a4:	9409      	str	r4, [sp, #36]	; 0x24
 80194a6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80194aa:	910f      	str	r1, [sp, #60]	; 0x3c
 80194ac:	0e0e      	lsrs	r6, r1, #24
 80194ae:	b292      	uxth	r2, r2
 80194b0:	b280      	uxth	r0, r0
 80194b2:	fb02 fb00 	mul.w	fp, r2, r0
 80194b6:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80194ba:	0112      	lsls	r2, r2, #4
 80194bc:	eba2 080b 	sub.w	r8, r2, fp
 80194c0:	b280      	uxth	r0, r0
 80194c2:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80194c6:	fa1f f888 	uxth.w	r8, r8
 80194ca:	1a09      	subs	r1, r1, r0
 80194cc:	b289      	uxth	r1, r1
 80194ce:	fb08 f20e 	mul.w	r2, r8, lr
 80194d2:	fb01 2207 	mla	r2, r1, r7, r2
 80194d6:	fb00 2209 	mla	r2, r0, r9, r2
 80194da:	fb0b 2206 	mla	r2, fp, r6, r2
 80194de:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80194e2:	2a00      	cmp	r2, #0
 80194e4:	f000 80e3 	beq.w	80196ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 80194e8:	2fff      	cmp	r7, #255	; 0xff
 80194ea:	d01a      	beq.n	8019522 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 80194ec:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80194f0:	fb07 fc0c 	mul.w	ip, r7, ip
 80194f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80194f8:	435f      	muls	r7, r3
 80194fa:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80194fe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019502:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019506:	4463      	add	r3, ip
 8019508:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 801950c:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8019510:	0a1b      	lsrs	r3, r3, #8
 8019512:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019516:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801951a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801951e:	ea43 030c 	orr.w	r3, r3, ip
 8019522:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019526:	d01e      	beq.n	8019566 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8019528:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801952a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801952e:	fb0e f707 	mul.w	r7, lr, r7
 8019532:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019536:	fb0e fe0c 	mul.w	lr, lr, ip
 801953a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801953e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019542:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019546:	44bc      	add	ip, r7
 8019548:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801954c:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8019550:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019554:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019558:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801955c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019560:	ea4c 040e 	orr.w	r4, ip, lr
 8019564:	940d      	str	r4, [sp, #52]	; 0x34
 8019566:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801956a:	d01e      	beq.n	80195aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 801956c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801956e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019572:	fb09 fe0e 	mul.w	lr, r9, lr
 8019576:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801957a:	fb09 f907 	mul.w	r9, r9, r7
 801957e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8019582:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019586:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801958a:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801958e:	44f4      	add	ip, lr
 8019590:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8019594:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019598:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801959c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80195a0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80195a4:	ea4c 0409 	orr.w	r4, ip, r9
 80195a8:	9409      	str	r4, [sp, #36]	; 0x24
 80195aa:	2eff      	cmp	r6, #255	; 0xff
 80195ac:	d01c      	beq.n	80195e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 80195ae:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80195b0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80195b4:	fb06 fe0e 	mul.w	lr, r6, lr
 80195b8:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80195bc:	437e      	muls	r6, r7
 80195be:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80195c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80195c6:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80195ca:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80195ce:	44f4      	add	ip, lr
 80195d0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80195d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80195d8:	0a36      	lsrs	r6, r6, #8
 80195da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80195de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80195e2:	ea4c 0406 	orr.w	r4, ip, r6
 80195e6:	940f      	str	r4, [sp, #60]	; 0x3c
 80195e8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80195ea:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 80195ee:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80195f0:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80195f4:	fb08 f606 	mul.w	r6, r8, r6
 80195f8:	fb01 6607 	mla	r6, r1, r7, r6
 80195fc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019600:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019602:	fb00 6607 	mla	r6, r0, r7, r6
 8019606:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801960a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801960c:	fb0b 6607 	mla	r6, fp, r7, r6
 8019610:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8019614:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019618:	fb08 f807 	mul.w	r8, r8, r7
 801961c:	fb01 8303 	mla	r3, r1, r3, r8
 8019620:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019622:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8019626:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019628:	fb00 330c 	mla	r3, r0, ip, r3
 801962c:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8019630:	fb0b 3e0e 	mla	lr, fp, lr, r3
 8019634:	0a36      	lsrs	r6, r6, #8
 8019636:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801963a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801963e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019642:	ea46 060e 	orr.w	r6, r6, lr
 8019646:	2aff      	cmp	r2, #255	; 0xff
 8019648:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801964c:	d04a      	beq.n	80196e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801964e:	f8ba 1000 	ldrh.w	r1, [sl]
 8019652:	43d2      	mvns	r2, r2
 8019654:	120f      	asrs	r7, r1, #8
 8019656:	fa5f fc82 	uxtb.w	ip, r2
 801965a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801965e:	fb07 f70c 	mul.w	r7, r7, ip
 8019662:	10c8      	asrs	r0, r1, #3
 8019664:	00ca      	lsls	r2, r1, #3
 8019666:	1c79      	adds	r1, r7, #1
 8019668:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 801966c:	0c37      	lsrs	r7, r6, #16
 801966e:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8019672:	b2d2      	uxtb	r2, r2
 8019674:	4925      	ldr	r1, [pc, #148]	; (801970c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 8019676:	fb02 f20c 	mul.w	r2, r2, ip
 801967a:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 801967e:	1c51      	adds	r1, r2, #1
 8019680:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019684:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019688:	b2f6      	uxtb	r6, r6
 801968a:	fb00 f00c 	mul.w	r0, r0, ip
 801968e:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8019692:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 8019696:	1c46      	adds	r6, r0, #1
 8019698:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 801969c:	b2de      	uxtb	r6, r3
 801969e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80196a2:	00f6      	lsls	r6, r6, #3
 80196a4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80196a8:	4337      	orrs	r7, r6
 80196aa:	f8aa 7000 	strh.w	r7, [sl]
 80196ae:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80196b0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80196b2:	441a      	add	r2, r3
 80196b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80196b6:	9229      	str	r2, [sp, #164]	; 0xa4
 80196b8:	441d      	add	r5, r3
 80196ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80196bc:	3b01      	subs	r3, #1
 80196be:	f10a 0a02 	add.w	sl, sl, #2
 80196c2:	9313      	str	r3, [sp, #76]	; 0x4c
 80196c4:	e4e7      	b.n	8019096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 80196c6:	b150      	cbz	r0, 80196de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 80196c8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80196ca:	5871      	ldr	r1, [r6, r1]
 80196cc:	9109      	str	r1, [sp, #36]	; 0x24
 80196ce:	ea4f 6911 	mov.w	r9, r1, lsr #24
 80196d2:	26ff      	movs	r6, #255	; 0xff
 80196d4:	46b6      	mov	lr, r6
 80196d6:	e6ea      	b.n	80194ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 80196d8:	26ff      	movs	r6, #255	; 0xff
 80196da:	46b1      	mov	r9, r6
 80196dc:	e6e7      	b.n	80194ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 80196de:	26ff      	movs	r6, #255	; 0xff
 80196e0:	46b1      	mov	r9, r6
 80196e2:	e7f7      	b.n	80196d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 80196e4:	0972      	lsrs	r2, r6, #5
 80196e6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80196ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80196ee:	f023 0307 	bic.w	r3, r3, #7
 80196f2:	4313      	orrs	r3, r2
 80196f4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80196f8:	431e      	orrs	r6, r3
 80196fa:	f8aa 6000 	strh.w	r6, [sl]
 80196fe:	e7d6      	b.n	80196ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019700:	b017      	add	sp, #92	; 0x5c
 8019702:	ecbd 8b08 	vpop	{d8-d11}
 8019706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801970a:	bf00      	nop
 801970c:	fffff800 	.word	0xfffff800

08019710 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8019710:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019714:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019718:	2c00      	cmp	r4, #0
 801971a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801971e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8019722:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019726:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801972a:	fb04 ce03 	mla	lr, r4, r3, ip
 801972e:	db60      	blt.n	80197f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8019730:	45a1      	cmp	r9, r4
 8019732:	dd5e      	ble.n	80197f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8019734:	f1bc 0f00 	cmp.w	ip, #0
 8019738:	db59      	blt.n	80197ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801973a:	45e0      	cmp	r8, ip
 801973c:	dd57      	ble.n	80197ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801973e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8019742:	f01e 0f01 	tst.w	lr, #1
 8019746:	5c16      	ldrb	r6, [r2, r0]
 8019748:	bf0c      	ite	eq
 801974a:	f006 060f 	andeq.w	r6, r6, #15
 801974e:	1136      	asrne	r6, r6, #4
 8019750:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019754:	b2f6      	uxtb	r6, r6
 8019756:	f11c 0001 	adds.w	r0, ip, #1
 801975a:	d44d      	bmi.n	80197f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801975c:	4580      	cmp	r8, r0
 801975e:	dd4b      	ble.n	80197f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8019760:	2d00      	cmp	r5, #0
 8019762:	d04b      	beq.n	80197fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8019764:	f10e 0a01 	add.w	sl, lr, #1
 8019768:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801976c:	f01a 0f01 	tst.w	sl, #1
 8019770:	5c10      	ldrb	r0, [r2, r0]
 8019772:	bf0c      	ite	eq
 8019774:	f000 000f 	andeq.w	r0, r0, #15
 8019778:	1100      	asrne	r0, r0, #4
 801977a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801977e:	b2c0      	uxtb	r0, r0
 8019780:	3401      	adds	r4, #1
 8019782:	d43f      	bmi.n	8019804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8019784:	45a1      	cmp	r9, r4
 8019786:	dd3d      	ble.n	8019804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8019788:	2f00      	cmp	r7, #0
 801978a:	f000 809e 	beq.w	80198ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801978e:	f1bc 0f00 	cmp.w	ip, #0
 8019792:	db35      	blt.n	8019800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019794:	45e0      	cmp	r8, ip
 8019796:	dd33      	ble.n	8019800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019798:	eb03 090e 	add.w	r9, r3, lr
 801979c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80197a0:	f019 0f01 	tst.w	r9, #1
 80197a4:	5d14      	ldrb	r4, [r2, r4]
 80197a6:	bf0c      	ite	eq
 80197a8:	f004 040f 	andeq.w	r4, r4, #15
 80197ac:	1124      	asrne	r4, r4, #4
 80197ae:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80197b2:	b2e4      	uxtb	r4, r4
 80197b4:	f11c 0c01 	adds.w	ip, ip, #1
 80197b8:	d427      	bmi.n	801980a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80197ba:	45e0      	cmp	r8, ip
 80197bc:	dd25      	ble.n	801980a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80197be:	b335      	cbz	r5, 801980e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 80197c0:	3301      	adds	r3, #1
 80197c2:	449e      	add	lr, r3
 80197c4:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80197c8:	f01e 0f01 	tst.w	lr, #1
 80197cc:	5cd2      	ldrb	r2, [r2, r3]
 80197ce:	bf0c      	ite	eq
 80197d0:	f002 020f 	andeq.w	r2, r2, #15
 80197d4:	1112      	asrne	r2, r2, #4
 80197d6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80197da:	b2d3      	uxtb	r3, r2
 80197dc:	2d0f      	cmp	r5, #15
 80197de:	d917      	bls.n	8019810 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 80197e0:	4b3c      	ldr	r3, [pc, #240]	; (80198d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 80197e2:	4a3d      	ldr	r2, [pc, #244]	; (80198d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80197e4:	483d      	ldr	r0, [pc, #244]	; (80198dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80197e6:	f240 210d 	movw	r1, #525	; 0x20d
 80197ea:	f000 fffd 	bl	801a7e8 <__assert_func>
 80197ee:	2600      	movs	r6, #0
 80197f0:	e7b1      	b.n	8019756 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 80197f2:	2000      	movs	r0, #0
 80197f4:	4606      	mov	r6, r0
 80197f6:	e7c3      	b.n	8019780 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 80197f8:	2000      	movs	r0, #0
 80197fa:	e7c1      	b.n	8019780 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 80197fc:	4628      	mov	r0, r5
 80197fe:	e7bf      	b.n	8019780 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019800:	2400      	movs	r4, #0
 8019802:	e7d7      	b.n	80197b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8019804:	2300      	movs	r3, #0
 8019806:	461c      	mov	r4, r3
 8019808:	e7e8      	b.n	80197dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801980a:	2300      	movs	r3, #0
 801980c:	e7e6      	b.n	80197dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801980e:	462b      	mov	r3, r5
 8019810:	2f0f      	cmp	r7, #15
 8019812:	d8e5      	bhi.n	80197e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019814:	b2ad      	uxth	r5, r5
 8019816:	b2bf      	uxth	r7, r7
 8019818:	fb05 fc07 	mul.w	ip, r5, r7
 801981c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8019820:	012d      	lsls	r5, r5, #4
 8019822:	b2bf      	uxth	r7, r7
 8019824:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019828:	eba5 050c 	sub.w	r5, r5, ip
 801982c:	1bd2      	subs	r2, r2, r7
 801982e:	b2ad      	uxth	r5, r5
 8019830:	b292      	uxth	r2, r2
 8019832:	4368      	muls	r0, r5
 8019834:	fb06 0002 	mla	r0, r6, r2, r0
 8019838:	fb07 0404 	mla	r4, r7, r4, r0
 801983c:	fb0c 4303 	mla	r3, ip, r3, r4
 8019840:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019844:	2b00      	cmp	r3, #0
 8019846:	d03e      	beq.n	80198c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 8019848:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801984c:	4a24      	ldr	r2, [pc, #144]	; (80198e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801984e:	4343      	muls	r3, r0
 8019850:	1c58      	adds	r0, r3, #1
 8019852:	6816      	ldr	r6, [r2, #0]
 8019854:	880a      	ldrh	r2, [r1, #0]
 8019856:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801985a:	1200      	asrs	r0, r0, #8
 801985c:	b284      	uxth	r4, r0
 801985e:	1215      	asrs	r5, r2, #8
 8019860:	43c0      	mvns	r0, r0
 8019862:	b2c3      	uxtb	r3, r0
 8019864:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019868:	0a30      	lsrs	r0, r6, #8
 801986a:	fb15 f503 	smulbb	r5, r5, r3
 801986e:	10d7      	asrs	r7, r2, #3
 8019870:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019874:	fb00 5004 	mla	r0, r0, r4, r5
 8019878:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801987c:	08f5      	lsrs	r5, r6, #3
 801987e:	00d2      	lsls	r2, r2, #3
 8019880:	fb17 f703 	smulbb	r7, r7, r3
 8019884:	b2d2      	uxtb	r2, r2
 8019886:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801988a:	00f6      	lsls	r6, r6, #3
 801988c:	fb05 7504 	mla	r5, r5, r4, r7
 8019890:	fb12 f303 	smulbb	r3, r2, r3
 8019894:	b2f6      	uxtb	r6, r6
 8019896:	fb06 3304 	mla	r3, r6, r4, r3
 801989a:	b2ad      	uxth	r5, r5
 801989c:	b29a      	uxth	r2, r3
 801989e:	b280      	uxth	r0, r0
 80198a0:	1c6b      	adds	r3, r5, #1
 80198a2:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80198a6:	1c44      	adds	r4, r0, #1
 80198a8:	095b      	lsrs	r3, r3, #5
 80198aa:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80198ae:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80198b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80198b6:	4303      	orrs	r3, r0
 80198b8:	1c50      	adds	r0, r2, #1
 80198ba:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80198be:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80198c2:	4313      	orrs	r3, r2
 80198c4:	800b      	strh	r3, [r1, #0]
 80198c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80198ca:	2d0f      	cmp	r5, #15
 80198cc:	d888      	bhi.n	80197e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 80198ce:	463b      	mov	r3, r7
 80198d0:	463c      	mov	r4, r7
 80198d2:	e79f      	b.n	8019814 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 80198d4:	0801eb1d 	.word	0x0801eb1d
 80198d8:	0801f075 	.word	0x0801f075
 80198dc:	0801eba5 	.word	0x0801eba5
 80198e0:	200123c4 	.word	0x200123c4

080198e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80198e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198e8:	ed2d 8b08 	vpush	{d8-d11}
 80198ec:	b099      	sub	sp, #100	; 0x64
 80198ee:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 80198f2:	9309      	str	r3, [sp, #36]	; 0x24
 80198f4:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 80198f8:	930a      	str	r3, [sp, #40]	; 0x28
 80198fa:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80198fe:	9216      	str	r2, [sp, #88]	; 0x58
 8019900:	930b      	str	r3, [sp, #44]	; 0x2c
 8019902:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019904:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8019908:	910f      	str	r1, [sp, #60]	; 0x3c
 801990a:	9310      	str	r3, [sp, #64]	; 0x40
 801990c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8019910:	9017      	str	r0, [sp, #92]	; 0x5c
 8019912:	6850      	ldr	r0, [r2, #4]
 8019914:	6812      	ldr	r2, [r2, #0]
 8019916:	fb00 1303 	mla	r3, r0, r3, r1
 801991a:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801991e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019920:	3301      	adds	r3, #1
 8019922:	f023 0301 	bic.w	r3, r3, #1
 8019926:	930c      	str	r3, [sp, #48]	; 0x30
 8019928:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801992a:	681f      	ldr	r7, [r3, #0]
 801992c:	eeb0 aa40 	vmov.f32	s20, s0
 8019930:	eef0 9a60 	vmov.f32	s19, s1
 8019934:	eeb0 9a41 	vmov.f32	s18, s2
 8019938:	eeb0 8a62 	vmov.f32	s16, s5
 801993c:	eef0 8a43 	vmov.f32	s17, s6
 8019940:	eef0 ba44 	vmov.f32	s23, s8
 8019944:	eeb0 ba64 	vmov.f32	s22, s9
 8019948:	eef0 aa45 	vmov.f32	s21, s10
 801994c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801994e:	2b00      	cmp	r3, #0
 8019950:	dc03      	bgt.n	801995a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8019952:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019954:	2b00      	cmp	r3, #0
 8019956:	f340 8267 	ble.w	8019e28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 801995a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801995c:	2b00      	cmp	r3, #0
 801995e:	f340 811e 	ble.w	8019b9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ba>
 8019962:	1422      	asrs	r2, r4, #16
 8019964:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019968:	d42d      	bmi.n	80199c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801996a:	980a      	ldr	r0, [sp, #40]	; 0x28
 801996c:	1c51      	adds	r1, r2, #1
 801996e:	4288      	cmp	r0, r1
 8019970:	dd2c      	ble.n	80199cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019972:	2b00      	cmp	r3, #0
 8019974:	db2a      	blt.n	80199cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019976:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019978:	1c59      	adds	r1, r3, #1
 801997a:	4288      	cmp	r0, r1
 801997c:	dd26      	ble.n	80199cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801997e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019980:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019982:	3b01      	subs	r3, #1
 8019984:	fb02 4203 	mla	r2, r2, r3, r4
 8019988:	1412      	asrs	r2, r2, #16
 801998a:	d42a      	bmi.n	80199e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801998c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801998e:	3201      	adds	r2, #1
 8019990:	4291      	cmp	r1, r2
 8019992:	dd26      	ble.n	80199e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019994:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8019996:	fb02 6303 	mla	r3, r2, r3, r6
 801999a:	141b      	asrs	r3, r3, #16
 801999c:	d421      	bmi.n	80199e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801999e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80199a0:	3301      	adds	r3, #1
 80199a2:	429a      	cmp	r2, r3
 80199a4:	dd1d      	ble.n	80199e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80199a6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80199aa:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80199ae:	9311      	str	r3, [sp, #68]	; 0x44
 80199b0:	46d1      	mov	r9, sl
 80199b2:	f1bb 0f00 	cmp.w	fp, #0
 80199b6:	f300 8162 	bgt.w	8019c7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39a>
 80199ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80199bc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80199c0:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80199c4:	e0ed      	b.n	8019ba2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 80199c6:	1c51      	adds	r1, r2, #1
 80199c8:	f040 80df 	bne.w	8019b8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80199cc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80199ce:	4291      	cmp	r1, r2
 80199d0:	f340 80db 	ble.w	8019b8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80199d4:	1c5a      	adds	r2, r3, #1
 80199d6:	f2c0 80d8 	blt.w	8019b8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80199da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80199dc:	4293      	cmp	r3, r2
 80199de:	f280 80d4 	bge.w	8019b8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80199e2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80199e6:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80199ea:	9311      	str	r3, [sp, #68]	; 0x44
 80199ec:	46d0      	mov	r8, sl
 80199ee:	f1b9 0f00 	cmp.w	r9, #0
 80199f2:	dde2      	ble.n	80199ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80199f4:	1420      	asrs	r0, r4, #16
 80199f6:	ea4f 4326 	mov.w	r3, r6, asr #16
 80199fa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80199fe:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019a02:	f100 8121 	bmi.w	8019c48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x364>
 8019a06:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019a08:	f100 0c01 	add.w	ip, r0, #1
 8019a0c:	4565      	cmp	r5, ip
 8019a0e:	f340 811d 	ble.w	8019c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8019a12:	2b00      	cmp	r3, #0
 8019a14:	f2c0 811a 	blt.w	8019c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8019a18:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019a1a:	f103 0c01 	add.w	ip, r3, #1
 8019a1e:	4565      	cmp	r5, ip
 8019a20:	f340 8114 	ble.w	8019c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8019a24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019a26:	fb03 0305 	mla	r3, r3, r5, r0
 8019a2a:	0858      	lsrs	r0, r3, #1
 8019a2c:	07dd      	lsls	r5, r3, #31
 8019a2e:	5c38      	ldrb	r0, [r7, r0]
 8019a30:	bf54      	ite	pl
 8019a32:	f000 000f 	andpl.w	r0, r0, #15
 8019a36:	1100      	asrmi	r0, r0, #4
 8019a38:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019a3c:	b2c0      	uxtb	r0, r0
 8019a3e:	2a00      	cmp	r2, #0
 8019a40:	f000 80ee 	beq.w	8019c20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33c>
 8019a44:	f103 0e01 	add.w	lr, r3, #1
 8019a48:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019a4c:	f01e 0f01 	tst.w	lr, #1
 8019a50:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019a54:	bf0c      	ite	eq
 8019a56:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019a5a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019a5e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019a62:	fa5f f58c 	uxtb.w	r5, ip
 8019a66:	9512      	str	r5, [sp, #72]	; 0x48
 8019a68:	b1f9      	cbz	r1, 8019aaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019a6a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a6c:	442b      	add	r3, r5
 8019a6e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019a72:	07dd      	lsls	r5, r3, #31
 8019a74:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019a78:	bf54      	ite	pl
 8019a7a:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019a7e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019a82:	3301      	adds	r3, #1
 8019a84:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019a88:	fa5f f58c 	uxtb.w	r5, ip
 8019a8c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019a90:	950d      	str	r5, [sp, #52]	; 0x34
 8019a92:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019a96:	07dd      	lsls	r5, r3, #31
 8019a98:	bf54      	ite	pl
 8019a9a:	f00c 030f 	andpl.w	r3, ip, #15
 8019a9e:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019aa2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019aa6:	b2db      	uxtb	r3, r3
 8019aa8:	9313      	str	r3, [sp, #76]	; 0x4c
 8019aaa:	b292      	uxth	r2, r2
 8019aac:	b289      	uxth	r1, r1
 8019aae:	fb02 f301 	mul.w	r3, r2, r1
 8019ab2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019ab6:	0112      	lsls	r2, r2, #4
 8019ab8:	b289      	uxth	r1, r1
 8019aba:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8019abe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019ac0:	1ad2      	subs	r2, r2, r3
 8019ac2:	ebac 0c01 	sub.w	ip, ip, r1
 8019ac6:	b292      	uxth	r2, r2
 8019ac8:	436a      	muls	r2, r5
 8019aca:	fa1f fc8c 	uxth.w	ip, ip
 8019ace:	fb00 200c 	mla	r0, r0, ip, r2
 8019ad2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019ad4:	fb01 0102 	mla	r1, r1, r2, r0
 8019ad8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019ada:	fb03 1302 	mla	r3, r3, r2, r1
 8019ade:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019ae2:	2b00      	cmp	r3, #0
 8019ae4:	d048      	beq.n	8019b78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8019ae6:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019ae8:	4ace      	ldr	r2, [pc, #824]	; (8019e24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 8019aea:	434b      	muls	r3, r1
 8019aec:	1c59      	adds	r1, r3, #1
 8019aee:	f8d2 e000 	ldr.w	lr, [r2]
 8019af2:	f8b8 2000 	ldrh.w	r2, [r8]
 8019af6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019afa:	121b      	asrs	r3, r3, #8
 8019afc:	b299      	uxth	r1, r3
 8019afe:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019b02:	43db      	mvns	r3, r3
 8019b04:	b2db      	uxtb	r3, r3
 8019b06:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8019b0a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b0e:	fb1c fc03 	smulbb	ip, ip, r3
 8019b12:	ea4f 0be2 	mov.w	fp, r2, asr #3
 8019b16:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019b1a:	fb00 c001 	mla	r0, r0, r1, ip
 8019b1e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019b22:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8019b26:	fb1b fb03 	smulbb	fp, fp, r3
 8019b2a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019b2e:	00d2      	lsls	r2, r2, #3
 8019b30:	fb0c bc01 	mla	ip, ip, r1, fp
 8019b34:	b2d2      	uxtb	r2, r2
 8019b36:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019b3a:	fb12 f303 	smulbb	r3, r2, r3
 8019b3e:	fa1f fc8c 	uxth.w	ip, ip
 8019b42:	fa5f fe8e 	uxtb.w	lr, lr
 8019b46:	b280      	uxth	r0, r0
 8019b48:	fb0e 3101 	mla	r1, lr, r1, r3
 8019b4c:	f10c 0201 	add.w	r2, ip, #1
 8019b50:	b289      	uxth	r1, r1
 8019b52:	1c43      	adds	r3, r0, #1
 8019b54:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8019b58:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019b5c:	0952      	lsrs	r2, r2, #5
 8019b5e:	1c4b      	adds	r3, r1, #1
 8019b60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b64:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019b68:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019b6c:	4310      	orrs	r0, r2
 8019b6e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8019b72:	4308      	orrs	r0, r1
 8019b74:	f8a8 0000 	strh.w	r0, [r8]
 8019b78:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019b7a:	441c      	add	r4, r3
 8019b7c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019b7e:	f108 0802 	add.w	r8, r8, #2
 8019b82:	441e      	add	r6, r3
 8019b84:	f109 39ff 	add.w	r9, r9, #4294967295
 8019b88:	e731      	b.n	80199ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8019b8a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019b8c:	441c      	add	r4, r3
 8019b8e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019b90:	441e      	add	r6, r3
 8019b92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b94:	3b01      	subs	r3, #1
 8019b96:	9309      	str	r3, [sp, #36]	; 0x24
 8019b98:	f10a 0a02 	add.w	sl, sl, #2
 8019b9c:	e6dd      	b.n	801995a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8019b9e:	f47f aeee 	bne.w	801997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8019ba2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019ba4:	2b00      	cmp	r3, #0
 8019ba6:	f340 813f 	ble.w	8019e28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8019baa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019bae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019bb2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019bb6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019bb8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019bbc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019bc0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019bc4:	eef0 6a48 	vmov.f32	s13, s16
 8019bc8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019bcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019bd0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019bd4:	ee16 4a90 	vmov	r4, s13
 8019bd8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019bdc:	eef0 6a68 	vmov.f32	s13, s17
 8019be0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019be4:	ee18 2a10 	vmov	r2, s16
 8019be8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019bec:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bf0:	ee18 2a90 	vmov	r2, s17
 8019bf4:	932d      	str	r3, [sp, #180]	; 0xb4
 8019bf6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019bf8:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bfc:	932e      	str	r3, [sp, #184]	; 0xb8
 8019bfe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019c00:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019c02:	3b01      	subs	r3, #1
 8019c04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c08:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019c0c:	bf08      	it	eq
 8019c0e:	4613      	moveq	r3, r2
 8019c10:	ee16 6a90 	vmov	r6, s13
 8019c14:	9309      	str	r3, [sp, #36]	; 0x24
 8019c16:	eef0 8a67 	vmov.f32	s17, s15
 8019c1a:	eeb0 8a47 	vmov.f32	s16, s14
 8019c1e:	e695      	b.n	801994c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8019c20:	2900      	cmp	r1, #0
 8019c22:	f43f af42 	beq.w	8019aaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019c26:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c28:	442b      	add	r3, r5
 8019c2a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019c2e:	07db      	lsls	r3, r3, #31
 8019c30:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019c34:	bf54      	ite	pl
 8019c36:	f00c 030f 	andpl.w	r3, ip, #15
 8019c3a:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019c3e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019c42:	b2db      	uxtb	r3, r3
 8019c44:	930d      	str	r3, [sp, #52]	; 0x34
 8019c46:	e730      	b.n	8019aaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019c48:	1c45      	adds	r5, r0, #1
 8019c4a:	d195      	bne.n	8019b78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8019c4c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019c4e:	4285      	cmp	r5, r0
 8019c50:	dd92      	ble.n	8019b78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8019c52:	1c5d      	adds	r5, r3, #1
 8019c54:	db90      	blt.n	8019b78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8019c56:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019c58:	429d      	cmp	r5, r3
 8019c5a:	dd8d      	ble.n	8019b78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8019c5c:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8019c60:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019c62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019c64:	9301      	str	r3, [sp, #4]
 8019c66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c68:	9002      	str	r0, [sp, #8]
 8019c6a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019c6e:	9300      	str	r3, [sp, #0]
 8019c70:	463a      	mov	r2, r7
 8019c72:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019c74:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019c76:	4641      	mov	r1, r8
 8019c78:	f7ff fd4a 	bl	8019710 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8019c7c:	e77c      	b.n	8019b78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8019c7e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019c80:	1422      	asrs	r2, r4, #16
 8019c82:	1433      	asrs	r3, r6, #16
 8019c84:	fb05 2303 	mla	r3, r5, r3, r2
 8019c88:	085a      	lsrs	r2, r3, #1
 8019c8a:	07dd      	lsls	r5, r3, #31
 8019c8c:	5cba      	ldrb	r2, [r7, r2]
 8019c8e:	bf54      	ite	pl
 8019c90:	f002 020f 	andpl.w	r2, r2, #15
 8019c94:	1112      	asrmi	r2, r2, #4
 8019c96:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019c9a:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019c9e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019ca2:	b2d2      	uxtb	r2, r2
 8019ca4:	2900      	cmp	r1, #0
 8019ca6:	f000 80a8 	beq.w	8019dfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x516>
 8019caa:	f103 0e01 	add.w	lr, r3, #1
 8019cae:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019cb2:	f01e 0f01 	tst.w	lr, #1
 8019cb6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019cba:	bf0c      	ite	eq
 8019cbc:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019cc0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019cc4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019cc8:	fa5f f58c 	uxtb.w	r5, ip
 8019ccc:	9514      	str	r5, [sp, #80]	; 0x50
 8019cce:	b300      	cbz	r0, 8019d12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8019cd0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019cd2:	442b      	add	r3, r5
 8019cd4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019cd8:	07dd      	lsls	r5, r3, #31
 8019cda:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019cde:	bf54      	ite	pl
 8019ce0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019ce4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019ce8:	3301      	adds	r3, #1
 8019cea:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019cee:	fa5f f58c 	uxtb.w	r5, ip
 8019cf2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019cf6:	950e      	str	r5, [sp, #56]	; 0x38
 8019cf8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019cfc:	07dd      	lsls	r5, r3, #31
 8019cfe:	bf54      	ite	pl
 8019d00:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019d04:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019d08:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019d0c:	fa5f f38c 	uxtb.w	r3, ip
 8019d10:	9315      	str	r3, [sp, #84]	; 0x54
 8019d12:	b289      	uxth	r1, r1
 8019d14:	b280      	uxth	r0, r0
 8019d16:	fb01 f300 	mul.w	r3, r1, r0
 8019d1a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8019d1e:	0109      	lsls	r1, r1, #4
 8019d20:	b280      	uxth	r0, r0
 8019d22:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8019d26:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019d28:	1ac9      	subs	r1, r1, r3
 8019d2a:	ebac 0c00 	sub.w	ip, ip, r0
 8019d2e:	b289      	uxth	r1, r1
 8019d30:	4369      	muls	r1, r5
 8019d32:	fa1f fc8c 	uxth.w	ip, ip
 8019d36:	fb02 120c 	mla	r2, r2, ip, r1
 8019d3a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019d3c:	fb00 2001 	mla	r0, r0, r1, r2
 8019d40:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8019d42:	fb03 0302 	mla	r3, r3, r2, r0
 8019d46:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019d4a:	2b00      	cmp	r3, #0
 8019d4c:	d04c      	beq.n	8019de8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x504>
 8019d4e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019d50:	4a34      	ldr	r2, [pc, #208]	; (8019e24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 8019d52:	434b      	muls	r3, r1
 8019d54:	1c59      	adds	r1, r3, #1
 8019d56:	f8d2 e000 	ldr.w	lr, [r2]
 8019d5a:	f8b9 2000 	ldrh.w	r2, [r9]
 8019d5e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019d62:	121b      	asrs	r3, r3, #8
 8019d64:	b299      	uxth	r1, r3
 8019d66:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019d6a:	43db      	mvns	r3, r3
 8019d6c:	b2db      	uxtb	r3, r3
 8019d6e:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8019d72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d76:	fb1c fc03 	smulbb	ip, ip, r3
 8019d7a:	ea4f 08e2 	mov.w	r8, r2, asr #3
 8019d7e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019d82:	fb00 c001 	mla	r0, r0, r1, ip
 8019d86:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019d8a:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8019d8e:	fb18 f803 	smulbb	r8, r8, r3
 8019d92:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019d96:	00d2      	lsls	r2, r2, #3
 8019d98:	fb0c 8c01 	mla	ip, ip, r1, r8
 8019d9c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019da0:	b2d2      	uxtb	r2, r2
 8019da2:	fa1f fc8c 	uxth.w	ip, ip
 8019da6:	fa5f fe8e 	uxtb.w	lr, lr
 8019daa:	fb12 f203 	smulbb	r2, r2, r3
 8019dae:	b280      	uxth	r0, r0
 8019db0:	fb0e 2201 	mla	r2, lr, r1, r2
 8019db4:	f10c 0801 	add.w	r8, ip, #1
 8019db8:	b292      	uxth	r2, r2
 8019dba:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8019dbe:	f100 0801 	add.w	r8, r0, #1
 8019dc2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019dc6:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 8019dca:	1c51      	adds	r1, r2, #1
 8019dcc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019dd0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019dd4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019dd8:	ea4c 0c00 	orr.w	ip, ip, r0
 8019ddc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019de0:	ea4c 0c02 	orr.w	ip, ip, r2
 8019de4:	f8a9 c000 	strh.w	ip, [r9]
 8019de8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019dea:	441c      	add	r4, r3
 8019dec:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019dee:	f109 0902 	add.w	r9, r9, #2
 8019df2:	441e      	add	r6, r3
 8019df4:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019df8:	e5db      	b.n	80199b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8019dfa:	2800      	cmp	r0, #0
 8019dfc:	d089      	beq.n	8019d12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8019dfe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019e00:	442b      	add	r3, r5
 8019e02:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019e06:	07db      	lsls	r3, r3, #31
 8019e08:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019e0c:	bf54      	ite	pl
 8019e0e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019e12:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019e16:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019e1a:	fa5f f38c 	uxtb.w	r3, ip
 8019e1e:	930e      	str	r3, [sp, #56]	; 0x38
 8019e20:	e777      	b.n	8019d12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8019e22:	bf00      	nop
 8019e24:	200123c4 	.word	0x200123c4
 8019e28:	b019      	add	sp, #100	; 0x64
 8019e2a:	ecbd 8b08 	vpop	{d8-d11}
 8019e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e32:	bf00      	nop

08019e34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8019e34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019e38:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019e3c:	2c00      	cmp	r4, #0
 8019e3e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8019e42:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8019e46:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019e4a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8019e4e:	fb04 ce03 	mla	lr, r4, r3, ip
 8019e52:	db60      	blt.n	8019f16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8019e54:	45a1      	cmp	r9, r4
 8019e56:	dd5e      	ble.n	8019f16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8019e58:	f1bc 0f00 	cmp.w	ip, #0
 8019e5c:	db59      	blt.n	8019f12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8019e5e:	45e0      	cmp	r8, ip
 8019e60:	dd57      	ble.n	8019f12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8019e62:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8019e66:	f01e 0f01 	tst.w	lr, #1
 8019e6a:	5c16      	ldrb	r6, [r2, r0]
 8019e6c:	bf0c      	ite	eq
 8019e6e:	f006 060f 	andeq.w	r6, r6, #15
 8019e72:	1136      	asrne	r6, r6, #4
 8019e74:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019e78:	b2f6      	uxtb	r6, r6
 8019e7a:	f11c 0001 	adds.w	r0, ip, #1
 8019e7e:	d44d      	bmi.n	8019f1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019e80:	4580      	cmp	r8, r0
 8019e82:	dd4b      	ble.n	8019f1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019e84:	2d00      	cmp	r5, #0
 8019e86:	d04b      	beq.n	8019f20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8019e88:	f10e 0a01 	add.w	sl, lr, #1
 8019e8c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8019e90:	f01a 0f01 	tst.w	sl, #1
 8019e94:	5c10      	ldrb	r0, [r2, r0]
 8019e96:	bf0c      	ite	eq
 8019e98:	f000 000f 	andeq.w	r0, r0, #15
 8019e9c:	1100      	asrne	r0, r0, #4
 8019e9e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019ea2:	b2c0      	uxtb	r0, r0
 8019ea4:	3401      	adds	r4, #1
 8019ea6:	d43f      	bmi.n	8019f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019ea8:	45a1      	cmp	r9, r4
 8019eaa:	dd3d      	ble.n	8019f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019eac:	2f00      	cmp	r7, #0
 8019eae:	f000 8097 	beq.w	8019fe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 8019eb2:	f1bc 0f00 	cmp.w	ip, #0
 8019eb6:	db35      	blt.n	8019f24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019eb8:	45e0      	cmp	r8, ip
 8019eba:	dd33      	ble.n	8019f24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019ebc:	eb03 090e 	add.w	r9, r3, lr
 8019ec0:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8019ec4:	f019 0f01 	tst.w	r9, #1
 8019ec8:	5d14      	ldrb	r4, [r2, r4]
 8019eca:	bf0c      	ite	eq
 8019ecc:	f004 040f 	andeq.w	r4, r4, #15
 8019ed0:	1124      	asrne	r4, r4, #4
 8019ed2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019ed6:	b2e4      	uxtb	r4, r4
 8019ed8:	f11c 0c01 	adds.w	ip, ip, #1
 8019edc:	d427      	bmi.n	8019f2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8019ede:	45e0      	cmp	r8, ip
 8019ee0:	dd25      	ble.n	8019f2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8019ee2:	b335      	cbz	r5, 8019f32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8019ee4:	3301      	adds	r3, #1
 8019ee6:	449e      	add	lr, r3
 8019ee8:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019eec:	f01e 0f01 	tst.w	lr, #1
 8019ef0:	5cd2      	ldrb	r2, [r2, r3]
 8019ef2:	bf0c      	ite	eq
 8019ef4:	f002 020f 	andeq.w	r2, r2, #15
 8019ef8:	1112      	asrne	r2, r2, #4
 8019efa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019efe:	b2d3      	uxtb	r3, r2
 8019f00:	2d0f      	cmp	r5, #15
 8019f02:	d917      	bls.n	8019f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8019f04:	4b39      	ldr	r3, [pc, #228]	; (8019fec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8019f06:	4a3a      	ldr	r2, [pc, #232]	; (8019ff0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8019f08:	483a      	ldr	r0, [pc, #232]	; (8019ff4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 8019f0a:	f240 210d 	movw	r1, #525	; 0x20d
 8019f0e:	f000 fc6b 	bl	801a7e8 <__assert_func>
 8019f12:	2600      	movs	r6, #0
 8019f14:	e7b1      	b.n	8019e7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8019f16:	2000      	movs	r0, #0
 8019f18:	4606      	mov	r6, r0
 8019f1a:	e7c3      	b.n	8019ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019f1c:	2000      	movs	r0, #0
 8019f1e:	e7c1      	b.n	8019ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019f20:	4628      	mov	r0, r5
 8019f22:	e7bf      	b.n	8019ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019f24:	2400      	movs	r4, #0
 8019f26:	e7d7      	b.n	8019ed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8019f28:	2300      	movs	r3, #0
 8019f2a:	461c      	mov	r4, r3
 8019f2c:	e7e8      	b.n	8019f00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8019f2e:	2300      	movs	r3, #0
 8019f30:	e7e6      	b.n	8019f00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8019f32:	462b      	mov	r3, r5
 8019f34:	2f0f      	cmp	r7, #15
 8019f36:	d8e5      	bhi.n	8019f04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8019f38:	b2ad      	uxth	r5, r5
 8019f3a:	b2bf      	uxth	r7, r7
 8019f3c:	fb05 fc07 	mul.w	ip, r5, r7
 8019f40:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8019f44:	012d      	lsls	r5, r5, #4
 8019f46:	b2bf      	uxth	r7, r7
 8019f48:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019f4c:	eba5 050c 	sub.w	r5, r5, ip
 8019f50:	1bd2      	subs	r2, r2, r7
 8019f52:	b2ad      	uxth	r5, r5
 8019f54:	b292      	uxth	r2, r2
 8019f56:	4368      	muls	r0, r5
 8019f58:	fb06 0002 	mla	r0, r6, r2, r0
 8019f5c:	fb07 0404 	mla	r4, r7, r4, r0
 8019f60:	fb0c 4303 	mla	r3, ip, r3, r4
 8019f64:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019f68:	2b00      	cmp	r3, #0
 8019f6a:	d037      	beq.n	8019fdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 8019f6c:	4a22      	ldr	r2, [pc, #136]	; (8019ff8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 8019f6e:	6816      	ldr	r6, [r2, #0]
 8019f70:	880a      	ldrh	r2, [r1, #0]
 8019f72:	b298      	uxth	r0, r3
 8019f74:	1215      	asrs	r5, r2, #8
 8019f76:	43db      	mvns	r3, r3
 8019f78:	b2db      	uxtb	r3, r3
 8019f7a:	0a34      	lsrs	r4, r6, #8
 8019f7c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019f80:	fb15 f503 	smulbb	r5, r5, r3
 8019f84:	10d7      	asrs	r7, r2, #3
 8019f86:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019f8a:	fb04 5400 	mla	r4, r4, r0, r5
 8019f8e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019f92:	08f5      	lsrs	r5, r6, #3
 8019f94:	fb17 f703 	smulbb	r7, r7, r3
 8019f98:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019f9c:	00d2      	lsls	r2, r2, #3
 8019f9e:	fb05 7500 	mla	r5, r5, r0, r7
 8019fa2:	b2d2      	uxtb	r2, r2
 8019fa4:	00f6      	lsls	r6, r6, #3
 8019fa6:	fb12 f303 	smulbb	r3, r2, r3
 8019faa:	b2ad      	uxth	r5, r5
 8019fac:	b2f6      	uxtb	r6, r6
 8019fae:	b2a4      	uxth	r4, r4
 8019fb0:	fb06 3000 	mla	r0, r6, r0, r3
 8019fb4:	1c6b      	adds	r3, r5, #1
 8019fb6:	b280      	uxth	r0, r0
 8019fb8:	1c62      	adds	r2, r4, #1
 8019fba:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019fbe:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8019fc2:	095b      	lsrs	r3, r3, #5
 8019fc4:	1c42      	adds	r2, r0, #1
 8019fc6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019fca:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8019fce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019fd2:	4323      	orrs	r3, r4
 8019fd4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019fd8:	4303      	orrs	r3, r0
 8019fda:	800b      	strh	r3, [r1, #0]
 8019fdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019fe0:	2d0f      	cmp	r5, #15
 8019fe2:	d88f      	bhi.n	8019f04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8019fe4:	463b      	mov	r3, r7
 8019fe6:	463c      	mov	r4, r7
 8019fe8:	e7a6      	b.n	8019f38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8019fea:	bf00      	nop
 8019fec:	0801eb1d 	.word	0x0801eb1d
 8019ff0:	0801f075 	.word	0x0801f075
 8019ff4:	0801eba5 	.word	0x0801eba5
 8019ff8:	200123c4 	.word	0x200123c4

08019ffc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a000:	ed2d 8b08 	vpush	{d8-d11}
 801a004:	b095      	sub	sp, #84	; 0x54
 801a006:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801a00a:	9306      	str	r3, [sp, #24]
 801a00c:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801a010:	9307      	str	r3, [sp, #28]
 801a012:	920d      	str	r2, [sp, #52]	; 0x34
 801a014:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801a018:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a01a:	910a      	str	r1, [sp, #40]	; 0x28
 801a01c:	9308      	str	r3, [sp, #32]
 801a01e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801a022:	9013      	str	r0, [sp, #76]	; 0x4c
 801a024:	6850      	ldr	r0, [r2, #4]
 801a026:	6812      	ldr	r2, [r2, #0]
 801a028:	fb00 1303 	mla	r3, r0, r3, r1
 801a02c:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801a030:	9b07      	ldr	r3, [sp, #28]
 801a032:	3301      	adds	r3, #1
 801a034:	f023 0301 	bic.w	r3, r3, #1
 801a038:	9309      	str	r3, [sp, #36]	; 0x24
 801a03a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a03c:	681f      	ldr	r7, [r3, #0]
 801a03e:	eeb0 aa40 	vmov.f32	s20, s0
 801a042:	eef0 9a60 	vmov.f32	s19, s1
 801a046:	eeb0 9a41 	vmov.f32	s18, s2
 801a04a:	eeb0 8a62 	vmov.f32	s16, s5
 801a04e:	eef0 8a43 	vmov.f32	s17, s6
 801a052:	eef0 ba44 	vmov.f32	s23, s8
 801a056:	eeb0 ba64 	vmov.f32	s22, s9
 801a05a:	eef0 aa45 	vmov.f32	s21, s10
 801a05e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a060:	2b00      	cmp	r3, #0
 801a062:	dc03      	bgt.n	801a06c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801a064:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a066:	2b00      	cmp	r3, #0
 801a068:	f340 825c 	ble.w	801a524 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 801a06c:	9b06      	ldr	r3, [sp, #24]
 801a06e:	2b00      	cmp	r3, #0
 801a070:	f340 8119 	ble.w	801a2a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2aa>
 801a074:	1422      	asrs	r2, r4, #16
 801a076:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a07a:	d42d      	bmi.n	801a0d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801a07c:	9807      	ldr	r0, [sp, #28]
 801a07e:	1c51      	adds	r1, r2, #1
 801a080:	4288      	cmp	r0, r1
 801a082:	dd2c      	ble.n	801a0de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a084:	2b00      	cmp	r3, #0
 801a086:	db2a      	blt.n	801a0de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a088:	9808      	ldr	r0, [sp, #32]
 801a08a:	1c59      	adds	r1, r3, #1
 801a08c:	4288      	cmp	r0, r1
 801a08e:	dd26      	ble.n	801a0de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a090:	9b06      	ldr	r3, [sp, #24]
 801a092:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a094:	3b01      	subs	r3, #1
 801a096:	fb02 4203 	mla	r2, r2, r3, r4
 801a09a:	1412      	asrs	r2, r2, #16
 801a09c:	d42a      	bmi.n	801a0f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a09e:	9907      	ldr	r1, [sp, #28]
 801a0a0:	3201      	adds	r2, #1
 801a0a2:	4291      	cmp	r1, r2
 801a0a4:	dd26      	ble.n	801a0f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a0a6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801a0a8:	fb02 6303 	mla	r3, r2, r3, r6
 801a0ac:	141b      	asrs	r3, r3, #16
 801a0ae:	d421      	bmi.n	801a0f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a0b0:	9a08      	ldr	r2, [sp, #32]
 801a0b2:	3301      	adds	r3, #1
 801a0b4:	429a      	cmp	r2, r3
 801a0b6:	dd1d      	ble.n	801a0f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a0b8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801a0bc:	f8dd a018 	ldr.w	sl, [sp, #24]
 801a0c0:	930e      	str	r3, [sp, #56]	; 0x38
 801a0c2:	46d8      	mov	r8, fp
 801a0c4:	f1ba 0f00 	cmp.w	sl, #0
 801a0c8:	f300 8161 	bgt.w	801a38e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a0cc:	9b06      	ldr	r3, [sp, #24]
 801a0ce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a0d2:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801a0d6:	e0e8      	b.n	801a2aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ae>
 801a0d8:	1c51      	adds	r1, r2, #1
 801a0da:	f040 80da 	bne.w	801a292 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a0de:	9907      	ldr	r1, [sp, #28]
 801a0e0:	4291      	cmp	r1, r2
 801a0e2:	f340 80d6 	ble.w	801a292 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a0e6:	1c5a      	adds	r2, r3, #1
 801a0e8:	f2c0 80d3 	blt.w	801a292 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a0ec:	9a08      	ldr	r2, [sp, #32]
 801a0ee:	4293      	cmp	r3, r2
 801a0f0:	f280 80cf 	bge.w	801a292 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a0f4:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801a0f8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801a0fc:	46d8      	mov	r8, fp
 801a0fe:	f1b9 0f00 	cmp.w	r9, #0
 801a102:	dde3      	ble.n	801a0cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801a104:	1420      	asrs	r0, r4, #16
 801a106:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a10a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a10e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a112:	f100 8124 	bmi.w	801a35e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801a116:	9d07      	ldr	r5, [sp, #28]
 801a118:	f100 0c01 	add.w	ip, r0, #1
 801a11c:	4565      	cmp	r5, ip
 801a11e:	f340 8120 	ble.w	801a362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801a122:	2b00      	cmp	r3, #0
 801a124:	f2c0 811d 	blt.w	801a362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801a128:	9d08      	ldr	r5, [sp, #32]
 801a12a:	f103 0c01 	add.w	ip, r3, #1
 801a12e:	4565      	cmp	r5, ip
 801a130:	f340 8117 	ble.w	801a362 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801a134:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a136:	fb03 0305 	mla	r3, r3, r5, r0
 801a13a:	0858      	lsrs	r0, r3, #1
 801a13c:	07dd      	lsls	r5, r3, #31
 801a13e:	5c38      	ldrb	r0, [r7, r0]
 801a140:	bf54      	ite	pl
 801a142:	f000 000f 	andpl.w	r0, r0, #15
 801a146:	1100      	asrmi	r0, r0, #4
 801a148:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a14c:	b2c0      	uxtb	r0, r0
 801a14e:	2a00      	cmp	r2, #0
 801a150:	f000 80ea 	beq.w	801a328 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32c>
 801a154:	f103 0e01 	add.w	lr, r3, #1
 801a158:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a15c:	f01e 0f01 	tst.w	lr, #1
 801a160:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a164:	bf0c      	ite	eq
 801a166:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a16a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a16e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a172:	fa5f fc8c 	uxtb.w	ip, ip
 801a176:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801a17a:	b1f9      	cbz	r1, 801a1bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a17c:	4453      	add	r3, sl
 801a17e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a182:	07dd      	lsls	r5, r3, #31
 801a184:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a188:	bf54      	ite	pl
 801a18a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a18e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a192:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a196:	3301      	adds	r3, #1
 801a198:	fa5f fc8c 	uxtb.w	ip, ip
 801a19c:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801a1a0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a1a4:	07dd      	lsls	r5, r3, #31
 801a1a6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a1aa:	bf54      	ite	pl
 801a1ac:	f00c 030f 	andpl.w	r3, ip, #15
 801a1b0:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a1b4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a1b8:	b2db      	uxtb	r3, r3
 801a1ba:	9310      	str	r3, [sp, #64]	; 0x40
 801a1bc:	b292      	uxth	r2, r2
 801a1be:	b289      	uxth	r1, r1
 801a1c0:	fb02 f301 	mul.w	r3, r2, r1
 801a1c4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a1c8:	0112      	lsls	r2, r2, #4
 801a1ca:	b289      	uxth	r1, r1
 801a1cc:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801a1d0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a1d2:	1ad2      	subs	r2, r2, r3
 801a1d4:	ebac 0c01 	sub.w	ip, ip, r1
 801a1d8:	b292      	uxth	r2, r2
 801a1da:	436a      	muls	r2, r5
 801a1dc:	fa1f fc8c 	uxth.w	ip, ip
 801a1e0:	fb00 200c 	mla	r0, r0, ip, r2
 801a1e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a1e6:	fb01 0102 	mla	r1, r1, r2, r0
 801a1ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a1ec:	fb03 1302 	mla	r3, r3, r2, r1
 801a1f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a1f4:	2b00      	cmp	r3, #0
 801a1f6:	d043      	beq.n	801a280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801a1f8:	4ac9      	ldr	r2, [pc, #804]	; (801a520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 801a1fa:	6811      	ldr	r1, [r2, #0]
 801a1fc:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801a200:	08ca      	lsrs	r2, r1, #3
 801a202:	00c9      	lsls	r1, r1, #3
 801a204:	b2c9      	uxtb	r1, r1
 801a206:	2bff      	cmp	r3, #255	; 0xff
 801a208:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a20c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a210:	460d      	mov	r5, r1
 801a212:	f000 809c 	beq.w	801a34e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x352>
 801a216:	f8b8 c000 	ldrh.w	ip, [r8]
 801a21a:	b299      	uxth	r1, r3
 801a21c:	ea4f 202c 	mov.w	r0, ip, asr #8
 801a220:	43db      	mvns	r3, r3
 801a222:	b2db      	uxtb	r3, r3
 801a224:	fb1e fe01 	smulbb	lr, lr, r1
 801a228:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a22c:	fb00 e003 	mla	r0, r0, r3, lr
 801a230:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801a234:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a238:	fb12 f201 	smulbb	r2, r2, r1
 801a23c:	fb0e 2203 	mla	r2, lr, r3, r2
 801a240:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a244:	b292      	uxth	r2, r2
 801a246:	fb15 f101 	smulbb	r1, r5, r1
 801a24a:	fa5f fc8c 	uxtb.w	ip, ip
 801a24e:	b280      	uxth	r0, r0
 801a250:	fb0c 1303 	mla	r3, ip, r3, r1
 801a254:	f102 0e01 	add.w	lr, r2, #1
 801a258:	b29b      	uxth	r3, r3
 801a25a:	1c41      	adds	r1, r0, #1
 801a25c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801a260:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a264:	0952      	lsrs	r2, r2, #5
 801a266:	1c59      	adds	r1, r3, #1
 801a268:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a26c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a270:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a274:	4310      	orrs	r0, r2
 801a276:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a27a:	4318      	orrs	r0, r3
 801a27c:	f8a8 0000 	strh.w	r0, [r8]
 801a280:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a282:	441c      	add	r4, r3
 801a284:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a286:	f108 0802 	add.w	r8, r8, #2
 801a28a:	441e      	add	r6, r3
 801a28c:	f109 39ff 	add.w	r9, r9, #4294967295
 801a290:	e735      	b.n	801a0fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801a292:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a294:	441c      	add	r4, r3
 801a296:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a298:	441e      	add	r6, r3
 801a29a:	9b06      	ldr	r3, [sp, #24]
 801a29c:	3b01      	subs	r3, #1
 801a29e:	9306      	str	r3, [sp, #24]
 801a2a0:	f10b 0b02 	add.w	fp, fp, #2
 801a2a4:	e6e2      	b.n	801a06c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801a2a6:	f47f aef3 	bne.w	801a090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801a2aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a2ac:	2b00      	cmp	r3, #0
 801a2ae:	f340 8139 	ble.w	801a524 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 801a2b2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a2b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a2ba:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a2be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a2c0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a2c4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a2c8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a2cc:	eef0 6a48 	vmov.f32	s13, s16
 801a2d0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a2d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a2d8:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a2dc:	ee16 4a90 	vmov	r4, s13
 801a2e0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a2e4:	eef0 6a68 	vmov.f32	s13, s17
 801a2e8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a2ec:	ee18 2a10 	vmov	r2, s16
 801a2f0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a2f4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a2f8:	ee18 2a90 	vmov	r2, s17
 801a2fc:	9329      	str	r3, [sp, #164]	; 0xa4
 801a2fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a300:	fb92 f3f3 	sdiv	r3, r2, r3
 801a304:	932a      	str	r3, [sp, #168]	; 0xa8
 801a306:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a308:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a30a:	3b01      	subs	r3, #1
 801a30c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a310:	930a      	str	r3, [sp, #40]	; 0x28
 801a312:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a314:	bf08      	it	eq
 801a316:	4613      	moveq	r3, r2
 801a318:	ee16 6a90 	vmov	r6, s13
 801a31c:	9306      	str	r3, [sp, #24]
 801a31e:	eef0 8a67 	vmov.f32	s17, s15
 801a322:	eeb0 8a47 	vmov.f32	s16, s14
 801a326:	e69a      	b.n	801a05e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801a328:	2900      	cmp	r1, #0
 801a32a:	f43f af47 	beq.w	801a1bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a32e:	4453      	add	r3, sl
 801a330:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a334:	07db      	lsls	r3, r3, #31
 801a336:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a33a:	bf54      	ite	pl
 801a33c:	f00c 030f 	andpl.w	r3, ip, #15
 801a340:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a344:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a348:	b2db      	uxtb	r3, r3
 801a34a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a34c:	e736      	b.n	801a1bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a34e:	00d2      	lsls	r2, r2, #3
 801a350:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a354:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801a358:	f8a8 1000 	strh.w	r1, [r8]
 801a35c:	e790      	b.n	801a280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801a35e:	1c45      	adds	r5, r0, #1
 801a360:	d18e      	bne.n	801a280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801a362:	9d07      	ldr	r5, [sp, #28]
 801a364:	4285      	cmp	r5, r0
 801a366:	dd8b      	ble.n	801a280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801a368:	1c5d      	adds	r5, r3, #1
 801a36a:	db89      	blt.n	801a280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801a36c:	9d08      	ldr	r5, [sp, #32]
 801a36e:	429d      	cmp	r5, r3
 801a370:	dd86      	ble.n	801a280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801a372:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801a376:	9b07      	ldr	r3, [sp, #28]
 801a378:	9300      	str	r3, [sp, #0]
 801a37a:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801a37e:	9501      	str	r5, [sp, #4]
 801a380:	4653      	mov	r3, sl
 801a382:	463a      	mov	r2, r7
 801a384:	4641      	mov	r1, r8
 801a386:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a388:	f7ff fd54 	bl	8019e34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801a38c:	e778      	b.n	801a280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801a38e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a390:	1422      	asrs	r2, r4, #16
 801a392:	1433      	asrs	r3, r6, #16
 801a394:	fb01 2303 	mla	r3, r1, r3, r2
 801a398:	085a      	lsrs	r2, r3, #1
 801a39a:	07d9      	lsls	r1, r3, #31
 801a39c:	5cba      	ldrb	r2, [r7, r2]
 801a39e:	bf54      	ite	pl
 801a3a0:	f002 020f 	andpl.w	r2, r2, #15
 801a3a4:	1112      	asrmi	r2, r2, #4
 801a3a6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a3aa:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a3ae:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a3b2:	b2d2      	uxtb	r2, r2
 801a3b4:	2800      	cmp	r0, #0
 801a3b6:	f000 8099 	beq.w	801a4ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4f0>
 801a3ba:	f103 0e01 	add.w	lr, r3, #1
 801a3be:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801a3c2:	f01e 0f01 	tst.w	lr, #1
 801a3c6:	5c79      	ldrb	r1, [r7, r1]
 801a3c8:	bf0c      	ite	eq
 801a3ca:	f001 010f 	andeq.w	r1, r1, #15
 801a3ce:	1109      	asrne	r1, r1, #4
 801a3d0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a3d4:	b2c9      	uxtb	r1, r1
 801a3d6:	9111      	str	r1, [sp, #68]	; 0x44
 801a3d8:	f1bc 0f00 	cmp.w	ip, #0
 801a3dc:	d018      	beq.n	801a410 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 801a3de:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a3e0:	440b      	add	r3, r1
 801a3e2:	0859      	lsrs	r1, r3, #1
 801a3e4:	07dd      	lsls	r5, r3, #31
 801a3e6:	5c79      	ldrb	r1, [r7, r1]
 801a3e8:	bf54      	ite	pl
 801a3ea:	f001 010f 	andpl.w	r1, r1, #15
 801a3ee:	1109      	asrmi	r1, r1, #4
 801a3f0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a3f4:	b2c9      	uxtb	r1, r1
 801a3f6:	3301      	adds	r3, #1
 801a3f8:	910c      	str	r1, [sp, #48]	; 0x30
 801a3fa:	0859      	lsrs	r1, r3, #1
 801a3fc:	07dd      	lsls	r5, r3, #31
 801a3fe:	5c79      	ldrb	r1, [r7, r1]
 801a400:	bf54      	ite	pl
 801a402:	f001 010f 	andpl.w	r1, r1, #15
 801a406:	1109      	asrmi	r1, r1, #4
 801a408:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a40c:	b2c9      	uxtb	r1, r1
 801a40e:	9112      	str	r1, [sp, #72]	; 0x48
 801a410:	b280      	uxth	r0, r0
 801a412:	fa1f fc8c 	uxth.w	ip, ip
 801a416:	fb00 f30c 	mul.w	r3, r0, ip
 801a41a:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801a41e:	0100      	lsls	r0, r0, #4
 801a420:	fa1f fc8c 	uxth.w	ip, ip
 801a424:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801a428:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a42a:	1ac0      	subs	r0, r0, r3
 801a42c:	eba1 010c 	sub.w	r1, r1, ip
 801a430:	b280      	uxth	r0, r0
 801a432:	b289      	uxth	r1, r1
 801a434:	4368      	muls	r0, r5
 801a436:	fb02 0201 	mla	r2, r2, r1, r0
 801a43a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a43c:	fb0c 2c01 	mla	ip, ip, r1, r2
 801a440:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a442:	fb03 c302 	mla	r3, r3, r2, ip
 801a446:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a44a:	2b00      	cmp	r3, #0
 801a44c:	d045      	beq.n	801a4da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a44e:	4a34      	ldr	r2, [pc, #208]	; (801a520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 801a450:	6811      	ldr	r1, [r2, #0]
 801a452:	2bff      	cmp	r3, #255	; 0xff
 801a454:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801a458:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801a45c:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801a460:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a464:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a468:	b2c9      	uxtb	r1, r1
 801a46a:	d050      	beq.n	801a50e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 801a46c:	f8b8 c000 	ldrh.w	ip, [r8]
 801a470:	fa1f f983 	uxth.w	r9, r3
 801a474:	ea4f 202c 	mov.w	r0, ip, asr #8
 801a478:	43db      	mvns	r3, r3
 801a47a:	b2db      	uxtb	r3, r3
 801a47c:	fb1e fe09 	smulbb	lr, lr, r9
 801a480:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a484:	fb00 e003 	mla	r0, r0, r3, lr
 801a488:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801a48c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a490:	fb12 f209 	smulbb	r2, r2, r9
 801a494:	fb0e 2203 	mla	r2, lr, r3, r2
 801a498:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a49c:	b292      	uxth	r2, r2
 801a49e:	fa5f fc8c 	uxtb.w	ip, ip
 801a4a2:	fb11 f109 	smulbb	r1, r1, r9
 801a4a6:	b280      	uxth	r0, r0
 801a4a8:	fb0c 1103 	mla	r1, ip, r3, r1
 801a4ac:	f102 0e01 	add.w	lr, r2, #1
 801a4b0:	b289      	uxth	r1, r1
 801a4b2:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801a4b6:	f100 0e01 	add.w	lr, r0, #1
 801a4ba:	0952      	lsrs	r2, r2, #5
 801a4bc:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a4c0:	1c4b      	adds	r3, r1, #1
 801a4c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a4c6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a4ca:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a4ce:	4302      	orrs	r2, r0
 801a4d0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a4d4:	430a      	orrs	r2, r1
 801a4d6:	f8a8 2000 	strh.w	r2, [r8]
 801a4da:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a4dc:	441c      	add	r4, r3
 801a4de:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a4e0:	f108 0802 	add.w	r8, r8, #2
 801a4e4:	441e      	add	r6, r3
 801a4e6:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a4ea:	e5eb      	b.n	801a0c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801a4ec:	f1bc 0f00 	cmp.w	ip, #0
 801a4f0:	d08e      	beq.n	801a410 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 801a4f2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a4f4:	440b      	add	r3, r1
 801a4f6:	0859      	lsrs	r1, r3, #1
 801a4f8:	07db      	lsls	r3, r3, #31
 801a4fa:	5c79      	ldrb	r1, [r7, r1]
 801a4fc:	bf54      	ite	pl
 801a4fe:	f001 010f 	andpl.w	r1, r1, #15
 801a502:	1109      	asrmi	r1, r1, #4
 801a504:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a508:	b2c9      	uxtb	r1, r1
 801a50a:	910c      	str	r1, [sp, #48]	; 0x30
 801a50c:	e780      	b.n	801a410 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 801a50e:	00d2      	lsls	r2, r2, #3
 801a510:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a514:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801a518:	f8a8 1000 	strh.w	r1, [r8]
 801a51c:	e7dd      	b.n	801a4da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a51e:	bf00      	nop
 801a520:	200123c4 	.word	0x200123c4
 801a524:	b015      	add	sp, #84	; 0x54
 801a526:	ecbd 8b08 	vpop	{d8-d11}
 801a52a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a52e:	bf00      	nop

0801a530 <CRC_Lock>:
 801a530:	b530      	push	{r4, r5, lr}
 801a532:	4a1d      	ldr	r2, [pc, #116]	; (801a5a8 <CRC_Lock+0x78>)
 801a534:	6813      	ldr	r3, [r2, #0]
 801a536:	f023 0301 	bic.w	r3, r3, #1
 801a53a:	6013      	str	r3, [r2, #0]
 801a53c:	4b1b      	ldr	r3, [pc, #108]	; (801a5ac <CRC_Lock+0x7c>)
 801a53e:	681a      	ldr	r2, [r3, #0]
 801a540:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801a544:	4022      	ands	r2, r4
 801a546:	f24c 2540 	movw	r5, #49728	; 0xc240
 801a54a:	42aa      	cmp	r2, r5
 801a54c:	d005      	beq.n	801a55a <CRC_Lock+0x2a>
 801a54e:	681b      	ldr	r3, [r3, #0]
 801a550:	f24c 2270 	movw	r2, #49776	; 0xc270
 801a554:	4023      	ands	r3, r4
 801a556:	4293      	cmp	r3, r2
 801a558:	d11d      	bne.n	801a596 <CRC_Lock+0x66>
 801a55a:	4b15      	ldr	r3, [pc, #84]	; (801a5b0 <CRC_Lock+0x80>)
 801a55c:	681b      	ldr	r3, [r3, #0]
 801a55e:	b9d3      	cbnz	r3, 801a596 <CRC_Lock+0x66>
 801a560:	4a14      	ldr	r2, [pc, #80]	; (801a5b4 <CRC_Lock+0x84>)
 801a562:	6813      	ldr	r3, [r2, #0]
 801a564:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a568:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801a56c:	d006      	beq.n	801a57c <CRC_Lock+0x4c>
 801a56e:	6813      	ldr	r3, [r2, #0]
 801a570:	f240 4283 	movw	r2, #1155	; 0x483
 801a574:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a578:	4293      	cmp	r3, r2
 801a57a:	d10c      	bne.n	801a596 <CRC_Lock+0x66>
 801a57c:	4b0e      	ldr	r3, [pc, #56]	; (801a5b8 <CRC_Lock+0x88>)
 801a57e:	2201      	movs	r2, #1
 801a580:	601a      	str	r2, [r3, #0]
 801a582:	681a      	ldr	r2, [r3, #0]
 801a584:	2a00      	cmp	r2, #0
 801a586:	d1fc      	bne.n	801a582 <CRC_Lock+0x52>
 801a588:	4b0c      	ldr	r3, [pc, #48]	; (801a5bc <CRC_Lock+0x8c>)
 801a58a:	6018      	str	r0, [r3, #0]
 801a58c:	6818      	ldr	r0, [r3, #0]
 801a58e:	1a43      	subs	r3, r0, r1
 801a590:	4258      	negs	r0, r3
 801a592:	4158      	adcs	r0, r3
 801a594:	bd30      	pop	{r4, r5, pc}
 801a596:	4b0a      	ldr	r3, [pc, #40]	; (801a5c0 <CRC_Lock+0x90>)
 801a598:	2201      	movs	r2, #1
 801a59a:	601a      	str	r2, [r3, #0]
 801a59c:	681a      	ldr	r2, [r3, #0]
 801a59e:	2a00      	cmp	r2, #0
 801a5a0:	d1fc      	bne.n	801a59c <CRC_Lock+0x6c>
 801a5a2:	4b08      	ldr	r3, [pc, #32]	; (801a5c4 <CRC_Lock+0x94>)
 801a5a4:	e7f1      	b.n	801a58a <CRC_Lock+0x5a>
 801a5a6:	bf00      	nop
 801a5a8:	e0002000 	.word	0xe0002000
 801a5ac:	e000ed00 	.word	0xe000ed00
 801a5b0:	e0042000 	.word	0xe0042000
 801a5b4:	5c001000 	.word	0x5c001000
 801a5b8:	58024c08 	.word	0x58024c08
 801a5bc:	58024c00 	.word	0x58024c00
 801a5c0:	40023008 	.word	0x40023008
 801a5c4:	40023000 	.word	0x40023000

0801a5c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801a5c8:	6101      	str	r1, [r0, #16]
 801a5ca:	4770      	bx	lr

0801a5cc <_ZN8touchgfx8Gestures4tickEv>:
 801a5cc:	7b83      	ldrb	r3, [r0, #14]
 801a5ce:	b14b      	cbz	r3, 801a5e4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801a5d0:	8903      	ldrh	r3, [r0, #8]
 801a5d2:	3301      	adds	r3, #1
 801a5d4:	b29b      	uxth	r3, r3
 801a5d6:	2b07      	cmp	r3, #7
 801a5d8:	8103      	strh	r3, [r0, #8]
 801a5da:	bf81      	itttt	hi
 801a5dc:	2300      	movhi	r3, #0
 801a5de:	8143      	strhhi	r3, [r0, #10]
 801a5e0:	8183      	strhhi	r3, [r0, #12]
 801a5e2:	7383      	strbhi	r3, [r0, #14]
 801a5e4:	4770      	bx	lr
	...

0801a5e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801a5e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a5ec:	4604      	mov	r4, r0
 801a5ee:	8880      	ldrh	r0, [r0, #4]
 801a5f0:	f8ad 0006 	strh.w	r0, [sp, #6]
 801a5f4:	4698      	mov	r8, r3
 801a5f6:	eba8 0000 	sub.w	r0, r8, r0
 801a5fa:	4b1c      	ldr	r3, [pc, #112]	; (801a66c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801a5fc:	9300      	str	r3, [sp, #0]
 801a5fe:	b280      	uxth	r0, r0
 801a600:	2300      	movs	r3, #0
 801a602:	f88d 3004 	strb.w	r3, [sp, #4]
 801a606:	b203      	sxth	r3, r0
 801a608:	2b00      	cmp	r3, #0
 801a60a:	bfb8      	it	lt
 801a60c:	4240      	neglt	r0, r0
 801a60e:	4617      	mov	r7, r2
 801a610:	8aa2      	ldrh	r2, [r4, #20]
 801a612:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801a616:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a61a:	bfb8      	it	lt
 801a61c:	b203      	sxthlt	r3, r0
 801a61e:	460e      	mov	r6, r1
 801a620:	4293      	cmp	r3, r2
 801a622:	88e1      	ldrh	r1, [r4, #6]
 801a624:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a628:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a62c:	dc08      	bgt.n	801a640 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801a62e:	1a69      	subs	r1, r5, r1
 801a630:	b289      	uxth	r1, r1
 801a632:	b20b      	sxth	r3, r1
 801a634:	2b00      	cmp	r3, #0
 801a636:	bfbc      	itt	lt
 801a638:	4249      	neglt	r1, r1
 801a63a:	b20b      	sxthlt	r3, r1
 801a63c:	429a      	cmp	r2, r3
 801a63e:	da13      	bge.n	801a668 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801a640:	6920      	ldr	r0, [r4, #16]
 801a642:	6803      	ldr	r3, [r0, #0]
 801a644:	4669      	mov	r1, sp
 801a646:	685b      	ldr	r3, [r3, #4]
 801a648:	4798      	blx	r3
 801a64a:	eba8 0606 	sub.w	r6, r8, r6
 801a64e:	2300      	movs	r3, #0
 801a650:	1bef      	subs	r7, r5, r7
 801a652:	2001      	movs	r0, #1
 801a654:	8123      	strh	r3, [r4, #8]
 801a656:	8166      	strh	r6, [r4, #10]
 801a658:	81a7      	strh	r7, [r4, #12]
 801a65a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801a65e:	80e5      	strh	r5, [r4, #6]
 801a660:	73a0      	strb	r0, [r4, #14]
 801a662:	b004      	add	sp, #16
 801a664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a668:	2000      	movs	r0, #0
 801a66a:	e7fa      	b.n	801a662 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801a66c:	0801e02c 	.word	0x0801e02c

0801a670 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801a670:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a672:	461e      	mov	r6, r3
 801a674:	1e4b      	subs	r3, r1, #1
 801a676:	2b01      	cmp	r3, #1
 801a678:	b085      	sub	sp, #20
 801a67a:	4604      	mov	r4, r0
 801a67c:	460d      	mov	r5, r1
 801a67e:	4617      	mov	r7, r2
 801a680:	d84b      	bhi.n	801a71a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801a682:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a686:	1cd3      	adds	r3, r2, #3
 801a688:	b29b      	uxth	r3, r3
 801a68a:	2b06      	cmp	r3, #6
 801a68c:	d916      	bls.n	801a6bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801a68e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801a730 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801a692:	f8cd c004 	str.w	ip, [sp, #4]
 801a696:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a69a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a69e:	6900      	ldr	r0, [r0, #16]
 801a6a0:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a6a4:	f04f 0c00 	mov.w	ip, #0
 801a6a8:	f88d c008 	strb.w	ip, [sp, #8]
 801a6ac:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a6b0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a6b4:	6803      	ldr	r3, [r0, #0]
 801a6b6:	a901      	add	r1, sp, #4
 801a6b8:	689b      	ldr	r3, [r3, #8]
 801a6ba:	4798      	blx	r3
 801a6bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a6c0:	1cd3      	adds	r3, r2, #3
 801a6c2:	b29b      	uxth	r3, r3
 801a6c4:	2b06      	cmp	r3, #6
 801a6c6:	d916      	bls.n	801a6f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a6c8:	f8df c064 	ldr.w	ip, [pc, #100]	; 801a730 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801a6cc:	f8cd c004 	str.w	ip, [sp, #4]
 801a6d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a6d4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a6d8:	6920      	ldr	r0, [r4, #16]
 801a6da:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a6de:	f04f 0c01 	mov.w	ip, #1
 801a6e2:	f88d c008 	strb.w	ip, [sp, #8]
 801a6e6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a6ea:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a6ee:	6803      	ldr	r3, [r0, #0]
 801a6f0:	a901      	add	r1, sp, #4
 801a6f2:	689b      	ldr	r3, [r3, #8]
 801a6f4:	4798      	blx	r3
 801a6f6:	4b0d      	ldr	r3, [pc, #52]	; (801a72c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801a6f8:	9301      	str	r3, [sp, #4]
 801a6fa:	6920      	ldr	r0, [r4, #16]
 801a6fc:	f88d 5008 	strb.w	r5, [sp, #8]
 801a700:	2300      	movs	r3, #0
 801a702:	f8ad 700a 	strh.w	r7, [sp, #10]
 801a706:	f8ad 600c 	strh.w	r6, [sp, #12]
 801a70a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a70e:	6803      	ldr	r3, [r0, #0]
 801a710:	a901      	add	r1, sp, #4
 801a712:	681b      	ldr	r3, [r3, #0]
 801a714:	4798      	blx	r3
 801a716:	b005      	add	sp, #20
 801a718:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a71a:	2900      	cmp	r1, #0
 801a71c:	d1eb      	bne.n	801a6f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a71e:	80a2      	strh	r2, [r4, #4]
 801a720:	80c6      	strh	r6, [r0, #6]
 801a722:	60a1      	str	r1, [r4, #8]
 801a724:	81a1      	strh	r1, [r4, #12]
 801a726:	73a1      	strb	r1, [r4, #14]
 801a728:	e7e5      	b.n	801a6f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a72a:	bf00      	nop
 801a72c:	0801e018 	.word	0x0801e018
 801a730:	0801e040 	.word	0x0801e040

0801a734 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801a734:	b570      	push	{r4, r5, r6, lr}
 801a736:	790b      	ldrb	r3, [r1, #4]
 801a738:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801a73c:	2b00      	cmp	r3, #0
 801a73e:	bf0c      	ite	eq
 801a740:	2301      	moveq	r3, #1
 801a742:	2300      	movne	r3, #0
 801a744:	4604      	mov	r4, r0
 801a746:	460e      	mov	r6, r1
 801a748:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801a74c:	d110      	bne.n	801a770 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801a74e:	b185      	cbz	r5, 801a772 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 801a750:	7933      	ldrb	r3, [r6, #4]
 801a752:	2b01      	cmp	r3, #1
 801a754:	d113      	bne.n	801a77e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801a756:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801a758:	b188      	cbz	r0, 801a77e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801a75a:	6803      	ldr	r3, [r0, #0]
 801a75c:	68db      	ldr	r3, [r3, #12]
 801a75e:	4798      	blx	r3
 801a760:	b168      	cbz	r0, 801a77e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801a762:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801a764:	6803      	ldr	r3, [r0, #0]
 801a766:	4621      	mov	r1, r4
 801a768:	689b      	ldr	r3, [r3, #8]
 801a76a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a76e:	4718      	bx	r3
 801a770:	b12d      	cbz	r5, 801a77e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801a772:	6823      	ldr	r3, [r4, #0]
 801a774:	4620      	mov	r0, r4
 801a776:	695b      	ldr	r3, [r3, #20]
 801a778:	4798      	blx	r3
 801a77a:	2d00      	cmp	r5, #0
 801a77c:	d1e8      	bne.n	801a750 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801a77e:	bd70      	pop	{r4, r5, r6, pc}

0801a780 <__aeabi_atexit>:
 801a780:	460b      	mov	r3, r1
 801a782:	4601      	mov	r1, r0
 801a784:	4618      	mov	r0, r3
 801a786:	f000 b853 	b.w	801a830 <__cxa_atexit>

0801a78a <__cxa_pure_virtual>:
 801a78a:	b508      	push	{r3, lr}
 801a78c:	f000 f820 	bl	801a7d0 <_ZSt9terminatev>

0801a790 <_ZdlPvj>:
 801a790:	f000 b80f 	b.w	801a7b2 <_ZdlPv>

0801a794 <__cxa_guard_acquire>:
 801a794:	6803      	ldr	r3, [r0, #0]
 801a796:	07db      	lsls	r3, r3, #31
 801a798:	d406      	bmi.n	801a7a8 <__cxa_guard_acquire+0x14>
 801a79a:	7843      	ldrb	r3, [r0, #1]
 801a79c:	b103      	cbz	r3, 801a7a0 <__cxa_guard_acquire+0xc>
 801a79e:	deff      	udf	#255	; 0xff
 801a7a0:	2301      	movs	r3, #1
 801a7a2:	7043      	strb	r3, [r0, #1]
 801a7a4:	4618      	mov	r0, r3
 801a7a6:	4770      	bx	lr
 801a7a8:	2000      	movs	r0, #0
 801a7aa:	4770      	bx	lr

0801a7ac <__cxa_guard_release>:
 801a7ac:	2301      	movs	r3, #1
 801a7ae:	6003      	str	r3, [r0, #0]
 801a7b0:	4770      	bx	lr

0801a7b2 <_ZdlPv>:
 801a7b2:	f000 b88f 	b.w	801a8d4 <free>

0801a7b6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801a7b6:	b508      	push	{r3, lr}
 801a7b8:	4780      	blx	r0
 801a7ba:	f000 f80e 	bl	801a7da <abort>
	...

0801a7c0 <_ZSt13get_terminatev>:
 801a7c0:	4b02      	ldr	r3, [pc, #8]	; (801a7cc <_ZSt13get_terminatev+0xc>)
 801a7c2:	6818      	ldr	r0, [r3, #0]
 801a7c4:	f3bf 8f5b 	dmb	ish
 801a7c8:	4770      	bx	lr
 801a7ca:	bf00      	nop
 801a7cc:	20000108 	.word	0x20000108

0801a7d0 <_ZSt9terminatev>:
 801a7d0:	b508      	push	{r3, lr}
 801a7d2:	f7ff fff5 	bl	801a7c0 <_ZSt13get_terminatev>
 801a7d6:	f7ff ffee 	bl	801a7b6 <_ZN10__cxxabiv111__terminateEPFvvE>

0801a7da <abort>:
 801a7da:	b508      	push	{r3, lr}
 801a7dc:	2006      	movs	r0, #6
 801a7de:	f000 fc3d 	bl	801b05c <raise>
 801a7e2:	2001      	movs	r0, #1
 801a7e4:	f7e8 f8aa 	bl	800293c <_exit>

0801a7e8 <__assert_func>:
 801a7e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801a7ea:	461c      	mov	r4, r3
 801a7ec:	4b09      	ldr	r3, [pc, #36]	; (801a814 <__assert_func+0x2c>)
 801a7ee:	681b      	ldr	r3, [r3, #0]
 801a7f0:	4605      	mov	r5, r0
 801a7f2:	68d8      	ldr	r0, [r3, #12]
 801a7f4:	b152      	cbz	r2, 801a80c <__assert_func+0x24>
 801a7f6:	4b08      	ldr	r3, [pc, #32]	; (801a818 <__assert_func+0x30>)
 801a7f8:	9100      	str	r1, [sp, #0]
 801a7fa:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801a7fe:	4907      	ldr	r1, [pc, #28]	; (801a81c <__assert_func+0x34>)
 801a800:	462b      	mov	r3, r5
 801a802:	4622      	mov	r2, r4
 801a804:	f000 f828 	bl	801a858 <fiprintf>
 801a808:	f7ff ffe7 	bl	801a7da <abort>
 801a80c:	4b04      	ldr	r3, [pc, #16]	; (801a820 <__assert_func+0x38>)
 801a80e:	461a      	mov	r2, r3
 801a810:	e7f2      	b.n	801a7f8 <__assert_func+0x10>
 801a812:	bf00      	nop
 801a814:	2000010c 	.word	0x2000010c
 801a818:	0801f2b0 	.word	0x0801f2b0
 801a81c:	0801f2bd 	.word	0x0801f2bd
 801a820:	0801f2eb 	.word	0x0801f2eb

0801a824 <atexit>:
 801a824:	2300      	movs	r3, #0
 801a826:	4601      	mov	r1, r0
 801a828:	461a      	mov	r2, r3
 801a82a:	4618      	mov	r0, r3
 801a82c:	f000 bcf2 	b.w	801b214 <__register_exitproc>

0801a830 <__cxa_atexit>:
 801a830:	b510      	push	{r4, lr}
 801a832:	4c05      	ldr	r4, [pc, #20]	; (801a848 <__cxa_atexit+0x18>)
 801a834:	4613      	mov	r3, r2
 801a836:	b12c      	cbz	r4, 801a844 <__cxa_atexit+0x14>
 801a838:	460a      	mov	r2, r1
 801a83a:	4601      	mov	r1, r0
 801a83c:	2002      	movs	r0, #2
 801a83e:	f000 fce9 	bl	801b214 <__register_exitproc>
 801a842:	bd10      	pop	{r4, pc}
 801a844:	4620      	mov	r0, r4
 801a846:	e7fc      	b.n	801a842 <__cxa_atexit+0x12>
 801a848:	0801b215 	.word	0x0801b215

0801a84c <__errno>:
 801a84c:	4b01      	ldr	r3, [pc, #4]	; (801a854 <__errno+0x8>)
 801a84e:	6818      	ldr	r0, [r3, #0]
 801a850:	4770      	bx	lr
 801a852:	bf00      	nop
 801a854:	2000010c 	.word	0x2000010c

0801a858 <fiprintf>:
 801a858:	b40e      	push	{r1, r2, r3}
 801a85a:	b503      	push	{r0, r1, lr}
 801a85c:	4601      	mov	r1, r0
 801a85e:	ab03      	add	r3, sp, #12
 801a860:	4805      	ldr	r0, [pc, #20]	; (801a878 <fiprintf+0x20>)
 801a862:	f853 2b04 	ldr.w	r2, [r3], #4
 801a866:	6800      	ldr	r0, [r0, #0]
 801a868:	9301      	str	r3, [sp, #4]
 801a86a:	f000 f921 	bl	801aab0 <_vfiprintf_r>
 801a86e:	b002      	add	sp, #8
 801a870:	f85d eb04 	ldr.w	lr, [sp], #4
 801a874:	b003      	add	sp, #12
 801a876:	4770      	bx	lr
 801a878:	2000010c 	.word	0x2000010c

0801a87c <__libc_init_array>:
 801a87c:	b570      	push	{r4, r5, r6, lr}
 801a87e:	4e0d      	ldr	r6, [pc, #52]	; (801a8b4 <__libc_init_array+0x38>)
 801a880:	4c0d      	ldr	r4, [pc, #52]	; (801a8b8 <__libc_init_array+0x3c>)
 801a882:	1ba4      	subs	r4, r4, r6
 801a884:	10a4      	asrs	r4, r4, #2
 801a886:	2500      	movs	r5, #0
 801a888:	42a5      	cmp	r5, r4
 801a88a:	d109      	bne.n	801a8a0 <__libc_init_array+0x24>
 801a88c:	4e0b      	ldr	r6, [pc, #44]	; (801a8bc <__libc_init_array+0x40>)
 801a88e:	4c0c      	ldr	r4, [pc, #48]	; (801a8c0 <__libc_init_array+0x44>)
 801a890:	f000 ffb0 	bl	801b7f4 <_init>
 801a894:	1ba4      	subs	r4, r4, r6
 801a896:	10a4      	asrs	r4, r4, #2
 801a898:	2500      	movs	r5, #0
 801a89a:	42a5      	cmp	r5, r4
 801a89c:	d105      	bne.n	801a8aa <__libc_init_array+0x2e>
 801a89e:	bd70      	pop	{r4, r5, r6, pc}
 801a8a0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801a8a4:	4798      	blx	r3
 801a8a6:	3501      	adds	r5, #1
 801a8a8:	e7ee      	b.n	801a888 <__libc_init_array+0xc>
 801a8aa:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801a8ae:	4798      	blx	r3
 801a8b0:	3501      	adds	r5, #1
 801a8b2:	e7f2      	b.n	801a89a <__libc_init_array+0x1e>
 801a8b4:	08062744 	.word	0x08062744
 801a8b8:	08062744 	.word	0x08062744
 801a8bc:	08062744 	.word	0x08062744
 801a8c0:	08062758 	.word	0x08062758

0801a8c4 <malloc>:
 801a8c4:	4b02      	ldr	r3, [pc, #8]	; (801a8d0 <malloc+0xc>)
 801a8c6:	4601      	mov	r1, r0
 801a8c8:	6818      	ldr	r0, [r3, #0]
 801a8ca:	f000 b86d 	b.w	801a9a8 <_malloc_r>
 801a8ce:	bf00      	nop
 801a8d0:	2000010c 	.word	0x2000010c

0801a8d4 <free>:
 801a8d4:	4b02      	ldr	r3, [pc, #8]	; (801a8e0 <free+0xc>)
 801a8d6:	4601      	mov	r1, r0
 801a8d8:	6818      	ldr	r0, [r3, #0]
 801a8da:	f000 b817 	b.w	801a90c <_free_r>
 801a8de:	bf00      	nop
 801a8e0:	2000010c 	.word	0x2000010c

0801a8e4 <memcpy>:
 801a8e4:	b510      	push	{r4, lr}
 801a8e6:	1e43      	subs	r3, r0, #1
 801a8e8:	440a      	add	r2, r1
 801a8ea:	4291      	cmp	r1, r2
 801a8ec:	d100      	bne.n	801a8f0 <memcpy+0xc>
 801a8ee:	bd10      	pop	{r4, pc}
 801a8f0:	f811 4b01 	ldrb.w	r4, [r1], #1
 801a8f4:	f803 4f01 	strb.w	r4, [r3, #1]!
 801a8f8:	e7f7      	b.n	801a8ea <memcpy+0x6>

0801a8fa <memset>:
 801a8fa:	4402      	add	r2, r0
 801a8fc:	4603      	mov	r3, r0
 801a8fe:	4293      	cmp	r3, r2
 801a900:	d100      	bne.n	801a904 <memset+0xa>
 801a902:	4770      	bx	lr
 801a904:	f803 1b01 	strb.w	r1, [r3], #1
 801a908:	e7f9      	b.n	801a8fe <memset+0x4>
	...

0801a90c <_free_r>:
 801a90c:	b538      	push	{r3, r4, r5, lr}
 801a90e:	4605      	mov	r5, r0
 801a910:	2900      	cmp	r1, #0
 801a912:	d045      	beq.n	801a9a0 <_free_r+0x94>
 801a914:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801a918:	1f0c      	subs	r4, r1, #4
 801a91a:	2b00      	cmp	r3, #0
 801a91c:	bfb8      	it	lt
 801a91e:	18e4      	addlt	r4, r4, r3
 801a920:	f000 feba 	bl	801b698 <__malloc_lock>
 801a924:	4a1f      	ldr	r2, [pc, #124]	; (801a9a4 <_free_r+0x98>)
 801a926:	6813      	ldr	r3, [r2, #0]
 801a928:	4610      	mov	r0, r2
 801a92a:	b933      	cbnz	r3, 801a93a <_free_r+0x2e>
 801a92c:	6063      	str	r3, [r4, #4]
 801a92e:	6014      	str	r4, [r2, #0]
 801a930:	4628      	mov	r0, r5
 801a932:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a936:	f000 beb0 	b.w	801b69a <__malloc_unlock>
 801a93a:	42a3      	cmp	r3, r4
 801a93c:	d90c      	bls.n	801a958 <_free_r+0x4c>
 801a93e:	6821      	ldr	r1, [r4, #0]
 801a940:	1862      	adds	r2, r4, r1
 801a942:	4293      	cmp	r3, r2
 801a944:	bf04      	itt	eq
 801a946:	681a      	ldreq	r2, [r3, #0]
 801a948:	685b      	ldreq	r3, [r3, #4]
 801a94a:	6063      	str	r3, [r4, #4]
 801a94c:	bf04      	itt	eq
 801a94e:	1852      	addeq	r2, r2, r1
 801a950:	6022      	streq	r2, [r4, #0]
 801a952:	6004      	str	r4, [r0, #0]
 801a954:	e7ec      	b.n	801a930 <_free_r+0x24>
 801a956:	4613      	mov	r3, r2
 801a958:	685a      	ldr	r2, [r3, #4]
 801a95a:	b10a      	cbz	r2, 801a960 <_free_r+0x54>
 801a95c:	42a2      	cmp	r2, r4
 801a95e:	d9fa      	bls.n	801a956 <_free_r+0x4a>
 801a960:	6819      	ldr	r1, [r3, #0]
 801a962:	1858      	adds	r0, r3, r1
 801a964:	42a0      	cmp	r0, r4
 801a966:	d10b      	bne.n	801a980 <_free_r+0x74>
 801a968:	6820      	ldr	r0, [r4, #0]
 801a96a:	4401      	add	r1, r0
 801a96c:	1858      	adds	r0, r3, r1
 801a96e:	4282      	cmp	r2, r0
 801a970:	6019      	str	r1, [r3, #0]
 801a972:	d1dd      	bne.n	801a930 <_free_r+0x24>
 801a974:	6810      	ldr	r0, [r2, #0]
 801a976:	6852      	ldr	r2, [r2, #4]
 801a978:	605a      	str	r2, [r3, #4]
 801a97a:	4401      	add	r1, r0
 801a97c:	6019      	str	r1, [r3, #0]
 801a97e:	e7d7      	b.n	801a930 <_free_r+0x24>
 801a980:	d902      	bls.n	801a988 <_free_r+0x7c>
 801a982:	230c      	movs	r3, #12
 801a984:	602b      	str	r3, [r5, #0]
 801a986:	e7d3      	b.n	801a930 <_free_r+0x24>
 801a988:	6820      	ldr	r0, [r4, #0]
 801a98a:	1821      	adds	r1, r4, r0
 801a98c:	428a      	cmp	r2, r1
 801a98e:	bf04      	itt	eq
 801a990:	6811      	ldreq	r1, [r2, #0]
 801a992:	6852      	ldreq	r2, [r2, #4]
 801a994:	6062      	str	r2, [r4, #4]
 801a996:	bf04      	itt	eq
 801a998:	1809      	addeq	r1, r1, r0
 801a99a:	6021      	streq	r1, [r4, #0]
 801a99c:	605c      	str	r4, [r3, #4]
 801a99e:	e7c7      	b.n	801a930 <_free_r+0x24>
 801a9a0:	bd38      	pop	{r3, r4, r5, pc}
 801a9a2:	bf00      	nop
 801a9a4:	200124d8 	.word	0x200124d8

0801a9a8 <_malloc_r>:
 801a9a8:	b570      	push	{r4, r5, r6, lr}
 801a9aa:	1ccd      	adds	r5, r1, #3
 801a9ac:	f025 0503 	bic.w	r5, r5, #3
 801a9b0:	3508      	adds	r5, #8
 801a9b2:	2d0c      	cmp	r5, #12
 801a9b4:	bf38      	it	cc
 801a9b6:	250c      	movcc	r5, #12
 801a9b8:	2d00      	cmp	r5, #0
 801a9ba:	4606      	mov	r6, r0
 801a9bc:	db01      	blt.n	801a9c2 <_malloc_r+0x1a>
 801a9be:	42a9      	cmp	r1, r5
 801a9c0:	d903      	bls.n	801a9ca <_malloc_r+0x22>
 801a9c2:	230c      	movs	r3, #12
 801a9c4:	6033      	str	r3, [r6, #0]
 801a9c6:	2000      	movs	r0, #0
 801a9c8:	bd70      	pop	{r4, r5, r6, pc}
 801a9ca:	f000 fe65 	bl	801b698 <__malloc_lock>
 801a9ce:	4a21      	ldr	r2, [pc, #132]	; (801aa54 <_malloc_r+0xac>)
 801a9d0:	6814      	ldr	r4, [r2, #0]
 801a9d2:	4621      	mov	r1, r4
 801a9d4:	b991      	cbnz	r1, 801a9fc <_malloc_r+0x54>
 801a9d6:	4c20      	ldr	r4, [pc, #128]	; (801aa58 <_malloc_r+0xb0>)
 801a9d8:	6823      	ldr	r3, [r4, #0]
 801a9da:	b91b      	cbnz	r3, 801a9e4 <_malloc_r+0x3c>
 801a9dc:	4630      	mov	r0, r6
 801a9de:	f000 fb05 	bl	801afec <_sbrk_r>
 801a9e2:	6020      	str	r0, [r4, #0]
 801a9e4:	4629      	mov	r1, r5
 801a9e6:	4630      	mov	r0, r6
 801a9e8:	f000 fb00 	bl	801afec <_sbrk_r>
 801a9ec:	1c43      	adds	r3, r0, #1
 801a9ee:	d124      	bne.n	801aa3a <_malloc_r+0x92>
 801a9f0:	230c      	movs	r3, #12
 801a9f2:	6033      	str	r3, [r6, #0]
 801a9f4:	4630      	mov	r0, r6
 801a9f6:	f000 fe50 	bl	801b69a <__malloc_unlock>
 801a9fa:	e7e4      	b.n	801a9c6 <_malloc_r+0x1e>
 801a9fc:	680b      	ldr	r3, [r1, #0]
 801a9fe:	1b5b      	subs	r3, r3, r5
 801aa00:	d418      	bmi.n	801aa34 <_malloc_r+0x8c>
 801aa02:	2b0b      	cmp	r3, #11
 801aa04:	d90f      	bls.n	801aa26 <_malloc_r+0x7e>
 801aa06:	600b      	str	r3, [r1, #0]
 801aa08:	50cd      	str	r5, [r1, r3]
 801aa0a:	18cc      	adds	r4, r1, r3
 801aa0c:	4630      	mov	r0, r6
 801aa0e:	f000 fe44 	bl	801b69a <__malloc_unlock>
 801aa12:	f104 000b 	add.w	r0, r4, #11
 801aa16:	1d23      	adds	r3, r4, #4
 801aa18:	f020 0007 	bic.w	r0, r0, #7
 801aa1c:	1ac3      	subs	r3, r0, r3
 801aa1e:	d0d3      	beq.n	801a9c8 <_malloc_r+0x20>
 801aa20:	425a      	negs	r2, r3
 801aa22:	50e2      	str	r2, [r4, r3]
 801aa24:	e7d0      	b.n	801a9c8 <_malloc_r+0x20>
 801aa26:	428c      	cmp	r4, r1
 801aa28:	684b      	ldr	r3, [r1, #4]
 801aa2a:	bf16      	itet	ne
 801aa2c:	6063      	strne	r3, [r4, #4]
 801aa2e:	6013      	streq	r3, [r2, #0]
 801aa30:	460c      	movne	r4, r1
 801aa32:	e7eb      	b.n	801aa0c <_malloc_r+0x64>
 801aa34:	460c      	mov	r4, r1
 801aa36:	6849      	ldr	r1, [r1, #4]
 801aa38:	e7cc      	b.n	801a9d4 <_malloc_r+0x2c>
 801aa3a:	1cc4      	adds	r4, r0, #3
 801aa3c:	f024 0403 	bic.w	r4, r4, #3
 801aa40:	42a0      	cmp	r0, r4
 801aa42:	d005      	beq.n	801aa50 <_malloc_r+0xa8>
 801aa44:	1a21      	subs	r1, r4, r0
 801aa46:	4630      	mov	r0, r6
 801aa48:	f000 fad0 	bl	801afec <_sbrk_r>
 801aa4c:	3001      	adds	r0, #1
 801aa4e:	d0cf      	beq.n	801a9f0 <_malloc_r+0x48>
 801aa50:	6025      	str	r5, [r4, #0]
 801aa52:	e7db      	b.n	801aa0c <_malloc_r+0x64>
 801aa54:	200124d8 	.word	0x200124d8
 801aa58:	200124dc 	.word	0x200124dc

0801aa5c <__sfputc_r>:
 801aa5c:	6893      	ldr	r3, [r2, #8]
 801aa5e:	3b01      	subs	r3, #1
 801aa60:	2b00      	cmp	r3, #0
 801aa62:	b410      	push	{r4}
 801aa64:	6093      	str	r3, [r2, #8]
 801aa66:	da08      	bge.n	801aa7a <__sfputc_r+0x1e>
 801aa68:	6994      	ldr	r4, [r2, #24]
 801aa6a:	42a3      	cmp	r3, r4
 801aa6c:	db01      	blt.n	801aa72 <__sfputc_r+0x16>
 801aa6e:	290a      	cmp	r1, #10
 801aa70:	d103      	bne.n	801aa7a <__sfputc_r+0x1e>
 801aa72:	f85d 4b04 	ldr.w	r4, [sp], #4
 801aa76:	f000 bb0d 	b.w	801b094 <__swbuf_r>
 801aa7a:	6813      	ldr	r3, [r2, #0]
 801aa7c:	1c58      	adds	r0, r3, #1
 801aa7e:	6010      	str	r0, [r2, #0]
 801aa80:	7019      	strb	r1, [r3, #0]
 801aa82:	4608      	mov	r0, r1
 801aa84:	f85d 4b04 	ldr.w	r4, [sp], #4
 801aa88:	4770      	bx	lr

0801aa8a <__sfputs_r>:
 801aa8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aa8c:	4606      	mov	r6, r0
 801aa8e:	460f      	mov	r7, r1
 801aa90:	4614      	mov	r4, r2
 801aa92:	18d5      	adds	r5, r2, r3
 801aa94:	42ac      	cmp	r4, r5
 801aa96:	d101      	bne.n	801aa9c <__sfputs_r+0x12>
 801aa98:	2000      	movs	r0, #0
 801aa9a:	e007      	b.n	801aaac <__sfputs_r+0x22>
 801aa9c:	463a      	mov	r2, r7
 801aa9e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801aaa2:	4630      	mov	r0, r6
 801aaa4:	f7ff ffda 	bl	801aa5c <__sfputc_r>
 801aaa8:	1c43      	adds	r3, r0, #1
 801aaaa:	d1f3      	bne.n	801aa94 <__sfputs_r+0xa>
 801aaac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801aab0 <_vfiprintf_r>:
 801aab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aab4:	460c      	mov	r4, r1
 801aab6:	b09d      	sub	sp, #116	; 0x74
 801aab8:	4617      	mov	r7, r2
 801aaba:	461d      	mov	r5, r3
 801aabc:	4606      	mov	r6, r0
 801aabe:	b118      	cbz	r0, 801aac8 <_vfiprintf_r+0x18>
 801aac0:	6983      	ldr	r3, [r0, #24]
 801aac2:	b90b      	cbnz	r3, 801aac8 <_vfiprintf_r+0x18>
 801aac4:	f000 fcfa 	bl	801b4bc <__sinit>
 801aac8:	4b7c      	ldr	r3, [pc, #496]	; (801acbc <_vfiprintf_r+0x20c>)
 801aaca:	429c      	cmp	r4, r3
 801aacc:	d158      	bne.n	801ab80 <_vfiprintf_r+0xd0>
 801aace:	6874      	ldr	r4, [r6, #4]
 801aad0:	89a3      	ldrh	r3, [r4, #12]
 801aad2:	0718      	lsls	r0, r3, #28
 801aad4:	d55e      	bpl.n	801ab94 <_vfiprintf_r+0xe4>
 801aad6:	6923      	ldr	r3, [r4, #16]
 801aad8:	2b00      	cmp	r3, #0
 801aada:	d05b      	beq.n	801ab94 <_vfiprintf_r+0xe4>
 801aadc:	2300      	movs	r3, #0
 801aade:	9309      	str	r3, [sp, #36]	; 0x24
 801aae0:	2320      	movs	r3, #32
 801aae2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801aae6:	2330      	movs	r3, #48	; 0x30
 801aae8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801aaec:	9503      	str	r5, [sp, #12]
 801aaee:	f04f 0b01 	mov.w	fp, #1
 801aaf2:	46b8      	mov	r8, r7
 801aaf4:	4645      	mov	r5, r8
 801aaf6:	f815 3b01 	ldrb.w	r3, [r5], #1
 801aafa:	b10b      	cbz	r3, 801ab00 <_vfiprintf_r+0x50>
 801aafc:	2b25      	cmp	r3, #37	; 0x25
 801aafe:	d154      	bne.n	801abaa <_vfiprintf_r+0xfa>
 801ab00:	ebb8 0a07 	subs.w	sl, r8, r7
 801ab04:	d00b      	beq.n	801ab1e <_vfiprintf_r+0x6e>
 801ab06:	4653      	mov	r3, sl
 801ab08:	463a      	mov	r2, r7
 801ab0a:	4621      	mov	r1, r4
 801ab0c:	4630      	mov	r0, r6
 801ab0e:	f7ff ffbc 	bl	801aa8a <__sfputs_r>
 801ab12:	3001      	adds	r0, #1
 801ab14:	f000 80c2 	beq.w	801ac9c <_vfiprintf_r+0x1ec>
 801ab18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab1a:	4453      	add	r3, sl
 801ab1c:	9309      	str	r3, [sp, #36]	; 0x24
 801ab1e:	f898 3000 	ldrb.w	r3, [r8]
 801ab22:	2b00      	cmp	r3, #0
 801ab24:	f000 80ba 	beq.w	801ac9c <_vfiprintf_r+0x1ec>
 801ab28:	2300      	movs	r3, #0
 801ab2a:	f04f 32ff 	mov.w	r2, #4294967295
 801ab2e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ab32:	9304      	str	r3, [sp, #16]
 801ab34:	9307      	str	r3, [sp, #28]
 801ab36:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ab3a:	931a      	str	r3, [sp, #104]	; 0x68
 801ab3c:	46a8      	mov	r8, r5
 801ab3e:	2205      	movs	r2, #5
 801ab40:	f818 1b01 	ldrb.w	r1, [r8], #1
 801ab44:	485e      	ldr	r0, [pc, #376]	; (801acc0 <_vfiprintf_r+0x210>)
 801ab46:	f7e5 fb53 	bl	80001f0 <memchr>
 801ab4a:	9b04      	ldr	r3, [sp, #16]
 801ab4c:	bb78      	cbnz	r0, 801abae <_vfiprintf_r+0xfe>
 801ab4e:	06d9      	lsls	r1, r3, #27
 801ab50:	bf44      	itt	mi
 801ab52:	2220      	movmi	r2, #32
 801ab54:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801ab58:	071a      	lsls	r2, r3, #28
 801ab5a:	bf44      	itt	mi
 801ab5c:	222b      	movmi	r2, #43	; 0x2b
 801ab5e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801ab62:	782a      	ldrb	r2, [r5, #0]
 801ab64:	2a2a      	cmp	r2, #42	; 0x2a
 801ab66:	d02a      	beq.n	801abbe <_vfiprintf_r+0x10e>
 801ab68:	9a07      	ldr	r2, [sp, #28]
 801ab6a:	46a8      	mov	r8, r5
 801ab6c:	2000      	movs	r0, #0
 801ab6e:	250a      	movs	r5, #10
 801ab70:	4641      	mov	r1, r8
 801ab72:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ab76:	3b30      	subs	r3, #48	; 0x30
 801ab78:	2b09      	cmp	r3, #9
 801ab7a:	d969      	bls.n	801ac50 <_vfiprintf_r+0x1a0>
 801ab7c:	b360      	cbz	r0, 801abd8 <_vfiprintf_r+0x128>
 801ab7e:	e024      	b.n	801abca <_vfiprintf_r+0x11a>
 801ab80:	4b50      	ldr	r3, [pc, #320]	; (801acc4 <_vfiprintf_r+0x214>)
 801ab82:	429c      	cmp	r4, r3
 801ab84:	d101      	bne.n	801ab8a <_vfiprintf_r+0xda>
 801ab86:	68b4      	ldr	r4, [r6, #8]
 801ab88:	e7a2      	b.n	801aad0 <_vfiprintf_r+0x20>
 801ab8a:	4b4f      	ldr	r3, [pc, #316]	; (801acc8 <_vfiprintf_r+0x218>)
 801ab8c:	429c      	cmp	r4, r3
 801ab8e:	bf08      	it	eq
 801ab90:	68f4      	ldreq	r4, [r6, #12]
 801ab92:	e79d      	b.n	801aad0 <_vfiprintf_r+0x20>
 801ab94:	4621      	mov	r1, r4
 801ab96:	4630      	mov	r0, r6
 801ab98:	f000 face 	bl	801b138 <__swsetup_r>
 801ab9c:	2800      	cmp	r0, #0
 801ab9e:	d09d      	beq.n	801aadc <_vfiprintf_r+0x2c>
 801aba0:	f04f 30ff 	mov.w	r0, #4294967295
 801aba4:	b01d      	add	sp, #116	; 0x74
 801aba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abaa:	46a8      	mov	r8, r5
 801abac:	e7a2      	b.n	801aaf4 <_vfiprintf_r+0x44>
 801abae:	4a44      	ldr	r2, [pc, #272]	; (801acc0 <_vfiprintf_r+0x210>)
 801abb0:	1a80      	subs	r0, r0, r2
 801abb2:	fa0b f000 	lsl.w	r0, fp, r0
 801abb6:	4318      	orrs	r0, r3
 801abb8:	9004      	str	r0, [sp, #16]
 801abba:	4645      	mov	r5, r8
 801abbc:	e7be      	b.n	801ab3c <_vfiprintf_r+0x8c>
 801abbe:	9a03      	ldr	r2, [sp, #12]
 801abc0:	1d11      	adds	r1, r2, #4
 801abc2:	6812      	ldr	r2, [r2, #0]
 801abc4:	9103      	str	r1, [sp, #12]
 801abc6:	2a00      	cmp	r2, #0
 801abc8:	db01      	blt.n	801abce <_vfiprintf_r+0x11e>
 801abca:	9207      	str	r2, [sp, #28]
 801abcc:	e004      	b.n	801abd8 <_vfiprintf_r+0x128>
 801abce:	4252      	negs	r2, r2
 801abd0:	f043 0302 	orr.w	r3, r3, #2
 801abd4:	9207      	str	r2, [sp, #28]
 801abd6:	9304      	str	r3, [sp, #16]
 801abd8:	f898 3000 	ldrb.w	r3, [r8]
 801abdc:	2b2e      	cmp	r3, #46	; 0x2e
 801abde:	d10e      	bne.n	801abfe <_vfiprintf_r+0x14e>
 801abe0:	f898 3001 	ldrb.w	r3, [r8, #1]
 801abe4:	2b2a      	cmp	r3, #42	; 0x2a
 801abe6:	d138      	bne.n	801ac5a <_vfiprintf_r+0x1aa>
 801abe8:	9b03      	ldr	r3, [sp, #12]
 801abea:	1d1a      	adds	r2, r3, #4
 801abec:	681b      	ldr	r3, [r3, #0]
 801abee:	9203      	str	r2, [sp, #12]
 801abf0:	2b00      	cmp	r3, #0
 801abf2:	bfb8      	it	lt
 801abf4:	f04f 33ff 	movlt.w	r3, #4294967295
 801abf8:	f108 0802 	add.w	r8, r8, #2
 801abfc:	9305      	str	r3, [sp, #20]
 801abfe:	4d33      	ldr	r5, [pc, #204]	; (801accc <_vfiprintf_r+0x21c>)
 801ac00:	f898 1000 	ldrb.w	r1, [r8]
 801ac04:	2203      	movs	r2, #3
 801ac06:	4628      	mov	r0, r5
 801ac08:	f7e5 faf2 	bl	80001f0 <memchr>
 801ac0c:	b140      	cbz	r0, 801ac20 <_vfiprintf_r+0x170>
 801ac0e:	2340      	movs	r3, #64	; 0x40
 801ac10:	1b40      	subs	r0, r0, r5
 801ac12:	fa03 f000 	lsl.w	r0, r3, r0
 801ac16:	9b04      	ldr	r3, [sp, #16]
 801ac18:	4303      	orrs	r3, r0
 801ac1a:	f108 0801 	add.w	r8, r8, #1
 801ac1e:	9304      	str	r3, [sp, #16]
 801ac20:	f898 1000 	ldrb.w	r1, [r8]
 801ac24:	482a      	ldr	r0, [pc, #168]	; (801acd0 <_vfiprintf_r+0x220>)
 801ac26:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801ac2a:	2206      	movs	r2, #6
 801ac2c:	f108 0701 	add.w	r7, r8, #1
 801ac30:	f7e5 fade 	bl	80001f0 <memchr>
 801ac34:	2800      	cmp	r0, #0
 801ac36:	d037      	beq.n	801aca8 <_vfiprintf_r+0x1f8>
 801ac38:	4b26      	ldr	r3, [pc, #152]	; (801acd4 <_vfiprintf_r+0x224>)
 801ac3a:	bb1b      	cbnz	r3, 801ac84 <_vfiprintf_r+0x1d4>
 801ac3c:	9b03      	ldr	r3, [sp, #12]
 801ac3e:	3307      	adds	r3, #7
 801ac40:	f023 0307 	bic.w	r3, r3, #7
 801ac44:	3308      	adds	r3, #8
 801ac46:	9303      	str	r3, [sp, #12]
 801ac48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac4a:	444b      	add	r3, r9
 801ac4c:	9309      	str	r3, [sp, #36]	; 0x24
 801ac4e:	e750      	b.n	801aaf2 <_vfiprintf_r+0x42>
 801ac50:	fb05 3202 	mla	r2, r5, r2, r3
 801ac54:	2001      	movs	r0, #1
 801ac56:	4688      	mov	r8, r1
 801ac58:	e78a      	b.n	801ab70 <_vfiprintf_r+0xc0>
 801ac5a:	2300      	movs	r3, #0
 801ac5c:	f108 0801 	add.w	r8, r8, #1
 801ac60:	9305      	str	r3, [sp, #20]
 801ac62:	4619      	mov	r1, r3
 801ac64:	250a      	movs	r5, #10
 801ac66:	4640      	mov	r0, r8
 801ac68:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ac6c:	3a30      	subs	r2, #48	; 0x30
 801ac6e:	2a09      	cmp	r2, #9
 801ac70:	d903      	bls.n	801ac7a <_vfiprintf_r+0x1ca>
 801ac72:	2b00      	cmp	r3, #0
 801ac74:	d0c3      	beq.n	801abfe <_vfiprintf_r+0x14e>
 801ac76:	9105      	str	r1, [sp, #20]
 801ac78:	e7c1      	b.n	801abfe <_vfiprintf_r+0x14e>
 801ac7a:	fb05 2101 	mla	r1, r5, r1, r2
 801ac7e:	2301      	movs	r3, #1
 801ac80:	4680      	mov	r8, r0
 801ac82:	e7f0      	b.n	801ac66 <_vfiprintf_r+0x1b6>
 801ac84:	ab03      	add	r3, sp, #12
 801ac86:	9300      	str	r3, [sp, #0]
 801ac88:	4622      	mov	r2, r4
 801ac8a:	4b13      	ldr	r3, [pc, #76]	; (801acd8 <_vfiprintf_r+0x228>)
 801ac8c:	a904      	add	r1, sp, #16
 801ac8e:	4630      	mov	r0, r6
 801ac90:	f3af 8000 	nop.w
 801ac94:	f1b0 3fff 	cmp.w	r0, #4294967295
 801ac98:	4681      	mov	r9, r0
 801ac9a:	d1d5      	bne.n	801ac48 <_vfiprintf_r+0x198>
 801ac9c:	89a3      	ldrh	r3, [r4, #12]
 801ac9e:	065b      	lsls	r3, r3, #25
 801aca0:	f53f af7e 	bmi.w	801aba0 <_vfiprintf_r+0xf0>
 801aca4:	9809      	ldr	r0, [sp, #36]	; 0x24
 801aca6:	e77d      	b.n	801aba4 <_vfiprintf_r+0xf4>
 801aca8:	ab03      	add	r3, sp, #12
 801acaa:	9300      	str	r3, [sp, #0]
 801acac:	4622      	mov	r2, r4
 801acae:	4b0a      	ldr	r3, [pc, #40]	; (801acd8 <_vfiprintf_r+0x228>)
 801acb0:	a904      	add	r1, sp, #16
 801acb2:	4630      	mov	r0, r6
 801acb4:	f000 f888 	bl	801adc8 <_printf_i>
 801acb8:	e7ec      	b.n	801ac94 <_vfiprintf_r+0x1e4>
 801acba:	bf00      	nop
 801acbc:	0801f348 	.word	0x0801f348
 801acc0:	0801f2f0 	.word	0x0801f2f0
 801acc4:	0801f368 	.word	0x0801f368
 801acc8:	0801f328 	.word	0x0801f328
 801accc:	0801f2f6 	.word	0x0801f2f6
 801acd0:	0801f2fa 	.word	0x0801f2fa
 801acd4:	00000000 	.word	0x00000000
 801acd8:	0801aa8b 	.word	0x0801aa8b

0801acdc <_printf_common>:
 801acdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ace0:	4691      	mov	r9, r2
 801ace2:	461f      	mov	r7, r3
 801ace4:	688a      	ldr	r2, [r1, #8]
 801ace6:	690b      	ldr	r3, [r1, #16]
 801ace8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801acec:	4293      	cmp	r3, r2
 801acee:	bfb8      	it	lt
 801acf0:	4613      	movlt	r3, r2
 801acf2:	f8c9 3000 	str.w	r3, [r9]
 801acf6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801acfa:	4606      	mov	r6, r0
 801acfc:	460c      	mov	r4, r1
 801acfe:	b112      	cbz	r2, 801ad06 <_printf_common+0x2a>
 801ad00:	3301      	adds	r3, #1
 801ad02:	f8c9 3000 	str.w	r3, [r9]
 801ad06:	6823      	ldr	r3, [r4, #0]
 801ad08:	0699      	lsls	r1, r3, #26
 801ad0a:	bf42      	ittt	mi
 801ad0c:	f8d9 3000 	ldrmi.w	r3, [r9]
 801ad10:	3302      	addmi	r3, #2
 801ad12:	f8c9 3000 	strmi.w	r3, [r9]
 801ad16:	6825      	ldr	r5, [r4, #0]
 801ad18:	f015 0506 	ands.w	r5, r5, #6
 801ad1c:	d107      	bne.n	801ad2e <_printf_common+0x52>
 801ad1e:	f104 0a19 	add.w	sl, r4, #25
 801ad22:	68e3      	ldr	r3, [r4, #12]
 801ad24:	f8d9 2000 	ldr.w	r2, [r9]
 801ad28:	1a9b      	subs	r3, r3, r2
 801ad2a:	42ab      	cmp	r3, r5
 801ad2c:	dc28      	bgt.n	801ad80 <_printf_common+0xa4>
 801ad2e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801ad32:	6822      	ldr	r2, [r4, #0]
 801ad34:	3300      	adds	r3, #0
 801ad36:	bf18      	it	ne
 801ad38:	2301      	movne	r3, #1
 801ad3a:	0692      	lsls	r2, r2, #26
 801ad3c:	d42d      	bmi.n	801ad9a <_printf_common+0xbe>
 801ad3e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801ad42:	4639      	mov	r1, r7
 801ad44:	4630      	mov	r0, r6
 801ad46:	47c0      	blx	r8
 801ad48:	3001      	adds	r0, #1
 801ad4a:	d020      	beq.n	801ad8e <_printf_common+0xb2>
 801ad4c:	6823      	ldr	r3, [r4, #0]
 801ad4e:	68e5      	ldr	r5, [r4, #12]
 801ad50:	f8d9 2000 	ldr.w	r2, [r9]
 801ad54:	f003 0306 	and.w	r3, r3, #6
 801ad58:	2b04      	cmp	r3, #4
 801ad5a:	bf08      	it	eq
 801ad5c:	1aad      	subeq	r5, r5, r2
 801ad5e:	68a3      	ldr	r3, [r4, #8]
 801ad60:	6922      	ldr	r2, [r4, #16]
 801ad62:	bf0c      	ite	eq
 801ad64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801ad68:	2500      	movne	r5, #0
 801ad6a:	4293      	cmp	r3, r2
 801ad6c:	bfc4      	itt	gt
 801ad6e:	1a9b      	subgt	r3, r3, r2
 801ad70:	18ed      	addgt	r5, r5, r3
 801ad72:	f04f 0900 	mov.w	r9, #0
 801ad76:	341a      	adds	r4, #26
 801ad78:	454d      	cmp	r5, r9
 801ad7a:	d11a      	bne.n	801adb2 <_printf_common+0xd6>
 801ad7c:	2000      	movs	r0, #0
 801ad7e:	e008      	b.n	801ad92 <_printf_common+0xb6>
 801ad80:	2301      	movs	r3, #1
 801ad82:	4652      	mov	r2, sl
 801ad84:	4639      	mov	r1, r7
 801ad86:	4630      	mov	r0, r6
 801ad88:	47c0      	blx	r8
 801ad8a:	3001      	adds	r0, #1
 801ad8c:	d103      	bne.n	801ad96 <_printf_common+0xba>
 801ad8e:	f04f 30ff 	mov.w	r0, #4294967295
 801ad92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ad96:	3501      	adds	r5, #1
 801ad98:	e7c3      	b.n	801ad22 <_printf_common+0x46>
 801ad9a:	18e1      	adds	r1, r4, r3
 801ad9c:	1c5a      	adds	r2, r3, #1
 801ad9e:	2030      	movs	r0, #48	; 0x30
 801ada0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801ada4:	4422      	add	r2, r4
 801ada6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801adaa:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801adae:	3302      	adds	r3, #2
 801adb0:	e7c5      	b.n	801ad3e <_printf_common+0x62>
 801adb2:	2301      	movs	r3, #1
 801adb4:	4622      	mov	r2, r4
 801adb6:	4639      	mov	r1, r7
 801adb8:	4630      	mov	r0, r6
 801adba:	47c0      	blx	r8
 801adbc:	3001      	adds	r0, #1
 801adbe:	d0e6      	beq.n	801ad8e <_printf_common+0xb2>
 801adc0:	f109 0901 	add.w	r9, r9, #1
 801adc4:	e7d8      	b.n	801ad78 <_printf_common+0x9c>
	...

0801adc8 <_printf_i>:
 801adc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801adcc:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801add0:	460c      	mov	r4, r1
 801add2:	7e09      	ldrb	r1, [r1, #24]
 801add4:	b085      	sub	sp, #20
 801add6:	296e      	cmp	r1, #110	; 0x6e
 801add8:	4617      	mov	r7, r2
 801adda:	4606      	mov	r6, r0
 801addc:	4698      	mov	r8, r3
 801adde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ade0:	f000 80b3 	beq.w	801af4a <_printf_i+0x182>
 801ade4:	d822      	bhi.n	801ae2c <_printf_i+0x64>
 801ade6:	2963      	cmp	r1, #99	; 0x63
 801ade8:	d036      	beq.n	801ae58 <_printf_i+0x90>
 801adea:	d80a      	bhi.n	801ae02 <_printf_i+0x3a>
 801adec:	2900      	cmp	r1, #0
 801adee:	f000 80b9 	beq.w	801af64 <_printf_i+0x19c>
 801adf2:	2958      	cmp	r1, #88	; 0x58
 801adf4:	f000 8083 	beq.w	801aefe <_printf_i+0x136>
 801adf8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801adfc:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801ae00:	e032      	b.n	801ae68 <_printf_i+0xa0>
 801ae02:	2964      	cmp	r1, #100	; 0x64
 801ae04:	d001      	beq.n	801ae0a <_printf_i+0x42>
 801ae06:	2969      	cmp	r1, #105	; 0x69
 801ae08:	d1f6      	bne.n	801adf8 <_printf_i+0x30>
 801ae0a:	6820      	ldr	r0, [r4, #0]
 801ae0c:	6813      	ldr	r3, [r2, #0]
 801ae0e:	0605      	lsls	r5, r0, #24
 801ae10:	f103 0104 	add.w	r1, r3, #4
 801ae14:	d52a      	bpl.n	801ae6c <_printf_i+0xa4>
 801ae16:	681b      	ldr	r3, [r3, #0]
 801ae18:	6011      	str	r1, [r2, #0]
 801ae1a:	2b00      	cmp	r3, #0
 801ae1c:	da03      	bge.n	801ae26 <_printf_i+0x5e>
 801ae1e:	222d      	movs	r2, #45	; 0x2d
 801ae20:	425b      	negs	r3, r3
 801ae22:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801ae26:	486f      	ldr	r0, [pc, #444]	; (801afe4 <_printf_i+0x21c>)
 801ae28:	220a      	movs	r2, #10
 801ae2a:	e039      	b.n	801aea0 <_printf_i+0xd8>
 801ae2c:	2973      	cmp	r1, #115	; 0x73
 801ae2e:	f000 809d 	beq.w	801af6c <_printf_i+0x1a4>
 801ae32:	d808      	bhi.n	801ae46 <_printf_i+0x7e>
 801ae34:	296f      	cmp	r1, #111	; 0x6f
 801ae36:	d020      	beq.n	801ae7a <_printf_i+0xb2>
 801ae38:	2970      	cmp	r1, #112	; 0x70
 801ae3a:	d1dd      	bne.n	801adf8 <_printf_i+0x30>
 801ae3c:	6823      	ldr	r3, [r4, #0]
 801ae3e:	f043 0320 	orr.w	r3, r3, #32
 801ae42:	6023      	str	r3, [r4, #0]
 801ae44:	e003      	b.n	801ae4e <_printf_i+0x86>
 801ae46:	2975      	cmp	r1, #117	; 0x75
 801ae48:	d017      	beq.n	801ae7a <_printf_i+0xb2>
 801ae4a:	2978      	cmp	r1, #120	; 0x78
 801ae4c:	d1d4      	bne.n	801adf8 <_printf_i+0x30>
 801ae4e:	2378      	movs	r3, #120	; 0x78
 801ae50:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801ae54:	4864      	ldr	r0, [pc, #400]	; (801afe8 <_printf_i+0x220>)
 801ae56:	e055      	b.n	801af04 <_printf_i+0x13c>
 801ae58:	6813      	ldr	r3, [r2, #0]
 801ae5a:	1d19      	adds	r1, r3, #4
 801ae5c:	681b      	ldr	r3, [r3, #0]
 801ae5e:	6011      	str	r1, [r2, #0]
 801ae60:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801ae64:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801ae68:	2301      	movs	r3, #1
 801ae6a:	e08c      	b.n	801af86 <_printf_i+0x1be>
 801ae6c:	681b      	ldr	r3, [r3, #0]
 801ae6e:	6011      	str	r1, [r2, #0]
 801ae70:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ae74:	bf18      	it	ne
 801ae76:	b21b      	sxthne	r3, r3
 801ae78:	e7cf      	b.n	801ae1a <_printf_i+0x52>
 801ae7a:	6813      	ldr	r3, [r2, #0]
 801ae7c:	6825      	ldr	r5, [r4, #0]
 801ae7e:	1d18      	adds	r0, r3, #4
 801ae80:	6010      	str	r0, [r2, #0]
 801ae82:	0628      	lsls	r0, r5, #24
 801ae84:	d501      	bpl.n	801ae8a <_printf_i+0xc2>
 801ae86:	681b      	ldr	r3, [r3, #0]
 801ae88:	e002      	b.n	801ae90 <_printf_i+0xc8>
 801ae8a:	0668      	lsls	r0, r5, #25
 801ae8c:	d5fb      	bpl.n	801ae86 <_printf_i+0xbe>
 801ae8e:	881b      	ldrh	r3, [r3, #0]
 801ae90:	4854      	ldr	r0, [pc, #336]	; (801afe4 <_printf_i+0x21c>)
 801ae92:	296f      	cmp	r1, #111	; 0x6f
 801ae94:	bf14      	ite	ne
 801ae96:	220a      	movne	r2, #10
 801ae98:	2208      	moveq	r2, #8
 801ae9a:	2100      	movs	r1, #0
 801ae9c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801aea0:	6865      	ldr	r5, [r4, #4]
 801aea2:	60a5      	str	r5, [r4, #8]
 801aea4:	2d00      	cmp	r5, #0
 801aea6:	f2c0 8095 	blt.w	801afd4 <_printf_i+0x20c>
 801aeaa:	6821      	ldr	r1, [r4, #0]
 801aeac:	f021 0104 	bic.w	r1, r1, #4
 801aeb0:	6021      	str	r1, [r4, #0]
 801aeb2:	2b00      	cmp	r3, #0
 801aeb4:	d13d      	bne.n	801af32 <_printf_i+0x16a>
 801aeb6:	2d00      	cmp	r5, #0
 801aeb8:	f040 808e 	bne.w	801afd8 <_printf_i+0x210>
 801aebc:	4665      	mov	r5, ip
 801aebe:	2a08      	cmp	r2, #8
 801aec0:	d10b      	bne.n	801aeda <_printf_i+0x112>
 801aec2:	6823      	ldr	r3, [r4, #0]
 801aec4:	07db      	lsls	r3, r3, #31
 801aec6:	d508      	bpl.n	801aeda <_printf_i+0x112>
 801aec8:	6923      	ldr	r3, [r4, #16]
 801aeca:	6862      	ldr	r2, [r4, #4]
 801aecc:	429a      	cmp	r2, r3
 801aece:	bfde      	ittt	le
 801aed0:	2330      	movle	r3, #48	; 0x30
 801aed2:	f805 3c01 	strble.w	r3, [r5, #-1]
 801aed6:	f105 35ff 	addle.w	r5, r5, #4294967295
 801aeda:	ebac 0305 	sub.w	r3, ip, r5
 801aede:	6123      	str	r3, [r4, #16]
 801aee0:	f8cd 8000 	str.w	r8, [sp]
 801aee4:	463b      	mov	r3, r7
 801aee6:	aa03      	add	r2, sp, #12
 801aee8:	4621      	mov	r1, r4
 801aeea:	4630      	mov	r0, r6
 801aeec:	f7ff fef6 	bl	801acdc <_printf_common>
 801aef0:	3001      	adds	r0, #1
 801aef2:	d14d      	bne.n	801af90 <_printf_i+0x1c8>
 801aef4:	f04f 30ff 	mov.w	r0, #4294967295
 801aef8:	b005      	add	sp, #20
 801aefa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801aefe:	4839      	ldr	r0, [pc, #228]	; (801afe4 <_printf_i+0x21c>)
 801af00:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801af04:	6813      	ldr	r3, [r2, #0]
 801af06:	6821      	ldr	r1, [r4, #0]
 801af08:	1d1d      	adds	r5, r3, #4
 801af0a:	681b      	ldr	r3, [r3, #0]
 801af0c:	6015      	str	r5, [r2, #0]
 801af0e:	060a      	lsls	r2, r1, #24
 801af10:	d50b      	bpl.n	801af2a <_printf_i+0x162>
 801af12:	07ca      	lsls	r2, r1, #31
 801af14:	bf44      	itt	mi
 801af16:	f041 0120 	orrmi.w	r1, r1, #32
 801af1a:	6021      	strmi	r1, [r4, #0]
 801af1c:	b91b      	cbnz	r3, 801af26 <_printf_i+0x15e>
 801af1e:	6822      	ldr	r2, [r4, #0]
 801af20:	f022 0220 	bic.w	r2, r2, #32
 801af24:	6022      	str	r2, [r4, #0]
 801af26:	2210      	movs	r2, #16
 801af28:	e7b7      	b.n	801ae9a <_printf_i+0xd2>
 801af2a:	064d      	lsls	r5, r1, #25
 801af2c:	bf48      	it	mi
 801af2e:	b29b      	uxthmi	r3, r3
 801af30:	e7ef      	b.n	801af12 <_printf_i+0x14a>
 801af32:	4665      	mov	r5, ip
 801af34:	fbb3 f1f2 	udiv	r1, r3, r2
 801af38:	fb02 3311 	mls	r3, r2, r1, r3
 801af3c:	5cc3      	ldrb	r3, [r0, r3]
 801af3e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801af42:	460b      	mov	r3, r1
 801af44:	2900      	cmp	r1, #0
 801af46:	d1f5      	bne.n	801af34 <_printf_i+0x16c>
 801af48:	e7b9      	b.n	801aebe <_printf_i+0xf6>
 801af4a:	6813      	ldr	r3, [r2, #0]
 801af4c:	6825      	ldr	r5, [r4, #0]
 801af4e:	6961      	ldr	r1, [r4, #20]
 801af50:	1d18      	adds	r0, r3, #4
 801af52:	6010      	str	r0, [r2, #0]
 801af54:	0628      	lsls	r0, r5, #24
 801af56:	681b      	ldr	r3, [r3, #0]
 801af58:	d501      	bpl.n	801af5e <_printf_i+0x196>
 801af5a:	6019      	str	r1, [r3, #0]
 801af5c:	e002      	b.n	801af64 <_printf_i+0x19c>
 801af5e:	066a      	lsls	r2, r5, #25
 801af60:	d5fb      	bpl.n	801af5a <_printf_i+0x192>
 801af62:	8019      	strh	r1, [r3, #0]
 801af64:	2300      	movs	r3, #0
 801af66:	6123      	str	r3, [r4, #16]
 801af68:	4665      	mov	r5, ip
 801af6a:	e7b9      	b.n	801aee0 <_printf_i+0x118>
 801af6c:	6813      	ldr	r3, [r2, #0]
 801af6e:	1d19      	adds	r1, r3, #4
 801af70:	6011      	str	r1, [r2, #0]
 801af72:	681d      	ldr	r5, [r3, #0]
 801af74:	6862      	ldr	r2, [r4, #4]
 801af76:	2100      	movs	r1, #0
 801af78:	4628      	mov	r0, r5
 801af7a:	f7e5 f939 	bl	80001f0 <memchr>
 801af7e:	b108      	cbz	r0, 801af84 <_printf_i+0x1bc>
 801af80:	1b40      	subs	r0, r0, r5
 801af82:	6060      	str	r0, [r4, #4]
 801af84:	6863      	ldr	r3, [r4, #4]
 801af86:	6123      	str	r3, [r4, #16]
 801af88:	2300      	movs	r3, #0
 801af8a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801af8e:	e7a7      	b.n	801aee0 <_printf_i+0x118>
 801af90:	6923      	ldr	r3, [r4, #16]
 801af92:	462a      	mov	r2, r5
 801af94:	4639      	mov	r1, r7
 801af96:	4630      	mov	r0, r6
 801af98:	47c0      	blx	r8
 801af9a:	3001      	adds	r0, #1
 801af9c:	d0aa      	beq.n	801aef4 <_printf_i+0x12c>
 801af9e:	6823      	ldr	r3, [r4, #0]
 801afa0:	079b      	lsls	r3, r3, #30
 801afa2:	d413      	bmi.n	801afcc <_printf_i+0x204>
 801afa4:	68e0      	ldr	r0, [r4, #12]
 801afa6:	9b03      	ldr	r3, [sp, #12]
 801afa8:	4298      	cmp	r0, r3
 801afaa:	bfb8      	it	lt
 801afac:	4618      	movlt	r0, r3
 801afae:	e7a3      	b.n	801aef8 <_printf_i+0x130>
 801afb0:	2301      	movs	r3, #1
 801afb2:	464a      	mov	r2, r9
 801afb4:	4639      	mov	r1, r7
 801afb6:	4630      	mov	r0, r6
 801afb8:	47c0      	blx	r8
 801afba:	3001      	adds	r0, #1
 801afbc:	d09a      	beq.n	801aef4 <_printf_i+0x12c>
 801afbe:	3501      	adds	r5, #1
 801afc0:	68e3      	ldr	r3, [r4, #12]
 801afc2:	9a03      	ldr	r2, [sp, #12]
 801afc4:	1a9b      	subs	r3, r3, r2
 801afc6:	42ab      	cmp	r3, r5
 801afc8:	dcf2      	bgt.n	801afb0 <_printf_i+0x1e8>
 801afca:	e7eb      	b.n	801afa4 <_printf_i+0x1dc>
 801afcc:	2500      	movs	r5, #0
 801afce:	f104 0919 	add.w	r9, r4, #25
 801afd2:	e7f5      	b.n	801afc0 <_printf_i+0x1f8>
 801afd4:	2b00      	cmp	r3, #0
 801afd6:	d1ac      	bne.n	801af32 <_printf_i+0x16a>
 801afd8:	7803      	ldrb	r3, [r0, #0]
 801afda:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801afde:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801afe2:	e76c      	b.n	801aebe <_printf_i+0xf6>
 801afe4:	0801f301 	.word	0x0801f301
 801afe8:	0801f312 	.word	0x0801f312

0801afec <_sbrk_r>:
 801afec:	b538      	push	{r3, r4, r5, lr}
 801afee:	4c06      	ldr	r4, [pc, #24]	; (801b008 <_sbrk_r+0x1c>)
 801aff0:	2300      	movs	r3, #0
 801aff2:	4605      	mov	r5, r0
 801aff4:	4608      	mov	r0, r1
 801aff6:	6023      	str	r3, [r4, #0]
 801aff8:	f7e7 fcce 	bl	8002998 <_sbrk>
 801affc:	1c43      	adds	r3, r0, #1
 801affe:	d102      	bne.n	801b006 <_sbrk_r+0x1a>
 801b000:	6823      	ldr	r3, [r4, #0]
 801b002:	b103      	cbz	r3, 801b006 <_sbrk_r+0x1a>
 801b004:	602b      	str	r3, [r5, #0]
 801b006:	bd38      	pop	{r3, r4, r5, pc}
 801b008:	20012bb0 	.word	0x20012bb0

0801b00c <_raise_r>:
 801b00c:	291f      	cmp	r1, #31
 801b00e:	b538      	push	{r3, r4, r5, lr}
 801b010:	4604      	mov	r4, r0
 801b012:	460d      	mov	r5, r1
 801b014:	d904      	bls.n	801b020 <_raise_r+0x14>
 801b016:	2316      	movs	r3, #22
 801b018:	6003      	str	r3, [r0, #0]
 801b01a:	f04f 30ff 	mov.w	r0, #4294967295
 801b01e:	bd38      	pop	{r3, r4, r5, pc}
 801b020:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801b022:	b112      	cbz	r2, 801b02a <_raise_r+0x1e>
 801b024:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801b028:	b94b      	cbnz	r3, 801b03e <_raise_r+0x32>
 801b02a:	4620      	mov	r0, r4
 801b02c:	f000 f830 	bl	801b090 <_getpid_r>
 801b030:	462a      	mov	r2, r5
 801b032:	4601      	mov	r1, r0
 801b034:	4620      	mov	r0, r4
 801b036:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b03a:	f000 b817 	b.w	801b06c <_kill_r>
 801b03e:	2b01      	cmp	r3, #1
 801b040:	d00a      	beq.n	801b058 <_raise_r+0x4c>
 801b042:	1c59      	adds	r1, r3, #1
 801b044:	d103      	bne.n	801b04e <_raise_r+0x42>
 801b046:	2316      	movs	r3, #22
 801b048:	6003      	str	r3, [r0, #0]
 801b04a:	2001      	movs	r0, #1
 801b04c:	e7e7      	b.n	801b01e <_raise_r+0x12>
 801b04e:	2400      	movs	r4, #0
 801b050:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801b054:	4628      	mov	r0, r5
 801b056:	4798      	blx	r3
 801b058:	2000      	movs	r0, #0
 801b05a:	e7e0      	b.n	801b01e <_raise_r+0x12>

0801b05c <raise>:
 801b05c:	4b02      	ldr	r3, [pc, #8]	; (801b068 <raise+0xc>)
 801b05e:	4601      	mov	r1, r0
 801b060:	6818      	ldr	r0, [r3, #0]
 801b062:	f7ff bfd3 	b.w	801b00c <_raise_r>
 801b066:	bf00      	nop
 801b068:	2000010c 	.word	0x2000010c

0801b06c <_kill_r>:
 801b06c:	b538      	push	{r3, r4, r5, lr}
 801b06e:	4c07      	ldr	r4, [pc, #28]	; (801b08c <_kill_r+0x20>)
 801b070:	2300      	movs	r3, #0
 801b072:	4605      	mov	r5, r0
 801b074:	4608      	mov	r0, r1
 801b076:	4611      	mov	r1, r2
 801b078:	6023      	str	r3, [r4, #0]
 801b07a:	f7e7 fc57 	bl	800292c <_kill>
 801b07e:	1c43      	adds	r3, r0, #1
 801b080:	d102      	bne.n	801b088 <_kill_r+0x1c>
 801b082:	6823      	ldr	r3, [r4, #0]
 801b084:	b103      	cbz	r3, 801b088 <_kill_r+0x1c>
 801b086:	602b      	str	r3, [r5, #0]
 801b088:	bd38      	pop	{r3, r4, r5, pc}
 801b08a:	bf00      	nop
 801b08c:	20012bb0 	.word	0x20012bb0

0801b090 <_getpid_r>:
 801b090:	f7e7 bc4a 	b.w	8002928 <_getpid>

0801b094 <__swbuf_r>:
 801b094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b096:	460e      	mov	r6, r1
 801b098:	4614      	mov	r4, r2
 801b09a:	4605      	mov	r5, r0
 801b09c:	b118      	cbz	r0, 801b0a6 <__swbuf_r+0x12>
 801b09e:	6983      	ldr	r3, [r0, #24]
 801b0a0:	b90b      	cbnz	r3, 801b0a6 <__swbuf_r+0x12>
 801b0a2:	f000 fa0b 	bl	801b4bc <__sinit>
 801b0a6:	4b21      	ldr	r3, [pc, #132]	; (801b12c <__swbuf_r+0x98>)
 801b0a8:	429c      	cmp	r4, r3
 801b0aa:	d12a      	bne.n	801b102 <__swbuf_r+0x6e>
 801b0ac:	686c      	ldr	r4, [r5, #4]
 801b0ae:	69a3      	ldr	r3, [r4, #24]
 801b0b0:	60a3      	str	r3, [r4, #8]
 801b0b2:	89a3      	ldrh	r3, [r4, #12]
 801b0b4:	071a      	lsls	r2, r3, #28
 801b0b6:	d52e      	bpl.n	801b116 <__swbuf_r+0x82>
 801b0b8:	6923      	ldr	r3, [r4, #16]
 801b0ba:	b363      	cbz	r3, 801b116 <__swbuf_r+0x82>
 801b0bc:	6923      	ldr	r3, [r4, #16]
 801b0be:	6820      	ldr	r0, [r4, #0]
 801b0c0:	1ac0      	subs	r0, r0, r3
 801b0c2:	6963      	ldr	r3, [r4, #20]
 801b0c4:	b2f6      	uxtb	r6, r6
 801b0c6:	4283      	cmp	r3, r0
 801b0c8:	4637      	mov	r7, r6
 801b0ca:	dc04      	bgt.n	801b0d6 <__swbuf_r+0x42>
 801b0cc:	4621      	mov	r1, r4
 801b0ce:	4628      	mov	r0, r5
 801b0d0:	f000 f98a 	bl	801b3e8 <_fflush_r>
 801b0d4:	bb28      	cbnz	r0, 801b122 <__swbuf_r+0x8e>
 801b0d6:	68a3      	ldr	r3, [r4, #8]
 801b0d8:	3b01      	subs	r3, #1
 801b0da:	60a3      	str	r3, [r4, #8]
 801b0dc:	6823      	ldr	r3, [r4, #0]
 801b0de:	1c5a      	adds	r2, r3, #1
 801b0e0:	6022      	str	r2, [r4, #0]
 801b0e2:	701e      	strb	r6, [r3, #0]
 801b0e4:	6963      	ldr	r3, [r4, #20]
 801b0e6:	3001      	adds	r0, #1
 801b0e8:	4283      	cmp	r3, r0
 801b0ea:	d004      	beq.n	801b0f6 <__swbuf_r+0x62>
 801b0ec:	89a3      	ldrh	r3, [r4, #12]
 801b0ee:	07db      	lsls	r3, r3, #31
 801b0f0:	d519      	bpl.n	801b126 <__swbuf_r+0x92>
 801b0f2:	2e0a      	cmp	r6, #10
 801b0f4:	d117      	bne.n	801b126 <__swbuf_r+0x92>
 801b0f6:	4621      	mov	r1, r4
 801b0f8:	4628      	mov	r0, r5
 801b0fa:	f000 f975 	bl	801b3e8 <_fflush_r>
 801b0fe:	b190      	cbz	r0, 801b126 <__swbuf_r+0x92>
 801b100:	e00f      	b.n	801b122 <__swbuf_r+0x8e>
 801b102:	4b0b      	ldr	r3, [pc, #44]	; (801b130 <__swbuf_r+0x9c>)
 801b104:	429c      	cmp	r4, r3
 801b106:	d101      	bne.n	801b10c <__swbuf_r+0x78>
 801b108:	68ac      	ldr	r4, [r5, #8]
 801b10a:	e7d0      	b.n	801b0ae <__swbuf_r+0x1a>
 801b10c:	4b09      	ldr	r3, [pc, #36]	; (801b134 <__swbuf_r+0xa0>)
 801b10e:	429c      	cmp	r4, r3
 801b110:	bf08      	it	eq
 801b112:	68ec      	ldreq	r4, [r5, #12]
 801b114:	e7cb      	b.n	801b0ae <__swbuf_r+0x1a>
 801b116:	4621      	mov	r1, r4
 801b118:	4628      	mov	r0, r5
 801b11a:	f000 f80d 	bl	801b138 <__swsetup_r>
 801b11e:	2800      	cmp	r0, #0
 801b120:	d0cc      	beq.n	801b0bc <__swbuf_r+0x28>
 801b122:	f04f 37ff 	mov.w	r7, #4294967295
 801b126:	4638      	mov	r0, r7
 801b128:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b12a:	bf00      	nop
 801b12c:	0801f348 	.word	0x0801f348
 801b130:	0801f368 	.word	0x0801f368
 801b134:	0801f328 	.word	0x0801f328

0801b138 <__swsetup_r>:
 801b138:	4b32      	ldr	r3, [pc, #200]	; (801b204 <__swsetup_r+0xcc>)
 801b13a:	b570      	push	{r4, r5, r6, lr}
 801b13c:	681d      	ldr	r5, [r3, #0]
 801b13e:	4606      	mov	r6, r0
 801b140:	460c      	mov	r4, r1
 801b142:	b125      	cbz	r5, 801b14e <__swsetup_r+0x16>
 801b144:	69ab      	ldr	r3, [r5, #24]
 801b146:	b913      	cbnz	r3, 801b14e <__swsetup_r+0x16>
 801b148:	4628      	mov	r0, r5
 801b14a:	f000 f9b7 	bl	801b4bc <__sinit>
 801b14e:	4b2e      	ldr	r3, [pc, #184]	; (801b208 <__swsetup_r+0xd0>)
 801b150:	429c      	cmp	r4, r3
 801b152:	d10f      	bne.n	801b174 <__swsetup_r+0x3c>
 801b154:	686c      	ldr	r4, [r5, #4]
 801b156:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b15a:	b29a      	uxth	r2, r3
 801b15c:	0715      	lsls	r5, r2, #28
 801b15e:	d42c      	bmi.n	801b1ba <__swsetup_r+0x82>
 801b160:	06d0      	lsls	r0, r2, #27
 801b162:	d411      	bmi.n	801b188 <__swsetup_r+0x50>
 801b164:	2209      	movs	r2, #9
 801b166:	6032      	str	r2, [r6, #0]
 801b168:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b16c:	81a3      	strh	r3, [r4, #12]
 801b16e:	f04f 30ff 	mov.w	r0, #4294967295
 801b172:	e03e      	b.n	801b1f2 <__swsetup_r+0xba>
 801b174:	4b25      	ldr	r3, [pc, #148]	; (801b20c <__swsetup_r+0xd4>)
 801b176:	429c      	cmp	r4, r3
 801b178:	d101      	bne.n	801b17e <__swsetup_r+0x46>
 801b17a:	68ac      	ldr	r4, [r5, #8]
 801b17c:	e7eb      	b.n	801b156 <__swsetup_r+0x1e>
 801b17e:	4b24      	ldr	r3, [pc, #144]	; (801b210 <__swsetup_r+0xd8>)
 801b180:	429c      	cmp	r4, r3
 801b182:	bf08      	it	eq
 801b184:	68ec      	ldreq	r4, [r5, #12]
 801b186:	e7e6      	b.n	801b156 <__swsetup_r+0x1e>
 801b188:	0751      	lsls	r1, r2, #29
 801b18a:	d512      	bpl.n	801b1b2 <__swsetup_r+0x7a>
 801b18c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b18e:	b141      	cbz	r1, 801b1a2 <__swsetup_r+0x6a>
 801b190:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b194:	4299      	cmp	r1, r3
 801b196:	d002      	beq.n	801b19e <__swsetup_r+0x66>
 801b198:	4630      	mov	r0, r6
 801b19a:	f7ff fbb7 	bl	801a90c <_free_r>
 801b19e:	2300      	movs	r3, #0
 801b1a0:	6363      	str	r3, [r4, #52]	; 0x34
 801b1a2:	89a3      	ldrh	r3, [r4, #12]
 801b1a4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801b1a8:	81a3      	strh	r3, [r4, #12]
 801b1aa:	2300      	movs	r3, #0
 801b1ac:	6063      	str	r3, [r4, #4]
 801b1ae:	6923      	ldr	r3, [r4, #16]
 801b1b0:	6023      	str	r3, [r4, #0]
 801b1b2:	89a3      	ldrh	r3, [r4, #12]
 801b1b4:	f043 0308 	orr.w	r3, r3, #8
 801b1b8:	81a3      	strh	r3, [r4, #12]
 801b1ba:	6923      	ldr	r3, [r4, #16]
 801b1bc:	b94b      	cbnz	r3, 801b1d2 <__swsetup_r+0x9a>
 801b1be:	89a3      	ldrh	r3, [r4, #12]
 801b1c0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801b1c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801b1c8:	d003      	beq.n	801b1d2 <__swsetup_r+0x9a>
 801b1ca:	4621      	mov	r1, r4
 801b1cc:	4630      	mov	r0, r6
 801b1ce:	f000 fa23 	bl	801b618 <__smakebuf_r>
 801b1d2:	89a2      	ldrh	r2, [r4, #12]
 801b1d4:	f012 0301 	ands.w	r3, r2, #1
 801b1d8:	d00c      	beq.n	801b1f4 <__swsetup_r+0xbc>
 801b1da:	2300      	movs	r3, #0
 801b1dc:	60a3      	str	r3, [r4, #8]
 801b1de:	6963      	ldr	r3, [r4, #20]
 801b1e0:	425b      	negs	r3, r3
 801b1e2:	61a3      	str	r3, [r4, #24]
 801b1e4:	6923      	ldr	r3, [r4, #16]
 801b1e6:	b953      	cbnz	r3, 801b1fe <__swsetup_r+0xc6>
 801b1e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b1ec:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801b1f0:	d1ba      	bne.n	801b168 <__swsetup_r+0x30>
 801b1f2:	bd70      	pop	{r4, r5, r6, pc}
 801b1f4:	0792      	lsls	r2, r2, #30
 801b1f6:	bf58      	it	pl
 801b1f8:	6963      	ldrpl	r3, [r4, #20]
 801b1fa:	60a3      	str	r3, [r4, #8]
 801b1fc:	e7f2      	b.n	801b1e4 <__swsetup_r+0xac>
 801b1fe:	2000      	movs	r0, #0
 801b200:	e7f7      	b.n	801b1f2 <__swsetup_r+0xba>
 801b202:	bf00      	nop
 801b204:	2000010c 	.word	0x2000010c
 801b208:	0801f348 	.word	0x0801f348
 801b20c:	0801f368 	.word	0x0801f368
 801b210:	0801f328 	.word	0x0801f328

0801b214 <__register_exitproc>:
 801b214:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b218:	4d2c      	ldr	r5, [pc, #176]	; (801b2cc <__register_exitproc+0xb8>)
 801b21a:	682c      	ldr	r4, [r5, #0]
 801b21c:	4607      	mov	r7, r0
 801b21e:	460e      	mov	r6, r1
 801b220:	4691      	mov	r9, r2
 801b222:	4698      	mov	r8, r3
 801b224:	b934      	cbnz	r4, 801b234 <__register_exitproc+0x20>
 801b226:	4b2a      	ldr	r3, [pc, #168]	; (801b2d0 <__register_exitproc+0xbc>)
 801b228:	4c2a      	ldr	r4, [pc, #168]	; (801b2d4 <__register_exitproc+0xc0>)
 801b22a:	602c      	str	r4, [r5, #0]
 801b22c:	b113      	cbz	r3, 801b234 <__register_exitproc+0x20>
 801b22e:	681b      	ldr	r3, [r3, #0]
 801b230:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801b234:	6863      	ldr	r3, [r4, #4]
 801b236:	2b1f      	cmp	r3, #31
 801b238:	dd3d      	ble.n	801b2b6 <__register_exitproc+0xa2>
 801b23a:	4b27      	ldr	r3, [pc, #156]	; (801b2d8 <__register_exitproc+0xc4>)
 801b23c:	b91b      	cbnz	r3, 801b246 <__register_exitproc+0x32>
 801b23e:	f04f 30ff 	mov.w	r0, #4294967295
 801b242:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b246:	208c      	movs	r0, #140	; 0x8c
 801b248:	f7ff fb3c 	bl	801a8c4 <malloc>
 801b24c:	4604      	mov	r4, r0
 801b24e:	2800      	cmp	r0, #0
 801b250:	d0f5      	beq.n	801b23e <__register_exitproc+0x2a>
 801b252:	2300      	movs	r3, #0
 801b254:	682a      	ldr	r2, [r5, #0]
 801b256:	6002      	str	r2, [r0, #0]
 801b258:	6043      	str	r3, [r0, #4]
 801b25a:	6028      	str	r0, [r5, #0]
 801b25c:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801b260:	b30f      	cbz	r7, 801b2a6 <__register_exitproc+0x92>
 801b262:	f44f 7084 	mov.w	r0, #264	; 0x108
 801b266:	f7ff fb2d 	bl	801a8c4 <malloc>
 801b26a:	2800      	cmp	r0, #0
 801b26c:	d0e7      	beq.n	801b23e <__register_exitproc+0x2a>
 801b26e:	2300      	movs	r3, #0
 801b270:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801b274:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801b278:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801b27c:	6862      	ldr	r2, [r4, #4]
 801b27e:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801b282:	2301      	movs	r3, #1
 801b284:	4093      	lsls	r3, r2
 801b286:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801b28a:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801b28e:	431a      	orrs	r2, r3
 801b290:	2f02      	cmp	r7, #2
 801b292:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801b296:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801b29a:	bf02      	ittt	eq
 801b29c:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801b2a0:	4313      	orreq	r3, r2
 801b2a2:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801b2a6:	6863      	ldr	r3, [r4, #4]
 801b2a8:	1c5a      	adds	r2, r3, #1
 801b2aa:	3302      	adds	r3, #2
 801b2ac:	6062      	str	r2, [r4, #4]
 801b2ae:	2000      	movs	r0, #0
 801b2b0:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801b2b4:	e7c5      	b.n	801b242 <__register_exitproc+0x2e>
 801b2b6:	2f00      	cmp	r7, #0
 801b2b8:	d0f5      	beq.n	801b2a6 <__register_exitproc+0x92>
 801b2ba:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801b2be:	2800      	cmp	r0, #0
 801b2c0:	d1dc      	bne.n	801b27c <__register_exitproc+0x68>
 801b2c2:	4b05      	ldr	r3, [pc, #20]	; (801b2d8 <__register_exitproc+0xc4>)
 801b2c4:	2b00      	cmp	r3, #0
 801b2c6:	d0ba      	beq.n	801b23e <__register_exitproc+0x2a>
 801b2c8:	e7cb      	b.n	801b262 <__register_exitproc+0x4e>
 801b2ca:	bf00      	nop
 801b2cc:	20012674 	.word	0x20012674
 801b2d0:	0801f324 	.word	0x0801f324
 801b2d4:	200125e8 	.word	0x200125e8
 801b2d8:	0801a8c5 	.word	0x0801a8c5

0801b2dc <__sflush_r>:
 801b2dc:	898a      	ldrh	r2, [r1, #12]
 801b2de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b2e2:	4605      	mov	r5, r0
 801b2e4:	0710      	lsls	r0, r2, #28
 801b2e6:	460c      	mov	r4, r1
 801b2e8:	d458      	bmi.n	801b39c <__sflush_r+0xc0>
 801b2ea:	684b      	ldr	r3, [r1, #4]
 801b2ec:	2b00      	cmp	r3, #0
 801b2ee:	dc05      	bgt.n	801b2fc <__sflush_r+0x20>
 801b2f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801b2f2:	2b00      	cmp	r3, #0
 801b2f4:	dc02      	bgt.n	801b2fc <__sflush_r+0x20>
 801b2f6:	2000      	movs	r0, #0
 801b2f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b2fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b2fe:	2e00      	cmp	r6, #0
 801b300:	d0f9      	beq.n	801b2f6 <__sflush_r+0x1a>
 801b302:	2300      	movs	r3, #0
 801b304:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801b308:	682f      	ldr	r7, [r5, #0]
 801b30a:	6a21      	ldr	r1, [r4, #32]
 801b30c:	602b      	str	r3, [r5, #0]
 801b30e:	d032      	beq.n	801b376 <__sflush_r+0x9a>
 801b310:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801b312:	89a3      	ldrh	r3, [r4, #12]
 801b314:	075a      	lsls	r2, r3, #29
 801b316:	d505      	bpl.n	801b324 <__sflush_r+0x48>
 801b318:	6863      	ldr	r3, [r4, #4]
 801b31a:	1ac0      	subs	r0, r0, r3
 801b31c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801b31e:	b10b      	cbz	r3, 801b324 <__sflush_r+0x48>
 801b320:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801b322:	1ac0      	subs	r0, r0, r3
 801b324:	2300      	movs	r3, #0
 801b326:	4602      	mov	r2, r0
 801b328:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b32a:	6a21      	ldr	r1, [r4, #32]
 801b32c:	4628      	mov	r0, r5
 801b32e:	47b0      	blx	r6
 801b330:	1c43      	adds	r3, r0, #1
 801b332:	89a3      	ldrh	r3, [r4, #12]
 801b334:	d106      	bne.n	801b344 <__sflush_r+0x68>
 801b336:	6829      	ldr	r1, [r5, #0]
 801b338:	291d      	cmp	r1, #29
 801b33a:	d848      	bhi.n	801b3ce <__sflush_r+0xf2>
 801b33c:	4a29      	ldr	r2, [pc, #164]	; (801b3e4 <__sflush_r+0x108>)
 801b33e:	40ca      	lsrs	r2, r1
 801b340:	07d6      	lsls	r6, r2, #31
 801b342:	d544      	bpl.n	801b3ce <__sflush_r+0xf2>
 801b344:	2200      	movs	r2, #0
 801b346:	6062      	str	r2, [r4, #4]
 801b348:	04d9      	lsls	r1, r3, #19
 801b34a:	6922      	ldr	r2, [r4, #16]
 801b34c:	6022      	str	r2, [r4, #0]
 801b34e:	d504      	bpl.n	801b35a <__sflush_r+0x7e>
 801b350:	1c42      	adds	r2, r0, #1
 801b352:	d101      	bne.n	801b358 <__sflush_r+0x7c>
 801b354:	682b      	ldr	r3, [r5, #0]
 801b356:	b903      	cbnz	r3, 801b35a <__sflush_r+0x7e>
 801b358:	6560      	str	r0, [r4, #84]	; 0x54
 801b35a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b35c:	602f      	str	r7, [r5, #0]
 801b35e:	2900      	cmp	r1, #0
 801b360:	d0c9      	beq.n	801b2f6 <__sflush_r+0x1a>
 801b362:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b366:	4299      	cmp	r1, r3
 801b368:	d002      	beq.n	801b370 <__sflush_r+0x94>
 801b36a:	4628      	mov	r0, r5
 801b36c:	f7ff face 	bl	801a90c <_free_r>
 801b370:	2000      	movs	r0, #0
 801b372:	6360      	str	r0, [r4, #52]	; 0x34
 801b374:	e7c0      	b.n	801b2f8 <__sflush_r+0x1c>
 801b376:	2301      	movs	r3, #1
 801b378:	4628      	mov	r0, r5
 801b37a:	47b0      	blx	r6
 801b37c:	1c41      	adds	r1, r0, #1
 801b37e:	d1c8      	bne.n	801b312 <__sflush_r+0x36>
 801b380:	682b      	ldr	r3, [r5, #0]
 801b382:	2b00      	cmp	r3, #0
 801b384:	d0c5      	beq.n	801b312 <__sflush_r+0x36>
 801b386:	2b1d      	cmp	r3, #29
 801b388:	d001      	beq.n	801b38e <__sflush_r+0xb2>
 801b38a:	2b16      	cmp	r3, #22
 801b38c:	d101      	bne.n	801b392 <__sflush_r+0xb6>
 801b38e:	602f      	str	r7, [r5, #0]
 801b390:	e7b1      	b.n	801b2f6 <__sflush_r+0x1a>
 801b392:	89a3      	ldrh	r3, [r4, #12]
 801b394:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b398:	81a3      	strh	r3, [r4, #12]
 801b39a:	e7ad      	b.n	801b2f8 <__sflush_r+0x1c>
 801b39c:	690f      	ldr	r7, [r1, #16]
 801b39e:	2f00      	cmp	r7, #0
 801b3a0:	d0a9      	beq.n	801b2f6 <__sflush_r+0x1a>
 801b3a2:	0793      	lsls	r3, r2, #30
 801b3a4:	680e      	ldr	r6, [r1, #0]
 801b3a6:	bf08      	it	eq
 801b3a8:	694b      	ldreq	r3, [r1, #20]
 801b3aa:	600f      	str	r7, [r1, #0]
 801b3ac:	bf18      	it	ne
 801b3ae:	2300      	movne	r3, #0
 801b3b0:	eba6 0807 	sub.w	r8, r6, r7
 801b3b4:	608b      	str	r3, [r1, #8]
 801b3b6:	f1b8 0f00 	cmp.w	r8, #0
 801b3ba:	dd9c      	ble.n	801b2f6 <__sflush_r+0x1a>
 801b3bc:	4643      	mov	r3, r8
 801b3be:	463a      	mov	r2, r7
 801b3c0:	6a21      	ldr	r1, [r4, #32]
 801b3c2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801b3c4:	4628      	mov	r0, r5
 801b3c6:	47b0      	blx	r6
 801b3c8:	2800      	cmp	r0, #0
 801b3ca:	dc06      	bgt.n	801b3da <__sflush_r+0xfe>
 801b3cc:	89a3      	ldrh	r3, [r4, #12]
 801b3ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b3d2:	81a3      	strh	r3, [r4, #12]
 801b3d4:	f04f 30ff 	mov.w	r0, #4294967295
 801b3d8:	e78e      	b.n	801b2f8 <__sflush_r+0x1c>
 801b3da:	4407      	add	r7, r0
 801b3dc:	eba8 0800 	sub.w	r8, r8, r0
 801b3e0:	e7e9      	b.n	801b3b6 <__sflush_r+0xda>
 801b3e2:	bf00      	nop
 801b3e4:	20400001 	.word	0x20400001

0801b3e8 <_fflush_r>:
 801b3e8:	b538      	push	{r3, r4, r5, lr}
 801b3ea:	690b      	ldr	r3, [r1, #16]
 801b3ec:	4605      	mov	r5, r0
 801b3ee:	460c      	mov	r4, r1
 801b3f0:	b1db      	cbz	r3, 801b42a <_fflush_r+0x42>
 801b3f2:	b118      	cbz	r0, 801b3fc <_fflush_r+0x14>
 801b3f4:	6983      	ldr	r3, [r0, #24]
 801b3f6:	b90b      	cbnz	r3, 801b3fc <_fflush_r+0x14>
 801b3f8:	f000 f860 	bl	801b4bc <__sinit>
 801b3fc:	4b0c      	ldr	r3, [pc, #48]	; (801b430 <_fflush_r+0x48>)
 801b3fe:	429c      	cmp	r4, r3
 801b400:	d109      	bne.n	801b416 <_fflush_r+0x2e>
 801b402:	686c      	ldr	r4, [r5, #4]
 801b404:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b408:	b17b      	cbz	r3, 801b42a <_fflush_r+0x42>
 801b40a:	4621      	mov	r1, r4
 801b40c:	4628      	mov	r0, r5
 801b40e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b412:	f7ff bf63 	b.w	801b2dc <__sflush_r>
 801b416:	4b07      	ldr	r3, [pc, #28]	; (801b434 <_fflush_r+0x4c>)
 801b418:	429c      	cmp	r4, r3
 801b41a:	d101      	bne.n	801b420 <_fflush_r+0x38>
 801b41c:	68ac      	ldr	r4, [r5, #8]
 801b41e:	e7f1      	b.n	801b404 <_fflush_r+0x1c>
 801b420:	4b05      	ldr	r3, [pc, #20]	; (801b438 <_fflush_r+0x50>)
 801b422:	429c      	cmp	r4, r3
 801b424:	bf08      	it	eq
 801b426:	68ec      	ldreq	r4, [r5, #12]
 801b428:	e7ec      	b.n	801b404 <_fflush_r+0x1c>
 801b42a:	2000      	movs	r0, #0
 801b42c:	bd38      	pop	{r3, r4, r5, pc}
 801b42e:	bf00      	nop
 801b430:	0801f348 	.word	0x0801f348
 801b434:	0801f368 	.word	0x0801f368
 801b438:	0801f328 	.word	0x0801f328

0801b43c <std>:
 801b43c:	2300      	movs	r3, #0
 801b43e:	b510      	push	{r4, lr}
 801b440:	4604      	mov	r4, r0
 801b442:	e9c0 3300 	strd	r3, r3, [r0]
 801b446:	6083      	str	r3, [r0, #8]
 801b448:	8181      	strh	r1, [r0, #12]
 801b44a:	6643      	str	r3, [r0, #100]	; 0x64
 801b44c:	81c2      	strh	r2, [r0, #14]
 801b44e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801b452:	6183      	str	r3, [r0, #24]
 801b454:	4619      	mov	r1, r3
 801b456:	2208      	movs	r2, #8
 801b458:	305c      	adds	r0, #92	; 0x5c
 801b45a:	f7ff fa4e 	bl	801a8fa <memset>
 801b45e:	4b05      	ldr	r3, [pc, #20]	; (801b474 <std+0x38>)
 801b460:	6263      	str	r3, [r4, #36]	; 0x24
 801b462:	4b05      	ldr	r3, [pc, #20]	; (801b478 <std+0x3c>)
 801b464:	62a3      	str	r3, [r4, #40]	; 0x28
 801b466:	4b05      	ldr	r3, [pc, #20]	; (801b47c <std+0x40>)
 801b468:	62e3      	str	r3, [r4, #44]	; 0x2c
 801b46a:	4b05      	ldr	r3, [pc, #20]	; (801b480 <std+0x44>)
 801b46c:	6224      	str	r4, [r4, #32]
 801b46e:	6323      	str	r3, [r4, #48]	; 0x30
 801b470:	bd10      	pop	{r4, pc}
 801b472:	bf00      	nop
 801b474:	0801b69d 	.word	0x0801b69d
 801b478:	0801b6bf 	.word	0x0801b6bf
 801b47c:	0801b6f7 	.word	0x0801b6f7
 801b480:	0801b71b 	.word	0x0801b71b

0801b484 <_cleanup_r>:
 801b484:	4901      	ldr	r1, [pc, #4]	; (801b48c <_cleanup_r+0x8>)
 801b486:	f000 b885 	b.w	801b594 <_fwalk_reent>
 801b48a:	bf00      	nop
 801b48c:	0801b3e9 	.word	0x0801b3e9

0801b490 <__sfmoreglue>:
 801b490:	b570      	push	{r4, r5, r6, lr}
 801b492:	1e4a      	subs	r2, r1, #1
 801b494:	2568      	movs	r5, #104	; 0x68
 801b496:	4355      	muls	r5, r2
 801b498:	460e      	mov	r6, r1
 801b49a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801b49e:	f7ff fa83 	bl	801a9a8 <_malloc_r>
 801b4a2:	4604      	mov	r4, r0
 801b4a4:	b140      	cbz	r0, 801b4b8 <__sfmoreglue+0x28>
 801b4a6:	2100      	movs	r1, #0
 801b4a8:	e9c0 1600 	strd	r1, r6, [r0]
 801b4ac:	300c      	adds	r0, #12
 801b4ae:	60a0      	str	r0, [r4, #8]
 801b4b0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801b4b4:	f7ff fa21 	bl	801a8fa <memset>
 801b4b8:	4620      	mov	r0, r4
 801b4ba:	bd70      	pop	{r4, r5, r6, pc}

0801b4bc <__sinit>:
 801b4bc:	6983      	ldr	r3, [r0, #24]
 801b4be:	b510      	push	{r4, lr}
 801b4c0:	4604      	mov	r4, r0
 801b4c2:	bb33      	cbnz	r3, 801b512 <__sinit+0x56>
 801b4c4:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801b4c8:	6503      	str	r3, [r0, #80]	; 0x50
 801b4ca:	4b12      	ldr	r3, [pc, #72]	; (801b514 <__sinit+0x58>)
 801b4cc:	4a12      	ldr	r2, [pc, #72]	; (801b518 <__sinit+0x5c>)
 801b4ce:	681b      	ldr	r3, [r3, #0]
 801b4d0:	6282      	str	r2, [r0, #40]	; 0x28
 801b4d2:	4298      	cmp	r0, r3
 801b4d4:	bf04      	itt	eq
 801b4d6:	2301      	moveq	r3, #1
 801b4d8:	6183      	streq	r3, [r0, #24]
 801b4da:	f000 f81f 	bl	801b51c <__sfp>
 801b4de:	6060      	str	r0, [r4, #4]
 801b4e0:	4620      	mov	r0, r4
 801b4e2:	f000 f81b 	bl	801b51c <__sfp>
 801b4e6:	60a0      	str	r0, [r4, #8]
 801b4e8:	4620      	mov	r0, r4
 801b4ea:	f000 f817 	bl	801b51c <__sfp>
 801b4ee:	2200      	movs	r2, #0
 801b4f0:	60e0      	str	r0, [r4, #12]
 801b4f2:	2104      	movs	r1, #4
 801b4f4:	6860      	ldr	r0, [r4, #4]
 801b4f6:	f7ff ffa1 	bl	801b43c <std>
 801b4fa:	2201      	movs	r2, #1
 801b4fc:	2109      	movs	r1, #9
 801b4fe:	68a0      	ldr	r0, [r4, #8]
 801b500:	f7ff ff9c 	bl	801b43c <std>
 801b504:	2202      	movs	r2, #2
 801b506:	2112      	movs	r1, #18
 801b508:	68e0      	ldr	r0, [r4, #12]
 801b50a:	f7ff ff97 	bl	801b43c <std>
 801b50e:	2301      	movs	r3, #1
 801b510:	61a3      	str	r3, [r4, #24]
 801b512:	bd10      	pop	{r4, pc}
 801b514:	0801f2ec 	.word	0x0801f2ec
 801b518:	0801b485 	.word	0x0801b485

0801b51c <__sfp>:
 801b51c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b51e:	4b1b      	ldr	r3, [pc, #108]	; (801b58c <__sfp+0x70>)
 801b520:	681e      	ldr	r6, [r3, #0]
 801b522:	69b3      	ldr	r3, [r6, #24]
 801b524:	4607      	mov	r7, r0
 801b526:	b913      	cbnz	r3, 801b52e <__sfp+0x12>
 801b528:	4630      	mov	r0, r6
 801b52a:	f7ff ffc7 	bl	801b4bc <__sinit>
 801b52e:	3648      	adds	r6, #72	; 0x48
 801b530:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801b534:	3b01      	subs	r3, #1
 801b536:	d503      	bpl.n	801b540 <__sfp+0x24>
 801b538:	6833      	ldr	r3, [r6, #0]
 801b53a:	b133      	cbz	r3, 801b54a <__sfp+0x2e>
 801b53c:	6836      	ldr	r6, [r6, #0]
 801b53e:	e7f7      	b.n	801b530 <__sfp+0x14>
 801b540:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801b544:	b16d      	cbz	r5, 801b562 <__sfp+0x46>
 801b546:	3468      	adds	r4, #104	; 0x68
 801b548:	e7f4      	b.n	801b534 <__sfp+0x18>
 801b54a:	2104      	movs	r1, #4
 801b54c:	4638      	mov	r0, r7
 801b54e:	f7ff ff9f 	bl	801b490 <__sfmoreglue>
 801b552:	6030      	str	r0, [r6, #0]
 801b554:	2800      	cmp	r0, #0
 801b556:	d1f1      	bne.n	801b53c <__sfp+0x20>
 801b558:	230c      	movs	r3, #12
 801b55a:	603b      	str	r3, [r7, #0]
 801b55c:	4604      	mov	r4, r0
 801b55e:	4620      	mov	r0, r4
 801b560:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b562:	4b0b      	ldr	r3, [pc, #44]	; (801b590 <__sfp+0x74>)
 801b564:	6665      	str	r5, [r4, #100]	; 0x64
 801b566:	e9c4 5500 	strd	r5, r5, [r4]
 801b56a:	60a5      	str	r5, [r4, #8]
 801b56c:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801b570:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801b574:	2208      	movs	r2, #8
 801b576:	4629      	mov	r1, r5
 801b578:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801b57c:	f7ff f9bd 	bl	801a8fa <memset>
 801b580:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801b584:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801b588:	e7e9      	b.n	801b55e <__sfp+0x42>
 801b58a:	bf00      	nop
 801b58c:	0801f2ec 	.word	0x0801f2ec
 801b590:	ffff0001 	.word	0xffff0001

0801b594 <_fwalk_reent>:
 801b594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b598:	4680      	mov	r8, r0
 801b59a:	4689      	mov	r9, r1
 801b59c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801b5a0:	2600      	movs	r6, #0
 801b5a2:	b914      	cbnz	r4, 801b5aa <_fwalk_reent+0x16>
 801b5a4:	4630      	mov	r0, r6
 801b5a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b5aa:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801b5ae:	3f01      	subs	r7, #1
 801b5b0:	d501      	bpl.n	801b5b6 <_fwalk_reent+0x22>
 801b5b2:	6824      	ldr	r4, [r4, #0]
 801b5b4:	e7f5      	b.n	801b5a2 <_fwalk_reent+0xe>
 801b5b6:	89ab      	ldrh	r3, [r5, #12]
 801b5b8:	2b01      	cmp	r3, #1
 801b5ba:	d907      	bls.n	801b5cc <_fwalk_reent+0x38>
 801b5bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801b5c0:	3301      	adds	r3, #1
 801b5c2:	d003      	beq.n	801b5cc <_fwalk_reent+0x38>
 801b5c4:	4629      	mov	r1, r5
 801b5c6:	4640      	mov	r0, r8
 801b5c8:	47c8      	blx	r9
 801b5ca:	4306      	orrs	r6, r0
 801b5cc:	3568      	adds	r5, #104	; 0x68
 801b5ce:	e7ee      	b.n	801b5ae <_fwalk_reent+0x1a>

0801b5d0 <__swhatbuf_r>:
 801b5d0:	b570      	push	{r4, r5, r6, lr}
 801b5d2:	460e      	mov	r6, r1
 801b5d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b5d8:	2900      	cmp	r1, #0
 801b5da:	b096      	sub	sp, #88	; 0x58
 801b5dc:	4614      	mov	r4, r2
 801b5de:	461d      	mov	r5, r3
 801b5e0:	da07      	bge.n	801b5f2 <__swhatbuf_r+0x22>
 801b5e2:	2300      	movs	r3, #0
 801b5e4:	602b      	str	r3, [r5, #0]
 801b5e6:	89b3      	ldrh	r3, [r6, #12]
 801b5e8:	061a      	lsls	r2, r3, #24
 801b5ea:	d410      	bmi.n	801b60e <__swhatbuf_r+0x3e>
 801b5ec:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801b5f0:	e00e      	b.n	801b610 <__swhatbuf_r+0x40>
 801b5f2:	466a      	mov	r2, sp
 801b5f4:	f000 f8b8 	bl	801b768 <_fstat_r>
 801b5f8:	2800      	cmp	r0, #0
 801b5fa:	dbf2      	blt.n	801b5e2 <__swhatbuf_r+0x12>
 801b5fc:	9a01      	ldr	r2, [sp, #4]
 801b5fe:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801b602:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801b606:	425a      	negs	r2, r3
 801b608:	415a      	adcs	r2, r3
 801b60a:	602a      	str	r2, [r5, #0]
 801b60c:	e7ee      	b.n	801b5ec <__swhatbuf_r+0x1c>
 801b60e:	2340      	movs	r3, #64	; 0x40
 801b610:	2000      	movs	r0, #0
 801b612:	6023      	str	r3, [r4, #0]
 801b614:	b016      	add	sp, #88	; 0x58
 801b616:	bd70      	pop	{r4, r5, r6, pc}

0801b618 <__smakebuf_r>:
 801b618:	898b      	ldrh	r3, [r1, #12]
 801b61a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801b61c:	079d      	lsls	r5, r3, #30
 801b61e:	4606      	mov	r6, r0
 801b620:	460c      	mov	r4, r1
 801b622:	d507      	bpl.n	801b634 <__smakebuf_r+0x1c>
 801b624:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801b628:	6023      	str	r3, [r4, #0]
 801b62a:	6123      	str	r3, [r4, #16]
 801b62c:	2301      	movs	r3, #1
 801b62e:	6163      	str	r3, [r4, #20]
 801b630:	b002      	add	sp, #8
 801b632:	bd70      	pop	{r4, r5, r6, pc}
 801b634:	ab01      	add	r3, sp, #4
 801b636:	466a      	mov	r2, sp
 801b638:	f7ff ffca 	bl	801b5d0 <__swhatbuf_r>
 801b63c:	9900      	ldr	r1, [sp, #0]
 801b63e:	4605      	mov	r5, r0
 801b640:	4630      	mov	r0, r6
 801b642:	f7ff f9b1 	bl	801a9a8 <_malloc_r>
 801b646:	b948      	cbnz	r0, 801b65c <__smakebuf_r+0x44>
 801b648:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b64c:	059a      	lsls	r2, r3, #22
 801b64e:	d4ef      	bmi.n	801b630 <__smakebuf_r+0x18>
 801b650:	f023 0303 	bic.w	r3, r3, #3
 801b654:	f043 0302 	orr.w	r3, r3, #2
 801b658:	81a3      	strh	r3, [r4, #12]
 801b65a:	e7e3      	b.n	801b624 <__smakebuf_r+0xc>
 801b65c:	4b0d      	ldr	r3, [pc, #52]	; (801b694 <__smakebuf_r+0x7c>)
 801b65e:	62b3      	str	r3, [r6, #40]	; 0x28
 801b660:	89a3      	ldrh	r3, [r4, #12]
 801b662:	6020      	str	r0, [r4, #0]
 801b664:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801b668:	81a3      	strh	r3, [r4, #12]
 801b66a:	9b00      	ldr	r3, [sp, #0]
 801b66c:	6163      	str	r3, [r4, #20]
 801b66e:	9b01      	ldr	r3, [sp, #4]
 801b670:	6120      	str	r0, [r4, #16]
 801b672:	b15b      	cbz	r3, 801b68c <__smakebuf_r+0x74>
 801b674:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b678:	4630      	mov	r0, r6
 801b67a:	f000 f887 	bl	801b78c <_isatty_r>
 801b67e:	b128      	cbz	r0, 801b68c <__smakebuf_r+0x74>
 801b680:	89a3      	ldrh	r3, [r4, #12]
 801b682:	f023 0303 	bic.w	r3, r3, #3
 801b686:	f043 0301 	orr.w	r3, r3, #1
 801b68a:	81a3      	strh	r3, [r4, #12]
 801b68c:	89a3      	ldrh	r3, [r4, #12]
 801b68e:	431d      	orrs	r5, r3
 801b690:	81a5      	strh	r5, [r4, #12]
 801b692:	e7cd      	b.n	801b630 <__smakebuf_r+0x18>
 801b694:	0801b485 	.word	0x0801b485

0801b698 <__malloc_lock>:
 801b698:	4770      	bx	lr

0801b69a <__malloc_unlock>:
 801b69a:	4770      	bx	lr

0801b69c <__sread>:
 801b69c:	b510      	push	{r4, lr}
 801b69e:	460c      	mov	r4, r1
 801b6a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b6a4:	f000 f894 	bl	801b7d0 <_read_r>
 801b6a8:	2800      	cmp	r0, #0
 801b6aa:	bfab      	itete	ge
 801b6ac:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801b6ae:	89a3      	ldrhlt	r3, [r4, #12]
 801b6b0:	181b      	addge	r3, r3, r0
 801b6b2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801b6b6:	bfac      	ite	ge
 801b6b8:	6563      	strge	r3, [r4, #84]	; 0x54
 801b6ba:	81a3      	strhlt	r3, [r4, #12]
 801b6bc:	bd10      	pop	{r4, pc}

0801b6be <__swrite>:
 801b6be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b6c2:	461f      	mov	r7, r3
 801b6c4:	898b      	ldrh	r3, [r1, #12]
 801b6c6:	05db      	lsls	r3, r3, #23
 801b6c8:	4605      	mov	r5, r0
 801b6ca:	460c      	mov	r4, r1
 801b6cc:	4616      	mov	r6, r2
 801b6ce:	d505      	bpl.n	801b6dc <__swrite+0x1e>
 801b6d0:	2302      	movs	r3, #2
 801b6d2:	2200      	movs	r2, #0
 801b6d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b6d8:	f000 f868 	bl	801b7ac <_lseek_r>
 801b6dc:	89a3      	ldrh	r3, [r4, #12]
 801b6de:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b6e2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801b6e6:	81a3      	strh	r3, [r4, #12]
 801b6e8:	4632      	mov	r2, r6
 801b6ea:	463b      	mov	r3, r7
 801b6ec:	4628      	mov	r0, r5
 801b6ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801b6f2:	f000 b817 	b.w	801b724 <_write_r>

0801b6f6 <__sseek>:
 801b6f6:	b510      	push	{r4, lr}
 801b6f8:	460c      	mov	r4, r1
 801b6fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b6fe:	f000 f855 	bl	801b7ac <_lseek_r>
 801b702:	1c43      	adds	r3, r0, #1
 801b704:	89a3      	ldrh	r3, [r4, #12]
 801b706:	bf15      	itete	ne
 801b708:	6560      	strne	r0, [r4, #84]	; 0x54
 801b70a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801b70e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801b712:	81a3      	strheq	r3, [r4, #12]
 801b714:	bf18      	it	ne
 801b716:	81a3      	strhne	r3, [r4, #12]
 801b718:	bd10      	pop	{r4, pc}

0801b71a <__sclose>:
 801b71a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b71e:	f000 b813 	b.w	801b748 <_close_r>
	...

0801b724 <_write_r>:
 801b724:	b538      	push	{r3, r4, r5, lr}
 801b726:	4c07      	ldr	r4, [pc, #28]	; (801b744 <_write_r+0x20>)
 801b728:	4605      	mov	r5, r0
 801b72a:	4608      	mov	r0, r1
 801b72c:	4611      	mov	r1, r2
 801b72e:	2200      	movs	r2, #0
 801b730:	6022      	str	r2, [r4, #0]
 801b732:	461a      	mov	r2, r3
 801b734:	f7e7 f916 	bl	8002964 <_write>
 801b738:	1c43      	adds	r3, r0, #1
 801b73a:	d102      	bne.n	801b742 <_write_r+0x1e>
 801b73c:	6823      	ldr	r3, [r4, #0]
 801b73e:	b103      	cbz	r3, 801b742 <_write_r+0x1e>
 801b740:	602b      	str	r3, [r5, #0]
 801b742:	bd38      	pop	{r3, r4, r5, pc}
 801b744:	20012bb0 	.word	0x20012bb0

0801b748 <_close_r>:
 801b748:	b538      	push	{r3, r4, r5, lr}
 801b74a:	4c06      	ldr	r4, [pc, #24]	; (801b764 <_close_r+0x1c>)
 801b74c:	2300      	movs	r3, #0
 801b74e:	4605      	mov	r5, r0
 801b750:	4608      	mov	r0, r1
 801b752:	6023      	str	r3, [r4, #0]
 801b754:	f7e7 f914 	bl	8002980 <_close>
 801b758:	1c43      	adds	r3, r0, #1
 801b75a:	d102      	bne.n	801b762 <_close_r+0x1a>
 801b75c:	6823      	ldr	r3, [r4, #0]
 801b75e:	b103      	cbz	r3, 801b762 <_close_r+0x1a>
 801b760:	602b      	str	r3, [r5, #0]
 801b762:	bd38      	pop	{r3, r4, r5, pc}
 801b764:	20012bb0 	.word	0x20012bb0

0801b768 <_fstat_r>:
 801b768:	b538      	push	{r3, r4, r5, lr}
 801b76a:	4c07      	ldr	r4, [pc, #28]	; (801b788 <_fstat_r+0x20>)
 801b76c:	2300      	movs	r3, #0
 801b76e:	4605      	mov	r5, r0
 801b770:	4608      	mov	r0, r1
 801b772:	4611      	mov	r1, r2
 801b774:	6023      	str	r3, [r4, #0]
 801b776:	f7e7 f906 	bl	8002986 <_fstat>
 801b77a:	1c43      	adds	r3, r0, #1
 801b77c:	d102      	bne.n	801b784 <_fstat_r+0x1c>
 801b77e:	6823      	ldr	r3, [r4, #0]
 801b780:	b103      	cbz	r3, 801b784 <_fstat_r+0x1c>
 801b782:	602b      	str	r3, [r5, #0]
 801b784:	bd38      	pop	{r3, r4, r5, pc}
 801b786:	bf00      	nop
 801b788:	20012bb0 	.word	0x20012bb0

0801b78c <_isatty_r>:
 801b78c:	b538      	push	{r3, r4, r5, lr}
 801b78e:	4c06      	ldr	r4, [pc, #24]	; (801b7a8 <_isatty_r+0x1c>)
 801b790:	2300      	movs	r3, #0
 801b792:	4605      	mov	r5, r0
 801b794:	4608      	mov	r0, r1
 801b796:	6023      	str	r3, [r4, #0]
 801b798:	f7e7 f8fa 	bl	8002990 <_isatty>
 801b79c:	1c43      	adds	r3, r0, #1
 801b79e:	d102      	bne.n	801b7a6 <_isatty_r+0x1a>
 801b7a0:	6823      	ldr	r3, [r4, #0]
 801b7a2:	b103      	cbz	r3, 801b7a6 <_isatty_r+0x1a>
 801b7a4:	602b      	str	r3, [r5, #0]
 801b7a6:	bd38      	pop	{r3, r4, r5, pc}
 801b7a8:	20012bb0 	.word	0x20012bb0

0801b7ac <_lseek_r>:
 801b7ac:	b538      	push	{r3, r4, r5, lr}
 801b7ae:	4c07      	ldr	r4, [pc, #28]	; (801b7cc <_lseek_r+0x20>)
 801b7b0:	4605      	mov	r5, r0
 801b7b2:	4608      	mov	r0, r1
 801b7b4:	4611      	mov	r1, r2
 801b7b6:	2200      	movs	r2, #0
 801b7b8:	6022      	str	r2, [r4, #0]
 801b7ba:	461a      	mov	r2, r3
 801b7bc:	f7e7 f8ea 	bl	8002994 <_lseek>
 801b7c0:	1c43      	adds	r3, r0, #1
 801b7c2:	d102      	bne.n	801b7ca <_lseek_r+0x1e>
 801b7c4:	6823      	ldr	r3, [r4, #0]
 801b7c6:	b103      	cbz	r3, 801b7ca <_lseek_r+0x1e>
 801b7c8:	602b      	str	r3, [r5, #0]
 801b7ca:	bd38      	pop	{r3, r4, r5, pc}
 801b7cc:	20012bb0 	.word	0x20012bb0

0801b7d0 <_read_r>:
 801b7d0:	b538      	push	{r3, r4, r5, lr}
 801b7d2:	4c07      	ldr	r4, [pc, #28]	; (801b7f0 <_read_r+0x20>)
 801b7d4:	4605      	mov	r5, r0
 801b7d6:	4608      	mov	r0, r1
 801b7d8:	4611      	mov	r1, r2
 801b7da:	2200      	movs	r2, #0
 801b7dc:	6022      	str	r2, [r4, #0]
 801b7de:	461a      	mov	r2, r3
 801b7e0:	f7e7 f8b2 	bl	8002948 <_read>
 801b7e4:	1c43      	adds	r3, r0, #1
 801b7e6:	d102      	bne.n	801b7ee <_read_r+0x1e>
 801b7e8:	6823      	ldr	r3, [r4, #0]
 801b7ea:	b103      	cbz	r3, 801b7ee <_read_r+0x1e>
 801b7ec:	602b      	str	r3, [r5, #0]
 801b7ee:	bd38      	pop	{r3, r4, r5, pc}
 801b7f0:	20012bb0 	.word	0x20012bb0

0801b7f4 <_init>:
 801b7f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b7f6:	bf00      	nop
 801b7f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b7fa:	bc08      	pop	{r3}
 801b7fc:	469e      	mov	lr, r3
 801b7fe:	4770      	bx	lr

0801b800 <_fini>:
 801b800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b802:	bf00      	nop
 801b804:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b806:	bc08      	pop	{r3}
 801b808:	469e      	mov	lr, r3
 801b80a:	4770      	bx	lr
