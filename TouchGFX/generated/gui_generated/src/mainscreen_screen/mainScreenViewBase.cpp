/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/mainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

mainScreenViewBase::mainScreenViewBase() :
    buttonCallback(this, &mainScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    backgroundImage.setXY(0, 0);
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));

    manipulatorControlToggleButton.setXY(95, 157);
    manipulatorControlToggleButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    manipulatorControlToggleButton.setAction(buttonCallback);

    titleText.setXY(23, 15);
    titleText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    titleText.setLinespacing(0);
    titleText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));

    manipulatorText.setXY(100, 101);
    manipulatorText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    manipulatorText.setLinespacing(0);
    manipulatorText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    yAxisSlider.setXY(23, 71);
    yAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    yAxisSlider.setupVerticalSlider(7, 3, 0, 0, 125);
    yAxisSlider.setValueRange(0, 100);
    yAxisSlider.setValue(50);
    yAxisSlider.setNewValueCallback(sliderValueChangedCallback);

    xAxisSlider.setXY(31, 266);
    xAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    xAxisSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    xAxisSlider.setValueRange(0, 100);
    xAxisSlider.setValue(50);
    xAxisSlider.setNewValueCallback(sliderValueChangedCallback);

    add(__background);
    add(backgroundImage);
    add(manipulatorControlToggleButton);
    add(titleText);
    add(manipulatorText);
    add(yAxisSlider);
    add(xAxisSlider);
}

void mainScreenViewBase::setupScreen()
{

}

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &manipulatorControlToggleButton)
    {
        //ManipulatorControlToggleButton_Clicked
        //When manipulatorControlToggleButton clicked call virtual function
        //Call ManipulatorControlToggleButton_Clicked
        ManipulatorControlToggleButton_Clicked();
    }
}

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &yAxisSlider)
    {
        //YAxisSliderValue_Changed
        //When yAxisSlider value changed call virtual function
        //Call YAxisSliderValue_Changed
        YAxisSliderValue_Changed(value);
    }
    else if (&src == &xAxisSlider)
    {
        //XAxisSliderValue_Changed
        //When xAxisSlider value changed call virtual function
        //Call XAxisSliderValue_Changed
        XAxisSliderValue_Changed(value);
    }
}
