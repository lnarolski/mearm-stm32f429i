/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/mainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

mainScreenViewBase::mainScreenViewBase() :
    buttonCallback(this, &mainScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    backgroundImage.setXY(0, 0);
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));

    manipulatorControlToggleButton.setXY(72, 193);
    manipulatorControlToggleButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_SMALL_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_SMALL_BUTTON_ON_ID));
    manipulatorControlToggleButton.setAction(buttonCallback);

    titleText.setXY(23, 15);
    titleText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    titleText.setLinespacing(0);
    titleText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));

    manipulatorText.setXY(61, 128);
    manipulatorText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    manipulatorText.setLinespacing(0);
    manipulatorText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    yAxisSlider_L.setXY(23, 52);
    yAxisSlider_L.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    yAxisSlider_L.setupVerticalSlider(7, 3, 0, 0, 125);
    yAxisSlider_L.setValueRange(0, 100);
    yAxisSlider_L.setValue(0);
    yAxisSlider_L.setNewValueCallback(sliderValueChangedCallback);

    xAxisSlider.setXY(31, 261);
    xAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
    xAxisSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
    xAxisSlider.setValueRange(0, 100);
    xAxisSlider.setValue(50);
    xAxisSlider.setNewValueCallback(sliderValueChangedCallback);

    yAxisSlider_R.setXY(183, 52);
    yAxisSlider_R.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    yAxisSlider_R.setupVerticalSlider(7, 3, 0, 0, 125);
    yAxisSlider_R.setValueRange(0, 100);
    yAxisSlider_R.setValue(0);
    yAxisSlider_R.setNewValueCallback(sliderValueChangedCallback);

    leftText.setXY(21, 239);
    leftText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    leftText.setLinespacing(0);
    leftText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));

    rightText.setXY(174, 239);
    rightText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    rightText.setLinespacing(0);
    rightText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));

    baseText.setXY(96, 295);
    baseText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    baseText.setLinespacing(0);
    baseText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));

    sequenceScreenButton.setXY(90, 52);
    sequenceScreenButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_SEQUENCE_ICON_32_ID), touchgfx::Bitmap(BITMAP_SEQUENCE_ICON_32_ID));
    sequenceScreenButton.setIconXY(14, 14);
    sequenceScreenButton.setAction(buttonCallback);

    add(__background);
    add(backgroundImage);
    add(manipulatorControlToggleButton);
    add(titleText);
    add(manipulatorText);
    add(yAxisSlider_L);
    add(xAxisSlider);
    add(yAxisSlider_R);
    add(leftText);
    add(rightText);
    add(baseText);
    add(sequenceScreenButton);
}

void mainScreenViewBase::setupScreen()
{

}

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &manipulatorControlToggleButton)
    {
        //ManipulatorControlToggleButton_Clicked
        //When manipulatorControlToggleButton clicked call virtual function
        //Call ManipulatorControlToggleButton_Clicked
        ManipulatorControlToggleButton_Clicked();
    }
    else if (&src == &sequenceScreenButton)
    {
        //sequenceScreenButton_Clicked
        //When sequenceScreenButton clicked change screen to sequenceScreen
        //Go to sequenceScreen with screen transition towards East
        application().gotosequenceScreenScreenSlideTransitionEast();
    }
}

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &yAxisSlider_L)
    {
        //YAxisSlider_L_Value_Changed
        //When yAxisSlider_L value changed call virtual function
        //Call YAxisSlider_L_Value_Changed
        YAxisSlider_L_Value_Changed(value);
    }
    else if (&src == &xAxisSlider)
    {
        //XAxisSliderValue_Changed
        //When xAxisSlider value changed call virtual function
        //Call XAxisSliderValue_Changed
        XAxisSliderValue_Changed(value);
    }
    else if (&src == &yAxisSlider_R)
    {
        //YAxisSlider_R_Value_Changed
        //When yAxisSlider_R value changed call virtual function
        //Call YAxisSlider_R_Value_Changed
        YAxisSlider_R_Value_Changed(value);
    }
}
