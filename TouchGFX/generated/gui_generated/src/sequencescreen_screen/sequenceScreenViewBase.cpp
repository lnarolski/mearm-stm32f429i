/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/sequencescreen_screen/sequenceScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

sequenceScreenViewBase::sequenceScreenViewBase() :
    buttonCallback(this, &sequenceScreenViewBase::buttonCallbackHandler),
    updateItemCallback(this, &sequenceScreenViewBase::updateItemCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    backgroundImage.setXY(0, 0);
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));

    backButton.setXY(0, 260);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    backButton.setIconXY(22, 15);
    backButton.setAction(buttonCallback);

    deletePositionButton.setXY(180, 0);
    deletePositionButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
    deletePositionButton.setIconXY(16, 16);
    deletePositionButton.setAction(buttonCallback);

    addNewPositionButton.setXY(90, 260);
    addNewPositionButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
    addNewPositionButton.setIconXY(16, 16);
    addNewPositionButton.setAction(buttonCallback);

    playSequenceButton.setXY(180, 260);
    playSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID));
    playSequenceButton.setIconXY(20, 15);
    playSequenceButton.setAction(buttonCallback);

    saveSequenceButton.setXY(0, 0);
    saveSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DONE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DONE_32_ID));
    saveSequenceButton.setIconXY(15, 15);
    saveSequenceButton.setAction(buttonCallback);

    infoTextArea.setXY(95, 18);
    infoTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    infoTextArea.setLinespacing(0);
    infoTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));

    positionsList.setPosition(0, 60, 240, 200);
    positionsList.setHorizontal(false);
    positionsList.setCircular(false);
    positionsList.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    positionsList.setSwipeAcceleration(10);
    positionsList.setDragAcceleration(10);
    positionsList.setNumberOfItems(2);
    positionsList.setPadding(0, 0);
    positionsList.setSnapping(true);
    positionsList.setDrawableSize(41, 0);
    positionsList.setDrawables(positionsListListItems, updateItemCallback);

    add(__background);
    add(backgroundImage);
    add(backButton);
    add(deletePositionButton);
    add(addNewPositionButton);
    add(playSequenceButton);
    add(saveSequenceButton);
    add(infoTextArea);
    add(positionsList);
}

void sequenceScreenViewBase::setupScreen()
{
    positionsList.initialize();
    for (int i = 0; i < positionsListListItems.getNumberOfDrawables(); i++)
    {
        positionsListListItems[i].initialize();
    }
}

void sequenceScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backButton)
    {
        //BackButton_Clicked
        //When backButton clicked change screen to mainScreen
        //Go to mainScreen with screen transition towards West
        application().gotomainScreenScreenSlideTransitionWest();
    }
    else if (&src == &deletePositionButton)
    {
        //DeletePositionButton_Clicked
        //When deletePositionButton clicked call virtual function
        //Call DeletePositionButton_Clicked
        DeletePositionButton_Clicked();
    }
    else if (&src == &addNewPositionButton)
    {
        //AddNewPositionButton_Clicked
        //When addNewPositionButton clicked call virtual function
        //Call AddNewPositionButton_Clicked
        AddNewPositionButton_Clicked();
    }
    else if (&src == &playSequenceButton)
    {
        //PlaySequenceButton_Clicked
        //When playSequenceButton clicked call virtual function
        //Call PlaySequenceButton_Clicked
        PlaySequenceButton_Clicked();
    }
    else if (&src == &saveSequenceButton)
    {
        //SaveSequenceButton_Clicked
        //When saveSequenceButton clicked call virtual function
        //Call SaveSequenceButton_Clicked
        SaveSequenceButton_Clicked();
    }
}

void sequenceScreenViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &positionsListListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        positionContainer* cc = (positionContainer*)d;
        positionsListUpdateItem(*cc, itemIndex);
    }
}
