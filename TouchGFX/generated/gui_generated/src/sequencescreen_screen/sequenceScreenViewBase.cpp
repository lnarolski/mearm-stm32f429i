/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/sequencescreen_screen/sequenceScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

sequenceScreenViewBase::sequenceScreenViewBase() :
    buttonCallback(this, &sequenceScreenViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    backgroundImage.setXY(0, 0);
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));

    backButton.setXY(0, 260);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    backButton.setIconXY(22, 15);
    backButton.setAction(buttonCallback);

    deletePositionButton.setXY(180, 0);
    deletePositionButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
    deletePositionButton.setIconXY(16, 16);
    deletePositionButton.setAction(buttonCallback);

    addNewPositionButton.setXY(90, 260);
    addNewPositionButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
    addNewPositionButton.setIconXY(16, 16);
    addNewPositionButton.setAction(buttonCallback);

    playSequenceButton.setXY(180, 260);
    playSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_32_ID));
    playSequenceButton.setIconXY(20, 15);
    playSequenceButton.setAction(buttonCallback);

    saveSequenceButton.setXY(0, 0);
    saveSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_SAVE_ICON_32_ID), touchgfx::Bitmap(BITMAP_SAVE_ICON_32_ID));
    saveSequenceButton.setIconXY(14, 14);
    saveSequenceButton.setAction(buttonCallback);

    scrollableContainer.setPosition(0, 60, 240, 200);
    scrollableContainer.enableHorizontalScroll(false);
    scrollableContainer.setScrollbarsColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    positionsList.setDirection(touchgfx::SOUTH);
    positionsList.setPosition(-5, 0, 250, 250);
    scrollableContainer.add(positionsList);
    scrollableContainer.setScrollbarsPermanentlyVisible();
    scrollableContainer.setScrollbarsVisible(false);

    infoTextArea.setPosition(60, 0, 120, 60);
    infoTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    infoTextArea.setLinespacing(0);
    Unicode::snprintf(infoTextAreaBuffer, INFOTEXTAREA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID10).getText());
    infoTextArea.setWildcard(infoTextAreaBuffer);
    infoTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));

    stopSequenceButton.setXY(180, 260);
    stopSequenceButton.setVisible(false);
    stopSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_STOP_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_STOP_32_ID));
    stopSequenceButton.setIconXY(15, 15);
    stopSequenceButton.setAction(buttonCallback);

    changeSequenceSpeedButton.setXY(180, 0);
    changeSequenceSpeedButton.setVisible(false);
    changeSequenceSpeedButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
    changeSequenceSpeedButton.setIconXY(22, 15);
    changeSequenceSpeedButton.setAction(buttonCallback);

    pauseSequenceButton.setXY(90, 260);
    pauseSequenceButton.setVisible(false);
    pauseSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PAUSE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PAUSE_32_ID));
    pauseSequenceButton.setIconXY(18, 15);
    pauseSequenceButton.setAction(buttonCallback);

    resumeSequenceButton.setXY(90, 260);
    resumeSequenceButton.setVisible(false);
    resumeSequenceButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_GO_NEXT_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_GO_NEXT_32_ID));
    resumeSequenceButton.setIconXY(15, 16);
    resumeSequenceButton.setAction(buttonCallback);

    deleteAllModalWindow.setBackground(touchgfx::BitmapId(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID), 0, 0);
    deleteAllModalWindow.setShadeColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    deleteAllModalWindow.hide();

    boxWithBorderModalWindow.setPosition(15, 30, 210, 249);
    boxWithBorderModalWindow.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorderModalWindow.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(9, 137, 182));
    boxWithBorderModalWindow.setBorderSize(10);
    deleteAllModalWindow.add(boxWithBorderModalWindow);

    yesDeleteAllButton.setXY(143, 211);
    yesDeleteAllButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_TRASH_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_TRASH_32_ID));
    yesDeleteAllButton.setIconXY(18, 15);
    yesDeleteAllButton.setAction(buttonCallback);
    deleteAllModalWindow.add(yesDeleteAllButton);

    noDeleteAllButton.setXY(37, 211);
    noDeleteAllButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    noDeleteAllButton.setIconXY(22, 15);
    noDeleteAllButton.setAction(buttonCallback);
    deleteAllModalWindow.add(noDeleteAllButton);

    warningTextArea.setPosition(24, 96, 192, 102);
    warningTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    warningTextArea.setLinespacing(0);
    warningTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID11));
    deleteAllModalWindow.add(warningTextArea);

    warningImage.setXY(97, 47);
    warningImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_ICONS_ALERT_48_ID));
    deleteAllModalWindow.add(warningImage);

    add(__background);
    add(backgroundImage);
    add(backButton);
    add(deletePositionButton);
    add(addNewPositionButton);
    add(playSequenceButton);
    add(saveSequenceButton);
    add(scrollableContainer);
    add(infoTextArea);
    add(stopSequenceButton);
    add(changeSequenceSpeedButton);
    add(pauseSequenceButton);
    add(resumeSequenceButton);
    add(deleteAllModalWindow);
}

void sequenceScreenViewBase::setupScreen()
{

}

void sequenceScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backButton)
    {
        //BackButton_Clicked
        //When backButton clicked change screen to mainScreen
        //Go to mainScreen with screen transition towards West
        application().gotomainScreenScreenSlideTransitionWest();
    }
    else if (&src == &deletePositionButton)
    {
        //DeletePositionButton_Clicked
        //When deletePositionButton clicked call virtual function
        //Call DeletePositionButton_Clicked
        DeletePositionButton_Clicked();
    }
    else if (&src == &addNewPositionButton)
    {
        //AddNewPositionButton_Clicked
        //When addNewPositionButton clicked call virtual function
        //Call AddNewPositionButton_Clicked
        AddNewPositionButton_Clicked();
    }
    else if (&src == &playSequenceButton)
    {
        //PlaySequenceButton_Clicked
        //When playSequenceButton clicked call virtual function
        //Call PlaySequenceButton_Clicked
        PlaySequenceButton_Clicked();
    }
    else if (&src == &saveSequenceButton)
    {
        //SaveSequenceButton_Clicked
        //When saveSequenceButton clicked call virtual function
        //Call SaveSequenceButton_Clicked
        SaveSequenceButton_Clicked();
    }
    else if (&src == &stopSequenceButton)
    {
        //StopSequenceButton_Clicked
        //When stopSequenceButton clicked call virtual function
        //Call StopSequenceButton_Clicked
        StopSequenceButton_Clicked();
    }
    else if (&src == &changeSequenceSpeedButton)
    {
        //ChangeSequenceSpeedButton_Clicked
        //When changeSequenceSpeedButton clicked call virtual function
        //Call ChangeSequenceSpeedButton_Clicked
        ChangeSequenceSpeedButton_Clicked();
    }
    else if (&src == &pauseSequenceButton)
    {
        //PauseSequenceButton_Clicked
        //When pauseSequenceButton clicked call virtual function
        //Call PauseSequenceButton_Clicked
        PauseSequenceButton_Clicked();
    }
    else if (&src == &resumeSequenceButton)
    {
        //ResumeSequenceButton_Clicked
        //When resumeSequenceButton clicked call virtual function
        //Call ResumeSequenceButton_Clicked
        ResumeSequenceButton_Clicked();
    }
    else if (&src == &yesDeleteAllButton)
    {
        //YesDeleteAllButton_Clicked
        //When yesDeleteAllButton clicked call virtual function
        //Call YesDeleteAllButton_Clicked
        YesDeleteAllButton_Clicked();
    }
    else if (&src == &noDeleteAllButton)
    {
        //NoDeleteAllButton_Clicked
        //When noDeleteAllButton clicked hide deleteAllModalWindow
        //Hide deleteAllModalWindow
        deleteAllModalWindow.setVisible(false);
        deleteAllModalWindow.invalidate();
    }
}
