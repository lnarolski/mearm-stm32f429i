/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SEQUENCESCREENVIEWBASE_HPP
#define SEQUENCESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/sequencescreen_screen/sequenceScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/containers/ListLayout.hpp>

class sequenceScreenViewBase : public touchgfx::View<sequenceScreenPresenter>
{
public:
    sequenceScreenViewBase();
    virtual ~sequenceScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void SaveSequenceButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }

    virtual void PlaySequenceButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }

    virtual void AddNewPositionButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }

    virtual void DeletePositionButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image backgroundImage;
    touchgfx::ButtonWithIcon backButton;
    touchgfx::ButtonWithIcon deletePositionButton;
    touchgfx::ButtonWithIcon addNewPositionButton;
    touchgfx::ButtonWithIcon playSequenceButton;
    touchgfx::ButtonWithIcon saveSequenceButton;
    touchgfx::TextAreaWithOneWildcard infoTextArea;
    touchgfx::ScrollableContainer scrollableContainer;
    touchgfx::ListLayout positionsList;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<sequenceScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SEQUENCESCREENVIEWBASE_HPP
