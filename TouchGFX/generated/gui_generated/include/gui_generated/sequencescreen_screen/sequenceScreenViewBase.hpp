/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SEQUENCESCREENVIEWBASE_HPP
#define SEQUENCESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/sequencescreen_screen/sequenceScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/positionContainer.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class sequenceScreenViewBase : public touchgfx::View<sequenceScreenPresenter>
{
public:
    sequenceScreenViewBase();
    virtual ~sequenceScreenViewBase() {}
    virtual void setupScreen();

    virtual void positionsListUpdateItem(positionContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in sequenceScreen
    }

    /*
     * Virtual Action Handlers
     */
    virtual void SaveSequenceButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }

    virtual void PlaySequenceButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }

    virtual void AddNewPositionButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }

    virtual void DeletePositionButton_Clicked()
    {
        // Override and implement this function in sequenceScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image backgroundImage;
    touchgfx::ButtonWithIcon backButton;
    touchgfx::ButtonWithIcon deletePositionButton;
    touchgfx::ButtonWithIcon addNewPositionButton;
    touchgfx::ButtonWithIcon playSequenceButton;
    touchgfx::ButtonWithIcon saveSequenceButton;
    touchgfx::TextAreaWithOneWildcard infoTextArea;
    touchgfx::ClickListener< touchgfx::ScrollList > positionsList;
    touchgfx::DrawableListItems<positionContainer, 6> positionsListListItems;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<sequenceScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<sequenceScreenViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // SEQUENCESCREENVIEWBASE_HPP
